# Generated by stackage2nix 0.7.2 from "./stack.yaml"
{ nixpkgs ? import <nixpkgs> {} }:

let
  stackPackages =
    { pkgs, stdenv, callPackage }:

    self: {
      "stackage2nix" = callPackage
        ({ mkDerivation, aeson, base, bytestring, Cabal, cabal2nix
         , containers, deepseq, distribution-nixpkgs, exceptions, filepath
         , gitlib, gitlib-libgit2, hopenssl, inflections, language-nix, lens
         , network-uri, optparse-applicative, pretty, QuickCheck
         , stackage-curator, text, unordered-containers, yaml
         }:
         mkDerivation {
           pname = "stackage2nix";
           version = "0.7.2";
           src = pkgs.fetchgit {
             url = "https://github.com/typeable/stackage2nix.git";
             rev = "327867dc8384e740b72d82217ded0da5ea3b288c";
             sha256 = "1gc9nk5x7q3xnmm8jphs12ddc7mjgsnh5dkvnfxfyhw4245jk4jm";
           };
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base bytestring Cabal cabal2nix containers deepseq
             distribution-nixpkgs exceptions filepath gitlib gitlib-libgit2
             hopenssl inflections language-nix lens network-uri
             optparse-applicative pretty QuickCheck stackage-curator text
             unordered-containers yaml
           ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/typeable/stackage2nix#readme";
           description = "Convert Stack files into Nix build instructions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "yaml" = callPackage
        ({ mkDerivation, aeson, attoparsec, base, bytestring, conduit
         , containers, directory, filepath, resourcet, scientific
         , semigroups, template-haskell, text, transformers
         , unordered-containers, vector
         }:
         mkDerivation {
           pname = "yaml";
           version = "0.8.31.1";
           sha256 = "1ba1451917e6cb1df6081e2e14c2e4dcec6969b9b25a5d72db96942c3e6d8b53";
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson attoparsec base bytestring conduit containers directory
             filepath resourcet scientific semigroups template-haskell text
             transformers unordered-containers vector
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "http://github.com/snoyberg/yaml/";
           description = "Support for parsing and rendering YAML documents";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "stackage-curator" = callPackage
        ({ mkDerivation, aeson, amazonka, amazonka-core, amazonka-s3, async
         , base, blaze-html, bytestring, Cabal, classy-prelude-conduit
         , conduit, conduit-extra, containers, cryptonite
         , cryptonite-conduit, data-default-class, directory, exceptions
         , fetchgit, filepath, hashable, hpack, html-conduit, http-client
         , http-client-tls, http-conduit, lucid, memory, mime-types
         , mono-traversable, mtl, old-locale, optparse-applicative
         , optparse-simple, process, resourcet, safe, semigroups, stm, store
         , streaming-commons, syb, tar, temporary, text, time, transformers
         , unix-compat, unordered-containers, utf8-string, vector
         , xml-conduit, xml-types, yaml, zlib
         }:
         mkDerivation {
           pname = "stackage-curator";
           version = "0.17.0.0";
           src = fetchgit {
             url = "https://github.com/fpco/stackage-curator.git";
             sha256 = "0hymmzn59aszqxqs5s0mba8pzrky8wpkmy7hdgaxqrhg0syc6mkw";
             rev = "73c5ed06602990c33d3fec1711e27875f283b6bf";
           };
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson amazonka amazonka-core amazonka-s3 async base blaze-html
             bytestring Cabal classy-prelude-conduit conduit conduit-extra
             containers cryptonite cryptonite-conduit data-default-class
             directory exceptions filepath hashable html-conduit http-client
             http-client-tls http-conduit lucid memory mime-types
             mono-traversable mtl old-locale process resourcet safe semigroups
             stm store streaming-commons syb tar temporary text time
             transformers unix-compat unordered-containers utf8-string vector
             xml-conduit xml-types yaml zlib
           ];
           executableHaskellDepends = [
             aeson amazonka amazonka-core amazonka-s3 async base blaze-html
             bytestring Cabal classy-prelude-conduit conduit conduit-extra
             containers cryptonite cryptonite-conduit data-default-class
             directory exceptions filepath hashable html-conduit http-client
             http-client-tls http-conduit lucid memory mime-types
             mono-traversable mtl old-locale optparse-applicative
             optparse-simple process resourcet safe semigroups stm store
             streaming-commons syb tar temporary text time transformers
             unix-compat unordered-containers utf8-string vector xml-conduit
             xml-types yaml zlib
           ];
           buildTools = [ hpack ];
           preConfigure = "hpack";
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fpco/stackage-curator#readme";
           description = "Tools for curating Stackage bundles";
           license = stdenv.lib.licenses.mit;
         }) {};
      "gitlib" = callPackage
        ({ mkDerivation, base, base16-bytestring, bytestring, conduit
         , conduit-combinators, containers, directory, exceptions, fetchgit
         , filepath, hashable, mtl, resourcet, semigroups, tagged, text
         , time, transformers, unix, unliftio, unliftio-core
         , unordered-containers
         }:
         mkDerivation {
           pname = "gitlib";
           version = "3.1.2";
           src = fetchgit {
             url = "https://github.com/jwiegley/gitlib.git";
             sha256 = "0rp6lnbbbf9m6fvmx7mzknrk89ly0gbqaxsfx38cn6qdy7r54xcm";
             rev = "70c99759b8b9377f67492fe29afb32f05882409d";
           };
           postUnpack = "sourceRoot+=/gitlib; echo source root reset to $sourceRoot";
           libraryHaskellDepends = [
             base base16-bytestring bytestring conduit conduit-combinators
             containers directory exceptions filepath hashable mtl resourcet
             semigroups tagged text time transformers unix unliftio
             unliftio-core unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jwiegley/gitlib";
           description = "API library for working with Git repositories";
           license = stdenv.lib.licenses.mit;
         }) {};
      "gitlib-libgit2" = callPackage
        ({ mkDerivation, base, bytestring, conduit, conduit-combinators
         , containers, directory, exceptions, fast-logger, fetchgit
         , filepath, gitlib, hlibgit2, mmorph, monad-loops, mtl, resourcet
         , stm, stm-conduit, tagged, template-haskell, text, text-icu, time
         , transformers, transformers-base, unliftio, unliftio-core
         }:
         mkDerivation {
           pname = "gitlib-libgit2";
           version = "3.1.1";
           src = fetchgit {
             url = "https://github.com/jwiegley/gitlib.git";
             sha256 = "0rp6lnbbbf9m6fvmx7mzknrk89ly0gbqaxsfx38cn6qdy7r54xcm";
             rev = "70c99759b8b9377f67492fe29afb32f05882409d";
           };
           postUnpack = "sourceRoot+=/gitlib-libgit2; echo source root reset to $sourceRoot";
           libraryHaskellDepends = [
             base bytestring conduit conduit-combinators containers directory
             exceptions fast-logger filepath gitlib hlibgit2 mmorph monad-loops
             mtl resourcet stm stm-conduit tagged template-haskell text text-icu
             time transformers transformers-base unliftio unliftio-core
           ];
           doHaddock = false;
           doCheck = false;
           description = "Libgit2 backend for gitlib";
           license = stdenv.lib.licenses.mit;
         }) {};
    };
in nixpkgs.haskell.packages.stackage.lts-122.override {
  packageSetConfig = self: super: stackPackages { inherit (nixpkgs) pkgs stdenv; inherit (self) callPackage; } super;
}
