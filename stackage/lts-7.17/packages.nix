# Generated by stackage2nix 0.6.1 from "/nix/store/jwic59nw202khsy06b5hy9irq3zipzb8-stackage-lts/lts-7.17.yaml"
{ pkgs, stdenv, callPackage }:

self: {
  "AC-Vector" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "AC-Vector";
       version = "2.3.2";
       sha256 = "04ahf6ldfhvzbml9xd6yplygn8ih7b8zz7cw03hkr053g5kzylay";
       libraryHaskellDepends = [ base ];
       description = "Efficient geometric vectors and transformations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Agda" = callPackage
    ({ mkDerivation, alex, array, base, binary, boxes, bytestring
     , containers, cpphs, data-hash, deepseq, directory, EdisonAPI
     , EdisonCore, edit-distance, emacs, equivalence, filemanip
     , filepath, geniplate-mirror, happy, hashable, hashtables
     , haskeline, haskell-src-exts, monadplus, mtl, parallel, pretty
     , process, QuickCheck, strict, template-haskell, text, time
     , transformers, transformers-compat, unordered-containers, xhtml
     , zlib
     }:
     mkDerivation {
       pname = "Agda";
       version = "2.5.1.1";
       sha256 = "1c56cs63lg1xx7nzfylrm3lv07bmy5ryjrqqmrb9nd4lziiq0fsn";
       revision = "1";
       editedCabalFile = "06qnznlyv0l843dzqd323vbk648nv1rshsms0ld6g62gkgyjg0rq";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         array base binary boxes bytestring containers data-hash deepseq
         directory EdisonAPI EdisonCore edit-distance equivalence filepath
         geniplate-mirror hashable hashtables haskeline haskell-src-exts
         monadplus mtl parallel pretty process QuickCheck strict
         template-haskell text time transformers transformers-compat
         unordered-containers xhtml zlib
       ];
       libraryToolDepends = [ alex cpphs happy ];
       executableHaskellDepends = [
         base binary containers directory filemanip filepath
         haskell-src-exts mtl process
       ];
       executableToolDepends = [ emacs ];
       postInstall = ''
         files=("$data/share/ghc-"*"/"*"-ghc-"*"/Agda-"*"/lib/prim/Agda/"{Primitive.agda,Builtin"/"*.agda})
         for f in "''${files[@]}" ; do
           $out/bin/agda $f
         done
         for f in "''${files[@]}" ; do
           $out/bin/agda -c --no-main $f
         done
         $out/bin/agda-mode compile
       '';
       homepage = "http://wiki.portal.chalmers.se/agda/";
       description = "A dependently typed functional programming language and proof assistant";
       license = "unknown";
     }) {inherit (pkgs) emacs;};
  "BlastHTTP" = callPackage
    ({ mkDerivation, base, biocore, biofasta, blastxml, bytestring
     , conduit, HTTP, http-conduit, hxt, mtl, network, transformers
     }:
     mkDerivation {
       pname = "BlastHTTP";
       version = "1.2.1";
       sha256 = "1mav6nyrqyjfl0qs9r7pqdijpd8dh0ddkcq9fbssyc05p87mxs6f";
       libraryHaskellDepends = [
         base biocore biofasta blastxml bytestring conduit HTTP http-conduit
         hxt mtl network transformers
       ];
       homepage = "https://github.com/eggzilla/BlastHTTP";
       description = "Libary to interface with the NCBI blast REST interface";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "Boolean" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "Boolean";
       version = "0.2.3";
       sha256 = "1lsm06y7hgjp9qmlr6csf24x3wgna7sbf8dgh6sfl2rhs7fn8kgn";
       libraryHaskellDepends = [ base ];
       description = "Generalized booleans and numbers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "BoundedChan" = callPackage
    ({ mkDerivation, array, base }:
     mkDerivation {
       pname = "BoundedChan";
       version = "1.0.3.0";
       sha256 = "0vf4mlw08n056g5256cf46m5xsijng5gvjx7ccm4r132gznyl72k";
       libraryHaskellDepends = [ array base ];
       description = "Implementation of bounded channels";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Cabal" = callPackage
    ({ mkDerivation, array, base, binary, bytestring, containers
     , deepseq, directory, exceptions, filepath, old-time, pretty
     , process, QuickCheck, regex-posix, tagged, tasty, tasty-hunit
     , tasty-quickcheck, time, transformers, unix
     }:
     mkDerivation {
       pname = "Cabal";
       version = "1.24.2.0";
       sha256 = "0h33v1716wkqh9wvq2wynvhwzkjjhg4aav0a1i3cmyq36n7fpl5p";
       libraryHaskellDepends = [
         array base binary bytestring containers deepseq directory filepath
         pretty process time unix
       ];
       testHaskellDepends = [
         base bytestring containers directory exceptions filepath old-time
         pretty process QuickCheck regex-posix tagged tasty tasty-hunit
         tasty-quickcheck transformers unix
       ];
       doCheck = false;
       homepage = "http://www.haskell.org/cabal/";
       description = "A framework for packaging Haskell software";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ChannelT" = callPackage
    ({ mkDerivation, base, free, mmorph, mtl, transformers-base }:
     mkDerivation {
       pname = "ChannelT";
       version = "0.0.0.2";
       sha256 = "1857i9pwizdq8wr2502ff0ghaq9ggrklajj28fkj7lqi689n98qw";
       libraryHaskellDepends = [ base free mmorph mtl transformers-base ];
       homepage = "https://github.com/pthariensflame/ChannelT";
       description = "Generalized stream processors";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Chart" = callPackage
    ({ mkDerivation, array, base, colour, data-default-class, lens, mtl
     , old-locale, operational, time, vector
     }:
     mkDerivation {
       pname = "Chart";
       version = "1.8.1";
       sha256 = "0pm17d4jhbpmlw5gbsmdgxhh65n2xl141ja4nbg1vamqnvj42lk3";
       libraryHaskellDepends = [
         array base colour data-default-class lens mtl old-locale
         operational time vector
       ];
       homepage = "https://github.com/timbod7/haskell-chart/wiki";
       description = "A library for generating 2D Charts and Plots";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Chart-cairo" = callPackage
    ({ mkDerivation, array, base, cairo, Chart, colour
     , data-default-class, lens, mtl, old-locale, operational, time
     }:
     mkDerivation {
       pname = "Chart-cairo";
       version = "1.8.1";
       sha256 = "053wqiwl39gvjgdn5fl6xna61h7r599g0lbdnrs5d9amn3z9855j";
       libraryHaskellDepends = [
         array base cairo Chart colour data-default-class lens mtl
         old-locale operational time
       ];
       homepage = "https://github.com/timbod7/haskell-chart/wiki";
       description = "Cairo backend for Charts";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Chart-diagrams" = callPackage
    ({ mkDerivation, base, blaze-markup, bytestring, Chart, colour
     , containers, data-default-class, diagrams-core, diagrams-lib
     , diagrams-postscript, diagrams-svg, lens, mtl, old-locale
     , operational, svg-builder, SVGFonts, text, time
     }:
     mkDerivation {
       pname = "Chart-diagrams";
       version = "1.8.1";
       sha256 = "1frmav6hkh7ml7jh0sbxppqdywm7dvgycmrr39r9hrwyf7bi4bhw";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base blaze-markup bytestring Chart colour containers
         data-default-class diagrams-core diagrams-lib diagrams-postscript
         diagrams-svg lens mtl old-locale operational svg-builder SVGFonts
         text time
       ];
       homepage = "https://github.com/timbod7/haskell-chart/wiki";
       description = "Diagrams backend for Charts";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ChasingBottoms" = callPackage
    ({ mkDerivation, array, base, containers, mtl, QuickCheck, random
     , syb
     }:
     mkDerivation {
       pname = "ChasingBottoms";
       version = "1.3.1.2";
       sha256 = "1mmqs8xhmlamb9ncvkwnsfb0zqprvw7flm91fyv4x8n4c25jfvkr";
       libraryHaskellDepends = [
         base containers mtl QuickCheck random syb
       ];
       testHaskellDepends = [
         array base containers mtl QuickCheck random syb
       ];
       description = "For testing partial and infinite values";
       license = stdenv.lib.licenses.mit;
     }) {};
  "Clipboard" = callPackage
    ({ mkDerivation, base, directory, unix, utf8-string, X11 }:
     mkDerivation {
       pname = "Clipboard";
       version = "2.3.1.0";
       sha256 = "1qsky3gh99l4csswd8w5iwx81v4cvg89h1wbr74ys0gswgiqbfyx";
       libraryHaskellDepends = [ base directory unix utf8-string X11 ];
       homepage = "http://haskell.org/haskellwiki/Clipboard";
       description = "System clipboard interface";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ClustalParser" = callPackage
    ({ mkDerivation, base, cmdargs, either-unwrap, hspec, parsec
     , vector
     }:
     mkDerivation {
       pname = "ClustalParser";
       version = "1.1.4";
       sha256 = "13y45j1zc03n2w12x1v3dd98lcib1dnxxgbdnw2y77wbsnfv4bfk";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base parsec vector ];
       executableHaskellDepends = [ base cmdargs either-unwrap ];
       testHaskellDepends = [ base hspec parsec ];
       description = "Libary for parsing Clustal tools output";
       license = "GPL";
     }) {};
  "ConfigFile" = callPackage
    ({ mkDerivation, base, containers, MissingH, mtl, parsec }:
     mkDerivation {
       pname = "ConfigFile";
       version = "1.1.4";
       sha256 = "057mw146bip9wzs7j4b5xr1x24d8w0kr4i3inri5m57jkwspn25f";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base containers MissingH mtl parsec ];
       homepage = "http://software.complete.org/configfile";
       description = "Configuration file reading & writing";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "DAV" = callPackage
    ({ mkDerivation, base, bytestring, case-insensitive, containers
     , data-default, exceptions, haskeline, http-client, http-client-tls
     , http-types, lens, mtl, network, network-uri, optparse-applicative
     , transformers, transformers-base, transformers-compat, utf8-string
     , xml-conduit, xml-hamlet
     }:
     mkDerivation {
       pname = "DAV";
       version = "1.3.1";
       sha256 = "02f03grgwsazvlkyn743k6hjck9s7brbcgbzvyxv9gwbiyjzm02w";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring case-insensitive containers data-default exceptions
         http-client http-client-tls http-types lens mtl transformers
         transformers-base transformers-compat utf8-string xml-conduit
         xml-hamlet
       ];
       executableHaskellDepends = [
         base bytestring case-insensitive containers data-default exceptions
         haskeline http-client http-client-tls http-types lens mtl network
         network-uri optparse-applicative transformers transformers-base
         transformers-compat utf8-string xml-conduit xml-hamlet
       ];
       homepage = "http://floss.scru.org/hDAV";
       description = "RFC 4918 WebDAV support";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "DRBG" = callPackage
    ({ mkDerivation, base, binary, bytestring, cereal, cipher-aes128
     , crypto-api, crypto-api-tests, cryptohash-cryptoapi, entropy
     , HUnit, mtl, parallel, prettyclass, QuickCheck, tagged
     , test-framework, test-framework-hunit
     }:
     mkDerivation {
       pname = "DRBG";
       version = "0.5.5";
       sha256 = "1z9vqc1nw0mf2sqgddcipmlkz6mckq9wnrzqqdy3rj3c90135pr1";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base bytestring cereal cipher-aes128 crypto-api
         cryptohash-cryptoapi entropy mtl parallel prettyclass tagged
       ];
       testHaskellDepends = [
         base binary bytestring cereal cipher-aes128 crypto-api
         crypto-api-tests cryptohash-cryptoapi entropy HUnit mtl parallel
         prettyclass QuickCheck tagged test-framework test-framework-hunit
       ];
       doCheck = false;
       description = "Deterministic random bit generator (aka RNG, PRNG) based HMACs, Hashes, and Ciphers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Decimal" = callPackage
    ({ mkDerivation, base, deepseq, HUnit, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "Decimal";
       version = "0.4.2";
       sha256 = "0qa2z2lq1hrvakhyhj624mg8sd05ikhb66zwpa6x9vcyji93dxf5";
       libraryHaskellDepends = [ base deepseq ];
       testHaskellDepends = [
         base deepseq HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       homepage = "https://github.com/PaulJohnson/Haskell-Decimal";
       description = "Decimal numbers with variable precision";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Diff" = callPackage
    ({ mkDerivation, array, base, directory, pretty, process
     , QuickCheck, test-framework, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "Diff";
       version = "0.3.4";
       sha256 = "0bqcdvhxx8dmqc3793m6axg813wv9ldz2j37f1wygbbrbbndmdvp";
       libraryHaskellDepends = [ array base pretty ];
       testHaskellDepends = [
         array base directory pretty process QuickCheck test-framework
         test-framework-quickcheck2
       ];
       description = "O(ND) diff algorithm in haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Earley" = callPackage
    ({ mkDerivation, base, criterion, deepseq, ListLike, parsec, tasty
     , tasty-hunit, tasty-quickcheck, unordered-containers
     }:
     mkDerivation {
       pname = "Earley";
       version = "0.11.0.1";
       sha256 = "1cw575wk6zzkzqpps05ww33s4j98q81zr821avh9s2xv4q4s81y2";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base ListLike ];
       executableHaskellDepends = [ base unordered-containers ];
       testHaskellDepends = [ base tasty tasty-hunit tasty-quickcheck ];
       benchmarkHaskellDepends = [
         base criterion deepseq ListLike parsec
       ];
       description = "Parsing all context-free grammars using Earley's algorithm";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Ebnf2ps" = callPackage
    ({ mkDerivation, array, base, containers, directory, happy
     , old-time, unix
     }:
     mkDerivation {
       pname = "Ebnf2ps";
       version = "1.0.15";
       sha256 = "0jrbxanhp81n3nabdw5s1gh8a78hy4bgnv5slqzrkj6n47bygk0f";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         array base containers directory old-time unix
       ];
       executableToolDepends = [ happy ];
       doHaddock = false;
       homepage = "https://github.com/FranklinChen/Ebnf2ps";
       description = "Peter's Syntax Diagram Drawing Tool";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "EdisonAPI" = callPackage
    ({ mkDerivation, base, mtl }:
     mkDerivation {
       pname = "EdisonAPI";
       version = "1.3.1";
       sha256 = "0vmmlsj8ggbpwx6fkf5fvb6jp0zpx6iba6b28m80lllr2p8bi8wm";
       libraryHaskellDepends = [ base mtl ];
       homepage = "http://rwd.rdockins.name/edison/home/";
       description = "A library of efficient, purely-functional data structures (API)";
       license = stdenv.lib.licenses.mit;
     }) {};
  "EdisonCore" = callPackage
    ({ mkDerivation, array, base, containers, EdisonAPI, mtl
     , QuickCheck
     }:
     mkDerivation {
       pname = "EdisonCore";
       version = "1.3.1.1";
       sha256 = "06shxmcqxcahcn6zgl64vlqix4fnq53d97drcgsh94qp7gp201ry";
       libraryHaskellDepends = [
         array base containers EdisonAPI mtl QuickCheck
       ];
       homepage = "http://rwd.rdockins.name/edison/home/";
       description = "A library of efficent, purely-functional data structures (Core Implementations)";
       license = "unknown";
     }) {};
  "FenwickTree" = callPackage
    ({ mkDerivation, base, QuickCheck, template-haskell }:
     mkDerivation {
       pname = "FenwickTree";
       version = "0.1.2.1";
       sha256 = "0g7hhkim16wsjf8l79hqkiv1lain6jm8wpiml1iycra3n9i2s5ww";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base QuickCheck template-haskell ];
       testHaskellDepends = [ base QuickCheck template-haskell ];
       homepage = "https://github.com/mgajda/FenwickTree";
       description = "Data structure for fast query and update of cumulative sums";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "FindBin" = callPackage
    ({ mkDerivation, base, directory, filepath }:
     mkDerivation {
       pname = "FindBin";
       version = "0.0.5";
       sha256 = "197xvn05yysmibm1p5wzxfa256lvpbknr5d1l2ws6g40w1kpk717";
       libraryHaskellDepends = [ base directory filepath ];
       homepage = "https://github.com/audreyt/findbin";
       description = "Locate directory of original program";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "FontyFruity" = callPackage
    ({ mkDerivation, base, binary, bytestring, containers, deepseq
     , directory, filepath, text, vector, xml
     }:
     mkDerivation {
       pname = "FontyFruity";
       version = "0.5.3.2";
       sha256 = "05f558p3288qfg8prfvb28cc7mwd5nk07ias87xflq5x81pnw6c7";
       libraryHaskellDepends = [
         base binary bytestring containers deepseq directory filepath text
         vector xml
       ];
       description = "A true type file format loader";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Frames" = callPackage
    ({ mkDerivation, base, criterion, directory, ghc-prim, hspec, htoml
     , pipes, pretty, primitive, readable, regex-applicative
     , template-haskell, temporary, text, transformers
     , unordered-containers, vector, vinyl
     }:
     mkDerivation {
       pname = "Frames";
       version = "0.1.9";
       sha256 = "09bbxdqfgshhax0lrkpzii9zg3rymqmkgk0xr9b73zzkr1jfmshq";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base ghc-prim pipes primitive readable template-haskell text
         transformers vector vinyl
       ];
       testHaskellDepends = [
         base directory hspec htoml pretty regex-applicative
         template-haskell temporary text unordered-containers
       ];
       benchmarkHaskellDepends = [ base criterion pipes transformers ];
       description = "Data frames For working with tabular data files";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "GLFW-b" = callPackage
    ({ mkDerivation, base, bindings-GLFW }:
     mkDerivation {
       pname = "GLFW-b";
       version = "1.4.8.1";
       sha256 = "1sca2wzkqw77jdj9mxnswx7zaicj1dsl5k3gjsaxmjznbkn4k2j3";
       libraryHaskellDepends = [ base bindings-GLFW ];
       doCheck = false;
       description = "Bindings to GLFW OpenGL library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "GLURaw" = callPackage
    ({ mkDerivation, base, freeglut, mesa, OpenGLRaw, transformers }:
     mkDerivation {
       pname = "GLURaw";
       version = "2.0.0.3";
       sha256 = "1vncyxaqyc7apw42wkpyxinyvzgzcnx6x858x4z15h5qq70ghb2q";
       libraryHaskellDepends = [ base OpenGLRaw transformers ];
       librarySystemDepends = [ freeglut mesa ];
       homepage = "http://www.haskell.org/haskellwiki/Opengl";
       description = "A raw binding for the OpenGL graphics system";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) freeglut; inherit (pkgs) mesa;};
  "GLUT" = callPackage
    ({ mkDerivation, array, base, bytestring, containers, OpenGL
     , OpenGLRaw, random, StateVar, transformers
     }:
     mkDerivation {
       pname = "GLUT";
       version = "2.7.0.10";
       sha256 = "0sbm943bg896nf3qjmlnsg3zzrr3pl330rzh9g0hwv47nzwwn4ab";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         array base containers OpenGL StateVar transformers
       ];
       executableHaskellDepends = [
         array base bytestring OpenGLRaw random
       ];
       homepage = "http://www.haskell.org/haskellwiki/Opengl";
       description = "A binding for the OpenGL Utility Toolkit";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Genbank" = callPackage
    ({ mkDerivation, base, biocore, biofasta, bytestring, cmdargs
     , parsec, split
     }:
     mkDerivation {
       pname = "Genbank";
       version = "1.0.3";
       sha256 = "14rbknlc1bxrld04i7dc5dklng5sp0b1rbiilndw5cair0d67brb";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base biocore biofasta bytestring parsec split
       ];
       executableHaskellDepends = [ base cmdargs ];
       description = "Libary for processing the NCBI genbank format";
       license = "GPL";
     }) {};
  "GenericPretty" = callPackage
    ({ mkDerivation, base, ghc-prim, pretty }:
     mkDerivation {
       pname = "GenericPretty";
       version = "1.2.1";
       sha256 = "0bb70mic7srr7x8k83d1i0m0a32gm72zr78ccdf3ckchj9136php";
       libraryHaskellDepends = [ base ghc-prim pretty ];
       homepage = "https://github.com/RazvanRanca/GenericPretty";
       description = "A generic, derivable, haskell pretty printer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Glob" = callPackage
    ({ mkDerivation, base, containers, directory, dlist, filepath
     , HUnit, QuickCheck, test-framework, test-framework-hunit
     , test-framework-quickcheck2, transformers, transformers-compat
     }:
     mkDerivation {
       pname = "Glob";
       version = "0.7.14";
       sha256 = "0aw43izg8vlvjl40ms6k92w7gxg7n3l6smdvzla47fp82s4vhdr8";
       libraryHaskellDepends = [
         base containers directory dlist filepath transformers
         transformers-compat
       ];
       testHaskellDepends = [
         base containers directory dlist filepath HUnit QuickCheck
         test-framework test-framework-hunit test-framework-quickcheck2
         transformers transformers-compat
       ];
       homepage = "http://iki.fi/matti.niemenmaa/glob/";
       description = "Globbing library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "GraphSCC" = callPackage
    ({ mkDerivation, array, base, containers }:
     mkDerivation {
       pname = "GraphSCC";
       version = "1.0.4";
       sha256 = "1wbcx3wb02adb7l4nchxla3laliz0h5q074vfw4z0ic833k977bq";
       libraryHaskellDepends = [ array base containers ];
       description = "Tarjan's algorithm for computing the strongly connected components of a graph";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "H" = callPackage
    ({ mkDerivation, base, bytestring, cmdargs, file-embed, inline-r
     , pretty, process, temporary, vector
     }:
     mkDerivation {
       pname = "H";
       version = "0.9.0.1";
       sha256 = "0d3isp467pq5l1c95j0q6s2isywz8xamgrm9rs16i7xczkz4vh2z";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         base bytestring cmdargs file-embed inline-r pretty process
         temporary vector
       ];
       doHaddock = false;
       homepage = "https://tweag.github.io/HaskellR";
       description = "The Haskell/R mixed programming environment";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "HCodecs" = callPackage
    ({ mkDerivation, array, base, bytestring, QuickCheck, random }:
     mkDerivation {
       pname = "HCodecs";
       version = "0.5";
       sha256 = "0mhp1alx0p9lzq3vm0k802f8ndm2386sshprn9zb8xq8bsd11gxi";
       libraryHaskellDepends = [
         array base bytestring QuickCheck random
       ];
       testHaskellDepends = [ array base bytestring QuickCheck random ];
       homepage = "http://www-db.informatik.uni-tuebingen.de/team/giorgidze";
       description = "A library to read, write and manipulate MIDI, WAVE, and SoundFont2 files";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "HDBC" = callPackage
    ({ mkDerivation, base, bytestring, containers, convertible, mtl
     , old-time, text, time, utf8-string
     }:
     mkDerivation {
       pname = "HDBC";
       version = "2.4.0.1";
       sha256 = "1bfjffn44n8w0bvznjiqm4ckfs28nipachip98f125p784ff4gks";
       revision = "1";
       editedCabalFile = "1zg7l48g45wc86kqyspzg92q3vnzb6c52rn8qkrhw85wk57yy76s";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring containers convertible mtl old-time text time
         utf8-string
       ];
       homepage = "https://github.com/hdbc/hdbc";
       description = "Haskell Database Connectivity";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "HDBC-session" = callPackage
    ({ mkDerivation, base, HDBC }:
     mkDerivation {
       pname = "HDBC-session";
       version = "0.1.1.0";
       sha256 = "1fc0zi9i3cba0rn6q8ibn1kdij7glm73qkzc97qg5f0pkmn7mlsa";
       libraryHaskellDepends = [ base HDBC ];
       homepage = "http://khibino.github.io/haskell-relational-record/";
       description = "Bracketed connection for HDBC";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "HPDF" = callPackage
    ({ mkDerivation, array, base, base64-bytestring, binary, bytestring
     , containers, errors, HTF, mtl, random, vector, zlib
     }:
     mkDerivation {
       pname = "HPDF";
       version = "1.4.10";
       sha256 = "1m072rc03yx5y4djmvj87kn6n23d9378v3ipl8lj3vzfjgfzsayy";
       libraryHaskellDepends = [
         array base base64-bytestring binary bytestring containers errors
         mtl random vector zlib
       ];
       testHaskellDepends = [ base HTF ];
       homepage = "http://www.alpheccar.org";
       description = "Generation of PDF documents";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "HSet" = callPackage
    ({ mkDerivation, base, containers, hashable, hashtables }:
     mkDerivation {
       pname = "HSet";
       version = "0.0.0";
       sha256 = "09h4lxzc69ndh77rj1spnxlziaf70b65z6pnny1kdlk8bignlcwb";
       libraryHaskellDepends = [ base containers hashable hashtables ];
       description = "Faux heterogeneous sets";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "HStringTemplate" = callPackage
    ({ mkDerivation, array, base, blaze-builder, bytestring, containers
     , deepseq, directory, filepath, mtl, old-locale, parsec, pretty
     , syb, template-haskell, text, time, void
     }:
     mkDerivation {
       pname = "HStringTemplate";
       version = "0.8.5";
       sha256 = "1zrmbclnc0njdcppzsjlp4ln69hzcixmw1x1l6rjvxx5y51k0az0";
       libraryHaskellDepends = [
         array base blaze-builder bytestring containers deepseq directory
         filepath mtl old-locale parsec pretty syb template-haskell text
         time void
       ];
       description = "StringTemplate implementation in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "HTF" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, array, base
     , base64-bytestring, bytestring, containers, cpphs, Diff, directory
     , filepath, haskell-src, HUnit, lifted-base, monad-control, mtl
     , old-time, pretty, process, QuickCheck, random, regex-compat
     , template-haskell, temporary, text, time, unix
     , unordered-containers, vector, xmlgen
     }:
     mkDerivation {
       pname = "HTF";
       version = "0.13.1.0";
       sha256 = "0iz81pmc5prl0643jg53ywa65h7s16blchpvasnvfvvn47p6kd0w";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson array base base64-bytestring bytestring containers cpphs Diff
         directory haskell-src HUnit lifted-base monad-control mtl old-time
         pretty process QuickCheck random regex-compat text time unix vector
         xmlgen
       ];
       executableHaskellDepends = [
         array base cpphs directory HUnit mtl old-time random text
       ];
       testHaskellDepends = [
         aeson aeson-pretty base bytestring directory filepath HUnit mtl
         process random regex-compat template-haskell temporary text
         unordered-containers
       ];
       doCheck = false;
       homepage = "https://github.com/skogsbaer/HTF/";
       description = "The Haskell Test Framework";
       license = "LGPL";
     }) {};
  "HTTP" = callPackage
    ({ mkDerivation, array, base, bytestring, case-insensitive, conduit
     , conduit-extra, deepseq, http-types, httpd-shed, HUnit, mtl
     , network, network-uri, parsec, pureMD5, split, test-framework
     , test-framework-hunit, time, wai, warp
     }:
     mkDerivation {
       pname = "HTTP";
       version = "4000.3.4";
       sha256 = "08n3ry6mmhxx4dkmfk63vv6kbp20qw012bi67qf1v92zwipns1m4";
       libraryHaskellDepends = [
         array base bytestring mtl network network-uri parsec time
       ];
       testHaskellDepends = [
         base bytestring case-insensitive conduit conduit-extra deepseq
         http-types httpd-shed HUnit mtl network network-uri pureMD5 split
         test-framework test-framework-hunit wai warp
       ];
       homepage = "https://github.com/haskell/HTTP";
       description = "A library for client-side HTTP";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "HUnit" = callPackage
    ({ mkDerivation, base, deepseq, filepath }:
     mkDerivation {
       pname = "HUnit";
       version = "1.3.1.2";
       sha256 = "10akdh4fl615rrshxi3m5gf414il1q42z4zqyb6q4jasmscvzpms";
       libraryHaskellDepends = [ base deepseq ];
       testHaskellDepends = [ base deepseq filepath ];
       homepage = "https://github.com/hspec/HUnit#readme";
       description = "A unit testing framework for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "HUnit-approx" = callPackage
    ({ mkDerivation, base, HUnit }:
     mkDerivation {
       pname = "HUnit-approx";
       version = "1.0";
       sha256 = "0svkjvcanjsi5bhn9b91jhig36np5imr3qyj6b1s5msm7wmlk3v1";
       libraryHaskellDepends = [ base HUnit ];
       testHaskellDepends = [ base HUnit ];
       homepage = "https://github.com/goldfirere/HUnit-approx";
       description = "Approximate equality for floating point numbers with HUnit";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "HaRe" = callPackage
    ({ mkDerivation, array, base, Cabal, cabal-helper, containers
     , deepseq, Diff, directory, filepath, ghc, ghc-exactprint, ghc-mod
     , ghc-paths, ghc-prim, ghc-syb-utils, gitrev, hslogger, hspec
     , HUnit, monad-control, monoid-extras, mtl, old-time
     , optparse-applicative, optparse-simple, parsec, pretty, process
     , QuickCheck, rosezipper, semigroups, silently
     , Strafunski-StrategyLib, stringbuilder, syb, syz, time
     , transformers, transformers-base
     }:
     mkDerivation {
       pname = "HaRe";
       version = "0.8.3.0";
       sha256 = "1lnw3q60ffhzcaq7lh9r1fdw451y3qr6z20afjl8ms4z6zsh5qqi";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base Cabal cabal-helper containers directory filepath ghc
         ghc-exactprint ghc-mod ghc-paths ghc-prim ghc-syb-utils hslogger
         monad-control monoid-extras mtl old-time pretty rosezipper
         semigroups Strafunski-StrategyLib syb syz time transformers
         transformers-base
       ];
       executableHaskellDepends = [
         array base Cabal cabal-helper containers directory filepath ghc
         ghc-exactprint ghc-mod ghc-paths ghc-prim ghc-syb-utils gitrev
         hslogger monad-control monoid-extras mtl old-time
         optparse-applicative optparse-simple parsec pretty rosezipper
         semigroups Strafunski-StrategyLib syb syz time transformers
         transformers-base
       ];
       testHaskellDepends = [
         base Cabal cabal-helper containers deepseq Diff directory filepath
         ghc ghc-exactprint ghc-mod ghc-paths ghc-prim ghc-syb-utils
         hslogger hspec HUnit monad-control monoid-extras mtl old-time
         process QuickCheck rosezipper semigroups silently
         Strafunski-StrategyLib stringbuilder syb syz time transformers
         transformers-base
       ];
       doCheck = false;
       homepage = "https://github.com/RefactoringTools/HaRe/wiki";
       description = "the Haskell Refactorer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "HaTeX" = callPackage
    ({ mkDerivation, base, bytestring, containers, matrix, parsec
     , QuickCheck, tasty, tasty-quickcheck, text, transformers
     , wl-pprint-extras
     }:
     mkDerivation {
       pname = "HaTeX";
       version = "3.17.1.0";
       sha256 = "1hqp167qng64swk6c1klqwgqhml9s4i2yhn42s8b061hhnrcd5y4";
       libraryHaskellDepends = [
         base bytestring containers matrix parsec QuickCheck text
         transformers wl-pprint-extras
       ];
       testHaskellDepends = [
         base QuickCheck tasty tasty-quickcheck text
       ];
       homepage = "https://github.com/Daniel-Diaz/HaTeX/blob/master/README.md";
       description = "The Haskell LaTeX library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "HandsomeSoup" = callPackage
    ({ mkDerivation, base, containers, hspec, HTTP, hxt, hxt-http, mtl
     , network, network-uri, parsec, transformers
     }:
     mkDerivation {
       pname = "HandsomeSoup";
       version = "0.4.2";
       sha256 = "1yzfrvivvxwlaiqwbjx27rxwq9mmnnpb512vwklzw7nyzg9xmqha";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base containers HTTP hxt hxt-http mtl network network-uri parsec
         transformers
       ];
       executableHaskellDepends = [ base hxt ];
       testHaskellDepends = [ base hspec hxt ];
       homepage = "https://github.com/egonSchiele/HandsomeSoup";
       description = "Work with HTML more easily in HXT";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "HaskellNet" = callPackage
    ({ mkDerivation, array, base, base64-string, bytestring, cryptohash
     , mime-mail, mtl, network, old-time, pretty, text
     }:
     mkDerivation {
       pname = "HaskellNet";
       version = "0.5.1";
       sha256 = "0f581izyh6bdk85i0g07xdp3fdzdfdfjiqpnl89r17vgswdd6i9j";
       libraryHaskellDepends = [
         array base base64-string bytestring cryptohash mime-mail mtl
         network old-time pretty text
       ];
       homepage = "https://github.com/jtdaugherty/HaskellNet";
       description = "Client support for POP3, SMTP, and IMAP";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "HaskellNet-SSL" = callPackage
    ({ mkDerivation, base, bytestring, connection, data-default
     , HaskellNet, network, tls
     }:
     mkDerivation {
       pname = "HaskellNet-SSL";
       version = "0.3.3.0";
       sha256 = "1x6miw5ph4qndsy345yym209r5lxsjsmmgyap6x1xjwxjcmlcz8p";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base bytestring connection data-default HaskellNet network tls
       ];
       homepage = "https://github.com/dpwright/HaskellNet-SSL";
       description = "Helpers to connect to SSL/TLS mail servers with HaskellNet";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Hclip" = callPackage
    ({ mkDerivation, base, mtl, process, strict }:
     mkDerivation {
       pname = "Hclip";
       version = "3.0.0.4";
       sha256 = "04ppwm7vfzndrys8x1n8vfb41vzwx59r9xp4dkbiqmrms390pj6q";
       libraryHaskellDepends = [ base mtl process strict ];
       homepage = "https://github.com/jetho/Hclip";
       description = "A small cross-platform library for reading and modifying the system clipboard";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "HsOpenSSL" = callPackage
    ({ mkDerivation, base, bytestring, network, openssl, time }:
     mkDerivation {
       pname = "HsOpenSSL";
       version = "0.11.4";
       sha256 = "01zd5dzkylgzq9gb54rywi8n4sbxfypc6p23z1r5mq07zfqvj9k3";
       configureFlags = [ "-f-fast-bignum" ];
       libraryHaskellDepends = [ base bytestring network time ];
       librarySystemDepends = [ openssl ];
       doCheck = false;
       homepage = "https://github.com/vshabanov/HsOpenSSL";
       description = "Partial OpenSSL binding for Haskell";
       license = stdenv.lib.licenses.publicDomain;
     }) {inherit (pkgs) openssl;};
  "HsOpenSSL-x509-system" = callPackage
    ({ mkDerivation, base, bytestring, HsOpenSSL, unix }:
     mkDerivation {
       pname = "HsOpenSSL-x509-system";
       version = "0.1.0.3";
       sha256 = "14hzjdpv8ld3nw5fcx451w49vq0s8fhs1zh984vpm85b5ypbgp2v";
       libraryHaskellDepends = [ base bytestring HsOpenSSL unix ];
       homepage = "https://github.com/redneb/HsOpenSSL-x509-system";
       description = "Use the system's native CA certificate store with HsOpenSSL";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "IPv6Addr" = callPackage
    ({ mkDerivation, attoparsec, base, HUnit, iproute, network
     , network-info, random, test-framework, test-framework-hunit, text
     }:
     mkDerivation {
       pname = "IPv6Addr";
       version = "0.6.3";
       sha256 = "00hf8ypildbjmrhh010z4rarggq75m10pnmg1ilbwz1flwb767fm";
       revision = "1";
       editedCabalFile = "11dvmn6l2sicxmiy7hg0a7msi022gpzzaiyliclkdcnifs75lhjm";
       libraryHaskellDepends = [
         attoparsec base iproute network network-info random text
       ];
       testHaskellDepends = [
         base HUnit test-framework test-framework-hunit text
       ];
       homepage = "https://github.com/MichelBoucey/IPv6Addr";
       description = "Library to deal with IPv6 address text representations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "IfElse" = callPackage
    ({ mkDerivation, base, mtl }:
     mkDerivation {
       pname = "IfElse";
       version = "0.85";
       sha256 = "1kfx1bwfjczj93a8yqz1n8snqiq5655qgzwv1lrycry8wb1vzlwa";
       libraryHaskellDepends = [ base mtl ];
       description = "Anaphoric and miscellaneous useful control-flow";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "IntervalMap" = callPackage
    ({ mkDerivation, base, Cabal, containers, criterion, deepseq
     , fingertree, QuickCheck, random, SegmentTree, weigh
     }:
     mkDerivation {
       pname = "IntervalMap";
       version = "0.5.2.0";
       sha256 = "110nafhkakvb3jcvpjszad5jybz4mklsliyi4wr3lcqcwhd4j6h3";
       libraryHaskellDepends = [ base containers deepseq ];
       testHaskellDepends = [ base Cabal containers deepseq QuickCheck ];
       benchmarkHaskellDepends = [
         base containers criterion deepseq fingertree random SegmentTree
         weigh
       ];
       homepage = "http://www.chr-breitkopf.de/comp/IntervalMap";
       description = "Containers for intervals, with efficient search";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "JuicyPixels" = callPackage
    ({ mkDerivation, base, binary, bytestring, containers, deepseq, mtl
     , primitive, transformers, vector, zlib
     }:
     mkDerivation {
       pname = "JuicyPixels";
       version = "3.2.8";
       sha256 = "0i2n7l28vi95fg2iyglizakbfnr29jwf92q2na9jli23sm3nb303";
       revision = "1";
       editedCabalFile = "0gif39hhnn7qccqvqca56hl3rc4s2i4sf5g7kkhpz6lapcgq84aj";
       libraryHaskellDepends = [
         base binary bytestring containers deepseq mtl primitive
         transformers vector zlib
       ];
       homepage = "https://github.com/Twinside/Juicy.Pixels";
       description = "Picture loading/serialization (in png, jpeg, bitmap, gif, tga, tiff and radiance)";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "JuicyPixels-extra" = callPackage
    ({ mkDerivation, base, criterion, hspec, JuicyPixels }:
     mkDerivation {
       pname = "JuicyPixels-extra";
       version = "0.1.1";
       sha256 = "1zdrh95b51566m2dh79vv92vivv2i4pknlimhd78mqc0fxz2ayyk";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base JuicyPixels ];
       testHaskellDepends = [ base hspec JuicyPixels ];
       benchmarkHaskellDepends = [ base criterion JuicyPixels ];
       homepage = "https://github.com/mrkkrp/JuicyPixels-extra";
       description = "Efficiently scale, crop, flip images with JuicyPixels";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "JuicyPixels-scale-dct" = callPackage
    ({ mkDerivation, base, base-compat, carray, fft, JuicyPixels, time
     }:
     mkDerivation {
       pname = "JuicyPixels-scale-dct";
       version = "0.1.1.2";
       sha256 = "15py0slh1jij8wrd68q0fqs9yarnabr470xm04i92904a809vgcs";
       libraryHaskellDepends = [
         base base-compat carray fft JuicyPixels
       ];
       testHaskellDepends = [
         base base-compat carray fft JuicyPixels time
       ];
       homepage = "https://github.com/phadej/JuicyPixels-scale-dct#readme";
       description = "Scale JuicyPixels images with DCT";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "LibZip" = callPackage
    ({ mkDerivation, base, bindings-libzip, bytestring, directory
     , filepath, HUnit, mtl, time, utf8-string
     }:
     mkDerivation {
       pname = "LibZip";
       version = "1.0.1";
       sha256 = "0ps2psza80jz566c9k377cqn536g6jcbs558jkc60gra5lhf0dm6";
       libraryHaskellDepends = [
         base bindings-libzip bytestring filepath mtl time utf8-string
       ];
       testHaskellDepends = [
         base bindings-libzip bytestring directory filepath HUnit mtl time
         utf8-string
       ];
       homepage = "http://bitbucket.org/astanin/hs-libzip/";
       description = "Bindings to libzip, a library for manipulating zip archives";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ListLike" = callPackage
    ({ mkDerivation, array, base, bytestring, containers, deepseq
     , dlist, fmlist, HUnit, QuickCheck, random, text, utf8-string
     , vector
     }:
     mkDerivation {
       pname = "ListLike";
       version = "4.5.1";
       sha256 = "139aaraprdlana39bldxzrl1pnvymwpiwymikc1xjg2nbcrla1xp";
       libraryHaskellDepends = [
         array base bytestring containers deepseq dlist fmlist text
         utf8-string vector
       ];
       testHaskellDepends = [
         array base bytestring containers dlist fmlist HUnit QuickCheck
         random text utf8-string vector
       ];
       doCheck = false;
       homepage = "http://github.com/JohnLato/listlike";
       description = "Generic support for list-like structures";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "MFlow" = callPackage
    ({ mkDerivation, base, blaze-html, blaze-markup, bytestring
     , case-insensitive, clientsession, conduit, conduit-extra
     , containers, cpphs, directory, extensible-exceptions, http-types
     , monadloc, mtl, old-time, parsec, pwstore-fast, random
     , RefSerialize, resourcet, stm, TCache, text, time, transformers
     , utf8-string, vector, wai, wai-extra, warp, warp-tls, Workflow
     }:
     mkDerivation {
       pname = "MFlow";
       version = "0.4.6.0";
       sha256 = "0hm3y606z4qdnp8kqbr69ll8hrx95qn782hhzmcq7n2jh54gg4sf";
       libraryHaskellDepends = [
         base blaze-html blaze-markup bytestring case-insensitive
         clientsession conduit conduit-extra containers directory
         extensible-exceptions http-types monadloc mtl old-time parsec
         pwstore-fast random RefSerialize resourcet stm TCache text time
         transformers utf8-string vector wai wai-extra warp warp-tls
         Workflow
       ];
       libraryToolDepends = [ cpphs ];
       description = "stateful, RESTful web framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "MemoTrie" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "MemoTrie";
       version = "0.6.4";
       sha256 = "074bss1vfr7h3s2fgdi84n5p4iywrcx4jj59s2bj9k8yxbvwhf22";
       revision = "1";
       editedCabalFile = "1rvjphg71cmr4g9pml14xv0p18if7l1v912cpc795ksn78bylp03";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base ];
       executableHaskellDepends = [ base ];
       doHaddock = false;
       homepage = "https://github.com/conal/MemoTrie";
       description = "Trie-based memo functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "MissingH" = callPackage
    ({ mkDerivation, array, base, containers, directory, filepath
     , hslogger, HUnit, mtl, network, old-locale, old-time, parsec
     , process, random, regex-compat, time, unix
     }:
     mkDerivation {
       pname = "MissingH";
       version = "1.4.0.1";
       sha256 = "0wcvgrmav480w7nf4bl14yi0jq2yzanysxwzwas9hpb28vyjlgr8";
       libraryHaskellDepends = [
         array base containers directory filepath hslogger HUnit mtl network
         old-locale old-time parsec process random regex-compat time unix
       ];
       doCheck = false;
       homepage = "http://software.complete.org/missingh";
       description = "Large utility library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "MonadPrompt" = callPackage
    ({ mkDerivation, base, mtl }:
     mkDerivation {
       pname = "MonadPrompt";
       version = "1.0.0.5";
       sha256 = "1nmy7dfzrkd8yfv5i9vlmjq9khnyi76ayvkzgcf783v5hfzcn4mh";
       libraryHaskellDepends = [ base mtl ];
       description = "MonadPrompt, implementation & examples";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "MonadRandom" = callPackage
    ({ mkDerivation, base, mtl, random, transformers
     , transformers-compat
     }:
     mkDerivation {
       pname = "MonadRandom";
       version = "0.4.2.3";
       sha256 = "1h1nhswrcmhy3mq6vd530p0df51fcnnf4csbwnljar7cf0mb2h6y";
       libraryHaskellDepends = [
         base mtl random transformers transformers-compat
       ];
       description = "Random-number generation monad";
       license = "unknown";
     }) {};
  "MusicBrainz" = callPackage
    ({ mkDerivation, aeson, base, bytestring, conduit, conduit-extra
     , HTTP, http-conduit, http-types, monad-control, resourcet, text
     , time, time-locale-compat, transformers, vector, xml-conduit
     , xml-types
     }:
     mkDerivation {
       pname = "MusicBrainz";
       version = "0.2.4";
       sha256 = "1f1x3iivxkn5d7w3xyh2q8mpn1mg24c1n6v8dvdsph745xszh8fj";
       libraryHaskellDepends = [
         aeson base bytestring conduit conduit-extra HTTP http-conduit
         http-types monad-control resourcet text time time-locale-compat
         transformers vector xml-conduit xml-types
       ];
       homepage = "http://floss.scru.org/hMusicBrainz";
       description = "interface to MusicBrainz XML2 web service";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "NoTrace" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "NoTrace";
       version = "0.3.0.1";
       sha256 = "0kszrn14jzv27h7s3x1ckskhl5a6ayvr8sq3105sbf9vndharvx8";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base ];
       homepage = "https://github.com/CindyLinz/Haskell-NoTrace";
       description = "Remove all the functions come from Debug.Trace after debugging";
       license = stdenv.lib.licenses.mit;
     }) {};
  "NumInstances" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "NumInstances";
       version = "1.4";
       sha256 = "0ycnwn09izajv330l7a31mc0alifqmxjsn9qmfswwnbg6i4jmnyb";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/conal/NumInstances";
       description = "Instances of numeric classes for functions and tuples";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ObjectName" = callPackage
    ({ mkDerivation, base, transformers }:
     mkDerivation {
       pname = "ObjectName";
       version = "1.1.0.1";
       sha256 = "046jm94rmm46cicd31pl54vdvfjvhd9ffbfycy2lxzc0fliyznvj";
       libraryHaskellDepends = [ base transformers ];
       homepage = "https://github.com/svenpanne/ObjectName";
       description = "Explicitly handled object names";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Octree" = callPackage
    ({ mkDerivation, AC-Vector, base, markdown-unlit, QuickCheck }:
     mkDerivation {
       pname = "Octree";
       version = "0.5.4.3";
       sha256 = "0rdlf8cqpfz43j9xddc5pqp829nyirndkc2rc7h8f8ycpdzsmn2g";
       libraryHaskellDepends = [ AC-Vector base QuickCheck ];
       testHaskellDepends = [ AC-Vector base markdown-unlit QuickCheck ];
       homepage = "https://github.com/mgajda/octree";
       description = "Simple unbalanced Octree for storing data about 3D points";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "OneTuple" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "OneTuple";
       version = "0.2.1";
       sha256 = "1x52b68zh3k9lnps5s87kzan7dzvqp6mrwgayjq15w9dv6v78vsb";
       libraryHaskellDepends = [ base ];
       description = "Singleton Tuple";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "OpenGL" = callPackage
    ({ mkDerivation, base, bytestring, containers, GLURaw, ObjectName
     , OpenGLRaw, StateVar, text, transformers
     }:
     mkDerivation {
       pname = "OpenGL";
       version = "3.0.1.0";
       sha256 = "1nm2mzrn1h2nnfs9vl5p088hqpll7rdvcsyqsn8q641im9jhqp7l";
       libraryHaskellDepends = [
         base bytestring containers GLURaw ObjectName OpenGLRaw StateVar
         text transformers
       ];
       homepage = "http://www.haskell.org/haskellwiki/Opengl";
       description = "A binding for the OpenGL graphics system";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "OpenGLRaw" = callPackage
    ({ mkDerivation, base, bytestring, containers, fixed, half, mesa
     , text, transformers
     }:
     mkDerivation {
       pname = "OpenGLRaw";
       version = "3.2.4.0";
       sha256 = "0bnbgmf4jxz1vr7a2yjh3nqylsaqsnv2qnnv63gmydvbx45r3yg3";
       libraryHaskellDepends = [
         base bytestring containers fixed half text transformers
       ];
       librarySystemDepends = [ mesa ];
       homepage = "http://www.haskell.org/haskellwiki/Opengl";
       description = "A raw binding for the OpenGL graphics system";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) mesa;};
  "PSQueue" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "PSQueue";
       version = "1.1";
       sha256 = "1k291bh8j5vpcrn6vycww2blwg7jxx9yrfmrqdanz48gs4d8gq58";
       libraryHaskellDepends = [ base ];
       description = "Priority Search Queue";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "QuasiText" = callPackage
    ({ mkDerivation, attoparsec, base, haskell-src-meta
     , template-haskell, text, th-lift-instances
     }:
     mkDerivation {
       pname = "QuasiText";
       version = "0.1.2.6";
       sha256 = "06giw0q5lynx05c4h45zwnlcifg91w291h3gwrg68qsjw9lx40g8";
       libraryHaskellDepends = [
         attoparsec base haskell-src-meta template-haskell text
         th-lift-instances
       ];
       homepage = "https://github.com/mikeplus64/QuasiText";
       description = "A QuasiQuoter for Text";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "QuickCheck" = callPackage
    ({ mkDerivation, base, containers, random, template-haskell
     , test-framework, tf-random, transformers
     }:
     mkDerivation {
       pname = "QuickCheck";
       version = "2.8.2";
       sha256 = "1ai6k5v0bibaxq8xffcblc6rwmmk6gf8vjyd9p2h3y6vwbhlvilq";
       libraryHaskellDepends = [
         base containers random template-haskell tf-random transformers
       ];
       testHaskellDepends = [
         base containers template-haskell test-framework
       ];
       homepage = "https://github.com/nick8325/quickcheck";
       description = "Automatic testing of Haskell programs";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "RSA" = callPackage
    ({ mkDerivation, base, binary, bytestring, crypto-api
     , crypto-pubkey-types, DRBG, pureMD5, QuickCheck, SHA, tagged
     , test-framework, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "RSA";
       version = "2.2.0";
       sha256 = "1mzjlkw9i9r7r5a7mja01pq3ihvik2ncgah1jmznswaj6ga5cc19";
       libraryHaskellDepends = [
         base binary bytestring crypto-api crypto-pubkey-types pureMD5 SHA
       ];
       testHaskellDepends = [
         base binary bytestring crypto-api crypto-pubkey-types DRBG pureMD5
         QuickCheck SHA tagged test-framework test-framework-quickcheck2
       ];
       description = "Implementation of RSA, using the padding schemes of PKCS#1 v2.1.";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Rasterific" = callPackage
    ({ mkDerivation, base, bytestring, containers, dlist, FontyFruity
     , free, JuicyPixels, mtl, primitive, vector, vector-algorithms
     }:
     mkDerivation {
       pname = "Rasterific";
       version = "0.6.1.1";
       sha256 = "0rc6lygqv5qaxlm7wfhh52w7vqdwzvjqif2csvab5pr1k65v51qq";
       libraryHaskellDepends = [
         base bytestring containers dlist FontyFruity free JuicyPixels mtl
         primitive vector vector-algorithms
       ];
       description = "A pure haskell drawing engine";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ReadArgs" = callPackage
    ({ mkDerivation, base, system-filepath, text }:
     mkDerivation {
       pname = "ReadArgs";
       version = "1.2.3";
       sha256 = "0s8s4nhl84qsr5a87gzjslcf4d9vvvzmcfl5g4gqa3czzafjljwz";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base system-filepath text ];
       executableHaskellDepends = [ base system-filepath text ];
       doCheck = false;
       homepage = "http://github.com/rampion/ReadArgs";
       description = "Simple command line argument parsing";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "RefSerialize" = callPackage
    ({ mkDerivation, base, binary, bytestring, containers, hashtables
     , stringsearch
     }:
     mkDerivation {
       pname = "RefSerialize";
       version = "0.3.1.4";
       sha256 = "1hl1jxdarqp59fs1sjvxpyhcazrnlm4iywysgkf3iqm56jfp2f6w";
       libraryHaskellDepends = [
         base binary bytestring containers hashtables stringsearch
       ];
       description = "Write to and read from ByteStrings maintaining internal memory references";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "RepLib" = callPackage
    ({ mkDerivation, base, containers, mtl, template-haskell
     , transformers
     }:
     mkDerivation {
       pname = "RepLib";
       version = "0.5.4";
       sha256 = "13c34k78fqvr3h1lvsa0kkwk2bv1cv3m27spp4429cafgbi4fr4q";
       libraryHaskellDepends = [
         base containers mtl template-haskell transformers
       ];
       homepage = "https://github.com/sweirich/replib";
       description = "Generic programming library with representation types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "SHA" = callPackage
    ({ mkDerivation, array, base, binary, bytestring, directory
     , QuickCheck, test-framework, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "SHA";
       version = "1.6.4.2";
       sha256 = "134ajm87fm4lpsw86m9q8apv20dw4bpk46raa389zr6bcdpifw64";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ array base binary bytestring ];
       executableHaskellDepends = [ base bytestring directory ];
       testHaskellDepends = [
         array base binary bytestring QuickCheck test-framework
         test-framework-quickcheck2
       ];
       description = "Implementations of the SHA suite of message digest functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "STMonadTrans" = callPackage
    ({ mkDerivation, array, base, Cabal, mtl }:
     mkDerivation {
       pname = "STMonadTrans";
       version = "0.3.4";
       sha256 = "04027xf92ynibq77p7cm0bfs98vbxamhv9009rhs379n23vmz4s4";
       libraryHaskellDepends = [ array base mtl ];
       testHaskellDepends = [ array base Cabal mtl ];
       description = "A monad transformer version of the ST monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "SVGFonts" = callPackage
    ({ mkDerivation, attoparsec, base, blaze-markup, blaze-svg
     , containers, data-default-class, diagrams-core, diagrams-lib
     , directory, parsec, split, text, tuple, vector, xml
     }:
     mkDerivation {
       pname = "SVGFonts";
       version = "1.5.0.1";
       sha256 = "1x2f9i6jrpjiicqs3ivaa8iganhc0qq5g372w5w9xs4l1ykk2d3v";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         attoparsec base blaze-markup blaze-svg containers
         data-default-class diagrams-core diagrams-lib directory parsec
         split text tuple vector xml
       ];
       description = "Fonts from the SVG-Font format";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "SafeSemaphore" = callPackage
    ({ mkDerivation, base, containers, HUnit, stm }:
     mkDerivation {
       pname = "SafeSemaphore";
       version = "0.10.1";
       sha256 = "0rpg9j6fy70i0b9dkrip9d6wim0nac0snp7qzbhykjkqlcvvgr91";
       revision = "1";
       editedCabalFile = "1k61gqgfh6n3sj8ni8sfvpcm39nqc2msjfxk2pgmhfabvv48w5hv";
       libraryHaskellDepends = [ base containers stm ];
       testHaskellDepends = [ base HUnit ];
       homepage = "https://github.com/ChrisKuklewicz/SafeSemaphore";
       description = "Much safer replacement for QSemN, QSem, and SampleVar";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "SegmentTree" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "SegmentTree";
       version = "0.3";
       sha256 = "1hagm0y9x2j1wcgk5ibxnlh2slnxfggn79cq20ws0zvd4yqw3231";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base ];
       description = "Data structure for querying the set (or count) of intervals covering given point";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ShellCheck" = callPackage
    ({ mkDerivation, base, containers, directory, json, mtl, parsec
     , process, QuickCheck, regex-tdfa
     }:
     mkDerivation {
       pname = "ShellCheck";
       version = "0.4.4";
       sha256 = "0s4793sgjdbbx885xiijrhwmi9qa8qhjqqf36w036vsvsa80gibc";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base containers directory json mtl parsec process QuickCheck
         regex-tdfa
       ];
       executableHaskellDepends = [
         base containers directory json mtl parsec QuickCheck regex-tdfa
       ];
       testHaskellDepends = [
         base containers directory json mtl parsec QuickCheck regex-tdfa
       ];
       homepage = "http://www.shellcheck.net/";
       description = "Shell script analysis tool";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "Spintax" = callPackage
    ({ mkDerivation, attoparsec, base, extra, mwc-random, text }:
     mkDerivation {
       pname = "Spintax";
       version = "0.1.0.1";
       sha256 = "1ryz6f2zi3zxfcacih33gksj4iw2zm5z750vr9l21hyf1lj9nx5z";
       libraryHaskellDepends = [ attoparsec base extra mwc-random text ];
       homepage = "https://github.com/MichelBoucey/spintax";
       description = "Random text generation based on spintax";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Spock" = callPackage
    ({ mkDerivation, base, base64-bytestring, bytestring, containers
     , cryptonite, focus, hashable, hspec, hspec-wai, http-types, hvect
     , list-t, monad-control, mtl, reroute, resource-pool, resourcet
     , Spock-core, stm, stm-containers, text, time, transformers
     , transformers-base, unordered-containers, vault, wai, wai-extra
     }:
     mkDerivation {
       pname = "Spock";
       version = "0.11.0.0";
       sha256 = "1cyylps49wnxm9hwcc4alynk14z5725mmwyl9gs2h3c6hcp27k4x";
       revision = "1";
       editedCabalFile = "1b3fwzbjfhlmisqrrr0brwwfxqggz2dqaqympbyyxyhxssm2vq92";
       libraryHaskellDepends = [
         base base64-bytestring bytestring containers cryptonite focus
         hashable http-types hvect list-t monad-control mtl reroute
         resource-pool resourcet Spock-core stm stm-containers text time
         transformers transformers-base unordered-containers vault wai
       ];
       testHaskellDepends = [
         base bytestring hspec hspec-wai Spock-core stm text time
         unordered-containers vault wai wai-extra
       ];
       homepage = "https://www.spock.li";
       description = "Another Haskell web framework for rapid development";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Spock-api" = callPackage
    ({ mkDerivation, aeson, base, deepseq, hvect, reroute }:
     mkDerivation {
       pname = "Spock-api";
       version = "0.11.0.0";
       sha256 = "0aga3aycfblavynmy87c6ha7n9b3gclxh92bf1z2wpyri6r74clr";
       libraryHaskellDepends = [ aeson base deepseq hvect reroute ];
       homepage = "https://www.spock.li";
       description = "Another Haskell web framework for rapid development";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Spock-api-server" = callPackage
    ({ mkDerivation, base, hvect, mtl, Spock-api, Spock-core }:
     mkDerivation {
       pname = "Spock-api-server";
       version = "0.11.0.0";
       sha256 = "0gdcavcwrdp4vxjcyn5wr5g88a7m7ads7ljjrkid8azdr9rgvl1m";
       libraryHaskellDepends = [ base hvect mtl Spock-api Spock-core ];
       homepage = "https://www.spock.li";
       description = "Another Haskell web framework for rapid development";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Spock-core" = callPackage
    ({ mkDerivation, aeson, base, base64-bytestring, bytestring
     , case-insensitive, containers, cookie, directory, hashable, hspec
     , hspec-wai, http-types, hvect, mtl, old-locale, path-pieces
     , reroute, resourcet, stm, text, time, transformers
     , unordered-containers, vault, wai, wai-extra, warp
     }:
     mkDerivation {
       pname = "Spock-core";
       version = "0.11.0.0";
       sha256 = "16ma8h92x5vn44yv77xf4p0ibx8z9z3g9qs5an7akhssir5rqcyn";
       libraryHaskellDepends = [
         aeson base base64-bytestring bytestring case-insensitive containers
         cookie directory hashable http-types hvect mtl old-locale
         path-pieces reroute resourcet stm text time transformers
         unordered-containers vault wai wai-extra warp
       ];
       testHaskellDepends = [
         base base64-bytestring bytestring hspec hspec-wai http-types
         reroute text time transformers unordered-containers wai
       ];
       homepage = "https://www.spock.li";
       description = "Another Haskell web framework for rapid development";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Spock-lucid" = callPackage
    ({ mkDerivation, base, blaze-builder, lucid, Spock, transformers }:
     mkDerivation {
       pname = "Spock-lucid";
       version = "0.3.0.0";
       sha256 = "0g3zf2gxcybh4kdz1vykk6drzb9jirdlfcx6cdx81wa5bl8ck4cj";
       libraryHaskellDepends = [
         base blaze-builder lucid Spock transformers
       ];
       homepage = "http://github.com/aelve/Spock-lucid";
       description = "Lucid support for Spock";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Spock-worker" = callPackage
    ({ mkDerivation, base, containers, errors, HTF, lifted-base, mtl
     , Spock, stm, text, time, transformers, vector
     }:
     mkDerivation {
       pname = "Spock-worker";
       version = "0.3.1.0";
       sha256 = "0jywfrfdaklncp0dwl5mhppa9a10yy980yw8xqxsna75kzahkh7d";
       libraryHaskellDepends = [
         base containers errors lifted-base mtl Spock stm text time
         transformers vector
       ];
       testHaskellDepends = [ base containers HTF stm vector ];
       homepage = "http://github.com/agrafix/Spock-worker";
       description = "Background workers for Spock";
       license = stdenv.lib.licenses.mit;
     }) {};
  "StateVar" = callPackage
    ({ mkDerivation, base, stm, transformers }:
     mkDerivation {
       pname = "StateVar";
       version = "1.1.0.4";
       sha256 = "1dzz9l0haswgag9x56q7n57kw18v7nhmzkjyr61nz9y9npn8vmks";
       libraryHaskellDepends = [ base stm transformers ];
       homepage = "https://github.com/haskell-opengl/StateVar";
       description = "State variables";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Strafunski-StrategyLib" = callPackage
    ({ mkDerivation, base, directory, mtl, syb, transformers }:
     mkDerivation {
       pname = "Strafunski-StrategyLib";
       version = "5.0.0.10";
       sha256 = "1hhcx0arzyrw8ij5ispnqysbipxyznbs5g9pkmy63fzn3l2im2ih";
       libraryHaskellDepends = [ base directory mtl syb transformers ];
       description = "Library for strategic programming";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "TCache" = callPackage
    ({ mkDerivation, base, bytestring, containers, directory
     , hashtables, mtl, old-time, RefSerialize, stm, text
     }:
     mkDerivation {
       pname = "TCache";
       version = "0.12.0";
       sha256 = "0marslz5jg66r3i2d0yjjrj11bpywpadcxs5k4j6782iczxybd7s";
       libraryHaskellDepends = [
         base bytestring containers directory hashtables mtl old-time
         RefSerialize stm text
       ];
       description = "A Transactional cache with user-defined persistence";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Unixutils" = callPackage
    ({ mkDerivation, base, bytestring, directory, exceptions, filepath
     , mtl, process, process-extras, pureMD5, regex-tdfa, unix, zlib
     }:
     mkDerivation {
       pname = "Unixutils";
       version = "1.54.1";
       sha256 = "0i16fg24n6lwn3jlh09bxdv1ip06ympkfvwmcj1nbcjcfhlmaagr";
       libraryHaskellDepends = [
         base bytestring directory exceptions filepath mtl process
         process-extras pureMD5 regex-tdfa unix zlib
       ];
       homepage = "https://github.com/seereason/haskell-unixutils.git";
       description = "A crude interface between Haskell and Unix-like operating systems";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ViennaRNAParser" = callPackage
    ({ mkDerivation, base, hspec, parsec, process, transformers }:
     mkDerivation {
       pname = "ViennaRNAParser";
       version = "1.2.9";
       sha256 = "06djxygy06pynwr5g707qvs7j9dqm220fycysihh82kiw169ds7l";
       libraryHaskellDepends = [ base parsec process transformers ];
       testHaskellDepends = [ base hspec parsec ];
       description = "Libary for parsing ViennaRNA package output";
       license = "GPL";
     }) {};
  "Win32" = callPackage
    ({ mkDerivation, advapi32, base, bytestring, gdi32, shell32
     , shfolder, user32, winmm
     }:
     mkDerivation {
       pname = "Win32";
       version = "2.3.1.1";
       sha256 = "1255qx2a2ff95x9f5qg5k9cgy7s5j19vh9gybfa9xfqkkv5gcmsw";
       libraryHaskellDepends = [ base bytestring ];
       librarySystemDepends = [
         advapi32 gdi32 shell32 shfolder user32 winmm
       ];
       homepage = "https://github.com/haskell/win32";
       description = "A binding to part of the Win32 library";
       license = stdenv.lib.licenses.bsd3;
       platforms = stdenv.lib.platforms.none;
     }) {advapi32 = null; gdi32 = null; shell32 = null; shfolder = null;
         user32 = null; winmm = null;};
  "Win32-extras" = callPackage
    ({ mkDerivation, base, imm32, msimg32, Win32 }:
     mkDerivation {
       pname = "Win32-extras";
       version = "0.2.0.1";
       sha256 = "00lrqvsa74mqv0k4yz00j2jdpmchkyhcicqv24z9a53iv1i0xp7h";
       libraryHaskellDepends = [ base Win32 ];
       librarySystemDepends = [ imm32 msimg32 ];
       homepage = "http://hub.darcs.net/shelarcy/Win32-extras/";
       description = "Provides missing Win32 API";
       license = stdenv.lib.licenses.bsd3;
     }) {imm32 = null; msimg32 = null;};
  "Win32-notify" = callPackage
    ({ mkDerivation, base, containers, directory, Win32 }:
     mkDerivation {
       pname = "Win32-notify";
       version = "0.3.0.1";
       sha256 = "0zzbb00rykl8y1prkcm3paaamhmdrqji34070b9zg7sg2pc5k4f4";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base containers directory Win32 ];
       executableHaskellDepends = [ base directory ];
       description = "A binding to part of the Win32 library for file notification";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Workflow" = callPackage
    ({ mkDerivation, base, binary, bytestring, containers, directory
     , exceptions, extensible-exceptions, mtl, old-time, RefSerialize
     , stm, TCache, vector
     }:
     mkDerivation {
       pname = "Workflow";
       version = "0.8.3";
       sha256 = "08r1s840771z1gy44dj3xc6ary7gk3ka3zvji5pmgzi998x4p6y8";
       revision = "1";
       editedCabalFile = "0jy6hn1lx9wpq44ld96msgb6a2hb6cvryn1a39b4rq4iy3m45r8v";
       libraryHaskellDepends = [
         base binary bytestring containers directory exceptions
         extensible-exceptions mtl old-time RefSerialize stm TCache vector
       ];
       description = "Workflow patterns over a monad for thread state logging & recovery";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "X11" = callPackage
    ({ mkDerivation, base, data-default, libX11, libXext, libXinerama
     , libXrandr, libXrender
     }:
     mkDerivation {
       pname = "X11";
       version = "1.6.1.2";
       sha256 = "1kzjcynm3rr83ihqx2y2d852jc49da4p18gv6jzm7g87z22x85jj";
       libraryHaskellDepends = [ base data-default ];
       librarySystemDepends = [
         libX11 libXext libXinerama libXrandr libXrender
       ];
       homepage = "https://github.com/haskell-pkg-janitors/X11";
       description = "A binding to the X11 graphics library";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs.xorg) libX11; inherit (pkgs.xorg) libXext;
         inherit (pkgs.xorg) libXinerama; inherit (pkgs.xorg) libXrandr;
         inherit (pkgs.xorg) libXrender;};
  "Xauth" = callPackage
    ({ mkDerivation, base, libXau }:
     mkDerivation {
       pname = "Xauth";
       version = "0.1";
       sha256 = "1mvflp6y1nz9961gngbwk0b7wr8sx3p6296jfvvb6ln1kvm2scxs";
       libraryHaskellDepends = [ base ];
       libraryPkgconfigDepends = [ libXau ];
       description = "A binding to the X11 authentication library";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs.xorg) libXau;};
  "Yampa" = callPackage
    ({ mkDerivation, base, deepseq, random }:
     mkDerivation {
       pname = "Yampa";
       version = "0.10.5";
       sha256 = "1mznkhlrdiqszx7y6j6jpy4bnbb4ilkxi79fzd3b44zrj48gpdgb";
       libraryHaskellDepends = [ base deepseq random ];
       testHaskellDepends = [ base ];
       homepage = "http://www.haskell.org/haskellwiki/Yampa";
       description = "Library for programming hybrid systems";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "YampaSynth" = callPackage
    ({ mkDerivation, array, base, bytestring, containers, HCodecs
     , Yampa
     }:
     mkDerivation {
       pname = "YampaSynth";
       version = "0.2";
       sha256 = "028a7lrfyikvky52s19kffssnry1grnip3sm7z55bs5fazma1im1";
       isLibrary = false;
       isExecutable = true;
       enableSeparateDataOutput = true;
       executableHaskellDepends = [
         array base bytestring containers HCodecs Yampa
       ];
       doHaddock = false;
       homepage = "http://www-db.informatik.uni-tuebingen.de/team/giorgidze";
       description = "Software synthesizer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "abstract-deque" = callPackage
    ({ mkDerivation, array, base, containers, random, time }:
     mkDerivation {
       pname = "abstract-deque";
       version = "0.3";
       sha256 = "18jwswjxwzc9bjiy4ds6hw2a74ki797jmfcifxd2ga4kh7ri1ah9";
       libraryHaskellDepends = [ array base containers random time ];
       homepage = "https://github.com/rrnewton/haskell-lockfree/wiki";
       description = "Abstract, parameterized interface to mutable Deques";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "abstract-par" = callPackage
    ({ mkDerivation, base, deepseq }:
     mkDerivation {
       pname = "abstract-par";
       version = "0.3.3";
       sha256 = "0q6qsniw4wks2pw6wzncb1p1j3k6al5njnvm2v5n494hplwqg2i4";
       libraryHaskellDepends = [ base deepseq ];
       homepage = "https://github.com/simonmar/monad-par";
       description = "Type classes generalizing the functionality of the 'monad-par' library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "accelerate" = callPackage
    ({ mkDerivation, array, base, containers, fclabels, ghc-prim
     , hashable, hashtables, pretty, template-haskell
     , unordered-containers
     }:
     mkDerivation {
       pname = "accelerate";
       version = "0.15.1.0";
       sha256 = "07bbam9za0g15vm0h0p9dypblw2f709v4qmvc52jcvmsv1drl3yv";
       revision = "1";
       editedCabalFile = "0dgzfcc2yjxqq5llvm19lak16ymsqghalm33y0calgp07fwkp1hj";
       libraryHaskellDepends = [
         array base containers fclabels ghc-prim hashable hashtables pretty
         template-haskell unordered-containers
       ];
       homepage = "https://github.com/AccelerateHS/accelerate/";
       description = "An embedded language for accelerated array processing";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "accuerr" = callPackage
    ({ mkDerivation, base, bifunctors, lens, semigroups }:
     mkDerivation {
       pname = "accuerr";
       version = "0.2.0.2";
       sha256 = "0dlszai5bz05algxm98kjhnjwa7mwj620d52vrsc4fxds8q84sjg";
       libraryHaskellDepends = [ base bifunctors lens semigroups ];
       homepage = "http://www.github.com/massysett/accuerr";
       description = "Data type like Either but with accumulating error type";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ace" = callPackage
    ({ mkDerivation, attoparsec, base, bifunctors, blaze-html
     , blaze-markup, data-default, hspec, HUnit, mtl, parsec, text
     }:
     mkDerivation {
       pname = "ace";
       version = "0.6";
       sha256 = "0f07j2rj9ylvdrijwwlpx66mj503mhjfq1x2mylpxkr6kmjjniyk";
       libraryHaskellDepends = [
         attoparsec base blaze-html blaze-markup data-default parsec text
       ];
       testHaskellDepends = [
         base bifunctors hspec HUnit mtl parsec text
       ];
       description = "Attempto Controlled English parser and printer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "acid-state" = callPackage
    ({ mkDerivation, array, base, bytestring, cereal, containers
     , criterion, directory, extensible-exceptions, filepath, mtl
     , network, random, safecopy, stm, system-fileio, system-filepath
     , template-haskell, unix
     }:
     mkDerivation {
       pname = "acid-state";
       version = "0.14.2";
       sha256 = "1h75xc2xrxy3hfphni4l4s0cij1qiw1kwk3n6g1f2w28rfxixp46";
       libraryHaskellDepends = [
         array base bytestring cereal containers directory
         extensible-exceptions filepath mtl network safecopy stm
         template-haskell unix
       ];
       benchmarkHaskellDepends = [
         base criterion directory mtl random system-fileio system-filepath
       ];
       homepage = "http://acid-state.seize.it/";
       description = "Add ACID guarantees to any serializable Haskell data structure";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "action-permutations" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "action-permutations";
       version = "0.0.0.1";
       sha256 = "0rhlzpwshixpnqma7sk28f22dkwz39b6lcwnzmd31rcnz5cyw6d4";
       libraryHaskellDepends = [ base ];
       description = "Execute a set of actions (e.g. parsers) in each possible order";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "active" = callPackage
    ({ mkDerivation, base, lens, linear, QuickCheck, semigroupoids
     , semigroups, vector
     }:
     mkDerivation {
       pname = "active";
       version = "0.2.0.10";
       sha256 = "1cbqrqmh4gb5635piqprw0cnjd8vzcg3vfklz51bl2v9gapb0688";
       libraryHaskellDepends = [
         base lens linear semigroupoids semigroups vector
       ];
       testHaskellDepends = [
         base lens linear QuickCheck semigroupoids semigroups vector
       ];
       description = "Abstractions for animation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ad" = callPackage
    ({ mkDerivation, array, base, comonad, containers, criterion
     , data-reify, directory, doctest, erf, filepath, free, nats
     , reflection, transformers
     }:
     mkDerivation {
       pname = "ad";
       version = "4.3.2.1";
       sha256 = "17g32c265spvy6rnyqdyc54rqazkfi646mk96958y20ayqj5bpl4";
       libraryHaskellDepends = [
         array base comonad containers data-reify erf free nats reflection
         transformers
       ];
       testHaskellDepends = [ base directory doctest filepath ];
       benchmarkHaskellDepends = [ base criterion erf ];
       homepage = "http://github.com/ekmett/ad";
       description = "Automatic Differentiation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "adjunctions" = callPackage
    ({ mkDerivation, array, base, comonad, containers, contravariant
     , distributive, free, mtl, profunctors, semigroupoids, semigroups
     , tagged, transformers, transformers-compat, void
     }:
     mkDerivation {
       pname = "adjunctions";
       version = "4.3";
       sha256 = "1k1ykisf96i4g2zm47c45md7p42c4vsp9r73392pz1g8mx7s2j5r";
       revision = "1";
       editedCabalFile = "1079l9szyr7ybi9wcvv1vjsjfrqirkn9z3j7dann8vbk81a4z37q";
       libraryHaskellDepends = [
         array base comonad containers contravariant distributive free mtl
         profunctors semigroupoids semigroups tagged transformers
         transformers-compat void
       ];
       homepage = "http://github.com/ekmett/adjunctions/";
       description = "Adjunctions and representable functors";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "adler32" = callPackage
    ({ mkDerivation, base, bytestring, hspec, zlib }:
     mkDerivation {
       pname = "adler32";
       version = "0.1.1.0";
       sha256 = "1v18d4xfbgqflx957xy6wiv7zhkgimpy85fy49d91p2ifkmbk32p";
       libraryHaskellDepends = [ base bytestring ];
       librarySystemDepends = [ zlib ];
       testHaskellDepends = [ base bytestring hspec ];
       homepage = "https://github.com/redneb/hs-adler32";
       description = "An implementation of Adler-32, supporting rolling checksum operation";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) zlib;};
  "aeson" = callPackage
    ({ mkDerivation, attoparsec, base, base-orphans, bytestring
     , containers, deepseq, dlist, fail, ghc-prim, hashable, HUnit, mtl
     , QuickCheck, quickcheck-instances, scientific, syb, tagged
     , template-haskell, test-framework, test-framework-hunit
     , test-framework-quickcheck2, text, time, transformers
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "aeson";
       version = "0.11.3.0";
       sha256 = "1sgcjmf945hazdfx7iyr60w0x9l3y292q2k13zcjihl1g32zl9pk";
       libraryHaskellDepends = [
         attoparsec base bytestring containers deepseq dlist fail ghc-prim
         hashable mtl scientific syb tagged template-haskell text time
         transformers unordered-containers vector
       ];
       testHaskellDepends = [
         attoparsec base base-orphans bytestring containers ghc-prim
         hashable HUnit QuickCheck quickcheck-instances tagged
         template-haskell test-framework test-framework-hunit
         test-framework-quickcheck2 text time unordered-containers vector
       ];
       homepage = "https://github.com/bos/aeson";
       description = "Fast JSON parsing and encoding";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "aeson-better-errors" = callPackage
    ({ mkDerivation, aeson, base, bytestring, dlist, mtl, scientific
     , text, transformers, transformers-compat, unordered-containers
     , vector, void
     }:
     mkDerivation {
       pname = "aeson-better-errors";
       version = "0.9.1.0";
       sha256 = "09vkyrhwak3bmpfsqcd2az8hfqqkxyhg468hv5avgisy0nzh3w38";
       libraryHaskellDepends = [
         aeson base bytestring dlist mtl scientific text transformers
         transformers-compat unordered-containers vector void
       ];
       homepage = "https://github.com/hdgarrood/aeson-better-errors";
       description = "Better error messages when decoding JSON values";
       license = stdenv.lib.licenses.mit;
     }) {};
  "aeson-casing" = callPackage
    ({ mkDerivation, aeson, base, tasty, tasty-hunit, tasty-quickcheck
     , tasty-th
     }:
     mkDerivation {
       pname = "aeson-casing";
       version = "0.1.0.5";
       sha256 = "0xq587sqn68gnx1np035wl5j1341v19h26d7b1c06bw2qqymdv6g";
       libraryHaskellDepends = [ aeson base ];
       testHaskellDepends = [
         aeson base tasty tasty-hunit tasty-quickcheck tasty-th
       ];
       description = "Tools to change the formatting of field names in Aeson instances";
       license = stdenv.lib.licenses.mit;
     }) {};
  "aeson-compat" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, base-compat, base-orphans
     , bytestring, containers, exceptions, hashable, nats, QuickCheck
     , quickcheck-instances, scientific, semigroups, tagged, tasty
     , tasty-hunit, tasty-quickcheck, text, time, time-locale-compat
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "aeson-compat";
       version = "0.3.6";
       sha256 = "0hnifh46g218ih666gha3r0hp8bahcl9aj1rr4jqyw2gykcnb8vs";
       revision = "4";
       editedCabalFile = "18qic0h6ymp11cz3fagr9f1azkl3jby0srvx8088ky093cfnyksk";
       libraryHaskellDepends = [
         aeson attoparsec base base-compat bytestring containers exceptions
         hashable nats scientific semigroups tagged text time
         time-locale-compat unordered-containers vector
       ];
       testHaskellDepends = [
         aeson attoparsec base base-compat base-orphans bytestring
         containers exceptions hashable nats QuickCheck quickcheck-instances
         scientific semigroups tagged tasty tasty-hunit tasty-quickcheck
         text time time-locale-compat unordered-containers vector
       ];
       homepage = "https://github.com/phadej/aeson-compat#readme";
       description = "Compatibility layer for aeson";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "aeson-generic-compat" = callPackage
    ({ mkDerivation, aeson, base }:
     mkDerivation {
       pname = "aeson-generic-compat";
       version = "0.0.1.0";
       sha256 = "1bfkj0hmnpw6f5iql86iky3ivj4hv7f8a317gv7g8l0k6m6mx86l";
       libraryHaskellDepends = [ aeson base ];
       description = "Compatible generic class names of Aeson";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "aeson-injector" = callPackage
    ({ mkDerivation, aeson, base, bifunctors, deepseq, HUnit, lens
     , QuickCheck, quickcheck-text, scientific, servant-docs, swagger2
     , tasty, tasty-hunit, tasty-quickcheck, text, unordered-containers
     , vector
     }:
     mkDerivation {
       pname = "aeson-injector";
       version = "1.0.6.0";
       sha256 = "13fp4i07gqdq05yff23kf9kz61052fys14sd7gmi6n5mnga6h2iw";
       libraryHaskellDepends = [
         aeson base bifunctors deepseq lens servant-docs swagger2 text
         unordered-containers
       ];
       testHaskellDepends = [
         aeson base HUnit lens QuickCheck quickcheck-text scientific
         swagger2 tasty tasty-hunit tasty-quickcheck text vector
       ];
       description = "Injecting fields into aeson values";
       license = stdenv.lib.licenses.mit;
     }) {};
  "aeson-pretty" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, base-compat, bytestring
     , cmdargs, scientific, text, unordered-containers, vector
     }:
     mkDerivation {
       pname = "aeson-pretty";
       version = "0.8.2";
       sha256 = "1c5r1w1hcv297pmj9yjpz9al22k3mh61gimi37wddga02212kd3c";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base base-compat bytestring scientific text
         unordered-containers vector
       ];
       executableHaskellDepends = [
         aeson attoparsec base bytestring cmdargs
       ];
       homepage = "http://github.com/informatikr/aeson-pretty";
       description = "JSON pretty-printing library and command-line tool";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "aeson-qq" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, base-compat, ghc-prim
     , haskell-src-meta, hspec, parsec, scientific, template-haskell
     , text, vector
     }:
     mkDerivation {
       pname = "aeson-qq";
       version = "0.8.1";
       sha256 = "1z8kh3qjc4khadz1ijdqm7fbk7dh17sisqhpwd3c9aibj2927k9d";
       libraryHaskellDepends = [
         aeson attoparsec base base-compat haskell-src-meta parsec
         scientific template-haskell text vector
       ];
       testHaskellDepends = [
         aeson attoparsec base base-compat ghc-prim haskell-src-meta hspec
         parsec scientific template-haskell text vector
       ];
       homepage = "http://github.com/zalora/aeson-qq";
       description = "JSON quasiquoter for Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};
  "aeson-utils" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, bytestring, scientific
     , text
     }:
     mkDerivation {
       pname = "aeson-utils";
       version = "0.3.0.2";
       sha256 = "07sbvmm158yqmw4hri9l66ag4r6l59x230gbjm9r97w4x0dlp0bi";
       revision = "4";
       editedCabalFile = "03h2nxssjkqxni91f332p9nwbpiqlv74v68l2k9lh7lc2r4q0m28";
       libraryHaskellDepends = [
         aeson attoparsec base bytestring scientific text
       ];
       description = "Utilities for working with Aeson";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "airship" = callPackage
    ({ mkDerivation, attoparsec, base, base64-bytestring, blaze-builder
     , bytestring, bytestring-trie, case-insensitive, containers
     , cryptohash, directory, either, filepath, http-date, http-media
     , http-types, lifted-base, microlens, mime-types, mmorph
     , monad-control, mtl, network, old-locale, random, tasty
     , tasty-hunit, tasty-quickcheck, text, time, transformers
     , transformers-base, unix, unordered-containers, wai, wai-extra
     }:
     mkDerivation {
       pname = "airship";
       version = "0.6.0";
       sha256 = "1mhz0mqq57xsxi4m9r7aznrn7d4vxl4b2jalv7gm3kfzqpjjpjp4";
       libraryHaskellDepends = [
         attoparsec base base64-bytestring blaze-builder bytestring
         bytestring-trie case-insensitive containers cryptohash directory
         either filepath http-date http-media http-types lifted-base
         microlens mime-types mmorph monad-control mtl network old-locale
         random text time transformers transformers-base unix
         unordered-containers wai wai-extra
       ];
       testHaskellDepends = [
         base bytestring tasty tasty-hunit tasty-quickcheck text
         transformers wai
       ];
       homepage = "https://github.com/helium/airship/";
       description = "A Webmachine-inspired HTTP library";
       license = stdenv.lib.licenses.mit;
     }) {};
  "alarmclock" = callPackage
    ({ mkDerivation, async, base, clock, stm, time, unbounded-delays }:
     mkDerivation {
       pname = "alarmclock";
       version = "0.4.0.2";
       sha256 = "077950dzy89042l8dbm1vc7mvqrkbsdmrq3cj78j3lfyr4m42k58";
       libraryHaskellDepends = [
         async base clock stm time unbounded-delays
       ];
       homepage = "https://bitbucket.org/davecturner/alarmclock";
       description = "Wake up and perform an action at a certain time";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "alex" = callPackage
    ({ mkDerivation, array, base, containers, directory, happy, process
     , QuickCheck
     }:
     mkDerivation {
       pname = "alex";
       version = "3.1.7";
       sha256 = "1l98px4df5l6rhqb6lkpav0gf7495qw795cd903b1gnclqys38c9";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         array base containers directory QuickCheck
       ];
       executableToolDepends = [ happy ];
       testHaskellDepends = [ base process ];
       doHaddock = false;
       homepage = "http://www.haskell.org/alex/";
       description = "Alex is a tool for generating lexical analysers in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "amazonka" = callPackage
    ({ mkDerivation, amazonka-core, base, bytestring, conduit
     , conduit-extra, directory, exceptions, http-conduit, ini, mmorph
     , monad-control, mtl, resourcet, retry, tasty, tasty-hunit, text
     , time, transformers, transformers-base, transformers-compat
     }:
     mkDerivation {
       pname = "amazonka";
       version = "1.4.3";
       sha256 = "11k6q8qddw53qfa72analb5wd08zrcs2s9gw4jl5ipsmswb7iahq";
       libraryHaskellDepends = [
         amazonka-core base bytestring conduit conduit-extra directory
         exceptions http-conduit ini mmorph monad-control mtl resourcet
         retry text time transformers transformers-base transformers-compat
       ];
       testHaskellDepends = [ base tasty tasty-hunit ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Comprehensive Amazon Web Services SDK";
       license = "unknown";
     }) {};
  "amazonka-apigateway" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-apigateway";
       version = "1.4.3";
       sha256 = "0j6rji434cx8zzgykl417p1iwpic4iw0ngwzlk95l9b5lkd9bzkl";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon API Gateway SDK";
       license = "unknown";
     }) {};
  "amazonka-application-autoscaling" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-application-autoscaling";
       version = "1.4.3";
       sha256 = "0v3g16nfcca959rqh1jaij2jlnxxa3sw1qgkg07anma3b6dsa1jm";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Application Auto Scaling SDK";
       license = "unknown";
     }) {};
  "amazonka-autoscaling" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-autoscaling";
       version = "1.4.3";
       sha256 = "1px3dyk58y2gll5vq98xamp747iahvsr45ysncxawk5mflmm0isa";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Auto Scaling SDK";
       license = "unknown";
     }) {};
  "amazonka-certificatemanager" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-certificatemanager";
       version = "1.4.3";
       sha256 = "0m8dwgrh3bvhr9d4r317kr1vf3hxg8fkr9fv54xgb40xb2aqy8ni";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Certificate Manager SDK";
       license = "unknown";
     }) {};
  "amazonka-cloudformation" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-cloudformation";
       version = "1.4.3";
       sha256 = "143nrmajxk91fc2p2fx2s9zjcfq6ghnr1092mw4gvp9mppg6j81v";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon CloudFormation SDK";
       license = "unknown";
     }) {};
  "amazonka-cloudfront" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-cloudfront";
       version = "1.4.3";
       sha256 = "1gpcmcci3l152dd7cg5kw06dx5rsg0snhjdngvwmbh4wsfqcqhaj";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon CloudFront SDK";
       license = "unknown";
     }) {};
  "amazonka-cloudhsm" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-cloudhsm";
       version = "1.4.3";
       sha256 = "0hqc431whm7bbqrbjxn3yhdqh6v2dklj5lbj3px7b35m36b9hj38";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon CloudHSM SDK";
       license = "unknown";
     }) {};
  "amazonka-cloudsearch" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-cloudsearch";
       version = "1.4.3";
       sha256 = "09hckh4v0cfqigl6vna0hb0l06hvzl099mcxiikzlnim4ifif9ki";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon CloudSearch SDK";
       license = "unknown";
     }) {};
  "amazonka-cloudsearch-domains" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-cloudsearch-domains";
       version = "1.4.3";
       sha256 = "0z9zahn5q6spkinan93ds89ks7vjwwlh1ifabs27rljvhj4cn5j4";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon CloudSearch Domain SDK";
       license = "unknown";
     }) {};
  "amazonka-cloudtrail" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-cloudtrail";
       version = "1.4.3";
       sha256 = "0vzsfypakryq646b6fj515hy3g76w5bs7daf2khp2gypw1w4rsh4";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon CloudTrail SDK";
       license = "unknown";
     }) {};
  "amazonka-cloudwatch" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-cloudwatch";
       version = "1.4.3";
       sha256 = "0prdqa0cnq5icrb2zarnr4d1ky3pd1bl3gpn6q3w1x7xifhngpwq";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon CloudWatch SDK";
       license = "unknown";
     }) {};
  "amazonka-cloudwatch-events" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-cloudwatch-events";
       version = "1.4.3";
       sha256 = "0mnz2c3n53r2nqb3c6k3af6kfb8gc1b97mmi73hm28a09hz9x0zv";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon CloudWatch Events SDK";
       license = "unknown";
     }) {};
  "amazonka-cloudwatch-logs" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-cloudwatch-logs";
       version = "1.4.3";
       sha256 = "0q814sp92b6k3gnhap3yfx70y6ifp7x212wx3jdm356mn881f86y";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon CloudWatch Logs SDK";
       license = "unknown";
     }) {};
  "amazonka-codecommit" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-codecommit";
       version = "1.4.3";
       sha256 = "0swn8zah1ch19zxfb5aazci8mfyd2jl67822fa67rjxw0cr073gy";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon CodeCommit SDK";
       license = "unknown";
     }) {};
  "amazonka-codedeploy" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-codedeploy";
       version = "1.4.3";
       sha256 = "1ncjaf61barpbszbpppqmbgi591f5xgfcqwpmgn8yhkjfjpx65nj";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon CodeDeploy SDK";
       license = "unknown";
     }) {};
  "amazonka-codepipeline" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-codepipeline";
       version = "1.4.3";
       sha256 = "1cgx4valskv92kv96vwnaq7ilhgs1dw8rj0h2cahh24ak57q48i4";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon CodePipeline SDK";
       license = "unknown";
     }) {};
  "amazonka-cognito-identity" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-cognito-identity";
       version = "1.4.3";
       sha256 = "0cmjpybkh7zyb7q4nrgln6q98ww2xpkxzj4fj9gdlxayh67s2nm4";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Cognito Identity SDK";
       license = "unknown";
     }) {};
  "amazonka-cognito-idp" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-cognito-idp";
       version = "1.4.3";
       sha256 = "1qj0p755sbiy102pky8brv5pl00bwaslpmqbah0ngjpmmiw3phm7";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Cognito Identity Provider SDK";
       license = "unknown";
     }) {};
  "amazonka-cognito-sync" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-cognito-sync";
       version = "1.4.3";
       sha256 = "1rvbd5xf2i467ccxpakr9sh4iync0izxkn3ba3wxdsa4vpb8992i";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Cognito Sync SDK";
       license = "unknown";
     }) {};
  "amazonka-config" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-config";
       version = "1.4.3";
       sha256 = "0rp210sp512yp6w7a01whwzn85830hgzc3hqb5dcas8j1sr0bhfr";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Config SDK";
       license = "unknown";
     }) {};
  "amazonka-core" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, bifunctors, bytestring
     , case-insensitive, conduit, conduit-extra, cryptonite, deepseq
     , exceptions, hashable, http-conduit, http-types, lens, memory, mtl
     , QuickCheck, quickcheck-unicode, resourcet, scientific, semigroups
     , tagged, tasty, tasty-hunit, tasty-quickcheck, template-haskell
     , text, time, transformers, transformers-compat
     , unordered-containers, xml-conduit, xml-types
     }:
     mkDerivation {
       pname = "amazonka-core";
       version = "1.4.3";
       sha256 = "1l7ais9l9y67l2igb7zc6fs0960wcg72slnkaivbq35v0ihy4w42";
       revision = "1";
       editedCabalFile = "1fjd4nsrbyi1cbjxji2yp94r4pv0ki221hdnkbwp4c1jixw3paf2";
       libraryHaskellDepends = [
         aeson attoparsec base bifunctors bytestring case-insensitive
         conduit conduit-extra cryptonite deepseq exceptions hashable
         http-conduit http-types lens memory mtl resourcet scientific
         semigroups tagged text time transformers transformers-compat
         unordered-containers xml-conduit xml-types
       ];
       testHaskellDepends = [
         aeson base bytestring case-insensitive http-types QuickCheck
         quickcheck-unicode tasty tasty-hunit tasty-quickcheck
         template-haskell text time
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Core data types and functionality for Amazonka libraries";
       license = "unknown";
     }) {};
  "amazonka-datapipeline" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-datapipeline";
       version = "1.4.3";
       sha256 = "10fpygxb0ssb8y8d863rbdv15ln150p859zhnmszr9j7y9rkifq4";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Data Pipeline SDK";
       license = "unknown";
     }) {};
  "amazonka-devicefarm" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-devicefarm";
       version = "1.4.3";
       sha256 = "1k9m7ld51rbv5bgfgmpdkx765rl8pnkkxd18ss4vzj3a2sjqkb1n";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Device Farm SDK";
       license = "unknown";
     }) {};
  "amazonka-directconnect" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-directconnect";
       version = "1.4.3";
       sha256 = "0z9w2fx62zwg527ww93rbc812rvk03km0mpwhhy03cmgm2h7vxln";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Direct Connect SDK";
       license = "unknown";
     }) {};
  "amazonka-discovery" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-discovery";
       version = "1.4.3";
       sha256 = "0prn97n5jipdvrg00v8fd7x9flpc7vpivjvih710gjj43mhc1rxz";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Application Discovery Service SDK";
       license = "unknown";
     }) {};
  "amazonka-dms" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-dms";
       version = "1.4.3";
       sha256 = "1zzqcs033wqh51mbzhxga321ds2h83n2r4xrgaqclxi1q8myf50p";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Database Migration Service SDK";
       license = "unknown";
     }) {};
  "amazonka-ds" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-ds";
       version = "1.4.3";
       sha256 = "0077ryxw1y923j0n0isc7bmk57m9pms52nam80kz54r0qnskwhyk";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Directory Service SDK";
       license = "unknown";
     }) {};
  "amazonka-dynamodb" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-dynamodb";
       version = "1.4.3";
       sha256 = "0lnnwhl55f924p6f3glipgljxmz219jmq6q36higpxgwhig6k79h";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon DynamoDB SDK";
       license = "unknown";
     }) {};
  "amazonka-dynamodb-streams" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-dynamodb-streams";
       version = "1.4.3";
       sha256 = "1i86ja3d4jnbmz5j12vdiw6my7qvvw392551vb8kh543pnymdk31";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon DynamoDB Streams SDK";
       license = "unknown";
     }) {};
  "amazonka-ec2" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-ec2";
       version = "1.4.3";
       sha256 = "1dy1gif04kc2f3fk1fxvqk0hqygmn7vv3mjcsi896v8r07krisya";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Elastic Compute Cloud SDK";
       license = "unknown";
     }) {};
  "amazonka-ecr" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-ecr";
       version = "1.4.3";
       sha256 = "0q8qgdnp4jgg2k80fm6v96ridzscdj6jx3yzqyprrf5lirf4ghg9";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon EC2 Container Registry SDK";
       license = "unknown";
     }) {};
  "amazonka-ecs" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-ecs";
       version = "1.4.3";
       sha256 = "0w942pwxvy061j7c7w02mar21na7rwsb2k3iasb7lpv0d3daf42c";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon EC2 Container Service SDK";
       license = "unknown";
     }) {};
  "amazonka-efs" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-efs";
       version = "1.4.3";
       sha256 = "00c3gagkv78illda1vylrf3aqkbjiazvy7xdx7hp9rsi8icm8l66";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Elastic File System SDK";
       license = "unknown";
     }) {};
  "amazonka-elasticache" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-elasticache";
       version = "1.4.3";
       sha256 = "0ygq621fidmvw8pdjdbamjh5s9p2176144ys03fn4myvyphi4fb7";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon ElastiCache SDK";
       license = "unknown";
     }) {};
  "amazonka-elasticbeanstalk" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-elasticbeanstalk";
       version = "1.4.3";
       sha256 = "16xxdwlnrcavhifcnqycf9r8z97vyc4byhnw0mk95wzwfzj30mv7";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Elastic Beanstalk SDK";
       license = "unknown";
     }) {};
  "amazonka-elasticsearch" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-elasticsearch";
       version = "1.4.3";
       sha256 = "1m8ls24z0k2is6rk8qvs59pa41iaydvk5wbyikgs1rvcjh8ijywy";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Elasticsearch Service SDK";
       license = "unknown";
     }) {};
  "amazonka-elastictranscoder" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-elastictranscoder";
       version = "1.4.3";
       sha256 = "0bwbrcygiw9pf12m7l8b38jfn5nggg81fh9v20vilhpmai756pcs";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Elastic Transcoder SDK";
       license = "unknown";
     }) {};
  "amazonka-elb" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-elb";
       version = "1.4.3";
       sha256 = "0midplqaf0y56xz9aikdggjinsx0yrgdpbsh86szxa2hzyfykyl1";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Elastic Load Balancing SDK";
       license = "unknown";
     }) {};
  "amazonka-emr" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-emr";
       version = "1.4.3";
       sha256 = "0xcfz9kq28hjdm5s1qm9za4wp8hfxmw3l4wwm22sasza0sdbc6mk";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Elastic MapReduce SDK";
       license = "unknown";
     }) {};
  "amazonka-gamelift" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-gamelift";
       version = "1.4.3";
       sha256 = "0ab4fq1vcyfw5v6sn0nphj09rb2dadqf4xl6hjrc39l37mg8zyn7";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon GameLift SDK";
       license = "unknown";
     }) {};
  "amazonka-glacier" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-glacier";
       version = "1.4.3";
       sha256 = "1v4bfg308mpkbdz9csy0dj69r5njrix6zyilln4s5szc2c7a3pyx";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Glacier SDK";
       license = "unknown";
     }) {};
  "amazonka-iam" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-iam";
       version = "1.4.3";
       sha256 = "0d1p4k48ck98hr0qj3jy6b9dlyah47vk6k3d4i8w79glx73xq222";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Identity and Access Management SDK";
       license = "unknown";
     }) {};
  "amazonka-importexport" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-importexport";
       version = "1.4.3";
       sha256 = "0r6awf6w2iyxidyzkd2cq15z91kzj9227zdnh13fzh35z105ymff";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Import/Export SDK";
       license = "unknown";
     }) {};
  "amazonka-inspector" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-inspector";
       version = "1.4.3";
       sha256 = "1j18pz8zwyxgg5ng4546rrfwavqi0qc3bqw61qwifcxzqnvvjm0g";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Inspector SDK";
       license = "unknown";
     }) {};
  "amazonka-iot" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-iot";
       version = "1.4.3";
       sha256 = "149yghqz1vg7zd9h03v1mvzd2yq7g269w4441pv08bxbvpd1g7sb";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon IoT SDK";
       license = "unknown";
     }) {};
  "amazonka-iot-dataplane" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-iot-dataplane";
       version = "1.4.3";
       sha256 = "15jvka70mjjcz7wg7w9jqfdvsp6gbaiqjwcs08gmk552qs5z0gic";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon IoT Data Plane SDK";
       license = "unknown";
     }) {};
  "amazonka-kinesis" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-kinesis";
       version = "1.4.3";
       sha256 = "04p86biy6p06jm6pjs9c3fja7blkwp1px18lk7pp0d49i1s5k7vb";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Kinesis SDK";
       license = "unknown";
     }) {};
  "amazonka-kinesis-firehose" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-kinesis-firehose";
       version = "1.4.3";
       sha256 = "0fl52qyrin0f0g4mh0m0ravflz1xd03l093kqhww7jr7if7pvp9a";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Kinesis Firehose SDK";
       license = "unknown";
     }) {};
  "amazonka-kms" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-kms";
       version = "1.4.3";
       sha256 = "1vbk998bablynivgrlyvhkfj5iqa6llq64wq4svh672if24hjflk";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Key Management Service SDK";
       license = "unknown";
     }) {};
  "amazonka-lambda" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-lambda";
       version = "1.4.3";
       sha256 = "11qps0409kip05558jx8zqlx0yv8h4lzhkng1hgv8yd3x9l8vmjf";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Lambda SDK";
       license = "unknown";
     }) {};
  "amazonka-marketplace-analytics" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-marketplace-analytics";
       version = "1.4.3";
       sha256 = "1iyyh06k9giq9ph0azpnk6g1fgk2hp6bkdq18rqk6z3l05hbvafc";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Marketplace Commerce Analytics SDK";
       license = "unknown";
     }) {};
  "amazonka-marketplace-metering" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-marketplace-metering";
       version = "1.4.3";
       sha256 = "08bsndj3w3p2wmi2hbc9ay3f2pssgisi3sf0iiys4kkq8jwp0wjp";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Marketplace Metering SDK";
       license = "unknown";
     }) {};
  "amazonka-ml" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-ml";
       version = "1.4.3";
       sha256 = "1pd4mpcqxlq4iiy3nnhv7qdbcwhsgk96whv8g78b3v22vyi32myx";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Machine Learning SDK";
       license = "unknown";
     }) {};
  "amazonka-opsworks" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-opsworks";
       version = "1.4.3";
       sha256 = "0wzjiqp4y5y5wzq16b2jyav88ffaqkiqda5q4rzqxmnp0avl8f4a";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon OpsWorks SDK";
       license = "unknown";
     }) {};
  "amazonka-rds" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-rds";
       version = "1.4.3";
       sha256 = "1krapx545hgas1hkl95znzn0ydiagz7dm3ki3svlb0n8pmhy6n2d";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Relational Database Service SDK";
       license = "unknown";
     }) {};
  "amazonka-redshift" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-redshift";
       version = "1.4.3";
       sha256 = "0s7yfz9ixh4x6q6j321bxgcfmnka36y13dh12g5nc3lcqrbpk7dg";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Redshift SDK";
       license = "unknown";
     }) {};
  "amazonka-route53" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-route53";
       version = "1.4.3";
       sha256 = "1kxhjb2z12rx5sc8r8585l5b4mp6gfjhgjgdb2wf3dsldx445yx7";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Route 53 SDK";
       license = "unknown";
     }) {};
  "amazonka-route53-domains" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-route53-domains";
       version = "1.4.3";
       sha256 = "12z19wm2579b6g3akhrnk2h50wbbrgq8yw7wfh47galgq71kyxqs";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Route 53 Domains SDK";
       license = "unknown";
     }) {};
  "amazonka-s3" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , lens, tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-s3";
       version = "1.4.3";
       sha256 = "0l7wv104lb5spgxw5r6nin4wsbjllxwwkhjam12sb6ayczkwkmly";
       libraryHaskellDepends = [ amazonka-core base lens text ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Simple Storage Service SDK";
       license = "unknown";
     }) {};
  "amazonka-sdb" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-sdb";
       version = "1.4.3";
       sha256 = "1lzixc181gk980pwjf2n2svc35s3nrjckxqmxz8hj3i1q8wqpb3z";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon SimpleDB SDK";
       license = "unknown";
     }) {};
  "amazonka-ses" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-ses";
       version = "1.4.3";
       sha256 = "18ln7nbp1gx2240nwdhs3y3k4dcpby708dn95df19n887izv1jic";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Simple Email Service SDK";
       license = "unknown";
     }) {};
  "amazonka-sns" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-sns";
       version = "1.4.3";
       sha256 = "0jjl6v8zci6mk2jd6iq05a36byjpnwprhnw9binndbw5sflka4v8";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Simple Notification Service SDK";
       license = "unknown";
     }) {};
  "amazonka-sqs" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-sqs";
       version = "1.4.3";
       sha256 = "1kjyh9423dhdfj0i4afbd2r7c5swjz7lr0zy3d3s9jf5bymym51f";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Simple Queue Service SDK";
       license = "unknown";
     }) {};
  "amazonka-ssm" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-ssm";
       version = "1.4.3";
       sha256 = "1h9q3jr4p101c5f24xwxz8474768qyd80x15pgr4v3zlg10kw2i6";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Simple Systems Management Service SDK";
       license = "unknown";
     }) {};
  "amazonka-storagegateway" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-storagegateway";
       version = "1.4.3";
       sha256 = "0ivvbckk3cflh3r0nh5miwf5ppxf00h5sf45bfdm5vdzl1dgl8jm";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Storage Gateway SDK";
       license = "unknown";
     }) {};
  "amazonka-sts" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-sts";
       version = "1.4.3";
       sha256 = "0v30k2azd7l0kfxnid3gp5rkzclc09i97vyz2dn6jfp8iwhkhvnk";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Security Token Service SDK";
       license = "unknown";
     }) {};
  "amazonka-support" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-support";
       version = "1.4.3";
       sha256 = "03yp4d06wa5z42x6aipwmigq4i7gkjamj2jcagfqgjgk6l6zpb6r";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Support SDK";
       license = "unknown";
     }) {};
  "amazonka-swf" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-swf";
       version = "1.4.3";
       sha256 = "0sdl7bqyap5nb9cvc2rfp7k05arj3smdf6mryq4wlgnr4cnd0hq4";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Simple Workflow Service SDK";
       license = "unknown";
     }) {};
  "amazonka-test" = callPackage
    ({ mkDerivation, aeson, amazonka-core, base, bifunctors, bytestring
     , case-insensitive, conduit, conduit-extra, groom, http-client
     , http-types, process, resourcet, tasty, tasty-hunit
     , template-haskell, temporary, text, time, unordered-containers
     , yaml
     }:
     mkDerivation {
       pname = "amazonka-test";
       version = "1.4.3";
       sha256 = "16wx07wxzgmi0vri16j5la0gf047fc6k12v8xbrb7brn22zhlc8h";
       libraryHaskellDepends = [
         aeson amazonka-core base bifunctors bytestring case-insensitive
         conduit conduit-extra groom http-client http-types process
         resourcet tasty tasty-hunit template-haskell temporary text time
         unordered-containers yaml
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Common functionality for Amazonka library test-suites";
       license = "unknown";
     }) {};
  "amazonka-waf" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-waf";
       version = "1.4.3";
       sha256 = "11ascm0xslbcw0w180bcv528c3q4h1lnkgxawyaix39cm1y9v73y";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon WAF SDK";
       license = "unknown";
     }) {};
  "amazonka-workspaces" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-workspaces";
       version = "1.4.3";
       sha256 = "0y2xh13sw71dhxap6z1qb4gna2hq1rrrprjkshnhd1n2mqbqv0k1";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon WorkSpaces SDK";
       license = "unknown";
     }) {};
  "amqp" = callPackage
    ({ mkDerivation, base, binary, bytestring, clock, connection
     , containers, data-binary-ieee754, hspec, hspec-expectations
     , monad-control, network, network-uri, split, stm, text, vector
     , xml
     }:
     mkDerivation {
       pname = "amqp";
       version = "0.14.1";
       sha256 = "02rh5pamzk89smww10bym3rkra8pz74s4nkwigh1f0brg396a12h";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base binary bytestring clock connection containers
         data-binary-ieee754 monad-control network network-uri split stm
         text vector
       ];
       executableHaskellDepends = [ base containers xml ];
       testHaskellDepends = [
         base binary bytestring clock connection containers
         data-binary-ieee754 hspec hspec-expectations network network-uri
         split stm text vector
       ];
       doCheck = false;
       homepage = "https://github.com/hreinhardt/amqp";
       description = "Client library for AMQP servers (currently only RabbitMQ)";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "angel" = callPackage
    ({ mkDerivation, base, configurator, containers, mtl, old-locale
     , optparse-applicative, process, stm, tasty, tasty-hunit
     , tasty-quickcheck, text, time, transformers, unix
     , unordered-containers
     }:
     mkDerivation {
       pname = "angel";
       version = "0.6.2";
       sha256 = "0n73w8lczsncagf2041lq1963mnsmw9albwy0n5qbhqx9030pzya";
       revision = "1";
       editedCabalFile = "0gx208vshdw6bm2id4a5rcacdw44n5ia0q6jmjhk1qfx4s2krp5q";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         base configurator containers mtl old-locale optparse-applicative
         process stm text time transformers unix unordered-containers
       ];
       testHaskellDepends = [
         base configurator containers mtl old-locale process stm tasty
         tasty-hunit tasty-quickcheck text time transformers unix
         unordered-containers
       ];
       doHaddock = false;
       doCheck = false;
       homepage = "http://github.com/MichaelXavier/Angel";
       description = "Process management and supervision daemon";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "annotated-wl-pprint" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "annotated-wl-pprint";
       version = "0.7.0";
       sha256 = "061xfz6qany3wf95csl8dcik2pz22cn8iv1qchhm16isw5zjs9hc";
       revision = "1";
       editedCabalFile = "138k24qxvl90l7dwdw1b3w36mpw93n0xi0nljblqg88pxg7jcvjx";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/david-christiansen/annotated-wl-pprint";
       description = "The Wadler/Leijen Pretty Printer, with annotation support";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "anonymous-sums" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "anonymous-sums";
       version = "0.4.0.0";
       sha256 = "0jb7s6m7dblnydrzh5nsczr0kpqwy9gr346pcrxsaywz2gfjcrhi";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base ];
       executableHaskellDepends = [ base ];
       homepage = "http://www.github.com/massysett/anonymous-sums";
       description = "Anonymous sum types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ansi-terminal" = callPackage
    ({ mkDerivation, base, unix }:
     mkDerivation {
       pname = "ansi-terminal";
       version = "0.6.2.3";
       sha256 = "0hpfw0k025y681m9ml1c712skrb1p4vh7z5x1f0ci9ww7ssjrh2d";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base unix ];
       executableHaskellDepends = [ base unix ];
       homepage = "https://github.com/feuerbach/ansi-terminal";
       description = "Simple ANSI terminal support, with Windows compatibility";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ansi-wl-pprint" = callPackage
    ({ mkDerivation, ansi-terminal, base }:
     mkDerivation {
       pname = "ansi-wl-pprint";
       version = "0.6.7.3";
       sha256 = "025pyphsjf0dnbrmj5nscbi6gzyigwgp3ifxb3psn7kji6mfr29p";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ ansi-terminal base ];
       executableHaskellDepends = [ ansi-terminal base ];
       homepage = "http://github.com/ekmett/ansi-wl-pprint";
       description = "The Wadler/Leijen Pretty Printer for colored ANSI terminal output";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ansigraph" = callPackage
    ({ mkDerivation, ansi-terminal, base, hspec, QuickCheck }:
     mkDerivation {
       pname = "ansigraph";
       version = "0.2.0.0";
       sha256 = "0hyafrg6h5yphdrv7gjvki07qlpkng28529ja6h59635dsw8rv9x";
       libraryHaskellDepends = [ ansi-terminal base ];
       testHaskellDepends = [ base hspec QuickCheck ];
       homepage = "https://github.com/BlackBrane/ansigraph";
       description = "Terminal-based graphing via ANSI and Unicode";
       license = stdenv.lib.licenses.mit;
     }) {};
  "api-field-json-th" = callPackage
    ({ mkDerivation, aeson, base, HUnit, lens, split, template-haskell
     , text
     }:
     mkDerivation {
       pname = "api-field-json-th";
       version = "0.1.0.1";
       sha256 = "09kn005dd79b9fq2kf3a3ciqjxxsn86rd4fda04ldw1pc0hzpgl8";
       libraryHaskellDepends = [
         aeson base lens split template-haskell text
       ];
       testHaskellDepends = [ aeson base HUnit lens ];
       homepage = "https://github.com/nakaji-dayo/api-field-json-th";
       description = "option of aeson's deriveJSON";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "app-settings" = callPackage
    ({ mkDerivation, base, containers, directory, hspec, HUnit, mtl
     , parsec, text
     }:
     mkDerivation {
       pname = "app-settings";
       version = "0.2.0.10";
       sha256 = "0a5c5770nx3fq84qmlwayq16fsk7jbd8q434nwa7qiihd7vrvpc8";
       libraryHaskellDepends = [
         base containers directory mtl parsec text
       ];
       testHaskellDepends = [
         base containers directory hspec HUnit mtl parsec text
       ];
       homepage = "https://github.com/emmanueltouzery/app-settings";
       description = "A library to manage application settings (INI file-like)";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "appar" = callPackage
    ({ mkDerivation, base, bytestring }:
     mkDerivation {
       pname = "appar";
       version = "0.1.4";
       sha256 = "09jb9ij78fdkz2qk66rw99q19qnm504dpv0yq0pjsl6xwjmndsjq";
       libraryHaskellDepends = [ base bytestring ];
       description = "A simple applicative parser";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "apply-refact" = callPackage
    ({ mkDerivation, base, containers, directory, filemanip, filepath
     , ghc, ghc-exactprint, mtl, optparse-applicative, process, refact
     , silently, syb, tasty, tasty-expected-failure, tasty-golden
     , temporary, transformers, unix-compat
     }:
     mkDerivation {
       pname = "apply-refact";
       version = "0.3.0.0";
       sha256 = "03ypkr077rxqzq6v4r8bf46nvwf3v8qa3l5389kllk2mxm2qhahd";
       revision = "1";
       editedCabalFile = "1slrg2byl0vrj6safwc2b0jbcbscdd450mid6s2fhlqy1gy9a81p";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base containers directory filemanip ghc ghc-exactprint mtl process
         refact syb temporary transformers unix-compat
       ];
       executableHaskellDepends = [
         base containers directory filemanip filepath ghc ghc-exactprint mtl
         optparse-applicative process refact syb temporary transformers
         unix-compat
       ];
       testHaskellDepends = [
         base containers directory filemanip filepath ghc ghc-exactprint mtl
         optparse-applicative process refact silently syb tasty
         tasty-expected-failure tasty-golden temporary transformers
         unix-compat
       ];
       description = "Perform refactorings specified by the refact library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "arbtt" = callPackage
    ({ mkDerivation, aeson, array, base, binary, bytestring
     , bytestring-progress, containers, deepseq, directory, filepath
     , libXScrnSaver, parsec, pcre-light, process-extras, strict, tasty
     , tasty-golden, tasty-hunit, terminal-progress-bar, time
     , transformers, unix, utf8-string, X11
     }:
     mkDerivation {
       pname = "arbtt";
       version = "0.9.0.12";
       sha256 = "1kw75vkcgxpm2bzna7h21ywrm0bfvi7x0lmp9rhg73ynlrql3p9v";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         aeson array base binary bytestring bytestring-progress containers
         deepseq directory filepath parsec pcre-light strict
         terminal-progress-bar time transformers unix utf8-string X11
       ];
       executableSystemDepends = [ libXScrnSaver ];
       testHaskellDepends = [
         base binary bytestring containers deepseq directory parsec
         pcre-light process-extras tasty tasty-golden tasty-hunit time
         transformers unix utf8-string
       ];
       doHaddock = false;
       homepage = "http://arbtt.nomeata.de/";
       description = "Automatic Rule-Based Time Tracker";
       license = "GPL";
     }) {inherit (pkgs.xorg) libXScrnSaver;};
  "arithmoi" = callPackage
    ({ mkDerivation, array, base, containers, criterion, ghc-prim
     , integer-gmp, mtl, QuickCheck, random, smallcheck, tasty
     , tasty-hunit, tasty-quickcheck, tasty-smallcheck, transformers
     , transformers-compat
     }:
     mkDerivation {
       pname = "arithmoi";
       version = "0.4.3.0";
       sha256 = "15nisn8m1kbaqqxrvil6ih4pac3giwccjhn5fj2hm7g19cyk98ys";
       libraryHaskellDepends = [
         array base containers ghc-prim integer-gmp mtl random
       ];
       testHaskellDepends = [
         base containers QuickCheck smallcheck tasty tasty-hunit
         tasty-quickcheck tasty-smallcheck transformers transformers-compat
       ];
       benchmarkHaskellDepends = [ base containers criterion random ];
       homepage = "https://github.com/cartazio/arithmoi";
       description = "Efficient basic number-theoretic functions. Primes, powers, integer logarithms.";
       license = stdenv.lib.licenses.mit;
     }) {};
  "array-memoize" = callPackage
    ({ mkDerivation, array, base }:
     mkDerivation {
       pname = "array-memoize";
       version = "0.6.0";
       sha256 = "1p05vg8mdyad03aa7s1nrgw5xqgl80f6l7v0llhmi1q4xnrqrj3n";
       libraryHaskellDepends = [ array base ];
       description = "Memoization combinators using arrays for finite sub-domains of functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "arrow-list" = callPackage
    ({ mkDerivation, base, containers, mtl }:
     mkDerivation {
       pname = "arrow-list";
       version = "0.7";
       sha256 = "1n6m77hdkpjd12r0b8fwxiz3jz0j86cplgsk27m2raj86vr3dy1k";
       libraryHaskellDepends = [ base containers mtl ];
       homepage = "https://github.com/silkapp/arrow-list";
       description = "List arrows for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ascii-progress" = callPackage
    ({ mkDerivation, async, base, concurrent-output, data-default
     , hspec, QuickCheck, time
     }:
     mkDerivation {
       pname = "ascii-progress";
       version = "0.3.3.0";
       sha256 = "0glixkmqk7zz4g88sfrqfrdxd4na0krlwr50m2dkra091jwacgvy";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         async base concurrent-output data-default time
       ];
       testHaskellDepends = [
         async base concurrent-output data-default hspec QuickCheck time
       ];
       homepage = "https://github.com/yamadapc/haskell-ascii-progress";
       description = "A simple progress bar for the console";
       license = stdenv.lib.licenses.mit;
     }) {};
  "asciidiagram" = callPackage
    ({ mkDerivation, base, bytestring, containers, directory, filepath
     , FontyFruity, JuicyPixels, lens, linear, mtl, optparse-applicative
     , rasterific-svg, svg-tree, text, vector
     }:
     mkDerivation {
       pname = "asciidiagram";
       version = "1.3.3";
       sha256 = "062zcirgkjlypyzj7igjmhyisgs19svyzzqpmgy7vah8ykslhjb9";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring containers FontyFruity JuicyPixels lens linear mtl
         rasterific-svg svg-tree text vector
       ];
       executableHaskellDepends = [
         base bytestring directory filepath FontyFruity JuicyPixels
         optparse-applicative rasterific-svg svg-tree text
       ];
       description = "Pretty rendering of Ascii diagram into svg or png";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "asn1-encoding" = callPackage
    ({ mkDerivation, asn1-types, base, bytestring, hourglass, mtl
     , tasty, tasty-quickcheck, text
     }:
     mkDerivation {
       pname = "asn1-encoding";
       version = "0.9.4";
       sha256 = "1s6xjh1rhyqhfaivzd3hbnlixlx44krjmis05cpxgyq8vgvmi057";
       libraryHaskellDepends = [ asn1-types base bytestring hourglass ];
       testHaskellDepends = [
         asn1-types base bytestring hourglass mtl tasty tasty-quickcheck
         text
       ];
       homepage = "http://github.com/vincenthz/hs-asn1";
       description = "ASN1 data reader and writer in RAW, BER and DER forms";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "asn1-parse" = callPackage
    ({ mkDerivation, asn1-encoding, asn1-types, base, bytestring }:
     mkDerivation {
       pname = "asn1-parse";
       version = "0.9.4";
       sha256 = "025prsihk5g6rdv9xlfmj0zpa0wa3qjzj5i4ilzvg7f6f3sji8y6";
       libraryHaskellDepends = [
         asn1-encoding asn1-types base bytestring
       ];
       homepage = "https://github.com/vincenthz/hs-asn1";
       description = "Simple monadic parser for ASN1 stream types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "asn1-types" = callPackage
    ({ mkDerivation, base, bytestring, hourglass, memory }:
     mkDerivation {
       pname = "asn1-types";
       version = "0.3.2";
       sha256 = "05vjchyqiy9n275cygffhn0ma7fz7jx52j0dcdm9qm8h9bziymqc";
       libraryHaskellDepends = [ base bytestring hourglass memory ];
       homepage = "http://github.com/vincenthz/hs-asn1-types";
       description = "ASN.1 types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "async" = callPackage
    ({ mkDerivation, base, HUnit, stm, test-framework
     , test-framework-hunit
     }:
     mkDerivation {
       pname = "async";
       version = "2.1.1";
       sha256 = "142gyyjvz3fh6a72s3wrnjlnffn2nj30is9vnymp960zj8v4n4r4";
       libraryHaskellDepends = [ base stm ];
       testHaskellDepends = [
         base HUnit test-framework test-framework-hunit
       ];
       homepage = "https://github.com/simonmar/async";
       description = "Run IO operations asynchronously and wait for their results";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "async-dejafu" = callPackage
    ({ mkDerivation, base, concurrency, dejafu, exceptions, HUnit
     , hunit-dejafu
     }:
     mkDerivation {
       pname = "async-dejafu";
       version = "0.1.3.0";
       sha256 = "1z9ajmqni3n0iz56v1y89jji4lb6qdvqnadkwd3vk75ghm6a34yq";
       libraryHaskellDepends = [ base concurrency exceptions ];
       testHaskellDepends = [
         base concurrency dejafu HUnit hunit-dejafu
       ];
       homepage = "https://github.com/barrucadu/dejafu";
       description = "Run MonadConc operations asynchronously and wait for their results";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "atndapi" = callPackage
    ({ mkDerivation, aeson, base, bytestring, conduit, data-default
     , hspec, http-conduit, http-types, lifted-base, monad-control
     , monad-logger, mtl, parsec, QuickCheck, resourcet, text, time
     , transformers
     }:
     mkDerivation {
       pname = "atndapi";
       version = "0.1.1.0";
       sha256 = "1npyvfm9bqk6msly481rj7fypxpglajzqlkj3783vh92wdby6jqw";
       libraryHaskellDepends = [
         aeson base bytestring conduit data-default http-conduit http-types
         lifted-base monad-control monad-logger mtl parsec resourcet text
         time transformers
       ];
       testHaskellDepends = [
         aeson base bytestring conduit data-default hspec http-conduit
         http-types lifted-base monad-control monad-logger mtl parsec
         QuickCheck resourcet text time transformers
       ];
       homepage = "http://github.com/ynishi/atndapi#readme";
       description = "An interface of ATND API";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "atom-conduit" = callPackage
    ({ mkDerivation, base, conduit, conduit-parse, data-default
     , exceptions, foldl, hlint, lens-simple, mono-traversable, parsers
     , quickcheck-instances, resourcet, tasty, tasty-hunit
     , tasty-quickcheck, text, time, timerep, uri-bytestring
     , xml-conduit, xml-conduit-parse, xml-types
     }:
     mkDerivation {
       pname = "atom-conduit";
       version = "0.3.1.2";
       sha256 = "08ksbxwl2x0hsdwakcgvr37yfwx0hrdpldkc6smms6nqkiw9nimb";
       libraryHaskellDepends = [
         base conduit conduit-parse exceptions foldl lens-simple
         mono-traversable parsers text time timerep uri-bytestring
         xml-conduit xml-conduit-parse xml-types
       ];
       testHaskellDepends = [
         base conduit conduit-parse data-default exceptions hlint
         lens-simple mono-traversable parsers quickcheck-instances resourcet
         tasty tasty-hunit tasty-quickcheck text time uri-bytestring
         xml-conduit xml-conduit-parse xml-types
       ];
       description = "Streaming parser/renderer for the Atom 1.0 standard (RFC 4287).";
       license = "unknown";
     }) {};
  "atomic-primops" = callPackage
    ({ mkDerivation, base, ghc-prim, primitive }:
     mkDerivation {
       pname = "atomic-primops";
       version = "0.8.0.4";
       sha256 = "0r4qvf9cgv5a2h0dk6blxhahk808pmihma9k2ym3h1cchj9y7qa7";
       libraryHaskellDepends = [ base ghc-prim primitive ];
       homepage = "https://github.com/rrnewton/haskell-lockfree/wiki";
       description = "A safe approach to CAS and other atomic ops in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "atomic-write" = callPackage
    ({ mkDerivation, base, bytestring, directory, filepath, hspec
     , temporary, text, unix-compat
     }:
     mkDerivation {
       pname = "atomic-write";
       version = "0.2.0.5";
       sha256 = "1iaq0hprxcv0sl1sgwcgmm87zraf738va1bciwnx2jkk3k1v9iyv";
       libraryHaskellDepends = [
         base bytestring directory filepath temporary text unix-compat
       ];
       testHaskellDepends = [
         base bytestring directory filepath hspec temporary text unix-compat
       ];
       homepage = "https://github.com/stackbuilders/atomic-write";
       description = "Atomically write to a file";
       license = stdenv.lib.licenses.mit;
     }) {};
  "attoparsec" = callPackage
    ({ mkDerivation, array, base, bytestring, case-insensitive
     , containers, criterion, deepseq, directory, filepath, ghc-prim
     , http-types, parsec, QuickCheck, quickcheck-unicode, scientific
     , tasty, tasty-quickcheck, text, transformers, unordered-containers
     , vector
     }:
     mkDerivation {
       pname = "attoparsec";
       version = "0.13.1.0";
       sha256 = "0r1zrrkbqv8w4pb459fj5izd1h85p9nrsp3gyzj7qiayjpa79p2j";
       libraryHaskellDepends = [
         array base bytestring containers deepseq scientific text
         transformers
       ];
       testHaskellDepends = [
         array base bytestring deepseq QuickCheck quickcheck-unicode
         scientific tasty tasty-quickcheck text transformers vector
       ];
       benchmarkHaskellDepends = [
         array base bytestring case-insensitive containers criterion deepseq
         directory filepath ghc-prim http-types parsec scientific text
         transformers unordered-containers vector
       ];
       homepage = "https://github.com/bos/attoparsec";
       description = "Fast combinator parsing for bytestrings and text";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "attoparsec-binary" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring }:
     mkDerivation {
       pname = "attoparsec-binary";
       version = "0.2";
       sha256 = "02vswxsgayw50xli7mbacsjmk1diifzkfgnyfn9ck5mk41dl9rh5";
       libraryHaskellDepends = [ attoparsec base bytestring ];
       description = "Binary processing extensions to Attoparsec";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "attoparsec-expr" = callPackage
    ({ mkDerivation, attoparsec, base }:
     mkDerivation {
       pname = "attoparsec-expr";
       version = "0.1.1.2";
       sha256 = "0z25pc3rq98ysk92jclr90n35982a566sxri51yh1s9c24vd8k4d";
       libraryHaskellDepends = [ attoparsec base ];
       description = "Port of parsec's expression parser to attoparsec";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "authenticate" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, blaze-builder, bytestring
     , case-insensitive, conduit, containers, http-conduit, http-types
     , monad-control, network-uri, resourcet, tagstream-conduit, text
     , transformers, unordered-containers, xml-conduit
     }:
     mkDerivation {
       pname = "authenticate";
       version = "1.3.3.2";
       sha256 = "0c3fcl1i32112jz7w2ss0p1x5xpcvsnnk0vbzi3shvk43rwzfpx6";
       libraryHaskellDepends = [
         aeson attoparsec base blaze-builder bytestring case-insensitive
         conduit containers http-conduit http-types monad-control
         network-uri resourcet tagstream-conduit text transformers
         unordered-containers xml-conduit
       ];
       homepage = "http://github.com/yesodweb/authenticate";
       description = "Authentication methods for Haskell web applications";
       license = stdenv.lib.licenses.mit;
     }) {};
  "authenticate-oauth" = callPackage
    ({ mkDerivation, base, base64-bytestring, blaze-builder, bytestring
     , crypto-pubkey-types, data-default, http-client, http-types
     , random, RSA, SHA, time, transformers
     }:
     mkDerivation {
       pname = "authenticate-oauth";
       version = "1.5.1.2";
       sha256 = "0cvanznrz9942hs303821xvzlbsbqcq84v8qnpnnwx2f3bzpjhi9";
       libraryHaskellDepends = [
         base base64-bytestring blaze-builder bytestring crypto-pubkey-types
         data-default http-client http-types random RSA SHA time
         transformers
       ];
       homepage = "http://github.com/yesodweb/authenticate";
       description = "Library to authenticate with OAuth for Haskell web applications";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "auto" = callPackage
    ({ mkDerivation, base, base-orphans, bytestring, cereal, containers
     , deepseq, MonadRandom, profunctors, random, semigroups
     , transformers
     }:
     mkDerivation {
       pname = "auto";
       version = "0.4.3.1";
       sha256 = "0h9vrljhq9nlmi2j9wszpay0yli4n4r993mwamg69qqppcf6vqn6";
       libraryHaskellDepends = [
         base base-orphans bytestring cereal containers deepseq MonadRandom
         profunctors random semigroups transformers
       ];
       homepage = "https://github.com/mstksg/auto";
       description = "Denotative, locally stateful programming DSL & platform";
       license = stdenv.lib.licenses.mit;
     }) {};
  "auto-update" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "auto-update";
       version = "0.1.4";
       sha256 = "09dlh2alsx2mw5kvj931yhbj0aw7jmly2cm9xbscm2sf098w35jy";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/yesodweb/wai";
       description = "Efficiently run periodic, on-demand actions";
       license = stdenv.lib.licenses.mit;
     }) {};
  "autoexporter" = callPackage
    ({ mkDerivation, base, Cabal, directory, filepath }:
     mkDerivation {
       pname = "autoexporter";
       version = "0.2.3";
       sha256 = "12mbjkiqjy7lvb6qma87qmi56cv17b7rnk2vnj1ywhjr9asbzfdk";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base Cabal directory filepath ];
       executableHaskellDepends = [ base ];
       homepage = "https://github.com/tfausak/autoexporter#readme";
       description = "Automatically re-export modules";
       license = stdenv.lib.licenses.mit;
     }) {};
  "aws" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, base16-bytestring
     , base64-bytestring, blaze-builder, byteable, bytestring
     , case-insensitive, cereal, conduit, conduit-extra, containers
     , cryptohash, data-default, directory, errors, filepath
     , http-client, http-client-tls, http-conduit, http-types
     , lifted-base, monad-control, mtl, network, old-locale, QuickCheck
     , quickcheck-instances, resourcet, safe, scientific, tagged, tasty
     , tasty-hunit, tasty-quickcheck, text, time, transformers
     , transformers-base, unordered-containers, utf8-string, vector
     , xml-conduit
     }:
     mkDerivation {
       pname = "aws";
       version = "0.14.1";
       sha256 = "0yg5rcb7476dlfy430a53x2b5dn0i0gf7p1xzr31ny6w7n2pj83a";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson attoparsec base base16-bytestring base64-bytestring
         blaze-builder byteable bytestring case-insensitive cereal conduit
         conduit-extra containers cryptohash data-default directory filepath
         http-conduit http-types lifted-base monad-control mtl network
         old-locale resourcet safe scientific tagged text time transformers
         unordered-containers utf8-string vector xml-conduit
       ];
       testHaskellDepends = [
         aeson base bytestring errors http-client http-client-tls http-types
         lifted-base monad-control mtl QuickCheck quickcheck-instances
         resourcet tagged tasty tasty-hunit tasty-quickcheck text time
         transformers transformers-base
       ];
       doCheck = false;
       homepage = "http://github.com/aristidb/aws";
       description = "Amazon Web Services (AWS) for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "b9" = callPackage
    ({ mkDerivation, aeson, async, base, bifunctors, binary, boxes
     , bytestring, conduit, conduit-extra, ConfigFile, directory
     , filepath, free, hashable, hspec, hspec-expectations, mtl
     , optparse-applicative, parallel, parsec, pretty, pretty-show
     , process, QuickCheck, random, semigroups, syb, template, text
     , time, transformers, unordered-containers, vector, yaml
     }:
     mkDerivation {
       pname = "b9";
       version = "0.5.31";
       sha256 = "15bw30n89yhdskngsr8nfi78ks07fsy0n1mgq6h76vwgm1l9pk4d";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson async base bifunctors binary boxes bytestring conduit
         conduit-extra ConfigFile directory filepath free hashable mtl
         parallel parsec pretty pretty-show process QuickCheck random
         semigroups syb template text time transformers unordered-containers
         vector yaml
       ];
       executableHaskellDepends = [
         base bytestring directory optparse-applicative
       ];
       testHaskellDepends = [
         aeson base bytestring hspec hspec-expectations QuickCheck
         semigroups text unordered-containers vector yaml
       ];
       homepage = "https://github.com/sheyll/b9-vm-image-builder";
       description = "A tool and library for building virtual machine images";
       license = stdenv.lib.licenses.mit;
     }) {};
  "bake" = callPackage
    ({ mkDerivation, aeson, base, bytestring, cmdargs, containers
     , deepseq, direct-sqlite, directory, disk-free-space, extra
     , filepath, hashable, HTTP, http-types, old-locale, process, random
     , safe, shake, smtp-mail, sqlite-simple, text, time, transformers
     , unordered-containers, wai, warp
     }:
     mkDerivation {
       pname = "bake";
       version = "0.4";
       sha256 = "1xxv78i2q9hiw30vkbcx09nabqv88g3a6k872ckm9wk8isrnw2zz";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson base bytestring cmdargs containers deepseq direct-sqlite
         directory disk-free-space extra filepath hashable HTTP http-types
         old-locale random safe shake smtp-mail sqlite-simple text time
         transformers unordered-containers wai warp
       ];
       executableHaskellDepends = [
         aeson base bytestring cmdargs containers deepseq direct-sqlite
         directory disk-free-space extra filepath hashable HTTP http-types
         old-locale process random safe shake smtp-mail sqlite-simple text
         time transformers unordered-containers wai warp
       ];
       homepage = "https://github.com/ndmitchell/bake#readme";
       description = "Continuous integration system";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bank-holidays-england" = callPackage
    ({ mkDerivation, base, containers, hspec, QuickCheck, time }:
     mkDerivation {
       pname = "bank-holidays-england";
       version = "0.1.0.5";
       sha256 = "0q1pm1bx7nz3vxrn04ikswjnbql1mny4shyv92ps6bkn29wdn686";
       libraryHaskellDepends = [ base containers time ];
       testHaskellDepends = [ base containers hspec QuickCheck time ];
       homepage = "https://bitbucket.org/davecturner/bank-holidays-england";
       description = "Calculation of bank holidays in England and Wales";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "base-compat" = callPackage
    ({ mkDerivation, base, hspec, QuickCheck, unix }:
     mkDerivation {
       pname = "base-compat";
       version = "0.9.1";
       sha256 = "0jj6nq0vb8ap3724c3r3cavc298m1gm238vmgi7wzzxr8s0v8cqh";
       libraryHaskellDepends = [ base unix ];
       testHaskellDepends = [ base hspec QuickCheck ];
       description = "A compatibility layer for base";
       license = stdenv.lib.licenses.mit;
     }) {};
  "base-noprelude" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "base-noprelude";
       version = "4.9.0.0";
       sha256 = "0pgyyalfnyc0ygss1z9k0ya1p7vhg42y1lqj1j0x1mv66g1hjm8w";
       libraryHaskellDepends = [ base ];
       doHaddock = false;
       homepage = "https://github.com/hvr/base-noprelude";
       description = "\"base\" package sans \"Prelude\" module";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "base-orphans" = callPackage
    ({ mkDerivation, base, ghc-prim, hspec, QuickCheck }:
     mkDerivation {
       pname = "base-orphans";
       version = "0.5.4";
       sha256 = "0qv20n4yabg7sc3rs2dd46a53c7idnd88by7n3s36dkbc21m41q4";
       libraryHaskellDepends = [ base ghc-prim ];
       testHaskellDepends = [ base hspec QuickCheck ];
       homepage = "https://github.com/haskell-compat/base-orphans#readme";
       description = "Backwards-compatible orphan instances for base";
       license = stdenv.lib.licenses.mit;
     }) {};
  "base-prelude" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "base-prelude";
       version = "1.0.1.1";
       sha256 = "1d9iga5nj66h295j09q0wh246ahagjcqfv9br6x51ya57fd0mkyw";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/nikita-volkov/base-prelude";
       description = "The most complete prelude formed solely from the \"base\" package";
       license = stdenv.lib.licenses.mit;
     }) {};
  "base-unicode-symbols" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "base-unicode-symbols";
       version = "0.2.2.4";
       sha256 = "1afc5pchd3vw33bmjbjygkd0l5zh7glbsx4bfyxfscpc1x1l3y52";
       libraryHaskellDepends = [ base ];
       homepage = "http://haskell.org/haskellwiki/Unicode-symbols";
       description = "Unicode alternatives for common functions and operators";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "base16-bytestring" = callPackage
    ({ mkDerivation, base, bytestring, ghc-prim }:
     mkDerivation {
       pname = "base16-bytestring";
       version = "0.1.1.6";
       sha256 = "0jf40m3yijqw6wd1rwwvviww46fasphaay9m9rgqyhf5aahnbzjs";
       libraryHaskellDepends = [ base bytestring ghc-prim ];
       homepage = "http://github.com/bos/base16-bytestring";
       description = "Fast base16 (hex) encoding and decoding for ByteStrings";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "base32string" = callPackage
    ({ mkDerivation, aeson, base, binary, bytestring, hspec, text }:
     mkDerivation {
       pname = "base32string";
       version = "0.9.1";
       sha256 = "0cpa6bvam4zd2l2hb3sdngj0dx482c9rkz4jj87n6pxsmq9id4wy";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ aeson base binary bytestring text ];
       testHaskellDepends = [ base binary bytestring hspec text ];
       homepage = "http://www.leonmergen.com/opensource.html";
       description = "Fast and safe representation of a Base-32 string";
       license = stdenv.lib.licenses.mit;
     }) {};
  "base58string" = callPackage
    ({ mkDerivation, aeson, base, binary, bytestring, hspec, text }:
     mkDerivation {
       pname = "base58string";
       version = "0.10.0";
       sha256 = "1260x4bkrizvnmylm237gpi92wazh31md9nf982sac3fsxyn0wiv";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ aeson base binary bytestring text ];
       testHaskellDepends = [ base binary bytestring hspec text ];
       homepage = "http://www.leonmergen.com/opensource.html";
       description = "Fast and safe representation of a Base-58 string";
       license = stdenv.lib.licenses.mit;
     }) {};
  "base64-bytestring" = callPackage
    ({ mkDerivation, base, bytestring, containers, HUnit, QuickCheck
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "base64-bytestring";
       version = "1.0.0.1";
       sha256 = "0l1v4ddjdsgi9nqzyzcxxj76rwar3lzx8gmwf2r54bqan3san9db";
       libraryHaskellDepends = [ base bytestring ];
       testHaskellDepends = [
         base bytestring containers HUnit QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2
       ];
       homepage = "https://github.com/bos/base64-bytestring";
       description = "Fast base64 encoding and decoding for ByteStrings";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "base64-string" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "base64-string";
       version = "0.2";
       sha256 = "0pkhrimabacsjalzq0y3a197fqfbspsbv8xszzg4vbb1fb59dj1y";
       libraryHaskellDepends = [ base ];
       homepage = "http://urchin.earth.li/~ian/cabal/base64-string/";
       description = "Base64 implementation for String's";
       license = "unknown";
     }) {};
  "basic-prelude" = callPackage
    ({ mkDerivation, base, bytestring, containers, filepath, hashable
     , lifted-base, ReadArgs, safe, text, transformers
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "basic-prelude";
       version = "0.6.1";
       sha256 = "0q9hh17d3ygz6zrg9yvaffc0cbl6ygay7ms8v9bj3qnnfxbr0avc";
       libraryHaskellDepends = [
         base bytestring containers filepath hashable lifted-base ReadArgs
         safe text transformers unordered-containers vector
       ];
       homepage = "https://github.com/snoyberg/basic-prelude";
       description = "An enhanced core prelude; a common foundation for alternate preludes";
       license = stdenv.lib.licenses.mit;
     }) {};
  "bcrypt" = callPackage
    ({ mkDerivation, base, bytestring, data-default, entropy, memory }:
     mkDerivation {
       pname = "bcrypt";
       version = "0.0.10";
       sha256 = "1dhfxpz0nbm39xi28khnvqvriwh1rpycc66p9k5hpggjipzzk604";
       libraryHaskellDepends = [
         base bytestring data-default entropy memory
       ];
       description = "Haskell bindings to the bcrypt password hash";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "benchpress" = callPackage
    ({ mkDerivation, base, bytestring, mtl, time }:
     mkDerivation {
       pname = "benchpress";
       version = "0.2.2.8";
       sha256 = "0z850h6k3nk1i7g8y2ndazp118785n9gmnp7ilf96ril6cpg7yrr";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base mtl time ];
       executableHaskellDepends = [ base bytestring ];
       homepage = "https://github.com/WillSewell/benchpress";
       description = "Micro-benchmarking with detailed statistics";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bencode" = callPackage
    ({ mkDerivation, base, binary, bytestring, containers, parsec }:
     mkDerivation {
       pname = "bencode";
       version = "0.6.0.0";
       sha256 = "12pnh598k30ggs54f0pic19j7ji8f4xn7fydkdnlig79rvzgv3iv";
       libraryHaskellDepends = [
         base binary bytestring containers parsec
       ];
       description = "Parser and printer for bencoded data";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bento" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "bento";
       version = "0.1.0";
       sha256 = "14li436dp33r4fygkbxr6rjljdamc0yhxv34wafsy4xsv8h898pb";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/tfausak/bento#readme";
       description = "🍱 Manage stateful components";
       license = stdenv.lib.licenses.mit;
     }) {};
  "bifunctors" = callPackage
    ({ mkDerivation, base, base-orphans, comonad, containers, hspec
     , QuickCheck, semigroups, tagged, template-haskell, transformers
     , transformers-compat
     }:
     mkDerivation {
       pname = "bifunctors";
       version = "5.4.1";
       sha256 = "11rvqiqdkspgykajcymc433gb1b9v62lfbni4gnirqwwyrqzjiip";
       revision = "1";
       editedCabalFile = "01b5wd1cvyp121rwyf6iqzlicpwrfxfjp6qahqsq0ll794w95ib4";
       libraryHaskellDepends = [
         base base-orphans comonad containers semigroups tagged
         template-haskell transformers transformers-compat
       ];
       testHaskellDepends = [
         base hspec QuickCheck transformers transformers-compat
       ];
       homepage = "http://github.com/ekmett/bifunctors/";
       description = "Bifunctors";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bimap" = callPackage
    ({ mkDerivation, base, containers, exceptions, QuickCheck
     , template-haskell
     }:
     mkDerivation {
       pname = "bimap";
       version = "0.3.2";
       sha256 = "1f1xvikb92pix66glciys5q2l4044cd8hyd996prz9sag3cw53ql";
       libraryHaskellDepends = [ base containers exceptions ];
       testHaskellDepends = [
         base containers exceptions QuickCheck template-haskell
       ];
       homepage = "https://github.com/joelwilliamson/bimap";
       description = "Bidirectional mapping between two key types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bimap-server" = callPackage
    ({ mkDerivation, aeson, base, bimap, binary, directory, http-types
     , unix, wai, warp
     }:
     mkDerivation {
       pname = "bimap-server";
       version = "0.1.0.1";
       sha256 = "0dgmiv1pzzrq22778a2l46knxfk5rh2vw331gcqhxx0jb23d3pq9";
       libraryHaskellDepends = [
         aeson base bimap binary directory http-types unix wai warp
       ];
       description = "Two-column database server";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "binary-bits" = callPackage
    ({ mkDerivation, base, binary, bytestring, QuickCheck, random
     , test-framework, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "binary-bits";
       version = "0.5";
       sha256 = "1577bd5q4lhw024v4hfil10iyx7v4cf72ldhxb8xhm27i80lllqn";
       libraryHaskellDepends = [ base binary bytestring ];
       testHaskellDepends = [
         base binary bytestring QuickCheck random test-framework
         test-framework-quickcheck2
       ];
       description = "Bit parsing/writing on top of binary";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "binary-conduit" = callPackage
    ({ mkDerivation, base, binary, bytestring, conduit, hspec
     , QuickCheck, quickcheck-assertions, resourcet, vector
     }:
     mkDerivation {
       pname = "binary-conduit";
       version = "1.2.4.1";
       sha256 = "10nalqf3zhg49b5drhw4y8zv9c3nsnlbc7bvw9la8vgzpihbnp24";
       libraryHaskellDepends = [
         base binary bytestring conduit resourcet vector
       ];
       testHaskellDepends = [
         base binary bytestring conduit hspec QuickCheck
         quickcheck-assertions resourcet
       ];
       homepage = "http://github.com/qnikst/binary-conduit/";
       description = "data serialization/deserialization conduit library";
       license = stdenv.lib.licenses.mit;
     }) {};
  "binary-list" = callPackage
    ({ mkDerivation, base, binary, bytestring, criterion, deepseq
     , phantom-state, transformers
     }:
     mkDerivation {
       pname = "binary-list";
       version = "1.1.1.2";
       sha256 = "0y0qvlqb9c9ym0q2s9yjhbmgq56w3pxjva94rdr9a6q9lj7fa8bb";
       libraryHaskellDepends = [
         base binary bytestring deepseq phantom-state transformers
       ];
       benchmarkHaskellDepends = [ base criterion ];
       description = "Lists of length a power of two";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "binary-orphans" = callPackage
    ({ mkDerivation, aeson, base, binary, case-insensitive, hashable
     , QuickCheck, quickcheck-instances, scientific, tagged, tasty
     , tasty-quickcheck, text, text-binary, time, unordered-containers
     , vector, vector-binary-instances
     }:
     mkDerivation {
       pname = "binary-orphans";
       version = "0.1.6.0";
       sha256 = "19c4avasgjzy81dg0ih4j769kqg0sn40jh6yxwjv5zh0bxzdrqg0";
       libraryHaskellDepends = [
         aeson base binary case-insensitive hashable scientific tagged text
         text-binary time unordered-containers vector
         vector-binary-instances
       ];
       testHaskellDepends = [
         aeson base binary case-insensitive hashable QuickCheck
         quickcheck-instances scientific tagged tasty tasty-quickcheck text
         time unordered-containers vector
       ];
       homepage = "https://github.com/phadej/binary-orphans#readme";
       description = "Orphan instances for binary";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "binary-parser" = callPackage
    ({ mkDerivation, base-prelude, bytestring, success, text
     , transformers
     }:
     mkDerivation {
       pname = "binary-parser";
       version = "0.5.2";
       sha256 = "0iam4j4z560rnj69wjf0pbylizygk36daaz06x2708w4dzr30bbi";
       libraryHaskellDepends = [
         base-prelude bytestring success text transformers
       ];
       homepage = "https://github.com/nikita-volkov/binary-parser";
       description = "A highly-efficient but limited parser API specialised for bytestrings";
       license = stdenv.lib.licenses.mit;
     }) {};
  "binary-search" = callPackage
    ({ mkDerivation, base, containers, transformers }:
     mkDerivation {
       pname = "binary-search";
       version = "1.0.0.3";
       sha256 = "1ypn2i2c3mxd1zhpj515zf15y9sgz10akbyngg2ymp7ddbs2vqxh";
       libraryHaskellDepends = [ base containers transformers ];
       doCheck = false;
       description = "Binary and exponential searches";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "binary-tagged" = callPackage
    ({ mkDerivation, aeson, array, base, base16-bytestring, bifunctors
     , binary, binary-orphans, bytestring, containers, criterion
     , deepseq, generics-sop, hashable, nats, quickcheck-instances
     , scientific, semigroups, SHA, tagged, tasty, tasty-quickcheck
     , text, time, unordered-containers, vector
     }:
     mkDerivation {
       pname = "binary-tagged";
       version = "0.1.4.2";
       sha256 = "1167rlb2lnib1vin9p75hp7fzcjqxljlw56bhmkwn05c5f6an7ri";
       revision = "2";
       editedCabalFile = "1342baq65ggn25jfn1cb5ki0914ib1g7dx6p9kn34cdkaglwpfks";
       libraryHaskellDepends = [
         aeson array base base16-bytestring binary bytestring containers
         generics-sop hashable nats scientific semigroups SHA tagged text
         time unordered-containers vector
       ];
       testHaskellDepends = [
         aeson array base base16-bytestring bifunctors binary binary-orphans
         bytestring containers generics-sop hashable nats
         quickcheck-instances scientific semigroups SHA tagged tasty
         tasty-quickcheck text time unordered-containers vector
       ];
       benchmarkHaskellDepends = [
         aeson array base base16-bytestring binary binary-orphans bytestring
         containers criterion deepseq generics-sop hashable nats scientific
         semigroups SHA tagged text time unordered-containers vector
       ];
       homepage = "https://github.com/phadej/binary-tagged#readme";
       description = "Tagged binary serialisation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "binary-typed" = callPackage
    ({ mkDerivation, base, binary, bytestring, criterion, deepseq
     , murmur-hash, tasty, tasty-hunit, tasty-quickcheck
     }:
     mkDerivation {
       pname = "binary-typed";
       version = "1.0";
       sha256 = "02ans3vny69qfsmwlgri7v31rpff0h3mdp2zpikclay50a471ww5";
       libraryHaskellDepends = [ base binary bytestring murmur-hash ];
       testHaskellDepends = [
         base binary bytestring tasty tasty-hunit tasty-quickcheck
       ];
       benchmarkHaskellDepends = [
         base binary bytestring criterion deepseq
       ];
       homepage = "https://github.com/quchen/binary-typed";
       description = "Type-safe binary serialization";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "bindings-DSL" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "bindings-DSL";
       version = "1.0.23";
       sha256 = "1rqhkk8hn1xjl3705dvakxx93q89vp0fw22v2cbrlapbir27cv7b";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/jwiegley/bindings-dsl/wiki";
       description = "FFI domain specific language, on top of hsc2hs";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bindings-GLFW" = callPackage
    ({ mkDerivation, base, bindings-DSL, libX11, libXcursor, libXext
     , libXfixes, libXi, libXinerama, libXrandr, libXxf86vm, mesa
     , template-haskell
     }:
     mkDerivation {
       pname = "bindings-GLFW";
       version = "3.1.2.2";
       sha256 = "1j9za3fikmy9x6iaypa7fn5hypnavhs58y4s1ycgd80cbfiqawsk";
       libraryHaskellDepends = [ base bindings-DSL template-haskell ];
       librarySystemDepends = [
         libX11 libXcursor libXext libXfixes libXi libXinerama libXrandr
         libXxf86vm mesa
       ];
       doCheck = false;
       description = "Low-level bindings to GLFW OpenGL library";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs.xorg) libX11; inherit (pkgs.xorg) libXcursor;
         inherit (pkgs.xorg) libXext; inherit (pkgs.xorg) libXfixes;
         inherit (pkgs.xorg) libXi; inherit (pkgs.xorg) libXinerama;
         inherit (pkgs.xorg) libXrandr; inherit (pkgs.xorg) libXxf86vm;
         inherit (pkgs) mesa;};
  "bindings-libzip" = callPackage
    ({ mkDerivation, base, bindings-DSL, libzip }:
     mkDerivation {
       pname = "bindings-libzip";
       version = "1.0.1";
       sha256 = "1v52rms8xghj7ip3mmzmpa45mqywl4lfl3a0v6qp8sfnc01hd3ch";
       libraryHaskellDepends = [ base bindings-DSL ];
       libraryPkgconfigDepends = [ libzip ];
       homepage = "http://bitbucket.org/astanin/hs-libzip/";
       description = "Low level bindings to libzip";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) libzip;};
  "bioace" = callPackage
    ({ mkDerivation, base, bioalign, biocore, bytestring, parsec }:
     mkDerivation {
       pname = "bioace";
       version = "0.0.1";
       sha256 = "08k2w66gpysjk038pi50lc21gbn2dyp5z8ls0qhcmjqc59dn8hvg";
       libraryHaskellDepends = [
         base bioalign biocore bytestring parsec
       ];
       homepage = "https://patch-tag.com/r/dfornika/bioace/home";
       description = "Library for reading ace assembly files";
       license = "GPL";
     }) {};
  "bioalign" = callPackage
    ({ mkDerivation, base, biocore, bytestring }:
     mkDerivation {
       pname = "bioalign";
       version = "0.0.5";
       sha256 = "006gg8ds6klrl9rc1csi247rf8gzlgn9mdi0jl4pjz5xmf0jw5dr";
       libraryHaskellDepends = [ base biocore bytestring ];
       homepage = "https://patch-tag.com/r/dfornika/biophd/home";
       description = "Data structures and helper functions for calculating alignments";
       license = "GPL";
     }) {};
  "biocore" = callPackage
    ({ mkDerivation, base, bytestring, stringable }:
     mkDerivation {
       pname = "biocore";
       version = "0.3.1";
       sha256 = "06ml9p144bv0c9hv6pkcvhdgc0vw0jxzbqb834ilr38kjmrpsar1";
       libraryHaskellDepends = [ base bytestring stringable ];
       description = "A bioinformatics library";
       license = "LGPL";
     }) {};
  "biofasta" = callPackage
    ({ mkDerivation, base, biocore, bytestring }:
     mkDerivation {
       pname = "biofasta";
       version = "0.0.3";
       sha256 = "1l770sg2gcg7wl5yfrrk9nr7hgd5m0q158ad5nd8z7i5vsfah8b2";
       libraryHaskellDepends = [ base biocore bytestring ];
       homepage = "https://patch-tag.com/r/dfornika/biofasta/home";
       description = "Library for reading fasta sequence files";
       license = "GPL";
     }) {};
  "biofastq" = callPackage
    ({ mkDerivation, base, biocore, bytestring }:
     mkDerivation {
       pname = "biofastq";
       version = "0.1";
       sha256 = "0453cb2sw6x9hx3z7w3fvymwi0l0s86wlvi6vvsh0jcwas3iirbl";
       libraryHaskellDepends = [ base biocore bytestring ];
       homepage = "http://biohaskell.org/";
       description = "A library for reading FASTQ files";
       license = "LGPL";
     }) {};
  "biopsl" = callPackage
    ({ mkDerivation, base, biocore, bytestring, cmdargs
     , unordered-containers
     }:
     mkDerivation {
       pname = "biopsl";
       version = "0.4";
       sha256 = "1v9vg9gnrf606raqlzcd15irg60v3cf5m0yy5qsdyxm24102bgmj";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base biocore bytestring ];
       executableHaskellDepends = [ cmdargs unordered-containers ];
       homepage = "http://biohaskell.org/";
       description = "Library and executables for working with PSL files";
       license = "LGPL";
     }) {};
  "bitcoin-api" = callPackage
    ({ mkDerivation, aeson, base, base58string, binary, bitcoin-block
     , bitcoin-script, bitcoin-tx, bitcoin-types, bytestring, hexstring
     , hspec, http-client, lens, lens-aeson, text, unordered-containers
     , wreq
     }:
     mkDerivation {
       pname = "bitcoin-api";
       version = "0.12.1";
       sha256 = "0c1ydggik4k3vj93bqk53privyblkwhd32jizw25qk5j34axwy69";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson base base58string binary bitcoin-block bitcoin-script
         bitcoin-tx bitcoin-types bytestring hexstring lens lens-aeson text
         unordered-containers wreq
       ];
       testHaskellDepends = [
         base base58string bitcoin-script bitcoin-tx bytestring hspec
         http-client lens text wreq
       ];
       doCheck = false;
       homepage = "http://www.leonmergen.com/opensource.html";
       description = "Provides access to the RPC API of Bitcoin Core";
       license = stdenv.lib.licenses.mit;
     }) {};
  "bitcoin-api-extra" = callPackage
    ({ mkDerivation, base, binary, bitcoin-api, bitcoin-block
     , bitcoin-tx, bytestring, conduit, hspec, http-client, lens, stm
     , stm-chans, stm-conduit, text, transformers, wreq
     }:
     mkDerivation {
       pname = "bitcoin-api-extra";
       version = "0.9.1";
       sha256 = "1z6pppjgq6sy4q78k176pnr6y3lq369brqf0pg90v0qggl0cc8y4";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base binary bitcoin-api bitcoin-block bitcoin-tx bytestring conduit
         lens stm stm-chans stm-conduit text transformers
       ];
       testHaskellDepends = [
         base bitcoin-api bitcoin-tx bytestring conduit hspec http-client
         lens text wreq
       ];
       doCheck = false;
       homepage = "http://www.leonmergen.com/opensource.html";
       description = "Higher level constructs on top of the bitcoin-api package";
       license = stdenv.lib.licenses.mit;
     }) {};
  "bitcoin-block" = callPackage
    ({ mkDerivation, base, binary, bitcoin-tx, bitcoin-types
     , bytestring, cryptohash, hexstring, hspec, largeword, lens
     }:
     mkDerivation {
       pname = "bitcoin-block";
       version = "0.13.1";
       sha256 = "0nkx86fwv65x9vz6ni6qgz61afnvcifw2g92bnwdli8hww7prxfp";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base binary bitcoin-tx bitcoin-types bytestring cryptohash
         hexstring largeword lens
       ];
       testHaskellDepends = [
         base bitcoin-tx bitcoin-types bytestring hexstring hspec
       ];
       homepage = "http://www.leonmergen.com/opensource.html";
       description = "Utility functions for manipulating bitcoin blocks";
       license = stdenv.lib.licenses.mit;
     }) {};
  "bitcoin-payment-channel" = callPackage
    ({ mkDerivation, aeson, base, base16-bytestring, base58string
     , base64-bytestring, bytestring, cereal, errors, haskoin-core
     , hexstring, QuickCheck, scientific, text, time
     }:
     mkDerivation {
       pname = "bitcoin-payment-channel";
       version = "0.3.0.1";
       sha256 = "1j78bbwx6rladwhqxj7rjf3dw6z3y8s0gyafr0l5ywvjbk3nvg4p";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base base16-bytestring base64-bytestring bytestring cereal
         errors haskoin-core hexstring scientific text time
       ];
       executableHaskellDepends = [
         aeson base base16-bytestring base58string base64-bytestring
         bytestring cereal haskoin-core hexstring QuickCheck text time
       ];
       homepage = "https://github.com/runeksvendsen/bitcoin-payment-channel";
       description = "Library for working with Bitcoin payment channels";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "bitcoin-script" = callPackage
    ({ mkDerivation, base, base16-bytestring, binary, bytestring, hspec
     , text
     }:
     mkDerivation {
       pname = "bitcoin-script";
       version = "0.11.1";
       sha256 = "0k3v35p6qpgh88gc5rqpcmh202xrn2rind9641dinwqqx631v31r";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base base16-bytestring binary bytestring text
       ];
       testHaskellDepends = [ base bytestring hspec ];
       homepage = "http://www.leonmergen.com/opensource.html";
       description = "Compilation, manipulation and decompilation of Bitcoin scripts";
       license = stdenv.lib.licenses.mit;
     }) {};
  "bitcoin-tx" = callPackage
    ({ mkDerivation, base, binary, bitcoin-script, bitcoin-types
     , bytestring, cryptohash, hexstring, hspec, lens
     }:
     mkDerivation {
       pname = "bitcoin-tx";
       version = "0.13.1";
       sha256 = "006c55l6q6cknxw0k0kzr8vkv8azapfb4mkax6ac6rih6mjq5f1v";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base binary bitcoin-script bitcoin-types bytestring cryptohash
         hexstring lens
       ];
       testHaskellDepends = [
         base bitcoin-script bytestring hexstring hspec
       ];
       homepage = "http://www.leonmergen.com/opensource.html";
       description = "Utility functions for manipulating bitcoin transactions";
       license = stdenv.lib.licenses.mit;
     }) {};
  "bitcoin-types" = callPackage
    ({ mkDerivation, base, base58string, binary, bytestring, hexstring
     , hspec, text
     }:
     mkDerivation {
       pname = "bitcoin-types";
       version = "0.9.2";
       sha256 = "02y4svhcsml37p78g4cm97kyigcakgf4hds4bxnp0r4ba1498bxp";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base base58string binary bytestring hexstring text
       ];
       testHaskellDepends = [
         base base58string bytestring hexstring hspec
       ];
       homepage = "http://www.leonmergen.com/opensource.html";
       description = "Provides consistent low-level types used commonly among Bitcoin implementations";
       license = stdenv.lib.licenses.mit;
     }) {};
  "bits" = callPackage
    ({ mkDerivation, base, bytes, directory, doctest, filepath, mtl
     , transformers
     }:
     mkDerivation {
       pname = "bits";
       version = "0.5";
       sha256 = "06kg81gg21v3i4r62y060sjq9q86r4qrdblskwjx1idlqpqgnd2q";
       libraryHaskellDepends = [ base bytes mtl transformers ];
       testHaskellDepends = [ base directory doctest filepath ];
       homepage = "http://github.com/ekmett/bits";
       description = "Various bit twiddling and bitwise serialization primitives";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bitx-bitcoin" = callPackage
    ({ mkDerivation, aeson, base, bytestring, directory, doctest
     , exceptions, hspec, http-client, http-client-tls, http-types
     , microlens, microlens-th, network, QuickCheck, safe, scientific
     , split, text, time
     }:
     mkDerivation {
       pname = "bitx-bitcoin";
       version = "0.10.0.0";
       sha256 = "172hzjlqmpsmy2s8vj9qjxphmiwqb82z9vf31y5fgzxdkvg16pm5";
       libraryHaskellDepends = [
         aeson base bytestring exceptions http-client http-client-tls
         http-types microlens microlens-th network QuickCheck scientific
         split text time
       ];
       testHaskellDepends = [
         aeson base bytestring directory doctest hspec http-client
         http-types microlens safe text time
       ];
       homepage = "https://github.com/tebello-thejane/bitx-haskell";
       description = "A Haskell library for working with the BitX bitcoin exchange";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "blake2" = callPackage
    ({ mkDerivation, base, base16-bytestring, bytestring, criterion
     , hlint, QuickCheck, tasty, tasty-quickcheck
     }:
     mkDerivation {
       pname = "blake2";
       version = "0.2.0";
       sha256 = "1z1c70l2lmaj7d4wffsikf2w61i5ypjxnlwxddd8zsf6ypii1n87";
       libraryHaskellDepends = [ base bytestring ];
       testHaskellDepends = [
         base base16-bytestring bytestring hlint QuickCheck tasty
         tasty-quickcheck
       ];
       benchmarkHaskellDepends = [ base bytestring criterion ];
       homepage = "https://github.com/centromere/blake2";
       description = "A library providing BLAKE2";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "blank-canvas" = callPackage
    ({ mkDerivation, aeson, base, base-compat, base64-bytestring
     , bytestring, colour, containers, data-default-class, http-types
     , kansas-comet, mime-types, scotty, stm, text, text-show
     , transformers, vector, wai, wai-extra, warp
     }:
     mkDerivation {
       pname = "blank-canvas";
       version = "0.6";
       sha256 = "1cs81ykw1y2q1kwkdni5w9jxa8bc31b118diaqzf870bqm7mq3ia";
       revision = "9";
       editedCabalFile = "0j2vdd780mqpzl1n5093xqkpsd9gmqn9n541vvpcqlykrxwp6c0l";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson base base-compat base64-bytestring bytestring colour
         containers data-default-class http-types kansas-comet mime-types
         scotty stm text text-show transformers vector wai wai-extra warp
       ];
       doCheck = false;
       homepage = "https://github.com/ku-fpg/blank-canvas/wiki";
       description = "HTML5 Canvas Graphics Library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "blastxml" = callPackage
    ({ mkDerivation, base, biocore, bytestring, parallel, tagsoup }:
     mkDerivation {
       pname = "blastxml";
       version = "0.3.2";
       sha256 = "0slqvv8729vlniwswwipw3yss9id6xvmd416kad1ij064g28j00c";
       libraryHaskellDepends = [
         base biocore bytestring parallel tagsoup
       ];
       homepage = "http://biohaskell.org/";
       description = "Library for reading Blast XML output";
       license = "LGPL";
     }) {};
  "blaze-bootstrap" = callPackage
    ({ mkDerivation, base, blaze-html, text }:
     mkDerivation {
       pname = "blaze-bootstrap";
       version = "0.1.0.1";
       sha256 = "0qsis1hwd8sqcciibxwy8p6irszwa2fy5m75qxp46ymfal5lrdak";
       libraryHaskellDepends = [ base blaze-html text ];
       homepage = "http://github.com/agrafix/blaze-bootstrap";
       description = "Blaze helper functions for bootstrap pages";
       license = stdenv.lib.licenses.mit;
     }) {};
  "blaze-builder" = callPackage
    ({ mkDerivation, base, bytestring, deepseq, HUnit, QuickCheck
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , text, utf8-string
     }:
     mkDerivation {
       pname = "blaze-builder";
       version = "0.4.0.2";
       sha256 = "1m33y6p5xldni8p4fzg8fmsyqvkfmnimdamr1xjnsmgm3dkf9lws";
       libraryHaskellDepends = [ base bytestring deepseq text ];
       testHaskellDepends = [
         base bytestring HUnit QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2 text utf8-string
       ];
       homepage = "http://github.com/lpsmith/blaze-builder";
       description = "Efficient buffered output";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "blaze-html" = callPackage
    ({ mkDerivation, base, blaze-builder, blaze-markup, bytestring
     , containers, HUnit, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2, text
     }:
     mkDerivation {
       pname = "blaze-html";
       version = "0.8.1.3";
       sha256 = "0dyn6cj5av4apmc3wav6asfap53gxy4hzdb7rph83yakscbyf5lc";
       libraryHaskellDepends = [
         base blaze-builder blaze-markup bytestring text
       ];
       testHaskellDepends = [
         base blaze-builder blaze-markup bytestring containers HUnit
         QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2 text
       ];
       homepage = "http://jaspervdj.be/blaze";
       description = "A blazingly fast HTML combinator library for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "blaze-markup" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring, containers, HUnit
     , QuickCheck, test-framework, test-framework-hunit
     , test-framework-quickcheck2, text
     }:
     mkDerivation {
       pname = "blaze-markup";
       version = "0.7.1.1";
       sha256 = "00s3qlkbq9gxgy6l5skbhnl5h81mjgzqcrw3yn3wqnyd9scab3b3";
       libraryHaskellDepends = [ base blaze-builder bytestring text ];
       testHaskellDepends = [
         base blaze-builder bytestring containers HUnit QuickCheck
         test-framework test-framework-hunit test-framework-quickcheck2 text
       ];
       homepage = "http://jaspervdj.be/blaze";
       description = "A blazingly fast markup combinator library for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "blaze-svg" = callPackage
    ({ mkDerivation, base, blaze-markup, mtl }:
     mkDerivation {
       pname = "blaze-svg";
       version = "0.3.6";
       sha256 = "0ybi73xvc76czndkbzh176yx3maqq60l5avvb3i5xzmzg1yz7pwh";
       libraryHaskellDepends = [ base blaze-markup mtl ];
       homepage = "https://github.com/deepakjois/blaze-svg";
       description = "SVG combinator library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "blaze-textual" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring, double-conversion
     , ghc-prim, integer-gmp, old-locale, QuickCheck, test-framework
     , test-framework-quickcheck2, text, time, vector
     }:
     mkDerivation {
       pname = "blaze-textual";
       version = "0.2.1.0";
       sha256 = "0bbcykkrlgdb6jaz72njriq9if6bzsx52jn26k093f5sn1d7jhhh";
       libraryHaskellDepends = [
         base blaze-builder bytestring ghc-prim integer-gmp old-locale text
         time vector
       ];
       testHaskellDepends = [
         base blaze-builder bytestring double-conversion QuickCheck
         test-framework test-framework-quickcheck2
       ];
       homepage = "http://github.com/bos/blaze-textual";
       description = "Fast rendering of common datatypes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bloodhound" = callPackage
    ({ mkDerivation, aeson, base, blaze-builder, bytestring, containers
     , data-default-class, derive, directory, doctest, doctest-prop
     , errors, exceptions, filepath, hashable, hspec, http-client
     , http-types, mtl, mtl-compat, network-uri, QuickCheck
     , quickcheck-properties, scientific, semigroups, text, time
     , transformers, unordered-containers, vector
     }:
     mkDerivation {
       pname = "bloodhound";
       version = "0.11.0.0";
       sha256 = "0fdrrdphlrqqn4164vp8qzvbwpgmpj918v8zlcx127mdfn370g6z";
       libraryHaskellDepends = [
         aeson base blaze-builder bytestring containers data-default-class
         exceptions hashable http-client http-types mtl mtl-compat
         network-uri scientific semigroups text time transformers
         unordered-containers vector
       ];
       testHaskellDepends = [
         aeson base bytestring containers derive directory doctest
         doctest-prop errors filepath hspec http-client http-types mtl
         QuickCheck quickcheck-properties semigroups text time
         unordered-containers vector
       ];
       doCheck = false;
       homepage = "https://github.com/bitemyapp/bloodhound";
       description = "ElasticSearch client library for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "blosum" = callPackage
    ({ mkDerivation, base, containers, fasta, lens
     , optparse-applicative, pipes, pipes-text, split, text, text-show
     }:
     mkDerivation {
       pname = "blosum";
       version = "0.1.1.2";
       sha256 = "0mcxwbpakrlgh934bxsnl1vlg782zwjb3q2s1kia6z8g1c0cmyxc";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base containers fasta lens text text-show
       ];
       executableHaskellDepends = [
         base containers fasta optparse-applicative pipes pipes-text split
         text
       ];
       homepage = "http://github.com/GregorySchwartz/blosum#readme";
       description = "BLOSUM generator";
       license = stdenv.lib.licenses.gpl2;
     }) {};
  "bmp" = callPackage
    ({ mkDerivation, base, binary, bytestring }:
     mkDerivation {
       pname = "bmp";
       version = "1.2.6.3";
       sha256 = "1k6s5z520dadj38y7ja0m4syrg094gyq14c63i6wx2701zj3viiw";
       libraryHaskellDepends = [ base binary bytestring ];
       homepage = "https://github.com/benl23x5/bmp";
       description = "Read and write uncompressed BMP image files";
       license = stdenv.lib.licenses.mit;
     }) {};
  "boolsimplifier" = callPackage
    ({ mkDerivation, base, containers }:
     mkDerivation {
       pname = "boolsimplifier";
       version = "0.1.8";
       sha256 = "13w2i7b2g9w5kzqnbjjdzf3r2dm7a4xxags02khhwlj1f8vsjvq9";
       revision = "1";
       editedCabalFile = "0xqm0vn9i49b75fnvnvcnr9m4zwvhqynrkcjdxghrsxayg420lnh";
       libraryHaskellDepends = [ base containers ];
       description = "Simplification tools for simple propositional formulas";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "boomerang" = callPackage
    ({ mkDerivation, base, mtl, template-haskell, text }:
     mkDerivation {
       pname = "boomerang";
       version = "1.4.5.2";
       sha256 = "1gm2l34f5vzxh78vx02hwg7b19q3qvynff0y8kss5svx83a4bpl6";
       libraryHaskellDepends = [ base mtl template-haskell text ];
       description = "Library for invertible parsing and printing";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "both" = callPackage
    ({ mkDerivation, base, semigroups, zero }:
     mkDerivation {
       pname = "both";
       version = "0.1.1.0";
       sha256 = "13hf6j8qfaqw446ifyx0y60j9kvlvm0yj3r4h910bcszfjvyhkkg";
       libraryHaskellDepends = [ base semigroups zero ];
       homepage = "https://github.com/barrucadu/both";
       description = "Like Maybe, but with a different Monoid instance";
       license = stdenv.lib.licenses.mit;
     }) {};
  "boundingboxes" = callPackage
    ({ mkDerivation, base, lens }:
     mkDerivation {
       pname = "boundingboxes";
       version = "0.2.3";
       sha256 = "0r3mffqxqadn8qklq3kr0ggirkficfj8ic1fxgki2zrc5jm4f2g8";
       libraryHaskellDepends = [ base lens ];
       homepage = "https://github.com/fumieval/boundingboxes";
       description = "A generic boundingbox for an arbitrary vector";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bower-json" = callPackage
    ({ mkDerivation, aeson, aeson-better-errors, base, bytestring
     , deepseq, mtl, scientific, tasty, tasty-hunit, text, transformers
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "bower-json";
       version = "0.8.1";
       sha256 = "0gvigg5b2j4vr2gn5f7y17nzxdrrrwxl9hyrsjlrf2asqpncvcrz";
       libraryHaskellDepends = [
         aeson aeson-better-errors base bytestring deepseq mtl scientific
         text transformers unordered-containers vector
       ];
       testHaskellDepends = [
         aeson base bytestring tasty tasty-hunit text unordered-containers
       ];
       homepage = "https://github.com/hdgarrood/bower-json";
       description = "Read bower.json from Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};
  "boxes" = callPackage
    ({ mkDerivation, base, QuickCheck, split }:
     mkDerivation {
       pname = "boxes";
       version = "0.1.4";
       sha256 = "1n7xiplzd3s1a39nizwjcgsh3wi2348mp21c3fk19v98ialfjgjf";
       libraryHaskellDepends = [ base split ];
       testHaskellDepends = [ base QuickCheck split ];
       description = "2D text pretty-printing library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "broadcast-chan" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "broadcast-chan";
       version = "0.1.1";
       sha256 = "1wl5x7qi00z7q9k6rbmzszzbrqycfcpg04a1ikrnvzqs61ddcnxd";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/merijn/broadcast-chan";
       description = "Broadcast channel type that avoids 0 reader space leaks";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bson" = callPackage
    ({ mkDerivation, base, binary, bytestring, cryptohash
     , data-binary-ieee754, mtl, network, QuickCheck, test-framework
     , test-framework-quickcheck2, text, time
     }:
     mkDerivation {
       pname = "bson";
       version = "0.3.2.3";
       sha256 = "10j96x6014g3w7i6szx5klr5c7cn1r0b7k581fyzpkb5ad1vlflv";
       libraryHaskellDepends = [
         base binary bytestring cryptohash data-binary-ieee754 mtl network
         text time
       ];
       testHaskellDepends = [
         base binary bytestring cryptohash data-binary-ieee754 mtl network
         QuickCheck test-framework test-framework-quickcheck2 text time
       ];
       homepage = "http://github.com/mongodb-haskell/bson";
       description = "BSON documents are JSON-like objects with a standard binary encoding";
       license = "unknown";
     }) {};
  "bson-lens" = callPackage
    ({ mkDerivation, base, bson, lens, text }:
     mkDerivation {
       pname = "bson-lens";
       version = "0.1.1";
       sha256 = "0q5ixrfgybf80q0x2p80qjy1kqarm2129hmzzqgcpn7jvqbv8fyp";
       libraryHaskellDepends = [ base bson lens text ];
       homepage = "https://github.com/jb55/bson-lens";
       description = "BSON lenses";
       license = stdenv.lib.licenses.mit;
     }) {};
  "btrfs" = callPackage
    ({ mkDerivation, base, bytestring, time, unix }:
     mkDerivation {
       pname = "btrfs";
       version = "0.1.2.0";
       sha256 = "037yc1x8rkgw1yn6zvk2fk6in9vszc83k7iykqlqcxjq9jsbvrx1";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base bytestring time unix ];
       homepage = "https://github.com/redneb/hs-btrfs";
       description = "Bindings to the btrfs API";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bumper" = callPackage
    ({ mkDerivation, base, Cabal, containers, fclabels, process
     , regex-compat, split, strict
     }:
     mkDerivation {
       pname = "bumper";
       version = "0.6.0.3";
       sha256 = "1a6sqkdzq05az6yj3zmlcbx6bmhw4zjx2aijxfi481z3ifiy7z3w";
       revision = "3";
       editedCabalFile = "0r4fj5mxl452786jw6pr2nwhs5sszlxb9nwcrakr44jysm181lhw";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         base Cabal containers fclabels process regex-compat split strict
       ];
       doHaddock = false;
       homepage = "http://github.com/silkapp/bumper";
       description = "Automatically bump package versions, also transitively";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bustle" = callPackage
    ({ mkDerivation, base, bytestring, cairo, containers, dbus
     , directory, filepath, gio, glib, gtk3, hgettext, HUnit, mtl, pango
     , parsec, pcap, process, QuickCheck, setlocale, system-glib
     , test-framework, test-framework-hunit, text, time
     }:
     mkDerivation {
       pname = "bustle";
       version = "0.5.4";
       sha256 = "051z39s1xb86ab1a3v4yz8vv8k2kygpixzd878nb1p2pp6xjq74j";
       isLibrary = false;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryPkgconfigDepends = [ system-glib ];
       executableHaskellDepends = [
         base bytestring cairo containers dbus directory filepath gio glib
         gtk3 hgettext mtl pango parsec pcap process setlocale text time
       ];
       testHaskellDepends = [
         base bytestring cairo containers dbus directory filepath gtk3
         hgettext HUnit mtl pango pcap QuickCheck setlocale test-framework
         test-framework-hunit text
       ];
       doHaddock = false;
       homepage = "http://www.freedesktop.org/wiki/Software/Bustle/";
       description = "Draw sequence diagrams of D-Bus traffic";
       license = "unknown";
     }) {system-glib = pkgs.glib;};
  "byteable" = callPackage
    ({ mkDerivation, base, bytestring }:
     mkDerivation {
       pname = "byteable";
       version = "0.1.1";
       sha256 = "1qizg0kxxjqnd3cbrjhhidk5pbbciz0pb3z5kzikjjxnnnhk8fr4";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base bytestring ];
       homepage = "http://github.com/vincenthz/hs-byteable";
       description = "Type class for sequence of bytes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bytedump" = callPackage
    ({ mkDerivation, base, bytestring }:
     mkDerivation {
       pname = "bytedump";
       version = "1.0";
       sha256 = "1pf01mna3isx3i7m50yz3pw5ygz5sg8i8pshjb3yw8q41w2ba5xf";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base bytestring ];
       homepage = "http://github.com/vincenthz/hs-bytedump";
       description = "Flexible byte dump helpers for human readers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "byteorder" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "byteorder";
       version = "1.0.4";
       sha256 = "06995paxbxk8lldvarqpb3ygcjbg4v8dk4scib1rjzwlhssvn85x";
       libraryHaskellDepends = [ base ];
       homepage = "http://community.haskell.org/~aslatter/code/byteorder";
       description = "Exposes the native endianness or byte ordering of the system";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bytes" = callPackage
    ({ mkDerivation, base, binary, bytestring, cereal, containers
     , hashable, mtl, scientific, text, time, transformers
     , transformers-compat, unordered-containers, void
     }:
     mkDerivation {
       pname = "bytes";
       version = "0.15.2";
       sha256 = "0d0z4sgl608x50zxhi0mlbag8g69x5sxs8763sz24djd2mqazyhb";
       libraryHaskellDepends = [
         base binary bytestring cereal containers hashable mtl scientific
         text time transformers transformers-compat unordered-containers
         void
       ];
       homepage = "https://github.com/ekmett/bytes";
       description = "Sharing code for serialization between binary and cereal";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "byteset" = callPackage
    ({ mkDerivation, base, binary }:
     mkDerivation {
       pname = "byteset";
       version = "0.1.1.0";
       sha256 = "18dg863wbbjh95yial4gy6vi5spwygp0l7dfx6bj00lz4xdrqj8k";
       libraryHaskellDepends = [ base binary ];
       description = "Set of bytes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bytestring-builder" = callPackage
    ({ mkDerivation, base, bytestring, deepseq }:
     mkDerivation {
       pname = "bytestring-builder";
       version = "0.10.8.1.0";
       sha256 = "1hnvjac28y44yn78c9vdp1zvrknvlw98ky3g4n5vivr16rvh8x3d";
       libraryHaskellDepends = [ base bytestring deepseq ];
       doHaddock = false;
       description = "The new bytestring builder, packaged outside of GHC";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bytestring-conversion" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, case-insensitive
     , criterion, double-conversion, QuickCheck, tasty, tasty-quickcheck
     , text, transformers
     }:
     mkDerivation {
       pname = "bytestring-conversion";
       version = "0.3.1";
       sha256 = "1y2fhwz632sp7n0iw87lz2g8vks4jgxz2kw99kysgivxfd4fmdqk";
       revision = "2";
       editedCabalFile = "1x8c42cfzb6fdvgkxxdxcpdf16csimlzsgahb1axnplmr6b3ba63";
       libraryHaskellDepends = [
         attoparsec base bytestring case-insensitive double-conversion text
       ];
       testHaskellDepends = [
         base bytestring QuickCheck tasty tasty-quickcheck
       ];
       benchmarkHaskellDepends = [
         base bytestring criterion text transformers
       ];
       homepage = "https://github.com/twittner/bytestring-conversion/";
       description = "Type-classes to convert values to and from ByteString";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "bytestring-handle" = callPackage
    ({ mkDerivation, base, bytestring, HUnit, QuickCheck
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "bytestring-handle";
       version = "0.1.0.5";
       sha256 = "10xv4m1k1wxnbabb02slp08fxcmv8m4nsbncbgj24a53bgrjdi52";
       libraryHaskellDepends = [ base bytestring ];
       testHaskellDepends = [
         base bytestring HUnit QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2
       ];
       homepage = "http://hub.darcs.net/ganesh/bytestring-handle";
       description = "ByteString-backed Handles";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bytestring-lexing" = callPackage
    ({ mkDerivation, base, bytestring }:
     mkDerivation {
       pname = "bytestring-lexing";
       version = "0.5.0.2";
       sha256 = "0wrzniawhgpphc6yx1v972gyqxdbv0pizaz9bafahrshyb9svy81";
       libraryHaskellDepends = [ base bytestring ];
       homepage = "http://code.haskell.org/~wren/";
       description = "Parse and produce literals efficiently from strict or lazy bytestrings";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "bytestring-progress" = callPackage
    ({ mkDerivation, base, bytestring, terminal-progress-bar, time }:
     mkDerivation {
       pname = "bytestring-progress";
       version = "1.0.7";
       sha256 = "0c1pz39jp9p8ppajnj3f2phph12nvhhjj7iz8sm580gzdl5rbc4p";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base bytestring terminal-progress-bar time
       ];
       homepage = "http://github.com/acw/bytestring-progress";
       description = "A library for tracking the consumption of a lazy ByteString";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bytestring-tree-builder" = callPackage
    ({ mkDerivation, base, base-prelude, bytestring, criterion, deepseq
     , quickcheck-instances, semigroups, tasty, tasty-hunit
     , tasty-quickcheck, tasty-smallcheck, text
     }:
     mkDerivation {
       pname = "bytestring-tree-builder";
       version = "0.2.7.1";
       sha256 = "1mbbs77zcz4y95np8rkwvgmslhyjsv46sv7zzh6qfs20waraa0xf";
       libraryHaskellDepends = [
         base base-prelude bytestring semigroups text
       ];
       testHaskellDepends = [
         base-prelude bytestring quickcheck-instances tasty tasty-hunit
         tasty-quickcheck tasty-smallcheck
       ];
       benchmarkHaskellDepends = [
         base-prelude bytestring criterion deepseq
       ];
       homepage = "https://github.com/nikita-volkov/bytestring-tree-builder";
       description = "A very efficient ByteString builder implementation based on the binary tree";
       license = stdenv.lib.licenses.mit;
     }) {};
  "bytestring-trie" = callPackage
    ({ mkDerivation, base, binary, bytestring }:
     mkDerivation {
       pname = "bytestring-trie";
       version = "0.2.4.1";
       sha256 = "0qqklrvdcprchnl4bxr6w7zf6k5gncincl3kysm34gd04sszxr1g";
       libraryHaskellDepends = [ base binary bytestring ];
       homepage = "http://code.haskell.org/~wren/";
       description = "An efficient finite map from (byte)strings to values";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bzlib" = callPackage
    ({ mkDerivation, base, bytestring, bzip2 }:
     mkDerivation {
       pname = "bzlib";
       version = "0.5.0.5";
       sha256 = "0zh130vw719a8d11q5qzc3ilzgv8cqyc2a7r1a131cv1fjnd1rwy";
       libraryHaskellDepends = [ base bytestring ];
       librarySystemDepends = [ bzip2 ];
       description = "Compression and decompression in the bzip2 format";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) bzip2;};
  "bzlib-conduit" = callPackage
    ({ mkDerivation, base, bindings-DSL, bytestring, bzip2, conduit
     , conduit-extra, data-default, hspec, mtl, QuickCheck, random
     , resourcet
     }:
     mkDerivation {
       pname = "bzlib-conduit";
       version = "0.2.1.4";
       sha256 = "07gxnbr65pl70lssgcxbajc0id9x4p3p8mc0hfi9lgf8rh270w1d";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base bindings-DSL bytestring conduit conduit-extra data-default mtl
         resourcet
       ];
       librarySystemDepends = [ bzip2 ];
       testHaskellDepends = [
         base bytestring conduit conduit-extra hspec QuickCheck random
         resourcet
       ];
       benchmarkHaskellDepends = [ base conduit conduit-extra resourcet ];
       homepage = "https://github.com/snoyberg/bzlib-conduit";
       description = "Streaming compression/decompression via conduits";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) bzip2;};
  "c2hs" = callPackage
    ({ mkDerivation, array, base, bytestring, containers, directory
     , dlist, filepath, HUnit, language-c, pretty, process, shelly
     , test-framework, test-framework-hunit, text, transformers
     }:
     mkDerivation {
       pname = "c2hs";
       version = "0.28.1";
       sha256 = "1fsj0wx8nv19yavky6s47djyh9nxcj9bz968x5w10fpl5ks4xc4m";
       isLibrary = false;
       isExecutable = true;
       enableSeparateDataOutput = true;
       executableHaskellDepends = [
         array base bytestring containers directory dlist filepath
         language-c pretty process
       ];
       testHaskellDepends = [
         base filepath HUnit shelly test-framework test-framework-hunit text
         transformers
       ];
       doHaddock = false;
       homepage = "https://github.com/haskell/c2hs";
       description = "C->Haskell FFI tool that gives some cross-language type safety";
       license = stdenv.lib.licenses.gpl2;
     }) {};
  "cabal-dependency-licenses" = callPackage
    ({ mkDerivation, base, Cabal, containers, directory, filepath }:
     mkDerivation {
       pname = "cabal-dependency-licenses";
       version = "0.1.2.0";
       sha256 = "15145yrdvhx3vc5sr11pgb1zn4c8yds4kxai3fn5qr6n8n3kssj3";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         base Cabal containers directory filepath
       ];
       doHaddock = false;
       homepage = "http://github.com/jaspervdj/cabal-dependency-licenses";
       description = "Compose a list of a project's transitive dependencies with their licenses";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cabal-file-th" = callPackage
    ({ mkDerivation, base, Cabal, directory, pretty, template-haskell
     }:
     mkDerivation {
       pname = "cabal-file-th";
       version = "0.2.4";
       sha256 = "076rprsnb9nyhm97ky4vzfcvirl8wx4g3f68lx7k5inhmkzxfm8b";
       libraryHaskellDepends = [
         base Cabal directory pretty template-haskell
       ];
       testHaskellDepends = [ base Cabal ];
       homepage = "http://github.com/nkpart/cabal-file-th";
       description = "Template Haskell expressions for reading fields from a project's cabal file";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cabal-helper" = callPackage
    ({ mkDerivation, base, bytestring, Cabal, cabal-install, containers
     , directory, extra, filepath, ghc-prim, mtl, process
     , template-haskell, temporary, transformers, unix, utf8-string
     }:
     mkDerivation {
       pname = "cabal-helper";
       version = "0.7.3.0";
       sha256 = "194j278109q5wdp0kl85y172n3c8hg0sms9gxfn2kl2x43smah3r";
       revision = "1";
       editedCabalFile = "0jhv5hx807zqrsa7fpzmhrhl6l1zjrpm96bvfsq0sq1bmi9y9h0y";
       isLibrary = true;
       isExecutable = true;
       setupHaskellDepends = [
         base Cabal containers directory filepath process template-haskell
         transformers
       ];
       libraryHaskellDepends = [
         base Cabal directory filepath ghc-prim mtl process transformers
       ];
       executableHaskellDepends = [
         base bytestring Cabal directory filepath ghc-prim mtl process
         template-haskell temporary transformers utf8-string
       ];
       testHaskellDepends = [
         base bytestring Cabal directory extra filepath ghc-prim mtl process
         template-haskell temporary transformers unix utf8-string
       ];
       testToolDepends = [ cabal-install ];
       doCheck = false;
       description = "Simple interface to some of Cabal's configuration state used by ghc-mod";
       license = stdenv.lib.licenses.agpl3;
     }) {};
  "cabal-install" = callPackage
    ({ mkDerivation, array, async, base, base16-bytestring, binary
     , bytestring, Cabal, containers, cryptohash-sha256, directory
     , filepath, hackage-security, hashable, HTTP, mtl, network
     , network-uri, pretty, process, QuickCheck, random, regex-posix
     , stm, tagged, tar, tasty, tasty-hunit, tasty-quickcheck, time
     , unix, zlib
     }:
     mkDerivation {
       pname = "cabal-install";
       version = "1.24.0.2";
       sha256 = "1q0gl3i9cpg854lcsiifxxginnvhp2bpx19wkkzpzrd072983j1a";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         array async base base16-bytestring binary bytestring Cabal
         containers cryptohash-sha256 directory filepath hackage-security
         hashable HTTP mtl network network-uri pretty process random stm tar
         time unix zlib
       ];
       testHaskellDepends = [
         array async base binary bytestring Cabal containers directory
         filepath hackage-security hashable HTTP mtl network network-uri
         pretty process QuickCheck random regex-posix stm tagged tar tasty
         tasty-hunit tasty-quickcheck time unix zlib
       ];
       doHaddock = false;
       doCheck = false;
       postInstall = ''
         mkdir $out/etc
         mv bash-completion $out/etc/bash_completion.d
       '';
       homepage = "http://www.haskell.org/cabal/";
       description = "The command-line interface for Cabal and Hackage";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cabal-rpm" = callPackage
    ({ mkDerivation, base, Cabal, directory, filepath, process, time
     , unix
     }:
     mkDerivation {
       pname = "cabal-rpm";
       version = "0.10.1";
       sha256 = "1sfd80qy73876l0a25lz2qsn5livc3kxp9fr6nffnk3knprykaj6";
       configureFlags = [ "-f-old-locale" ];
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         base Cabal directory filepath process time unix
       ];
       doHaddock = false;
       homepage = "https://github.com/juhp/cabal-rpm";
       description = "RPM packaging tool for Haskell Cabal-based packages";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "cabal-sort" = callPackage
    ({ mkDerivation, base, bytestring, Cabal, containers, directory
     , explicit-exception, fgl, filepath, process, transformers
     , utility-ht
     }:
     mkDerivation {
       pname = "cabal-sort";
       version = "0.0.5.3";
       sha256 = "1312kj7jhb5z3hidlgqvj6rlgiiribwfj3458i4axv8r345xcyqc";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         base bytestring Cabal containers directory explicit-exception fgl
         filepath process transformers utility-ht
       ];
       doHaddock = false;
       description = "Topologically sort cabal packages";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cabal-src" = callPackage
    ({ mkDerivation, base, bytestring, conduit, conduit-extra
     , containers, directory, filepath, http-conduit, http-types
     , network, process, resourcet, shelly, system-fileio
     , system-filepath, tar, text, transformers
     }:
     mkDerivation {
       pname = "cabal-src";
       version = "0.3.0.2";
       sha256 = "1rpddgk9pxsssrznk31n55mvfqicnl1pjz7r0irdzrphjdp6qqa9";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         base bytestring conduit conduit-extra containers directory filepath
         http-conduit http-types network process resourcet shelly
         system-fileio system-filepath tar text transformers
       ];
       doHaddock = false;
       homepage = "https://github.com/yesodweb/cabal-src";
       description = "Alternative install procedure to avoid the diamond dependency issue";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cabal2nix" = callPackage
    ({ mkDerivation, aeson, ansi-wl-pprint, base, bytestring, Cabal
     , containers, deepseq, directory, distribution-nixpkgs, filepath
     , hackage-db, language-nix, lens, monad-par, monad-par-extras, mtl
     , optparse-applicative, pretty, process, SHA, split, text, time
     , transformers, utf8-string, yaml
     }:
     mkDerivation {
       pname = "cabal2nix";
       version = "2.0.4";
       sha256 = "1qvz3h544716dw2nbb412xpiih5kap47rkbkh23vm1r7z5ymj2xj";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson ansi-wl-pprint base bytestring Cabal containers deepseq
         directory distribution-nixpkgs filepath hackage-db language-nix
         lens optparse-applicative pretty process SHA split text
         transformers yaml
       ];
       executableHaskellDepends = [
         aeson ansi-wl-pprint base bytestring Cabal containers deepseq
         directory distribution-nixpkgs filepath hackage-db language-nix
         lens monad-par monad-par-extras mtl optparse-applicative pretty
         process SHA split text time transformers utf8-string yaml
       ];
       homepage = "https://github.com/nixos/cabal2nix#readme";
       description = "Convert Cabal files into Nix build instructions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cache" = callPackage
    ({ mkDerivation, base, clock, hashable, hspec, stm, transformers
     , unordered-containers
     }:
     mkDerivation {
       pname = "cache";
       version = "0.1.0.0";
       sha256 = "1l7vn3fnspbnm3qrrxai7ldcy63wkppa4amspxhpqaajch5f97hl";
       libraryHaskellDepends = [
         base clock hashable stm transformers unordered-containers
       ];
       testHaskellDepends = [ base clock hspec stm transformers ];
       homepage = "https://github.com/hverr/haskell-cache";
       description = "An in-memory key/value store with expiration support";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cacophony" = callPackage
    ({ mkDerivation, aeson, async, base, base16-bytestring, bytestring
     , criterion, cryptonite, deepseq, directory, exceptions, free
     , hlint, lens, memory, monad-coroutine, mtl, safe-exceptions, text
     , transformers
     }:
     mkDerivation {
       pname = "cacophony";
       version = "0.8.0";
       sha256 = "00cwfdl0qsyc6za0zk0shybcnanaxna63dsqqhz7zq3sxannjc06";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring cryptonite deepseq exceptions free lens memory
         monad-coroutine mtl safe-exceptions transformers
       ];
       testHaskellDepends = [
         aeson async base base16-bytestring bytestring directory free hlint
         lens mtl text
       ];
       benchmarkHaskellDepends = [
         async base base16-bytestring bytestring criterion deepseq lens
       ];
       homepage = "https://github.com/centromere/cacophony";
       description = "A library implementing the Noise protocol";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "cairo" = callPackage
    ({ mkDerivation, array, base, bytestring, Cabal, cairo
     , gtk2hs-buildtools, mtl, text, utf8-string
     }:
     mkDerivation {
       pname = "cairo";
       version = "0.13.3.1";
       sha256 = "0nk77lixlf6j3a2870mbakcznigrf43m6ac1xn35d1v3dmy1kjm3";
       enableSeparateDataOutput = true;
       setupHaskellDepends = [ base Cabal gtk2hs-buildtools ];
       libraryHaskellDepends = [
         array base bytestring mtl text utf8-string
       ];
       libraryPkgconfigDepends = [ cairo ];
       homepage = "http://projects.haskell.org/gtk2hs/";
       description = "Binding to the Cairo library";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) cairo;};
  "call-stack" = callPackage
    ({ mkDerivation, base, nanospec }:
     mkDerivation {
       pname = "call-stack";
       version = "0.1.0";
       sha256 = "1qmihf5jafmc79sk52l6gpx75f5bnla2lp62kh3p34x3j84mwpzj";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base nanospec ];
       homepage = "https://github.com/sol/call-stack#readme";
       description = "Use GHC call-stacks in a backward compatible way";
       license = stdenv.lib.licenses.mit;
     }) {};
  "camfort" = callPackage
    ({ mkDerivation, alex, array, base, bytestring, containers
     , directory, fgl, filepath, fortran-src, GenericPretty, ghc-prim
     , happy, hmatrix, hspec, matrix, mtl, QuickCheck, syb, syz, text
     , transformers, uniplate, vector
     }:
     mkDerivation {
       pname = "camfort";
       version = "0.900";
       sha256 = "09s499pvkrwrcpw9v515m55y91dpis2a5bppsiq29x7csnjxb4pw";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         array base bytestring containers directory fgl filepath fortran-src
         GenericPretty ghc-prim hmatrix matrix mtl syb syz text transformers
         uniplate vector
       ];
       libraryToolDepends = [ alex happy ];
       executableHaskellDepends = [
         array base bytestring containers directory fgl filepath fortran-src
         GenericPretty ghc-prim hmatrix matrix mtl QuickCheck syb syz text
         transformers uniplate vector
       ];
       testHaskellDepends = [
         array base bytestring containers directory filepath fortran-src
         hmatrix hspec mtl QuickCheck uniplate
       ];
       doCheck = false;
       description = "CamFort - Cambridge Fortran infrastructure";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "carray" = callPackage
    ({ mkDerivation, array, base, binary, bytestring, ix-shapable
     , QuickCheck, syb
     }:
     mkDerivation {
       pname = "carray";
       version = "0.1.6.5";
       sha256 = "0svq8sqig0ym4sx9alyvl3vdabigyx2zlq7d0pnz2g5ygkbkn9bb";
       libraryHaskellDepends = [
         array base binary bytestring ix-shapable QuickCheck syb
       ];
       testHaskellDepends = [ array base ix-shapable QuickCheck ];
       benchmarkHaskellDepends = [ array base ];
       description = "A C-compatible array library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cartel" = callPackage
    ({ mkDerivation, base, directory, filepath, multiarg
     , optparse-applicative, pretty-show, process, QuickCheck, random
     , split, tasty, tasty-quickcheck, tasty-th, time, transformers
     }:
     mkDerivation {
       pname = "cartel";
       version = "0.18.0.2";
       sha256 = "0w62dv3lw46yh0nv68zf3wiw69ah4y8g451jz5disfxppqnal9vv";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base directory filepath optparse-applicative pretty-show process
         split time transformers
       ];
       executableHaskellDepends = [
         base directory filepath optparse-applicative pretty-show process
         split time transformers
       ];
       testHaskellDepends = [
         base directory filepath multiarg optparse-applicative pretty-show
         process QuickCheck random split tasty tasty-quickcheck tasty-th
         time transformers
       ];
       homepage = "http://www.github.com/massysett/cartel";
       description = "Specify Cabal files in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "case-insensitive" = callPackage
    ({ mkDerivation, base, bytestring, criterion, deepseq, hashable
     , HUnit, test-framework, test-framework-hunit, text
     }:
     mkDerivation {
       pname = "case-insensitive";
       version = "1.2.0.7";
       sha256 = "1j6ahvrz1g5q89y2difyk838yhwjc8z67zr0v2z512qdznc3h38n";
       libraryHaskellDepends = [ base bytestring deepseq hashable text ];
       testHaskellDepends = [
         base bytestring HUnit test-framework test-framework-hunit text
       ];
       benchmarkHaskellDepends = [ base bytestring criterion deepseq ];
       homepage = "https://github.com/basvandijk/case-insensitive";
       description = "Case insensitive string comparison";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cased" = callPackage
    ({ mkDerivation, base, text }:
     mkDerivation {
       pname = "cased";
       version = "0.1.0.0";
       sha256 = "08xdc0mpp6b6inaxh6cr6ni08sy2ahfcbq8xbs3m4cfqbrqfd543";
       libraryHaskellDepends = [ base text ];
       homepage = "https://github.com/jb55/cased";
       description = "Track string casing in its type";
       license = stdenv.lib.licenses.mit;
     }) {};
  "cases" = callPackage
    ({ mkDerivation, attoparsec, base-prelude, loch-th, text }:
     mkDerivation {
       pname = "cases";
       version = "0.1.3.1";
       sha256 = "11vri5v866ixn5n8am217wlfbz4l4jlym2mlw58b4qck3rgx8as7";
       libraryHaskellDepends = [ attoparsec base-prelude loch-th text ];
       doCheck = false;
       homepage = "https://github.com/nikita-volkov/cases";
       description = "A converter for spinal, snake and camel cases";
       license = stdenv.lib.licenses.mit;
     }) {};
  "cassava" = callPackage
    ({ mkDerivation, array, attoparsec, base, blaze-builder, bytestring
     , containers, criterion, deepseq, hashable, HUnit, lazy-csv
     , QuickCheck, test-framework, test-framework-hunit
     , test-framework-quickcheck2, text, unordered-containers, vector
     }:
     mkDerivation {
       pname = "cassava";
       version = "0.4.5.1";
       sha256 = "17wxrwq977nyi225zlg3wj32f0ypyvikznhw59k0hxb4vkljlqkw";
       libraryHaskellDepends = [
         array attoparsec base blaze-builder bytestring containers deepseq
         hashable text unordered-containers vector
       ];
       testHaskellDepends = [
         attoparsec base bytestring hashable HUnit QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2 text
         unordered-containers vector
       ];
       benchmarkHaskellDepends = [
         array attoparsec base blaze-builder bytestring containers criterion
         deepseq hashable lazy-csv text unordered-containers vector
       ];
       homepage = "https://github.com/hvr/cassava";
       description = "A CSV parsing and encoding library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cassava-conduit" = callPackage
    ({ mkDerivation, array, base, bifunctors, bytestring, cassava
     , conduit, conduit-extra, containers, criterion, mtl, QuickCheck
     , text
     }:
     mkDerivation {
       pname = "cassava-conduit";
       version = "0.3.2";
       sha256 = "1lpzc926w4pnl7qi1zwahw0w8khclcqzmv1i1pm40dg4lhyixb76";
       libraryHaskellDepends = [
         array base bifunctors bytestring cassava conduit conduit-extra
         containers mtl text
       ];
       testHaskellDepends = [ base QuickCheck ];
       benchmarkHaskellDepends = [ base criterion ];
       homepage = "https://github.com/domdere/cassava-conduit";
       description = "Conduit interface for cassava package";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cassava-megaparsec" = callPackage
    ({ mkDerivation, base, bytestring, cassava, containers, hspec
     , hspec-megaparsec, megaparsec, unordered-containers, vector
     }:
     mkDerivation {
       pname = "cassava-megaparsec";
       version = "0.1.0";
       sha256 = "00h7b5y8414nc4861mm3k4b7kjhwk2z3hl8l3viykidfcsbj4xwd";
       revision = "4";
       editedCabalFile = "17hi4p5bwpfpvh3va80xwp0icpspvg58g05w8ibh3mihdxr6sqff";
       libraryHaskellDepends = [
         base bytestring cassava containers megaparsec unordered-containers
         vector
       ];
       testHaskellDepends = [
         base bytestring cassava hspec hspec-megaparsec vector
       ];
       homepage = "https://github.com/stackbuilders/cassava-megaparsec";
       description = "Megaparsec parser of CSV files that plays nicely with Cassava";
       license = stdenv.lib.licenses.mit;
     }) {};
  "cassette" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "cassette";
       version = "0.1.0";
       sha256 = "04qnk1s4bdj3wbbxdwzzvpnhkcgma8c4qfkg454ybg7f8kyv6h7x";
       libraryHaskellDepends = [ base ];
       description = "A combinator library for simultaneously defining parsers and pretty printers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cayley-client" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, binary, bytestring
     , exceptions, hspec, http-client, http-conduit, lens, lens-aeson
     , mtl, text, transformers, unordered-containers, vector
     }:
     mkDerivation {
       pname = "cayley-client";
       version = "0.2.1.1";
       sha256 = "1ks7lyndk9ilgzijq3j6sicnqvd63gcf5rkxa90lsl0fpwk74m04";
       libraryHaskellDepends = [
         aeson attoparsec base binary bytestring exceptions http-client
         http-conduit lens lens-aeson mtl text transformers
         unordered-containers vector
       ];
       testHaskellDepends = [ aeson base hspec unordered-containers ];
       doCheck = false;
       homepage = "https://github.com/MichelBoucey/cayley-client";
       description = "A Haskell client for the Cayley graph database";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cereal" = callPackage
    ({ mkDerivation, array, base, bytestring, containers, ghc-prim
     , QuickCheck, test-framework, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "cereal";
       version = "0.5.4.0";
       sha256 = "1rzyr8r9pjlgas5pc8n776r22i0ficanq05ypqrs477jxxd6rjns";
       libraryHaskellDepends = [
         array base bytestring containers ghc-prim
       ];
       testHaskellDepends = [
         base bytestring QuickCheck test-framework
         test-framework-quickcheck2
       ];
       homepage = "https://github.com/GaloisInc/cereal";
       description = "A binary serialization library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cereal-conduit" = callPackage
    ({ mkDerivation, base, bytestring, cereal, conduit, HUnit, mtl
     , resourcet, transformers
     }:
     mkDerivation {
       pname = "cereal-conduit";
       version = "0.7.3";
       sha256 = "18h09j16m4yc4fcp80x7m1p2c87q6f628z36y8bnxbcjc9m95gq5";
       libraryHaskellDepends = [
         base bytestring cereal conduit resourcet transformers
       ];
       testHaskellDepends = [
         base bytestring cereal conduit HUnit mtl resourcet transformers
       ];
       homepage = "https://github.com/snoyberg/conduit";
       description = "Turn Data.Serialize Gets and Puts into Sources, Sinks, and Conduits";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cereal-text" = callPackage
    ({ mkDerivation, base, cereal, text }:
     mkDerivation {
       pname = "cereal-text";
       version = "0.1.0.2";
       sha256 = "0k1ml0z5rksvrhz15i9afld7bybgylqmy5nmvik3p98zd3s1ayiw";
       libraryHaskellDepends = [ base cereal text ];
       homepage = "https://github.com/ulikoehler/cereal-text";
       description = "Data.Text instances for the cereal serialization library";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "cereal-vector" = callPackage
    ({ mkDerivation, base, bytestring, cereal, QuickCheck, vector }:
     mkDerivation {
       pname = "cereal-vector";
       version = "0.2.0.1";
       sha256 = "0czrb4l1n73cfxxlzbcqfa34qa3gw0m5w5mlz0rawylyqfk8a1pz";
       libraryHaskellDepends = [ base bytestring cereal vector ];
       testHaskellDepends = [ base cereal QuickCheck vector ];
       homepage = "https://github.com/acfoltzer/cereal-vector";
       description = "Serialize instances for Data.Vector types.";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cgi" = callPackage
    ({ mkDerivation, base, bytestring, containers, doctest, exceptions
     , mtl, multipart, network, network-uri, parsec, QuickCheck, time
     , xhtml
     }:
     mkDerivation {
       pname = "cgi";
       version = "3001.3.0.2";
       sha256 = "1hbpplss1m4rdpm4ibip6fpimlhssqa14fl338kl2jbc463i64cj";
       libraryHaskellDepends = [
         base bytestring containers exceptions mtl multipart network
         network-uri parsec time xhtml
       ];
       testHaskellDepends = [ base doctest QuickCheck ];
       homepage = "https://github.com/cheecheeo/haskell-cgi";
       description = "A library for writing CGI programs";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "charset" = callPackage
    ({ mkDerivation, array, base, bytestring, containers, semigroups
     , unordered-containers
     }:
     mkDerivation {
       pname = "charset";
       version = "0.3.7.1";
       sha256 = "1gn0m96qpjww8hpp2g1as5yy0wcwy4iq73h3kz6g0yxxhcl5sh9x";
       libraryHaskellDepends = [
         array base bytestring containers semigroups unordered-containers
       ];
       homepage = "http://github.com/ekmett/charset";
       description = "Fast unicode character sets based on complemented PATRICIA tries";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "charsetdetect-ae" = callPackage
    ({ mkDerivation, base, bytestring }:
     mkDerivation {
       pname = "charsetdetect-ae";
       version = "1.1.0.2";
       sha256 = "1ghgp8kqpr5xc14lcwlf450s6s8lm52zag34v9gvr3x86bjgm4qk";
       libraryHaskellDepends = [ base bytestring ];
       homepage = "http://github.com/aelve/charsetdetect-ae";
       description = "Character set detection using Mozilla's Universal Character Set Detector";
       license = "LGPL";
     }) {};
  "cheapskate" = callPackage
    ({ mkDerivation, aeson, base, blaze-html, bytestring, containers
     , data-default, http-types, mtl, syb, text, uniplate, wai
     , wai-extra, xss-sanitize
     }:
     mkDerivation {
       pname = "cheapskate";
       version = "0.1.0.5";
       sha256 = "0cpsmfx5z2xykg71sv8j7pl8ga6pzyjnjdb9bxn00vcpqkzvfqvs";
       revision = "1";
       editedCabalFile = "1m88nnrdd2bzvpnaypzi38xa1criwyj5j6c6pzqjkkivmhk3bw99";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base blaze-html containers data-default mtl syb text uniplate
         xss-sanitize
       ];
       executableHaskellDepends = [
         aeson base blaze-html bytestring http-types text wai wai-extra
       ];
       homepage = "http://github.com/jgm/cheapskate";
       description = "Experimental markdown processor";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cheapskate-highlight" = callPackage
    ({ mkDerivation, base, blaze-html, cheapskate, highlighting-kate
     , text
     }:
     mkDerivation {
       pname = "cheapskate-highlight";
       version = "0.1.0.0";
       sha256 = "0w6k694gmnx7h8ix79z8scsdl65zbilxni1vjr90ka2fdfrazxss";
       libraryHaskellDepends = [
         base blaze-html cheapskate highlighting-kate text
       ];
       homepage = "http://github.com/aelve/cheapskate-highlight";
       description = "Code highlighting for cheapskate";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cheapskate-lucid" = callPackage
    ({ mkDerivation, base, blaze-html, cheapskate, lucid }:
     mkDerivation {
       pname = "cheapskate-lucid";
       version = "0.1.0.0";
       sha256 = "0ibjfy5dbkizg8cw4avhwl62xpk735a1a7bc0nkhf9zxpq9fb0pm";
       libraryHaskellDepends = [ base blaze-html cheapskate lucid ];
       homepage = "http://github.com/aelve/cheapskate-lucid";
       description = "Use cheapskate with Lucid";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "check-email" = callPackage
    ({ mkDerivation, base, bytestring, email-validate, resolv }:
     mkDerivation {
       pname = "check-email";
       version = "1.0";
       sha256 = "1drw8rspdc4a7jw2ql3fi1dcmw56ah5csf2bil6ii8ccq5vsbfyz";
       libraryHaskellDepends = [ base bytestring email-validate ];
       librarySystemDepends = [ resolv ];
       description = "Confirm whether an email is valid and probably existant";
       license = stdenv.lib.licenses.bsd3;
     }) {resolv = null;};
  "checkers" = callPackage
    ({ mkDerivation, array, base, QuickCheck, random }:
     mkDerivation {
       pname = "checkers";
       version = "0.4.6";
       sha256 = "03wpvxl03rj8v8f17jjmkfi94wvm8h1icyfgvgw7np6cpz99rp1a";
       libraryHaskellDepends = [ array base QuickCheck random ];
       description = "Check properties on standard classes and data structures";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "chell" = callPackage
    ({ mkDerivation, ansi-terminal, base, bytestring, options, patience
     , random, template-haskell, text, transformers
     }:
     mkDerivation {
       pname = "chell";
       version = "0.4.0.1";
       sha256 = "0lb95abzxl4a87nfqxsxpb3a39pd52cci43hcvj8615hyhqvs2jz";
       libraryHaskellDepends = [
         ansi-terminal base bytestring options patience random
         template-haskell text transformers
       ];
       homepage = "https://john-millikin.com/software/chell/";
       description = "A simple and intuitive library for automated testing";
       license = stdenv.lib.licenses.mit;
     }) {};
  "chell-quickcheck" = callPackage
    ({ mkDerivation, base, chell, QuickCheck, random }:
     mkDerivation {
       pname = "chell-quickcheck";
       version = "0.2.5";
       sha256 = "02bkcnx5k6r5csdnnkvk4wfd0l36nxb87i1463ynw17n7ym9s4cs";
       libraryHaskellDepends = [ base chell QuickCheck random ];
       homepage = "https://john-millikin.com/software/chell/";
       description = "QuickCheck support for the Chell testing library";
       license = stdenv.lib.licenses.mit;
     }) {};
  "chunked-data" = callPackage
    ({ mkDerivation, base, bytestring, containers, semigroups, text
     , transformers, vector
     }:
     mkDerivation {
       pname = "chunked-data";
       version = "0.3.0";
       sha256 = "0bszq6fijnr4pmadzz89smj7kfmzx0ca3wd9ga8gv0in9jk9vgp1";
       libraryHaskellDepends = [
         base bytestring containers semigroups text transformers vector
       ];
       homepage = "https://github.com/snoyberg/mono-traversable";
       description = "Typeclasses for dealing with various chunked data representations";
       license = stdenv.lib.licenses.mit;
     }) {};
  "cipher-aes" = callPackage
    ({ mkDerivation, base, byteable, bytestring, crypto-cipher-tests
     , crypto-cipher-types, QuickCheck, securemem, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "cipher-aes";
       version = "0.2.11";
       sha256 = "05ahz6kjq0fl1w66gpiqy0vndli5yx1pbsbw9ni3viwqas4p3cfk";
       libraryHaskellDepends = [
         base byteable bytestring crypto-cipher-types securemem
       ];
       testHaskellDepends = [
         base byteable bytestring crypto-cipher-tests crypto-cipher-types
         QuickCheck test-framework test-framework-quickcheck2
       ];
       homepage = "https://github.com/vincenthz/hs-cipher-aes";
       description = "Fast AES cipher implementation with advanced mode of operations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cipher-aes128" = callPackage
    ({ mkDerivation, base, bytestring, cereal, criterion, crypto-api
     , entropy, tagged
     }:
     mkDerivation {
       pname = "cipher-aes128";
       version = "0.7.0.3";
       sha256 = "0fif8626z1p2q6734sjb69s1ascwmqiv9dkmzir7166ipjlbw9vg";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring cereal crypto-api tagged
       ];
       benchmarkHaskellDepends = [
         base bytestring cereal criterion crypto-api entropy tagged
       ];
       homepage = "https://github.com/TomMD/cipher-aes128";
       description = "AES and common modes using AES-NI when available";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cipher-blowfish" = callPackage
    ({ mkDerivation, base, byteable, bytestring, crypto-cipher-tests
     , crypto-cipher-types, QuickCheck, securemem, test-framework
     , test-framework-quickcheck2, vector
     }:
     mkDerivation {
       pname = "cipher-blowfish";
       version = "0.0.3";
       sha256 = "0hb67gmiyqrknynz5am8nada1b1v47rqla87dw5nvfhxhl51fhcg";
       libraryHaskellDepends = [
         base byteable bytestring crypto-cipher-types securemem vector
       ];
       testHaskellDepends = [
         base byteable bytestring crypto-cipher-tests crypto-cipher-types
         QuickCheck test-framework test-framework-quickcheck2
       ];
       homepage = "http://github.com/vincenthz/hs-crypto-cipher";
       description = "Blowfish cipher";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cipher-camellia" = callPackage
    ({ mkDerivation, base, byteable, bytestring, crypto-cipher-tests
     , crypto-cipher-types, QuickCheck, securemem, test-framework
     , test-framework-quickcheck2, vector
     }:
     mkDerivation {
       pname = "cipher-camellia";
       version = "0.0.2";
       sha256 = "19z2mi1rvp8fsqjdbmrm1hdlxmx61yr55fyknmmn945qrlvx234d";
       libraryHaskellDepends = [
         base byteable bytestring crypto-cipher-types securemem vector
       ];
       testHaskellDepends = [
         base byteable bytestring crypto-cipher-tests crypto-cipher-types
         QuickCheck test-framework test-framework-quickcheck2
       ];
       homepage = "http://github.com/vincenthz/hs-crypto-cipher";
       description = "Camellia block cipher primitives";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cipher-des" = callPackage
    ({ mkDerivation, base, byteable, bytestring, crypto-cipher-tests
     , crypto-cipher-types, QuickCheck, securemem, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "cipher-des";
       version = "0.0.6";
       sha256 = "1isazxa2nr1y13y0danfk7wghy34rfpn3f43rw714nk2xk6vrwc5";
       libraryHaskellDepends = [
         base byteable bytestring crypto-cipher-types securemem
       ];
       testHaskellDepends = [
         base byteable bytestring crypto-cipher-tests crypto-cipher-types
         QuickCheck test-framework test-framework-quickcheck2
       ];
       homepage = "http://github.com/vincenthz/hs-crypto-cipher";
       description = "DES and 3DES primitives";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cipher-rc4" = callPackage
    ({ mkDerivation, base, byteable, bytestring, crypto-cipher-tests
     , crypto-cipher-types, QuickCheck, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "cipher-rc4";
       version = "0.1.4";
       sha256 = "0k9qf0cn5yxc4qlqikcm5yyrnkkvr6g3v7306cp8iwz7r4dp6zn6";
       libraryHaskellDepends = [
         base byteable bytestring crypto-cipher-types
       ];
       testHaskellDepends = [
         base bytestring crypto-cipher-tests crypto-cipher-types QuickCheck
         test-framework test-framework-quickcheck2
       ];
       homepage = "http://github.com/vincenthz/hs-cipher-rc4";
       description = "Fast RC4 cipher implementation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "circle-packing" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "circle-packing";
       version = "0.1.0.5";
       sha256 = "17sw5wy76hdk34nldcd44sqbf5fdhwii0racpd3zfrkad77d26h4";
       libraryHaskellDepends = [ base ];
       description = "Simple heuristic for packing discs of varying radii in a circle";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "clash-lib" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, bytestring, clash-prelude
     , concurrent-supply, containers, deepseq, directory, errors, fgl
     , filepath, ghc, hashable, integer-gmp, lens, mtl, pretty, process
     , template-haskell, text, time, transformers, unbound-generics
     , unordered-containers, uu-parsinglib, wl-pprint-text
     }:
     mkDerivation {
       pname = "clash-lib";
       version = "0.6.21";
       sha256 = "1bcq5dsq4058ajdynjbwyrdqkf4bycxhmd6dkjjncfsybv8ka09b";
       revision = "1";
       editedCabalFile = "0qnj5dcb5rdvha6lq0xycw2cv6m035zbnqa64py9lz49jizaziad";
       libraryHaskellDepends = [
         aeson attoparsec base bytestring clash-prelude concurrent-supply
         containers deepseq directory errors fgl filepath ghc hashable
         integer-gmp lens mtl pretty process template-haskell text time
         transformers unbound-generics unordered-containers uu-parsinglib
         wl-pprint-text
       ];
       homepage = "http://www.clash-lang.org/";
       description = "CAES Language for Synchronous Hardware - As a Library";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "clash-prelude" = callPackage
    ({ mkDerivation, array, base, data-default, deepseq, doctest
     , ghc-prim, ghc-typelits-extra, ghc-typelits-natnormalise
     , integer-gmp, lens, QuickCheck, reflection, singletons
     , template-haskell
     }:
     mkDerivation {
       pname = "clash-prelude";
       version = "0.10.14";
       sha256 = "1wppbqj9ycg7v21vlw0q3cfn7xfk88i14nn94djsiihabazym6dz";
       revision = "1";
       editedCabalFile = "069znqchj1kvq3v2ssv7iqlxmvlyfzwqam5lc339f6gwh77ydnms";
       libraryHaskellDepends = [
         array base data-default deepseq ghc-prim ghc-typelits-extra
         ghc-typelits-natnormalise integer-gmp lens QuickCheck reflection
         singletons template-haskell
       ];
       testHaskellDepends = [ base doctest ];
       doCheck = false;
       homepage = "http://www.clash-lang.org/";
       description = "CAES Language for Synchronous Hardware - Prelude library";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "clash-systemverilog" = callPackage
    ({ mkDerivation, base, clash-lib, clash-prelude, fgl, lens, mtl
     , text, unordered-containers, wl-pprint-text
     }:
     mkDerivation {
       pname = "clash-systemverilog";
       version = "0.6.10";
       sha256 = "0srd18c8j1i83xf57mabdk8cqz23j818nc4k6wwcz3k4cqlkvhr0";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base clash-lib clash-prelude fgl lens mtl text unordered-containers
         wl-pprint-text
       ];
       homepage = "http://www.clash-lang.org/";
       description = "CAES Language for Synchronous Hardware - SystemVerilog backend";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "clash-verilog" = callPackage
    ({ mkDerivation, base, clash-lib, clash-prelude, fgl, lens, mtl
     , text, unordered-containers, wl-pprint-text
     }:
     mkDerivation {
       pname = "clash-verilog";
       version = "0.6.10";
       sha256 = "0v5j1zh56l6pc2adc7382rrwi8mybgy5ynb0rsnlpd53aa3jqg4l";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base clash-lib clash-prelude fgl lens mtl text unordered-containers
         wl-pprint-text
       ];
       homepage = "http://www.clash-lang.org/";
       description = "CAES Language for Synchronous Hardware - Verilog backend";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "clash-vhdl" = callPackage
    ({ mkDerivation, base, clash-lib, clash-prelude, fgl, lens, mtl
     , text, unordered-containers, wl-pprint-text
     }:
     mkDerivation {
       pname = "clash-vhdl";
       version = "0.6.16";
       sha256 = "1j5h68yj77j47hnx7inj7vkr6vjib4yhnahcjl74q525llkbxx22";
       revision = "1";
       editedCabalFile = "0g0vq0wjhgzz69pm83g0r0g2plwz6prv5b96hiz3cm1a4ac6i0dj";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base clash-lib clash-prelude fgl lens mtl text unordered-containers
         wl-pprint-text
       ];
       homepage = "http://www.clash-lang.org/";
       description = "CAES Language for Synchronous Hardware - VHDL backend";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "classy-prelude" = callPackage
    ({ mkDerivation, async, base, basic-prelude, bifunctors, bytestring
     , chunked-data, containers, deepseq, dlist, exceptions, ghc-prim
     , hashable, hspec, lifted-async, lifted-base, monad-unlift
     , mono-traversable, mono-traversable-instances, mtl
     , mutable-containers, primitive, QuickCheck, safe-exceptions, say
     , semigroups, stm, stm-chans, text, time, time-locale-compat
     , transformers, transformers-base, unordered-containers, vector
     , vector-instances
     }:
     mkDerivation {
       pname = "classy-prelude";
       version = "1.0.2";
       sha256 = "0rx4ynlx941484z9b8zkxpiyxawp74vryd47agqz52kmjzwsqpsf";
       libraryHaskellDepends = [
         async base basic-prelude bifunctors bytestring chunked-data
         containers deepseq dlist exceptions ghc-prim hashable lifted-async
         lifted-base monad-unlift mono-traversable
         mono-traversable-instances mtl mutable-containers primitive
         safe-exceptions say semigroups stm stm-chans text time
         time-locale-compat transformers transformers-base
         unordered-containers vector vector-instances
       ];
       testHaskellDepends = [
         base containers hspec QuickCheck transformers unordered-containers
       ];
       homepage = "https://github.com/snoyberg/mono-traversable";
       description = "A typeclass-based Prelude";
       license = stdenv.lib.licenses.mit;
     }) {};
  "classy-prelude-conduit" = callPackage
    ({ mkDerivation, base, bytestring, classy-prelude, conduit
     , conduit-combinators, hspec, monad-control, QuickCheck, resourcet
     , transformers, void
     }:
     mkDerivation {
       pname = "classy-prelude-conduit";
       version = "1.0.2";
       sha256 = "069zhh1qqq3arxil52ci7ylzm0an4xw618807q0mh46gh3dig3xb";
       libraryHaskellDepends = [
         base bytestring classy-prelude conduit conduit-combinators
         monad-control resourcet transformers void
       ];
       testHaskellDepends = [
         base bytestring conduit hspec QuickCheck transformers
       ];
       homepage = "https://github.com/snoyberg/mono-traversable";
       description = "classy-prelude together with conduit functions";
       license = stdenv.lib.licenses.mit;
     }) {};
  "classy-prelude-yesod" = callPackage
    ({ mkDerivation, aeson, base, classy-prelude
     , classy-prelude-conduit, data-default, http-conduit, http-types
     , persistent, yesod, yesod-newsfeed, yesod-static
     }:
     mkDerivation {
       pname = "classy-prelude-yesod";
       version = "1.0.2";
       sha256 = "01lll4nbvplf8c2zb4hnxc5m2fd2xw6i6qzdn3gfhn9154d950ri";
       libraryHaskellDepends = [
         aeson base classy-prelude classy-prelude-conduit data-default
         http-conduit http-types persistent yesod yesod-newsfeed
         yesod-static
       ];
       homepage = "https://github.com/snoyberg/mono-traversable";
       description = "Provide a classy prelude including common Yesod functionality";
       license = stdenv.lib.licenses.mit;
     }) {};
  "clay" = callPackage
    ({ mkDerivation, base, hspec, hspec-expectations, mtl, text }:
     mkDerivation {
       pname = "clay";
       version = "0.11";
       sha256 = "1hdk551wl5hg9danz4yf4h7bs8w3076s6hyg6h3fq20mn9hj65y3";
       libraryHaskellDepends = [ base mtl text ];
       testHaskellDepends = [ base hspec hspec-expectations mtl text ];
       homepage = "http://fvisser.nl/clay";
       description = "CSS preprocessor as embedded Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "clckwrks" = callPackage
    ({ mkDerivation, acid-state, aeson, aeson-qq, attoparsec, base
     , blaze-html, bytestring, cereal, containers, directory, filepath
     , happstack-authenticate, happstack-hsp, happstack-jmacro
     , happstack-server, happstack-server-tls, hsp, hsx-jmacro, hsx2hs
     , ixset, jmacro, lens, mtl, network, network-uri, old-locale
     , openssl, process, random, reform, reform-happstack, reform-hsp
     , safecopy, stm, text, time, time-locale-compat
     , unordered-containers, userid, utf8-string, uuid-orphans
     , uuid-types, vector, web-plugins, web-routes, web-routes-happstack
     , web-routes-hsp, web-routes-th, xss-sanitize
     }:
     mkDerivation {
       pname = "clckwrks";
       version = "0.23.19.2";
       sha256 = "117vwh1lxhzww1fwgja1hgrgximb25iiw6kcxwqrjrnbminsalql";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         acid-state aeson aeson-qq attoparsec base blaze-html bytestring
         cereal containers directory filepath happstack-authenticate
         happstack-hsp happstack-jmacro happstack-server
         happstack-server-tls hsp hsx-jmacro hsx2hs ixset jmacro lens mtl
         network network-uri old-locale process random reform
         reform-happstack reform-hsp safecopy stm text time
         time-locale-compat unordered-containers userid utf8-string
         uuid-orphans uuid-types vector web-plugins web-routes
         web-routes-happstack web-routes-hsp web-routes-th xss-sanitize
       ];
       librarySystemDepends = [ openssl ];
       homepage = "http://www.clckwrks.com/";
       description = "A secure, reliable content management system (CMS) and blogging platform";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) openssl;};
  "clckwrks-cli" = callPackage
    ({ mkDerivation, acid-state, base, clckwrks, haskeline, mtl
     , network, parsec
     }:
     mkDerivation {
       pname = "clckwrks-cli";
       version = "0.2.17.1";
       sha256 = "1si5xn68cq00zh4lg68pq0lnh5rijj1n0l4xbp9bhqy34mj59xfk";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         acid-state base clckwrks haskeline mtl network parsec
       ];
       doHaddock = false;
       homepage = "http://www.clckwrks.com/";
       description = "a command-line interface for adminstrating some aspects of clckwrks";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "clckwrks-plugin-media" = callPackage
    ({ mkDerivation, acid-state, attoparsec, base, blaze-html, cereal
     , clckwrks, containers, directory, filepath, gd, happstack-server
     , hsp, hsx2hs, ixset, magic, mtl, reform, reform-happstack
     , reform-hsp, safecopy, text, web-plugins, web-routes
     , web-routes-th
     }:
     mkDerivation {
       pname = "clckwrks-plugin-media";
       version = "0.6.16.1";
       sha256 = "0yghx8ckxnid8a45lvnkj30pilq0d37zf9f90a1d363bpwcxzldc";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         acid-state attoparsec base blaze-html cereal clckwrks containers
         directory filepath gd happstack-server hsp ixset magic mtl reform
         reform-happstack reform-hsp safecopy text web-plugins web-routes
         web-routes-th
       ];
       libraryToolDepends = [ hsx2hs ];
       homepage = "http://clckwrks.com/";
       description = "media plugin for clckwrks";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "clckwrks-plugin-page" = callPackage
    ({ mkDerivation, acid-state, aeson, attoparsec, base, clckwrks
     , containers, directory, filepath, happstack-hsp, happstack-server
     , hsp, hsx2hs, ixset, mtl, old-locale, random, reform
     , reform-happstack, reform-hsp, safecopy, tagsoup, template-haskell
     , text, time, time-locale-compat, uuid, uuid-orphans, web-plugins
     , web-routes, web-routes-happstack, web-routes-th
     }:
     mkDerivation {
       pname = "clckwrks-plugin-page";
       version = "0.4.3.5";
       sha256 = "166lwlajsqlxma6zsdli06kbajqyskyr6vkqhzizs8n3a4vs2lpv";
       libraryHaskellDepends = [
         acid-state aeson attoparsec base clckwrks containers directory
         filepath happstack-hsp happstack-server hsp hsx2hs ixset mtl
         old-locale random reform reform-happstack reform-hsp safecopy
         tagsoup template-haskell text time time-locale-compat uuid
         uuid-orphans web-plugins web-routes web-routes-happstack
         web-routes-th
       ];
       homepage = "http://www.clckwrks.com/";
       description = "support for CMS/Blogging in clckwrks";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "clckwrks-theme-bootstrap" = callPackage
    ({ mkDerivation, base, clckwrks, happstack-authenticate, hsp
     , hsx-jmacro, hsx2hs, jmacro, mtl, text, web-plugins
     }:
     mkDerivation {
       pname = "clckwrks-theme-bootstrap";
       version = "0.4.2.1";
       sha256 = "1mkqi3qx6k86d2xr4cyxg0ym5c71ip4ijgg6mg20gf3jkjjzvha4";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base clckwrks happstack-authenticate hsp hsx-jmacro hsx2hs jmacro
         mtl text web-plugins
       ];
       homepage = "http://www.clckwrks.com/";
       description = "simple bootstrap based template for clckwrks";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cli" = callPackage
    ({ mkDerivation, base, directory, mtl, QuickCheck, tasty
     , tasty-quickcheck, terminfo, transformers
     }:
     mkDerivation {
       pname = "cli";
       version = "0.1.2";
       sha256 = "1jsavqpjnwmfipvyv4wnxv5qkw295nvvzbnkbaxqv67b4py322jq";
       libraryHaskellDepends = [ base mtl terminfo transformers ];
       testHaskellDepends = [
         base directory QuickCheck tasty tasty-quickcheck transformers
       ];
       homepage = "https://github.com/vincenthz/hs-cli";
       description = "Command Line Interface";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "clientsession" = callPackage
    ({ mkDerivation, base, base64-bytestring, bytestring, cereal
     , cipher-aes, containers, cprng-aes, crypto-api, crypto-random
     , directory, entropy, hspec, HUnit, QuickCheck, setenv, skein
     , tagged, transformers
     }:
     mkDerivation {
       pname = "clientsession";
       version = "0.9.1.2";
       sha256 = "0s6h4ykj16mpf7nlw2iqn2ji0p8g1fn5ni0s7yqaili6vv2as5ar";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base base64-bytestring bytestring cereal cipher-aes cprng-aes
         crypto-api crypto-random directory entropy setenv skein tagged
       ];
       executableHaskellDepends = [ base ];
       testHaskellDepends = [
         base bytestring cereal containers hspec HUnit QuickCheck
         transformers
       ];
       homepage = "http://github.com/yesodweb/clientsession/tree/master";
       description = "Securely store session data in a client-side cookie";
       license = stdenv.lib.licenses.mit;
     }) {};
  "clock" = callPackage
    ({ mkDerivation, base, tasty, tasty-quickcheck }:
     mkDerivation {
       pname = "clock";
       version = "0.7.2";
       sha256 = "07v91s20halsqjmziqb1sqjp2sjpckl9by7y28aaklwqi2bh2rl8";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base tasty tasty-quickcheck ];
       doCheck = false;
       homepage = "https://github.com/corsis/clock";
       description = "High-resolution clock functions: monotonic, realtime, cputime";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "clumpiness" = callPackage
    ({ mkDerivation, base, containers, tree-fun }:
     mkDerivation {
       pname = "clumpiness";
       version = "0.17.0.0";
       sha256 = "15f4js9rnn2rpkrvr9lphh624hkf4m15rdlvfwn29bvf40yk0jzx";
       libraryHaskellDepends = [ base containers tree-fun ];
       description = "Calculate the clumpiness of leaf properties in a tree";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "clustering" = callPackage
    ({ mkDerivation, base, binary, containers, criterion
     , hierarchical-clustering, matrices, mwc-random, parallel
     , primitive, vector
     }:
     mkDerivation {
       pname = "clustering";
       version = "0.2.1";
       sha256 = "1jxrgb13zm8bqcsx39fp31lrpna3y0pn7ckcf9q6gljz327c4y2h";
       libraryHaskellDepends = [
         base binary containers matrices mwc-random parallel primitive
         vector
       ];
       benchmarkHaskellDepends = [
         base criterion hierarchical-clustering matrices mwc-random vector
       ];
       doCheck = false;
       description = "High performance clustering algorithms";
       license = stdenv.lib.licenses.mit;
     }) {};
  "cmark" = callPackage
    ({ mkDerivation, base, blaze-html, bytestring, cheapskate
     , criterion, discount, HUnit, markdown, sundown, text
     }:
     mkDerivation {
       pname = "cmark";
       version = "0.5.4";
       sha256 = "01x8vyhb6qgyvyb0ng1cl4w4nsz99gcgxarfr4lvw0q1hx92zxh6";
       libraryHaskellDepends = [ base bytestring text ];
       testHaskellDepends = [ base HUnit text ];
       benchmarkHaskellDepends = [
         base blaze-html cheapskate criterion discount markdown sundown text
       ];
       homepage = "https://github.com/jgm/cmark-hs";
       description = "Fast, accurate CommonMark (Markdown) parser and renderer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cmark-highlight" = callPackage
    ({ mkDerivation, base, blaze-html, cmark, highlighting-kate, text
     }:
     mkDerivation {
       pname = "cmark-highlight";
       version = "0.2.0.0";
       sha256 = "0aw1y0bl7ddvm4ai66x7apdijw6mza272ir8jkbdbz6k0gbrqxny";
       libraryHaskellDepends = [
         base blaze-html cmark highlighting-kate text
       ];
       homepage = "http://github.com/aelve/cmark-highlight";
       description = "Code highlighting for cmark";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cmark-lucid" = callPackage
    ({ mkDerivation, base, cmark, lucid }:
     mkDerivation {
       pname = "cmark-lucid";
       version = "0.1.0.0";
       sha256 = "00rwiax7dd01259vrdkv574zi58agr17p7jkzixgwchfxngpp4nj";
       libraryHaskellDepends = [ base cmark lucid ];
       homepage = "http://github.com/aelve/cmark-lucid";
       description = "Use cmark with Lucid";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cmdargs" = callPackage
    ({ mkDerivation, base, filepath, process, template-haskell
     , transformers
     }:
     mkDerivation {
       pname = "cmdargs";
       version = "0.10.14";
       sha256 = "0n6f9c298y147wwc36226vjajv76xh79ai17dn3s350kq59h1diq";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base filepath process template-haskell transformers
       ];
       homepage = "https://github.com/ndmitchell/cmdargs#readme";
       description = "Command line argument processing";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "code-builder" = callPackage
    ({ mkDerivation, base, containers }:
     mkDerivation {
       pname = "code-builder";
       version = "0.1.3";
       sha256 = "1ax4c19xkszahcxvwc1wa1hrgk6ajck5sbprbplsi1gc9jj4g7jm";
       libraryHaskellDepends = [ base containers ];
       description = "Simple system for generating code";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "code-page" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "code-page";
       version = "0.1.1";
       sha256 = "1xvh9nh7v6h5x5hbg0yz570nd268ga5rfq15g3fp26x2ph1bif0n";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base ];
       homepage = "https://github.com/RyanGlScott/code-page";
       description = "Windows code page library for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "codo-notation" = callPackage
    ({ mkDerivation, base, comonad, haskell-src-meta, parsec
     , template-haskell, uniplate
     }:
     mkDerivation {
       pname = "codo-notation";
       version = "0.5.2";
       sha256 = "1bwfjg0bzph0vka1rx8m6f505l9dmj8nn6al9kmjkva18l05gsvq";
       libraryHaskellDepends = [
         base comonad haskell-src-meta parsec template-haskell uniplate
       ];
       description = "A notation for comonads, analogous to the do-notation for monads";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "colour" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "colour";
       version = "2.3.3";
       sha256 = "1qmn1778xzg07jg9nx4k1spdz2llivpblf6wwrps1qpqjhsac5cd";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base ];
       homepage = "http://www.haskell.org/haskellwiki/Colour";
       description = "A model for human colour/color perception";
       license = stdenv.lib.licenses.mit;
     }) {};
  "commutative" = callPackage
    ({ mkDerivation, base, QuickCheck, quickcheck-instances, random
     , semigroups, tasty, tasty-hunit, tasty-quickcheck
     }:
     mkDerivation {
       pname = "commutative";
       version = "0.0.1.4";
       sha256 = "1ky9axa5vs12w4m8wzlnw1cf3m9ndq239534rxfknm3k5h0ldrqd";
       libraryHaskellDepends = [ base random semigroups ];
       testHaskellDepends = [
         base QuickCheck quickcheck-instances random semigroups tasty
         tasty-hunit tasty-quickcheck
       ];
       description = "Commutative binary operations";
       license = stdenv.lib.licenses.mit;
     }) {};
  "comonad" = callPackage
    ({ mkDerivation, base, containers, contravariant, directory
     , distributive, doctest, filepath, semigroups, tagged, transformers
     , transformers-compat
     }:
     mkDerivation {
       pname = "comonad";
       version = "5";
       sha256 = "0anb36m9z52y9xsipxzj9w1b41b2rj8r389cxd6d20dplnfv3rbq";
       libraryHaskellDepends = [
         base containers contravariant distributive semigroups tagged
         transformers transformers-compat
       ];
       testHaskellDepends = [ base directory doctest filepath ];
       homepage = "http://github.com/ekmett/comonad/";
       description = "Comonads";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "comonad-transformers" = callPackage
    ({ mkDerivation, base, comonad }:
     mkDerivation {
       pname = "comonad-transformers";
       version = "4.0";
       sha256 = "13zzp6r6s6c80skniphwvzxhpazbyal5854m53139kgcw560rv6z";
       libraryHaskellDepends = [ base comonad ];
       doHaddock = false;
       homepage = "http://github.com/ekmett/comonad-transformers/";
       description = "This package has been merged into comonad 4.0";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "comonads-fd" = callPackage
    ({ mkDerivation, base, comonad }:
     mkDerivation {
       pname = "comonads-fd";
       version = "4.0";
       sha256 = "19xpv0dsz7w3a1sq1gdxwzglfal45vj2s22zb12g9mpk5rp3hw1s";
       libraryHaskellDepends = [ base comonad ];
       doHaddock = false;
       homepage = "http://github.com/ekmett/comonads-fd/";
       description = "This package has been merged into comonad 4.0";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "compactmap" = callPackage
    ({ mkDerivation, base, containers, hspec, QuickCheck, vector }:
     mkDerivation {
       pname = "compactmap";
       version = "0.1.4.2";
       sha256 = "1v7ndhp36sx67r3f6sj5iiqs2sfqx4niidy3hfhvnillyb181z9n";
       libraryHaskellDepends = [ base vector ];
       testHaskellDepends = [ base containers hspec QuickCheck ];
       description = "A read-only memory-efficient key-value store";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "compdata" = callPackage
    ({ mkDerivation, base, containers, criterion, deepseq, derive
     , HUnit, mtl, QuickCheck, random, template-haskell, test-framework
     , test-framework-hunit, test-framework-quickcheck2, th-expand-syns
     , transformers, tree-view, uniplate
     }:
     mkDerivation {
       pname = "compdata";
       version = "0.10.1";
       sha256 = "1js0i32m4sm1fif6vr9p2d9xyl0zixnbg3f20mcnjmf59q9jymv1";
       libraryHaskellDepends = [
         base containers deepseq derive mtl QuickCheck template-haskell
         th-expand-syns transformers tree-view
       ];
       testHaskellDepends = [
         base containers deepseq derive HUnit mtl QuickCheck
         template-haskell test-framework test-framework-hunit
         test-framework-quickcheck2 th-expand-syns transformers
       ];
       benchmarkHaskellDepends = [
         base containers criterion deepseq derive mtl QuickCheck random
         template-haskell th-expand-syns transformers uniplate
       ];
       description = "Compositional Data Types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "composition" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "composition";
       version = "1.0.2.1";
       sha256 = "0smdyzcnfwiab1wnazmk4szali1ckh7dqcdp9vn7qnnabq7k08vi";
       description = "Combinators for unorthodox function composition";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "composition-extra" = callPackage
    ({ mkDerivation, base, composition, contravariant }:
     mkDerivation {
       pname = "composition-extra";
       version = "2.0.0";
       sha256 = "0abipab6bx138rynpkh4daj53bv5yqbw94zfswysyq6iix529669";
       libraryHaskellDepends = [ base composition contravariant ];
       description = "Combinators for unorthodox structure composition";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "concatenative" = callPackage
    ({ mkDerivation, base, template-haskell }:
     mkDerivation {
       pname = "concatenative";
       version = "1.0.1";
       sha256 = "05xwqvcdnk8bsyj698ab9jxpa1nk23pf3m7wi9mwmw0q8n99fngd";
       libraryHaskellDepends = [ base template-haskell ];
       homepage = "https://patch-tag.com/r/salazar/concatenative/snapshot/current/content/pretty";
       description = "A library for postfix control flow";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "concurrency" = callPackage
    ({ mkDerivation, array, atomic-primops, base, exceptions
     , monad-control, mtl, stm, transformers
     }:
     mkDerivation {
       pname = "concurrency";
       version = "1.0.0.0";
       sha256 = "17giki6hz7ilyddlk8xs37izqb5nbxx0j54j7744wihq1irrw7sl";
       revision = "1";
       editedCabalFile = "140wmmhg9gxlw15h92jnqiq19wpdkj7dii16613bllc40kmzmq1x";
       libraryHaskellDepends = [
         array atomic-primops base exceptions monad-control mtl stm
         transformers
       ];
       homepage = "https://github.com/barrucadu/dejafu";
       description = "Typeclasses, functions, and data types for concurrency and STM";
       license = stdenv.lib.licenses.mit;
     }) {};
  "concurrent-extra" = callPackage
    ({ mkDerivation, base, stm, unbounded-delays }:
     mkDerivation {
       pname = "concurrent-extra";
       version = "0.7.0.10";
       sha256 = "04nw39pbfqa4ldymn706ij83hxa07c73r7hy18y5pwpmj05cq9vg";
       libraryHaskellDepends = [ base stm unbounded-delays ];
       doCheck = false;
       homepage = "https://github.com/basvandijk/concurrent-extra";
       description = "Extra concurrency primitives";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "concurrent-output" = callPackage
    ({ mkDerivation, ansi-terminal, async, base, directory, exceptions
     , process, stm, terminal-size, text, transformers, unix
     }:
     mkDerivation {
       pname = "concurrent-output";
       version = "1.7.8";
       sha256 = "0vwsra9yg7fyf1rw3bqpqr3hc7slv31rrkgg74097spr1yrhm6wc";
       libraryHaskellDepends = [
         ansi-terminal async base directory exceptions process stm
         terminal-size text transformers unix
       ];
       description = "Ungarble output from several threads or commands";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "concurrent-supply" = callPackage
    ({ mkDerivation, base, containers, ghc-prim, hashable }:
     mkDerivation {
       pname = "concurrent-supply";
       version = "0.1.8";
       sha256 = "07zjczcgxwpi8imp0w86vrb78w067b322q5d7zlqla91sbf2gy6c";
       libraryHaskellDepends = [ base ghc-prim hashable ];
       testHaskellDepends = [ base containers ];
       homepage = "http://github.com/ekmett/concurrent-supply/";
       description = "A fast concurrent unique identifier supply with a pure API";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "conduit" = callPackage
    ({ mkDerivation, base, containers, criterion, deepseq, exceptions
     , hspec, kan-extensions, lifted-base, mmorph, monad-control, mtl
     , mwc-random, QuickCheck, resourcet, safe, transformers
     , transformers-base, vector
     }:
     mkDerivation {
       pname = "conduit";
       version = "1.2.8";
       sha256 = "1yqpvc60rblpdn9agjghmq7f6nz04nx5zi9qf7lbgwmdf16dzmc0";
       libraryHaskellDepends = [
         base exceptions lifted-base mmorph monad-control mtl resourcet
         transformers transformers-base
       ];
       testHaskellDepends = [
         base containers exceptions hspec mtl QuickCheck resourcet safe
         transformers
       ];
       benchmarkHaskellDepends = [
         base containers criterion deepseq hspec kan-extensions mwc-random
         transformers vector
       ];
       homepage = "http://github.com/snoyberg/conduit";
       description = "Streaming data processing library";
       license = stdenv.lib.licenses.mit;
     }) {};
  "conduit-combinators" = callPackage
    ({ mkDerivation, base, base16-bytestring, base64-bytestring
     , bytestring, chunked-data, conduit, conduit-extra, containers
     , directory, filepath, hspec, monad-control, mono-traversable, mtl
     , mwc-random, primitive, QuickCheck, resourcet, safe, silently
     , text, transformers, transformers-base, unix, unix-compat, vector
     , void
     }:
     mkDerivation {
       pname = "conduit-combinators";
       version = "1.0.8.3";
       sha256 = "1gkd800ba7b24fz2mbprxc0g8ijff78d3fmw29icpcfwqiwy709v";
       libraryHaskellDepends = [
         base base16-bytestring base64-bytestring bytestring chunked-data
         conduit conduit-extra filepath monad-control mono-traversable
         mwc-random primitive resourcet text transformers transformers-base
         unix unix-compat vector void
       ];
       testHaskellDepends = [
         base base16-bytestring base64-bytestring bytestring chunked-data
         conduit containers directory filepath hspec mono-traversable mtl
         mwc-random QuickCheck safe silently text transformers vector
       ];
       homepage = "https://github.com/snoyberg/mono-traversable";
       description = "Commonly used conduit functions, for both chunked and unchunked data";
       license = stdenv.lib.licenses.mit;
     }) {};
  "conduit-extra" = callPackage
    ({ mkDerivation, async, attoparsec, base, blaze-builder, bytestring
     , bytestring-builder, conduit, criterion, directory, exceptions
     , filepath, hspec, monad-control, network, primitive, process
     , QuickCheck, resourcet, stm, streaming-commons, text, transformers
     , transformers-base
     }:
     mkDerivation {
       pname = "conduit-extra";
       version = "1.1.15";
       sha256 = "13dvj271bhdaf83px99mlm0pgvc3474cmidh35jj775m1pmjkvvv";
       libraryHaskellDepends = [
         async attoparsec base blaze-builder bytestring conduit directory
         exceptions filepath monad-control network primitive process
         resourcet stm streaming-commons text transformers transformers-base
       ];
       testHaskellDepends = [
         async attoparsec base blaze-builder bytestring bytestring-builder
         conduit directory exceptions hspec process QuickCheck resourcet stm
         streaming-commons text transformers transformers-base
       ];
       benchmarkHaskellDepends = [
         base blaze-builder bytestring bytestring-builder conduit criterion
         transformers
       ];
       homepage = "http://github.com/snoyberg/conduit";
       description = "Batteries included conduit: adapters for common libraries";
       license = stdenv.lib.licenses.mit;
     }) {};
  "conduit-iconv" = callPackage
    ({ mkDerivation, base, bytestring, conduit, criterion, mtl
     , QuickCheck, test-framework, test-framework-quickcheck2, text
     }:
     mkDerivation {
       pname = "conduit-iconv";
       version = "0.1.1.1";
       sha256 = "01dcnvs82mvp7wv5vbkwhq2sary87mss71mc6mmhlngkyis558jl";
       libraryHaskellDepends = [ base bytestring conduit ];
       testHaskellDepends = [
         base bytestring conduit mtl QuickCheck test-framework
         test-framework-quickcheck2 text
       ];
       benchmarkHaskellDepends = [
         base bytestring conduit criterion mtl text
       ];
       homepage = "https://github.com/sdroege/conduit-iconv";
       description = "Conduit for character encoding conversion";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "conduit-parse" = callPackage
    ({ mkDerivation, base, conduit, dlist, hlint, mtl, parsers
     , resourcet, safe, safe-exceptions, tasty, tasty-hunit, text
     , transformers
     }:
     mkDerivation {
       pname = "conduit-parse";
       version = "0.1.2.0";
       sha256 = "05yfggq2g8ifwgb4w12i9n7hgjydvyk9i3bkszxk0ba51rmiyqhm";
       libraryHaskellDepends = [
         base conduit dlist mtl parsers safe safe-exceptions text
         transformers
       ];
       testHaskellDepends = [
         base conduit hlint mtl parsers resourcet safe-exceptions tasty
         tasty-hunit
       ];
       homepage = "https://github.com/k0ral/conduit-parse";
       description = "Parsing framework based on conduit";
       license = "unknown";
     }) {};
  "configuration-tools" = callPackage
    ({ mkDerivation, aeson, ansi-wl-pprint, attoparsec, base
     , base-unicode-symbols, base64-bytestring, bytestring, Cabal
     , case-insensitive, connection, data-default, deepseq, directory
     , dlist, enclosed-exceptions, filepath, http-client
     , http-client-tls, http-types, monad-control, mtl, network-uri
     , optparse-applicative, process, profunctors, text, tls
     , transformers, unordered-containers, wai, warp, warp-tls, x509
     , x509-system, x509-validation, yaml
     }:
     mkDerivation {
       pname = "configuration-tools";
       version = "0.2.15";
       sha256 = "07hjfqsyj49piplf5xm5szbhy34bm47mxcmjriwaxn5djflafcc2";
       libraryHaskellDepends = [
         aeson ansi-wl-pprint attoparsec base base-unicode-symbols
         base64-bytestring bytestring Cabal case-insensitive connection
         data-default deepseq directory dlist enclosed-exceptions filepath
         http-client http-client-tls http-types monad-control mtl
         network-uri optparse-applicative process profunctors text tls
         transformers unordered-containers x509 x509-system x509-validation
         yaml
       ];
       testHaskellDepends = [
         base base-unicode-symbols bytestring Cabal enclosed-exceptions
         http-types monad-control mtl text transformers unordered-containers
         wai warp warp-tls yaml
       ];
       homepage = "https://github.com/alephcloud/hs-configuration-tools";
       description = "Tools for specifying and parsing configurations";
       license = stdenv.lib.licenses.mit;
     }) {};
  "configurator" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, directory, filepath
     , hashable, HUnit, test-framework, test-framework-hunit, text
     , unix-compat, unordered-containers
     }:
     mkDerivation {
       pname = "configurator";
       version = "0.3.0.0";
       sha256 = "1d1iq1knwiq6ia5g64rw5hqm6dakz912qj13r89737rfcxmrkfbf";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         attoparsec base bytestring directory hashable text unix-compat
         unordered-containers
       ];
       testHaskellDepends = [
         base bytestring directory filepath HUnit test-framework
         test-framework-hunit text
       ];
       homepage = "http://github.com/bos/configurator";
       description = "Configuration management";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "configurator-export" = callPackage
    ({ mkDerivation, base, base-compat, configurator, pretty
     , semigroups, text, unordered-containers
     }:
     mkDerivation {
       pname = "configurator-export";
       version = "0.1.0.1";
       sha256 = "0k42kdzrmci19w2wb6lswkf2g9fzmrwkn6yvvz694xy957pn5gcx";
       libraryHaskellDepends = [
         base base-compat configurator pretty semigroups text
         unordered-containers
       ];
       testHaskellDepends = [ base ];
       homepage = "http://github.com/mstksg/configurator-export";
       description = "Pretty printer and exporter for configurations from the \"configurator\" library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "connection" = callPackage
    ({ mkDerivation, base, byteable, bytestring, containers
     , data-default-class, network, socks, tls, x509, x509-store
     , x509-system, x509-validation
     }:
     mkDerivation {
       pname = "connection";
       version = "0.2.6";
       sha256 = "1c1prsgad669cmf6qrqlb5hmh0dnam2imijqzpwcr4ja14l6rh83";
       libraryHaskellDepends = [
         base byteable bytestring containers data-default-class network
         socks tls x509 x509-store x509-system x509-validation
       ];
       homepage = "http://github.com/vincenthz/hs-connection";
       description = "Simple and easy network connections API";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "constraints" = callPackage
    ({ mkDerivation, base, binary, deepseq, ghc-prim, hashable, mtl
     , transformers, transformers-compat
     }:
     mkDerivation {
       pname = "constraints";
       version = "0.8";
       sha256 = "120mmv9rwbahslisc1z8zx9lw7v6hl5fzid4l0hiy5as6ijqgl2c";
       libraryHaskellDepends = [
         base binary deepseq ghc-prim hashable mtl transformers
         transformers-compat
       ];
       homepage = "http://github.com/ekmett/constraints/";
       description = "Constraint manipulation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "consul-haskell" = callPackage
    ({ mkDerivation, aeson, base, base64-bytestring, bytestring
     , connection, either, http-client, http-client-tls, http-types
     , HUnit, lifted-async, lifted-base, monad-control, network, stm
     , tasty, tasty-hunit, text, transformers
     }:
     mkDerivation {
       pname = "consul-haskell";
       version = "0.3";
       sha256 = "0d0n28w3wdg25phs6ylqxi31yah3vzjj2zj4vlx2xy8llv5zsgh7";
       libraryHaskellDepends = [
         aeson base base64-bytestring bytestring connection either
         http-client http-client-tls http-types lifted-async lifted-base
         monad-control network stm text transformers
       ];
       testHaskellDepends = [
         base http-client HUnit network tasty tasty-hunit text transformers
       ];
       doCheck = false;
       homepage = "https://github.com/alphaHeavy/consul-haskell";
       description = "A consul client for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "containers-unicode-symbols" = callPackage
    ({ mkDerivation, base, base-unicode-symbols, containers }:
     mkDerivation {
       pname = "containers-unicode-symbols";
       version = "0.3.1.1";
       sha256 = "0ccv7rqkykfk5wmr73mc0kwrnwyzakgp5x495dgwn5nila3g4ma6";
       libraryHaskellDepends = [ base base-unicode-symbols containers ];
       homepage = "http://haskell.org/haskellwiki/Unicode-symbols";
       description = "Unicode alternatives for common functions and operators";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "continued-fractions" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "continued-fractions";
       version = "0.9.1.1";
       sha256 = "0gqp1yazmmmdf04saa306jdsf8r5s98fll9rnm8ff6jzr87nvnnh";
       libraryHaskellDepends = [ base ];
       homepage = "/dev/null";
       description = "Continued fractions";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "contravariant" = callPackage
    ({ mkDerivation, base, semigroups, StateVar, transformers
     , transformers-compat, void
     }:
     mkDerivation {
       pname = "contravariant";
       version = "1.4";
       sha256 = "117fff8kkrvlmr8cb2jpj71z7lf2pdiyks6ilyx89mry6zqnsrp1";
       libraryHaskellDepends = [
         base semigroups StateVar transformers transformers-compat void
       ];
       homepage = "http://github.com/ekmett/contravariant/";
       description = "Contravariant functors";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "contravariant-extras" = callPackage
    ({ mkDerivation, base-prelude, contravariant, template-haskell
     , tuple-th
     }:
     mkDerivation {
       pname = "contravariant-extras";
       version = "0.3.3.1";
       sha256 = "1mbrgjybdx8fjdck4ldwi8955w4qnmm0ql56zix7dyn0s7s9spgk";
       libraryHaskellDepends = [
         base-prelude contravariant template-haskell tuple-th
       ];
       homepage = "https://github.com/nikita-volkov/contravariant-extras";
       description = "Extras for the \"contravariant\" package";
       license = stdenv.lib.licenses.mit;
     }) {};
  "control-bool" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "control-bool";
       version = "0.2.1";
       sha256 = "10amxm1ff7xhd8g66n65wkbb8d17n77v1nmwxkbzhrask398asp4";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/fumieval/control-bool";
       description = "Useful combinators for boolean expressions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "control-monad-free" = callPackage
    ({ mkDerivation, base, prelude-extras, transformers }:
     mkDerivation {
       pname = "control-monad-free";
       version = "0.6.1";
       sha256 = "11i297ngwb5ck23vsr84fh5qx4hn7fzm9ml90y79lwi97hyigagy";
       revision = "1";
       editedCabalFile = "1901lm2md7flri4ms745lgla18x2k7v0xh51jbjbx6202ppcx3fh";
       libraryHaskellDepends = [ base prelude-extras transformers ];
       homepage = "http://github.com/pepeiborra/control-monad-free";
       description = "Free monads and monad transformers";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "control-monad-loop" = callPackage
    ({ mkDerivation, base, transformers, transformers-base }:
     mkDerivation {
       pname = "control-monad-loop";
       version = "0.1";
       sha256 = "003k4pp6wgn30m9ksbh8680f0klzsvd90wsl9jpqs9lpg14hi6zj";
       libraryHaskellDepends = [ base transformers transformers-base ];
       homepage = "https://github.com/joeyadams/haskell-control-monad-loop";
       description = "Simple monad transformer for imperative-style loops";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "control-monad-omega" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "control-monad-omega";
       version = "0.3.1";
       sha256 = "11hirysr76i01qj8rm22xjcrv2qwxgwjlrqqyd1dsnnvypn9hfrq";
       libraryHaskellDepends = [ base ];
       homepage = "http://github.com/luqui/control-monad-omega";
       description = "A breadth-first list monad";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "converge" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "converge";
       version = "0.1.0.1";
       sha256 = "0y28m7kgphknra0w2kzf0g4m2bdj604nr3f22xng46nl7kljbpvj";
       libraryHaskellDepends = [ base ];
       homepage = "/dev/null";
       description = "Limit operations for converging sequences";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "convertible" = callPackage
    ({ mkDerivation, base, bytestring, containers, mtl, old-locale
     , old-time, text, time
     }:
     mkDerivation {
       pname = "convertible";
       version = "1.1.1.0";
       sha256 = "0v18ap1mccnndgxmbfgyjdicg8jlss01bd5fq8a576dr0h4sgyg9";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring containers mtl old-locale old-time text time
       ];
       homepage = "http://hackage.haskell.org/package/convertible";
       description = "Typeclasses and instances for converting between types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cookie" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring
     , data-default-class, deepseq, HUnit, old-locale, QuickCheck, tasty
     , tasty-hunit, tasty-quickcheck, text, time
     }:
     mkDerivation {
       pname = "cookie";
       version = "0.4.2.1";
       sha256 = "1r2j518lfcswn76qm6p2h1rl98gfsxad7p7z9qaww84fj28k0h86";
       libraryHaskellDepends = [
         base blaze-builder bytestring data-default-class deepseq old-locale
         text time
       ];
       testHaskellDepends = [
         base blaze-builder bytestring HUnit QuickCheck tasty tasty-hunit
         tasty-quickcheck text time
       ];
       homepage = "http://github.com/snoyberg/cookie";
       description = "HTTP cookie parsing and rendering";
       license = stdenv.lib.licenses.mit;
     }) {};
  "countable" = callPackage
    ({ mkDerivation, base, bytestring, silently, tasty, tasty-golden
     , tasty-hunit
     }:
     mkDerivation {
       pname = "countable";
       version = "1.0";
       sha256 = "0v0fdapdnzdqbkjhgkicx1njs3ybshk83h79fbgln13sd5pyp87r";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [
         base bytestring silently tasty tasty-golden tasty-hunit
       ];
       homepage = "https://github.com/AshleyYakeley/countable";
       description = "Countable, Searchable, Finite, Empty classes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "courier" = callPackage
    ({ mkDerivation, async, base, bytestring, cereal, containers
     , directory, hslogger, HUnit, network, stm, test-framework
     , test-framework-hunit, text, uuid
     }:
     mkDerivation {
       pname = "courier";
       version = "0.1.1.4";
       sha256 = "18yr5qx3wpybflz5qdki2az30ra88ns6ywy636w7jv8nckahis74";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         async base bytestring cereal containers hslogger network stm text
         uuid
       ];
       executableHaskellDepends = [ base cereal ];
       testHaskellDepends = [
         async base cereal containers directory hslogger HUnit network stm
         test-framework test-framework-hunit
       ];
       homepage = "http://github.com/hargettp/courier";
       description = "A message-passing library for simplifying network applications";
       license = stdenv.lib.licenses.mit;
     }) {};
  "cpphs" = callPackage
    ({ mkDerivation, base, directory, old-locale, old-time, polyparse
     }:
     mkDerivation {
       pname = "cpphs";
       version = "1.20.2";
       sha256 = "1nr9hsnkz4spc4xdphkaqw97kkikpmycxr6nznjchrzql09dgcfw";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base directory old-locale old-time polyparse
       ];
       executableHaskellDepends = [
         base directory old-locale old-time polyparse
       ];
       homepage = "http://projects.haskell.org/cpphs/";
       description = "A liberalised re-implementation of cpp, the C pre-processor";
       license = "LGPL";
     }) {};
  "cprng-aes" = callPackage
    ({ mkDerivation, base, byteable, bytestring, cipher-aes, criterion
     , crypto-random, mtl
     }:
     mkDerivation {
       pname = "cprng-aes";
       version = "0.6.1";
       sha256 = "1wr15kbmk1g3l8a75n0iwbzqg24ixv78slwzwb2q6rlcvq0jlnb4";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base byteable bytestring cipher-aes crypto-random
       ];
       benchmarkHaskellDepends = [
         base bytestring criterion crypto-random mtl
       ];
       homepage = "http://github.com/vincenthz/hs-cprng-aes";
       description = "Crypto Pseudo Random Number Generator using AES in counter mode";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cpu" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "cpu";
       version = "0.1.2";
       sha256 = "0x19mlanmkg96h6h1i04w2i631z84y4rbk22ki4zhgsajysgw9sn";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base ];
       homepage = "http://github.com/vincenthz/hs-cpu";
       description = "Cpu information and properties helpers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "crackNum" = callPackage
    ({ mkDerivation, base, data-binary-ieee754, ieee754 }:
     mkDerivation {
       pname = "crackNum";
       version = "1.5";
       sha256 = "01g2q4al44hy6iagxafwdxlr616p3qiyx13zn5waark8z95gwhgg";
       revision = "1";
       editedCabalFile = "04rfh3r4y38swvmyhp3r1x63zp0ki77r22frxgxmlfssv8x9gfd8";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base data-binary-ieee754 ieee754 ];
       executableHaskellDepends = [ base data-binary-ieee754 ieee754 ];
       description = "Crack various integer, floating-point data formats";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "criterion" = callPackage
    ({ mkDerivation, aeson, ansi-wl-pprint, base, binary, bytestring
     , cassava, containers, deepseq, directory, filepath, Glob, hastache
     , HUnit, mtl, mwc-random, optparse-applicative, parsec, QuickCheck
     , statistics, test-framework, test-framework-hunit
     , test-framework-quickcheck2, text, time, transformers
     , transformers-compat, vector, vector-algorithms
     }:
     mkDerivation {
       pname = "criterion";
       version = "1.1.1.0";
       sha256 = "1pa9176916a75dx6dvd22zjzcy057rh32zqkn926156dm6kma677";
       revision = "3";
       editedCabalFile = "13lp2d8db0m4paascrzw6smrm0v0p97pg62ix682psjz40awz28f";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson ansi-wl-pprint base binary bytestring cassava containers
         deepseq directory filepath Glob hastache mtl mwc-random
         optparse-applicative parsec statistics text time transformers
         transformers-compat vector vector-algorithms
       ];
       executableHaskellDepends = [ base optparse-applicative ];
       testHaskellDepends = [
         base bytestring HUnit QuickCheck statistics test-framework
         test-framework-hunit test-framework-quickcheck2 vector
       ];
       homepage = "http://www.serpentine.com/criterion";
       description = "Robust, reliable performance measurement and analysis";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cron" = callPackage
    ({ mkDerivation, attoparsec, base, criterion, generics-sop, mtl
     , mtl-compat, old-locale, quickcheck-instances, semigroups, tasty
     , tasty-hunit, tasty-quickcheck, text, time, transformers-compat
     }:
     mkDerivation {
       pname = "cron";
       version = "0.4.2";
       sha256 = "1lq7ilp9s7gmdq6kvbfny5nhhv00h6dqwin1lxh2503w4fwqdw9i";
       revision = "1";
       editedCabalFile = "1phb5d25ss84wmjfywmkbsf696x449k0j66w0gm29lw4ggh3frsz";
       libraryHaskellDepends = [
         attoparsec base mtl mtl-compat old-locale semigroups text time
       ];
       testHaskellDepends = [
         attoparsec base generics-sop quickcheck-instances semigroups tasty
         tasty-hunit tasty-quickcheck text time transformers-compat
       ];
       benchmarkHaskellDepends = [ attoparsec base criterion text time ];
       homepage = "http://github.com/michaelxavier/cron";
       description = "Cron datatypes and Attoparsec parser";
       license = stdenv.lib.licenses.mit;
     }) {};
  "crypto-api" = callPackage
    ({ mkDerivation, base, bytestring, cereal, entropy, tagged
     , transformers
     }:
     mkDerivation {
       pname = "crypto-api";
       version = "0.13.2";
       sha256 = "1vc27qcgbg7hf50rkqhlrs58zn1888ilh4b6wrrm07bnm48xacak";
       libraryHaskellDepends = [
         base bytestring cereal entropy tagged transformers
       ];
       homepage = "https://github.com/TomMD/crypto-api";
       description = "A generic interface for cryptographic operations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "crypto-api-tests" = callPackage
    ({ mkDerivation, base, bytestring, cereal, crypto-api, directory
     , filepath, HUnit, QuickCheck, test-framework, test-framework-hunit
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "crypto-api-tests";
       version = "0.3";
       sha256 = "0w3j43jdrlj28jryp18hc6q84nkl2yf4vs1hhgrsk7gb9kfyqjpl";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base bytestring cereal crypto-api directory filepath HUnit
         QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       homepage = "http://trac.haskell.org/crypto-api/wiki";
       description = "A test framework and KATs for cryptographic operations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "crypto-cipher-tests" = callPackage
    ({ mkDerivation, base, byteable, bytestring, crypto-cipher-types
     , HUnit, mtl, QuickCheck, securemem, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "crypto-cipher-tests";
       version = "0.0.11";
       sha256 = "19wqignlq90qwpam01hnmmrxaxh5lkax9l1l6rlbi4a07nvp1dnz";
       libraryHaskellDepends = [
         base byteable bytestring crypto-cipher-types HUnit mtl QuickCheck
         securemem test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       testHaskellDepends = [
         base byteable bytestring crypto-cipher-types HUnit mtl QuickCheck
         test-framework test-framework-hunit test-framework-quickcheck2
       ];
       homepage = "http://github.com/vincenthz/hs-crypto-cipher";
       description = "Generic cryptography cipher tests";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "crypto-cipher-types" = callPackage
    ({ mkDerivation, base, byteable, bytestring, securemem }:
     mkDerivation {
       pname = "crypto-cipher-types";
       version = "0.0.9";
       sha256 = "03qa1i1kj07pfrxsi7fiaqnnd0vi94jd4jfswbmnm4gp1nvzcwr0";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base byteable bytestring securemem ];
       homepage = "http://github.com/vincenthz/hs-crypto-cipher";
       description = "Generic cryptography cipher types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "crypto-numbers" = callPackage
    ({ mkDerivation, base, byteable, bytestring, criterion
     , crypto-random, ghc-prim, integer-gmp, mtl, tasty, tasty-hunit
     , tasty-quickcheck, vector
     }:
     mkDerivation {
       pname = "crypto-numbers";
       version = "0.2.7";
       sha256 = "19l9y5jzvqrqfam13xin9m9ca0s5ql86yv0cjn6dzkydx4byn2j2";
       revision = "1";
       editedCabalFile = "1jjkhid8kwrz5894nad537rqxzzyx6b687bmgyk70nv0ny336j9b";
       libraryHaskellDepends = [
         base bytestring crypto-random ghc-prim integer-gmp vector
       ];
       testHaskellDepends = [
         base byteable bytestring crypto-random tasty tasty-hunit
         tasty-quickcheck vector
       ];
       benchmarkHaskellDepends = [ base bytestring criterion mtl ];
       doCheck = false;
       homepage = "https://github.com/vincenthz/hs-crypto-numbers";
       description = "Cryptographic numbers: functions and algorithms";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "crypto-pubkey" = callPackage
    ({ mkDerivation, base, byteable, bytestring, criterion
     , crypto-numbers, crypto-pubkey-types, crypto-random, cryptohash
     , deepseq, mtl, tasty, tasty-hunit, tasty-kat, tasty-quickcheck
     }:
     mkDerivation {
       pname = "crypto-pubkey";
       version = "0.2.8";
       sha256 = "0vmmx2fqq2xc3xfavy22i2nyynpk88jhmjr62qgxw5w5qgsz5k60";
       libraryHaskellDepends = [
         base byteable bytestring crypto-numbers crypto-pubkey-types
         crypto-random cryptohash
       ];
       testHaskellDepends = [
         base byteable bytestring crypto-numbers crypto-pubkey-types
         crypto-random cryptohash tasty tasty-hunit tasty-kat
         tasty-quickcheck
       ];
       benchmarkHaskellDepends = [
         base bytestring criterion crypto-pubkey-types crypto-random
         cryptohash deepseq mtl
       ];
       doCheck = false;
       homepage = "https://github.com/vincenthz/hs-crypto-pubkey";
       description = "Public Key cryptography";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "crypto-pubkey-types" = callPackage
    ({ mkDerivation, asn1-encoding, asn1-types, base }:
     mkDerivation {
       pname = "crypto-pubkey-types";
       version = "0.4.3";
       sha256 = "0q0wlzjmpx536h1zcdzrpxjkvqw8abj8z0ci38138kpch4igbnby";
       libraryHaskellDepends = [ asn1-encoding asn1-types base ];
       homepage = "http://github.com/vincenthz/hs-crypto-pubkey-types";
       description = "Generic cryptography Public keys algorithm types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "crypto-random" = callPackage
    ({ mkDerivation, base, bytestring, securemem, unix, vector }:
     mkDerivation {
       pname = "crypto-random";
       version = "0.0.9";
       sha256 = "0139kbbb2h7vshf68y3fvjda29lhj7jjwl4vq78w4y8k8hc7l2hp";
       libraryHaskellDepends = [ base bytestring securemem unix vector ];
       homepage = "http://github.com/vincenthz/hs-crypto-random";
       description = "Simple cryptographic random related types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "crypto-random-api" = callPackage
    ({ mkDerivation, base, bytestring, entropy }:
     mkDerivation {
       pname = "crypto-random-api";
       version = "0.2.0";
       sha256 = "0z49kwgjj7rz235642q64hbkgp0zl6ipn29xd19yb75xc5q7gsan";
       libraryHaskellDepends = [ base bytestring entropy ];
       homepage = "http://github.com/vincenthz/hs-crypto-random-api";
       description = "Simple random generators API for cryptography related code";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cryptocipher" = callPackage
    ({ mkDerivation, base, cipher-aes, cipher-blowfish, cipher-camellia
     , cipher-des, cipher-rc4, crypto-cipher-types
     }:
     mkDerivation {
       pname = "cryptocipher";
       version = "0.6.2";
       sha256 = "0ip3a2as0df6drl29sryayxx22sx55v6bs60s2fh3i1nxqnydf9l";
       libraryHaskellDepends = [
         base cipher-aes cipher-blowfish cipher-camellia cipher-des
         cipher-rc4 crypto-cipher-types
       ];
       homepage = "http://github.com/vincenthz/hs-crypto-cipher";
       description = "Symmetrical block and stream ciphers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cryptohash" = callPackage
    ({ mkDerivation, base, byteable, bytestring, criterion, cryptonite
     , ghc-prim, HUnit, memory, QuickCheck, tasty, tasty-hunit
     , tasty-quickcheck
     }:
     mkDerivation {
       pname = "cryptohash";
       version = "0.11.9";
       sha256 = "1yr2iyb779znj79j3fq4ky8l1y8a600a2x1fx9p5pmpwq5zq93y2";
       libraryHaskellDepends = [
         base byteable bytestring cryptonite ghc-prim memory
       ];
       testHaskellDepends = [
         base byteable bytestring HUnit QuickCheck tasty tasty-hunit
         tasty-quickcheck
       ];
       benchmarkHaskellDepends = [ base byteable bytestring criterion ];
       homepage = "http://github.com/vincenthz/hs-cryptohash";
       description = "collection of crypto hashes, fast, pure and practical";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cryptohash-conduit" = callPackage
    ({ mkDerivation, base, bytestring, conduit, conduit-extra
     , cryptohash, resourcet, transformers
     }:
     mkDerivation {
       pname = "cryptohash-conduit";
       version = "0.1.1";
       sha256 = "1kmlskgb0jx8hkzdncr24aqir9k1kyfcb2rypvkdld1yin4nslga";
       libraryHaskellDepends = [
         base bytestring conduit conduit-extra cryptohash resourcet
         transformers
       ];
       homepage = "http://github.com/vincenthz/hs-cryptohash-conduit";
       description = "cryptohash conduit";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cryptohash-cryptoapi" = callPackage
    ({ mkDerivation, base, bytestring, cereal, crypto-api, cryptonite
     , memory, tagged
     }:
     mkDerivation {
       pname = "cryptohash-cryptoapi";
       version = "0.1.4";
       sha256 = "13h5f9pmcd0swa4asl7wzpf5lskpgjdqrmy1mqdc78gsxdj8cyki";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base bytestring cereal crypto-api cryptonite memory tagged
       ];
       homepage = "https://github.com/vincenthz/hs-cryptohash-cryptoapi";
       description = "Crypto-api interfaces for cryptohash";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cryptohash-md5" = callPackage
    ({ mkDerivation, base, base16-bytestring, bytestring, criterion
     , pureMD5, tasty, tasty-hunit, tasty-quickcheck
     }:
     mkDerivation {
       pname = "cryptohash-md5";
       version = "0.11.100.1";
       sha256 = "1y8q7s2bn4gdknw1wjikdnar2b5pgz3nv3220lxrlgpsf23x82vi";
       libraryHaskellDepends = [ base bytestring ];
       testHaskellDepends = [
         base base16-bytestring bytestring pureMD5 tasty tasty-hunit
         tasty-quickcheck
       ];
       benchmarkHaskellDepends = [ base bytestring criterion ];
       homepage = "https://github.com/hvr/cryptohash-md5";
       description = "Fast, pure and practical MD5 implementation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cryptohash-sha1" = callPackage
    ({ mkDerivation, base, base16-bytestring, bytestring, criterion
     , SHA, tasty, tasty-hunit, tasty-quickcheck
     }:
     mkDerivation {
       pname = "cryptohash-sha1";
       version = "0.11.100.1";
       sha256 = "1aqdxdhxhl9jldh951djpwxx8z7gzaqspxl7iwpl84i5ahrsyy9w";
       libraryHaskellDepends = [ base bytestring ];
       testHaskellDepends = [
         base base16-bytestring bytestring SHA tasty tasty-hunit
         tasty-quickcheck
       ];
       benchmarkHaskellDepends = [ base bytestring criterion ];
       homepage = "https://github.com/hvr/cryptohash-sha1";
       description = "Fast, pure and practical SHA-1 implementation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cryptohash-sha256" = callPackage
    ({ mkDerivation, base, base16-bytestring, bytestring, criterion
     , SHA, tasty, tasty-hunit, tasty-quickcheck
     }:
     mkDerivation {
       pname = "cryptohash-sha256";
       version = "0.11.100.1";
       sha256 = "1mpmq8rqlqp3w9r78d4i175l6ibl9kfj5d48awrkk1k4x4w27c2p";
       libraryHaskellDepends = [ base bytestring ];
       testHaskellDepends = [
         base base16-bytestring bytestring SHA tasty tasty-hunit
         tasty-quickcheck
       ];
       benchmarkHaskellDepends = [ base bytestring criterion ];
       homepage = "https://github.com/hvr/cryptohash-sha256";
       description = "Fast, pure and practical SHA-256 implementation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cryptol" = callPackage
    ({ mkDerivation, alex, ansi-terminal, array, async, base
     , base-compat, bytestring, containers, criterion, deepseq
     , directory, filepath, gitrev, GraphSCC, happy, haskeline, heredoc
     , monad-control, monadLib, old-time, presburger, pretty, process
     , QuickCheck, random, sbv, simple-smt, smtLib, syb
     , template-haskell, text, tf-random, transformers
     , transformers-base, utf8-string
     }:
     mkDerivation {
       pname = "cryptol";
       version = "2.4.0";
       sha256 = "0k814z5y7aypbpvggsiy86l5fcgcf0rfc7575jsjb7226kvp2i6k";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         array async base base-compat bytestring containers deepseq
         directory filepath gitrev GraphSCC heredoc monad-control monadLib
         old-time presburger pretty process QuickCheck random sbv simple-smt
         smtLib syb template-haskell text tf-random transformers
         transformers-base utf8-string
       ];
       libraryToolDepends = [ alex happy ];
       executableHaskellDepends = [
         ansi-terminal base base-compat containers deepseq directory
         filepath haskeline monad-control monadLib process random sbv
         tf-random transformers
       ];
       benchmarkHaskellDepends = [ base criterion deepseq text ];
       homepage = "http://www.cryptol.net/";
       description = "Cryptol: The Language of Cryptography";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cryptonite" = callPackage
    ({ mkDerivation, base, byteable, bytestring, deepseq, ghc-prim
     , integer-gmp, memory, tasty, tasty-hunit, tasty-kat
     , tasty-quickcheck
     }:
     mkDerivation {
       pname = "cryptonite";
       version = "0.21";
       sha256 = "1vk209rylnn3zmvf9p8sflpyk31bc4cx71hq3cb69yn3w6p6d6k3";
       libraryHaskellDepends = [
         base bytestring deepseq ghc-prim integer-gmp memory
       ];
       testHaskellDepends = [
         base byteable bytestring memory tasty tasty-hunit tasty-kat
         tasty-quickcheck
       ];
       homepage = "https://github.com/haskell-crypto/cryptonite";
       description = "Cryptography Primitives sink";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cryptonite-conduit" = callPackage
    ({ mkDerivation, base, bytestring, conduit, conduit-extra
     , cryptonite, resourcet, transformers
     }:
     mkDerivation {
       pname = "cryptonite-conduit";
       version = "0.1";
       sha256 = "1h5ajwm3zzy29f3qi4f1lc22hl4wbb58j2198ny3n2c65yydb757";
       libraryHaskellDepends = [
         base bytestring conduit conduit-extra cryptonite resourcet
         transformers
       ];
       homepage = "https://github.com/haskell-crypto/cryptonite-conduit";
       description = "cryptonite conduit";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "css-syntax" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, directory, hspec
     , scientific, text
     }:
     mkDerivation {
       pname = "css-syntax";
       version = "0.0.5";
       sha256 = "17hbwnhwz9c6xdw508chygq684h7hrrv16yyrmqdj7f8hfzy0s9r";
       libraryHaskellDepends = [
         attoparsec base bytestring scientific text
       ];
       testHaskellDepends = [
         attoparsec base bytestring directory hspec scientific text
       ];
       description = "This package implments a parser for the CSS syntax";
       license = stdenv.lib.licenses.mit;
     }) {};
  "css-text" = callPackage
    ({ mkDerivation, attoparsec, base, hspec, QuickCheck, text }:
     mkDerivation {
       pname = "css-text";
       version = "0.1.2.2";
       sha256 = "11qrwrjqk2k4bm3bz1qcyscp146raz1hgpzynkd50yaq12n69xfz";
       libraryHaskellDepends = [ attoparsec base text ];
       testHaskellDepends = [ attoparsec base hspec QuickCheck text ];
       doCheck = false;
       homepage = "http://www.yesodweb.com/";
       description = "CSS parser and renderer";
       license = stdenv.lib.licenses.mit;
     }) {};
  "csv" = callPackage
    ({ mkDerivation, base, filepath, parsec }:
     mkDerivation {
       pname = "csv";
       version = "0.1.2";
       sha256 = "00767ai09wm7f0yzmpqck3cpgxncpr9djnmmz5l17ajz69139x4c";
       libraryHaskellDepends = [ base filepath parsec ];
       description = "CSV loader and dumper";
       license = stdenv.lib.licenses.mit;
     }) {};
  "ctrie" = callPackage
    ({ mkDerivation, async, atomic-primops, base, containers, criterion
     , deepseq, hashable, primitive, QuickCheck, random, random-shuffle
     , stm, test-framework, test-framework-quickcheck2, transformers
     , unordered-containers
     }:
     mkDerivation {
       pname = "ctrie";
       version = "0.1.1.0";
       sha256 = "1f2vz91fs8fin9ykcjjp60mmm0hw886mqmmhbs4ai02rdi7v6d44";
       libraryHaskellDepends = [ atomic-primops base hashable primitive ];
       testHaskellDepends = [
         base containers hashable QuickCheck test-framework
         test-framework-quickcheck2
       ];
       benchmarkHaskellDepends = [
         async base containers criterion deepseq hashable random
         random-shuffle stm transformers unordered-containers
       ];
       homepage = "https://github.com/mcschroeder/ctrie";
       description = "Non-blocking concurrent map";
       license = stdenv.lib.licenses.mit;
     }) {};
  "cubicspline" = callPackage
    ({ mkDerivation, base, hmatrix, safe }:
     mkDerivation {
       pname = "cubicspline";
       version = "0.1.2";
       sha256 = "0ycv395qskjw8xryzam6skc92m4iixf6065grvfh23avlsffsv2v";
       libraryHaskellDepends = [ base hmatrix safe ];
       description = "Natural cubic spline interpolation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "curl" = callPackage
    ({ mkDerivation, base, bytestring, containers, curl }:
     mkDerivation {
       pname = "curl";
       version = "1.3.8";
       sha256 = "0vj4hpaa30jz7c702xpsfvqaqdxz28zslsqnsfx6bf6dpwvck1wh";
       configureFlags = [ "-fnew-base" ];
       libraryHaskellDepends = [ base bytestring containers ];
       librarySystemDepends = [ curl ];
       description = "Haskell binding to libcurl";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) curl;};
  "darcs" = callPackage
    ({ mkDerivation, array, async, attoparsec, base, base16-bytestring
     , binary, bytestring, cmdargs, containers, cryptohash, curl
     , data-ordlist, directory, fgl, filepath, FindBin, graphviz
     , hashable, haskeline, html, HTTP, HUnit, mmap, mtl, network
     , network-uri, old-time, parsec, process, QuickCheck, random
     , regex-applicative, regex-compat-tdfa, sandi, shelly, split, tar
     , terminfo, test-framework, test-framework-hunit
     , test-framework-quickcheck2, text, time, transformers
     , transformers-compat, unix, unix-compat, utf8-string, vector
     , zip-archive, zlib
     }:
     mkDerivation {
       pname = "darcs";
       version = "2.12.5";
       sha256 = "0lrm0sal5pl453mkqn8b9fc9l7lwinc140iqihya9g17bk408nrm";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         array async attoparsec base base16-bytestring binary bytestring
         containers cryptohash data-ordlist directory fgl filepath graphviz
         hashable haskeline html HTTP mmap mtl network network-uri old-time
         parsec process random regex-applicative regex-compat-tdfa sandi tar
         terminfo text time transformers transformers-compat unix
         unix-compat utf8-string vector zip-archive zlib
       ];
       librarySystemDepends = [ curl ];
       executableHaskellDepends = [ base ];
       testHaskellDepends = [
         array base bytestring cmdargs containers directory filepath FindBin
         HUnit mtl QuickCheck shelly split test-framework
         test-framework-hunit test-framework-quickcheck2 text zip-archive
       ];
       postInstall = ''
         mkdir -p $out/etc/bash_completion.d
         mv contrib/darcs_completion $out/etc/bash_completion.d/darcs
       '';
       homepage = "http://darcs.net/";
       description = "a distributed, interactive, smart revision control system";
       license = "GPL";
     }) {inherit (pkgs) curl;};
  "data-accessor" = callPackage
    ({ mkDerivation, array, base, containers, transformers }:
     mkDerivation {
       pname = "data-accessor";
       version = "0.2.2.7";
       sha256 = "1vf2g1gac3rm32g97rl0fll51m88q7ry4m6khnl5j47qsmx24r9l";
       libraryHaskellDepends = [ array base containers transformers ];
       homepage = "http://www.haskell.org/haskellwiki/Record_access";
       description = "Utilities for accessing and manipulating fields of records";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-accessor-mtl" = callPackage
    ({ mkDerivation, base, data-accessor, mtl }:
     mkDerivation {
       pname = "data-accessor-mtl";
       version = "0.2.0.4";
       sha256 = "1i8lk0vy04giixng5addgj740cbvwlc7g62qgrmhfip0w9k93kqh";
       libraryHaskellDepends = [ base data-accessor mtl ];
       homepage = "http://www.haskell.org/haskellwiki/Record_access";
       description = "Use Accessor to access state in mtl State monad class";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-binary-ieee754" = callPackage
    ({ mkDerivation, base, binary }:
     mkDerivation {
       pname = "data-binary-ieee754";
       version = "0.4.4";
       sha256 = "02nzg1barhqhpf4x26mpzvk7jd29nali033qy01adjplv2z5m5sr";
       libraryHaskellDepends = [ base binary ];
       homepage = "https://john-millikin.com/software/data-binary-ieee754/";
       description = "Parser/Serialiser for IEEE-754 floating-point values";
       license = stdenv.lib.licenses.mit;
     }) {};
  "data-check" = callPackage
    ({ mkDerivation, base, containers, hspec, QuickCheck }:
     mkDerivation {
       pname = "data-check";
       version = "0.1.0";
       sha256 = "1rwspik0l5j7ymj7xgs3xa9y5nwvnyj7qkf9b7pax7vii4vd4z2q";
       libraryHaskellDepends = [ base containers ];
       testHaskellDepends = [ base hspec QuickCheck ];
       homepage = "https://github.com/mrkkrp/data-check";
       description = "Library for checking and normalization of data (e.g. from web forms)";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-default" = callPackage
    ({ mkDerivation, base, data-default-class
     , data-default-instances-containers, data-default-instances-dlist
     , data-default-instances-old-locale
     }:
     mkDerivation {
       pname = "data-default";
       version = "0.7.1.1";
       sha256 = "04d5n8ybmcxba9qb6h389w9zfq1lvj81b82jh6maqp6pkhkmvydh";
       libraryHaskellDepends = [
         base data-default-class data-default-instances-containers
         data-default-instances-dlist data-default-instances-old-locale
       ];
       description = "A class for types with a default value";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-default-class" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "data-default-class";
       version = "0.1.2.0";
       sha256 = "0miyjz8d4jyvqf2vp60lyfbnflx6cj2k8apmm9ly1hq0y0iv80ag";
       libraryHaskellDepends = [ base ];
       description = "A class for types with a default value";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-default-instances-containers" = callPackage
    ({ mkDerivation, base, containers, data-default-class }:
     mkDerivation {
       pname = "data-default-instances-containers";
       version = "0.0.1";
       sha256 = "06h8xka031w752a7cjlzghvr8adqbl95xj9z5zc1b62w02phfpm5";
       libraryHaskellDepends = [ base containers data-default-class ];
       description = "Default instances for types in containers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-default-instances-dlist" = callPackage
    ({ mkDerivation, base, data-default-class, dlist }:
     mkDerivation {
       pname = "data-default-instances-dlist";
       version = "0.0.1";
       sha256 = "0narkdqiprhgayjiawrr4390h4rq4pl2pb6mvixbv2phrc8kfs3x";
       libraryHaskellDepends = [ base data-default-class dlist ];
       description = "Default instances for types in dlist";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-default-instances-old-locale" = callPackage
    ({ mkDerivation, base, data-default-class, old-locale }:
     mkDerivation {
       pname = "data-default-instances-old-locale";
       version = "0.0.1";
       sha256 = "00h81i5phib741yj517p8mbnc48myvfj8axzsw44k34m48lv1lv0";
       libraryHaskellDepends = [ base data-default-class old-locale ];
       description = "Default instances for types in old-locale";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-hash" = callPackage
    ({ mkDerivation, array, base, containers, QuickCheck
     , test-framework, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "data-hash";
       version = "0.2.0.1";
       sha256 = "1ghbqvc48gf9p8wiy71hdpaj7by3b9cw6wgwi3qqz8iw054xs5wi";
       libraryHaskellDepends = [ array base containers ];
       testHaskellDepends = [
         base QuickCheck test-framework test-framework-quickcheck2
       ];
       description = "Combinators for building fast hashing functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-inttrie" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "data-inttrie";
       version = "0.1.2";
       sha256 = "1y8xbwy1cdfrswlbr029hlyj3cbsfvayxh4kklsdzbrwgnnygnld";
       libraryHaskellDepends = [ base ];
       homepage = "http://github.com/luqui/data-inttrie";
       description = "A lazy, infinite trie of integers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-lens-light" = callPackage
    ({ mkDerivation, base, mtl, template-haskell }:
     mkDerivation {
       pname = "data-lens-light";
       version = "0.1.2.2";
       sha256 = "0vmkvhl7zcsaxnx7d7b59cnrdnlnr9cfn910rpn34jny7fkydlvj";
       libraryHaskellDepends = [ base mtl template-haskell ];
       homepage = "https://github.com/feuerbach/data-lens-light";
       description = "Simple lenses, minimum dependencies";
       license = stdenv.lib.licenses.mit;
     }) {};
  "data-memocombinators" = callPackage
    ({ mkDerivation, array, base, data-inttrie }:
     mkDerivation {
       pname = "data-memocombinators";
       version = "0.5.1";
       sha256 = "1mvfc1xri3kgkx5q7za01bqg1x3bfvbgcffw5vwl6jmq4hh1sd5l";
       libraryHaskellDepends = [ array base data-inttrie ];
       homepage = "http://github.com/luqui/data-memocombinators";
       description = "Combinators for building memo tables";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-or" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "data-or";
       version = "1.0.0.5";
       sha256 = "0wp6qqq6k1zbdw9bv9gkzdiz6y8wp8r7zsqbjh54c43j3i7vdvwx";
       libraryHaskellDepends = [ base ];
       homepage = "http://code.haskell.org/~wren/";
       description = "A data type for non-exclusive disjunction";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-ordlist" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "data-ordlist";
       version = "0.4.7.0";
       sha256 = "03a9ix1fcx08viwv2jg5ndw1qbkydyyrmjvqr9wasmcik9x1wv3g";
       libraryHaskellDepends = [ base ];
       description = "Set and bag operations on ordered lists";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-reify" = callPackage
    ({ mkDerivation, base, containers }:
     mkDerivation {
       pname = "data-reify";
       version = "0.6.1";
       sha256 = "00mjv6dc3fwhbqzrll02qxilwpfypahkzcdqnv17c4nbjqg0ldb1";
       revision = "1";
       editedCabalFile = "0ixlibqrz7fd4bg9vnnd431a9kqvz4ajx8sbgyvpx9l2yjrabwzp";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base containers ];
       executableHaskellDepends = [ base ];
       homepage = "http://ku-fpg.github.io/software/data-reify/";
       description = "Reify a recursive data structure into an explicit graph";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "dataurl" = callPackage
    ({ mkDerivation, attoparsec, base, base64-bytestring, bytestring
     , HTF, text
     }:
     mkDerivation {
       pname = "dataurl";
       version = "0.1.0.0";
       sha256 = "1chgcq2vc5kya8zmi0ir4589fph2rdssw1ivnkq209g7vd42prxi";
       libraryHaskellDepends = [
         attoparsec base base64-bytestring bytestring text
       ];
       testHaskellDepends = [
         attoparsec base base64-bytestring bytestring HTF text
       ];
       homepage = "http://github.com/agrafix/dataurl#readme";
       description = "Handle data-urls";
       license = stdenv.lib.licenses.mit;
     }) {};
  "dawg-ord" = callPackage
    ({ mkDerivation, base, containers, HUnit, mtl, smallcheck, tasty
     , tasty-hunit, tasty-quickcheck, tasty-smallcheck, transformers
     , vector
     }:
     mkDerivation {
       pname = "dawg-ord";
       version = "0.5.1.0";
       sha256 = "1s92i5z63maq74ni49l282pqbz0r0c22miyjjilipr0wnz7rl4nr";
       libraryHaskellDepends = [
         base containers mtl transformers vector
       ];
       testHaskellDepends = [
         base containers HUnit mtl smallcheck tasty tasty-hunit
         tasty-quickcheck tasty-smallcheck
       ];
       homepage = "https://github.com/kawu/dawg-ord";
       description = "Directed acyclic word graphs";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "dbus" = callPackage
    ({ mkDerivation, base, bytestring, cereal, chell, chell-quickcheck
     , containers, criterion, deepseq, directory, filepath, libxml-sax
     , network, parsec, process, QuickCheck, random, text, transformers
     , unix, vector, xml-types
     }:
     mkDerivation {
       pname = "dbus";
       version = "0.10.12";
       sha256 = "0m1dp5jhjxgr52azqigqydbx7sgig8p2n6lbwfc9agmh1rjbbmzn";
       libraryHaskellDepends = [
         base bytestring cereal containers libxml-sax network parsec random
         text transformers unix vector xml-types
       ];
       testHaskellDepends = [
         base bytestring cereal chell chell-quickcheck containers directory
         filepath libxml-sax network parsec process QuickCheck random text
         transformers unix vector xml-types
       ];
       benchmarkHaskellDepends = [ base criterion deepseq ];
       doCheck = false;
       homepage = "https://john-millikin.com/software/haskell-dbus/";
       description = "A client library for the D-Bus IPC system";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "debian-build" = callPackage
    ({ mkDerivation, base, directory, filepath, process, split
     , transformers
     }:
     mkDerivation {
       pname = "debian-build";
       version = "0.10.1.0";
       sha256 = "1d4h3r0v82fwiwazvcgrbv9f7nslbgw94hbsyyibsiikwpg36454";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base directory filepath process split transformers
       ];
       executableHaskellDepends = [ base filepath transformers ];
       homepage = "http://twitter.com/khibino/";
       description = "Debian package build sequence tools";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "declarative" = callPackage
    ({ mkDerivation, base, hasty-hamiltonian, lens, mcmc-types
     , mighty-metropolis, mwc-probability, pipes, primitive
     , speedy-slice, transformers
     }:
     mkDerivation {
       pname = "declarative";
       version = "0.2.3";
       sha256 = "1ak5bpb2ii7xajirhvcbqgpypncmk7x6gmjpc9lrr7gmjm9adc7n";
       libraryHaskellDepends = [
         base hasty-hamiltonian lens mcmc-types mighty-metropolis
         mwc-probability pipes primitive speedy-slice transformers
       ];
       testHaskellDepends = [ base mwc-probability ];
       homepage = "http://github.com/jtobin/declarative";
       description = "DIY Markov Chains";
       license = stdenv.lib.licenses.mit;
     }) {};
  "deepseq-generics" = callPackage
    ({ mkDerivation, base, deepseq, ghc-prim, HUnit, test-framework
     , test-framework-hunit
     }:
     mkDerivation {
       pname = "deepseq-generics";
       version = "0.2.0.0";
       sha256 = "17bwghc15mc9pchfd1w46jh2p3wzc86aj6a537wqwxn08rayzcxh";
       libraryHaskellDepends = [ base deepseq ghc-prim ];
       testHaskellDepends = [
         base deepseq ghc-prim HUnit test-framework test-framework-hunit
       ];
       homepage = "https://github.com/hvr/deepseq-generics";
       description = "GHC.Generics-based Control.DeepSeq.rnf implementation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "dejafu" = callPackage
    ({ mkDerivation, base, concurrency, containers, deepseq, dpor
     , exceptions, monad-loops, mtl, ref-fd, semigroups, transformers
     , transformers-base
     }:
     mkDerivation {
       pname = "dejafu";
       version = "0.4.0.0";
       sha256 = "1m40vxsscrq6bwy80n9c6gxw5lifnisva6qac35p7rfcj32r4v47";
       libraryHaskellDepends = [
         base concurrency containers deepseq dpor exceptions monad-loops mtl
         ref-fd semigroups transformers transformers-base
       ];
       homepage = "https://github.com/barrucadu/dejafu";
       description = "Systematic testing for Haskell concurrency";
       license = stdenv.lib.licenses.mit;
     }) {};
  "dependent-map" = callPackage
    ({ mkDerivation, base, containers, dependent-sum }:
     mkDerivation {
       pname = "dependent-map";
       version = "0.2.4.0";
       sha256 = "0il2naf6gdkvkhscvqd8kg9v911vdhqp9h10z5546mninnyrdcsx";
       libraryHaskellDepends = [ base containers dependent-sum ];
       homepage = "https://github.com/mokus0/dependent-map";
       description = "Dependent finite maps (partial dependent products)";
       license = "unknown";
     }) {};
  "dependent-sum" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "dependent-sum";
       version = "0.3.2.2";
       sha256 = "0r7q7i55ydygzxfdafdxhpkzxpm3ax39a4s9ldyfm9m3bxky9yrl";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/mokus0/dependent-sum";
       description = "Dependent sum type";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "dependent-sum-template" = callPackage
    ({ mkDerivation, base, dependent-sum, template-haskell, th-extras
     }:
     mkDerivation {
       pname = "dependent-sum-template";
       version = "0.0.0.5";
       sha256 = "0r87c0m2cjgvp62r84ki7nkaimdyjsv6l62sc8xvrn55ld6mhgxj";
       libraryHaskellDepends = [
         base dependent-sum template-haskell th-extras
       ];
       homepage = "/dev/null";
       description = "Template Haskell code to generate instances of classes in dependent-sum package";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "derive" = callPackage
    ({ mkDerivation, base, bytestring, containers, directory, filepath
     , haskell-src-exts, pretty, process, syb, template-haskell
     , transformers, uniplate
     }:
     mkDerivation {
       pname = "derive";
       version = "2.5.26";
       sha256 = "0vaa9s5x2aas2cd35gv5a3hpzdrarn4bz5rw0mv3p7d7gxg2xvxn";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring containers directory filepath haskell-src-exts
         pretty process syb template-haskell transformers uniplate
       ];
       executableHaskellDepends = [ base ];
       homepage = "https://github.com/ndmitchell/derive#readme";
       description = "A program and library to derive instances for data types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "deriving-compat" = callPackage
    ({ mkDerivation, base, base-compat, base-orphans, containers
     , ghc-boot-th, ghc-prim, hspec, QuickCheck, tagged
     , template-haskell, transformers, transformers-compat
     }:
     mkDerivation {
       pname = "deriving-compat";
       version = "0.3.5";
       sha256 = "0cfjrkj6n32bgagphwci2dff5l6dac3palfg87nrsd3qxf75q5ha";
       libraryHaskellDepends = [
         base containers ghc-boot-th ghc-prim template-haskell transformers
         transformers-compat
       ];
       testHaskellDepends = [
         base base-compat base-orphans hspec QuickCheck tagged
         template-haskell transformers transformers-compat
       ];
       homepage = "https://github.com/haskell-compat/deriving-compat";
       description = "Backports of GHC deriving extensions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "descriptive" = callPackage
    ({ mkDerivation, aeson, base, bifunctors, containers, hspec, HUnit
     , mtl, scientific, text, transformers, vector
     }:
     mkDerivation {
       pname = "descriptive";
       version = "0.9.4";
       sha256 = "0bxskc4q6jzpvifnhh6zl77xic0fbni8abf9lipfr1xzarbwcpkr";
       libraryHaskellDepends = [
         aeson base bifunctors containers mtl scientific text transformers
         vector
       ];
       testHaskellDepends = [
         aeson base bifunctors containers hspec HUnit mtl text transformers
       ];
       homepage = "https://github.com/chrisdone/descriptive";
       description = "Self-describing consumers/parsers; forms, cmd-line args, JSON, etc";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "diagrams" = callPackage
    ({ mkDerivation, diagrams-contrib, diagrams-core, diagrams-lib
     , diagrams-svg
     }:
     mkDerivation {
       pname = "diagrams";
       version = "1.3.0.1";
       sha256 = "19z4qj712w9kjnpizxkrq5xx3k19z2yrghnx6njscm994rfbz2pf";
       libraryHaskellDepends = [
         diagrams-contrib diagrams-core diagrams-lib diagrams-svg
       ];
       doHaddock = false;
       homepage = "http://projects.haskell.org/diagrams";
       description = "Embedded domain-specific language for declarative vector graphics";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "diagrams-cairo" = callPackage
    ({ mkDerivation, array, base, bytestring, cairo, colour, containers
     , data-default-class, diagrams-core, diagrams-lib, filepath
     , hashable, JuicyPixels, lens, mtl, optparse-applicative, pango
     , split, statestack, transformers, unix, vector
     }:
     mkDerivation {
       pname = "diagrams-cairo";
       version = "1.3.1.1";
       sha256 = "1f3qd36vx9lgggsi450fk4gp5axglh1vfh0jzji36028iajkbih0";
       libraryHaskellDepends = [
         array base bytestring cairo colour containers data-default-class
         diagrams-core diagrams-lib filepath hashable JuicyPixels lens mtl
         optparse-applicative pango split statestack transformers unix
         vector
       ];
       homepage = "http://projects.haskell.org/diagrams";
       description = "Cairo backend for diagrams drawing EDSL";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "diagrams-canvas" = callPackage
    ({ mkDerivation, base, blank-canvas, cmdargs, containers
     , data-default-class, diagrams-core, diagrams-lib, lens, mtl
     , NumInstances, optparse-applicative, statestack, text
     }:
     mkDerivation {
       pname = "diagrams-canvas";
       version = "1.3.0.6";
       sha256 = "1zx0jnjjhmxpznv399dnyvbcvhxj86820mgwj0b0cy3si9rhbs90";
       libraryHaskellDepends = [
         base blank-canvas cmdargs containers data-default-class
         diagrams-core diagrams-lib lens mtl NumInstances
         optparse-applicative statestack text
       ];
       homepage = "http://projects.haskell.org/diagrams/";
       description = "HTML5 canvas backend for diagrams drawing EDSL";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "diagrams-contrib" = callPackage
    ({ mkDerivation, base, circle-packing, colour, containers
     , data-default, data-default-class, diagrams-core, diagrams-lib
     , diagrams-solve, force-layout, HUnit, lens, linear, MonadRandom
     , mtl, parsec, QuickCheck, random, semigroups, split
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , text
     }:
     mkDerivation {
       pname = "diagrams-contrib";
       version = "1.3.0.12";
       sha256 = "084n4x09c3l5vlwbi1l2n1fqsxs23ricwfih2n25a5pjr4zscxm5";
       libraryHaskellDepends = [
         base circle-packing colour containers data-default
         data-default-class diagrams-core diagrams-lib diagrams-solve
         force-layout lens linear MonadRandom mtl parsec random semigroups
         split text
       ];
       testHaskellDepends = [
         base containers diagrams-lib HUnit QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2
       ];
       homepage = "http://projects.haskell.org/diagrams/";
       description = "Collection of user contributions to diagrams EDSL";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "diagrams-core" = callPackage
    ({ mkDerivation, adjunctions, base, containers, distributive
     , dual-tree, lens, linear, monoid-extras, mtl, semigroups
     , unordered-containers
     }:
     mkDerivation {
       pname = "diagrams-core";
       version = "1.3.0.8";
       sha256 = "0www8nbbsjm541ndbjcy9kvhyv579bjcvkbzwwb2chhng7bmyvrm";
       libraryHaskellDepends = [
         adjunctions base containers distributive dual-tree lens linear
         monoid-extras mtl semigroups unordered-containers
       ];
       homepage = "http://projects.haskell.org/diagrams";
       description = "Core libraries for diagrams EDSL";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "diagrams-gtk" = callPackage
    ({ mkDerivation, base, cairo, diagrams-cairo, diagrams-lib, gtk }:
     mkDerivation {
       pname = "diagrams-gtk";
       version = "1.3.0.2";
       sha256 = "0aaci1rnxa9rpwyrwh6gsxnz5f8ai7ywa42kiyvxslcv1zim2izg";
       libraryHaskellDepends = [
         base cairo diagrams-cairo diagrams-lib gtk
       ];
       homepage = "http://projects.haskell.org/diagrams/";
       description = "Backend for rendering diagrams directly to GTK windows";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "diagrams-html5" = callPackage
    ({ mkDerivation, base, cmdargs, containers, data-default-class
     , diagrams-core, diagrams-lib, lens, mtl, NumInstances
     , optparse-applicative, split, statestack, static-canvas, text
     }:
     mkDerivation {
       pname = "diagrams-html5";
       version = "1.3.0.7";
       sha256 = "197p95fh6jbnbln5a5pqdqlmscdffjp5k7nha9jn3q5njmdwbpcb";
       libraryHaskellDepends = [
         base cmdargs containers data-default-class diagrams-core
         diagrams-lib lens mtl NumInstances optparse-applicative split
         statestack static-canvas text
       ];
       homepage = "http://projects.haskell.org/diagrams/";
       description = "HTML5 canvas backend for diagrams drawing EDSL";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "diagrams-lib" = callPackage
    ({ mkDerivation, active, adjunctions, array, base, colour
     , containers, data-default-class, diagrams-core, diagrams-solve
     , directory, distributive, dual-tree, exceptions, filepath
     , fingertree, fsnotify, hashable, intervals, JuicyPixels, lens
     , linear, monoid-extras, mtl, optparse-applicative, process
     , semigroups, tagged, tasty, tasty-hunit, text, transformers
     , unordered-containers
     }:
     mkDerivation {
       pname = "diagrams-lib";
       version = "1.3.1.4";
       sha256 = "05wn02cskfnjv4k49i4dly0lyw8rgd5fgk7zgmsbqal73awc5lhf";
       libraryHaskellDepends = [
         active adjunctions array base colour containers data-default-class
         diagrams-core diagrams-solve directory distributive dual-tree
         exceptions filepath fingertree fsnotify hashable intervals
         JuicyPixels lens linear monoid-extras mtl optparse-applicative
         process semigroups tagged text transformers unordered-containers
       ];
       testHaskellDepends = [ base tasty tasty-hunit ];
       homepage = "http://projects.haskell.org/diagrams";
       description = "Embedded domain-specific language for declarative graphics";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "diagrams-postscript" = callPackage
    ({ mkDerivation, base, containers, data-default-class
     , diagrams-core, diagrams-lib, dlist, filepath, hashable, lens
     , monoid-extras, mtl, semigroups, split, statestack
     }:
     mkDerivation {
       pname = "diagrams-postscript";
       version = "1.3.0.7";
       sha256 = "0lgpvqhjmb9m17sl5brbrznd3rngx947q6k4pf72vkpjvs4asigh";
       libraryHaskellDepends = [
         base containers data-default-class diagrams-core diagrams-lib dlist
         filepath hashable lens monoid-extras mtl semigroups split
         statestack
       ];
       homepage = "http://projects.haskell.org/diagrams/";
       description = "Postscript backend for diagrams drawing EDSL";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "diagrams-rasterific" = callPackage
    ({ mkDerivation, base, bytestring, containers, data-default-class
     , diagrams-core, diagrams-lib, filepath, FontyFruity, hashable
     , JuicyPixels, lens, mtl, optparse-applicative, Rasterific, split
     , unix
     }:
     mkDerivation {
       pname = "diagrams-rasterific";
       version = "1.3.1.8";
       sha256 = "16fbflmx9ppicisqwx2g0527cm0j3hpgznzna4m3wmjma0802q5p";
       revision = "1";
       editedCabalFile = "0hc04gi6qibpxl7661f64pzi16awywc7ahyd6wlj059lasq08l4s";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base bytestring containers data-default-class diagrams-core
         diagrams-lib filepath FontyFruity hashable JuicyPixels lens mtl
         optparse-applicative Rasterific split unix
       ];
       homepage = "http://projects.haskell.org/diagrams/";
       description = "Rasterific backend for diagrams";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "diagrams-solve" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "diagrams-solve";
       version = "0.1.0.1";
       sha256 = "1piv8mi5182b2ggr28fnr4mda4vbk4mzasvy0nfp3517ii63mrbi";
       libraryHaskellDepends = [ base ];
       homepage = "http://projects.haskell.org/diagrams";
       description = "Pure Haskell solver routines used by diagrams";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "diagrams-svg" = callPackage
    ({ mkDerivation, base, base64-bytestring, bytestring, colour
     , containers, diagrams-core, diagrams-lib, directory, filepath
     , hashable, JuicyPixels, lens, monoid-extras, mtl, old-time
     , optparse-applicative, process, semigroups, split, svg-builder
     , text, time
     }:
     mkDerivation {
       pname = "diagrams-svg";
       version = "1.4.0.3";
       sha256 = "1rarpz21f1nzibqjrrkh7ldrhyaifrcgadp6fc9hdlh1lsg5gl8y";
       libraryHaskellDepends = [
         base base64-bytestring bytestring colour containers diagrams-core
         diagrams-lib directory filepath hashable JuicyPixels lens
         monoid-extras mtl old-time optparse-applicative process semigroups
         split svg-builder text time
       ];
       homepage = "http://projects.haskell.org/diagrams/";
       description = "SVG backend for diagrams drawing EDSL";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "dice" = callPackage
    ({ mkDerivation, base, parsec, random-fu, transformers }:
     mkDerivation {
       pname = "dice";
       version = "0.1";
       sha256 = "1rfx3vh983f3gc6si661zimhjl47ip30l3pvf7dysjirr3gffgz1";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base parsec random-fu transformers ];
       description = "Simplistic D&D style dice-rolling system";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "diff3" = callPackage
    ({ mkDerivation, base, Diff, QuickCheck, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "diff3";
       version = "0.2.0.3";
       sha256 = "0zdfn1jhsq8pd23qpkhzr8wgiwbazfbq688bjnpc406i7gq88k78";
       libraryHaskellDepends = [ base Diff ];
       testHaskellDepends = [
         base QuickCheck test-framework test-framework-quickcheck2
       ];
       homepage = "http://github.com/ocharles/diff3.git";
       description = "Perform a 3-way difference of documents";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "digest" = callPackage
    ({ mkDerivation, base, bytestring, zlib }:
     mkDerivation {
       pname = "digest";
       version = "0.0.1.2";
       sha256 = "04gy2zp8yzvv7j9bdfvmfzcz3sqyqa6rwslqcn4vyair2vmif5v4";
       libraryHaskellDepends = [ base bytestring ];
       librarySystemDepends = [ zlib ];
       description = "Various cryptographic hashes for bytestrings; CRC32 and Adler32 for now";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) zlib;};
  "digits" = callPackage
    ({ mkDerivation, base, QuickCheck }:
     mkDerivation {
       pname = "digits";
       version = "0.3.1";
       sha256 = "0b3arnnwqw53cb2xqmy4j66nw9y6wrazb545qkka9y6w8nbrqjd8";
       libraryHaskellDepends = [ base QuickCheck ];
       testHaskellDepends = [ base QuickCheck ];
       description = "Converts integers to lists of digits and back";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "dimensional" = callPackage
    ({ mkDerivation, base, criterion, deepseq, exact-pi, HUnit
     , numtype-dk, vector
     }:
     mkDerivation {
       pname = "dimensional";
       version = "1.0.1.3";
       sha256 = "19wkm9jm6pjrrwqvafhs8zmfa9g06l5a03pcr8jm6497jajndi9v";
       libraryHaskellDepends = [
         base deepseq exact-pi numtype-dk vector
       ];
       testHaskellDepends = [ base HUnit ];
       benchmarkHaskellDepends = [ base criterion deepseq ];
       homepage = "https://github.com/bjornbm/dimensional/";
       description = "Statically checked physical dimensions, using Type Families and Data Kinds";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "direct-sqlite" = callPackage
    ({ mkDerivation, base, base16-bytestring, bytestring, directory
     , HUnit, temporary, text
     }:
     mkDerivation {
       pname = "direct-sqlite";
       version = "2.3.19";
       sha256 = "0g7bwv1496qb1lgz15q83zjg8ddw1icpb98i70zrxpcdi2crnzpl";
       libraryHaskellDepends = [ base bytestring text ];
       testHaskellDepends = [
         base base16-bytestring bytestring directory HUnit temporary text
       ];
       doCheck = false;
       homepage = "https://github.com/IreneKnapp/direct-sqlite";
       description = "Low-level binding to SQLite3. Includes UTF8 and BLOB support.";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "directory-tree" = callPackage
    ({ mkDerivation, base, directory, filepath, process }:
     mkDerivation {
       pname = "directory-tree";
       version = "0.12.1";
       sha256 = "05z5ws58kky3wcwwwv6q16m9vs0lzj35qqs9v5acy9m2nfal8272";
       libraryHaskellDepends = [ base directory filepath ];
       testHaskellDepends = [ base directory filepath process ];
       homepage = "http://brandon.si/code/directory-tree-module-released/";
       description = "A simple directory-like tree datatype, with useful IO functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "discount" = callPackage
    ({ mkDerivation, base, bytestring, markdown, text }:
     mkDerivation {
       pname = "discount";
       version = "0.1.1";
       sha256 = "1q1lz9dgxp5kq0ngh7pagijmlc616vwrfrb14pjx2vc9s7yvg779";
       libraryHaskellDepends = [ base bytestring text ];
       librarySystemDepends = [ markdown ];
       homepage = "http://github.com/lightquake/discount";
       description = "Haskell bindings to the discount Markdown library";
       license = stdenv.lib.licenses.mit;
     }) {markdown = null;};
  "disk-free-space" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "disk-free-space";
       version = "0.1.0.1";
       sha256 = "07rqj8k1vh3cykq9yidpjxhgh1f7vgmjs6y1nv5kq2217ff4yypi";
       revision = "3";
       editedCabalFile = "0x0wjycr3rhw9vcq51b4sz8cf7mcvx7whhywv72y25r9385lxb3i";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/redneb/disk-free-space";
       description = "Retrieve information about disk space usage";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "distributed-closure" = callPackage
    ({ mkDerivation, base, binary, bytestring, constraints, hspec
     , QuickCheck, syb, template-haskell
     }:
     mkDerivation {
       pname = "distributed-closure";
       version = "0.3.3.0";
       sha256 = "13rn5q7yjr6q5ds4xzgrkxinqrx13s1214ln4flm2ziwp79myrxw";
       libraryHaskellDepends = [
         base binary bytestring constraints syb template-haskell
       ];
       testHaskellDepends = [ base binary hspec QuickCheck ];
       homepage = "https://github.com/tweag/distributed-closure";
       description = "Serializable closures for distributed programming";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "distributed-static" = callPackage
    ({ mkDerivation, base, binary, bytestring, containers, deepseq
     , rank1dynamic
     }:
     mkDerivation {
       pname = "distributed-static";
       version = "0.3.5.0";
       sha256 = "1yai3sgqk1z8kyvnmkw1ngmj7wazlyxva4smvsk37q1ss7fjfyz5";
       libraryHaskellDepends = [
         base binary bytestring containers deepseq rank1dynamic
       ];
       homepage = "http://haskell-distributed.github.com";
       description = "Compositional, type-safe, polymorphic static values and closures";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "distribution-nixpkgs" = callPackage
    ({ mkDerivation, aeson, base, bytestring, Cabal, containers
     , deepseq, doctest, hspec, language-nix, lens, pretty, process
     , QuickCheck, split
     }:
     mkDerivation {
       pname = "distribution-nixpkgs";
       version = "1.0.0.1";
       sha256 = "0j0vzf7haqxwjcmsql7h26m5cqjrm4cdjdjzsfi89m2qrczzx6xn";
       libraryHaskellDepends = [
         aeson base bytestring Cabal containers deepseq language-nix lens
         pretty process split
       ];
       testHaskellDepends = [
         aeson base bytestring Cabal containers deepseq doctest hspec
         language-nix lens pretty process QuickCheck split
       ];
       homepage = "https://github.com/peti/distribution-nixpkgs#readme";
       description = "Types and functions to manipulate the Nixpkgs distribution";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "distributive" = callPackage
    ({ mkDerivation, base, base-orphans, directory, doctest, filepath
     , tagged, transformers, transformers-compat
     }:
     mkDerivation {
       pname = "distributive";
       version = "0.5.1";
       sha256 = "14mfncdk4kx49zl1076g1x398544f8y910cv474682xh3669dl4g";
       libraryHaskellDepends = [
         base base-orphans tagged transformers transformers-compat
       ];
       testHaskellDepends = [ base directory doctest filepath ];
       homepage = "http://github.com/ekmett/distributive/";
       description = "Distributive functors -- Dual to Traversable";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "diversity" = callPackage
    ({ mkDerivation, base, containers, data-ordlist, fasta
     , math-functions, MonadRandom, optparse-applicative, parsec, pipes
     , random-shuffle, scientific, split
     }:
     mkDerivation {
       pname = "diversity";
       version = "0.8.0.1";
       sha256 = "1fpyq61jkvmha40gsk1mvz8p99cq64bnfx3p4pklchs202hq1vh6";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base containers data-ordlist fasta math-functions MonadRandom
         parsec random-shuffle scientific split
       ];
       executableHaskellDepends = [
         base containers fasta optparse-applicative pipes
       ];
       homepage = "https://github.com/GregorySchwartz/diversity";
       description = "Quantify the diversity of a population";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "djinn-ghc" = callPackage
    ({ mkDerivation, async, base, containers, djinn-lib, ghc, mtl
     , transformers
     }:
     mkDerivation {
       pname = "djinn-ghc";
       version = "0.0.2.3";
       sha256 = "190llfn8dvxkdan806nybn3d4psmnr1126zg8lmk8p5wd7nnm5fb";
       libraryHaskellDepends = [
         async base containers djinn-lib ghc mtl transformers
       ];
       description = "Generate Haskell code from a type. Bridge from Djinn to GHC API.";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "djinn-lib" = callPackage
    ({ mkDerivation, base, containers, mtl, pretty }:
     mkDerivation {
       pname = "djinn-lib";
       version = "0.0.1.2";
       sha256 = "048hs27awl4j9lg04qbnpf8c51mzbgy2afckis19zcswmavi1zn0";
       libraryHaskellDepends = [ base containers mtl pretty ];
       homepage = "http://www.augustsson.net/Darcs/Djinn/";
       description = "Generate Haskell code from a type. Library extracted from djinn package.";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "dlist" = callPackage
    ({ mkDerivation, base, deepseq }:
     mkDerivation {
       pname = "dlist";
       version = "0.8.0.2";
       sha256 = "1ca1hvl5kd4api4gjyhwwavdx8snq6gf1jr6ab0zmjx7p77pwfbp";
       libraryHaskellDepends = [ base deepseq ];
       doCheck = false;
       homepage = "https://github.com/spl/dlist";
       description = "Difference lists";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "dlist-instances" = callPackage
    ({ mkDerivation, base, dlist, semigroups }:
     mkDerivation {
       pname = "dlist-instances";
       version = "0.1.1.1";
       sha256 = "0nsgrr25r4qxv2kpn7i20hra8jjkyllxfrhh5hml3ysjdz010jni";
       libraryHaskellDepends = [ base dlist semigroups ];
       homepage = "https://github.com/gregwebs/dlist-instances";
       description = "Difference lists instances";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "dns" = callPackage
    ({ mkDerivation, attoparsec, base, binary, bytestring
     , bytestring-builder, conduit, conduit-extra, containers, doctest
     , hspec, iproute, mtl, network, random, resourcet, safe, word8
     }:
     mkDerivation {
       pname = "dns";
       version = "2.0.10";
       sha256 = "18x6ka23khkjr9f2s7hqk2q5q93sf2srwml8cl3gsn2vwa7vq0xs";
       libraryHaskellDepends = [
         attoparsec base binary bytestring bytestring-builder conduit
         conduit-extra containers iproute mtl network random resourcet safe
       ];
       testHaskellDepends = [
         attoparsec base binary bytestring bytestring-builder conduit
         conduit-extra containers doctest hspec iproute mtl network random
         resourcet safe word8
       ];
       doCheck = false;
       testTarget = "spec";
       description = "DNS library in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "do-list" = callPackage
    ({ mkDerivation, base, criterion, hspec, mtl, text }:
     mkDerivation {
       pname = "do-list";
       version = "1.0.1";
       sha256 = "155nqm4wfi9g5qxxx9gl74g6z2w3z08cysz6z60pmbdhc4s1jxxk";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base hspec ];
       benchmarkHaskellDepends = [ base criterion mtl text ];
       homepage = "https://github.com/tserduke/do-list#readme";
       description = "Do notation for free";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "dockerfile" = callPackage
    ({ mkDerivation, base, hspec }:
     mkDerivation {
       pname = "dockerfile";
       version = "0.1.0.1";
       sha256 = "0980w0fh5xb7azknnmph6rmnzswsjw360ga5ymds2valq2vc0ji9";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base hspec ];
       description = "A simple DSL for describing and generating Dockerfile containers in Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};
  "docopt" = callPackage
    ({ mkDerivation, aeson, ansi-terminal, base, bytestring, containers
     , HUnit, parsec, split, template-haskell, text, th-lift
     }:
     mkDerivation {
       pname = "docopt";
       version = "0.7.0.5";
       sha256 = "1vh5kn13z0c6k2ir6nyr453flyn0cfmz7h61903vysw9lh40hy8m";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base containers parsec template-haskell th-lift
       ];
       testHaskellDepends = [
         aeson ansi-terminal base bytestring containers HUnit parsec split
         template-haskell text th-lift
       ];
       homepage = "https://github.com/docopt/docopt.hs";
       description = "A command-line interface parser that will make you smile";
       license = stdenv.lib.licenses.mit;
     }) {};
  "doctest" = callPackage
    ({ mkDerivation, base, base-compat, code-page, deepseq, directory
     , filepath, ghc, ghc-paths, hspec, HUnit, process, QuickCheck
     , setenv, silently, stringbuilder, syb, transformers, with-location
     }:
     mkDerivation {
       pname = "doctest";
       version = "0.11.1";
       sha256 = "0amd0xh8mwc6gk7h9vdkx3rhv868lifl8cxvnw3if1pl1c7v6sjv";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base base-compat code-page deepseq directory filepath ghc ghc-paths
         process syb transformers
       ];
       executableHaskellDepends = [ base ];
       testHaskellDepends = [
         base base-compat code-page deepseq directory filepath ghc ghc-paths
         hspec HUnit process QuickCheck setenv silently stringbuilder syb
         transformers with-location
       ];
       doCheck = false;
       homepage = "https://github.com/sol/doctest#readme";
       description = "Test interactive Haskell examples";
       license = stdenv.lib.licenses.mit;
     }) {};
  "doctest-discover" = callPackage
    ({ mkDerivation, aeson, base, bytestring, directory, doctest
     , filepath
     }:
     mkDerivation {
       pname = "doctest-discover";
       version = "0.1.0.7";
       sha256 = "0w5xgw841fxp26n4c9srp84g0m0b105sa1snwrjg5dvxa7d6asmc";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base bytestring directory doctest filepath
       ];
       executableHaskellDepends = [
         aeson base bytestring directory doctest filepath
       ];
       testHaskellDepends = [ base doctest ];
       doHaddock = false;
       homepage = "http://github.com/karun012/doctest-discover";
       description = "Easy way to run doctests via cabal";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "doctest-prop" = callPackage
    ({ mkDerivation, base, doctest, HUnit, QuickCheck }:
     mkDerivation {
       pname = "doctest-prop";
       version = "0.2.0.1";
       sha256 = "1amfsq53s0bgal77g7hbsvbn1vlqh1jc3qvcjwv0achc6z65dc2a";
       libraryHaskellDepends = [ base HUnit QuickCheck ];
       testHaskellDepends = [ base doctest HUnit QuickCheck ];
       doCheck = false;
       description = "Allow QuickCheck-style property testing within doctest";
       license = stdenv.lib.licenses.mit;
     }) {};
  "docvim" = callPackage
    ({ mkDerivation, base, bytestring, containers, deepseq, directory
     , dlist, filepath, hlint, lens, mtl, optparse-applicative, parsec
     , pretty-show, process, split, tasty, tasty-golden, tasty-hunit
     , temporary
     }:
     mkDerivation {
       pname = "docvim";
       version = "0.3.2.1";
       sha256 = "0kq7jgj533118a2404yc6fk7q8g9s2z36qkr6pdgwb6syh2r0jzx";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base containers directory dlist filepath lens mtl
         optparse-applicative parsec pretty-show split
       ];
       executableHaskellDepends = [ base ];
       testHaskellDepends = [
         base bytestring containers deepseq directory dlist filepath hlint
         lens mtl parsec pretty-show process split tasty tasty-golden
         tasty-hunit temporary
       ];
       homepage = "https://github.com/wincent/docvim";
       description = "Documentation generator for Vim plug-ins";
       license = stdenv.lib.licenses.mit;
     }) {};
  "dotenv" = callPackage
    ({ mkDerivation, base, base-compat, exceptions, hspec
     , hspec-megaparsec, megaparsec, optparse-applicative, process, text
     , transformers
     }:
     mkDerivation {
       pname = "dotenv";
       version = "0.3.1.0";
       sha256 = "0xl4hrydgnxz95xpqy08qghl398lsfa78l6mlrqzv1p42wbpqkkz";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base base-compat exceptions megaparsec text transformers
       ];
       executableHaskellDepends = [
         base base-compat megaparsec optparse-applicative process text
         transformers
       ];
       testHaskellDepends = [
         base base-compat exceptions hspec hspec-megaparsec megaparsec text
         transformers
       ];
       homepage = "https://github.com/stackbuilders/dotenv-hs";
       description = "Loads environment variables from dotenv files";
       license = stdenv.lib.licenses.mit;
     }) {};
  "dotnet-timespan" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "dotnet-timespan";
       version = "0.0.1.0";
       sha256 = "1hws424hf4ifijmz2xn3jvwvayll5jig83bgkl9zavwipkzqvjnq";
       libraryHaskellDepends = [ base ];
       homepage = "http://github.com/YoEight/dotnet-timespan";
       description = ".NET TimeSpan";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "double-conversion" = callPackage
    ({ mkDerivation, base, bytestring, ghc-prim, HUnit, test-framework
     , test-framework-hunit, test-framework-quickcheck2, text
     }:
     mkDerivation {
       pname = "double-conversion";
       version = "2.0.2.0";
       sha256 = "0sx2kc1gw72mjvd8vph8bbjw5whfxfv92rsdhjg1c0al75rf3ka4";
       libraryHaskellDepends = [ base bytestring ghc-prim text ];
       testHaskellDepends = [
         base bytestring HUnit test-framework test-framework-hunit
         test-framework-quickcheck2 text
       ];
       homepage = "https://github.com/bos/double-conversion";
       description = "Fast conversion between double precision floating point and text";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "download" = callPackage
    ({ mkDerivation, base, bytestring, feed, hspec, tagsoup, xml }:
     mkDerivation {
       pname = "download";
       version = "0.3.2.5";
       sha256 = "1h4rvmjlh1yjmy034x5nhnplqkkrlxa652c1fbzw8zpywhmdkrls";
       libraryHaskellDepends = [ base bytestring feed tagsoup xml ];
       testHaskellDepends = [ base hspec ];
       homepage = "https://github.com/psibi/download";
       description = "High-level file download based on URLs";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "dpor" = callPackage
    ({ mkDerivation, base, containers, deepseq, random, semigroups }:
     mkDerivation {
       pname = "dpor";
       version = "0.2.0.0";
       sha256 = "1qn839lhnjsx2swq0ca8l2qr0szypdb2dsbfi1412m25p11cryvf";
       libraryHaskellDepends = [
         base containers deepseq random semigroups
       ];
       homepage = "https://github.com/barrucadu/dejafu";
       description = "A generic implementation of dynamic partial-order reduction (DPOR) for testing arbitrary models of concurrency";
       license = stdenv.lib.licenses.mit;
     }) {};
  "drawille" = callPackage
    ({ mkDerivation, base, containers, hspec, QuickCheck }:
     mkDerivation {
       pname = "drawille";
       version = "0.1.2.0";
       sha256 = "1prpca2glkh8rwqwppjnqlqw71pba221hmcn9jbnih86gbl8w65q";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base containers ];
       testHaskellDepends = [ base containers hspec QuickCheck ];
       homepage = "https://github.com/yamadapc/haskell-drawille#readme";
       description = "A port of asciimoo's drawille to haskell";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "drifter" = callPackage
    ({ mkDerivation, base, containers, fgl, tasty, tasty-hunit
     , tasty-quickcheck, text
     }:
     mkDerivation {
       pname = "drifter";
       version = "0.2.2";
       sha256 = "1q8i6f6y0wzvn4nawzc47h90qbq5ycd6m73ih7336kpzyzphqzp4";
       libraryHaskellDepends = [ base containers fgl text ];
       testHaskellDepends = [
         base tasty tasty-hunit tasty-quickcheck text
       ];
       homepage = "https://github.com/AndrewRademacher/drifter";
       description = "Simple schema management for arbitrary databases";
       license = stdenv.lib.licenses.mit;
     }) {};
  "drifter-postgresql" = callPackage
    ({ mkDerivation, base, drifter, either, mtl, postgresql-simple
     , tasty, tasty-hunit, text, time
     }:
     mkDerivation {
       pname = "drifter-postgresql";
       version = "0.0.2";
       sha256 = "142i86w1ljr5nwd6hxp2mg8v3wh5g9y26mwnjgg2yzaiighd3yq7";
       revision = "1";
       editedCabalFile = "0srgza1vvx533av3b9k48w0w8vc4ir1d15898k7glv9vc7d3az2p";
       libraryHaskellDepends = [
         base drifter either mtl postgresql-simple time
       ];
       testHaskellDepends = [
         base drifter either postgresql-simple tasty tasty-hunit text
       ];
       doCheck = false;
       homepage = "http://github.com/michaelxavier/drifter-postgresql";
       description = "PostgreSQL support for the drifter schema migration tool";
       license = stdenv.lib.licenses.mit;
     }) {};
  "dual-tree" = callPackage
    ({ mkDerivation, base, monoid-extras, newtype, semigroups }:
     mkDerivation {
       pname = "dual-tree";
       version = "0.2.0.9";
       sha256 = "193ncl8l186gxrfj5pszbmlwjw4gljlkziddql0dyqhr8yxhlzay";
       libraryHaskellDepends = [ base monoid-extras newtype semigroups ];
       description = "Rose trees with cached and accumulating monoidal annotations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "dynamic-state" = callPackage
    ({ mkDerivation, base, binary, bytestring, hashable
     , unordered-containers
     }:
     mkDerivation {
       pname = "dynamic-state";
       version = "0.2.2.0";
       sha256 = "1ky739y1mqkw7lrs0l2cb9156v46k065srwd9dv19rihh6h4z0s8";
       libraryHaskellDepends = [
         base binary bytestring hashable unordered-containers
       ];
       description = "Optionally serializable dynamic state keyed by type";
       license = stdenv.lib.licenses.gpl2;
     }) {};
  "dyre" = callPackage
    ({ mkDerivation, base, binary, directory, executable-path, filepath
     , ghc-paths, io-storage, process, time, unix, xdg-basedir
     }:
     mkDerivation {
       pname = "dyre";
       version = "0.8.12";
       sha256 = "10hnlysy4bjvvznk8v902mlk4jx95qf972clyi1l32xkqrf30972";
       libraryHaskellDepends = [
         base binary directory executable-path filepath ghc-paths io-storage
         process time unix xdg-basedir
       ];
       homepage = "http://github.com/willdonnelly/dyre";
       description = "Dynamic reconfiguration in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "easy-file" = callPackage
    ({ mkDerivation, base, directory, filepath, time, unix }:
     mkDerivation {
       pname = "easy-file";
       version = "0.2.1";
       sha256 = "0v75081bx4qzlqy29hh639nzlr7dncwza3qxbzm9njc4jarf31pz";
       libraryHaskellDepends = [ base directory filepath time unix ];
       homepage = "http://github.com/kazu-yamamoto/easy-file";
       description = "Cross-platform File handling";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ed25519" = callPackage
    ({ mkDerivation, base, bytestring, criterion, deepseq, directory
     , doctest, filepath, ghc-prim, hlint, QuickCheck
     }:
     mkDerivation {
       pname = "ed25519";
       version = "0.0.5.0";
       sha256 = "0v8msqvgzimhs7p5ri25hrb1ni2wvisl5rmdxy89fc59py79b9fq";
       revision = "2";
       editedCabalFile = "1cq6h3jqkb1kvd9fjfhsllg5gq78sdiyf2gy9862xhlbv6wil19f";
       libraryHaskellDepends = [ base bytestring ghc-prim ];
       testHaskellDepends = [
         base bytestring directory doctest filepath hlint QuickCheck
       ];
       benchmarkHaskellDepends = [ base bytestring criterion deepseq ];
       doCheck = false;
       homepage = "http://thoughtpolice.github.com/hs-ed25519";
       description = "Ed25519 cryptographic signatures";
       license = stdenv.lib.licenses.mit;
     }) {};
  "ede" = callPackage
    ({ mkDerivation, aeson, ansi-wl-pprint, base, bifunctors
     , bytestring, comonad, directory, filepath, free, lens, mtl
     , parsers, scientific, semigroups, tasty, tasty-golden, text
     , text-format, text-manipulate, trifecta, unordered-containers
     , vector
     }:
     mkDerivation {
       pname = "ede";
       version = "0.2.8.6";
       sha256 = "19gj1ibq84a49nxijl7xh0h7zc2fxwkf9axfw753y5f6xdhwx233";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson ansi-wl-pprint base bifunctors bytestring comonad directory
         filepath free lens mtl parsers scientific semigroups text
         text-format text-manipulate trifecta unordered-containers vector
       ];
       testHaskellDepends = [
         aeson base bifunctors bytestring directory tasty tasty-golden text
       ];
       homepage = "http://github.com/brendanhay/ede";
       description = "Templating language with similar syntax and features to Liquid or Jinja2";
       license = "unknown";
     }) {};
  "edit-distance" = callPackage
    ({ mkDerivation, array, base, containers, criterion, deepseq
     , process, QuickCheck, random, test-framework
     , test-framework-quickcheck2, time, unix
     }:
     mkDerivation {
       pname = "edit-distance";
       version = "0.2.2.1";
       sha256 = "0jkca97zyv23yyilp3jydcrzxqhyk27swhzh82llvban5zp8b21y";
       revision = "1";
       editedCabalFile = "1vjn4ryzdilz7l1ad7czh11nw48h5mj8if7ij3q0mmc3sffa8csd";
       libraryHaskellDepends = [ array base containers random ];
       testHaskellDepends = [
         array base containers QuickCheck random test-framework
         test-framework-quickcheck2
       ];
       benchmarkHaskellDepends = [
         array base containers criterion deepseq process random time unix
       ];
       homepage = "http://github.com/phadej/edit-distance";
       description = "Levenshtein and restricted Damerau-Levenshtein edit distances";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "editor-open" = callPackage
    ({ mkDerivation, base, bytestring, conduit, conduit-extra
     , directory, process, resourcet, temporary, transformers, unix
     }:
     mkDerivation {
       pname = "editor-open";
       version = "0.6.0.0";
       sha256 = "0raj0s8v72kz63hqpqhf58sx0a8mcwi4ania40spjirdrsdx3i9g";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base bytestring conduit conduit-extra directory process resourcet
         temporary transformers unix
       ];
       executableHaskellDepends = [
         base bytestring conduit conduit-extra resourcet
       ];
       homepage = "https://github.com/pharpend/editor-open";
       description = "Open the user's $VISUAL or $EDITOR for text input";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "effect-handlers" = callPackage
    ({ mkDerivation, base, criterion, free, hspec, hspec-discover
     , HUnit, kan-extensions, mtl, QuickCheck
     }:
     mkDerivation {
       pname = "effect-handlers";
       version = "0.1.0.8";
       sha256 = "0358kbgv60ayg7g6iz9bqxqp0nih349bk740q9pj7ny8drxsff94";
       libraryHaskellDepends = [ base free kan-extensions mtl ];
       testHaskellDepends = [
         base hspec hspec-discover HUnit QuickCheck
       ];
       benchmarkHaskellDepends = [ base criterion ];
       homepage = "https://github.com/edofic/effect-handlers";
       description = "A library for writing extensible algebraic effects and handlers. Similar to extensible-effects but with deep handlers.";
       license = stdenv.lib.licenses.mit;
     }) {};
  "either" = callPackage
    ({ mkDerivation, base, bifunctors, exceptions, free, mmorph
     , monad-control, MonadRandom, mtl, profunctors, semigroupoids
     , semigroups, transformers, transformers-base
     }:
     mkDerivation {
       pname = "either";
       version = "4.4.1.1";
       sha256 = "1lrlwqqnm6ibfcydlv5qvvssw7bm0c6yypy0rayjzv1znq7wp1xh";
       revision = "1";
       editedCabalFile = "1ccxjfp1vsnrq9wyd5jrz7adk9rwmrlvppsc8ad1dpjy5zsayxij";
       libraryHaskellDepends = [
         base bifunctors exceptions free mmorph monad-control MonadRandom
         mtl profunctors semigroupoids semigroups transformers
         transformers-base
       ];
       homepage = "http://github.com/ekmett/either/";
       description = "An either monad transformer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "either-unwrap" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "either-unwrap";
       version = "1.1";
       sha256 = "0g1f5m7bcpnyg2sdvwx8x34ml6dqfrn326s8pbfciaqqf7wddayc";
       libraryHaskellDepends = [ base ];
       homepage = "http://github.com/gcross/either-unwrap";
       description = "Functions for probing and unwrapping values inside of Either";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ekg" = callPackage
    ({ mkDerivation, aeson, base, bytestring, ekg-core, ekg-json
     , filepath, network, snap-core, snap-server, text, time
     , transformers, unordered-containers
     }:
     mkDerivation {
       pname = "ekg";
       version = "0.4.0.12";
       sha256 = "0i4qxd8alf4j0jamlay00b9q66iq3879zxccxiv3q321fqg8q3pk";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson base bytestring ekg-core ekg-json filepath network snap-core
         snap-server text time transformers unordered-containers
       ];
       homepage = "https://github.com/tibbe/ekg";
       description = "Remote monitoring of processes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ekg-core" = callPackage
    ({ mkDerivation, base, containers, ghc-prim, text
     , unordered-containers
     }:
     mkDerivation {
       pname = "ekg-core";
       version = "0.1.1.1";
       sha256 = "1mir54l783pwy4fbz5bdbckz6d41iim4zdk06wpsl9xhn7s3vpjl";
       libraryHaskellDepends = [
         base containers ghc-prim text unordered-containers
       ];
       benchmarkHaskellDepends = [ base ];
       homepage = "https://github.com/tibbe/ekg-core";
       description = "Tracking of system metrics";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ekg-json" = callPackage
    ({ mkDerivation, aeson, base, ekg-core, text, unordered-containers
     }:
     mkDerivation {
       pname = "ekg-json";
       version = "0.1.0.4";
       sha256 = "0yg48m1wxlpxkz5a6lfc2yznxrdd7kpr9bvjnr5q54a8dqa7rz3a";
       libraryHaskellDepends = [
         aeson base ekg-core text unordered-containers
       ];
       homepage = "https://github.com/tibbe/ekg-json";
       description = "JSON encoding of ekg metrics";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "elerea" = callPackage
    ({ mkDerivation, base, containers, transformers, transformers-base
     }:
     mkDerivation {
       pname = "elerea";
       version = "2.9.0";
       sha256 = "10b68j3mr85sy2riyrq49l30zxpins5ygqhgn81phn9j1dk224lh";
       libraryHaskellDepends = [
         base containers transformers transformers-base
       ];
       description = "A minimalistic FRP library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "elm-bridge" = callPackage
    ({ mkDerivation, aeson, base, containers, hspec, QuickCheck
     , template-haskell, text
     }:
     mkDerivation {
       pname = "elm-bridge";
       version = "0.3.0.2";
       sha256 = "0bqra3l32m9j8nplws8snq0wqy5m6qql2jspphkcbh7x5cv8jcyq";
       libraryHaskellDepends = [ aeson base template-haskell ];
       testHaskellDepends = [
         aeson base containers hspec QuickCheck text
       ];
       homepage = "https://github.com/agrafix/elm-bridge";
       description = "Derive Elm types from Haskell types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "elm-core-sources" = callPackage
    ({ mkDerivation, base, bytestring, containers, file-embed
     , template-haskell
     }:
     mkDerivation {
       pname = "elm-core-sources";
       version = "1.0.0";
       sha256 = "1yr0csgz0hv25cz3jslap0adwvfcvv35bns32b9g0vyda1fm00x4";
       libraryHaskellDepends = [
         base bytestring containers file-embed template-haskell
       ];
       homepage = "http://github.com/JoeyEremondi/elm-build-lib";
       description = "Source files for the Elm runtime and standard libraries";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "email-validate" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, ghc-prim, HUnit
     , QuickCheck, test-framework, test-framework-hunit
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "email-validate";
       version = "2.2.0";
       sha256 = "0sfbv4l5h13h9shgf2fgm1a7sxbcy633abvwwr5bqnq15kqd6zxa";
       libraryHaskellDepends = [ attoparsec base bytestring ghc-prim ];
       testHaskellDepends = [
         base bytestring HUnit QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2
       ];
       homepage = "http://porg.es/blog/email-address-validation-simpler-faster-more-correct";
       description = "Validating an email address string against RFC 5322";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "emailaddress" = callPackage
    ({ mkDerivation, aeson, base, bifunctors, bytestring, doctest
     , email-validate, Glob, http-api-data, opaleye, path-pieces
     , persistent, postgresql-simple, product-profunctors, profunctors
     , text
     }:
     mkDerivation {
       pname = "emailaddress";
       version = "0.1.6.0";
       sha256 = "17b8gilq2kaw101dqmbk4wlngh7sc93hldzhbh0av2r2lx3bm0av";
       libraryHaskellDepends = [
         aeson base bifunctors bytestring email-validate http-api-data
         opaleye path-pieces persistent postgresql-simple
         product-profunctors profunctors text
       ];
       testHaskellDepends = [ base doctest Glob ];
       homepage = "https://github.com/cdepillabout/emailaddress#readme";
       description = "Wrapper around email-validate library adding instances for common type classes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "enclosed-exceptions" = callPackage
    ({ mkDerivation, async, base, deepseq, hspec, lifted-base
     , monad-control, QuickCheck, stm, transformers, transformers-base
     }:
     mkDerivation {
       pname = "enclosed-exceptions";
       version = "1.0.2";
       sha256 = "1wc9h6zdnb5impvvml6vnjapajjanw7zgpnzg7c0v7115nwfm6vv";
       revision = "1";
       editedCabalFile = "0rjm8g2bm9a7qzklkp0rh5az4qh8nsl0hl119gjik671knygkdj0";
       libraryHaskellDepends = [
         base deepseq lifted-base monad-control transformers
         transformers-base
       ];
       testHaskellDepends = [
         async base deepseq hspec lifted-base monad-control QuickCheck stm
         transformers transformers-base
       ];
       homepage = "https://github.com/jcristovao/enclosed-exceptions";
       description = "Catching all exceptions from within an enclosed computation";
       license = stdenv.lib.licenses.mit;
     }) {};
  "encoding-io" = callPackage
    ({ mkDerivation, base, chunked-data, deepseq, transformers-base }:
     mkDerivation {
       pname = "encoding-io";
       version = "0.0.1";
       sha256 = "1yr6b2c3cmn0rb8l1ks6gyx4hv96g6mbksq6q7z1ndd8rjlpqmkw";
       libraryHaskellDepends = [
         base chunked-data deepseq transformers-base
       ];
       homepage = "https://github.com/TerrorJack/encoding-io#readme";
       description = "Encoding-aware file I/O";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "entropy" = callPackage
    ({ mkDerivation, base, bytestring, unix }:
     mkDerivation {
       pname = "entropy";
       version = "0.3.7";
       sha256 = "1vzg9fi597dbrcbjsr71y47rvmhiih7lg5rjnb297fzdlbmj1w0z";
       libraryHaskellDepends = [ base bytestring unix ];
       homepage = "https://github.com/TomMD/entropy";
       description = "A platform independent entropy source";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "enummapset-th" = callPackage
    ({ mkDerivation, base, containers, deepseq, template-haskell }:
     mkDerivation {
       pname = "enummapset-th";
       version = "0.6.1.1";
       sha256 = "0anmarswk8vvd9c8qhkhgwzmr5h2yq0bdx48ww5lbca1zf6h5hkw";
       libraryHaskellDepends = [
         base containers deepseq template-haskell
       ];
       homepage = "https://github.com/tsurucapital/enummapset-th";
       description = "TH-generated EnumSet/EnumMap wrappers around IntSet/IntMap";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "envelope" = callPackage
    ({ mkDerivation, aeson, base, doctest, Glob, mtl, text }:
     mkDerivation {
       pname = "envelope";
       version = "0.1.0.0";
       sha256 = "0viikd0vdpv15isya1nz8dd3d8crlvd5rk8v6qck443fbgdcw5li";
       libraryHaskellDepends = [ aeson base mtl text ];
       testHaskellDepends = [ base doctest Glob ];
       homepage = "https://github.com/cdepillabout/envelope#readme";
       description = "Defines generic 'Envelope' type to wrap reponses from a JSON API";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "eq" = callPackage
    ({ mkDerivation, base, semigroupoids }:
     mkDerivation {
       pname = "eq";
       version = "4.0.4";
       sha256 = "1rdxmkmlgyinpih5p708k18j7qq0rj1c8gv240naa9gbkqg4qbq4";
       libraryHaskellDepends = [ base semigroupoids ];
       homepage = "http://github.com/ekmett/eq/";
       description = "Leibnizian equality";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "equivalence" = callPackage
    ({ mkDerivation, base, containers, mtl, QuickCheck, STMonadTrans
     , template-haskell, test-framework, test-framework-quickcheck2
     , transformers, transformers-compat
     }:
     mkDerivation {
       pname = "equivalence";
       version = "0.3.1";
       sha256 = "0zi053l03r5qcnpsphnq8xqazd0cbgj9n44hn47s1hagdra3j1bs";
       libraryHaskellDepends = [
         base containers mtl STMonadTrans transformers transformers-compat
       ];
       testHaskellDepends = [
         base containers mtl QuickCheck STMonadTrans template-haskell
         test-framework test-framework-quickcheck2 transformers
         transformers-compat
       ];
       homepage = "https://bitbucket.org/paba/equivalence/";
       description = "Maintaining an equivalence relation implemented as union-find using STT";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "erf" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "erf";
       version = "2.0.0.0";
       sha256 = "0dxk2r32ajmmc05vaxcp0yw6vgv4lkbmh8jcshncn98xgsfbgw14";
       libraryHaskellDepends = [ base ];
       description = "The error function, erf, and related functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "errors" = callPackage
    ({ mkDerivation, base, safe, transformers, transformers-compat
     , unexceptionalio
     }:
     mkDerivation {
       pname = "errors";
       version = "2.1.3";
       sha256 = "1wadhhl3hx7f1k7lda50ymifs6472dzy0ygb6kvxy5ms5yfis6i0";
       libraryHaskellDepends = [
         base safe transformers transformers-compat unexceptionalio
       ];
       description = "Simplified error-handling";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ersatz" = callPackage
    ({ mkDerivation, array, base, bytestring, containers, data-default
     , directory, doctest, filepath, lens, mtl, parsec, process
     , temporary, transformers, unordered-containers
     }:
     mkDerivation {
       pname = "ersatz";
       version = "0.3.1";
       sha256 = "1h58g9lfhmww433z24vmi6wkaii5ik0hrmjprvypgw4bgibls0g9";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         array base bytestring containers data-default lens mtl process
         temporary transformers unordered-containers
       ];
       executableHaskellDepends = [
         array base containers lens mtl parsec
       ];
       testHaskellDepends = [ base directory doctest filepath ];
       doCheck = false;
       homepage = "http://github.com/ekmett/ersatz";
       description = "A monad for expressing SAT or QSAT problems using observable sharing";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "etcd" = callPackage
    ({ mkDerivation, aeson, async, base, bytestring, hspec
     , http-conduit, MonadRandom, mtl, text, time
     }:
     mkDerivation {
       pname = "etcd";
       version = "1.0.5";
       sha256 = "0bqz678mnpw2jpywz2m76923cyq864xn537a9zsqhm6c80gc0vwi";
       revision = "1";
       editedCabalFile = "1ylq3wsl4ghjv1ib2zzfny7wdhwhwfnczl64wy18xipd5a6vrnsw";
       libraryHaskellDepends = [
         aeson base bytestring http-conduit text time
       ];
       testHaskellDepends = [ async base hspec MonadRandom mtl text ];
       doCheck = false;
       description = "Client for etcd, a highly-available key value store";
       license = "unknown";
     }) {};
  "ether" = callPackage
    ({ mkDerivation, base, exceptions, mmorph, monad-control, mtl
     , QuickCheck, tasty, tasty-quickcheck, template-haskell
     , transformers, transformers-base, transformers-lift
     }:
     mkDerivation {
       pname = "ether";
       version = "0.4.0.2";
       sha256 = "0lyrvjl9hnxk2f0x57zj7zk06x996yja73wqvx3dq4s68i6wx7cb";
       libraryHaskellDepends = [
         base exceptions mmorph monad-control mtl template-haskell
         transformers transformers-base transformers-lift
       ];
       testHaskellDepends = [
         base mtl QuickCheck tasty tasty-quickcheck transformers
       ];
       homepage = "https://int-index.github.io/ether/";
       description = "Monad transformers and classes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "euphoria" = callPackage
    ({ mkDerivation, base, containers, criterion, deepseq, elerea
     , enummapset-th, hashable, HUnit, test-framework
     , test-framework-hunit, test-framework-th, transformers
     , unordered-containers
     }:
     mkDerivation {
       pname = "euphoria";
       version = "0.8.0.0";
       sha256 = "12hizvmalpbwdi1xxmy2vydcavi3lhf67cdh4zhvqgq6qrxkyw1h";
       libraryHaskellDepends = [
         base containers deepseq elerea enummapset-th hashable HUnit
         transformers unordered-containers
       ];
       testHaskellDepends = [
         base HUnit test-framework test-framework-hunit test-framework-th
       ];
       benchmarkHaskellDepends = [
         base criterion deepseq enummapset-th unordered-containers
       ];
       homepage = "http://github.com/tsurucapital/euphoria";
       description = "Dynamic network FRP with events and continuous values";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "event" = callPackage
    ({ mkDerivation, base, containers, semigroups, transformers }:
     mkDerivation {
       pname = "event";
       version = "0.1.4";
       sha256 = "0jl2s74zqnkpblf7b68bm32n1vk1rdjjyndb0waa2xsd5d0d34b7";
       libraryHaskellDepends = [
         base containers semigroups transformers
       ];
       description = "Monoidal, monadic and first-class events";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "eventstore" = callPackage
    ({ mkDerivation, aeson, array, async, base, bytestring, cereal
     , connection, containers, dns, dotnet-timespan, http-client
     , protobuf, random, semigroups, stm, tasty, tasty-hunit, text, time
     , unordered-containers, uuid
     }:
     mkDerivation {
       pname = "eventstore";
       version = "0.13.1.2";
       sha256 = "1z1qjpds9bml3kawzh79adamrlr7jrvnmg72mg15qd3cqmcsw6dm";
       libraryHaskellDepends = [
         aeson array async base bytestring cereal connection containers dns
         dotnet-timespan http-client protobuf random semigroups stm text
         time unordered-containers uuid
       ];
       testHaskellDepends = [
         aeson base connection dotnet-timespan stm tasty tasty-hunit text
         time
       ];
       doCheck = false;
       homepage = "http://github.com/YoEight/eventstore";
       description = "EventStore TCP Client";
       license = stdenv.lib.licenses.bsd3;
       platforms = [ "x86_64-darwin" "x86_64-linux" ];
     }) {};
  "exact-combinatorics" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "exact-combinatorics";
       version = "0.2.0.8";
       sha256 = "0pj7sh6s1kawk39hb42q1sx20g2rmzanpmr3zri9yvmb16qj5a1j";
       libraryHaskellDepends = [ base ];
       homepage = "http://code.haskell.org/~wren/";
       description = "Efficient exact computation of combinatoric functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "exact-pi" = callPackage
    ({ mkDerivation, base, numtype-dk }:
     mkDerivation {
       pname = "exact-pi";
       version = "0.4.1.2";
       sha256 = "1qs5zi9c87sypnxdwncdj7dnrylly7s2yvjhm7rx4fxsbxrfdfxj";
       libraryHaskellDepends = [ base numtype-dk ];
       homepage = "https://github.com/dmcclean/exact-pi/";
       description = "Exact rational multiples of pi (and integer powers of pi)";
       license = stdenv.lib.licenses.mit;
     }) {};
  "exception-mtl" = callPackage
    ({ mkDerivation, base, exception-transformers, mtl, transformers }:
     mkDerivation {
       pname = "exception-mtl";
       version = "0.4.0.1";
       sha256 = "0d51rsrcjy52d62f51hb6fdg0fj9b0qbv8hqf6523pndwsxbq4zc";
       libraryHaskellDepends = [
         base exception-transformers mtl transformers
       ];
       description = "Exception monad transformer instances for mtl classes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "exception-transformers" = callPackage
    ({ mkDerivation, base, HUnit, stm, test-framework
     , test-framework-hunit, transformers, transformers-compat
     }:
     mkDerivation {
       pname = "exception-transformers";
       version = "0.4.0.5";
       sha256 = "12q8c64kg2ksz90ld32m6n811c54syhwihnj2fd7blf2qsmalk2n";
       libraryHaskellDepends = [
         base stm transformers transformers-compat
       ];
       testHaskellDepends = [
         base HUnit test-framework test-framework-hunit transformers
         transformers-compat
       ];
       description = "Type classes and monads for unchecked extensible exceptions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "exceptional" = callPackage
    ({ mkDerivation, base, exceptions }:
     mkDerivation {
       pname = "exceptional";
       version = "0.3.0.0";
       sha256 = "01lzx4ihdvyivjnkvn78hcdsk83dvm6iy9v5q1f28kd1iv96x1ns";
       libraryHaskellDepends = [ base exceptions ];
       homepage = "https://github.com/";
       description = "Essentially the Maybe type with error messages";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "exceptions" = callPackage
    ({ mkDerivation, base, mtl, QuickCheck, stm, template-haskell
     , test-framework, test-framework-quickcheck2, transformers
     , transformers-compat
     }:
     mkDerivation {
       pname = "exceptions";
       version = "0.8.3";
       sha256 = "1gl7xzffsqmigam6zg0jsglncgzxqafld2p6kb7ccp9xirzdjsjd";
       revision = "1";
       editedCabalFile = "06qrs9vdscwy6bs9isfyc3b2x9n05xzpas04sq88d6rrc4a2c4zw";
       libraryHaskellDepends = [
         base mtl stm template-haskell transformers transformers-compat
       ];
       testHaskellDepends = [
         base mtl QuickCheck stm template-haskell test-framework
         test-framework-quickcheck2 transformers transformers-compat
       ];
       homepage = "http://github.com/ekmett/exceptions/";
       description = "Extensible optionally-pure exceptions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "executable-hash" = callPackage
    ({ mkDerivation, base, bytestring, Cabal, cryptohash, directory
     , executable-path, file-embed, filepath, template-haskell
     }:
     mkDerivation {
       pname = "executable-hash";
       version = "0.2.0.4";
       sha256 = "191blh2kr2xha8l7j1nbwfq00jf5bfn25cv63y2bglwh5mkgbsil";
       isLibrary = true;
       isExecutable = true;
       setupHaskellDepends = [
         base bytestring Cabal cryptohash directory file-embed filepath
         template-haskell
       ];
       libraryHaskellDepends = [
         base bytestring cryptohash directory executable-path file-embed
         template-haskell
       ];
       executableHaskellDepends = [ base ];
       testHaskellDepends = [ base ];
       homepage = "http://github.com/fpco/executable-hash";
       description = "Provides the SHA1 hash of the program executable";
       license = stdenv.lib.licenses.mit;
     }) {};
  "executable-path" = callPackage
    ({ mkDerivation, base, directory, filepath, unix }:
     mkDerivation {
       pname = "executable-path";
       version = "0.0.3";
       sha256 = "1jg58qf19qz93c60ryglcavwdcysz4fd4qn8kpw5im9w9kniawlc";
       libraryHaskellDepends = [ base directory filepath unix ];
       homepage = "http://code.haskell.org/~bkomuves/";
       description = "Finding out the full path of the executable";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "exp-pairs" = callPackage
    ({ mkDerivation, base, containers, deepseq, ghc-prim, matrix
     , QuickCheck, random, smallcheck, tasty, tasty-hunit
     , tasty-quickcheck, tasty-smallcheck, wl-pprint
     }:
     mkDerivation {
       pname = "exp-pairs";
       version = "0.1.5.1";
       sha256 = "0bxayc3c13kblr732shcir6n4ka9jbh5xvwy5l4lf5838wj330yb";
       libraryHaskellDepends = [
         base containers deepseq ghc-prim wl-pprint
       ];
       testHaskellDepends = [
         base matrix QuickCheck random smallcheck tasty tasty-hunit
         tasty-quickcheck tasty-smallcheck
       ];
       homepage = "https://github.com/Bodigrim/exp-pairs";
       description = "Linear programming over exponent pairs";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "expiring-cache-map" = callPackage
    ({ mkDerivation, base, bytestring, containers, hashable, time
     , unordered-containers
     }:
     mkDerivation {
       pname = "expiring-cache-map";
       version = "0.0.6.1";
       sha256 = "1fb47hsn06ybn2yzw7r6pjkmvvfpbdx7wjhbpxcywilbjyac4fqf";
       libraryHaskellDepends = [
         base containers hashable unordered-containers
       ];
       testHaskellDepends = [
         base bytestring containers hashable time unordered-containers
       ];
       homepage = "https://github.com/elblake/expiring-cache-map";
       description = "General purpose simple caching";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "explicit-exception" = callPackage
    ({ mkDerivation, base, deepseq, transformers }:
     mkDerivation {
       pname = "explicit-exception";
       version = "0.1.8";
       sha256 = "0vyi9k0rx083qs3yizcm89pvp38823akbrkr43w3ng6vh4vpmvkz";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base deepseq transformers ];
       homepage = "http://www.haskell.org/haskellwiki/Exception";
       description = "Exceptions which are explicit in the type signature";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "extensible" = callPackage
    ({ mkDerivation, base, constraints, monad-skeleton, profunctors
     , tagged, template-haskell, transformers
     }:
     mkDerivation {
       pname = "extensible";
       version = "0.3.7";
       sha256 = "13p369xfr09y7sdpvaci065j1mcz8c9ks0a4am2ppzk1jwr25bh5";
       libraryHaskellDepends = [
         base constraints monad-skeleton profunctors tagged template-haskell
         transformers
       ];
       homepage = "https://github.com/fumieval/extensible";
       description = "Extensible, efficient, optics-friendly data types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "extensible-effects" = callPackage
    ({ mkDerivation, base, HUnit, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     , test-framework-th, transformers, transformers-base, type-aligned
     , void
     }:
     mkDerivation {
       pname = "extensible-effects";
       version = "1.11.0.4";
       sha256 = "04vr4bwm7vz0r5i0j3rk80qz3m08d3gv99s1adhlyhflk6lgp4mg";
       libraryHaskellDepends = [
         base transformers transformers-base type-aligned void
       ];
       testHaskellDepends = [
         base HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2 test-framework-th void
       ];
       homepage = "https://github.com/suhailshergill/extensible-effects";
       description = "An Alternative to Monad Transformers";
       license = stdenv.lib.licenses.mit;
     }) {};
  "extensible-exceptions" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "extensible-exceptions";
       version = "0.1.1.4";
       sha256 = "1273nqws9ij1rp1bsq5jc7k2jxpqa0svawdbim05lf302y0firbc";
       libraryHaskellDepends = [ base ];
       description = "Extensible exceptions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "extra" = callPackage
    ({ mkDerivation, base, directory, filepath, process, QuickCheck
     , time, unix
     }:
     mkDerivation {
       pname = "extra";
       version = "1.4.10";
       sha256 = "0nb7wpcsz9rhkbkr5pdgi8g94ii89iv2l9559dznjh1fq1s3y2xl";
       libraryHaskellDepends = [
         base directory filepath process time unix
       ];
       testHaskellDepends = [
         base directory filepath QuickCheck time unix
       ];
       homepage = "https://github.com/ndmitchell/extra#readme";
       description = "Extra functions I use";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "extract-dependencies" = callPackage
    ({ mkDerivation, async, base, Cabal, containers
     , package-description-remote
     }:
     mkDerivation {
       pname = "extract-dependencies";
       version = "0.2.0.1";
       sha256 = "04hwmh57rka8mqjcc40f4y8rw5l1a8q2qq1ibrc291nc102yfzwj";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         async base Cabal containers package-description-remote
       ];
       executableHaskellDepends = [
         async base Cabal containers package-description-remote
       ];
       homepage = "https://github.com/yamadapc/stack-run-auto";
       description = "Given a hackage package outputs the list of its dependencies";
       license = stdenv.lib.licenses.mit;
     }) {};
  "fail" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "fail";
       version = "4.9.0.0";
       sha256 = "18nlj6xvnggy61gwbyrpmvbdkq928wv0wx2zcsljb52kbhddnp3d";
       doHaddock = false;
       homepage = "https://prime.haskell.org/wiki/Libraries/Proposals/MonadFail";
       description = "Forward-compatible MonadFail class";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "farmhash" = callPackage
    ({ mkDerivation, base, bytestring, criterion, hspec, QuickCheck }:
     mkDerivation {
       pname = "farmhash";
       version = "0.1.0.5";
       sha256 = "188gqa5szqm88kgpax32b830cgyh8z5vq2fjha3fig7p8ma5ls0f";
       libraryHaskellDepends = [ base bytestring ];
       testHaskellDepends = [ base bytestring hspec QuickCheck ];
       benchmarkHaskellDepends = [ base bytestring criterion ];
       homepage = "https://github.com/abhinav/farmhash";
       description = "Fast hash functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fast-builder" = callPackage
    ({ mkDerivation, aeson, base, bytestring, containers, criterion
     , deepseq, ghc-prim, process, QuickCheck, scientific, stm
     , template-haskell, text, true-name, unordered-containers, vector
     }:
     mkDerivation {
       pname = "fast-builder";
       version = "0.0.0.6";
       sha256 = "074ymsrgh549xvfd9gswgiph7shzdql1494vrzbl7v119vxw50sa";
       libraryHaskellDepends = [ base bytestring ghc-prim ];
       testHaskellDepends = [ base bytestring process QuickCheck stm ];
       benchmarkHaskellDepends = [
         aeson base bytestring containers criterion deepseq ghc-prim
         scientific template-haskell text true-name unordered-containers
         vector
       ];
       homepage = "http://github.com/takano-akio/fast-builder";
       description = "Fast ByteString Builder";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "fast-digits" = callPackage
    ({ mkDerivation, base, criterion, digits, integer-gmp, QuickCheck
     , smallcheck, tasty, tasty-quickcheck, tasty-smallcheck
     }:
     mkDerivation {
       pname = "fast-digits";
       version = "0.2.1.0";
       sha256 = "0fyqdlb5wmsbsxsk8s7p8j2g3g4idsv9ki67ay1dw0lj8xp5g17c";
       libraryHaskellDepends = [ base integer-gmp ];
       testHaskellDepends = [
         base digits QuickCheck smallcheck tasty tasty-quickcheck
         tasty-smallcheck
       ];
       benchmarkHaskellDepends = [ base criterion digits ];
       homepage = "https://github.com/Bodigrim/fast-digits";
       description = "The fast library for integer-to-digits conversion";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "fast-logger" = callPackage
    ({ mkDerivation, array, auto-update, base, bytestring
     , bytestring-builder, directory, easy-file, filepath, hspec, text
     , unix, unix-time
     }:
     mkDerivation {
       pname = "fast-logger";
       version = "2.4.7";
       sha256 = "0f2a8vrznlnvhj75yc84piwp6fh9xfgkjqk6m0m4g4fsk3c0f6r0";
       libraryHaskellDepends = [
         array auto-update base bytestring bytestring-builder directory
         easy-file filepath text unix unix-time
       ];
       testHaskellDepends = [ base bytestring directory hspec ];
       homepage = "https://github.com/kazu-yamamoto/logger";
       description = "A fast logging system";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fasta" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, containers, foldl
     , lens, parsec, pipes, pipes-attoparsec, pipes-bytestring
     , pipes-group, pipes-text, split, text
     }:
     mkDerivation {
       pname = "fasta";
       version = "0.10.4.0";
       sha256 = "1nk9kwjdvjvpdr6xf0047gqmw1fsvnfkw5jpri3wwd3q23v1cxnk";
       libraryHaskellDepends = [
         attoparsec base bytestring containers foldl lens parsec pipes
         pipes-attoparsec pipes-bytestring pipes-group pipes-text split text
       ];
       homepage = "https://github.com/GregorySchwartz/fasta";
       description = "A simple, mindless parser for fasta files";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "fay" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, base-compat, bytestring
     , containers, data-default, data-lens-light, directory, filepath
     , ghc-paths, groom, haskell-src-exts, language-ecmascript, mtl
     , mtl-compat, optparse-applicative, process, random, safe
     , sourcemap, split, spoon, syb, tasty, tasty-hunit, tasty-th, text
     , time, transformers, transformers-compat, traverse-with-class
     , type-eq, uniplate, unordered-containers, utf8-string, vector
     }:
     mkDerivation {
       pname = "fay";
       version = "0.23.1.12";
       sha256 = "09zpc8a15939bg5chrk4cwf4akzslx1w09szwki262fkyrj0m71x";
       revision = "6";
       editedCabalFile = "02vy6ajjbvwh88zzdm5x54jmbxdl88fgpwpgcxpgrf039gy0il2d";
       configureFlags = [ "-ftest" ];
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson base base-compat bytestring containers data-default
         data-lens-light directory filepath ghc-paths haskell-src-exts
         language-ecmascript mtl mtl-compat process safe sourcemap split
         spoon syb text time transformers transformers-compat
         traverse-with-class type-eq uniplate unordered-containers
         utf8-string vector
       ];
       executableHaskellDepends = [
         aeson attoparsec base bytestring containers directory filepath
         groom haskell-src-exts mtl optparse-applicative random split tasty
         tasty-hunit tasty-th text utf8-string
       ];
       homepage = "https://github.com/faylang/fay/wiki";
       description = "A compiler for Fay, a Haskell subset that compiles to JavaScript";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fay-base" = callPackage
    ({ mkDerivation, base, fay }:
     mkDerivation {
       pname = "fay-base";
       version = "0.20.0.1";
       sha256 = "17mfblr40jhn93vz6vn0n0xsk4lwf5d5cavfy5zy8sg4inp6dkjr";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base fay ];
       homepage = "https://github.com/faylang/fay/";
       description = "The base package for Fay";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fay-builder" = callPackage
    ({ mkDerivation, base, Cabal, data-default, directory, fay
     , filepath, safe, split, text
     }:
     mkDerivation {
       pname = "fay-builder";
       version = "0.2.0.5";
       sha256 = "18ii5dnzk866q79h43fspdz8dzg17mzfrykh3pl4p0q4qdnylv8i";
       revision = "4";
       editedCabalFile = "09ix1rqm23l2ksc9zx6qj6m2pw789rzs6b3q41m60bcxh8xik9km";
       libraryHaskellDepends = [
         base Cabal data-default directory fay filepath safe split text
       ];
       description = "Compile Fay code on cabal install, and ad-hoc recompile during development";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fay-dom" = callPackage
    ({ mkDerivation, fay-base }:
     mkDerivation {
       pname = "fay-dom";
       version = "0.5.0.1";
       sha256 = "1zm6w6nccswaksr283alhnsss6xw4k7s61yp8ff4lg5127ff9wp0";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ fay-base ];
       homepage = "https://github.com/faylang/fay-dom";
       description = "DOM FFI wrapper library for Fay";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fay-jquery" = callPackage
    ({ mkDerivation, fay-base, fay-text }:
     mkDerivation {
       pname = "fay-jquery";
       version = "0.6.1.0";
       sha256 = "04vg018zynb5ckj7ca9a9a3lbs8kjx8a5k0l3k73yp2y27w7xx8g";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ fay-base fay-text ];
       homepage = "https://github.com/faylang/fay-jquery";
       description = "jQuery bindings for Fay";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fay-text" = callPackage
    ({ mkDerivation, fay, fay-base, text }:
     mkDerivation {
       pname = "fay-text";
       version = "0.3.2.2";
       sha256 = "1q1v8jzkccy9arq6jkz4ynpzm1691d1dv9wzyi4i5m6n0gl7aans";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ fay fay-base text ];
       homepage = "https://github.com/faylang/fay-text";
       description = "Fay Text type represented as JavaScript strings";
       license = stdenv.lib.licenses.mit;
     }) {};
  "fay-uri" = callPackage
    ({ mkDerivation, fay-base }:
     mkDerivation {
       pname = "fay-uri";
       version = "0.2.0.0";
       sha256 = "1vv4jgkz9cx8inbn6g6sn3a0nf1ak81qlj5li21sk2isj0yws1nr";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ fay-base ];
       homepage = "https://github.com/faylang/fay-uri";
       description = "Persistent FFI bindings for using jsUri in Fay";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fb" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, base16-bytestring
     , base64-bytestring, bytestring, cereal, conduit, conduit-extra
     , crypto-api, cryptohash, cryptohash-cryptoapi, data-default
     , http-conduit, http-types, lifted-base, monad-control
     , monad-logger, old-locale, resourcet, text, time, transformers
     , transformers-base, unordered-containers
     }:
     mkDerivation {
       pname = "fb";
       version = "1.0.13";
       sha256 = "0plk6w2r8bvfmyn7kjacgjcf3c38vsgiw8x9zqw5s6vjnl2kxbsj";
       revision = "1";
       editedCabalFile = "0p67dma9q6csbd6nipzjvph2bvn3pfizcz0ljhrz2nfn78q7cnpz";
       libraryHaskellDepends = [
         aeson attoparsec base base16-bytestring base64-bytestring
         bytestring cereal conduit conduit-extra crypto-api cryptohash
         cryptohash-cryptoapi data-default http-conduit http-types
         lifted-base monad-control monad-logger old-locale resourcet text
         time transformers transformers-base unordered-containers
       ];
       doCheck = false;
       homepage = "https://github.com/prowdsponsor/fb";
       description = "Bindings to Facebook's API";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fclabels" = callPackage
    ({ mkDerivation, base, criterion, HUnit, mtl, template-haskell
     , transformers
     }:
     mkDerivation {
       pname = "fclabels";
       version = "2.0.3.2";
       sha256 = "1c42f420bih3azhis9hhcdk6ijm10wp9rqa2kh763g68qgzq6pad";
       libraryHaskellDepends = [ base mtl template-haskell transformers ];
       testHaskellDepends = [
         base HUnit mtl template-haskell transformers
       ];
       benchmarkHaskellDepends = [ base criterion ];
       homepage = "https://github.com/sebastiaanvisser/fclabels";
       description = "First class accessor labels implemented as lenses";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "feature-flags" = callPackage
    ({ mkDerivation, base, text }:
     mkDerivation {
       pname = "feature-flags";
       version = "0.1.0.1";
       sha256 = "1lssjgksq0k2dd7l5lmzxnr9f5zk3gbh386zfmcqgc4iczdzfk0f";
       libraryHaskellDepends = [ base text ];
       homepage = "https://github.com/iand675/feature-flags";
       description = "A simple library for dynamically enabling and disabling functionality";
       license = stdenv.lib.licenses.mit;
     }) {};
  "feed" = callPackage
    ({ mkDerivation, base, HUnit, old-locale, old-time, test-framework
     , test-framework-hunit, time, time-locale-compat, utf8-string, xml
     }:
     mkDerivation {
       pname = "feed";
       version = "0.3.12.0";
       sha256 = "0hkrsinspg70bbm3hwqdrvivws6zya1hyk0a3awpaz82j4xnlbfc";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base old-locale old-time time time-locale-compat utf8-string xml
       ];
       testHaskellDepends = [
         base HUnit old-locale old-time test-framework test-framework-hunit
         time time-locale-compat utf8-string xml
       ];
       homepage = "https://github.com/bergmark/feed";
       description = "Interfacing with RSS (v 0.9x, 2.x, 1.0) + Atom feeds.";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fft" = callPackage
    ({ mkDerivation, array, base, carray, fftw, fftwFloat, ix-shapable
     , QuickCheck, storable-complex, syb, transformers
     }:
     mkDerivation {
       pname = "fft";
       version = "0.1.8.4";
       sha256 = "1d710zpz4c20ryh2g1z11gffs7gacg9fl34g5npadz61a0qnva9f";
       libraryHaskellDepends = [
         array base carray ix-shapable storable-complex syb transformers
       ];
       libraryPkgconfigDepends = [ fftw fftwFloat ];
       testHaskellDepends = [ base carray QuickCheck storable-complex ];
       description = "Bindings to the FFTW library";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) fftw; inherit (pkgs) fftwFloat;};
  "fgl" = callPackage
    ({ mkDerivation, array, base, containers, deepseq, hspec
     , QuickCheck, transformers
     }:
     mkDerivation {
       pname = "fgl";
       version = "5.5.3.0";
       sha256 = "0fbyb6jxy9whgrv6dgnkzz70cmy98arx3q2gnkhgl4a3d7idh36p";
       libraryHaskellDepends = [
         array base containers deepseq transformers
       ];
       testHaskellDepends = [ base containers hspec QuickCheck ];
       description = "Martin Erwig's Functional Graph Library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fgl-arbitrary" = callPackage
    ({ mkDerivation, base, containers, fgl, hspec, QuickCheck }:
     mkDerivation {
       pname = "fgl-arbitrary";
       version = "0.2.0.2";
       sha256 = "12qbsla4vivffris6y3gj29vrafkpyazqdbdy2m55nggypqpf7ah";
       libraryHaskellDepends = [ base fgl QuickCheck ];
       testHaskellDepends = [ base containers fgl hspec QuickCheck ];
       description = "QuickCheck support for fgl";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "file-embed" = callPackage
    ({ mkDerivation, base, bytestring, directory, filepath
     , template-haskell
     }:
     mkDerivation {
       pname = "file-embed";
       version = "0.0.10";
       sha256 = "04gpylngm2aalqcgdk7gy7jiw291dala1354spxa8wspxif94lgp";
       libraryHaskellDepends = [
         base bytestring directory filepath template-haskell
       ];
       testHaskellDepends = [ base filepath ];
       homepage = "https://github.com/snoyberg/file-embed";
       description = "Use Template Haskell to embed file contents directly";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "file-modules" = callPackage
    ({ mkDerivation, async, base, directory, filepath, haskell-src-exts
     , MissingH, regex-compat, regex-pcre
     }:
     mkDerivation {
       pname = "file-modules";
       version = "0.1.2.4";
       sha256 = "0dgjy3axfhgv5nkvwbaylc8hc8d1fjb53n2rhmpxfzppa6yjvspz";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         async base directory filepath haskell-src-exts MissingH
         regex-compat regex-pcre
       ];
       executableHaskellDepends = [
         async base directory filepath haskell-src-exts MissingH
         regex-compat regex-pcre
       ];
       homepage = "https://github.com/yamadapc/stack-run-auto";
       description = "Takes a Haskell source-code file and outputs its modules";
       license = stdenv.lib.licenses.mit;
     }) {};
  "filecache" = callPackage
    ({ mkDerivation, base, directory, exceptions, hashable, hinotify
     , lens, mtl, stm, strict-base-types, temporary
     , unordered-containers
     }:
     mkDerivation {
       pname = "filecache";
       version = "0.2.9";
       sha256 = "10fxjphldf2mi25pmx5l9j1073zb5lrhana2ysvkiazfmmjcvrh2";
       libraryHaskellDepends = [
         base exceptions hashable hinotify lens mtl stm strict-base-types
         unordered-containers
       ];
       testHaskellDepends = [
         base directory temporary unordered-containers
       ];
       homepage = "http://lpuppet.banquise.net/";
       description = "A Linux-only cache system associating values to files";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "filelock" = callPackage
    ({ mkDerivation, base, unix }:
     mkDerivation {
       pname = "filelock";
       version = "0.1.0.1";
       sha256 = "0qypjnbkfayqyaymx8qrq4abddlrlzanf6lqhfn9cqzcgzr6735d";
       libraryHaskellDepends = [ base unix ];
       homepage = "http://github.com/takano-akio/filelock";
       description = "Portable interface to file locking (flock / LockFileEx)";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "filemanip" = callPackage
    ({ mkDerivation, base, bytestring, directory, filepath, mtl
     , unix-compat
     }:
     mkDerivation {
       pname = "filemanip";
       version = "0.3.6.3";
       sha256 = "0ilqr8jv41zxcj5qyicg29m8s30b9v70x6f9h2h2rw5ap8bxldl8";
       libraryHaskellDepends = [
         base bytestring directory filepath mtl unix-compat
       ];
       homepage = "https://github.com/bos/filemanip";
       description = "Expressive file and directory manipulation for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "find-clumpiness" = callPackage
    ({ mkDerivation, aeson, base, bytestring, clumpiness, containers
     , optparse-applicative, text, text-show, tree-fun
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "find-clumpiness";
       version = "0.2.0.1";
       sha256 = "08nsfhhlr2f32wafbbl6jd8r4rpgjm7gc0xcb4glhqi6380jmnw7";
       revision = "1";
       editedCabalFile = "1vq5xvv01xr8p56pzkj6ksw1w6rf8iaxbd2zssf9sy31j5dyp1la";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base clumpiness containers text text-show tree-fun
         unordered-containers vector
       ];
       executableHaskellDepends = [
         aeson base bytestring clumpiness containers optparse-applicative
         text tree-fun unordered-containers
       ];
       homepage = "http://github.com/GregorySchwartz/find-clumpiness#readme";
       description = "Find the clumpiness of labels in a tree";
       license = stdenv.lib.licenses.gpl2;
     }) {};
  "fingertree" = callPackage
    ({ mkDerivation, base, HUnit, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "fingertree";
       version = "0.1.1.0";
       sha256 = "1w6x3kp3by5yjmam6wlrf9vap5l5rrqaip0djbrdp0fpf2imn30n";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [
         base HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       description = "Generic finger-tree structure, with example instances";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fingertree-psqueue" = callPackage
    ({ mkDerivation, base, fingertree }:
     mkDerivation {
       pname = "fingertree-psqueue";
       version = "0.3";
       sha256 = "14kc0ijx44q7whniickjj3h9ag1pixn51dlxjs6n2ypaclcjz34z";
       libraryHaskellDepends = [ base fingertree ];
       description = "Implementation of priority search queues as finger trees";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fixed" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "fixed";
       version = "0.2.1.1";
       sha256 = "1qhmwx8iqshns0crmr9d2f8hm65jxbcp3dvv0c39v34ra7if3a94";
       libraryHaskellDepends = [ base ];
       homepage = "http://github.com/ekmett/fixed";
       description = "Signed 15.16 precision fixed point arithmetic";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fixed-vector" = callPackage
    ({ mkDerivation, base, deepseq, doctest, filemanip, primitive }:
     mkDerivation {
       pname = "fixed-vector";
       version = "0.8.1.0";
       sha256 = "14rsprg1hyjkv7n7d03zlx65hd6j7bl2fdw494chc24c4k3jjg1w";
       libraryHaskellDepends = [ base deepseq primitive ];
       testHaskellDepends = [ base doctest filemanip primitive ];
       description = "Generic vectors with statically known size";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fixed-vector-hetero" = callPackage
    ({ mkDerivation, base, deepseq, fixed-vector, ghc-prim, primitive
     , transformers
     }:
     mkDerivation {
       pname = "fixed-vector-hetero";
       version = "0.3.1.1";
       sha256 = "1byy8md3da7brf452d69fkwykip5jkn5j1837vf2c0r7x9j76k49";
       libraryHaskellDepends = [
         base deepseq fixed-vector ghc-prim primitive transformers
       ];
       homepage = "http://github.org/Shimuuar/fixed-vector-hetero";
       description = "Generic heterogeneous vectors";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "flat-mcmc" = callPackage
    ({ mkDerivation, base, mcmc-types, monad-par, monad-par-extras
     , mwc-probability, pipes, primitive, transformers, vector
     }:
     mkDerivation {
       pname = "flat-mcmc";
       version = "1.0.1";
       sha256 = "0x775lv56v9nm8dy0308a50vrp5vlw1baqwfwalny20b085jz1d2";
       libraryHaskellDepends = [
         base mcmc-types monad-par monad-par-extras mwc-probability pipes
         primitive transformers vector
       ];
       testHaskellDepends = [ base vector ];
       homepage = "http://jtobin.github.com/flat-mcmc";
       description = "Painless general-purpose sampling";
       license = stdenv.lib.licenses.mit;
     }) {};
  "flexible-defaults" = callPackage
    ({ mkDerivation, base, containers, template-haskell, th-extras
     , transformers
     }:
     mkDerivation {
       pname = "flexible-defaults";
       version = "0.0.1.2";
       sha256 = "1hkdnylmv1inmxgw2rx5wvy06z5spbxq82rs7xkpv4syrz734w42";
       libraryHaskellDepends = [
         base containers template-haskell th-extras transformers
       ];
       homepage = "https://github.com/mokus0/flexible-defaults";
       description = "Generate default function implementations for complex type classes";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "flock" = callPackage
    ({ mkDerivation, base, lifted-base, monad-control, transformers
     , unix
     }:
     mkDerivation {
       pname = "flock";
       version = "0.3.1.8";
       sha256 = "1g1gf7qnlqkl57h28nzxnbzj7v2h73czffp5y7s7jm9vbihcwd4n";
       revision = "2";
       editedCabalFile = "0xsi6bwqd57qwr9bjd2nck7q3gbmbsl9pb1rk6h4bbmm1ciybv19";
       libraryHaskellDepends = [
         base lifted-base monad-control transformers unix
       ];
       homepage = "http://github.com/hesselink/flock";
       description = "Wrapper for flock(2)";
       license = "unknown";
     }) {};
  "flow" = callPackage
    ({ mkDerivation, base, doctest, QuickCheck, template-haskell }:
     mkDerivation {
       pname = "flow";
       version = "1.0.7";
       sha256 = "0qhz3cplnpdj6c4hr576adcv4l4pmakncbqcc541gn5vql9lk5pi";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base doctest QuickCheck template-haskell ];
       homepage = "https://github.com/tfausak/flow#readme";
       description = "Write more understandable Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};
  "fmlist" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "fmlist";
       version = "0.9";
       sha256 = "1gzwmsrbxk22v7syf8zfvxphm23dmjzfpysz6qww3qvib8wm64aq";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/sjoerdvisscher/fmlist";
       description = "FoldMap lists";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fn" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring, directory
     , filepath, hspec, http-types, text, unordered-containers, wai
     , wai-extra
     }:
     mkDerivation {
       pname = "fn";
       version = "0.3.0.1";
       sha256 = "1gflcaph9mh5ba4d9nvfxcz0dp33iy7lcdj4584lycjjgrlvpkvj";
       libraryHaskellDepends = [
         base blaze-builder bytestring directory filepath http-types text
         unordered-containers wai wai-extra
       ];
       testHaskellDepends = [
         base directory filepath hspec http-types text unordered-containers
         wai wai-extra
       ];
       homepage = "http://github.com/positiondev/fn#readme";
       description = "A functional web framework";
       license = stdenv.lib.licenses.isc;
     }) {};
  "focus" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "focus";
       version = "0.1.5";
       sha256 = "1cg7mkhv3ip87952k8kcjl1gx1nvcbhbq71czhxlnzi00qg68jzg";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/nikita-volkov/focus";
       description = "A general abstraction for manipulating elements of container data structures";
       license = stdenv.lib.licenses.mit;
     }) {};
  "fold-debounce" = callPackage
    ({ mkDerivation, base, data-default-class, hspec, stm, stm-delay
     , time
     }:
     mkDerivation {
       pname = "fold-debounce";
       version = "0.2.0.5";
       sha256 = "0karz81fj5gzjspdznlsb856qmji0fifgv4qsbxr74d6v1hgzh3q";
       libraryHaskellDepends = [
         base data-default-class stm stm-delay time
       ];
       testHaskellDepends = [ base hspec stm time ];
       homepage = "https://github.com/debug-ito/fold-debounce";
       description = "Fold multiple events that happen in a given period of time";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fold-debounce-conduit" = callPackage
    ({ mkDerivation, base, conduit, fold-debounce, hspec, resourcet
     , stm, transformers, transformers-base
     }:
     mkDerivation {
       pname = "fold-debounce-conduit";
       version = "0.1.0.5";
       sha256 = "1k441whksiwss55j7q7iwhr90hdj02dy7jg2rhd2ijz1ysy76gi5";
       libraryHaskellDepends = [
         base conduit fold-debounce resourcet stm transformers
         transformers-base
       ];
       testHaskellDepends = [
         base conduit hspec resourcet stm transformers
       ];
       homepage = "https://github.com/debug-ito/fold-debounce-conduit";
       description = "Regulate input traffic from conduit Source with Control.FoldDebounce";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "foldl" = callPackage
    ({ mkDerivation, base, bytestring, comonad, containers
     , contravariant, criterion, mwc-random, primitive, profunctors
     , text, transformers, vector
     }:
     mkDerivation {
       pname = "foldl";
       version = "1.2.3";
       sha256 = "099zdnjblb8298ww8x7dlmfm73f51cp8sd6vd3f08skkyxl1227v";
       libraryHaskellDepends = [
         base bytestring comonad containers contravariant mwc-random
         primitive profunctors text transformers vector
       ];
       benchmarkHaskellDepends = [ base criterion ];
       description = "Composable, streaming, and efficient left folds";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "force-layout" = callPackage
    ({ mkDerivation, base, containers, data-default-class, lens, linear
     }:
     mkDerivation {
       pname = "force-layout";
       version = "0.4.0.6";
       sha256 = "17956k3mab2xhrmfy7fj5gh08h43yjlsryi5acjhnkmin5arhwpp";
       libraryHaskellDepends = [
         base containers data-default-class lens linear
       ];
       description = "Simple force-directed layout";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "forecast-io" = callPackage
    ({ mkDerivation, aeson, base, text }:
     mkDerivation {
       pname = "forecast-io";
       version = "0.2.0.0";
       sha256 = "17wsqrq1zq1p80gnrfsvks5bhickfqj5mh2prbzzkzb3s28l1mby";
       libraryHaskellDepends = [ aeson base text ];
       homepage = "https://github.com/stormont/forecast-io";
       description = "A Haskell library for working with forecast.io data.";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "foreign-store" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "foreign-store";
       version = "0.2";
       sha256 = "1p436dn6l5zjzizcsj0hn10s2n907gr7c8y89i4sm3h69lhqlw86";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/chrisdone/foreign-store";
       description = "Store a stable pointer in a foreign context to be retrieved later";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "formatting" = callPackage
    ({ mkDerivation, base, clock, old-locale, scientific, text
     , text-format, time
     }:
     mkDerivation {
       pname = "formatting";
       version = "6.2.4";
       sha256 = "0rrkydr0zdcwji6grnrm8mlxj67q08sh6vhfnxm35g6k6x0bfba3";
       libraryHaskellDepends = [
         base clock old-locale scientific text text-format time
       ];
       description = "Combinator-based type-safe formatting (like printf() or FORMAT)";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fortran-src" = callPackage
    ({ mkDerivation, alex, array, base, bytestring, containers
     , directory, fgl, filepath, GenericPretty, happy, hspec, mtl
     , pretty, text, uniplate
     }:
     mkDerivation {
       pname = "fortran-src";
       version = "0.1.0.4";
       sha256 = "022pmk129zwqr5xlr3ymh85m3lqlcpv6z8g2nf6ajj24zzkzl82f";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         array base bytestring containers fgl GenericPretty mtl pretty text
         uniplate
       ];
       libraryToolDepends = [ alex happy ];
       executableHaskellDepends = [
         array base bytestring containers fgl GenericPretty mtl pretty text
         uniplate
       ];
       testHaskellDepends = [
         array base bytestring containers directory fgl filepath
         GenericPretty hspec mtl pretty text uniplate
       ];
       description = "Parser and anlyses for Fortran standards 66, 77, 90";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "free" = callPackage
    ({ mkDerivation, base, bifunctors, comonad, containers
     , distributive, exceptions, mtl, prelude-extras, profunctors
     , semigroupoids, semigroups, template-haskell, transformers
     , transformers-compat
     }:
     mkDerivation {
       pname = "free";
       version = "4.12.4";
       sha256 = "1147s393442xf4gkpbq0rd1p286vmykgx85mxhk5d1c7wfm4bzn9";
       libraryHaskellDepends = [
         base bifunctors comonad containers distributive exceptions mtl
         prelude-extras profunctors semigroupoids semigroups
         template-haskell transformers transformers-compat
       ];
       homepage = "http://github.com/ekmett/free/";
       description = "Monads for free";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "free-vl" = callPackage
    ({ mkDerivation, base, containers, mtl, tasty, tasty-hunit }:
     mkDerivation {
       pname = "free-vl";
       version = "0.1.4";
       sha256 = "1gq2lqzrv77w02x1sdym5156q3aycp887h9wzgz59z22bg9kxxjp";
       revision = "1";
       editedCabalFile = "1711k76b6w7gfqvc8z9jnylj4hhk3rvx7ap31y1mmq4g2a4s82qm";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base ];
       executableHaskellDepends = [ base ];
       testHaskellDepends = [ base containers mtl tasty tasty-hunit ];
       homepage = "http://github.com/aaronlevin/free-vl";
       description = "van Laarhoven encoded Free Monad with Extensible Effects";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "freenect" = callPackage
    ({ mkDerivation, base, freenect, freenect_sync, libfreenect, vector
     }:
     mkDerivation {
       pname = "freenect";
       version = "1.2.1";
       sha256 = "0n87sxf12kkpdlhdaw4pcb3dfl1qc3w7j5hh9crrchy0isasm9zw";
       libraryHaskellDepends = [ base vector ];
       librarySystemDepends = [ freenect freenect_sync ];
       libraryPkgconfigDepends = [ libfreenect ];
       homepage = "https://github.com/chrisdone/freenect";
       description = "Interface to the Kinect device";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) freenect; freenect_sync = null;
         libfreenect = null;};
  "freer" = callPackage
    ({ mkDerivation, base, criterion, free, mtl, QuickCheck, tasty
     , tasty-hunit, tasty-quickcheck
     }:
     mkDerivation {
       pname = "freer";
       version = "0.2.4.1";
       sha256 = "1nf1ckvq09z039grv3van735gnng20013pvjplzkd7bqkihcc0fb";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base ];
       executableHaskellDepends = [ base ];
       testHaskellDepends = [
         base QuickCheck tasty tasty-hunit tasty-quickcheck
       ];
       benchmarkHaskellDepends = [ base criterion free mtl ];
       homepage = "https://gitlab.com/queertypes/freer";
       description = "Implementation of the Freer Monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "friendly-time" = callPackage
    ({ mkDerivation, base, hspec, old-locale, time }:
     mkDerivation {
       pname = "friendly-time";
       version = "0.4";
       sha256 = "1x73jk9smga912nfyxa77j6yz74kyx8zdr4q6xj3sirp46qm5nh5";
       libraryHaskellDepends = [ base old-locale time ];
       testHaskellDepends = [ base hspec old-locale time ];
       description = "Print time information in friendly ways";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "frisby" = callPackage
    ({ mkDerivation, array, base, containers, mtl }:
     mkDerivation {
       pname = "frisby";
       version = "0.2";
       sha256 = "0isj9p7j33va1a4q78vnq32j9jdbjww596rxja235z4whicraf53";
       revision = "1";
       editedCabalFile = "1ip1bykcrnqzfjbsi4gfj59lc24k3kvyn949ryczpqshlpgnbnqj";
       libraryHaskellDepends = [ array base containers mtl ];
       homepage = "http://repetae.net/computer/frisby/";
       description = "Linear time composable parser for PEG grammars";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "frontmatter" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, hspec, QuickCheck
     , text, yaml
     }:
     mkDerivation {
       pname = "frontmatter";
       version = "0.1.0.2";
       sha256 = "17dr2g1rywai80hx2v51ljwjpsn6m1jgg6lb4gq9fwq9snq9gsv6";
       libraryHaskellDepends = [ attoparsec base bytestring yaml ];
       testHaskellDepends = [
         attoparsec base bytestring hspec QuickCheck text yaml
       ];
       homepage = "https://github.com/yamadapc/haskell-frontmatter";
       description = "Parses frontmatter as used in Jekyll markdown files";
       license = stdenv.lib.licenses.mit;
     }) {};
  "fsnotify" = callPackage
    ({ mkDerivation, async, base, containers, directory, filepath
     , hinotify, tasty, tasty-hunit, temporary-rc, text, time
     , unix-compat
     }:
     mkDerivation {
       pname = "fsnotify";
       version = "0.2.1";
       sha256 = "0asl313a52qx2w6dw25g845683xsl840bwjh118nkwi5v1xipkzb";
       libraryHaskellDepends = [
         async base containers directory filepath hinotify text time
         unix-compat
       ];
       testHaskellDepends = [
         async base directory filepath tasty tasty-hunit temporary-rc
         unix-compat
       ];
       doCheck = false;
       homepage = "https://github.com/haskell-fswatch/hfsnotify";
       description = "Cross platform library for file change notification";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fsnotify-conduit" = callPackage
    ({ mkDerivation, async, base, conduit, directory, filepath
     , fsnotify, hspec, resourcet, temporary, transformers
     }:
     mkDerivation {
       pname = "fsnotify-conduit";
       version = "0.1.0.0";
       sha256 = "17qf175bsn1sw0n4sz3mjd3bcmxy6qmy7df8c6275jfxvr9djnwj";
       libraryHaskellDepends = [
         base conduit directory filepath fsnotify resourcet transformers
       ];
       testHaskellDepends = [
         async base conduit directory filepath hspec resourcet temporary
         transformers
       ];
       homepage = "https://github.com/fpco/fsnotify-conduit#readme";
       description = "Get filesystem notifications as a stream of events";
       license = stdenv.lib.licenses.mit;
     }) {};
  "funcmp" = callPackage
    ({ mkDerivation, base, filepath, process }:
     mkDerivation {
       pname = "funcmp";
       version = "1.8";
       sha256 = "09kmfgl15d71fr5h66j2b0ngw69y8dp41d55lz35nrjxq3l3gz1k";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base filepath process ];
       homepage = "http://savannah.nongnu.org/projects/funcmp/";
       description = "Functional MetaPost";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "fuzzcheck" = callPackage
    ({ mkDerivation, base, hspec, hspec-expectations, HUnit
     , lifted-base, monad-control, QuickCheck, random, transformers
     }:
     mkDerivation {
       pname = "fuzzcheck";
       version = "0.1.1";
       sha256 = "0qfr4f0b50l368b45yzwhqd4g2y1kvfrfj4hr84cdxcwdrwn9mpc";
       libraryHaskellDepends = [
         base lifted-base monad-control QuickCheck random transformers
       ];
       testHaskellDepends = [
         base hspec hspec-expectations HUnit QuickCheck
       ];
       homepage = "https://github.com/fpco/fuzzcheck";
       description = "A simple checker for stress testing monadic code";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "gamma" = callPackage
    ({ mkDerivation, base, continued-fractions, converge
     , template-haskell, vector
     }:
     mkDerivation {
       pname = "gamma";
       version = "0.9.0.2";
       sha256 = "09z4m0qsf1aa2al7x3gl7z3xy6r4m0xqhnz8b917dxa104zw6flq";
       libraryHaskellDepends = [
         base continued-fractions converge template-haskell vector
       ];
       homepage = "https://github.com/mokus0/gamma";
       description = "Gamma function and related functions";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "gd" = callPackage
    ({ mkDerivation, base, bytestring, expat, fontconfig, freetype, gd
     , libjpeg, libpng, zlib
     }:
     mkDerivation {
       pname = "gd";
       version = "3000.7.3";
       sha256 = "1dkzv6zs00qi0jmblkw05ywizc8y3baz7pnz0lcqn1cs1mhcpbhl";
       libraryHaskellDepends = [ base bytestring ];
       librarySystemDepends = [
         expat fontconfig freetype gd libjpeg libpng zlib
       ];
       description = "A Haskell binding to a subset of the GD graphics library";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) expat; inherit (pkgs) fontconfig;
         inherit (pkgs) freetype; inherit (pkgs) gd; inherit (pkgs) libjpeg;
         inherit (pkgs) libpng; inherit (pkgs) zlib;};
  "generic-aeson" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, generic-deriving, mtl
     , tagged, text, unordered-containers, vector
     }:
     mkDerivation {
       pname = "generic-aeson";
       version = "0.2.0.8";
       sha256 = "1jymvq8i9vyp4b6bxn0siyn0mxzs1r9mlwdhg3kckdlyidjglafy";
       revision = "3";
       editedCabalFile = "0qr21mvknnkhnmg7p80vhcxa8xvy2b5zcc8b8zzhp6kq07j755gd";
       libraryHaskellDepends = [
         aeson attoparsec base generic-deriving mtl tagged text
         unordered-containers vector
       ];
       description = "Derivation of Aeson instances using GHC generics";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "generic-deriving" = callPackage
    ({ mkDerivation, base, containers, ghc-prim, hspec
     , template-haskell
     }:
     mkDerivation {
       pname = "generic-deriving";
       version = "1.11.1";
       sha256 = "1sdh5hpcwvh3b6zvgfk3pr3hla8p88l82njnih880c0gk5zl53dk";
       libraryHaskellDepends = [
         base containers ghc-prim template-haskell
       ];
       testHaskellDepends = [ base hspec template-haskell ];
       homepage = "https://github.com/dreixel/generic-deriving";
       description = "Generic programming library for generalised deriving";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "generic-xmlpickler" = callPackage
    ({ mkDerivation, base, generic-deriving, hxt, hxt-pickle-utils
     , tasty, tasty-hunit, tasty-th, text
     }:
     mkDerivation {
       pname = "generic-xmlpickler";
       version = "0.1.0.5";
       sha256 = "1brnlgnbys811qy64aps2j03ks2p0rkihaqzaszfwl80cpsn05ym";
       revision = "1";
       editedCabalFile = "03rq9imjpwzxa9qibfz5dia6gprfqkmpagnrxjdkmwa263lma27b";
       libraryHaskellDepends = [ base generic-deriving hxt text ];
       testHaskellDepends = [
         base hxt hxt-pickle-utils tasty tasty-hunit tasty-th
       ];
       homepage = "http://github.com/silkapp/generic-xmlpickler";
       description = "Generic generation of HXT XmlPickler instances using GHC Generics";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "generics-eot" = callPackage
    ({ mkDerivation, base, directory, doctest, filepath, hspec
     , interpolate, markdown-unlit, mockery, QuickCheck, shake
     }:
     mkDerivation {
       pname = "generics-eot";
       version = "0.2.1.1";
       sha256 = "1n6h90vjr0q1xckr5xyv2gfncvhs8l4k63r4mf3bqdxdsa6jkbw9";
       libraryHaskellDepends = [ base markdown-unlit ];
       testHaskellDepends = [
         base directory doctest filepath hspec interpolate markdown-unlit
         mockery QuickCheck shake
       ];
       homepage = "https://github.com/soenkehahn/generics-eot#readme";
       description = "A library for generic programming that aims to be easy to understand";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "generics-sop" = callPackage
    ({ mkDerivation, base, ghc-prim, template-haskell }:
     mkDerivation {
       pname = "generics-sop";
       version = "0.2.3.0";
       sha256 = "0xykf83f5a6nd3n8kb3qq7xhamz0kdbavikq34yi0vj7vs8q4b1f";
       libraryHaskellDepends = [ base ghc-prim template-haskell ];
       testHaskellDepends = [ base ];
       description = "Generic Programming using True Sums of Products";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "generics-sop-lens" = callPackage
    ({ mkDerivation, base, generics-sop, lens }:
     mkDerivation {
       pname = "generics-sop-lens";
       version = "0.1.2.1";
       sha256 = "0p2ji955hy9r6c1wmiziga9pbbli24my3vmx19gf4i8db36d8jaf";
       libraryHaskellDepends = [ base generics-sop lens ];
       homepage = "https://github.com/phadej/generics-sop-lens#readme";
       description = "Lenses for types in generics-sop";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "geniplate-mirror" = callPackage
    ({ mkDerivation, base, mtl, template-haskell }:
     mkDerivation {
       pname = "geniplate-mirror";
       version = "0.7.4";
       sha256 = "0prc9vq4653230g93dw3kw0kzrrn7sib982drzh09mlqsnbc5gqv";
       libraryHaskellDepends = [ base mtl template-haskell ];
       homepage = "https://github.com/danr/geniplate";
       description = "Use Template Haskell to generate Uniplate-like functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "genvalidity" = callPackage
    ({ mkDerivation, base, hspec, QuickCheck, validity }:
     mkDerivation {
       pname = "genvalidity";
       version = "0.2.0.4";
       sha256 = "0mwfr8cnld4hvkac1gxkkg33q54lvh0p1yj2j0chinxyyrwcka6w";
       revision = "2";
       editedCabalFile = "0q9lpczsy1gracdzly7dq5i3dk1b74vrhaq424a3n11z6zkbsrb8";
       libraryHaskellDepends = [ base QuickCheck validity ];
       testHaskellDepends = [ base hspec QuickCheck ];
       homepage = "https://github.com/NorfairKing/validity#readme";
       description = "Testing utilities for the validity library";
       license = stdenv.lib.licenses.mit;
     }) {};
  "genvalidity-hspec" = callPackage
    ({ mkDerivation, base, doctest, genvalidity, hspec, QuickCheck
     , validity
     }:
     mkDerivation {
       pname = "genvalidity-hspec";
       version = "0.2.0.5";
       sha256 = "0az6phrdzpb9na7nqryksrkims8d6mb45s0dy7lwzjcvn9ykljxg";
       revision = "1";
       editedCabalFile = "0invhp8ja2yip23wwnxlr1w94g2x00gv19bkpqh52fhv3ji2vi1l";
       libraryHaskellDepends = [
         base genvalidity hspec QuickCheck validity
       ];
       testHaskellDepends = [ base doctest ];
       homepage = "https://github.com/NorfairKing/validity#readme";
       description = "Standard spec's for GenValidity instances";
       license = stdenv.lib.licenses.mit;
     }) {};
  "getopt-generics" = callPackage
    ({ mkDerivation, base, base-compat, base-orphans, filepath
     , generics-sop, hspec, QuickCheck, safe, silently, tagged
     }:
     mkDerivation {
       pname = "getopt-generics";
       version = "0.13";
       sha256 = "0jm3m9vl7nfyh4zlyvmd7vw4gcjli4dqp27fja2dv7qcr96ki4yi";
       libraryHaskellDepends = [
         base base-compat base-orphans generics-sop tagged
       ];
       testHaskellDepends = [
         base base-compat base-orphans filepath generics-sop hspec
         QuickCheck safe silently tagged
       ];
       homepage = "https://github.com/soenkehahn/getopt-generics#readme";
       description = "Create command line interfaces with ease";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ghc-events" = callPackage
    ({ mkDerivation, array, base, binary, bytestring, containers, mtl
     }:
     mkDerivation {
       pname = "ghc-events";
       version = "0.4.4.0";
       sha256 = "0vagr03rivl5ymcnkxnzb1x5b4cr6xknnkwmfliqfrc1hhjgcaxb";
       revision = "1";
       editedCabalFile = "0rfwiy10mjl4vyv3gjsi6chz34ra4qicq3px2nm5vrzmlalla8d5";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         array base binary bytestring containers mtl
       ];
       executableHaskellDepends = [
         array base binary bytestring containers mtl
       ];
       testHaskellDepends = [
         array base binary bytestring containers mtl
       ];
       doCheck = false;
       description = "Library and tool for parsing .eventlog files from GHC";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ghc-exactprint" = callPackage
    ({ mkDerivation, base, bytestring, containers, directory, filemanip
     , filepath, free, ghc, ghc-boot, ghc-paths, HUnit, mtl, silently
     , syb
     }:
     mkDerivation {
       pname = "ghc-exactprint";
       version = "0.5.2.1";
       sha256 = "021gc0x79xp482jxv259jp7frdb5xrn1rhdks36a68b3f056svbm";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring containers directory filepath free ghc ghc-boot
         ghc-paths mtl syb
       ];
       testHaskellDepends = [
         base containers directory filemanip filepath ghc ghc-boot ghc-paths
         HUnit mtl silently syb
       ];
       description = "ExactPrint for GHC";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ghc-heap-view" = callPackage
    ({ mkDerivation, base, binary, bytestring, containers, deepseq, ghc
     , template-haskell, transformers
     }:
     mkDerivation {
       pname = "ghc-heap-view";
       version = "0.5.7";
       sha256 = "090mlydgxhffin3x8d7xl5g0lmpvgr66y4ynnmapx62nq91bnv2b";
       configureFlags = [ "-f-ghc_7_7" "-fghc_8_0" ];
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base binary bytestring containers ghc template-haskell transformers
       ];
       testHaskellDepends = [ base deepseq ];
       description = "Extract the heap representation of Haskell values and thunks";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ghc-mod" = callPackage
    ({ mkDerivation, base, binary, bytestring, Cabal, cabal-helper
     , containers, deepseq, directory, djinn-ghc, doctest, extra
     , fclabels, filepath, ghc, ghc-boot, ghc-paths, ghc-syb-utils
     , haskell-src-exts, hlint, hspec, monad-control, monad-journal, mtl
     , old-time, optparse-applicative, pipes, pretty, process, safe
     , split, syb, template-haskell, temporary, text, time, transformers
     , transformers-base
     }:
     mkDerivation {
       pname = "ghc-mod";
       version = "5.6.0.0";
       sha256 = "03m2zagblzh51d0gakdsdzy2fyanxc714rqcyrxrp3h21i0q1f39";
       revision = "4";
       editedCabalFile = "1r6k5h9f4saqlb0px6va3bfhldx8vawn2v2xg3z531c0xswy6cn4";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       setupHaskellDepends = [
         base Cabal containers filepath process template-haskell
         transformers
       ];
       libraryHaskellDepends = [
         base binary bytestring cabal-helper containers deepseq directory
         djinn-ghc extra fclabels filepath ghc ghc-boot ghc-paths
         ghc-syb-utils haskell-src-exts hlint monad-control monad-journal
         mtl old-time optparse-applicative pipes pretty process safe split
         syb template-haskell temporary text time transformers
         transformers-base
       ];
       executableHaskellDepends = [
         base binary deepseq directory fclabels filepath ghc monad-control
         mtl old-time optparse-applicative pretty process split time
       ];
       testHaskellDepends = [ base doctest hspec ];
       doCheck = false;
       homepage = "http://www.mew.org/~kazu/proj/ghc-mod/";
       description = "Happy Haskell Programming";
       license = stdenv.lib.licenses.agpl3;
     }) {};
  "ghc-paths" = callPackage
    ({ mkDerivation, base, Cabal, directory }:
     mkDerivation {
       pname = "ghc-paths";
       version = "0.1.0.9";
       sha256 = "0ibrr1dxa35xx20cpp8jzgfak1rdmy344dfwq4vlq013c6w8z9mg";
       revision = "1";
       editedCabalFile = "1vxw81w2fdz4zxcpylrfmdvy8nh7kv5nn412shmxgs1sag7mhy5l";
       setupHaskellDepends = [ base Cabal directory ];
       libraryHaskellDepends = [ base ];
       description = "Knowledge of GHC's installation directories";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ghc-syb-utils" = callPackage
    ({ mkDerivation, base, ghc, syb }:
     mkDerivation {
       pname = "ghc-syb-utils";
       version = "0.2.3";
       sha256 = "0rxwdivpcppwzbqglbrz8rm9f4g1gmba9ij7p7aj3di9x37kzxky";
       libraryHaskellDepends = [ base ghc syb ];
       homepage = "http://github.com/nominolo/ghc-syb";
       description = "Scrap Your Boilerplate utilities for the GHC API";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ghc-tcplugins-extra" = callPackage
    ({ mkDerivation, base, ghc }:
     mkDerivation {
       pname = "ghc-tcplugins-extra";
       version = "0.2";
       sha256 = "0x3kd39jlhkgx3p2hm0a1wy571fis529jn2iz0jkw3mj6ikjnm7k";
       libraryHaskellDepends = [ base ghc ];
       homepage = "http://github.com/clash-lang/ghc-tcplugins-extra";
       description = "Utilities for writing GHC type-checker plugins";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "ghc-typelits-extra" = callPackage
    ({ mkDerivation, base, ghc, ghc-tcplugins-extra
     , ghc-typelits-knownnat, ghc-typelits-natnormalise, integer-gmp
     , singletons, tasty, tasty-hunit, template-haskell, transformers
     }:
     mkDerivation {
       pname = "ghc-typelits-extra";
       version = "0.2.2";
       sha256 = "18l6xxl5inld0vdaci7921bbhk7rcqdr4f8d4xfqcbpc186c081f";
       libraryHaskellDepends = [
         base ghc ghc-tcplugins-extra ghc-typelits-knownnat
         ghc-typelits-natnormalise integer-gmp singletons transformers
       ];
       testHaskellDepends = [
         base ghc-typelits-knownnat ghc-typelits-natnormalise tasty
         tasty-hunit template-haskell
       ];
       homepage = "http://www.clash-lang.org/";
       description = "Additional type-level operations on GHC.TypeLits.Nat";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "ghc-typelits-knownnat" = callPackage
    ({ mkDerivation, base, ghc, ghc-tcplugins-extra
     , ghc-typelits-natnormalise, singletons, tasty, tasty-hunit
     , template-haskell, transformers
     }:
     mkDerivation {
       pname = "ghc-typelits-knownnat";
       version = "0.2.3";
       sha256 = "0cv166azbxhq8xf61zf2lk61ld1948nshdawmn2sfqihdk7jhy5x";
       libraryHaskellDepends = [
         base ghc ghc-tcplugins-extra ghc-typelits-natnormalise singletons
         template-haskell transformers
       ];
       testHaskellDepends = [
         base ghc-typelits-natnormalise singletons tasty tasty-hunit
       ];
       homepage = "http://clash-lang.org/";
       description = "Derive KnownNat constraints from other KnownNat constraints";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "ghc-typelits-natnormalise" = callPackage
    ({ mkDerivation, base, ghc, ghc-tcplugins-extra, integer-gmp, tasty
     , tasty-hunit, template-haskell
     }:
     mkDerivation {
       pname = "ghc-typelits-natnormalise";
       version = "0.5.2";
       sha256 = "10s3g55hv212i3p9jcyyanwqd3si0ss12pj6m2qkxx76fvh6cbmi";
       libraryHaskellDepends = [
         base ghc ghc-tcplugins-extra integer-gmp
       ];
       testHaskellDepends = [ base tasty tasty-hunit template-haskell ];
       homepage = "http://www.clash-lang.org/";
       description = "GHC typechecker plugin for types of kind GHC.TypeLits.Nat";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "ghcid" = callPackage
    ({ mkDerivation, ansi-terminal, base, cmdargs, containers
     , directory, extra, filepath, fsnotify, process, tasty, tasty-hunit
     , terminal-size, time, unix
     }:
     mkDerivation {
       pname = "ghcid";
       version = "0.6.6";
       sha256 = "1c3axfzs8dwg0kgicggngbi8j62nzwvzpnzfdwxp7nhi462ngxb2";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base cmdargs directory extra filepath process terminal-size time
         unix
       ];
       executableHaskellDepends = [
         ansi-terminal base cmdargs containers directory extra filepath
         fsnotify process terminal-size time unix
       ];
       testHaskellDepends = [
         ansi-terminal base cmdargs containers directory extra filepath
         fsnotify process tasty tasty-hunit terminal-size time unix
       ];
       doCheck = false;
       homepage = "https://github.com/ndmitchell/ghcid#readme";
       description = "GHCi based bare bones IDE";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ghcjs-codemirror" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "ghcjs-codemirror";
       version = "0.0.0.1";
       sha256 = "04x5h0i4fgyc2c5ihrnk0w3l1f3avvcl115zlnich93nillgbnfw";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/ghcjs/CodeMirror";
       description = "Installs CodeMirror JavaScript files";
       license = stdenv.lib.licenses.mit;
     }) {};
  "ghcjs-hplay" = callPackage
    ({ mkDerivation, base, containers, ghcjs-perch, mtl, transformers
     , transient, transient-universe
     }:
     mkDerivation {
       pname = "ghcjs-hplay";
       version = "0.3.4.2";
       sha256 = "1ma9j7vxffnlac6mp3z6jl8s5sd6yjs9q1zgv5pzr4j7ic8fbnf3";
       libraryHaskellDepends = [
         base containers ghcjs-perch mtl transformers transient
         transient-universe
       ];
       homepage = "https://github.com/agocorona/ghcjs-hplay";
       description = "Client-side web EDSL for transient nodes running in the web browser";
       license = stdenv.lib.licenses.mit;
     }) {};
  "ghcjs-perch" = callPackage
    ({ mkDerivation, base, transformers }:
     mkDerivation {
       pname = "ghcjs-perch";
       version = "0.3.3";
       sha256 = "05ll0hhpynyi07fsydmaxbnvg2jwl4jrm5k6gzgmdh7i9gq1ssc9";
       libraryHaskellDepends = [ base transformers ];
       description = "GHCJS version of Perch library";
       license = stdenv.lib.licenses.mit;
     }) {};
  "gi-atk" = callPackage
    ({ mkDerivation, atk, base, bytestring, containers, gi-glib
     , gi-gobject, haskell-gi, haskell-gi-base, text, transformers
     }:
     mkDerivation {
       pname = "gi-atk";
       version = "2.0.3";
       sha256 = "08162kbj7h311aylhxs9xpjv8rj9w3nymk195g026qncc4wq2w1l";
       libraryHaskellDepends = [
         base bytestring containers gi-glib gi-gobject haskell-gi
         haskell-gi-base text transformers
       ];
       libraryPkgconfigDepends = [ atk ];
       doHaddock = false;
       homepage = "https://github.com/haskell-gi/haskell-gi";
       description = "Atk bindings";
       license = stdenv.lib.licenses.lgpl21;
     }) {inherit (pkgs) atk;};
  "gi-cairo" = callPackage
    ({ mkDerivation, base, bytestring, cairo, containers, haskell-gi
     , haskell-gi-base, text, transformers
     }:
     mkDerivation {
       pname = "gi-cairo";
       version = "1.0.3";
       sha256 = "12zy7asycbk262xm46czn3b154b9fid6qdd7g5d2i60rdgsaym0b";
       libraryHaskellDepends = [
         base bytestring containers haskell-gi haskell-gi-base text
         transformers
       ];
       libraryPkgconfigDepends = [ cairo ];
       doHaddock = false;
       preCompileBuildDriver = ''
         PKG_CONFIG_PATH+=":${cairo}/lib/pkgconfig"
         setupCompileFlags+=" $(pkg-config --libs cairo-gobject)"
       '';
       homepage = "https://github.com/haskell-gi/haskell-gi";
       description = "Cairo bindings";
       license = stdenv.lib.licenses.lgpl21;
     }) {inherit (pkgs) cairo;};
  "gi-gdk" = callPackage
    ({ mkDerivation, base, bytestring, containers, gi-cairo
     , gi-gdkpixbuf, gi-gio, gi-glib, gi-gobject, gi-pango, gtk3
     , haskell-gi, haskell-gi-base, text, transformers
     }:
     mkDerivation {
       pname = "gi-gdk";
       version = "3.0.3";
       sha256 = "0jxyj20cp2ahhczjcbvifhfwszhv74qzg8wik13l66pl6c13ig8j";
       libraryHaskellDepends = [
         base bytestring containers gi-cairo gi-gdkpixbuf gi-gio gi-glib
         gi-gobject gi-pango haskell-gi haskell-gi-base text transformers
       ];
       libraryPkgconfigDepends = [ gtk3 ];
       doHaddock = false;
       homepage = "https://github.com/haskell-gi/haskell-gi";
       description = "Gdk bindings";
       license = stdenv.lib.licenses.lgpl21;
     }) {gtk3 = pkgs.gnome3.gtk;};
  "gi-gdkpixbuf" = callPackage
    ({ mkDerivation, base, bytestring, containers, gdk_pixbuf, gi-gio
     , gi-glib, gi-gobject, haskell-gi, haskell-gi-base, text
     , transformers
     }:
     mkDerivation {
       pname = "gi-gdkpixbuf";
       version = "2.0.3";
       sha256 = "1ja5ynk1jfig1pls8pi8dpqa3gr9bxqzpqjv9v3kja6l58rcq7aw";
       libraryHaskellDepends = [
         base bytestring containers gi-gio gi-glib gi-gobject haskell-gi
         haskell-gi-base text transformers
       ];
       libraryPkgconfigDepends = [ gdk_pixbuf ];
       doHaddock = false;
       homepage = "https://github.com/haskell-gi/haskell-gi";
       description = "GdkPixbuf bindings";
       license = stdenv.lib.licenses.lgpl21;
     }) {inherit (pkgs) gdk_pixbuf;};
  "gi-gio" = callPackage
    ({ mkDerivation, base, bytestring, containers, gi-glib, gi-gobject
     , glib, haskell-gi, haskell-gi-base, text, transformers
     }:
     mkDerivation {
       pname = "gi-gio";
       version = "2.0.3";
       sha256 = "177hjqyn7s8bbfmmzr2s0m8bhi3nl38bbj3f4nkp42xn7igw2b0v";
       libraryHaskellDepends = [
         base bytestring containers gi-glib gi-gobject haskell-gi
         haskell-gi-base text transformers
       ];
       libraryPkgconfigDepends = [ glib ];
       doHaddock = false;
       homepage = "https://github.com/haskell-gi/haskell-gi";
       description = "Gio bindings";
       license = stdenv.lib.licenses.lgpl21;
     }) {inherit (pkgs) glib;};
  "gi-glib" = callPackage
    ({ mkDerivation, base, bytestring, containers, glib, haskell-gi
     , haskell-gi-base, text, transformers
     }:
     mkDerivation {
       pname = "gi-glib";
       version = "2.0.3";
       sha256 = "0w0i5cqzi196gppixa44lmca8vkvxi9k68gkkr8giskxaj8i15ia";
       libraryHaskellDepends = [
         base bytestring containers haskell-gi haskell-gi-base text
         transformers
       ];
       libraryPkgconfigDepends = [ glib ];
       doHaddock = false;
       homepage = "https://github.com/haskell-gi/haskell-gi";
       description = "GLib bindings";
       license = stdenv.lib.licenses.lgpl21;
     }) {inherit (pkgs) glib;};
  "gi-gobject" = callPackage
    ({ mkDerivation, base, bytestring, containers, gi-glib, glib
     , haskell-gi, haskell-gi-base, text, transformers
     }:
     mkDerivation {
       pname = "gi-gobject";
       version = "2.0.3";
       sha256 = "0fwpfdfrd8h8s6d6cihaqq9g0qvy7vy1bsh5yws96nf1lb4c5mcw";
       libraryHaskellDepends = [
         base bytestring containers gi-glib haskell-gi haskell-gi-base text
         transformers
       ];
       libraryPkgconfigDepends = [ glib ];
       doHaddock = false;
       homepage = "https://github.com/haskell-gi/haskell-gi";
       description = "GObject bindings";
       license = stdenv.lib.licenses.lgpl21;
     }) {inherit (pkgs) glib;};
  "gi-gtk" = callPackage
    ({ mkDerivation, base, bytestring, containers, gi-atk, gi-cairo
     , gi-gdk, gi-gdkpixbuf, gi-gio, gi-glib, gi-gobject, gi-pango, gtk3
     , haskell-gi, haskell-gi-base, text, transformers
     }:
     mkDerivation {
       pname = "gi-gtk";
       version = "3.0.3";
       sha256 = "0cbwk2vb0wphafhq6r2y7hbcvqy287ha5fxmf2biw8svyy9cq2j9";
       libraryHaskellDepends = [
         base bytestring containers gi-atk gi-cairo gi-gdk gi-gdkpixbuf
         gi-gio gi-glib gi-gobject gi-pango haskell-gi haskell-gi-base text
         transformers
       ];
       libraryPkgconfigDepends = [ gtk3 ];
       doHaddock = false;
       homepage = "https://github.com/haskell-gi/haskell-gi";
       description = "Gtk bindings";
       license = stdenv.lib.licenses.lgpl21;
     }) {gtk3 = pkgs.gnome3.gtk;};
  "gi-javascriptcore" = callPackage
    ({ mkDerivation, base, bytestring, containers, haskell-gi
     , haskell-gi-base, text, transformers, webkitgtk24x-gtk3
     }:
     mkDerivation {
       pname = "gi-javascriptcore";
       version = "3.0.3";
       sha256 = "0x7r5n3q2wrzpv5ba69msbpg3w6bdrd53k18pqp8pnn4fadirl5j";
       libraryHaskellDepends = [
         base bytestring containers haskell-gi haskell-gi-base text
         transformers
       ];
       libraryPkgconfigDepends = [ webkitgtk24x-gtk3 ];
       doHaddock = false;
       homepage = "https://github.com/haskell-gi/haskell-gi";
       description = "JavaScriptCore bindings";
       license = stdenv.lib.licenses.lgpl21;
     }) {inherit (pkgs) webkitgtk24x-gtk3;};
  "gi-pango" = callPackage
    ({ mkDerivation, base, bytestring, cairo, containers, gi-glib
     , gi-gobject, haskell-gi, haskell-gi-base, pango, text
     , transformers
     }:
     mkDerivation {
       pname = "gi-pango";
       version = "1.0.3";
       sha256 = "0mq2zdcfi0bnfs3lsw4sr3cddq87aahfpqkn6mbng2832xygk9fi";
       libraryHaskellDepends = [
         base bytestring containers gi-glib gi-gobject haskell-gi
         haskell-gi-base text transformers
       ];
       libraryPkgconfigDepends = [ cairo pango ];
       doHaddock = false;
       preCompileBuildDriver = ''
         PKG_CONFIG_PATH+=":${cairo}/lib/pkgconfig"
         setupCompileFlags+=" $(pkg-config --libs cairo-gobject)"
       '';
       homepage = "https://github.com/haskell-gi/haskell-gi";
       description = "Pango bindings";
       license = stdenv.lib.licenses.lgpl21;
     }) {inherit (pkgs) cairo; inherit (pkgs.gnome2) pango;};
  "gi-soup" = callPackage
    ({ mkDerivation, base, bytestring, containers, gi-gio, gi-glib
     , gi-gobject, haskell-gi, haskell-gi-base, libsoup, text
     , transformers
     }:
     mkDerivation {
       pname = "gi-soup";
       version = "2.4.3";
       sha256 = "0jssaxdb9xwqlm8416wdz6yj180nacg62qir7zsnhr2vng9nly7f";
       libraryHaskellDepends = [
         base bytestring containers gi-gio gi-glib gi-gobject haskell-gi
         haskell-gi-base text transformers
       ];
       libraryPkgconfigDepends = [ libsoup ];
       doHaddock = false;
       homepage = "https://github.com/haskell-gi/haskell-gi";
       description = "Libsoup bindings";
       license = stdenv.lib.licenses.lgpl21;
     }) {inherit (pkgs.gnome2) libsoup;};
  "gi-webkit" = callPackage
    ({ mkDerivation, base, bytestring, containers, gi-atk, gi-cairo
     , gi-gdk, gi-gdkpixbuf, gi-gio, gi-glib, gi-gobject, gi-gtk
     , gi-javascriptcore, gi-soup, haskell-gi, haskell-gi-base, text
     , transformers, webkitgtk24x-gtk3
     }:
     mkDerivation {
       pname = "gi-webkit";
       version = "3.0.3";
       sha256 = "05nj5xw7q04fi3z7sw2dh8whkgw1mg25bsvcxfi17mrvvmdlfll6";
       libraryHaskellDepends = [
         base bytestring containers gi-atk gi-cairo gi-gdk gi-gdkpixbuf
         gi-gio gi-glib gi-gobject gi-gtk gi-javascriptcore gi-soup
         haskell-gi haskell-gi-base text transformers
       ];
       libraryPkgconfigDepends = [ webkitgtk24x-gtk3 ];
       doHaddock = false;
       homepage = "https://github.com/haskell-gi/haskell-gi";
       description = "WebKit bindings";
       license = stdenv.lib.licenses.lgpl21;
     }) {inherit (pkgs) webkitgtk24x-gtk3;};
  "gio" = callPackage
    ({ mkDerivation, array, base, bytestring, Cabal, containers, glib
     , gtk2hs-buildtools, mtl, system-glib
     }:
     mkDerivation {
       pname = "gio";
       version = "0.13.3.1";
       sha256 = "09yq753qld2p5h7apg5wyzyh8z47xqkkyx8zvjwk21w044iz8qxc";
       enableSeparateDataOutput = true;
       setupHaskellDepends = [ base Cabal gtk2hs-buildtools ];
       libraryHaskellDepends = [
         array base bytestring containers glib mtl
       ];
       libraryPkgconfigDepends = [ system-glib ];
       homepage = "http://projects.haskell.org/gtk2hs/";
       description = "Binding to GIO";
       license = stdenv.lib.licenses.lgpl21;
     }) {system-glib = pkgs.glib;};
  "gipeda" = callPackage
    ({ mkDerivation, aeson, base, bytestring, cassava
     , concurrent-output, containers, directory, extra, file-embed
     , filepath, gitlib, gitlib-libgit2, scientific, shake, split
     , tagged, text, transformers, unordered-containers, vector, yaml
     }:
     mkDerivation {
       pname = "gipeda";
       version = "0.3.3.1";
       sha256 = "0hxipcl7faa106aa9nzcghnvzhq2ldighbs87664jp8c779syymy";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         aeson base bytestring cassava concurrent-output containers
         directory extra file-embed filepath gitlib gitlib-libgit2
         scientific shake split tagged text transformers
         unordered-containers vector yaml
       ];
       doHaddock = false;
       homepage = "https://github.com/nomeata/gipeda";
       description = "Git Performance Dashboard";
       license = stdenv.lib.licenses.mit;
     }) {};
  "giphy-api" = callPackage
    ({ mkDerivation, aeson, base, basic-prelude, bytestring, containers
     , directory, hspec, http-api-data, http-client, http-client-tls
     , lens, microlens, microlens-th, mtl, network-uri, servant
     , servant-client, text, transformers
     }:
     mkDerivation {
       pname = "giphy-api";
       version = "0.4.0.0";
       sha256 = "0xlqhmvqgpcqbc8lbgkjy4dm3b0sld6522rmcqzavkij8bsm4adv";
       revision = "2";
       editedCabalFile = "1xfri731br7ghpmq209y14vf26xrgdsbd32g8ck5wsdysqrmwqdz";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base containers http-api-data http-client http-client-tls
         microlens microlens-th mtl network-uri servant servant-client text
         transformers
       ];
       executableHaskellDepends = [ base network-uri text ];
       testHaskellDepends = [
         aeson base basic-prelude bytestring containers directory hspec lens
         network-uri text
       ];
       homepage = "http://github.com/passy/giphy-api#readme";
       description = "Giphy HTTP API wrapper and CLI search tool";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "git-fmt" = callPackage
    ({ mkDerivation, base, exceptions, extra, fast-logger, filepath
     , monad-logger, monad-parallel, mtl, omnifmt, optparse-applicative
     , pipes, pipes-concurrency, process, temporary, text, time
     }:
     mkDerivation {
       pname = "git-fmt";
       version = "0.4.1.0";
       sha256 = "0zg9g6w1axp90836g3fniq2a1p9m59a05h7ayi81csibz5whzhd9";
       revision = "1";
       editedCabalFile = "1abzdz0yyinniwbq9gbpc77mbisqgjj9h9jsmk1177dv2nbrglcn";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         base exceptions extra fast-logger filepath monad-logger
         monad-parallel mtl omnifmt optparse-applicative pipes
         pipes-concurrency process temporary text time
       ];
       doHaddock = false;
       homepage = "https://github.com/hjwylde/git-fmt";
       description = "Custom git command for formatting code";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "github-types" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, base, hspec, hspec-smallcheck
     , http-conduit, smallcheck, text, time, unordered-containers
     , vector
     }:
     mkDerivation {
       pname = "github-types";
       version = "0.2.1";
       sha256 = "0rvqmzbbc8k7xs0akry7xh5c2abzzr6290812cnwk9ry3d3fmr6c";
       libraryHaskellDepends = [ aeson base text time ];
       testHaskellDepends = [
         aeson aeson-pretty base hspec hspec-smallcheck http-conduit
         smallcheck text time unordered-containers vector
       ];
       description = "Type definitions for objects used by the GitHub v3 API";
       license = "unknown";
     }) {};
  "github-webhook-handler" = callPackage
    ({ mkDerivation, aeson, base, bytestring, cryptohash, github-types
     , text, transformers, uuid, vector
     }:
     mkDerivation {
       pname = "github-webhook-handler";
       version = "0.0.8";
       sha256 = "1sjgnc1zl3xsv25nc71bw0dmj8z7iacf6b8cf8vc50v6c1a8i40x";
       libraryHaskellDepends = [
         aeson base bytestring cryptohash github-types text transformers
         uuid vector
       ];
       description = "GitHub WebHook Handler";
       license = stdenv.lib.licenses.mit;
     }) {};
  "gitlib" = callPackage
    ({ mkDerivation, base, base16-bytestring, bytestring, conduit
     , conduit-combinators, containers, directory, exceptions, filepath
     , hashable, lifted-async, lifted-base, monad-control, mtl
     , resourcet, semigroups, tagged, text, time, transformers, unix
     , unordered-containers
     }:
     mkDerivation {
       pname = "gitlib";
       version = "3.1.1";
       sha256 = "1vwmyfmqlly351jq9pgjhcfhnxvrhzkd4lfq7qpsa37vca5pas6x";
       libraryHaskellDepends = [
         base base16-bytestring bytestring conduit conduit-combinators
         containers directory exceptions filepath hashable lifted-async
         lifted-base monad-control mtl resourcet semigroups tagged text time
         transformers unix unordered-containers
       ];
       description = "API library for working with Git repositories";
       license = stdenv.lib.licenses.mit;
     }) {};
  "gitlib-libgit2" = callPackage
    ({ mkDerivation, base, bytestring, conduit, conduit-combinators
     , containers, directory, exceptions, fast-logger, filepath, gitlib
     , gitlib-test, hlibgit2, hspec, hspec-expectations, HUnit
     , lifted-async, lifted-base, mmorph, monad-control, monad-loops
     , mtl, resourcet, stm, stm-conduit, tagged, template-haskell, text
     , text-icu, time, transformers, transformers-base
     }:
     mkDerivation {
       pname = "gitlib-libgit2";
       version = "3.1.1";
       sha256 = "1fv8r2w0fd9m7chrccmf5kw0pr2v0k2r2l0d782galdvq7mhca7w";
       libraryHaskellDepends = [
         base bytestring conduit conduit-combinators containers directory
         exceptions fast-logger filepath gitlib hlibgit2 lifted-async
         lifted-base mmorph monad-control monad-loops mtl resourcet stm
         stm-conduit tagged template-haskell text text-icu time transformers
         transformers-base
       ];
       testHaskellDepends = [
         base exceptions gitlib gitlib-test hspec hspec-expectations HUnit
         transformers
       ];
       description = "Libgit2 backend for gitlib";
       license = stdenv.lib.licenses.mit;
     }) {};
  "gitlib-test" = callPackage
    ({ mkDerivation, base, bytestring, conduit, conduit-combinators
     , exceptions, gitlib, hspec, hspec-expectations, HUnit
     , monad-control, tagged, text, time, transformers
     }:
     mkDerivation {
       pname = "gitlib-test";
       version = "3.1.0.3";
       sha256 = "07r970d6m15gri6xim71kl2vvml85jlb0vc51zb67gfsd6iby2py";
       libraryHaskellDepends = [
         base bytestring conduit conduit-combinators exceptions gitlib hspec
         hspec-expectations HUnit monad-control tagged text time
         transformers
       ];
       description = "Test library for confirming gitlib backend compliance";
       license = stdenv.lib.licenses.mit;
     }) {};
  "gitrev" = callPackage
    ({ mkDerivation, base, directory, filepath, process
     , template-haskell
     }:
     mkDerivation {
       pname = "gitrev";
       version = "1.2.0";
       sha256 = "00ii00j5bnxnhnmzcsbqfin8kdj6n9ll7akg3j8apajwvd7f74a3";
       libraryHaskellDepends = [
         base directory filepath process template-haskell
       ];
       homepage = "https://github.com/acfoltzer/gitrev";
       description = "Compile git revision info into Haskell projects";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "gitson" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, base, base-compat, bytestring
     , conduit-combinators, conduit-extra, criterion, directory, doctest
     , errors, filepath, flock, Glob, hspec, lifted-base, monad-control
     , process, random, transformers
     }:
     mkDerivation {
       pname = "gitson";
       version = "0.5.2";
       sha256 = "15i1xj3z0gxvxqgwh5902cna6ig5pixxkcrdgsvhpsk4mbkxc7b7";
       libraryHaskellDepends = [
         aeson aeson-pretty base base-compat bytestring conduit-combinators
         conduit-extra directory errors filepath flock lifted-base
         monad-control process transformers
       ];
       testHaskellDepends = [
         aeson base directory doctest Glob hspec process transformers
       ];
       benchmarkHaskellDepends = [
         aeson base criterion directory random transformers
       ];
       doCheck = false;
       homepage = "https://github.com/myfreeweb/gitson";
       description = "A document store library for Git + JSON";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "gl" = callPackage
    ({ mkDerivation, base, containers, directory, filepath, fixed, half
     , hxt, mesa, split, transformers
     }:
     mkDerivation {
       pname = "gl";
       version = "0.7.8.1";
       sha256 = "16i1lrcpklgxr6xd4750shp0x42999maxyay55brhj1jbpkjwygd";
       libraryHaskellDepends = [
         base containers directory filepath fixed half hxt split
         transformers
       ];
       librarySystemDepends = [ mesa ];
       description = "Complete OpenGL raw bindings";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) mesa;};
  "glabrous" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, attoparsec, base, bytestring
     , cereal, cereal-text, directory, either, hspec, text
     , unordered-containers
     }:
     mkDerivation {
       pname = "glabrous";
       version = "0.1.3.0";
       sha256 = "0xh5c297fda6scck11ibzgc2kap755r8jxxxyqg9lnhfp0nbbbx9";
       libraryHaskellDepends = [
         aeson aeson-pretty attoparsec base bytestring cereal cereal-text
         either text unordered-containers
       ];
       testHaskellDepends = [
         base directory either hspec text unordered-containers
       ];
       homepage = "https://github.com/MichelBoucey/glabrous";
       description = "A template DSL library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "glib" = callPackage
    ({ mkDerivation, base, bytestring, Cabal, containers, glib
     , gtk2hs-buildtools, text, utf8-string
     }:
     mkDerivation {
       pname = "glib";
       version = "0.13.4.1";
       sha256 = "0c16wddkq3ysbcgdngli7g2b680niavwi45km3551k4l83nh4wpm";
       setupHaskellDepends = [ base Cabal gtk2hs-buildtools ];
       libraryHaskellDepends = [
         base bytestring containers text utf8-string
       ];
       libraryPkgconfigDepends = [ glib ];
       homepage = "http://projects.haskell.org/gtk2hs/";
       description = "Binding to the GLIB library for Gtk2Hs";
       license = stdenv.lib.licenses.lgpl21;
     }) {inherit (pkgs) glib;};
  "gloss" = callPackage
    ({ mkDerivation, base, bmp, bytestring, containers, ghc-prim
     , gloss-rendering, GLUT, OpenGL
     }:
     mkDerivation {
       pname = "gloss";
       version = "1.10.2.5";
       sha256 = "1ia2vifilk72j9xprqi5qfhf6bvhk0xygbdmcqlzfa98i52w7iz5";
       libraryHaskellDepends = [
         base bmp bytestring containers ghc-prim gloss-rendering GLUT OpenGL
       ];
       homepage = "http://gloss.ouroborus.net";
       description = "Painless 2D vector graphics, animations and simulations";
       license = stdenv.lib.licenses.mit;
     }) {};
  "gloss-rendering" = callPackage
    ({ mkDerivation, base, bmp, bytestring, containers, GLUT, OpenGL }:
     mkDerivation {
       pname = "gloss-rendering";
       version = "1.10.3.5";
       sha256 = "0wqdm3k63x62hqlmp6in75wslpq631506f3j4n3g0qpbn8c8bih0";
       libraryHaskellDepends = [
         base bmp bytestring containers GLUT OpenGL
       ];
       description = "Gloss picture data types and rendering functions";
       license = stdenv.lib.licenses.mit;
     }) {};
  "gogol" = callPackage
    ({ mkDerivation, aeson, base, bytestring, case-insensitive, conduit
     , conduit-extra, cryptonite, data-default-class, directory
     , exceptions, filepath, gogol-core, http-client, http-conduit
     , http-media, http-types, lens, memory, mime-types, monad-control
     , mtl, resourcet, text, time, transformers, transformers-base
     , unordered-containers, x509, x509-store
     }:
     mkDerivation {
       pname = "gogol";
       version = "0.1.0";
       sha256 = "13irbsw2k6wvljr4imr96jfj4b8a5422s9ss091m77igv8rs3x1v";
       libraryHaskellDepends = [
         aeson base bytestring case-insensitive conduit conduit-extra
         cryptonite data-default-class directory exceptions filepath
         gogol-core http-client http-conduit http-media http-types lens
         memory mime-types monad-control mtl resourcet text time
         transformers transformers-base unordered-containers x509 x509-store
       ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Comprehensive Google Services SDK";
       license = "unknown";
     }) {};
  "gogol-adexchange-buyer" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-adexchange-buyer";
       version = "0.1.0";
       sha256 = "10wxy2gj3fnv43sqlyk8vbgr2s316nz6px0g5ig5knrvbahpi9v3";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Ad Exchange Buyer SDK";
       license = "unknown";
     }) {};
  "gogol-adexchange-seller" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-adexchange-seller";
       version = "0.1.0";
       sha256 = "1k4qlwrqwsy79n24w6809r370qrhw5w25ynk8p238icqrjkixj18";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Ad Exchange Seller SDK";
       license = "unknown";
     }) {};
  "gogol-admin-datatransfer" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-admin-datatransfer";
       version = "0.1.0";
       sha256 = "0yyr9bxb656bdgwn33jbvff7gdapnx6szxyrb7jmk6bqiphvanhr";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Admin Data Transfer SDK";
       license = "unknown";
     }) {};
  "gogol-admin-directory" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-admin-directory";
       version = "0.1.0";
       sha256 = "08j6rzvrrki5isb6mbyiq16f9c2dgy1a5qpcyawnqr67apcq526f";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Admin Directory SDK";
       license = "unknown";
     }) {};
  "gogol-admin-emailmigration" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-admin-emailmigration";
       version = "0.1.0";
       sha256 = "0xysq24ksxvq3qivaj0vl3c627lqcwaakvmdablli9jb3sjcxcqm";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Email Migration API v2 SDK";
       license = "unknown";
     }) {};
  "gogol-admin-reports" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-admin-reports";
       version = "0.1.0";
       sha256 = "0pbqigk5nqf99j8xsn8csdg4ad16sdsif37kpnsxkxm1avkqcjff";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Admin Reports SDK";
       license = "unknown";
     }) {};
  "gogol-adsense" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-adsense";
       version = "0.1.0";
       sha256 = "1pkvmjkffms900zgsf67jjbq63mwwazhsnw7ixp8ldz4cng83xrg";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google AdSense Management SDK";
       license = "unknown";
     }) {};
  "gogol-adsense-host" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-adsense-host";
       version = "0.1.0";
       sha256 = "0h14ncqxbr9h5xr7fq7x3nwv6498r0vq2rsny3zs2pfsswdnizv4";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google AdSense Host SDK";
       license = "unknown";
     }) {};
  "gogol-affiliates" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-affiliates";
       version = "0.1.0";
       sha256 = "03i0kvil39bi8w3a8f749m3k78077zi85cxvbdk7b2q16gvhr06h";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Affiliate Network SDK";
       license = "unknown";
     }) {};
  "gogol-analytics" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-analytics";
       version = "0.1.0";
       sha256 = "0j25n889hzx1j3bbyyspjv5w057cnlj2rrpfw79b4v2n2dmrr2z8";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Analytics SDK";
       license = "unknown";
     }) {};
  "gogol-android-enterprise" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-android-enterprise";
       version = "0.1.0";
       sha256 = "16pbindkw517zbqqkx34yrr22xp34ddd6b8lqp2pbx8r8jvy47mp";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Play EMM SDK";
       license = "unknown";
     }) {};
  "gogol-android-publisher" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-android-publisher";
       version = "0.1.0";
       sha256 = "0zj32yzdcv11a8fz6bsf46k93gsk1mwifksa8fgd0rlk6w0gbg0d";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Play Developer SDK";
       license = "unknown";
     }) {};
  "gogol-appengine" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-appengine";
       version = "0.1.0";
       sha256 = "08ymlxkq33hxgbvgnrkgvsl40xc2dq9yq2xaz478ybj86y3w1ars";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google App Engine Admin SDK";
       license = "unknown";
     }) {};
  "gogol-apps-activity" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-apps-activity";
       version = "0.1.0";
       sha256 = "012pg9ygpc07h4v9v29pmrhh2fbdk08ddna8wkapw7bmgy2dbjzh";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Apps Activity SDK";
       license = "unknown";
     }) {};
  "gogol-apps-calendar" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-apps-calendar";
       version = "0.1.0";
       sha256 = "11j8lbpm6mlyxpcw4bv5c2i6h3r80xxhglmisrirwkrxskqk6zag";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Calendar SDK";
       license = "unknown";
     }) {};
  "gogol-apps-licensing" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-apps-licensing";
       version = "0.1.0";
       sha256 = "10g46v8li10zs1nd1w4p3ib1pds96c0j8gqi93ljcn7nc8zwqdx0";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Enterprise License Manager SDK";
       license = "unknown";
     }) {};
  "gogol-apps-reseller" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-apps-reseller";
       version = "0.1.0";
       sha256 = "1dbik916qhzx6bkly3zmdhfksd65zklm6z5kszbjfv6imbk6xg4a";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Enterprise Apps Reseller SDK";
       license = "unknown";
     }) {};
  "gogol-apps-tasks" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-apps-tasks";
       version = "0.1.0";
       sha256 = "14ivwlwyc587vawismpjh5ryqq57yhbl79whx867jnvwgm2n0812";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Tasks SDK";
       license = "unknown";
     }) {};
  "gogol-appstate" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-appstate";
       version = "0.1.0";
       sha256 = "16jipnwm9bm3q192v9saa6d1aa55bhda56k1g8pyl5j7ixiiv5k3";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google App State SDK";
       license = "unknown";
     }) {};
  "gogol-autoscaler" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-autoscaler";
       version = "0.1.0";
       sha256 = "13v5bw235rvc9qqnligrz0g8pd8ag4aa026pmn883c0lz37paznx";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Compute Engine Autoscaler SDK";
       license = "unknown";
     }) {};
  "gogol-bigquery" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-bigquery";
       version = "0.1.0";
       sha256 = "1hzibjzmzrggnjfvp6kfjfpi3as3cf2qgp14j79vc8ipv38nb05k";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google BigQuery SDK";
       license = "unknown";
     }) {};
  "gogol-billing" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-billing";
       version = "0.1.0";
       sha256 = "1p99cvkka9pjfyz6d7sc6qqj96md0mcd25xpsv1lzz0kbvs91nmq";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Cloud Billing SDK";
       license = "unknown";
     }) {};
  "gogol-blogger" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-blogger";
       version = "0.1.0";
       sha256 = "0yi70lkrm1gpjlqc99l396sy5b113aw2yikv87xic12nz3x0awgg";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Blogger SDK";
       license = "unknown";
     }) {};
  "gogol-books" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-books";
       version = "0.1.0";
       sha256 = "08nwn6s19d1996i5pxk31mjfhdxgd1s16ssvzkppkbsx5g7xzg7k";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Books SDK";
       license = "unknown";
     }) {};
  "gogol-civicinfo" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-civicinfo";
       version = "0.1.0";
       sha256 = "1rwbwnx77wpbvryc469v84q51zkd9mhjh185wrikwi9yxiavylq5";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Civic Information SDK";
       license = "unknown";
     }) {};
  "gogol-classroom" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-classroom";
       version = "0.1.0";
       sha256 = "0d0ilxnw6glgn1zlx716z7wwivj68ni42qrs0n4ba51n83aiamsv";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Classroom SDK";
       license = "unknown";
     }) {};
  "gogol-cloudmonitoring" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-cloudmonitoring";
       version = "0.1.0";
       sha256 = "0azkcqnrsl294rb5bb70iwld4d47s3gy95x11dlynigcv0pr68n8";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Cloud Monitoring SDK";
       license = "unknown";
     }) {};
  "gogol-cloudtrace" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-cloudtrace";
       version = "0.1.0";
       sha256 = "1cp2xqn7aglb0f63vvz88d9s21yk3k7rjp0s2gyxxivc1344zj4q";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Cloud Trace SDK";
       license = "unknown";
     }) {};
  "gogol-compute" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-compute";
       version = "0.1.0";
       sha256 = "0fvgj8k8yxwq9lf281bcshy9hnhjhvc1k7wa1ykbn087mv4z4sqp";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Compute Engine SDK";
       license = "unknown";
     }) {};
  "gogol-container" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-container";
       version = "0.1.0";
       sha256 = "1v3rxfllphql4pp15v8rdgrzklhdd8fq9ivh2w5cjn4xq13hc0z2";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Container Engine SDK";
       license = "unknown";
     }) {};
  "gogol-core" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, bifunctors, bytestring
     , case-insensitive, conduit, dlist, exceptions, hashable
     , http-api-data, http-client, http-media, http-types, lens, memory
     , resourcet, scientific, servant, tasty, text, time
     , unordered-containers
     }:
     mkDerivation {
       pname = "gogol-core";
       version = "0.1.0";
       sha256 = "1c017jy8q8siji8h9in55z5pn2hzqfssaj68h7mc075l0s8z9112";
       revision = "1";
       editedCabalFile = "1dm0sn97wwiybba65xzn6scicjch9p8avl8anr3b9rkqhx5zmnqi";
       libraryHaskellDepends = [
         aeson attoparsec base bifunctors bytestring case-insensitive
         conduit dlist exceptions hashable http-api-data http-client
         http-media http-types lens memory resourcet scientific servant text
         time unordered-containers
       ];
       testHaskellDepends = [ base tasty ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Core data types and functionality for Gogol libraries";
       license = "unknown";
     }) {};
  "gogol-customsearch" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-customsearch";
       version = "0.1.0";
       sha256 = "1q7f28avlgs12diymw4j91zsyqprcvn35p3yx5ncp85fjznlw9iv";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google CustomSearch SDK";
       license = "unknown";
     }) {};
  "gogol-dataflow" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-dataflow";
       version = "0.1.0";
       sha256 = "05a5hfvpnrfwl95zy2blwz5pwf6anivwvs7x117r7lzgll3db0mc";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Dataflow SDK";
       license = "unknown";
     }) {};
  "gogol-dataproc" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-dataproc";
       version = "0.1.0";
       sha256 = "0kwbcinh1dpp94r7hj1b6am8k245djm482cx962fh5kv0ch059nl";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Cloud Dataproc SDK";
       license = "unknown";
     }) {};
  "gogol-datastore" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-datastore";
       version = "0.1.0";
       sha256 = "192yifiaxdyr0sqcwd42x7gk1likrn8hhcfpz8zzzlry53dqhs1l";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Cloud Datastore SDK";
       license = "unknown";
     }) {};
  "gogol-debugger" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-debugger";
       version = "0.1.0";
       sha256 = "1nk1y3028slbskxpzybr5w41x7578vjh0jp2lbkrkp8fzy9fsw1g";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Cloud Debugger SDK";
       license = "unknown";
     }) {};
  "gogol-deploymentmanager" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-deploymentmanager";
       version = "0.1.0";
       sha256 = "1yw1z2rffwnkfaspbysih7x8vbqd7acqvaflimkhsgbcviq3bw53";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Cloud Deployment Manager SDK";
       license = "unknown";
     }) {};
  "gogol-dfareporting" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-dfareporting";
       version = "0.1.0";
       sha256 = "09b68sa4gha3jwny49jd6k7pv28n684g1y2mcgzzdarb46myqhiw";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google DCM/DFA Reporting And Trafficking SDK";
       license = "unknown";
     }) {};
  "gogol-discovery" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-discovery";
       version = "0.1.0";
       sha256 = "1b19yrk08xyii7zv4lr947hbkz6nw1wlm1qqdvmsx93nvkg0gwgq";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google APIs Discovery Service SDK";
       license = "unknown";
     }) {};
  "gogol-dns" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-dns";
       version = "0.1.0";
       sha256 = "0h4b6wyxhbqm6f44w8yq02cnf05k01rzx7shh2d0gkfdz2s3yznh";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Cloud DNS SDK";
       license = "unknown";
     }) {};
  "gogol-doubleclick-bids" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-doubleclick-bids";
       version = "0.1.0";
       sha256 = "1m8gb5vh19l6a7gljdw5n7q092khc30krplzsnfpr2df0szddhqa";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google DoubleClick Bid Manager SDK";
       license = "unknown";
     }) {};
  "gogol-doubleclick-search" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-doubleclick-search";
       version = "0.1.0";
       sha256 = "1nrrl9743zxbp7addzr3hbhfn0x9y0mc57iad24s272w5nb0vmrf";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google DoubleClick Search SDK";
       license = "unknown";
     }) {};
  "gogol-drive" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-drive";
       version = "0.1.0";
       sha256 = "18wws9zsr5fi2dda2j41862lz5r9dz47izvnc9fyx8ws4qfspk3w";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Drive SDK";
       license = "unknown";
     }) {};
  "gogol-firebase-rules" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-firebase-rules";
       version = "0.1.0";
       sha256 = "0x1cmx8wdk15dvjg9iqxsv0z44rvbn34ksyz5y4ca2wv6cy4ixdk";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Firebase Rules SDK";
       license = "unknown";
     }) {};
  "gogol-fitness" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-fitness";
       version = "0.1.0";
       sha256 = "1kd6vpp4m0hbrhkrdnva4hrabpjs5qfzz7hwz0hq1jdpila86vs8";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Fitness SDK";
       license = "unknown";
     }) {};
  "gogol-fonts" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-fonts";
       version = "0.1.0";
       sha256 = "1j8xniwzjkrs1adbaxc565lj3ijv0x5ip109x387ygpi49zk8yxq";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Fonts Developer SDK";
       license = "unknown";
     }) {};
  "gogol-freebasesearch" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-freebasesearch";
       version = "0.1.0";
       sha256 = "0g73g3h8yqzgd95djwbs043gdbdhdd1kc66dicf3j2l3lxc8x3k6";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Freebase Search SDK";
       license = "unknown";
     }) {};
  "gogol-fusiontables" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-fusiontables";
       version = "0.1.0";
       sha256 = "1wagk5r6pgmhwhkh6xq24mjsnr87nbfgcm64y0mbwb5f4lfvywr4";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Fusion Tables SDK";
       license = "unknown";
     }) {};
  "gogol-games" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-games";
       version = "0.1.0";
       sha256 = "1mpzi59wv5dzm129xd1wbvdx25r00k302306n6cmnawlayha080b";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Play Game Services SDK";
       license = "unknown";
     }) {};
  "gogol-games-configuration" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-games-configuration";
       version = "0.1.0";
       sha256 = "0dx95ap399ysh9sgrv865pprhq1kz90vzm1kkp6vc1774cxyq9wg";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Play Game Services Publishing SDK";
       license = "unknown";
     }) {};
  "gogol-games-management" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-games-management";
       version = "0.1.0";
       sha256 = "057lv5kzsq143ywnvg32z9n4c34mk87k0qkzprjd6szminb5ji2a";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Play Game Services Management SDK";
       license = "unknown";
     }) {};
  "gogol-genomics" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-genomics";
       version = "0.1.0";
       sha256 = "1117jwz7z1k5rskjr8vrhsll04jar4x47gpyr7inxkpky3p8w2bj";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Genomics SDK";
       license = "unknown";
     }) {};
  "gogol-gmail" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-gmail";
       version = "0.1.0";
       sha256 = "13xal7c2fagpn5507gh5phfgal86n365va0npjr26lgwrn1r9wy5";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Gmail SDK";
       license = "unknown";
     }) {};
  "gogol-groups-migration" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-groups-migration";
       version = "0.1.0";
       sha256 = "0r33v12m4snp00534dk1vggkdyhmy1k4vd3h322pbi4v4yldy65g";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Groups Migration SDK";
       license = "unknown";
     }) {};
  "gogol-groups-settings" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-groups-settings";
       version = "0.1.0";
       sha256 = "04qpxcrkjw2g8g0i8aga2z69kq6j4j7p6z3n9h3hgw6bk1w27hj7";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Groups Settings SDK";
       license = "unknown";
     }) {};
  "gogol-identity-toolkit" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-identity-toolkit";
       version = "0.1.0";
       sha256 = "13a8ppgp8ilxdbsw1b16ljw4v1p5fxwna4hz1n8gg724bwwndbf6";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Identity Toolkit SDK";
       license = "unknown";
     }) {};
  "gogol-kgsearch" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-kgsearch";
       version = "0.1.0";
       sha256 = "1wv7hz4c6s92jjfrzcjvr9x7m1adqjf0x9np7j4krk9pdvp0dw67";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Identity and Access Management SDK";
       license = "unknown";
     }) {};
  "gogol-latencytest" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-latencytest";
       version = "0.1.0";
       sha256 = "0gcmw2wr7jf7khlxjl2jzfvq3xhms1agkbiyn46gzxj087478q46";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Cloud Network Performance Monitoring SDK";
       license = "unknown";
     }) {};
  "gogol-logging" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-logging";
       version = "0.1.0";
       sha256 = "0wvzp65i2nrja729mjmav6nnsm16lq0zm30kkfx99d0a0i1pxvl8";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Cloud Logging SDK";
       license = "unknown";
     }) {};
  "gogol-maps-coordinate" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-maps-coordinate";
       version = "0.1.0";
       sha256 = "1h6r6fg8hppx6802p5aizc9kkv1wcjdw993zimfvdi8krabwr9w5";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Maps Coordinate SDK";
       license = "unknown";
     }) {};
  "gogol-maps-engine" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-maps-engine";
       version = "0.1.0";
       sha256 = "029zv54s5byzfc1c9agpa65z1l6s3srxf9i6mlckdfdnc7jjn2gy";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Maps Engine SDK";
       license = "unknown";
     }) {};
  "gogol-mirror" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-mirror";
       version = "0.1.0";
       sha256 = "07d4gdrqa2pbmb3b0dqyrz9hl8w1yfyw9hqcdyx1ivaxsqq08dny";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Mirror SDK";
       license = "unknown";
     }) {};
  "gogol-monitoring" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-monitoring";
       version = "0.1.0";
       sha256 = "1cgagy5ljl9dxrs87ddb0fgk3r1nzyv5vyjqdxaxd22nxn02dndk";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Monitoring SDK";
       license = "unknown";
     }) {};
  "gogol-oauth2" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-oauth2";
       version = "0.1.0";
       sha256 = "13brqh2183c7ca36fj3q2jbrsa4a21ccykifp2l0p3xwpb12iykx";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google OAuth2 SDK";
       license = "unknown";
     }) {};
  "gogol-pagespeed" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-pagespeed";
       version = "0.1.0";
       sha256 = "0nw1yll18h2lycs128vwdwlj6yxf4a33cvarjs5fsgrnd3fcjhqj";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google PageSpeed Insights SDK";
       license = "unknown";
     }) {};
  "gogol-partners" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-partners";
       version = "0.1.0";
       sha256 = "0zpbz0fmfhp0jgzyx4hy2bwzb2565zml2cwj8apg63d6g934lp90";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Partners SDK";
       license = "unknown";
     }) {};
  "gogol-people" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-people";
       version = "0.1.0";
       sha256 = "0l1y12bjx2rc70ddrdgl678wyi1ajsx22xdbb1y0bqmy5ykypdlc";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google People SDK";
       license = "unknown";
     }) {};
  "gogol-play-moviespartner" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-play-moviespartner";
       version = "0.1.0";
       sha256 = "16nzj56pdgbjdla98jy3s9f3svwxlyh824hyia77j6prcllfgpbd";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Play Movies Partner SDK";
       license = "unknown";
     }) {};
  "gogol-plus" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-plus";
       version = "0.1.0";
       sha256 = "0h1qibhbpx30bpr4kpshiqparfnrpnxr5fnrn1bbpdbqcsdnsr4p";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google + SDK";
       license = "unknown";
     }) {};
  "gogol-plus-domains" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-plus-domains";
       version = "0.1.0";
       sha256 = "17s4675anrd89qcdlpfc12whxypm1vy6kcj45yz3jjj0yzraisfw";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google + Domains SDK";
       license = "unknown";
     }) {};
  "gogol-prediction" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-prediction";
       version = "0.1.0";
       sha256 = "1accwrb75vd49s7qvqjviavp4fq5qv0133z0j55r4fzlanaawxzq";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Prediction SDK";
       license = "unknown";
     }) {};
  "gogol-proximitybeacon" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-proximitybeacon";
       version = "0.1.0";
       sha256 = "0wnqbb29znjn54h21k488pl653ddd1ksmab67d673czzbdngwsxl";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Proximity Beacon SDK";
       license = "unknown";
     }) {};
  "gogol-pubsub" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-pubsub";
       version = "0.1.0";
       sha256 = "1yy6r3s8p8sl1arhfdgsiqchbxzsgmb3pxwzvy5m7y6hhc0anqr0";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Cloud Pub/Sub SDK";
       license = "unknown";
     }) {};
  "gogol-qpxexpress" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-qpxexpress";
       version = "0.1.0";
       sha256 = "0hldj6fkdvglk9bsr3cgsh2m7zpd90j6aa773wsdhdbczhh2k3iq";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google QPX Express SDK";
       license = "unknown";
     }) {};
  "gogol-replicapool" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-replicapool";
       version = "0.1.0";
       sha256 = "1lv8w1wa4gyjij091qqss2ib4m04k3bbx51x8h7qzr088y074mvn";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Compute Engine Instance Group Manager SDK";
       license = "unknown";
     }) {};
  "gogol-replicapool-updater" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-replicapool-updater";
       version = "0.1.0";
       sha256 = "0h4cps5f60x3md8abyfsl77dldb1bdpp68l0dk5z85mxbii08xf5";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Compute Engine Instance Group Updater SDK";
       license = "unknown";
     }) {};
  "gogol-resourcemanager" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-resourcemanager";
       version = "0.1.0";
       sha256 = "0kqd02hkilqfs7b9cl3443zyjqdvx85iqwyl2l4773prqlrgn6q2";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Cloud Resource Manager SDK";
       license = "unknown";
     }) {};
  "gogol-resourceviews" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-resourceviews";
       version = "0.1.0";
       sha256 = "18n8l58jz01r2fzmxwjnzndxxqdk6c1rq8igm1w8y97qxnc6bris";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Compute Engine Instance Groups SDK";
       license = "unknown";
     }) {};
  "gogol-script" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-script";
       version = "0.1.0";
       sha256 = "0cgp1c5a7vprn9sygsl38sqwmy6j9b97qxx5qwfjbkifi9grrvcj";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Apps Script Execution SDK";
       license = "unknown";
     }) {};
  "gogol-sheets" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-sheets";
       version = "0.1.0";
       sha256 = "153sggfapsj9kkik4l4ac59kb6ckm59xj0pkyz5plcy6la04c4xs";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Sheets SDK";
       license = "unknown";
     }) {};
  "gogol-shopping-content" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-shopping-content";
       version = "0.1.0";
       sha256 = "0qfkpc7p6baix86ys294jh7ykk6xdrv3c6sxg5vza33c09hymlr7";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Content API for Shopping SDK";
       license = "unknown";
     }) {};
  "gogol-siteverification" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-siteverification";
       version = "0.1.0";
       sha256 = "1qgq5xzhmrcgkn2fja277fm3nv45xbx8cl14lvcx8fdsx7cvrnad";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Site Verification SDK";
       license = "unknown";
     }) {};
  "gogol-spectrum" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-spectrum";
       version = "0.1.0";
       sha256 = "1904zmrgsm30jgswl9kf9ypg2chlr5f8k1mxkrza5082abr3a7qw";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Spectrum Database SDK";
       license = "unknown";
     }) {};
  "gogol-sqladmin" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-sqladmin";
       version = "0.1.0";
       sha256 = "06bmmfmagzisdagnwrs8j9zyvr94572p2x7ywhqgi6rs6284g884";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Cloud SQL Administration SDK";
       license = "unknown";
     }) {};
  "gogol-storage" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-storage";
       version = "0.1.0";
       sha256 = "04h9z4cc9dxbdn9x4p58nlk7lccr4sh8zw369yickyypqb0bd9pb";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Cloud Storage JSON SDK";
       license = "unknown";
     }) {};
  "gogol-storage-transfer" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-storage-transfer";
       version = "0.1.0";
       sha256 = "1kb5z75jsids6y8z11fbnxcanrlzdi2a4m558lsmlb3djr2hz1pv";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Storage Transfer SDK";
       license = "unknown";
     }) {};
  "gogol-tagmanager" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-tagmanager";
       version = "0.1.0";
       sha256 = "1ak1mxpiagjc136r8ap411xfykfwa6lw85hd84g3h4mc26gimc6a";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Tag Manager SDK";
       license = "unknown";
     }) {};
  "gogol-taskqueue" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-taskqueue";
       version = "0.1.0";
       sha256 = "0r8p95hlkcjiqaj9ylap2zbzxv3nnh303r93b2inzwmvw9sa20sz";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google TaskQueue SDK";
       license = "unknown";
     }) {};
  "gogol-translate" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-translate";
       version = "0.1.0";
       sha256 = "0y8nj9hn897996zk3q6wm2zd48ijszhwl85i6y3qspk6z7q1zmqp";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Translate SDK";
       license = "unknown";
     }) {};
  "gogol-urlshortener" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-urlshortener";
       version = "0.1.0";
       sha256 = "1ax4xrn6dj6ly9bfqqlf2mwmfdlk3c0sr9ilc4wg0bid8gavjivj";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google URL Shortener SDK";
       license = "unknown";
     }) {};
  "gogol-useraccounts" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-useraccounts";
       version = "0.1.0";
       sha256 = "043vp8zkr3saa6ad9f6grkimg3lsyyrrvvnscryw391nlbydb8sw";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Cloud User Accounts SDK";
       license = "unknown";
     }) {};
  "gogol-vision" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-vision";
       version = "0.1.0";
       sha256 = "038b9kgd9kgyiaa5vq8sx6q8gj9jnqk8d0r7y5syx5l9c68inl0a";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Cloud Vision SDK";
       license = "unknown";
     }) {};
  "gogol-webmaster-tools" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-webmaster-tools";
       version = "0.1.0";
       sha256 = "1i5f6s2vjmwl8xmmv4awrwnyaa768kzjd80h3bpv2krcib4djdq1";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google Search Console SDK";
       license = "unknown";
     }) {};
  "gogol-youtube" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-youtube";
       version = "0.1.0";
       sha256 = "07ycqfksv0hxhjdmlcyf1sl3cy84ixqpydpc9fzf92s2rcs3mp1f";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google YouTube Data SDK";
       license = "unknown";
     }) {};
  "gogol-youtube-analytics" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-youtube-analytics";
       version = "0.1.0";
       sha256 = "0gbqwklp7x8y0ymrwc96hd5wq9bfncfhb3zm121dz3k7rf0qcslc";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google YouTube Analytics SDK";
       license = "unknown";
     }) {};
  "gogol-youtube-reporting" = callPackage
    ({ mkDerivation, base, gogol-core }:
     mkDerivation {
       pname = "gogol-youtube-reporting";
       version = "0.1.0";
       sha256 = "0z7knd80gspzqm23a2nkrmb3h0ldfqycyb8srwc1gyhqw8q5za1b";
       libraryHaskellDepends = [ base gogol-core ];
       homepage = "https://github.com/brendanhay/gogol";
       description = "Google YouTube Reporting SDK";
       license = "unknown";
     }) {};
  "google-cloud" = callPackage
    ({ mkDerivation, aeson, base, bytestring, http-client
     , http-client-tls, http-types, mtl, random, scientific, stm, text
     , time, unordered-containers
     }:
     mkDerivation {
       pname = "google-cloud";
       version = "0.0.4";
       sha256 = "16pv4iiladfsq92xnpj46xa91x5svk6qsmz5szwwb83fhkk7r9q9";
       libraryHaskellDepends = [
         aeson base bytestring http-client http-client-tls http-types mtl
         random scientific stm text time unordered-containers
       ];
       description = "Client for the Google Cloud APIs";
       license = stdenv.lib.licenses.mit;
     }) {};
  "google-oauth2-jwt" = callPackage
    ({ mkDerivation, base, base64-bytestring, bytestring, HsOpenSSL
     , RSA, text, unix-time
     }:
     mkDerivation {
       pname = "google-oauth2-jwt";
       version = "0.1.3";
       sha256 = "02y0l4ylgx5dzx6bv1h90nk234mm5mdr1p8ifizaizh39mdmg5qm";
       libraryHaskellDepends = [
         base base64-bytestring bytestring HsOpenSSL RSA text unix-time
       ];
       homepage = "https://github.com/MichelBoucey/google-oauth2-jwt";
       description = "Get a signed JWT for Google Service Accounts";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "gpolyline" = callPackage
    ({ mkDerivation, base, split }:
     mkDerivation {
       pname = "gpolyline";
       version = "0.1.0.1";
       sha256 = "01bsl7s8r33jgvk9lyca02awj43acii8spa6sskz19ivhm2adcr8";
       libraryHaskellDepends = [ base split ];
       homepage = "https://github.com/fegu/gpolyline";
       description = "Pure module for encoding/decoding Google Polyline";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "graph-core" = callPackage
    ({ mkDerivation, base, containers, deepseq, hashable, HTF, mtl
     , QuickCheck, safe, unordered-containers, vector
     }:
     mkDerivation {
       pname = "graph-core";
       version = "0.3.0.0";
       sha256 = "0m7820dwasix5x6ni6gphbqwswxm7qv9xxw9qgl7ifzb82m0p3rp";
       libraryHaskellDepends = [
         base containers deepseq hashable mtl safe unordered-containers
         vector
       ];
       testHaskellDepends = [
         base containers deepseq hashable HTF mtl QuickCheck safe
         unordered-containers vector
       ];
       homepage = "https://github.com/factisresearch/graph-core";
       description = "Fast, memory efficient and persistent graph implementation";
       license = stdenv.lib.licenses.mit;
     }) {};
  "graph-wrapper" = callPackage
    ({ mkDerivation, array, base, containers, deepseq, hspec
     , QuickCheck
     }:
     mkDerivation {
       pname = "graph-wrapper";
       version = "0.2.5.1";
       sha256 = "04z1qbsf1c31r0mhn8bgr8hisffxacq3j61y4fym28idr8zqaqc3";
       libraryHaskellDepends = [ array base containers ];
       testHaskellDepends = [
         array base containers deepseq hspec QuickCheck
       ];
       homepage = "https://github.com/soenkehahn/graph-wrapper";
       description = "A wrapper around the standard Data.Graph with a less awkward interface";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "graphs" = callPackage
    ({ mkDerivation, array, base, containers, transformers
     , transformers-compat, void
     }:
     mkDerivation {
       pname = "graphs";
       version = "0.7";
       sha256 = "0k3g5wrznwxmlmki5z08aj4rnlilz9z83dy0mydwksljc2n5d9pf";
       libraryHaskellDepends = [
         array base containers transformers transformers-compat void
       ];
       homepage = "http://github.com/ekmett/graphs";
       description = "A simple monadic graph library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "graphviz" = callPackage
    ({ mkDerivation, base, bytestring, colour, containers, criterion
     , deepseq, directory, dlist, fgl, fgl-arbitrary, filepath
     , polyparse, process, QuickCheck, temporary, text, transformers
     , wl-pprint-text
     }:
     mkDerivation {
       pname = "graphviz";
       version = "2999.18.1.2";
       sha256 = "1z453is01v0rnxlv6xx4iyaqv5vrp3bpz829mpv1a341sck2135h";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring colour containers directory dlist fgl filepath
         polyparse process temporary text transformers wl-pprint-text
       ];
       executableHaskellDepends = [
         base bytestring directory filepath text
       ];
       testHaskellDepends = [
         base containers fgl fgl-arbitrary filepath QuickCheck text
       ];
       benchmarkHaskellDepends = [ base criterion deepseq text ];
       doCheck = false;
       homepage = "http://projects.haskell.org/graphviz/";
       description = "Bindings to Graphviz for graph visualisation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "gravatar" = callPackage
    ({ mkDerivation, base, bytestring, data-default, hspec, HTTP
     , pureMD5, text
     }:
     mkDerivation {
       pname = "gravatar";
       version = "0.8.0";
       sha256 = "1mzl08qzwzzhz6bvkz4qnrdnzsgvsmi2lnhzf743yzx4msn00q3g";
       libraryHaskellDepends = [
         base bytestring data-default HTTP pureMD5 text
       ];
       testHaskellDepends = [ base hspec text ];
       description = "Generate Gravatar image URLs";
       license = stdenv.lib.licenses.mit;
     }) {};
  "graylog" = callPackage
    ({ mkDerivation, aeson, aeson-casing, base, bytestring, file-embed
     , network, random, scientific, tasty, tasty-hunit, text, time
     , vector
     }:
     mkDerivation {
       pname = "graylog";
       version = "0.1.0.1";
       sha256 = "10h0d87gvvg4bznnlj9ad0ppjz0nibmcrrlmrcwjrl583pk7709d";
       libraryHaskellDepends = [
         aeson aeson-casing base bytestring network random scientific text
         time vector
       ];
       testHaskellDepends = [
         aeson aeson-casing base bytestring file-embed network scientific
         tasty tasty-hunit text time vector
       ];
       doCheck = false;
       homepage = "https://github.com/AndrewRademacher/haskell-graylog";
       description = "Support for graylog output";
       license = "unknown";
     }) {};
  "groom" = callPackage
    ({ mkDerivation, base, haskell-src-exts }:
     mkDerivation {
       pname = "groom";
       version = "0.1.2";
       sha256 = "045hzpnf17rp1ib6q3gcznl9b7ivz5zmv0gh7qfg726kr8i030hf";
       libraryHaskellDepends = [ base haskell-src-exts ];
       description = "Pretty printing for well-behaved Show instances";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "grouped-list" = callPackage
    ({ mkDerivation, base, containers, criterion, deepseq, pointed
     , QuickCheck, tasty, tasty-quickcheck
     }:
     mkDerivation {
       pname = "grouped-list";
       version = "0.2.1.2";
       sha256 = "0xg8z3ipa9h6zjji3s1dwal3fkdii7bp36cikj0rlxfrn4s9zi2v";
       libraryHaskellDepends = [ base containers deepseq pointed ];
       testHaskellDepends = [ base QuickCheck tasty tasty-quickcheck ];
       benchmarkHaskellDepends = [ base criterion ];
       homepage = "https://github.com/Daniel-Diaz/grouped-list/blob/master/README.md";
       description = "Grouped lists. Equal consecutive elements are grouped.";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "groupoids" = callPackage
    ({ mkDerivation, base, semigroupoids }:
     mkDerivation {
       pname = "groupoids";
       version = "4.0";
       sha256 = "08la44c19pz2clws5mb939zc1d17cb6qy9qlh2n1634pl0zrawb6";
       libraryHaskellDepends = [ base semigroupoids ];
       doHaddock = false;
       homepage = "http://github.com/ekmett/groupoids/";
       description = "This package has been absorbed into semigroupoids 4.0";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "groups" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "groups";
       version = "0.4.0.0";
       sha256 = "1kp8h3617cimya8nnadljyy4vk66dzl5nzfm900k2gh3ci8kja6k";
       libraryHaskellDepends = [ base ];
       description = "Haskell 98 groups";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "gtk" = callPackage
    ({ mkDerivation, array, base, bytestring, Cabal, cairo, containers
     , gio, glib, gtk2, gtk2hs-buildtools, mtl, pango, text
     }:
     mkDerivation {
       pname = "gtk";
       version = "0.14.6";
       sha256 = "09w3f2n2n9n44yf2li3ldlb3cxhbc0rml15j9xqamw5q1h90cybh";
       enableSeparateDataOutput = true;
       setupHaskellDepends = [ base Cabal gtk2hs-buildtools ];
       libraryHaskellDepends = [
         array base bytestring cairo containers gio glib mtl pango text
       ];
       libraryPkgconfigDepends = [ gtk2 ];
       doHaddock = false;
       homepage = "http://projects.haskell.org/gtk2hs/";
       description = "Binding to the Gtk+ graphical user interface library";
       license = stdenv.lib.licenses.lgpl21;
     }) {gtk2 = pkgs.gnome2.gtk;};
  "gtk2hs-buildtools" = callPackage
    ({ mkDerivation, alex, array, base, Cabal, containers, directory
     , filepath, happy, hashtables, pretty, process, random
     }:
     mkDerivation {
       pname = "gtk2hs-buildtools";
       version = "0.13.2.2";
       sha256 = "0jzvxlssqmd2dpnm35qpaq5xv5jk7hhy87594m74xv0ihygvbr65";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         array base Cabal containers directory filepath hashtables pretty
         process random
       ];
       libraryToolDepends = [ alex happy ];
       executableHaskellDepends = [ base ];
       homepage = "http://projects.haskell.org/gtk2hs/";
       description = "Tools to build the Gtk2Hs suite of User Interface libraries";
       license = stdenv.lib.licenses.gpl2;
     }) {};
  "gtk3" = callPackage
    ({ mkDerivation, array, base, bytestring, Cabal, cairo, containers
     , gio, glib, gtk2hs-buildtools, gtk3, mtl, pango, text, time
     , transformers
     }:
     mkDerivation {
       pname = "gtk3";
       version = "0.14.6";
       sha256 = "0n223zgfjfv0p70wd7rh881fv8z00c9jmz7wm3vfa1jy3b2x7h7l";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       setupHaskellDepends = [ base Cabal gtk2hs-buildtools ];
       libraryHaskellDepends = [
         array base bytestring cairo containers gio glib mtl pango text
       ];
       libraryPkgconfigDepends = [ gtk3 ];
       executableHaskellDepends = [
         array base cairo text time transformers
       ];
       doHaddock = false;
       homepage = "http://projects.haskell.org/gtk2hs/";
       description = "Binding to the Gtk+ 3 graphical user interface library";
       license = stdenv.lib.licenses.lgpl21;
     }) {inherit (pkgs) gtk3;};
  "gtksourceview3" = callPackage
    ({ mkDerivation, array, base, Cabal, containers, glib
     , gtk2hs-buildtools, gtk3, gtksourceview3, mtl, text
     }:
     mkDerivation {
       pname = "gtksourceview3";
       version = "0.13.3.1";
       sha256 = "0yrv71r772h8h7x73xb5k868lg7lmh50r0vzxrl2clrxlpyi4zls";
       enableSeparateDataOutput = true;
       setupHaskellDepends = [ base Cabal gtk2hs-buildtools ];
       libraryHaskellDepends = [
         array base containers glib gtk3 mtl text
       ];
       libraryPkgconfigDepends = [ gtksourceview3 ];
       homepage = "http://projects.haskell.org/gtk2hs/";
       description = "Binding to the GtkSourceView library";
       license = stdenv.lib.licenses.lgpl21;
     }) {gtksourceview3 = pkgs.gnome3.gtksourceview;};
  "hOpenPGP" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, base16-bytestring
     , base64-bytestring, bifunctors, binary, binary-conduit, byteable
     , bytestring, bzlib, conduit, conduit-extra, containers, criterion
     , crypto-cipher-types, cryptonite, data-default-class, errors
     , hashable, incremental-parser, ixset-typed, lens, memory
     , monad-loops, nettle, network, network-uri, newtype
     , openpgp-asciiarmor, QuickCheck, quickcheck-instances, resourcet
     , securemem, semigroups, split, tasty, tasty-hunit
     , tasty-quickcheck, text, time, time-locale-compat, transformers
     , unordered-containers, wl-pprint-extras, zlib
     }:
     mkDerivation {
       pname = "hOpenPGP";
       version = "2.5.5";
       sha256 = "0m5df5w261nm6v246g6r306a5higmyzpgsskf8cp4m88cnlyy08q";
       libraryHaskellDepends = [
         aeson attoparsec base base16-bytestring base64-bytestring
         bifunctors binary binary-conduit byteable bytestring bzlib conduit
         conduit-extra containers crypto-cipher-types cryptonite
         data-default-class errors hashable incremental-parser ixset-typed
         lens memory monad-loops nettle network network-uri newtype
         openpgp-asciiarmor resourcet securemem semigroups split text time
         time-locale-compat transformers unordered-containers
         wl-pprint-extras zlib
       ];
       testHaskellDepends = [
         aeson attoparsec base base16-bytestring bifunctors binary
         binary-conduit byteable bytestring bzlib conduit conduit-extra
         containers crypto-cipher-types cryptonite data-default-class errors
         hashable incremental-parser ixset-typed lens memory monad-loops
         nettle network network-uri newtype QuickCheck quickcheck-instances
         resourcet securemem semigroups split tasty tasty-hunit
         tasty-quickcheck text time time-locale-compat transformers
         unordered-containers wl-pprint-extras zlib
       ];
       benchmarkHaskellDepends = [
         aeson base base16-bytestring base64-bytestring bifunctors binary
         binary-conduit byteable bytestring bzlib conduit conduit-extra
         containers criterion crypto-cipher-types cryptonite
         data-default-class errors hashable incremental-parser ixset-typed
         lens memory monad-loops nettle network network-uri newtype
         openpgp-asciiarmor resourcet securemem semigroups split text time
         time-locale-compat transformers unordered-containers
         wl-pprint-extras zlib
       ];
       homepage = "http://floss.scru.org/hOpenPGP/";
       description = "native Haskell implementation of OpenPGP (RFC4880)";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hPDB" = callPackage
    ({ mkDerivation, AC-Vector, base, bytestring, containers, deepseq
     , directory, ghc-prim, iterable, mmap, mtl, Octree, parallel
     , QuickCheck, tagged, template-haskell, text, unordered-containers
     , vector, zlib
     }:
     mkDerivation {
       pname = "hPDB";
       version = "1.2.0.9";
       sha256 = "1kcfizpsvs4nsq8yrqk6syvr9kbbff1krlc4azkpmw4s3r68hjs4";
       libraryHaskellDepends = [
         AC-Vector base bytestring containers deepseq directory ghc-prim
         iterable mmap mtl Octree parallel QuickCheck tagged
         template-haskell text unordered-containers vector zlib
       ];
       homepage = "https://github.com/BioHaskell/hPDB";
       description = "Protein Databank file format library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hPDB-examples" = callPackage
    ({ mkDerivation, AC-Vector, base, bytestring, containers, deepseq
     , directory, ghc-prim, GLUT, hPDB, IfElse, iterable, mtl, Octree
     , OpenGL, process, QuickCheck, template-haskell, text, text-format
     , time, vector
     }:
     mkDerivation {
       pname = "hPDB-examples";
       version = "1.2.0.7";
       sha256 = "06wqvr7msvvymkbzfc16zpk4klymhpgw95r8hvxaqrwph80y0c1k";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         AC-Vector base bytestring containers deepseq directory ghc-prim
         GLUT hPDB iterable mtl Octree OpenGL QuickCheck template-haskell
         text text-format vector
       ];
       testHaskellDepends = [
         AC-Vector base bytestring containers deepseq directory ghc-prim
         hPDB IfElse iterable mtl process template-haskell text time vector
       ];
       doHaddock = false;
       homepage = "https://github.com/BioHaskell/hPDB-examples";
       description = "Examples for hPDB library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hackage-db" = callPackage
    ({ mkDerivation, base, bytestring, Cabal, containers, directory
     , filepath, tar, utf8-string
     }:
     mkDerivation {
       pname = "hackage-db";
       version = "1.22";
       sha256 = "0rhh7w4929zkwzv10ika952yiw4dkffqd8f79f1bl76lz1la6cjd";
       revision = "1";
       editedCabalFile = "0xj3wwf0wl8qfcz4zsxw0r6f79rg7h010jfv54gsiyzwpf67l9xm";
       libraryHaskellDepends = [
         base bytestring Cabal containers directory filepath tar utf8-string
       ];
       homepage = "http://github.com/peti/hackage-db";
       description = "access Hackage's package database via Data.Map";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hackage-mirror" = callPackage
    ({ mkDerivation, aws, base, bytestring, cereal, conduit
     , conduit-extra, cryptohash, data-default, directory, exceptions
     , fast-logger, filepath, http-conduit, lifted-async, lifted-base
     , mmorph, monad-control, monad-logger, old-locale
     , optparse-applicative, resourcet, retry, shakespeare, stm, tar
     , template-haskell, temporary, text, thyme, transformers
     , unordered-containers
     }:
     mkDerivation {
       pname = "hackage-mirror";
       version = "0.1.1.1";
       sha256 = "1blfxvxikhfpmr20k5cbn29wzn2d6h8i0s8qq3k1m0qx0vkvl46p";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aws base bytestring cereal conduit conduit-extra cryptohash
         data-default directory exceptions fast-logger filepath http-conduit
         lifted-async lifted-base mmorph monad-control monad-logger
         old-locale resourcet retry shakespeare stm tar template-haskell
         temporary text thyme transformers unordered-containers
       ];
       executableHaskellDepends = [
         base monad-logger optparse-applicative
       ];
       homepage = "http://fpcomplete.com";
       description = "Simple mirroring utility for Hackage";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hackage-security" = callPackage
    ({ mkDerivation, base, base16-bytestring, base64-bytestring
     , bytestring, Cabal, containers, cryptohash-sha256, directory
     , ed25519, filepath, ghc-prim, HUnit, mtl, network, network-uri
     , parsec, pretty, QuickCheck, tar, tasty, tasty-hunit
     , tasty-quickcheck, template-haskell, temporary, time, transformers
     , zlib
     }:
     mkDerivation {
       pname = "hackage-security";
       version = "0.5.2.2";
       sha256 = "0h9wag599x9ysdrgwa643phmpb1xiiwhyh2dix67fji6a5w86yjh";
       revision = "1";
       editedCabalFile = "0hlnkf9an8pmmh4kqn62hwkia58411a12ncl8ix1hzp0lqfnvcmb";
       libraryHaskellDepends = [
         base base16-bytestring base64-bytestring bytestring Cabal
         containers cryptohash-sha256 directory ed25519 filepath ghc-prim
         mtl network network-uri parsec pretty tar template-haskell time
         transformers zlib
       ];
       testHaskellDepends = [
         base bytestring Cabal containers HUnit network-uri QuickCheck tar
         tasty tasty-hunit tasty-quickcheck temporary time zlib
       ];
       homepage = "https://github.com/well-typed/hackage-security";
       description = "Hackage security library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hackage-whatsnew" = callPackage
    ({ mkDerivation, base, Cabal, containers, directory, filepath
     , hackage-db, process, temporary
     }:
     mkDerivation {
       pname = "hackage-whatsnew";
       version = "0.1.0.1";
       sha256 = "0bg0l6y6v0nrjz3ywfjx5jknhn9898q2h04m8q3iz1j5y6pzj80d";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         base Cabal containers directory filepath hackage-db process
         temporary
       ];
       doHaddock = false;
       homepage = "https://github.com/stepcut/hackage-whatsnew";
       description = "Check for differences between working directory and hackage";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hackmanager" = callPackage
    ({ mkDerivation, base, bytestring, Cabal, directory, file-embed
     , Glob, hastache, http-client, http-client-tls, http-types, mtl
     , optparse-applicative, process, text
     }:
     mkDerivation {
       pname = "hackmanager";
       version = "0.1.0.0";
       sha256 = "0iim0mr6sxxjx9krj6mc50aysk9lj15gdffyaqp9pyf8fbvynp4a";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring Cabal directory file-embed Glob hastache
         http-client http-client-tls http-types mtl process text
       ];
       executableHaskellDepends = [ base optparse-applicative text ];
       homepage = "http://github.com/agrafix/hackmanager";
       description = "Generate useful files for Haskell projects";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "haddock-api" = callPackage
    ({ mkDerivation, array, base, bytestring, Cabal, containers
     , deepseq, directory, filepath, ghc, ghc-boot, ghc-paths
     , haddock-library, hspec, QuickCheck, transformers, xhtml
     }:
     mkDerivation {
       pname = "haddock-api";
       version = "2.17.3";
       sha256 = "1isd4d8zniw8v1lyv2sr4ynzv7q66vjhi2qs3qy0h1zfq9ba4dcd";
       revision = "1";
       editedCabalFile = "1y7lgp5vkbaw21qmc5kv71x3gqbqkc1cbn1dxp1b5vvbiqz60csx";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         array base bytestring Cabal containers deepseq directory filepath
         ghc ghc-boot ghc-paths haddock-library transformers xhtml
       ];
       testHaskellDepends = [ base containers ghc hspec QuickCheck ];
       homepage = "http://www.haskell.org/haddock/";
       description = "A documentation-generation tool for Haskell libraries";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "haddock-library" = callPackage
    ({ mkDerivation, base, base-compat, bytestring, deepseq, hspec
     , QuickCheck, transformers
     }:
     mkDerivation {
       pname = "haddock-library";
       version = "1.4.2";
       sha256 = "1p3887dqqn41934ji4af3fa802faq7rykdhxsr5fdh7k9rqz1vg8";
       libraryHaskellDepends = [ base bytestring deepseq transformers ];
       testHaskellDepends = [
         base base-compat bytestring deepseq hspec QuickCheck transformers
       ];
       homepage = "http://www.haskell.org/haddock/";
       description = "Library exposing some functionality of Haddock";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hailgun" = callPackage
    ({ mkDerivation, aeson, base, bytestring, email-validate
     , exceptions, filepath, http-client, http-client-tls, http-types
     , tagsoup, text, time, transformers
     }:
     mkDerivation {
       pname = "hailgun";
       version = "0.4.1.1";
       sha256 = "00sdbn5qisrszxhzhfsbp9djbsla9wd63c1b8n441f9yxjzx516m";
       libraryHaskellDepends = [
         aeson base bytestring email-validate exceptions filepath
         http-client http-client-tls http-types tagsoup text time
         transformers
       ];
       description = "Mailgun REST api interface for Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};
  "half" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "half";
       version = "0.2.2.3";
       sha256 = "0p4sb7vv9cljv48wlx65wgdnkryrk5d6yfh7g4yrm20w1p449hl5";
       libraryHaskellDepends = [ base ];
       homepage = "http://github.com/ekmett/half";
       description = "Half-precision floating-point";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hamlet" = callPackage
    ({ mkDerivation, base, shakespeare }:
     mkDerivation {
       pname = "hamlet";
       version = "1.2.0";
       sha256 = "0rla3ap3malk8j6mh07fr2aqvbscpy743wrfq3skgjv3j4jlpjfi";
       libraryHaskellDepends = [ base shakespeare ];
       doHaddock = false;
       homepage = "http://www.yesodweb.com/book/shakespearean-templates";
       description = "Haml-like template files that are compile-time checked (deprecated)";
       license = stdenv.lib.licenses.mit;
     }) {};
  "handwriting" = callPackage
    ({ mkDerivation, aeson, base, bytestring, containers, directory
     , filepath, lens, lens-aeson, random, split, text, transformers
     , wreq
     }:
     mkDerivation {
       pname = "handwriting";
       version = "0.1.0.3";
       sha256 = "1amysm2ds1prp6przgvqknxr3jn72kidqqh4j4s9pwxj35nl06vy";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base bytestring containers lens lens-aeson split text
         transformers wreq
       ];
       executableHaskellDepends = [
         base bytestring directory filepath random text
       ];
       testHaskellDepends = [ base ];
       homepage = "http://github.com/ismailmustafa/handwriting-haskell#readme";
       description = "API Client for the handwriting.io API.";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hapistrano" = callPackage
    ({ mkDerivation, base, base-compat, directory, either, filepath
     , hspec, mtl, process, temporary, time, time-locale-compat
     , transformers
     }:
     mkDerivation {
       pname = "hapistrano";
       version = "0.2.1.2";
       sha256 = "02gd8j5f006pv8xkrdyn3s6316ggn8nzqbxq37yxdyh26xx0pb93";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base either filepath mtl process time time-locale-compat
         transformers
       ];
       executableHaskellDepends = [ base base-compat ];
       testHaskellDepends = [
         base directory either filepath hspec mtl process temporary
       ];
       homepage = "https://github.com/stackbuilders/hapistrano";
       description = "A deployment library for Haskell applications";
       license = stdenv.lib.licenses.mit;
     }) {};
  "happstack-authenticate" = callPackage
    ({ mkDerivation, acid-state, aeson, authenticate, base
     , base64-bytestring, boomerang, bytestring, containers
     , data-default, email-validate, filepath, happstack-hsp
     , happstack-jmacro, happstack-server, hsp, hsx-jmacro, hsx2hs
     , http-conduit, http-types, ixset-typed, jmacro, jwt, lens
     , mime-mail, mtl, pwstore-purehaskell, random, safecopy
     , shakespeare, text, time, unordered-containers, userid, web-routes
     , web-routes-boomerang, web-routes-happstack, web-routes-hsp
     , web-routes-th
     }:
     mkDerivation {
       pname = "happstack-authenticate";
       version = "2.3.4.7";
       sha256 = "01xn6j7pqc0czdflxwkmnj8hm6z0wwjqpjmal4qbcbzy16m86bbc";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         acid-state aeson authenticate base base64-bytestring boomerang
         bytestring containers data-default email-validate filepath
         happstack-hsp happstack-jmacro happstack-server hsp hsx-jmacro
         hsx2hs http-conduit http-types ixset-typed jmacro jwt lens
         mime-mail mtl pwstore-purehaskell random safecopy shakespeare text
         time unordered-containers userid web-routes web-routes-boomerang
         web-routes-happstack web-routes-hsp web-routes-th
       ];
       homepage = "http://www.happstack.com/";
       description = "Happstack Authentication Library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "happstack-clientsession" = callPackage
    ({ mkDerivation, base, bytestring, cereal, clientsession
     , happstack-server, monad-control, mtl, safecopy, transformers-base
     }:
     mkDerivation {
       pname = "happstack-clientsession";
       version = "7.3.1";
       sha256 = "1sl67wdzaf6j773iapjnc1v2k19ycd18irkdpb4px1a1mq6ym0sv";
       libraryHaskellDepends = [
         base bytestring cereal clientsession happstack-server monad-control
         mtl safecopy transformers-base
       ];
       homepage = "http://happstack.com";
       description = "client-side session data";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "happstack-hsp" = callPackage
    ({ mkDerivation, base, bytestring, happstack-server, harp, hsp
     , hsx2hs, mtl, syb, text, utf8-string
     }:
     mkDerivation {
       pname = "happstack-hsp";
       version = "7.3.7.1";
       sha256 = "05wn21a0wkh0fjb8ikjyj5vy68kn0cfrqy8pivqgly6alpj89j5v";
       libraryHaskellDepends = [
         base bytestring happstack-server harp hsp hsx2hs mtl syb text
         utf8-string
       ];
       homepage = "http://www.happstack.com/";
       description = "Support for using HSP templates in Happstack";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "happstack-jmacro" = callPackage
    ({ mkDerivation, base, base64-bytestring, bytestring, cereal
     , digest, happstack-server, jmacro, text, utf8-string
     , wl-pprint-text
     }:
     mkDerivation {
       pname = "happstack-jmacro";
       version = "7.0.11";
       sha256 = "076zvc7kb68nanjrhgx1n37n9n83s862qcb4aa62idqzv52biii9";
       libraryHaskellDepends = [
         base base64-bytestring bytestring cereal digest happstack-server
         jmacro text utf8-string wl-pprint-text
       ];
       homepage = "http://www.happstack.com/";
       description = "Support for using JMacro with Happstack";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "happstack-server" = callPackage
    ({ mkDerivation, base, base64-bytestring, blaze-html, bytestring
     , containers, directory, exceptions, extensible-exceptions
     , filepath, hslogger, html, HUnit, monad-control, mtl, network
     , network-uri, old-locale, parsec, process, sendfile, syb
     , system-filepath, template-haskell, text, threads, time
     , time-compat, transformers, transformers-base, transformers-compat
     , unix, utf8-string, xhtml, zlib
     }:
     mkDerivation {
       pname = "happstack-server";
       version = "7.4.6.2";
       sha256 = "029vfqlzi6vcf7hm5g2igkmxnw6iy710h56ns1rq0bh2j4290987";
       libraryHaskellDepends = [
         base base64-bytestring blaze-html bytestring containers directory
         exceptions extensible-exceptions filepath hslogger html
         monad-control mtl network network-uri old-locale parsec process
         sendfile syb system-filepath template-haskell text threads time
         time-compat transformers transformers-base transformers-compat unix
         utf8-string xhtml zlib
       ];
       testHaskellDepends = [
         base bytestring containers HUnit parsec zlib
       ];
       homepage = "http://happstack.com";
       description = "Web related tools and services";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "happstack-server-tls" = callPackage
    ({ mkDerivation, base, bytestring, extensible-exceptions
     , happstack-server, hslogger, HsOpenSSL, network, openssl, sendfile
     , time, unix
     }:
     mkDerivation {
       pname = "happstack-server-tls";
       version = "7.1.6.2";
       sha256 = "1mghs9xsqmzlslry0hl8gv0cwk988lg41zwrw11a5wbii285lgmw";
       libraryHaskellDepends = [
         base bytestring extensible-exceptions happstack-server hslogger
         HsOpenSSL network sendfile time unix
       ];
       librarySystemDepends = [ openssl ];
       homepage = "http://www.happstack.com/";
       description = "extend happstack-server with https:// support (TLS/SSL)";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) openssl;};
  "happy" = callPackage
    ({ mkDerivation, array, base, containers, mtl, process }:
     mkDerivation {
       pname = "happy";
       version = "1.19.5";
       sha256 = "1nj353q4z1g186fpjzf0dnsg71qhxqpamx8jy89rjjvv3p0kmw32";
       revision = "1";
       editedCabalFile = "0v24l4ln0gpczy9ahyn93bh9265hbcy686bxkdwq1i5jm981z86n";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [ array base containers mtl ];
       testHaskellDepends = [ base process ];
       doHaddock = false;
       doCheck = false;
       homepage = "http://www.haskell.org/happy/";
       description = "Happy is a parser generator for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "harp" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "harp";
       version = "0.4.2";
       sha256 = "1wwwy7375nbqshwg4i49ypav8a632awsr9xlmjp5q7iqs0v65akz";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/seereason/harp";
       description = "HaRP allows pattern-matching with regular expressions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hashable" = callPackage
    ({ mkDerivation, base, bytestring, criterion, ghc-prim, HUnit
     , integer-gmp, QuickCheck, random, siphash, test-framework
     , test-framework-hunit, test-framework-quickcheck2, text, unix
     }:
     mkDerivation {
       pname = "hashable";
       version = "1.2.4.0";
       sha256 = "1wrwpchksxd1i63ydpqy6jkdzxrb5qsy64rfiv9lik9r1kdp35pv";
       libraryHaskellDepends = [
         base bytestring ghc-prim integer-gmp text
       ];
       testHaskellDepends = [
         base bytestring ghc-prim HUnit QuickCheck random test-framework
         test-framework-hunit test-framework-quickcheck2 text unix
       ];
       benchmarkHaskellDepends = [
         base bytestring criterion ghc-prim integer-gmp siphash text
       ];
       homepage = "http://github.com/tibbe/hashable";
       description = "A class for types that can be converted to a hash value";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hashable-extras" = callPackage
    ({ mkDerivation, base, bifunctors, bytestring, directory, doctest
     , filepath, hashable, transformers, transformers-compat
     }:
     mkDerivation {
       pname = "hashable-extras";
       version = "0.2.3";
       sha256 = "0skby3b541iq1br3nm8yb9lg9l4rw682q5824ildhrg2a0x31q03";
       revision = "1";
       editedCabalFile = "1is856b5l3chqbbgm0767bcqxwyyciwy5jmvpfmqd4m32a1rhw4d";
       libraryHaskellDepends = [
         base bifunctors bytestring hashable transformers
         transformers-compat
       ];
       testHaskellDepends = [ base directory doctest filepath ];
       homepage = "http://github.com/analytics/hashable-extras/";
       description = "Higher-rank Hashable";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hashable-time" = callPackage
    ({ mkDerivation, base, hashable, time }:
     mkDerivation {
       pname = "hashable-time";
       version = "0.2";
       sha256 = "02ibzvdybbii01ppj9n1rb0wfip3svrzl6z9km4hvbkz8smj5dwp";
       revision = "1";
       editedCabalFile = "0d8xfx6dqliqgj0d6lc6ns9k4rgfz3m0gqzsa8cmm6hvdyjsn9dr";
       libraryHaskellDepends = [ base hashable time ];
       description = "Hashable instances for Data.Time";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hashmap" = callPackage
    ({ mkDerivation, base, containers, deepseq, hashable }:
     mkDerivation {
       pname = "hashmap";
       version = "1.3.2";
       sha256 = "15jppbxwqkwccdif789c7gvlfypyd98gnv1p5dh2kx977r19sh01";
       libraryHaskellDepends = [ base containers deepseq hashable ];
       homepage = "https://github.com/foxik/hashmap";
       description = "Persistent containers Map and Set based on hashing";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hashtables" = callPackage
    ({ mkDerivation, base, ghc-prim, hashable, primitive, vector }:
     mkDerivation {
       pname = "hashtables";
       version = "1.2.1.0";
       sha256 = "1b6w9xznk42732vpd8ili60k12yq190xnajgga0iwbdpyg424lgg";
       libraryHaskellDepends = [
         base ghc-prim hashable primitive vector
       ];
       homepage = "http://github.com/gregorycollins/hashtables";
       description = "Mutable hash tables in the ST monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "haskeline" = callPackage
    ({ mkDerivation, base, bytestring, containers, directory, filepath
     , terminfo, transformers, unix
     }:
     mkDerivation {
       pname = "haskeline";
       version = "0.7.3.0";
       sha256 = "12jdpg4nj3ml2pcp652ar2l06arcr4sq6ambf8fn6xq8ymg64vsn";
       libraryHaskellDepends = [
         base bytestring containers directory filepath terminfo transformers
         unix
       ];
       homepage = "http://trac.haskell.org/haskeline";
       description = "A command-line interface for user input, written in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "haskell-gi" = callPackage
    ({ mkDerivation, base, bytestring, Cabal, containers, directory
     , filepath, glib, gobjectIntrospection, haskell-gi-base, mtl
     , pretty-show, process, safe, text, transformers, xdg-basedir
     , xml-conduit
     }:
     mkDerivation {
       pname = "haskell-gi";
       version = "0.18";
       sha256 = "0qli4yhx05jwc6i05p1bc3fnzxhi76l7ynzycyyzrl4k83pvvnn6";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring Cabal containers directory filepath haskell-gi-base
         mtl pretty-show process safe text transformers xdg-basedir
         xml-conduit
       ];
       libraryPkgconfigDepends = [ glib gobjectIntrospection ];
       executableHaskellDepends = [
         base containers directory filepath haskell-gi-base pretty-show text
       ];
       homepage = "https://github.com/haskell-gi/haskell-gi";
       description = "Generate Haskell bindings for GObject Introspection capable libraries";
       license = stdenv.lib.licenses.lgpl21;
     }) {inherit (pkgs) glib; inherit (pkgs) gobjectIntrospection;};
  "haskell-gi-base" = callPackage
    ({ mkDerivation, base, bytestring, containers, glib, text }:
     mkDerivation {
       pname = "haskell-gi-base";
       version = "0.18.4";
       sha256 = "05lfpbnsa52b9af080dmvw87dwlxcbhf9hs30sgx0s2nnv99pys5";
       libraryHaskellDepends = [ base bytestring containers text ];
       libraryPkgconfigDepends = [ glib ];
       homepage = "https://github.com/haskell-gi/haskell-gi-base";
       description = "Foundation for libraries generated by haskell-gi";
       license = stdenv.lib.licenses.lgpl21;
     }) {inherit (pkgs) glib;};
  "haskell-lexer" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "haskell-lexer";
       version = "1.0.1";
       sha256 = "0rj3r1pk88hh3sk3mj61whp8czz5kpxhbc78xlr04bxwqjrjmm6p";
       libraryHaskellDepends = [ base ];
       description = "A fully compliant Haskell 98 lexer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "haskell-names" = callPackage
    ({ mkDerivation, aeson, base, bytestring, containers
     , data-lens-light, filemanip, filepath, haskell-src-exts, mtl
     , pretty-show, tasty, tasty-golden, transformers
     , traverse-with-class, uniplate
     }:
     mkDerivation {
       pname = "haskell-names";
       version = "0.7.0";
       sha256 = "1wpsqmpjjnavk8xbpfhlf2p41wrfpadndwbi7m428vjja4m2nn60";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson base bytestring containers data-lens-light filepath
         haskell-src-exts mtl transformers traverse-with-class uniplate
       ];
       testHaskellDepends = [
         base containers filemanip filepath haskell-src-exts mtl pretty-show
         tasty tasty-golden traverse-with-class
       ];
       doCheck = false;
       homepage = "http://documentup.com/haskell-suite/haskell-names";
       description = "Name resolution library for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "haskell-neo4j-client" = callPackage
    ({ mkDerivation, aeson, base, bytestring, Cabal, containers
     , data-default, hashable, HTTP, http-client, http-client-tls
     , http-conduit, http-types, HUnit, lifted-base, mtl, network-uri
     , QuickCheck, resourcet, scientific, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     , test-framework-th, text, transformers, transformers-base
     , transformers-compat, unordered-containers, vector
     }:
     mkDerivation {
       pname = "haskell-neo4j-client";
       version = "0.3.2.4";
       sha256 = "1hl1qg4cy70c5c22dfqig3cj60nq1lhnnypcgj44pgfqnqlsbvih";
       libraryHaskellDepends = [
         aeson base bytestring containers data-default hashable HTTP
         http-client http-client-tls http-conduit http-types lifted-base mtl
         network-uri resourcet scientific text transformers
         transformers-base transformers-compat unordered-containers vector
       ];
       testHaskellDepends = [
         aeson base bytestring Cabal data-default hashable HTTP http-client
         http-client-tls http-conduit http-types HUnit lifted-base mtl
         network-uri QuickCheck resourcet scientific test-framework
         test-framework-hunit test-framework-quickcheck2 test-framework-th
         text transformers transformers-base transformers-compat
         unordered-containers vector
       ];
       doCheck = false;
       homepage = "https://github.com/asilvestre/haskell-neo4j-rest-client";
       description = "A Haskell neo4j client";
       license = stdenv.lib.licenses.mit;
     }) {};
  "haskell-packages" = callPackage
    ({ mkDerivation, aeson, base, bytestring, Cabal, containers
     , deepseq, directory, filepath, haskell-src-exts, hse-cpp, mtl
     , optparse-applicative, tagged, transformers, transformers-compat
     }:
     mkDerivation {
       pname = "haskell-packages";
       version = "0.4";
       sha256 = "088hlcmh1hi51gf0kiifrgpnw1gs6rms3mk08lqdl472bi8zb6ic";
       libraryHaskellDepends = [
         aeson base bytestring Cabal containers deepseq directory filepath
         haskell-src-exts hse-cpp mtl optparse-applicative tagged
         transformers transformers-compat
       ];
       homepage = "http://documentup.com/haskell-suite/haskell-packages";
       description = "Haskell suite library for package management and integration with Cabal";
       license = stdenv.lib.licenses.mit;
     }) {};
  "haskell-spacegoo" = callPackage
    ({ mkDerivation, aeson, base, bytestring, conduit, conduit-extra
     , mtl, pretty, pretty-show, text, vector, vector-space
     }:
     mkDerivation {
       pname = "haskell-spacegoo";
       version = "0.2.0.1";
       sha256 = "0g6ximrv5jwibklkyr74vy3qkx8mv4xbpc7f6w1qg9gnlylzmcqy";
       libraryHaskellDepends = [
         aeson base bytestring conduit conduit-extra mtl pretty pretty-show
         text vector vector-space
       ];
       description = "Client API for Rocket Scissor Spacegoo";
       license = stdenv.lib.licenses.mit;
     }) {};
  "haskell-src" = callPackage
    ({ mkDerivation, array, base, happy, pretty, syb }:
     mkDerivation {
       pname = "haskell-src";
       version = "1.0.2.0";
       sha256 = "19lilhpwnjb7cks9fq1ipnc8f7dwxy0ri3dgjkdxs3i355byw99a";
       libraryHaskellDepends = [ array base pretty syb ];
       libraryToolDepends = [ happy ];
       description = "Support for manipulating Haskell source code";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "haskell-src-exts" = callPackage
    ({ mkDerivation, array, base, containers, cpphs, directory
     , filepath, ghc-prim, happy, mtl, pretty, pretty-show, smallcheck
     , syb, tasty, tasty-golden, tasty-smallcheck
     }:
     mkDerivation {
       pname = "haskell-src-exts";
       version = "1.17.1";
       sha256 = "1g98amhn2b76g38y3dc55nny5812gqyqmswl1fniaiai41vm8p5s";
       revision = "1";
       editedCabalFile = "02zar6rnhk078ygs8vjrzc12mwyix10y9ikxfz3y3gmllzr4hwn0";
       libraryHaskellDepends = [ array base cpphs ghc-prim pretty ];
       libraryToolDepends = [ happy ];
       testHaskellDepends = [
         base containers directory filepath mtl pretty-show smallcheck syb
         tasty tasty-golden tasty-smallcheck
       ];
       doCheck = false;
       homepage = "https://github.com/haskell-suite/haskell-src-exts";
       description = "Manipulating Haskell source: abstract syntax, lexer, parser, and pretty-printer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "haskell-src-meta" = callPackage
    ({ mkDerivation, base, haskell-src-exts, pretty, syb
     , template-haskell, th-orphans
     }:
     mkDerivation {
       pname = "haskell-src-meta";
       version = "0.6.0.14";
       sha256 = "1j90xc74wf6r1f3ig4saynnmsifb13cmq8h0r1kmcscq4cwj94bn";
       libraryHaskellDepends = [
         base haskell-src-exts pretty syb template-haskell th-orphans
       ];
       description = "Parse source to template-haskell abstract syntax";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "haskintex" = callPackage
    ({ mkDerivation, base, binary, bytestring, containers, directory
     , filepath, haskell-src-exts, HaTeX, hint, parsec, process, text
     , transformers
     }:
     mkDerivation {
       pname = "haskintex";
       version = "0.6.0.1";
       sha256 = "0i0gx52mmf7wjbzdjb9zsxrwh840kxnnnr9br1f6ds3p1lx4cicv";
       revision = "1";
       editedCabalFile = "1izqirnyamfsbwkw2lv85jqijs5lcrhih85xszh6yk3mirsf45la";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base binary bytestring containers directory filepath
         haskell-src-exts HaTeX hint parsec process text transformers
       ];
       executableHaskellDepends = [ base ];
       homepage = "http://daniel-diaz.github.io/projects/haskintex";
       description = "Haskell Evaluation inside of LaTeX code";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "haskoin-core" = callPackage
    ({ mkDerivation, aeson, base, base16-bytestring, byteable
     , bytestring, cereal, conduit, containers, cryptohash, deepseq
     , either, entropy, HUnit, largeword, mtl, murmur3, network, pbkdf
     , QuickCheck, safe, scientific, secp256k1, split
     , string-conversions, test-framework, test-framework-hunit
     , test-framework-quickcheck2, text, time, unordered-containers
     , vector
     }:
     mkDerivation {
       pname = "haskoin-core";
       version = "0.4.0";
       sha256 = "1wggwcg9518wgmci6dby0xzp8njqr3nar0gh7a3pllmkk3yq47qm";
       libraryHaskellDepends = [
         aeson base base16-bytestring byteable bytestring cereal conduit
         containers cryptohash deepseq either entropy largeword mtl murmur3
         network pbkdf QuickCheck secp256k1 split string-conversions text
         time vector
       ];
       testHaskellDepends = [
         aeson base bytestring cereal containers HUnit largeword mtl
         QuickCheck safe scientific secp256k1 split string-conversions
         test-framework test-framework-hunit test-framework-quickcheck2 text
         unordered-containers vector
       ];
       doCheck = false;
       homepage = "http://github.com/haskoin/haskoin";
       description = "Implementation of the core Bitcoin protocol features";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "hasql" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, base-prelude, bytestring
     , bytestring-tree-builder, contravariant, contravariant-extras
     , criterion, data-default-class, deepseq, dlist, either, hashable
     , hashtables, loch-th, mtl, placeholders, postgresql-binary
     , postgresql-libpq, profunctors, QuickCheck, quickcheck-instances
     , rebase, scientific, semigroups, tasty, tasty-hunit
     , tasty-quickcheck, tasty-smallcheck, text, time, transformers
     , uuid, vector
     }:
     mkDerivation {
       pname = "hasql";
       version = "0.19.15.2";
       sha256 = "0d5vr1avgvl5asw1v73ppw84pfxxn8gsav0ry4c4yi137mhvs9dh";
       libraryHaskellDepends = [
         aeson attoparsec base base-prelude bytestring
         bytestring-tree-builder contravariant contravariant-extras
         data-default-class dlist either hashable hashtables loch-th mtl
         placeholders postgresql-binary postgresql-libpq profunctors
         scientific semigroups text time transformers uuid vector
       ];
       testHaskellDepends = [
         data-default-class QuickCheck quickcheck-instances rebase tasty
         tasty-hunit tasty-quickcheck tasty-smallcheck
       ];
       benchmarkHaskellDepends = [
         base base-prelude bytestring contravariant contravariant-extras
         criterion data-default-class deepseq dlist either hashable
         profunctors scientific text time transformers uuid vector
       ];
       doCheck = false;
       homepage = "https://github.com/nikita-volkov/hasql";
       description = "An efficient PostgreSQL driver and a flexible mapping API";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hastache" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring, containers
     , directory, filepath, ieee754, mtl, process, syb, text
     , transformers
     }:
     mkDerivation {
       pname = "hastache";
       version = "0.6.1";
       sha256 = "0r5l8k157pgvz1ck4lfid5x05f2s0nlmwf33f4fj09b1kmk8k3wc";
       revision = "4";
       editedCabalFile = "1n3bzlkfd36q7qsaglw2w8p43sx4pc6xwhhjv3ksm5x8msriwrhh";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base blaze-builder bytestring containers directory filepath ieee754
         mtl syb text transformers
       ];
       executableHaskellDepends = [
         base blaze-builder bytestring containers directory filepath ieee754
         mtl process syb text transformers
       ];
       doCheck = false;
       homepage = "http://github.com/lymar/hastache";
       description = "Haskell implementation of Mustache templates";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hasty-hamiltonian" = callPackage
    ({ mkDerivation, ad, base, lens, mcmc-types, mwc-probability, pipes
     , primitive, transformers
     }:
     mkDerivation {
       pname = "hasty-hamiltonian";
       version = "1.1.5";
       sha256 = "19izza5iwb07d57911irsd876a89529219m7acmvqvna6ccjv9nk";
       libraryHaskellDepends = [
         base lens mcmc-types mwc-probability pipes primitive transformers
       ];
       testHaskellDepends = [ ad base mwc-probability ];
       homepage = "http://github.com/jtobin/hasty-hamiltonian";
       description = "Speedy traversal through parameter space";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hatex-guide" = callPackage
    ({ mkDerivation, base, blaze-html, directory, filepath, HaTeX
     , parsec, text, time, transformers
     }:
     mkDerivation {
       pname = "hatex-guide";
       version = "1.3.1.6";
       sha256 = "0vd5bmgs0nfk5y0d0a8975j3b15q3d6zgmnv3j4q9rnmjigwzmvs";
       libraryHaskellDepends = [
         base blaze-html directory filepath HaTeX parsec text time
         transformers
       ];
       description = "HaTeX User's Guide";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hbayes" = callPackage
    ({ mkDerivation, array, base, binary, boxes, containers, directory
     , filepath, gamma, HUnit, mtl, mwc-random, parsec, pretty
     , QuickCheck, random, split, statistics, test-framework
     , test-framework-hunit, test-framework-quickcheck2, vector
     }:
     mkDerivation {
       pname = "hbayes";
       version = "0.5.2";
       sha256 = "1x8nwh3ba9qvrbcxd2fdb3lv9b94w6lkvdg4vrqm7vbns9yyk162";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         array base binary boxes containers directory filepath gamma HUnit
         mtl mwc-random parsec pretty QuickCheck random split statistics
         test-framework test-framework-hunit test-framework-quickcheck2
         vector
       ];
       testHaskellDepends = [
         array base binary boxes containers directory filepath gamma HUnit
         mtl mwc-random parsec pretty QuickCheck random split statistics
         test-framework test-framework-hunit test-framework-quickcheck2
         vector
       ];
       homepage = "http://www.alpheccar.org";
       description = "Bayesian Networks";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hbeanstalk" = callPackage
    ({ mkDerivation, attoparsec, base, blaze-builder, bytestring
     , containers, network
     }:
     mkDerivation {
       pname = "hbeanstalk";
       version = "0.2.4";
       sha256 = "13xcia1nnayhr22zi1wzgn8qs403ib4n2zikpxd3xnzy33yrgbzy";
       libraryHaskellDepends = [
         attoparsec base blaze-builder bytestring containers network
       ];
       homepage = "http://github.com/scsibug/hbeanstalk/";
       description = "Client for the beanstalkd workqueue service";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hdaemonize" = callPackage
    ({ mkDerivation, base, bytestring, extensible-exceptions, filepath
     , hsyslog, mtl, unix
     }:
     mkDerivation {
       pname = "hdaemonize";
       version = "0.5.2";
       sha256 = "0lm08hf046xx5y2xmwbgvwaf7i84j4kcz0djk4idxxpvb2cha88z";
       libraryHaskellDepends = [
         base bytestring extensible-exceptions filepath hsyslog mtl unix
       ];
       homepage = "http://github.com/greydot/hdaemonize";
       description = "Library to handle the details of writing daemons for UNIX";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hdevtools" = callPackage
    ({ mkDerivation, base, Cabal, cmdargs, directory, filepath, ghc
     , ghc-boot, ghc-paths, network, process, syb, time, transformers
     , unix
     }:
     mkDerivation {
       pname = "hdevtools";
       version = "0.1.5.0";
       sha256 = "1rq41mlvfsjqf21hnv5jslnfk39z52p0a6a0yk2ng8q971pj70gd";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         base Cabal cmdargs directory filepath ghc ghc-boot ghc-paths
         network process syb time transformers unix
       ];
       doHaddock = false;
       homepage = "https://github.com/hdevtools/hdevtools/";
       description = "Persistent GHC powered background server for FAST haskell development tools";
       license = stdenv.lib.licenses.mit;
     }) {};
  "heap" = callPackage
    ({ mkDerivation, base, QuickCheck }:
     mkDerivation {
       pname = "heap";
       version = "1.0.3";
       sha256 = "00plmd5b8dlgb8324h1dbd168apfcx3hkv65rhi463a8lff7xmcv";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base QuickCheck ];
       description = "Heaps in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "heaps" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "heaps";
       version = "0.3.3";
       sha256 = "0dqmmv51sxrwj6qliji1idpm0nc1w52kjvcvfj37gjnqwv9miqq4";
       libraryHaskellDepends = [ base ];
       doCheck = false;
       homepage = "http://github.com/ekmett/heaps/";
       description = "Asymptotically optimal Brodal/Okasaki heaps";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hebrew-time" = callPackage
    ({ mkDerivation, base, HUnit, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2, time
     }:
     mkDerivation {
       pname = "hebrew-time";
       version = "0.1.1";
       sha256 = "0ckridxf4rvhhp0k1mckbbbpzfs32l4mwg7n9mrmsggldpl7x6f7";
       libraryHaskellDepends = [ base time ];
       testHaskellDepends = [
         base HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2 time
       ];
       homepage = "https://github.com/snoyberg/hebrew-time";
       description = "Hebrew dates and prayer times";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hedis" = callPackage
    ({ mkDerivation, async, base, bytestring, bytestring-lexing
     , deepseq, HUnit, mtl, network, resource-pool, scanner
     , slave-thread, stm, test-framework, test-framework-hunit, text
     , time, unordered-containers, vector
     }:
     mkDerivation {
       pname = "hedis";
       version = "0.9.5";
       sha256 = "0w8vipprklczm0zgag5m6w61ar9x8rr290w9gja39w94i8gld7gy";
       libraryHaskellDepends = [
         async base bytestring bytestring-lexing deepseq mtl network
         resource-pool scanner stm text time unordered-containers vector
       ];
       testHaskellDepends = [
         async base bytestring HUnit mtl slave-thread stm test-framework
         test-framework-hunit text time
       ];
       benchmarkHaskellDepends = [ base mtl time ];
       doCheck = false;
       homepage = "https://github.com/informatikr/hedis";
       description = "Client library for the Redis datastore: supports full command set, pipelining";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "here" = callPackage
    ({ mkDerivation, base, haskell-src-meta, mtl, parsec
     , template-haskell
     }:
     mkDerivation {
       pname = "here";
       version = "1.2.9";
       sha256 = "0f7zr2np52zy10jgbmb501imh4dfbb2hvbfwljvi995zkf47vs66";
       libraryHaskellDepends = [
         base haskell-src-meta mtl parsec template-haskell
       ];
       homepage = "https://github.com/tmhedberg/here";
       description = "Here docs & interpolated strings via quasiquotation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "heredoc" = callPackage
    ({ mkDerivation, base, template-haskell }:
     mkDerivation {
       pname = "heredoc";
       version = "0.2.0.0";
       sha256 = "0h0g2f7yscwl1ba1yn3jnz2drvd6ns9m910hwlmq3kdq3k39y3f9";
       libraryHaskellDepends = [ base template-haskell ];
       homepage = "http://hackage.haskell.org/package/heredoc";
       description = "multi-line string / here document using QuasiQuotes";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "hex" = callPackage
    ({ mkDerivation, base, bytestring }:
     mkDerivation {
       pname = "hex";
       version = "0.1.2";
       sha256 = "1v31xiaivrrn0q2jz8919wvkjplv1kxna5ajhsj701fqxm1i5vhj";
       libraryHaskellDepends = [ base bytestring ];
       description = "Convert strings into hexadecimal and back";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hexstring" = callPackage
    ({ mkDerivation, aeson, base, base16-bytestring, binary, bytestring
     , hspec, text
     }:
     mkDerivation {
       pname = "hexstring";
       version = "0.11.1";
       sha256 = "0509h2fhrpcsjf7gffychf700xca4a5l937jfgdzywpm4bzdpn20";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson base base16-bytestring binary bytestring text
       ];
       testHaskellDepends = [ base binary bytestring hspec text ];
       homepage = "http://www.leonmergen.com/opensource.html";
       description = "Fast and safe representation of a hex string";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hflags" = callPackage
    ({ mkDerivation, base, containers, template-haskell, text }:
     mkDerivation {
       pname = "hflags";
       version = "0.4.2";
       sha256 = "1i9c1xszaymiqxh3ss7601cw8m8zpzvzg3k92jvdj4a0gxihvlrc";
       revision = "1";
       editedCabalFile = "1kasg8y0ia3q2iy6vmjvwwn9dyxzy59s6s9chwxhdgsvncx38ra1";
       libraryHaskellDepends = [ base containers template-haskell text ];
       homepage = "http://github.com/errge/hflags";
       description = "Command line flag parser, very similar to Google's gflags";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "hformat" = callPackage
    ({ mkDerivation, base, base-unicode-symbols, hspec, text }:
     mkDerivation {
       pname = "hformat";
       version = "0.1.0.1";
       sha256 = "034ds3bcmyri1zfnf2jbv0739mklp1m2pan3x3zg4f6kny8hv0v2";
       libraryHaskellDepends = [ base base-unicode-symbols text ];
       testHaskellDepends = [ base base-unicode-symbols hspec text ];
       homepage = "http://github.com/mvoidex/hformat";
       description = "Simple Haskell formatting";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hfsevents" = callPackage
    ({ mkDerivation, base, bytestring, cereal, Cocoa, CoreServices, mtl
     , text, unix
     }:
     mkDerivation {
       pname = "hfsevents";
       version = "0.1.6";
       sha256 = "019zbnvfd866ch49gax0c1c93zv92142saim1hrgypz5lprz7hvl";
       libraryHaskellDepends = [ base bytestring cereal mtl text unix ];
       librarySystemDepends = [ Cocoa ];
       libraryToolDepends = [ CoreServices ];
       homepage = "http://github.com/luite/hfsevents";
       description = "File/folder watching for OS X";
       license = stdenv.lib.licenses.bsd3;
       platforms = [ "x86_64-darwin" ];
     }) {inherit (pkgs.darwin.apple_sdk.frameworks) Cocoa;
         inherit (pkgs.darwin.apple_sdk.frameworks) CoreServices;};
  "hgettext" = callPackage
    ({ mkDerivation, base, Cabal, containers, directory, filepath
     , haskell-src-exts, process, setlocale, uniplate
     }:
     mkDerivation {
       pname = "hgettext";
       version = "0.1.30";
       sha256 = "1pgzyd1nqzl7g88pcw7sncija5sd2k4zif9d8qfw96cw6m6kli96";
       revision = "2";
       editedCabalFile = "1j65m70j7j64an9psqzhasrqdrmpg4p1h4hd1kvinygvg5gg3bxj";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base Cabal containers directory filepath process setlocale
       ];
       executableHaskellDepends = [ base haskell-src-exts uniplate ];
       homepage = "https://github.com/vasylp/hgettext";
       description = "Bindings to libintl.h (gettext, bindtextdomain)";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hid" = callPackage
    ({ mkDerivation, base, bytestring, c2hs, hidapi, transformers }:
     mkDerivation {
       pname = "hid";
       version = "0.2.2";
       sha256 = "1lkkhw85cprflh1r807y2bf3m0l8nz9x0ihqs7x6qqkip1icbm8d";
       libraryHaskellDepends = [ base bytestring transformers ];
       libraryPkgconfigDepends = [ hidapi ];
       libraryToolDepends = [ c2hs ];
       homepage = "https://github.com/phaazon/hid";
       description = "Interface to hidapi library";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) hidapi;};
  "hidapi" = callPackage
    ({ mkDerivation, base, bytestring, deepseq, deepseq-generics
     , systemd
     }:
     mkDerivation {
       pname = "hidapi";
       version = "0.1.4";
       sha256 = "0xbar7a0krfdj9aks9yqwv930ndikd0n6r6sm1ci97qg69cflh7w";
       libraryHaskellDepends = [
         base bytestring deepseq deepseq-generics
       ];
       librarySystemDepends = [ systemd ];
       homepage = "https://github.com/vahokif/haskell-hidapi";
       description = "Haskell bindings to HIDAPI";
       license = stdenv.lib.licenses.mit;
     }) {systemd = null;};
  "hierarchical-clustering" = callPackage
    ({ mkDerivation, array, base, containers, hspec, HUnit, QuickCheck
     }:
     mkDerivation {
       pname = "hierarchical-clustering";
       version = "0.4.6";
       sha256 = "1cfcrnxqczqzqgpyipsw9dwfw1j75zd11vpd12i533f3p44pzwbm";
       libraryHaskellDepends = [ array base containers ];
       testHaskellDepends = [ base hspec HUnit QuickCheck ];
       description = "Fast algorithms for single, average/UPGMA and complete linkage clustering";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "highlighting-kate" = callPackage
    ({ mkDerivation, base, blaze-html, containers, Diff, directory
     , filepath, mtl, parsec, process, regex-pcre-builtin, utf8-string
     }:
     mkDerivation {
       pname = "highlighting-kate";
       version = "0.6.3";
       sha256 = "03c4flh4h1jd48bx0qmplax3q8w6wj1dhbh6j0xhaf5h95fbinki";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base blaze-html containers mtl parsec regex-pcre-builtin
         utf8-string
       ];
       executableHaskellDepends = [ base blaze-html containers filepath ];
       testHaskellDepends = [
         base blaze-html containers Diff directory filepath process
       ];
       homepage = "http://github.com/jgm/highlighting-kate";
       description = "Syntax highlighting";
       license = "GPL";
     }) {};
  "hindent" = callPackage
    ({ mkDerivation, base, containers, criterion, deepseq, descriptive
     , directory, ghc-prim, haskell-src-exts, hspec, monad-loops, mtl
     , text, transformers
     }:
     mkDerivation {
       pname = "hindent";
       version = "4.6.4";
       sha256 = "1ksdirn46n1b7hfa0j8sv5rm5599cax9kdmm7sq692jvf2c19z16";
       revision = "3";
       editedCabalFile = "0dggiv76b6nj1lgvmihnb2174knpf5kzdafppmcsds9bjh2w7sw6";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base containers haskell-src-exts monad-loops mtl text transformers
       ];
       executableHaskellDepends = [
         base descriptive directory ghc-prim haskell-src-exts text
       ];
       testHaskellDepends = [
         base directory haskell-src-exts hspec monad-loops mtl text
       ];
       benchmarkHaskellDepends = [
         base criterion deepseq directory ghc-prim haskell-src-exts text
       ];
       doCheck = false;
       homepage = "http://www.github.com/chrisdone/hindent";
       description = "Extensible Haskell pretty printer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hinotify" = callPackage
    ({ mkDerivation, async, base, containers, directory, unix }:
     mkDerivation {
       pname = "hinotify";
       version = "0.3.9";
       sha256 = "16fzql0s34my9k1ib4rdjf9fhhijkmmbrvi148f865m51160wj7j";
       libraryHaskellDepends = [ async base containers directory unix ];
       testHaskellDepends = [ base directory ];
       homepage = "https://github.com/kolmodin/hinotify.git";
       description = "Haskell binding to inotify";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hint" = callPackage
    ({ mkDerivation, base, directory, exceptions, extensible-exceptions
     , filepath, ghc, ghc-paths, HUnit, mtl, random, unix
     }:
     mkDerivation {
       pname = "hint";
       version = "0.6.0";
       sha256 = "1f8s8a2a8wgamfvq0pj4ivzc9ywkx86d2milr5djc0wfvq73lgfw";
       libraryHaskellDepends = [
         base directory exceptions filepath ghc ghc-paths mtl random unix
       ];
       testHaskellDepends = [
         base directory exceptions extensible-exceptions filepath HUnit
       ];
       homepage = "https://github.com/mvdan/hint";
       description = "Runtime Haskell interpreter (GHC API wrapper)";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hip" = callPackage
    ({ mkDerivation, base, bytestring, Chart, Chart-diagrams, colour
     , deepseq, directory, filepath, hspec, JuicyPixels, netpbm
     , primitive, process, QuickCheck, repa, temporary, vector
     }:
     mkDerivation {
       pname = "hip";
       version = "1.2.0.0";
       sha256 = "10yhgnhnvzygzcgp2x1562q1qn4q06dx1ar1pw57w6an9c9pja6p";
       libraryHaskellDepends = [
         base bytestring Chart Chart-diagrams colour deepseq directory
         filepath JuicyPixels netpbm primitive process repa temporary vector
       ];
       testHaskellDepends = [ base hspec QuickCheck ];
       homepage = "https://github.com/lehins/hip";
       description = "Haskell Image Processing (HIP) Library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "histogram-fill" = callPackage
    ({ mkDerivation, base, criterion, deepseq, ghc-prim
     , monad-primitive, mwc-random, primitive, vector
     }:
     mkDerivation {
       pname = "histogram-fill";
       version = "0.8.4.1";
       sha256 = "0zamqza4ky90l27sjgv55rp7s1g4hs0k0qn2qza7lfwk991ijn9q";
       libraryHaskellDepends = [
         base deepseq ghc-prim monad-primitive primitive vector
       ];
       benchmarkHaskellDepends = [ base criterion mwc-random vector ];
       homepage = "https://github.com/Shimuuar/histogram-fill/";
       description = "Library for histograms creation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hit" = callPackage
    ({ mkDerivation, attoparsec, base, byteable, bytedump, bytestring
     , containers, cryptohash, hourglass, mtl, parsec, patience, random
     , system-fileio, system-filepath, tasty, tasty-quickcheck
     , unix-compat, utf8-string, vector, zlib, zlib-bindings
     }:
     mkDerivation {
       pname = "hit";
       version = "0.6.3";
       sha256 = "0wg44vgd5jzi0r0vg8k5zrvlr7rcrb4nrp862c6y991941qv71nv";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         attoparsec base byteable bytestring containers cryptohash hourglass
         mtl parsec patience random system-fileio system-filepath
         unix-compat utf8-string vector zlib zlib-bindings
       ];
       testHaskellDepends = [
         base bytedump bytestring hourglass tasty tasty-quickcheck
       ];
       homepage = "http://github.com/vincenthz/hit";
       description = "Git operations in haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hjsmin" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring, containers
     , language-javascript, optparse-applicative, text
     }:
     mkDerivation {
       pname = "hjsmin";
       version = "0.2.0.2";
       sha256 = "112lj2jgbcfdnr0hxc2cfxpxzxy9qyid04pbk0wwcqk977957hdy";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base blaze-builder bytestring containers language-javascript text
       ];
       executableHaskellDepends = [
         base blaze-builder bytestring containers language-javascript
         optparse-applicative text
       ];
       homepage = "http://github.com/erikd/hjsmin";
       description = "Haskell implementation of a javascript minifier";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hjsonpointer" = callPackage
    ({ mkDerivation, aeson, base, hspec, http-types, QuickCheck, text
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "hjsonpointer";
       version = "1.0.0.2";
       sha256 = "1wp8wq4lyqgpp3yb1vq5wcjpc4r0a31sgdh3p6g1q7nih5bngqlq";
       libraryHaskellDepends = [
         aeson base QuickCheck text unordered-containers vector
       ];
       testHaskellDepends = [
         aeson base hspec http-types QuickCheck text unordered-containers
         vector
       ];
       homepage = "https://github.com/seagreen/hjsonpointer";
       description = "JSON Pointer library";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hjsonschema" = callPackage
    ({ mkDerivation, aeson, async, base, bytestring, containers
     , directory, file-embed, filepath, hjsonpointer, http-client
     , http-types, HUnit, pcre-heavy, profunctors, QuickCheck
     , scientific, semigroups, tasty, tasty-hunit, tasty-quickcheck
     , text, unordered-containers, vector, wai-app-static, warp
     }:
     mkDerivation {
       pname = "hjsonschema";
       version = "1.1.0.1";
       sha256 = "0kc2lcnsf2l6xrm0ilsx8y6bnp0s406nrd9m2jnj12p6mjc5zs2j";
       libraryHaskellDepends = [
         aeson base bytestring containers file-embed filepath hjsonpointer
         http-client http-types pcre-heavy profunctors QuickCheck scientific
         semigroups text unordered-containers vector
       ];
       testHaskellDepends = [
         aeson async base bytestring directory filepath hjsonpointer HUnit
         profunctors QuickCheck semigroups tasty tasty-hunit
         tasty-quickcheck text unordered-containers vector wai-app-static
         warp
       ];
       doCheck = false;
       homepage = "https://github.com/seagreen/hjsonschema";
       description = "JSON Schema library";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hledger" = callPackage
    ({ mkDerivation, base, base-compat, bytestring, cmdargs, containers
     , criterion, csv, data-default, directory, file-embed, filepath
     , hashable, haskeline, hledger-lib, html, HUnit, megaparsec, mtl
     , mtl-compat, old-time, parsec, pretty-show, process, regex-tdfa
     , safe, shakespeare, split, tabular, temporary, terminfo
     , test-framework, test-framework-hunit, text, time, timeit
     , transformers, unordered-containers, utf8-string, wizards
     }:
     mkDerivation {
       pname = "hledger";
       version = "1.0.1";
       sha256 = "013ikg1scasmma1slrh75zhmwqhvyd6yl92cf59mmxgvxcmy8pc3";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base base-compat bytestring cmdargs containers csv data-default
         directory file-embed filepath hashable haskeline hledger-lib HUnit
         megaparsec mtl mtl-compat old-time pretty-show process regex-tdfa
         safe shakespeare split tabular temporary terminfo text time
         transformers unordered-containers utf8-string wizards
       ];
       executableHaskellDepends = [
         base base-compat bytestring cmdargs containers csv data-default
         directory file-embed filepath haskeline hledger-lib HUnit mtl
         mtl-compat old-time parsec pretty-show process regex-tdfa safe
         shakespeare split tabular temporary terminfo text time
         unordered-containers utf8-string wizards
       ];
       testHaskellDepends = [
         base base-compat bytestring cmdargs containers csv data-default
         directory file-embed filepath haskeline hledger-lib HUnit mtl
         mtl-compat old-time parsec pretty-show process regex-tdfa safe
         shakespeare split tabular temporary terminfo test-framework
         test-framework-hunit text time unordered-containers utf8-string
         wizards
       ];
       benchmarkHaskellDepends = [
         base base-compat criterion directory file-embed filepath
         hledger-lib html pretty-show process tabular temporary time timeit
       ];
       homepage = "http://hledger.org";
       description = "Command-line interface for the hledger accounting tool";
       license = "GPL";
     }) {};
  "hledger-interest" = callPackage
    ({ mkDerivation, base, Cabal, Decimal, hledger-lib, mtl, text, time
     }:
     mkDerivation {
       pname = "hledger-interest";
       version = "1.5.1";
       sha256 = "19hdz6lj0kxy59vzkyqlwk20l8k08w618nz02xcfflwd9r7ka0ha";
       isLibrary = false;
       isExecutable = true;
       enableSeparateDataOutput = true;
       executableHaskellDepends = [
         base Cabal Decimal hledger-lib mtl text time
       ];
       doHaddock = false;
       homepage = "http://github.com/peti/hledger-interest";
       description = "computes interest for a given account";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hledger-lib" = callPackage
    ({ mkDerivation, array, base, base-compat, blaze-markup, bytestring
     , cmdargs, containers, csv, data-default, Decimal, deepseq
     , directory, doctest, filepath, Glob, HUnit, megaparsec, mtl
     , mtl-compat, old-time, parsec, pretty-show, regex-tdfa, safe
     , semigroups, split, test-framework, test-framework-hunit, text
     , time, transformers, uglymemo, utf8-string
     }:
     mkDerivation {
       pname = "hledger-lib";
       version = "1.0.1";
       sha256 = "1ila4kj23ngvrqx2pkhib4s0y99ys6qkq4nx7yfmmrx4b4ccac4s";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         array base base-compat blaze-markup bytestring cmdargs containers
         csv data-default Decimal deepseq directory filepath HUnit
         megaparsec mtl mtl-compat old-time parsec pretty-show regex-tdfa
         safe semigroups split text time transformers uglymemo utf8-string
       ];
       testHaskellDepends = [
         array base base-compat blaze-markup bytestring cmdargs containers
         csv data-default Decimal deepseq directory doctest filepath Glob
         HUnit megaparsec mtl mtl-compat old-time pretty-show regex-tdfa
         safe split test-framework test-framework-hunit text time
         transformers uglymemo utf8-string
       ];
       homepage = "http://hledger.org";
       description = "Core data types, parsers and functionality for the hledger accounting tools";
       license = "GPL";
     }) {};
  "hlibgit2" = callPackage
    ({ mkDerivation, base, bindings-DSL, git, openssl, process, zlib }:
     mkDerivation {
       pname = "hlibgit2";
       version = "0.18.0.15";
       sha256 = "00an9ifmxa59hg9vkfwbgp8a4yjw0266hacc06ckdl9r3gvw2w0i";
       libraryHaskellDepends = [ base bindings-DSL zlib ];
       librarySystemDepends = [ openssl ];
       testHaskellDepends = [ base process ];
       testToolDepends = [ git ];
       description = "Low-level bindings to libgit2";
       license = stdenv.lib.licenses.mit;
     }) {inherit (pkgs) git; inherit (pkgs) openssl;};
  "hlibsass" = callPackage
    ({ mkDerivation, base, hspec, libsass }:
     mkDerivation {
       pname = "hlibsass";
       version = "0.1.5.0";
       sha256 = "1f2vs8c4xdw1c4493md7dnprljwvrmgb1s833ga626qws0arlgnf";
       libraryHaskellDepends = [ base ];
       librarySystemDepends = [ libsass ];
       testHaskellDepends = [ base hspec ];
       homepage = "https://github.com/jakubfijalkowski/hlibsass";
       description = "Low-level bindings to Libsass";
       license = stdenv.lib.licenses.mit;
     }) {inherit (pkgs) libsass;};
  "hlint" = callPackage
    ({ mkDerivation, ansi-terminal, base, cmdargs, containers, cpphs
     , directory, extra, filepath, haskell-src-exts, hscolour, process
     , refact, transformers, uniplate
     }:
     mkDerivation {
       pname = "hlint";
       version = "1.9.35";
       sha256 = "12ksgnlp14c9xkz6zzwnkivzs4ch0lv93h1fw4p8d83pvkd8jqjy";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         ansi-terminal base cmdargs containers cpphs directory extra
         filepath haskell-src-exts hscolour process refact transformers
         uniplate
       ];
       executableHaskellDepends = [ base ];
       homepage = "https://github.com/ndmitchell/hlint#readme";
       description = "Source code suggestions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hmatrix" = callPackage
    ({ mkDerivation, array, base, binary, blas, bytestring, deepseq
     , liblapack, random, split, storable-complex, vector
     }:
     mkDerivation {
       pname = "hmatrix";
       version = "0.17.0.2";
       sha256 = "1fgsrh2y9y971pzrd3767rg97bjr1ghpdvwmn1nn65s90rc9bv98";
       libraryHaskellDepends = [
         array base binary bytestring deepseq random split storable-complex
         vector
       ];
       librarySystemDepends = [ blas liblapack ];
       preConfigure = "sed -i hmatrix.cabal -e '/\\/usr\\//D'";
       homepage = "https://github.com/albertoruiz/hmatrix";
       description = "Numeric Linear Algebra";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) blas; inherit (pkgs) liblapack;};
  "hmatrix-gsl" = callPackage
    ({ mkDerivation, array, base, gsl, hmatrix, process, random, vector
     }:
     mkDerivation {
       pname = "hmatrix-gsl";
       version = "0.17.0.0";
       sha256 = "1jbqwn9d2nldc4klhy0n8gcxr889h0daw2mjfhwgksfy1bwfjl7w";
       libraryHaskellDepends = [
         array base hmatrix process random vector
       ];
       libraryPkgconfigDepends = [ gsl ];
       homepage = "https://github.com/albertoruiz/hmatrix";
       description = "Numerical computation";
       license = "GPL";
     }) {inherit (pkgs) gsl;};
  "hmatrix-gsl-stats" = callPackage
    ({ mkDerivation, base, binary, gsl, hmatrix, storable-complex
     , vector
     }:
     mkDerivation {
       pname = "hmatrix-gsl-stats";
       version = "0.4.1.4";
       sha256 = "1ypsrzd2h6jh83clkhkbp2bwzbvvsn3b0jm4bizgz8bqpr4hxzlq";
       libraryHaskellDepends = [
         base binary hmatrix storable-complex vector
       ];
       libraryPkgconfigDepends = [ gsl ];
       homepage = "http://code.haskell.org/hmatrix-gsl-stats";
       description = "GSL Statistics interface";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) gsl;};
  "hmatrix-special" = callPackage
    ({ mkDerivation, base, hmatrix, hmatrix-gsl }:
     mkDerivation {
       pname = "hmatrix-special";
       version = "0.4.0.1";
       sha256 = "0kpcqdchi7ikzhqacy4rh4dxz3v37paxyb84wqa66sysb72wkabj";
       libraryHaskellDepends = [ base hmatrix hmatrix-gsl ];
       homepage = "https://github.com/albertoruiz/hmatrix";
       description = "Interface to GSL special functions";
       license = "GPL";
     }) {};
  "hmpfr" = callPackage
    ({ mkDerivation, base, integer-gmp, mpfr }:
     mkDerivation {
       pname = "hmpfr";
       version = "0.4.2.1";
       sha256 = "048amh4w9vjrihahhb3rw0gbk3yp7qvjf6vcp9c5pq2kc3n7vcnc";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base integer-gmp ];
       librarySystemDepends = [ mpfr ];
       homepage = "https://github.com/michalkonecny/hmpfr";
       description = "Haskell binding to the MPFR library";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) mpfr;};
  "hmt" = callPackage
    ({ mkDerivation, array, base, bytestring, colour, containers
     , data-ordlist, directory, filepath, lazy-csv, logict
     , multiset-comb, parsec, permutation, primes, safe, split
     , utf8-string
     }:
     mkDerivation {
       pname = "hmt";
       version = "0.15";
       sha256 = "051kgsh9nl5f1nw8a24x7ds18g6ppzbhk3d9lf74nvvnccnzg3a9";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         array base bytestring colour containers data-ordlist directory
         filepath lazy-csv logict multiset-comb parsec permutation primes
         safe split utf8-string
       ];
       homepage = "http://rd.slavepianos.org/t/hmt";
       description = "Haskell Music Theory";
       license = "GPL";
     }) {};
  "hoauth2" = callPackage
    ({ mkDerivation, aeson, base, bytestring, containers, http-conduit
     , http-types, text, wai, warp
     }:
     mkDerivation {
       pname = "hoauth2";
       version = "0.5.4.0";
       sha256 = "1yfdlig203hq5dwp7b231xr4dlfv85rl217a52drq6z5bv6v10yw";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base bytestring http-conduit http-types text
       ];
       executableHaskellDepends = [
         aeson base bytestring containers http-conduit http-types text wai
         warp
       ];
       homepage = "https://github.com/freizl/hoauth2";
       description = "Haskell OAuth2 authentication client";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hocilib" = callPackage
    ({ mkDerivation, base, bytestring, c2hs, containers, inline-c
     , ocilib, tasty, tasty-hunit, template-haskell
     }:
     mkDerivation {
       pname = "hocilib";
       version = "0.1.0";
       sha256 = "0layqg6lfpk7bv2clm38cyld8adczzhc67qkhqky0k1jzny4qda4";
       libraryHaskellDepends = [
         base containers inline-c template-haskell
       ];
       librarySystemDepends = [ ocilib ];
       libraryToolDepends = [ c2hs ];
       testHaskellDepends = [ base bytestring tasty tasty-hunit ];
       testSystemDepends = [ ocilib ];
       doHaddock = false;
       doCheck = false;
       homepage = "https://github.com/fpinsight/hocilib";
       description = "FFI binding to OCILIB";
       license = stdenv.lib.licenses.bsd3;
     }) {ocilib = null;};
  "holy-project" = callPackage
    ({ mkDerivation, aeson, ansi-terminal, base, bytestring, Cabal
     , directory, filepath, hastache, http-conduit, HUnit, lens
     , lens-aeson, process, QuickCheck, random, smallcheck, split, syb
     , tasty, tasty-hunit, tasty-quickcheck, tasty-smallcheck, text
     , time, unix
     }:
     mkDerivation {
       pname = "holy-project";
       version = "0.2.0.1";
       sha256 = "05181blw3y9j2715rdm49y6mfcpgyihb6yjswhp231kr6x40zxmh";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson ansi-terminal base bytestring directory filepath hastache
         http-conduit lens lens-aeson process random split syb text time
         unix
       ];
       executableHaskellDepends = [
         aeson ansi-terminal base bytestring Cabal directory filepath
         hastache http-conduit HUnit lens lens-aeson process QuickCheck
         random smallcheck split syb tasty tasty-hunit tasty-quickcheck
         tasty-smallcheck text time unix
       ];
       testHaskellDepends = [
         base bytestring Cabal HUnit QuickCheck smallcheck tasty tasty-hunit
         tasty-quickcheck tasty-smallcheck
       ];
       homepage = "http://github.com/yogsototh/holy-project";
       description = "Start your Haskell project with cabal, git and tests";
       license = stdenv.lib.licenses.mit;
     }) {};
  "homplexity" = callPackage
    ({ mkDerivation, base, containers, cpphs, deepseq, directory
     , filepath, happy, haskell-src-exts, hflags, template-haskell
     , uniplate
     }:
     mkDerivation {
       pname = "homplexity";
       version = "0.4.3.3";
       sha256 = "029nfm8lb6nmsyyps1z9251n9ya2h3vfdwkx7091lx0cfx0gadm5";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         base containers cpphs deepseq directory filepath haskell-src-exts
         hflags template-haskell uniplate
       ];
       executableToolDepends = [ happy ];
       testHaskellDepends = [ base haskell-src-exts uniplate ];
       doHaddock = false;
       homepage = "https://github.com/mgajda/homplexity";
       description = "Haskell code quality tool";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hoogle" = callPackage
    ({ mkDerivation, aeson, base, binary, bytestring, cmdargs, conduit
     , conduit-extra, connection, containers, deepseq, directory, extra
     , filepath, haskell-src-exts, http-conduit, http-types, js-flot
     , js-jquery, mmap, network, network-uri, network-uri-flag
     , old-locale, process, QuickCheck, resourcet, tar, template-haskell
     , text, time, transformers, uniplate, utf8-string, vector, wai
     , wai-logger, warp, warp-tls, zlib
     }:
     mkDerivation {
       pname = "hoogle";
       version = "5.0.1";
       sha256 = "0bhiqdn3d5s114cg911v4zwc22h2dbwljsahyiw4ymqlkrvnvsks";
       revision = "1";
       editedCabalFile = "08av1x2r1rd63999yipgkrvkap6c09wyxhq32f21v65iyj005ipl";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson base binary bytestring cmdargs conduit conduit-extra
         connection containers deepseq directory extra filepath
         haskell-src-exts http-conduit http-types js-flot js-jquery mmap
         network network-uri network-uri-flag old-locale process QuickCheck
         resourcet tar template-haskell text time transformers uniplate
         utf8-string vector wai wai-logger warp warp-tls zlib
       ];
       executableHaskellDepends = [ base ];
       testTarget = "--test-option=--no-net";
       homepage = "http://hoogle.haskell.org/";
       description = "Haskell API Search";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hopenpgp-tools" = callPackage
    ({ mkDerivation, aeson, alex, ansi-wl-pprint, array, attoparsec
     , base, base16-bytestring, binary, binary-conduit, bytestring
     , conduit, conduit-extra, containers, crypto-pubkey, cryptohash
     , directory, errors, fgl, graphviz, happy, hOpenPGP, http-client
     , http-client-tls, http-types, ixset-typed, lens, monad-loops
     , openpgp-asciiarmor, optparse-applicative, resourcet, text, time
     , time-locale-compat, transformers, unordered-containers
     , wl-pprint-extras, wl-pprint-terminfo, yaml
     }:
     mkDerivation {
       pname = "hopenpgp-tools";
       version = "0.19.4";
       sha256 = "1n5bs28i0w1g5l5bgfmlxfq8pnccbbpk2jf4slcd7iikk2ccsmp6";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         aeson ansi-wl-pprint array attoparsec base base16-bytestring binary
         binary-conduit bytestring conduit conduit-extra containers
         crypto-pubkey cryptohash directory errors fgl graphviz hOpenPGP
         http-client http-client-tls http-types ixset-typed lens monad-loops
         openpgp-asciiarmor optparse-applicative resourcet text time
         time-locale-compat transformers unordered-containers
         wl-pprint-extras wl-pprint-terminfo yaml
       ];
       executableToolDepends = [ alex happy ];
       doHaddock = false;
       homepage = "http://floss.scru.org/hopenpgp-tools";
       description = "hOpenPGP-based command-line tools";
       license = "unknown";
     }) {};
  "hopenssl" = callPackage
    ({ mkDerivation, base, bytestring, mtl, openssl }:
     mkDerivation {
       pname = "hopenssl";
       version = "1.7";
       sha256 = "1zs69kxwz5fnm62mdscbpfz78vwnda75gyx1vxmmlisfhfslprly";
       libraryHaskellDepends = [ base bytestring mtl ];
       librarySystemDepends = [ openssl ];
       homepage = "http://github.com/peti/hopenssl";
       description = "FFI bindings to OpenSSL's EVP digest interface";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) openssl;};
  "hosc" = callPackage
    ({ mkDerivation, base, binary, blaze-builder, bytestring, criterion
     , data-binary-ieee754, deepseq, network, QuickCheck, test-framework
     , test-framework-quickcheck2, time, transformers
     }:
     mkDerivation {
       pname = "hosc";
       version = "0.15";
       sha256 = "1yp25n159p69r32y3x7iwc55l5q9qaamj2vyl1473x8ras5afdcf";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base binary blaze-builder bytestring data-binary-ieee754 network
         time transformers
       ];
       testHaskellDepends = [
         base bytestring QuickCheck test-framework
         test-framework-quickcheck2
       ];
       benchmarkHaskellDepends = [ base bytestring criterion deepseq ];
       homepage = "http://rd.slavepianos.org/t/hosc";
       description = "Haskell Open Sound Control";
       license = "GPL";
     }) {};
  "hostname" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "hostname";
       version = "1.0";
       sha256 = "0p6gm4328946qxc295zb6vhwhf07l1fma82vd0siylnsnsqxlhwv";
       libraryHaskellDepends = [ base ];
       description = "A very simple package providing a cross-platform means of determining the hostname";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hostname-validate" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring }:
     mkDerivation {
       pname = "hostname-validate";
       version = "1.0.0";
       sha256 = "0my8g4kqf9mz7ii79ff53rwkx3yv9kkn4jbm60q4b7g1rzhb3bvz";
       libraryHaskellDepends = [ attoparsec base bytestring ];
       description = "Validate hostnames e.g. localhost or foo.co.uk.";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hourglass" = callPackage
    ({ mkDerivation, base, bytestring, criterion, deepseq, mtl
     , old-locale, tasty, tasty-hunit, tasty-quickcheck, time
     }:
     mkDerivation {
       pname = "hourglass";
       version = "0.2.10";
       sha256 = "104d1yd84hclprg740nkz60vx589mnm094zriw6zczbgg8nkclym";
       libraryHaskellDepends = [ base deepseq ];
       testHaskellDepends = [
         base deepseq mtl old-locale tasty tasty-hunit tasty-quickcheck time
       ];
       benchmarkHaskellDepends = [
         base bytestring criterion deepseq mtl old-locale time
       ];
       homepage = "https://github.com/vincenthz/hs-hourglass";
       description = "simple performant time related library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hpack" = callPackage
    ({ mkDerivation, aeson, aeson-qq, base, base-compat, containers
     , deepseq, directory, filepath, Glob, hspec, interpolate, mockery
     , QuickCheck, temporary, text, unordered-containers, yaml
     }:
     mkDerivation {
       pname = "hpack";
       version = "0.14.1";
       sha256 = "100jqn5y6j2b6dsq1kln89kbzpz3a8rg74mbxwk2ix2jkiqyhc59";
       revision = "1";
       editedCabalFile = "1ifx1ajb9jw77bsbx315laixs2fsn7w3vfz2qn4k2qk9g2ckr9jr";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base base-compat containers deepseq directory filepath Glob
         text unordered-containers yaml
       ];
       executableHaskellDepends = [
         aeson base base-compat containers deepseq directory filepath Glob
         text unordered-containers yaml
       ];
       testHaskellDepends = [
         aeson aeson-qq base base-compat containers deepseq directory
         filepath Glob hspec interpolate mockery QuickCheck temporary text
         unordered-containers yaml
       ];
       homepage = "https://github.com/sol/hpack#readme";
       description = "An alternative format for Haskell packages";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hpack-convert" = callPackage
    ({ mkDerivation, aeson, aeson-qq, base, base-compat, bytestring
     , Cabal, containers, deepseq, directory, filepath, Glob, hspec
     , interpolate, mockery, pretty, QuickCheck, temporary, text
     , unordered-containers, vector, yaml
     }:
     mkDerivation {
       pname = "hpack-convert";
       version = "0.14.6";
       sha256 = "076b0f61vcxmzbsnb8l4fpwz1h2lzh7qp86li8rqzr03csq3k940";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base base-compat bytestring Cabal containers deepseq
         directory filepath Glob pretty text unordered-containers vector
         yaml
       ];
       executableHaskellDepends = [
         aeson base base-compat bytestring Cabal containers deepseq
         directory filepath Glob pretty text unordered-containers vector
         yaml
       ];
       testHaskellDepends = [
         aeson aeson-qq base base-compat bytestring Cabal containers deepseq
         directory filepath Glob hspec interpolate mockery pretty QuickCheck
         temporary text unordered-containers vector yaml
       ];
       homepage = "https://github.com/yamadapc/hpack-convert#readme";
       description = "Convert Cabal manifests into hpack's package.yamls";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hpc-coveralls" = callPackage
    ({ mkDerivation, aeson, async, base, bytestring, Cabal, cmdargs
     , containers, curl, directory, directory-tree, hpc, HUnit, process
     , pureMD5, regex-posix, retry, safe, split, transformers
     }:
     mkDerivation {
       pname = "hpc-coveralls";
       version = "1.0.8";
       sha256 = "1cc8sb3lyx0b5pvc6i87b52b7z7ii6nxkhikwk1mkx4b0ppbc7a3";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base bytestring Cabal cmdargs containers curl directory
         directory-tree hpc process pureMD5 retry safe split transformers
       ];
       executableHaskellDepends = [
         aeson async base bytestring Cabal cmdargs containers curl directory
         directory-tree hpc process pureMD5 regex-posix retry safe split
         transformers
       ];
       testHaskellDepends = [ base HUnit ];
       homepage = "https://github.com/guillaume-nargeot/hpc-coveralls";
       description = "Coveralls.io support for Haskell.";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hpio" = callPackage
    ({ mkDerivation, async, base, base-compat, bytestring, containers
     , directory, doctest, exceptions, filepath, hlint, hspec, mtl
     , mtl-compat, optparse-applicative, QuickCheck, text, transformers
     , transformers-compat, unix, unix-bytestring
     }:
     mkDerivation {
       pname = "hpio";
       version = "0.8.0.5";
       sha256 = "03fgxmr6llyk22aqnhahcqml5w0sdc3vbj6vvkmh2cxifdk0k4vl";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base base-compat bytestring containers directory exceptions
         filepath mtl mtl-compat QuickCheck text transformers
         transformers-compat unix unix-bytestring
       ];
       executableHaskellDepends = [
         async base base-compat exceptions mtl mtl-compat
         optparse-applicative transformers transformers-compat
       ];
       testHaskellDepends = [
         async base base-compat bytestring containers directory doctest
         exceptions filepath hlint hspec mtl mtl-compat QuickCheck text
         transformers transformers-compat unix unix-bytestring
       ];
       homepage = "https://github.com/dhess/hpio";
       description = "Monads for GPIO in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hprotoc" = callPackage
    ({ mkDerivation, alex, array, base, binary, bytestring, containers
     , directory, filepath, haskell-src-exts, mtl, parsec
     , protocol-buffers, protocol-buffers-descriptor, utf8-string
     }:
     mkDerivation {
       pname = "hprotoc";
       version = "2.4.0";
       sha256 = "0wrgdz6a2k64kgsp8qfpjpw4wywicjq50bvsr8i1mw11lkwysjkf";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         array base binary bytestring containers directory filepath
         haskell-src-exts mtl parsec protocol-buffers
         protocol-buffers-descriptor utf8-string
       ];
       libraryToolDepends = [ alex ];
       executableHaskellDepends = [
         array base binary bytestring containers directory filepath
         haskell-src-exts mtl parsec protocol-buffers
         protocol-buffers-descriptor utf8-string
       ];
       executableToolDepends = [ alex ];
       homepage = "https://github.com/k-bx/protocol-buffers";
       description = "Parse Google Protocol Buffer specifications";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hquantlib" = callPackage
    ({ mkDerivation, base, containers, hmatrix, hmatrix-gsl
     , hmatrix-special, HUnit, mersenne-random, parallel, QuickCheck
     , statistics, test-framework, test-framework-hunit
     , test-framework-quickcheck2, time, vector, vector-algorithms
     }:
     mkDerivation {
       pname = "hquantlib";
       version = "0.0.3.3";
       sha256 = "0a4cszl77arpk4vcgkdn8s57cvqniqy6454jw2qg7xaaibv3k210";
       revision = "1";
       editedCabalFile = "0y08a1xz614lgi4aqi9mfzf1iv3r5s3zzchylgin065hbjklpyb4";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base containers hmatrix hmatrix-gsl hmatrix-special mersenne-random
         parallel statistics time vector vector-algorithms
       ];
       executableHaskellDepends = [
         base containers mersenne-random parallel
       ];
       testHaskellDepends = [
         base HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       homepage = "http://github.com/paulrzcz/hquantlib.git";
       description = "HQuantLib is a port of essencial parts of QuantLib to Haskell";
       license = "LGPL";
     }) {};
  "hreader" = callPackage
    ({ mkDerivation, base, exceptions, hset, mmorph, monad-control, mtl
     , tagged, transformers-base
     }:
     mkDerivation {
       pname = "hreader";
       version = "1.0.2";
       sha256 = "1m2riy5jqv6zac5l34pk4qqbfq57n9jja7rfxy13zavgjq2yiqa9";
       libraryHaskellDepends = [
         base exceptions hset mmorph monad-control mtl tagged
         transformers-base
       ];
       testHaskellDepends = [ base hset transformers-base ];
       homepage = "https://bitbucket.org/s9gf4ult/hreader";
       description = "Generalization of MonadReader and ReaderT using hset";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hruby" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, bytestring, QuickCheck
     , ruby, scientific, stm, text, unordered-containers, vector
     }:
     mkDerivation {
       pname = "hruby";
       version = "0.3.4.3";
       sha256 = "1k7rmjdbgxsh8fp77mywhpdd5i10q1c6w58g5aqi5bpy1zi6izm1";
       libraryHaskellDepends = [
         aeson attoparsec base bytestring scientific stm text
         unordered-containers vector
       ];
       librarySystemDepends = [ ruby ];
       testHaskellDepends = [
         aeson attoparsec base QuickCheck text vector
       ];
       description = "Embed a Ruby intepreter in your Haskell program !";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) ruby;};
  "hs-GeoIP" = callPackage
    ({ mkDerivation, base, bytestring, deepseq, GeoIP }:
     mkDerivation {
       pname = "hs-GeoIP";
       version = "0.3";
       sha256 = "135bl4cjijq6mr485waz7aaxgkaji2fsdjhdy4v4756q6ahzcpwf";
       libraryHaskellDepends = [ base bytestring deepseq ];
       librarySystemDepends = [ GeoIP ];
       homepage = "http://github.com/ozataman/hs-GeoIP";
       description = "Haskell bindings to the MaxMind GeoIPCity database via the C library";
       license = stdenv.lib.licenses.bsd3;
     }) {GeoIP = null;};
  "hs-bibutils" = callPackage
    ({ mkDerivation, base, syb }:
     mkDerivation {
       pname = "hs-bibutils";
       version = "5.5";
       sha256 = "0pf5lh179rw9jkmw16ss3kiwydlj6zgfk868mjl5s57kx55z7ycm";
       libraryHaskellDepends = [ base syb ];
       homepage = "http://istitutocolli.org/repos/hs-bibutils/";
       description = "Haskell bindings to bibutils, the bibliography conversion utilities";
       license = "GPL";
     }) {};
  "hsass" = callPackage
    ({ mkDerivation, base, bytestring, data-default-class, filepath
     , hlibsass, hspec, hspec-discover, monad-loops, temporary
     , transformers
     }:
     mkDerivation {
       pname = "hsass";
       version = "0.4.0";
       sha256 = "178gxjv7aar8b0nwfrglavsfbrdjkwvkjq86k5b3j877047aybsi";
       libraryHaskellDepends = [
         base bytestring data-default-class filepath hlibsass monad-loops
         transformers
       ];
       testHaskellDepends = [
         base bytestring data-default-class hspec hspec-discover temporary
       ];
       homepage = "https://github.com/jakubfijalkowski/hsass";
       description = "Integrating Sass into Haskell applications";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hsb2hs" = callPackage
    ({ mkDerivation, base, bytestring, containers, directory, filepath
     , preprocessor-tools
     }:
     mkDerivation {
       pname = "hsb2hs";
       version = "0.3.1";
       sha256 = "1n7rj2q87j544d82alxhrsqhz4ix8qpwxpw3l2np7wjl0n101n4a";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         base bytestring containers directory filepath preprocessor-tools
       ];
       doHaddock = false;
       description = "Preprocesses a file, adding blobs from files as string literals";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hscolour" = callPackage
    ({ mkDerivation, base, containers }:
     mkDerivation {
       pname = "hscolour";
       version = "1.24.1";
       sha256 = "1j3rpzjygh3igvnd1n2xn63bq68rs047cjxr2qi6xyfnivgf6vz4";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base containers ];
       executableHaskellDepends = [ base containers ];
       homepage = "http://code.haskell.org/~malcolm/hscolour/";
       description = "Colourise Haskell code";
       license = "LGPL";
     }) {};
  "hsdns" = callPackage
    ({ mkDerivation, adns, base, containers, network }:
     mkDerivation {
       pname = "hsdns";
       version = "1.6.1";
       sha256 = "0s63acjy1n75k7gjm4kam7v5d4a5kn0aw178mygkqwr5frflghb4";
       libraryHaskellDepends = [ base containers network ];
       librarySystemDepends = [ adns ];
       homepage = "http://github.com/peti/hsdns";
       description = "Asynchronous DNS Resolver";
       license = stdenv.lib.licenses.lgpl3;
     }) {inherit (pkgs) adns;};
  "hse-cpp" = callPackage
    ({ mkDerivation, base, cpphs, haskell-src-exts }:
     mkDerivation {
       pname = "hse-cpp";
       version = "0.1";
       sha256 = "0f1bgi1hnpnry1pm7jhi626afdvymzy7k0a70n07n41js46pjxd0";
       revision = "1";
       editedCabalFile = "0jrav7kl7a3a421xhaqh03jvj7qsgscpi93fpxss0q4pgq98gmcy";
       libraryHaskellDepends = [ base cpphs haskell-src-exts ];
       description = "Preprocess+parse haskell code";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hsebaysdk" = callPackage
    ({ mkDerivation, aeson, base, bytestring, http-client, http-types
     , text, time, transformers, unordered-containers
     }:
     mkDerivation {
       pname = "hsebaysdk";
       version = "0.4.0.0";
       sha256 = "00c9vwlmx4i2a436ajznv1bwaqj5lgq05gpc928vn59v27gx0f07";
       libraryHaskellDepends = [
         aeson base bytestring http-client http-types text time transformers
         unordered-containers
       ];
       homepage = "https://github.com/creichert/hsebaysdk";
       description = "Haskell eBay SDK";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hsemail" = callPackage
    ({ mkDerivation, base, doctest, hspec, mtl, old-time, parsec }:
     mkDerivation {
       pname = "hsemail";
       version = "1.7.7";
       sha256 = "16wqrpzi5njv26za1rckn74jsqmyswndb6k38yz1567h1y4w7ai5";
       libraryHaskellDepends = [ base mtl old-time parsec ];
       testHaskellDepends = [ base doctest hspec old-time parsec ];
       homepage = "http://github.com/peti/hsemail";
       description = "Internet Message Parsers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hset" = callPackage
    ({ mkDerivation, base, deepseq, HUnit, tagged, type-fun }:
     mkDerivation {
       pname = "hset";
       version = "2.2.0";
       sha256 = "0c7i1c2gdj1j3igfmyl3mhv2z875km7k6yjfh75a5b5f4q47lx5q";
       libraryHaskellDepends = [ base deepseq tagged type-fun ];
       testHaskellDepends = [ base HUnit tagged ];
       homepage = "https://bitbucket.org/s9gf4ult/hset";
       description = "Primitive list with elements of unique types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hsexif" = callPackage
    ({ mkDerivation, base, binary, bytestring, containers, hspec, HUnit
     , iconv, text, time
     }:
     mkDerivation {
       pname = "hsexif";
       version = "0.6.0.10";
       sha256 = "0csxns52pv3g2k30yz6l2i3pch6b2qkzrpazwid4g18hlfzqmjv4";
       libraryHaskellDepends = [
         base binary bytestring containers iconv text time
       ];
       testHaskellDepends = [
         base binary bytestring containers hspec HUnit iconv text time
       ];
       homepage = "https://github.com/emmanueltouzery/hsexif";
       description = "EXIF handling library in pure Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hsignal" = callPackage
    ({ mkDerivation, array, base, binary, blas, bytestring, gsl
     , hmatrix, hmatrix-gsl, hmatrix-gsl-stats, hstatistics, liblapack
     , mtl, storable-complex, vector
     }:
     mkDerivation {
       pname = "hsignal";
       version = "0.2.7.4";
       sha256 = "0fpmnknpwpl3z4f6cqgkpid9agb6d45d4cqbv8sl8fnifv53c119";
       libraryHaskellDepends = [
         array base binary bytestring hmatrix hmatrix-gsl hmatrix-gsl-stats
         hstatistics mtl storable-complex vector
       ];
       librarySystemDepends = [ blas liblapack ];
       libraryPkgconfigDepends = [ gsl ];
       homepage = "http://code.haskell.org/hsignal";
       description = "Signal processing and EEG data analysis";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) blas; inherit (pkgs) gsl;
         inherit (pkgs) liblapack;};
  "hslogger" = callPackage
    ({ mkDerivation, base, containers, directory, HUnit, mtl, network
     , old-locale, process, time, unix
     }:
     mkDerivation {
       pname = "hslogger";
       version = "1.2.10";
       sha256 = "0as5gvlh6pi2gflakp695qnlizyyp059dqrhvjl4gjxalja6xjnp";
       libraryHaskellDepends = [
         base containers directory mtl network old-locale process time unix
       ];
       testHaskellDepends = [ base HUnit ];
       homepage = "http://software.complete.org/hslogger";
       description = "Versatile logging framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hslua" = callPackage
    ({ mkDerivation, base, bytestring, hspec, hspec-contrib, HUnit
     , QuickCheck, quickcheck-instances, text
     }:
     mkDerivation {
       pname = "hslua";
       version = "0.4.1";
       sha256 = "0gqp6qhp4v24kzv2j49kgk7bxqzw0w10x0zr0r2j9wkfavqb9wid";
       libraryHaskellDepends = [ base bytestring ];
       testHaskellDepends = [
         base bytestring hspec hspec-contrib HUnit QuickCheck
         quickcheck-instances text
       ];
       description = "A Lua language interpreter embedding in Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hsndfile" = callPackage
    ({ mkDerivation, base, c2hs, libsndfile }:
     mkDerivation {
       pname = "hsndfile";
       version = "0.8.0";
       sha256 = "1ywfarzqzxa36irzk4sb15j5ywq1a0ypv9yr02abl3bbqbs7wzp9";
       libraryHaskellDepends = [ base ];
       librarySystemDepends = [ libsndfile ];
       libraryToolDepends = [ c2hs ];
       homepage = "http://haskell.org/haskellwiki/Hsndfile";
       description = "Haskell bindings for libsndfile";
       license = stdenv.lib.licenses.lgpl21;
     }) {inherit (pkgs) libsndfile;};
  "hsndfile-vector" = callPackage
    ({ mkDerivation, base, hsndfile, vector }:
     mkDerivation {
       pname = "hsndfile-vector";
       version = "0.5.2";
       sha256 = "1598bf87llbiri1qh8zirhbsd94c9vhd41lf9vialqrykbmi3zig";
       libraryHaskellDepends = [ base hsndfile vector ];
       homepage = "http://haskell.org/haskellwiki/Hsndfile";
       description = "Haskell bindings for libsndfile (Data.Vector interface)";
       license = stdenv.lib.licenses.lgpl2;
     }) {};
  "hsp" = callPackage
    ({ mkDerivation, base, mtl, text }:
     mkDerivation {
       pname = "hsp";
       version = "0.10.0";
       sha256 = "1ayfywgrlmzivsq6lirmgvl65x1shf8041lzw2yh245rkmd91lsf";
       libraryHaskellDepends = [ base mtl text ];
       homepage = "http://hub.darcs.net/nibro/hsp";
       description = "Haskell Server Pages is a library for writing dynamic server-side web pages";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hspec" = callPackage
    ({ mkDerivation, base, directory, hspec-core, hspec-discover
     , hspec-expectations, hspec-meta, HUnit, QuickCheck, stringbuilder
     , transformers
     }:
     mkDerivation {
       pname = "hspec";
       version = "2.2.4";
       sha256 = "1cf90gqvg1iknja6ymxqxyabpahcxni3blqllh81ywbir3whljvj";
       revision = "1";
       editedCabalFile = "03w8nd1c7qxa46pfk7pfl6nr15a86x0srdlr2sr14cywg9rwn8pb";
       libraryHaskellDepends = [
         base hspec-core hspec-discover hspec-expectations HUnit QuickCheck
         transformers
       ];
       testHaskellDepends = [
         base directory hspec-core hspec-discover hspec-expectations
         hspec-meta HUnit QuickCheck stringbuilder transformers
       ];
       homepage = "http://hspec.github.io/";
       description = "A Testing Framework for Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hspec-attoparsec" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, hspec
     , hspec-expectations, text
     }:
     mkDerivation {
       pname = "hspec-attoparsec";
       version = "0.1.0.2";
       sha256 = "0r7v6x0k5r8jxl0rnsq8h3gqhbiimsic3kiphn6dxaw954zqnypa";
       libraryHaskellDepends = [
         attoparsec base bytestring hspec-expectations text
       ];
       testHaskellDepends = [
         attoparsec base bytestring hspec hspec-expectations text
       ];
       homepage = "http://github.com/alpmestan/hspec-attoparsec";
       description = "Utility functions for testing your attoparsec parsers with hspec";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hspec-contrib" = callPackage
    ({ mkDerivation, base, hspec, hspec-core, HUnit, QuickCheck }:
     mkDerivation {
       pname = "hspec-contrib";
       version = "0.3.0";
       sha256 = "006syw8xagfhsx06ws9ywig1qx5lk4cgl7sq6pbid1s64c72mxn4";
       libraryHaskellDepends = [ base hspec-core HUnit ];
       testHaskellDepends = [ base hspec hspec-core HUnit QuickCheck ];
       homepage = "http://hspec.github.io/";
       description = "Contributed functionality for Hspec";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hspec-core" = callPackage
    ({ mkDerivation, ansi-terminal, async, base, deepseq
     , hspec-expectations, hspec-meta, HUnit, process, QuickCheck
     , quickcheck-io, random, setenv, silently, tf-random, time
     , transformers
     }:
     mkDerivation {
       pname = "hspec-core";
       version = "2.2.4";
       sha256 = "0x845ngfl6vf65fnpb5mm3wj0ql45pz11bnm0x4gxc4ybd9c52ij";
       revision = "1";
       editedCabalFile = "1hw6vi9dk2qdyphnxv9mlpwgwzxq23hbrb6axdaywwgb2b39y34s";
       libraryHaskellDepends = [
         ansi-terminal async base deepseq hspec-expectations HUnit
         QuickCheck quickcheck-io random setenv tf-random time transformers
       ];
       testHaskellDepends = [
         ansi-terminal async base deepseq hspec-expectations hspec-meta
         HUnit process QuickCheck quickcheck-io random setenv silently
         tf-random time transformers
       ];
       homepage = "http://hspec.github.io/";
       description = "A Testing Framework for Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hspec-discover" = callPackage
    ({ mkDerivation, base, directory, filepath, hspec-meta }:
     mkDerivation {
       pname = "hspec-discover";
       version = "2.2.4";
       sha256 = "1bz7wb8v0bx1amiz4bpj34xq97d1ia29n3f654wcrh6lacydp3dv";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base directory filepath ];
       executableHaskellDepends = [ base directory filepath ];
       testHaskellDepends = [ base directory filepath hspec-meta ];
       homepage = "http://hspec.github.io/";
       description = "Automatically discover and run Hspec tests";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hspec-expectations" = callPackage
    ({ mkDerivation, base, HUnit }:
     mkDerivation {
       pname = "hspec-expectations";
       version = "0.7.2";
       sha256 = "1w56jiqfyl237sr207gh3b0l8sr9layy0mdsgd5wknzb49mif6ip";
       libraryHaskellDepends = [ base HUnit ];
       homepage = "https://github.com/sol/hspec-expectations#readme";
       description = "Catchy combinators for HUnit";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hspec-expectations-pretty-diff" = callPackage
    ({ mkDerivation, aeson, ansi-terminal, base, Diff, hscolour, hspec
     , HUnit, nicify-lib, text
     }:
     mkDerivation {
       pname = "hspec-expectations-pretty-diff";
       version = "0.7.2.4";
       sha256 = "02hvnlhvlhg4yv6pbr1f0ig01qs83z85cmcl4w5wpqqb6cjdbgqv";
       libraryHaskellDepends = [
         ansi-terminal base Diff hscolour HUnit nicify-lib text
       ];
       testHaskellDepends = [ aeson base hspec HUnit text ];
       doCheck = false;
       homepage = "https://github.com/myfreeweb/hspec-expectations-pretty-diff#readme";
       description = "Catchy combinators for HUnit";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hspec-golden-aeson" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, base, bytestring, directory
     , filepath, hspec, hspec-core, QuickCheck, quickcheck-arbitrary-adt
     , random, silently, transformers
     }:
     mkDerivation {
       pname = "hspec-golden-aeson";
       version = "0.2.0.3";
       sha256 = "1yq3qxidz9qw1vvd7pcyhiwhgxfb2q42kjywx2bn2w13cjxg56fd";
       libraryHaskellDepends = [
         aeson aeson-pretty base bytestring directory filepath hspec
         QuickCheck quickcheck-arbitrary-adt random transformers
       ];
       testHaskellDepends = [
         aeson base directory hspec hspec-core QuickCheck
         quickcheck-arbitrary-adt silently transformers
       ];
       homepage = "https://github.com/plow-technologies/hspec-golden-aeson#readme";
       description = "Use tests to monitor changes in Aeson serialization";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hspec-jenkins" = callPackage
    ({ mkDerivation, base, blaze-markup, hspec }:
     mkDerivation {
       pname = "hspec-jenkins";
       version = "0.1.1";
       sha256 = "16aql0fyssc16z85isskccq93dj5i1pydblnf2q1np7z6pl1azy2";
       libraryHaskellDepends = [ base blaze-markup hspec ];
       homepage = "https://github.com/worksap-ate/hspec-jenkins";
       description = "Jenkins-friendly XML formatter for Hspec";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hspec-megaparsec" = callPackage
    ({ mkDerivation, base, containers, hspec, hspec-expectations
     , megaparsec
     }:
     mkDerivation {
       pname = "hspec-megaparsec";
       version = "0.2.1";
       sha256 = "0syycdsfns4bdk52j12psqcf9v3pv9v2vyjv8726ikvp9ndbqx34";
       revision = "1";
       editedCabalFile = "1jc6p9vzdpb962qm6fv1qzdk5a3hx20n2gygxf38cpyng9v48wcd";
       libraryHaskellDepends = [
         base containers hspec-expectations megaparsec
       ];
       testHaskellDepends = [
         base containers hspec hspec-expectations megaparsec
       ];
       homepage = "https://github.com/mrkkrp/hspec-megaparsec";
       description = "Utility functions for testing Megaparsec parsers with Hspec";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hspec-meta" = callPackage
    ({ mkDerivation, ansi-terminal, async, base, deepseq, directory
     , filepath, hspec-expectations, HUnit, QuickCheck, quickcheck-io
     , random, setenv, time, transformers
     }:
     mkDerivation {
       pname = "hspec-meta";
       version = "2.2.1";
       sha256 = "1m1pkrxiglxzwv8gdj5jr1bdbhxvvg6sbl9m61w4565d7k1m8yxa";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         ansi-terminal async base deepseq hspec-expectations HUnit
         QuickCheck quickcheck-io random setenv time transformers
       ];
       executableHaskellDepends = [ base directory filepath ];
       homepage = "http://hspec.github.io/";
       description = "A version of Hspec which is used to test Hspec itself";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hspec-setup" = callPackage
    ({ mkDerivation, base, directory, filepath, process, projectroot }:
     mkDerivation {
       pname = "hspec-setup";
       version = "0.1.1.1";
       sha256 = "028ix7n1h20fafjiki5azd72jznpdxzvly2dx1ribyn01z8lnagx";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         base directory filepath process projectroot
       ];
       doHaddock = false;
       homepage = "https://github.com/yamadapc/haskell-hspec-setup";
       description = "Add an hspec test-suite in one command";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hspec-smallcheck" = callPackage
    ({ mkDerivation, base, hspec, hspec-core, QuickCheck, smallcheck }:
     mkDerivation {
       pname = "hspec-smallcheck";
       version = "0.4.1";
       sha256 = "1xf07xvldp0cc6694k6hzals7mr4l5148skjs9a9arsqmlad1pf5";
       libraryHaskellDepends = [ base hspec-core smallcheck ];
       testHaskellDepends = [
         base hspec hspec-core QuickCheck smallcheck
       ];
       homepage = "http://hspec.github.io/";
       description = "SmallCheck support for the Hspec testing framework";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hspec-wai" = callPackage
    ({ mkDerivation, base, base-compat, bytestring, case-insensitive
     , hspec, hspec-core, hspec-expectations, http-types, QuickCheck
     , text, transformers, wai, wai-extra, with-location
     }:
     mkDerivation {
       pname = "hspec-wai";
       version = "0.6.6";
       sha256 = "1q5hh0q4x3kzv37zmcwagnlp6k3l5hqpy6zi18m32vvbsly7b8c9";
       libraryHaskellDepends = [
         base base-compat bytestring case-insensitive hspec-core
         hspec-expectations http-types QuickCheck text transformers wai
         wai-extra with-location
       ];
       testHaskellDepends = [
         base base-compat bytestring case-insensitive hspec hspec-core
         hspec-expectations http-types QuickCheck text transformers wai
         wai-extra with-location
       ];
       homepage = "https://github.com/hspec/hspec-wai#readme";
       description = "Experimental Hspec support for testing WAI applications";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hspec-wai-json" = callPackage
    ({ mkDerivation, aeson, aeson-qq, base, bytestring
     , case-insensitive, hspec, hspec-wai, template-haskell
     }:
     mkDerivation {
       pname = "hspec-wai-json";
       version = "0.6.1";
       sha256 = "0sbw6iddywxdg4n8npnz6m0lmcf9nrq3ib7kckpx7shpq9khwgih";
       libraryHaskellDepends = [
         aeson aeson-qq base bytestring case-insensitive hspec-wai
         template-haskell
       ];
       testHaskellDepends = [ base hspec hspec-wai ];
       homepage = "https://github.com/hspec/hspec-wai#readme";
       description = "Testing JSON APIs with hspec-wai";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hspec-webdriver" = callPackage
    ({ mkDerivation, aeson, base, data-default, hashable, hspec
     , hspec-core, HUnit, lifted-base, stm, text, transformers
     , unordered-containers, webdriver
     }:
     mkDerivation {
       pname = "hspec-webdriver";
       version = "1.2.0";
       sha256 = "1j450cxdapc1432w2bl9fnnkyf9vwl7zcq08n7ff68bzvqcgil05";
       libraryHaskellDepends = [
         aeson base data-default hashable hspec hspec-core HUnit lifted-base
         stm text transformers unordered-containers webdriver
       ];
       homepage = "https://bitbucket.org/wuzzeb/webdriver-utils";
       description = "Write end2end web application tests using webdriver and hspec";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hstatistics" = callPackage
    ({ mkDerivation, array, base, hmatrix, hmatrix-gsl-stats, random
     , vector
     }:
     mkDerivation {
       pname = "hstatistics";
       version = "0.2.5.4";
       sha256 = "0yz4l2chmk7cny0ska70pzjkp0x5g4395s60vvah5dbjnsdsqmz6";
       libraryHaskellDepends = [
         array base hmatrix hmatrix-gsl-stats random vector
       ];
       homepage = "http://code.haskell.org/hstatistics";
       description = "Statistics";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hstatsd" = callPackage
    ({ mkDerivation, base, bytestring, mtl, network, text }:
     mkDerivation {
       pname = "hstatsd";
       version = "0.1";
       sha256 = "092q52yyb1xdji1y72bdcgvp8by2w1z9j717sl1gmh2p89cpjrs4";
       libraryHaskellDepends = [ base bytestring mtl network text ];
       homepage = "https://github.com/mokus0/hstatsd";
       description = "Quick and dirty statsd interface";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "hsx-jmacro" = callPackage
    ({ mkDerivation, base, hsp, jmacro, mtl, text, wl-pprint-text }:
     mkDerivation {
       pname = "hsx-jmacro";
       version = "7.3.8";
       sha256 = "15a427bkyn36rdkkvw74ck5dzgbsxnwhy23yd6fibidcz2iyziwp";
       libraryHaskellDepends = [
         base hsp jmacro mtl text wl-pprint-text
       ];
       homepage = "http://www.happstack.com/";
       description = "hsp+jmacro support";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hsx2hs" = callPackage
    ({ mkDerivation, base, bytestring, haskell-src-exts
     , haskell-src-meta, mtl, template-haskell, utf8-string
     }:
     mkDerivation {
       pname = "hsx2hs";
       version = "0.13.5";
       sha256 = "0vpdjdazvkn2x0z1znadbrkzw2d1b9irlf9zayzbz0pghy9a5fhd";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring haskell-src-exts haskell-src-meta mtl
         template-haskell utf8-string
       ];
       homepage = "https://github.com/seereason/hsx2hs";
       description = "HSX (Haskell Source with XML) allows literal XML syntax in Haskell source code";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hsyslog" = callPackage
    ({ mkDerivation, base, bytestring, QuickCheck }:
     mkDerivation {
       pname = "hsyslog";
       version = "4";
       sha256 = "0j9s002vly1c43m7ik79zsf6az7fadgaz0cf4msid3xzdnkzrm9k";
       libraryHaskellDepends = [ base bytestring ];
       testHaskellDepends = [ base bytestring QuickCheck ];
       homepage = "http://github.com/peti/hsyslog";
       description = "FFI interface to syslog(3) from POSIX.1-2001";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "htaglib" = callPackage
    ({ mkDerivation, base, bytestring, directory, filepath, hspec
     , taglib, text
     }:
     mkDerivation {
       pname = "htaglib";
       version = "1.0.4";
       sha256 = "19s01g8inwmzbvbs1ph4rg2kaqipj7jc9lkg2y9y28gpdrgw48qb";
       revision = "1";
       editedCabalFile = "0z0jzhmrm77b3rl1h89wfgbwjg374n1mda73z7qrrdfc7ky99dmy";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base bytestring text ];
       librarySystemDepends = [ taglib ];
       testHaskellDepends = [ base directory filepath hspec ];
       homepage = "https://github.com/mrkkrp/htaglib";
       description = "Bindings to TagLib, audio meta-data library";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) taglib;};
  "html" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "html";
       version = "1.0.1.2";
       sha256 = "0q9hmfii62kc82ijlg238fxrzxhsivn42x5wd6ffcr9xldg4jd8c";
       libraryHaskellDepends = [ base ];
       description = "HTML combinator library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "html-conduit" = callPackage
    ({ mkDerivation, base, bytestring, conduit, conduit-extra
     , containers, hspec, HUnit, resourcet, tagstream-conduit, text
     , transformers, xml-conduit, xml-types
     }:
     mkDerivation {
       pname = "html-conduit";
       version = "1.2.1.1";
       sha256 = "1a5878axl1w65rv3g76d8fwgzbwazikna885jz5156zrrdq79hlq";
       libraryHaskellDepends = [
         base bytestring conduit conduit-extra containers resourcet
         tagstream-conduit text transformers xml-conduit xml-types
       ];
       testHaskellDepends = [
         base bytestring containers hspec HUnit xml-conduit
       ];
       homepage = "https://github.com/snoyberg/xml";
       description = "Parse HTML documents using xml-conduit datatypes";
       license = stdenv.lib.licenses.mit;
     }) {};
  "htoml" = callPackage
    ({ mkDerivation, aeson, base, bytestring, containers, criterion
     , file-embed, old-locale, parsec, tasty, tasty-hspec, tasty-hunit
     , text, time, unordered-containers, vector
     }:
     mkDerivation {
       pname = "htoml";
       version = "1.0.0.3";
       sha256 = "0vw59kmwwqcr6ja9rx2q5l7s78n384cl7fdbq1azp03g6a5diy08";
       libraryHaskellDepends = [
         aeson base containers old-locale parsec text time
         unordered-containers vector
       ];
       testHaskellDepends = [
         aeson base bytestring containers file-embed parsec tasty
         tasty-hspec tasty-hunit text time unordered-containers vector
       ];
       benchmarkHaskellDepends = [
         aeson base containers criterion parsec text time
         unordered-containers vector
       ];
       homepage = "https://github.com/cies/htoml";
       description = "Parser for TOML files";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "http-api-data" = callPackage
    ({ mkDerivation, base, bytestring, directory, doctest, filepath
     , hspec, HUnit, QuickCheck, text, time, time-locale-compat
     }:
     mkDerivation {
       pname = "http-api-data";
       version = "0.2.4";
       sha256 = "0db6brf5rbd3ah3cz9is6j3l42yv86dcxkz8dv7bj5rv6iihifbb";
       libraryHaskellDepends = [
         base bytestring text time time-locale-compat
       ];
       testHaskellDepends = [
         base bytestring directory doctest filepath hspec HUnit QuickCheck
         text time
       ];
       homepage = "http://github.com/fizruk/http-api-data";
       description = "Converting to/from HTTP API data like URL pieces, headers and query parameters";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "http-client" = callPackage
    ({ mkDerivation, array, async, base, base64-bytestring
     , blaze-builder, bytestring, case-insensitive, containers, cookie
     , data-default-class, deepseq, directory, exceptions, filepath
     , ghc-prim, hspec, http-types, mime-types, monad-control, network
     , network-uri, random, streaming-commons, text, time, transformers
     , zlib
     }:
     mkDerivation {
       pname = "http-client";
       version = "0.4.31.2";
       sha256 = "12yq2l6bvmxg5w6cw5ravdh39g8smwn1j44mv36pfmkhm5402h8n";
       libraryHaskellDepends = [
         array base base64-bytestring blaze-builder bytestring
         case-insensitive containers cookie data-default-class deepseq
         exceptions filepath ghc-prim http-types mime-types network
         network-uri random streaming-commons text time transformers
       ];
       testHaskellDepends = [
         async base base64-bytestring blaze-builder bytestring
         case-insensitive containers deepseq directory hspec http-types
         monad-control network network-uri streaming-commons text time
         transformers zlib
       ];
       homepage = "https://github.com/snoyberg/http-client";
       description = "An HTTP client engine, intended as a base layer for more user-friendly packages";
       license = stdenv.lib.licenses.mit;
     }) {};
  "http-client-openssl" = callPackage
    ({ mkDerivation, base, HsOpenSSL, hspec, http-client, http-types
     , network
     }:
     mkDerivation {
       pname = "http-client-openssl";
       version = "0.2.0.4";
       sha256 = "1vdgw6ymx0ha4r5pxgn4bjfwgx8dap9qilsdak1784fr9rlxvp98";
       libraryHaskellDepends = [ base HsOpenSSL http-client network ];
       testHaskellDepends = [
         base HsOpenSSL hspec http-client http-types
       ];
       homepage = "https://github.com/snoyberg/http-client";
       description = "http-client backend using the OpenSSL library";
       license = stdenv.lib.licenses.mit;
     }) {};
  "http-client-tls" = callPackage
    ({ mkDerivation, base, bytestring, connection, data-default-class
     , hspec, http-client, http-types, network, tls
     }:
     mkDerivation {
       pname = "http-client-tls";
       version = "0.2.4.1";
       sha256 = "18wbca7jg15p0ds3339f435nqv2ng0fqc4bylicjzlsww625ij4d";
       revision = "1";
       editedCabalFile = "0v7mb10cq7j6f1a0rli8wp5gmk06zx218ly4wzyg97a43g7v1w96";
       libraryHaskellDepends = [
         base bytestring connection data-default-class http-client network
         tls
       ];
       testHaskellDepends = [ base hspec http-client http-types ];
       homepage = "https://github.com/snoyberg/http-client";
       description = "http-client backend using the connection package and tls library";
       license = stdenv.lib.licenses.mit;
     }) {};
  "http-common" = callPackage
    ({ mkDerivation, base, base64-bytestring, blaze-builder, bytestring
     , case-insensitive, directory, mtl, network, text, transformers
     , unordered-containers
     }:
     mkDerivation {
       pname = "http-common";
       version = "0.8.2.0";
       sha256 = "14s5a178sb2vm5k00rs21760mds5dz2gs10k9iyn22h01mxyf599";
       libraryHaskellDepends = [
         base base64-bytestring blaze-builder bytestring case-insensitive
         directory mtl network text transformers unordered-containers
       ];
       homepage = "http://research.operationaldynamics.com/projects/http-streams/";
       description = "Common types for HTTP clients and servers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "http-conduit" = callPackage
    ({ mkDerivation, aeson, base, blaze-builder, bytestring
     , case-insensitive, conduit, conduit-extra, connection, cookie
     , data-default-class, exceptions, hspec, http-client
     , http-client-tls, http-types, HUnit, lifted-base, monad-control
     , mtl, network, resourcet, streaming-commons, temporary, text, time
     , transformers, utf8-string, wai, wai-conduit, warp, warp-tls
     }:
     mkDerivation {
       pname = "http-conduit";
       version = "2.1.11";
       sha256 = "0zqdry6lyvbncjwvwl7zjak6a0mi4fapafn7rns0j2h82l2mrpvm";
       libraryHaskellDepends = [
         aeson base bytestring conduit conduit-extra data-default-class
         exceptions http-client http-client-tls http-types lifted-base
         monad-control mtl resourcet transformers
       ];
       testHaskellDepends = [
         aeson base blaze-builder bytestring case-insensitive conduit
         conduit-extra connection cookie data-default-class hspec
         http-client http-types HUnit lifted-base network streaming-commons
         temporary text time transformers utf8-string wai wai-conduit warp
         warp-tls
       ];
       homepage = "http://www.yesodweb.com/book/http-conduit";
       description = "HTTP client package with conduit interface and HTTPS support";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "http-date" = callPackage
    ({ mkDerivation, array, attoparsec, base, bytestring, doctest
     , hspec, old-locale, time
     }:
     mkDerivation {
       pname = "http-date";
       version = "0.0.6.1";
       sha256 = "0dknh28kyarnzqrsc80ssalxjrq0qbv7ir49247p2grb7rh0dqgj";
       libraryHaskellDepends = [ array attoparsec base bytestring ];
       testHaskellDepends = [
         base bytestring doctest hspec old-locale time
       ];
       description = "HTTP Date parser/formatter";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "http-link-header" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring
     , bytestring-conversion, criterion, directory, errors, hspec
     , hspec-attoparsec, http-api-data, network-uri, QuickCheck, text
     , transformers
     }:
     mkDerivation {
       pname = "http-link-header";
       version = "1.0.3";
       sha256 = "1znppl6p26kvih3fbzz9cfcjxgdl71gayj38x1y6yjyiwys2vgar";
       libraryHaskellDepends = [
         attoparsec base bytestring bytestring-conversion errors
         http-api-data network-uri text
       ];
       testHaskellDepends = [
         base hspec hspec-attoparsec QuickCheck text
       ];
       benchmarkHaskellDepends = [
         base criterion directory network-uri text transformers
       ];
       homepage = "https://github.com/myfreeweb/http-link-header";
       description = "A parser and writer for the HTTP Link header as specified in RFC 5988 \"Web Linking\"";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "http-media" = callPackage
    ({ mkDerivation, base, bytestring, case-insensitive, containers
     , QuickCheck, test-framework, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "http-media";
       version = "0.6.4";
       sha256 = "1ly93k3d6kilma8gv6y1vf4d3lz4xg5xwi5p8x10w9al13sjqxpg";
       libraryHaskellDepends = [
         base bytestring case-insensitive containers
       ];
       testHaskellDepends = [
         base bytestring case-insensitive containers QuickCheck
         test-framework test-framework-quickcheck2
       ];
       homepage = "https://github.com/zmthy/http-media";
       description = "Processing HTTP Content-Type and Accept headers";
       license = stdenv.lib.licenses.mit;
     }) {};
  "http-reverse-proxy" = callPackage
    ({ mkDerivation, async, base, blaze-builder, bytestring
     , case-insensitive, conduit, conduit-extra, containers
     , data-default-class, hspec, http-client, http-conduit, http-types
     , lifted-base, monad-control, network, resourcet, streaming-commons
     , text, transformers, wai, wai-logger, warp, word8
     }:
     mkDerivation {
       pname = "http-reverse-proxy";
       version = "0.4.3.2";
       sha256 = "0ynppygsksaac05ixh2x0phhqppvxi2gmmrdckl1161syh5k1cy2";
       libraryHaskellDepends = [
         async base blaze-builder bytestring case-insensitive conduit
         conduit-extra containers data-default-class http-client http-types
         lifted-base monad-control network resourcet streaming-commons text
         transformers wai wai-logger word8
       ];
       testHaskellDepends = [
         base blaze-builder bytestring conduit conduit-extra hspec
         http-conduit http-types lifted-base network resourcet
         streaming-commons transformers wai warp
       ];
       homepage = "https://github.com/fpco/http-reverse-proxy";
       description = "Reverse proxy HTTP requests, either over raw sockets or with WAI";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "http-streams" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, attoparsec, base
     , base64-bytestring, blaze-builder, bytestring, case-insensitive
     , directory, ghc-prim, HsOpenSSL, hspec, hspec-expectations
     , http-common, HUnit, io-streams, lifted-base, mtl, network
     , network-uri, openssl-streams, snap-core, snap-server
     , system-fileio, system-filepath, text, transformers
     , unordered-containers
     }:
     mkDerivation {
       pname = "http-streams";
       version = "0.8.4.0";
       sha256 = "14s7mwd83rqrklwkxdm64gkr55yq41pc5n9rd3mbg1rxr9986xyq";
       libraryHaskellDepends = [
         aeson attoparsec base base64-bytestring blaze-builder bytestring
         case-insensitive directory HsOpenSSL http-common io-streams mtl
         network network-uri openssl-streams text transformers
         unordered-containers
       ];
       testHaskellDepends = [
         aeson aeson-pretty attoparsec base base64-bytestring blaze-builder
         bytestring case-insensitive directory ghc-prim HsOpenSSL hspec
         hspec-expectations http-common HUnit io-streams lifted-base mtl
         network network-uri openssl-streams snap-core snap-server
         system-fileio system-filepath text transformers
         unordered-containers
       ];
       homepage = "http://research.operationaldynamics.com/projects/http-streams/";
       description = "An HTTP client using io-streams";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "http-types" = callPackage
    ({ mkDerivation, array, base, blaze-builder, bytestring
     , case-insensitive, doctest, hspec, QuickCheck
     , quickcheck-instances, text
     }:
     mkDerivation {
       pname = "http-types";
       version = "0.9.1";
       sha256 = "0l7mnvqyppxpnq6ds4a9f395zdbl22z3sxiry1myfs8wvj669vbv";
       libraryHaskellDepends = [
         array base blaze-builder bytestring case-insensitive text
       ];
       testHaskellDepends = [
         base blaze-builder bytestring doctest hspec QuickCheck
         quickcheck-instances text
       ];
       homepage = "https://github.com/aristidb/http-types";
       description = "Generic HTTP types for Haskell (for both client and server code)";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "http2" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, array, base, bytestring
     , bytestring-builder, case-insensitive, containers, criterion
     , directory, doctest, filepath, Glob, hashtables, heaps, hex, hspec
     , mwc-random, psqueues, random, stm, text, unordered-containers
     , vector, word8
     }:
     mkDerivation {
       pname = "http2";
       version = "1.6.2";
       sha256 = "1rvg9diqlh62sbrsibkllfq55sdjxx7bjfy6dqkns9qrzb05mrwr";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         array base bytestring bytestring-builder case-insensitive
         containers psqueues stm
       ];
       executableHaskellDepends = [
         aeson aeson-pretty array base bytestring bytestring-builder
         case-insensitive containers directory filepath hex text
         unordered-containers vector word8
       ];
       testHaskellDepends = [
         aeson aeson-pretty array base bytestring bytestring-builder
         case-insensitive containers directory doctest filepath Glob hex
         hspec psqueues stm text unordered-containers vector word8
       ];
       benchmarkHaskellDepends = [
         array base bytestring case-insensitive containers criterion
         hashtables heaps mwc-random psqueues random stm
       ];
       description = "HTTP/2.0 library including frames and HPACK";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "httpd-shed" = callPackage
    ({ mkDerivation, base, network, network-uri }:
     mkDerivation {
       pname = "httpd-shed";
       version = "0.4.0.3";
       sha256 = "064jy1mqhnf1hvq6s04wlhmp916rd522x58djb9qixv13vc8gzxh";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base network network-uri ];
       description = "A simple web-server with an interact style API";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "human-readable-duration" = callPackage
    ({ mkDerivation, base, criterion, doctest, Glob }:
     mkDerivation {
       pname = "human-readable-duration";
       version = "0.2.0.3";
       sha256 = "1nlrfp4j9i83gym765srndqaa62f22jwqzbmmql8fn4l54dakwwk";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base doctest Glob ];
       benchmarkHaskellDepends = [ base criterion ];
       homepage = "http://github.com/yogsototh/human-readable-duration#readme";
       description = "Provide duration helper";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hunit-dejafu" = callPackage
    ({ mkDerivation, base, dejafu, exceptions, HUnit }:
     mkDerivation {
       pname = "hunit-dejafu";
       version = "0.3.0.3";
       sha256 = "085i2k25vkh8lplnp1qgvp573v6dfcyx4rwbwz29dqhisrmzvbf9";
       libraryHaskellDepends = [ base dejafu exceptions HUnit ];
       homepage = "https://github.com/barrucadu/dejafu";
       description = "Deja Fu support for the HUnit test framework";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hvect" = callPackage
    ({ mkDerivation, base, HTF }:
     mkDerivation {
       pname = "hvect";
       version = "0.3.1.0";
       sha256 = "1f3aaav4fg11hv9nk2chcgdz1j8swlfgixrcnww7m2vilc429fmr";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base HTF ];
       homepage = "https://github.com/agrafix/hvect";
       description = "Simple strict heterogeneous lists";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hw-bits" = callPackage
    ({ mkDerivation, base, bytestring, criterion, hspec, hw-prim, mmap
     , parsec, QuickCheck, resourcet, safe, vector
     }:
     mkDerivation {
       pname = "hw-bits";
       version = "0.1.0.1";
       sha256 = "03pxhkqgnvbjxfzs29j6l5c269drsrmaxl6yk9iy9c2dw1fh483x";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring hw-prim parsec safe vector
       ];
       executableHaskellDepends = [
         base criterion mmap resourcet vector
       ];
       testHaskellDepends = [
         base bytestring hspec hw-prim QuickCheck vector
       ];
       benchmarkHaskellDepends = [ base criterion hw-prim vector ];
       homepage = "http://github.com/haskell-works/hw-bits#readme";
       description = "Conduits for tokenizing streams";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hw-conduit" = callPackage
    ({ mkDerivation, array, base, bytestring, conduit, criterion, hspec
     , hw-bits, mmap, resourcet, vector, word8
     }:
     mkDerivation {
       pname = "hw-conduit";
       version = "0.0.0.11";
       sha256 = "0yyp3q5alc1h3indxyck979gz6vsjycizifcbyydjn0qj0x1kqg0";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         array base bytestring conduit hw-bits resourcet word8
       ];
       executableHaskellDepends = [ base criterion ];
       testHaskellDepends = [ base bytestring hspec ];
       benchmarkHaskellDepends = [
         base bytestring conduit criterion mmap vector
       ];
       homepage = "http://github.com/haskell-works/hw-conduit#readme";
       description = "Conduits for tokenizing streams";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hw-diagnostics" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "hw-diagnostics";
       version = "0.0.0.5";
       sha256 = "0cfrgcjj7c2bi5l4qan23ipylfa73qh19xc9x03sbia6qh0yrsjw";
       libraryHaskellDepends = [ base ];
       homepage = "http://github.com/haskell-works/hw-diagnostics#readme";
       description = "Diagnostics library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hw-parser" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, hw-prim
     , mono-traversable, text
     }:
     mkDerivation {
       pname = "hw-parser";
       version = "0.0.0.1";
       sha256 = "09c02ajw5nx3mmydyi82464fkd6z8xf6a4z63alwmks16jyda24v";
       libraryHaskellDepends = [
         attoparsec base bytestring hw-prim mono-traversable text
       ];
       homepage = "http://github.com/haskell-works/hw-parser#readme";
       description = "Conduits for tokenizing streams";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hw-prim" = callPackage
    ({ mkDerivation, base, bytestring, criterion, deepseq, hspec
     , QuickCheck, random, vector
     }:
     mkDerivation {
       pname = "hw-prim";
       version = "0.1.0.3";
       sha256 = "111v56hg84kk3drjsz1bb8wlcscl4lwj9m8q7r08afvkhd188dzj";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base bytestring deepseq random vector ];
       executableHaskellDepends = [ base ];
       testHaskellDepends = [
         base bytestring hspec QuickCheck random vector
       ];
       benchmarkHaskellDepends = [ base criterion vector ];
       homepage = "http://github.com/haskell-works/hw-prim#readme";
       description = "Primitive functions and data types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hw-rankselect" = callPackage
    ({ mkDerivation, base, bytestring, conduit, criterion, hspec
     , hw-bits, hw-prim, mmap, QuickCheck, vector
     }:
     mkDerivation {
       pname = "hw-rankselect";
       version = "0.3.0.0";
       sha256 = "1zicg04p661752x65jdglfh3l57hg03d6nnrddimab3mnnkm7c61";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base hw-bits hw-prim vector ];
       executableHaskellDepends = [ base ];
       testHaskellDepends = [
         base hspec hw-bits hw-prim QuickCheck vector
       ];
       benchmarkHaskellDepends = [
         base bytestring conduit criterion hw-bits hw-prim mmap vector
       ];
       homepage = "http://github.com/haskell-works/hw-rankselect#readme";
       description = "Conduits for tokenizing streams";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hw-succinct" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, conduit, containers
     , hw-bits, hw-conduit, hw-parser, hw-prim, hw-rankselect
     , mono-traversable, text, vector, word8
     }:
     mkDerivation {
       pname = "hw-succinct";
       version = "0.0.0.14";
       sha256 = "1szvbyv7i5fzc4rqff1sd795qqv0rp6l4x51rnkvmq6py5jyrqpk";
       libraryHaskellDepends = [
         attoparsec base bytestring conduit containers hw-bits hw-conduit
         hw-parser hw-prim hw-rankselect mono-traversable text vector word8
       ];
       homepage = "http://github.com/haskell-works/hw-succinct#readme";
       description = "Conduits for tokenizing streams";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hweblib" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, containers
     , criterion, HUnit, mtl, text, transformers
     }:
     mkDerivation {
       pname = "hweblib";
       version = "0.6.3";
       sha256 = "03dmx5irlsyb3b9zg2r6nz947sslizkn0nlk65ldb5n4m8my33hy";
       libraryHaskellDepends = [
         attoparsec base bytestring containers mtl text transformers
       ];
       testHaskellDepends = [
         attoparsec base bytestring containers HUnit mtl transformers
       ];
       benchmarkHaskellDepends = [
         attoparsec base bytestring containers criterion HUnit mtl
         transformers
       ];
       homepage = "http://github.com/aycanirican/hweblib";
       description = "Haskell Web Library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hworker" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, bytestring, hedis, hspec
     , hspec-contrib, HUnit, text, time, uuid
     }:
     mkDerivation {
       pname = "hworker";
       version = "0.1.0.1";
       sha256 = "079z4ahnbwibhy15jm3ymfzbfxgwy7f2l1raq06sp47ip16wrjrl";
       revision = "1";
       editedCabalFile = "0w2bpvfr68n2qipvr8gc5096dain3g2536m4n9kqx1fahf12mwy5";
       libraryHaskellDepends = [
         aeson attoparsec base bytestring hedis text time uuid
       ];
       testHaskellDepends = [
         aeson attoparsec base bytestring hedis hspec hspec-contrib HUnit
         text time uuid
       ];
       doCheck = false;
       homepage = "http://github.com/dbp/hworker";
       description = "A reliable at-least-once job queue built on top of redis";
       license = stdenv.lib.licenses.isc;
     }) {};
  "hworker-ses" = callPackage
    ({ mkDerivation, aeson, amazonka, amazonka-core, amazonka-ses, base
     , hworker, lens, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "hworker-ses";
       version = "0.1.1.0";
       sha256 = "1iw16mm7iwjm50y4k878p885d6hjsbnvg3msvpq9zcw52mlk0lyx";
       revision = "1";
       editedCabalFile = "0vbzj885q7hrlsv2ds0izsjciishcfnh1m8nw98szzis4byhck48";
       libraryHaskellDepends = [
         aeson amazonka amazonka-core amazonka-ses base hworker lens text
         time unordered-containers
       ];
       homepage = "http://github.com/dbp/hworker-ses";
       description = "Library for sending email with Amazon's SES and hworker";
       license = stdenv.lib.licenses.isc;
     }) {};
  "hxt" = callPackage
    ({ mkDerivation, base, binary, bytestring, containers, deepseq
     , directory, filepath, hxt-charproperties, hxt-regex-xmlschema
     , hxt-unicode, mtl, network-uri, parsec
     }:
     mkDerivation {
       pname = "hxt";
       version = "9.3.1.16";
       sha256 = "1qq3ykgn355rx242xjcbqqksgvwr6k2fdj5phw4iv28qqxff6m8d";
       configureFlags = [ "-fnetwork-uri" ];
       libraryHaskellDepends = [
         base binary bytestring containers deepseq directory filepath
         hxt-charproperties hxt-regex-xmlschema hxt-unicode mtl network-uri
         parsec
       ];
       homepage = "https://github.com/UweSchmidt/hxt";
       description = "A collection of tools for processing XML with Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hxt-charproperties" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "hxt-charproperties";
       version = "9.2.0.1";
       sha256 = "1mml8wglvagqq891rchgli6r8rnkwrqhgsxfl6kb5403pzb18rp4";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/UweSchmidt/hxt";
       description = "Character properties and classes for XML and Unicode";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hxt-css" = callPackage
    ({ mkDerivation, base, hxt, parsec, split }:
     mkDerivation {
       pname = "hxt-css";
       version = "0.1.0.3";
       sha256 = "1dv5xy0rhcs08zyfnmf752h026r2kfg9905d482xy8srblagqi02";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base hxt parsec split ];
       homepage = "https://github.com/redneb/hxt-css";
       description = "CSS selectors for HXT";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hxt-http" = callPackage
    ({ mkDerivation, base, bytestring, HTTP, hxt, network, network-uri
     , parsec
     }:
     mkDerivation {
       pname = "hxt-http";
       version = "9.1.5.2";
       sha256 = "02yxvzczv89j518b94wh8m4dsmnymzxgv9158m7w6lqxk41rv8bg";
       configureFlags = [ "-fnetwork-uri" ];
       libraryHaskellDepends = [
         base bytestring HTTP hxt network network-uri parsec
       ];
       homepage = "https://github.com/UweSchmidt/hxt";
       description = "Interface to native Haskell HTTP package HTTP";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hxt-pickle-utils" = callPackage
    ({ mkDerivation, base, hxt, mtl }:
     mkDerivation {
       pname = "hxt-pickle-utils";
       version = "0.1.0.3";
       sha256 = "1id9459yphsbxqa0z89dhsmqqcgvk2axv91d05aw3n6r4ygs3nwx";
       revision = "1";
       editedCabalFile = "16dh3pj4bjalvahiwqcfxx3qasr3kqqy9bq7jfhp8hnn2fij0nvf";
       libraryHaskellDepends = [ base hxt mtl ];
       homepage = "https://github.com/silkapp/hxt-pickle-utils";
       description = "Utility functions for using HXT picklers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hxt-regex-xmlschema" = callPackage
    ({ mkDerivation, base, bytestring, criterion, deepseq, HUnit
     , hxt-charproperties, parsec, text
     }:
     mkDerivation {
       pname = "hxt-regex-xmlschema";
       version = "9.2.0.3";
       sha256 = "1c4jr0439f5yc05h7iz53fa47g6l2wrvqp6gvwf01mlqajk3nx7l";
       libraryHaskellDepends = [
         base bytestring hxt-charproperties parsec text
       ];
       testHaskellDepends = [ base bytestring HUnit parsec text ];
       benchmarkHaskellDepends = [
         base bytestring criterion deepseq parsec text
       ];
       homepage = "http://www.haskell.org/haskellwiki/Regular_expressions_for_XML_Schema";
       description = "A regular expression library for W3C XML Schema regular expressions";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hxt-unicode" = callPackage
    ({ mkDerivation, base, hxt-charproperties }:
     mkDerivation {
       pname = "hxt-unicode";
       version = "9.0.2.4";
       sha256 = "0rj48cy8z4fl3zpg5bpa458kqr83adav6jnqv4i71dclpprj6n3v";
       libraryHaskellDepends = [ base hxt-charproperties ];
       homepage = "https://github.com/UweSchmidt/hxt";
       description = "Unicode en-/decoding functions for utf8, iso-latin-* and other encodings";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hybrid-vectors" = callPackage
    ({ mkDerivation, base, deepseq, primitive, vector }:
     mkDerivation {
       pname = "hybrid-vectors";
       version = "0.2.1";
       sha256 = "18nc6qw7f9rxi0h6qk28yq6i0x19gwjzq2v9mi2ajxnwzvydip1f";
       revision = "1";
       editedCabalFile = "1i73cfi226l8nivqw9dxnxajkdsgxkh89h00mgsrplf60kdh4wzh";
       libraryHaskellDepends = [ base deepseq primitive vector ];
       homepage = "http://github.com/ekmett/hybrid-vectors";
       description = "Hybrid vectors e.g. Mixed Boxed/Unboxed vectors";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hyphenation" = callPackage
    ({ mkDerivation, base, bytestring, containers, unordered-containers
     , zlib
     }:
     mkDerivation {
       pname = "hyphenation";
       version = "0.6";
       sha256 = "1xqj4na1gm40ssirc4k70r27bzxhg2dkiipp48a5hqwgq5k3crrg";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base bytestring containers unordered-containers zlib
       ];
       doCheck = false;
       homepage = "http://github.com/ekmett/hyphenation";
       description = "Configurable Knuth-Liang hyphenation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ical" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, containers, either, mtl
     , text, time, transformers
     }:
     mkDerivation {
       pname = "ical";
       version = "0.0.1";
       sha256 = "10nqlypcv7rpc8q83rjhpb2n3sfqfx6p3xhf123hmacs4ks5vr7m";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson attoparsec base containers either mtl text time transformers
       ];
       executableHaskellDepends = [ base time ];
       testHaskellDepends = [ base ];
       homepage = "http://github.com/chrisdone/ical#readme";
       description = "iCalendar format parser and org-mode converter";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "iconv" = callPackage
    ({ mkDerivation, base, bytestring }:
     mkDerivation {
       pname = "iconv";
       version = "0.4.1.3";
       sha256 = "0m5m0ph5im443xcz60wm1zp98bnmf8l1b5gfllxwhjriwdl52hin";
       libraryHaskellDepends = [ base bytestring ];
       description = "String encoding conversion";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "identicon" = callPackage
    ({ mkDerivation, base, bytestring, hspec, JuicyPixels }:
     mkDerivation {
       pname = "identicon";
       version = "0.1.0";
       sha256 = "14xcmfsad6scqpskgx780ncdv9g5f9na8givl6kd974n3gl0qwfc";
       libraryHaskellDepends = [ base bytestring JuicyPixels ];
       testHaskellDepends = [ base bytestring hspec JuicyPixels ];
       homepage = "https://github.com/mrkkrp/identicon";
       description = "Flexible generation of identicons";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "idris" = callPackage
    ({ mkDerivation, aeson, annotated-wl-pprint, ansi-terminal
     , ansi-wl-pprint, array, async, base, base64-bytestring, binary
     , blaze-html, blaze-markup, bytestring, cheapskate, containers
     , deepseq, directory, filepath, fingertree, fsnotify, haskeline
     , ieee754, mtl, network, optparse-applicative, parsers, pretty
     , process, regex-tdfa, safe, split, tagged, tasty, tasty-golden
     , tasty-rerun, terminal-size, text, time, transformers
     , transformers-compat, trifecta, uniplate, unix
     , unordered-containers, utf8-string, vector
     , vector-binary-instances, zip-archive
     }:
     mkDerivation {
       pname = "idris";
       version = "0.12.3";
       sha256 = "1ijrbgzaahw9aagn4al55nqcggrg9ajlrkq2fjc1saq3xdd3v7rs";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson annotated-wl-pprint ansi-terminal ansi-wl-pprint array async
         base base64-bytestring binary blaze-html blaze-markup bytestring
         cheapskate containers deepseq directory filepath fingertree
         fsnotify haskeline ieee754 mtl network optparse-applicative parsers
         pretty process regex-tdfa safe split terminal-size text time
         transformers transformers-compat trifecta uniplate unix
         unordered-containers utf8-string vector vector-binary-instances
         zip-archive
       ];
       executableHaskellDepends = [
         base directory filepath haskeline transformers
       ];
       testHaskellDepends = [
         base bytestring containers directory filepath haskeline
         optparse-applicative process tagged tasty tasty-golden tasty-rerun
         time transformers
       ];
       doCheck = false;
       homepage = "http://www.idris-lang.org/";
       description = "Functional Programming Language with Dependent Types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ieee754" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "ieee754";
       version = "0.7.9";
       sha256 = "05fxzif2jq6904l9py7hjlj978jwafn0jdg5qyl3w56p8p2n066w";
       libraryHaskellDepends = [ base ];
       homepage = "http://github.com/patperry/hs-ieee754";
       description = "Utilities for dealing with IEEE floating point numbers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ignore" = callPackage
    ({ mkDerivation, base, directory, Glob, HTF, mtl, path, pcre-heavy
     , text
     }:
     mkDerivation {
       pname = "ignore";
       version = "0.1.1.0";
       sha256 = "0x9mqx198ssj742cv8w643w2cxv9avgyl9j7dr85mp4bmgyq3x5a";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base directory Glob mtl path pcre-heavy text
       ];
       executableHaskellDepends = [ base directory path ];
       testHaskellDepends = [ base HTF text ];
       homepage = "http://github.com/agrafix/ignore";
       description = "Handle ignore files of different VCSes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ilist" = callPackage
    ({ mkDerivation, base, criterion, hspec, lens, transformers, vector
     }:
     mkDerivation {
       pname = "ilist";
       version = "0.2.0.0";
       sha256 = "1vrww0w956rjyh6jrjfnbqbdd12hadvmvxx3r8v4n6p00i4apgzz";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base hspec transformers ];
       benchmarkHaskellDepends = [
         base criterion lens transformers vector
       ];
       homepage = "http://github.com/aelve/ilist";
       description = "Optimised list functions for doing index-related things";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "imagesize-conduit" = callPackage
    ({ mkDerivation, base, bytestring, conduit, conduit-extra
     , exceptions, hspec, resourcet
     }:
     mkDerivation {
       pname = "imagesize-conduit";
       version = "1.1";
       sha256 = "06dc0453l7n3g05pg118y4smlzkl6p56zazpi4dr41dkg12pii9i";
       libraryHaskellDepends = [
         base bytestring conduit conduit-extra exceptions
       ];
       testHaskellDepends = [
         base bytestring conduit conduit-extra hspec resourcet
       ];
       homepage = "http://github.com/silkapp/imagesize-conduit";
       description = "Determine the size of some common image formats";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "imm" = callPackage
    ({ mkDerivation, aeson, ansi-wl-pprint, atom-conduit, base
     , bytestring, case-insensitive, chunked-data, comonad, compdata
     , conduit, conduit-combinators, conduit-parse, connection
     , containers, directory, dyre, exceptions, fast-logger, filepath
     , free, hashable, HaskellNet, HaskellNet-SSL, http-client
     , http-client-tls, http-types, mime-mail, mono-traversable
     , monoid-subclasses, network, opml-conduit, optparse-applicative
     , rainbow, rainbox, rss-conduit, text, time, timerep, tls
     , transformers, uri-bytestring, xml, xml-conduit
     }:
     mkDerivation {
       pname = "imm";
       version = "1.0.1.0";
       sha256 = "12v56pzc99cc39drcagrlhxw15vxwlan4dbsna4hxs9xnhalhyi8";
       revision = "1";
       editedCabalFile = "09byh5ii1vhdgdx93zvpssln4rbh8y865d20dw7migbllfmmmwxn";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson ansi-wl-pprint atom-conduit base bytestring case-insensitive
         chunked-data comonad compdata conduit conduit-combinators
         conduit-parse connection containers directory dyre exceptions
         fast-logger filepath free hashable HaskellNet HaskellNet-SSL
         http-client http-client-tls http-types mime-mail mono-traversable
         monoid-subclasses network opml-conduit optparse-applicative rainbow
         rainbox rss-conduit text time timerep tls transformers
         uri-bytestring xml xml-conduit
       ];
       executableHaskellDepends = [ base free ];
       homepage = "https://github.com/k0ral/imm";
       description = "Execute arbitrary actions for each unread element of RSS/Atom feeds";
       license = "unknown";
     }) {};
  "immortal" = callPackage
    ({ mkDerivation, base, lifted-base, monad-control, stm, tasty
     , tasty-hunit, transformers, transformers-base
     }:
     mkDerivation {
       pname = "immortal";
       version = "0.2.2";
       sha256 = "0fk2qgi33k45nbrbngqr73kaxcd6bf25fk8qh1rwvspm60w8z1dk";
       libraryHaskellDepends = [
         base lifted-base monad-control stm transformers-base
       ];
       testHaskellDepends = [
         base lifted-base stm tasty tasty-hunit transformers
       ];
       homepage = "https://github.com/feuerbach/immortal";
       description = "Spawn threads that never die (unless told to do so)";
       license = stdenv.lib.licenses.mit;
     }) {};
  "include-file" = callPackage
    ({ mkDerivation, base, bytestring, criterion, random
     , template-haskell
     }:
     mkDerivation {
       pname = "include-file";
       version = "0.1.0.3";
       sha256 = "0a9xwd5ihrw5z8i8mvfmghdjk9nnhif97jdp7jamyzvivhxiz3r0";
       libraryHaskellDepends = [
         base bytestring random template-haskell
       ];
       testHaskellDepends = [ base bytestring ];
       benchmarkHaskellDepends = [ base bytestring criterion ];
       description = "Inclusion of files in executables at compile-time";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "incremental-parser" = callPackage
    ({ mkDerivation, base, bytestring, checkers, criterion, deepseq
     , monoid-subclasses, QuickCheck, tasty, tasty-quickcheck, text
     }:
     mkDerivation {
       pname = "incremental-parser";
       version = "0.2.5";
       sha256 = "1hbsm1g8avph1n107c32d1r3bbk6kli6rg7a1k03wf3dx04d43vx";
       libraryHaskellDepends = [ base monoid-subclasses ];
       testHaskellDepends = [
         base checkers monoid-subclasses QuickCheck tasty tasty-quickcheck
       ];
       benchmarkHaskellDepends = [
         base bytestring criterion deepseq monoid-subclasses text
       ];
       homepage = "https://github.com/blamario/incremental-parser";
       description = "Generic parser library capable of providing partial results from partial input";
       license = "GPL";
     }) {};
  "indentation-core" = callPackage
    ({ mkDerivation, base, mtl }:
     mkDerivation {
       pname = "indentation-core";
       version = "0.0";
       sha256 = "1nbqr8vac93cbxfaswcq21izpp8n0s1mwp8c13yvz6nfaqkz1ljg";
       libraryHaskellDepends = [ base mtl ];
       homepage = "https://bitbucket.org/adamsmd/indentation";
       description = "Indentation sensitive parsing combinators core library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "indentation-parsec" = callPackage
    ({ mkDerivation, base, indentation-core, mtl, parsec, tasty
     , tasty-hunit
     }:
     mkDerivation {
       pname = "indentation-parsec";
       version = "0.0";
       sha256 = "0z6dklvb5nyyi9wabwbblc508f7s0w6srsg0wkygzmdj8y7bqlji";
       libraryHaskellDepends = [ base indentation-core mtl parsec ];
       testHaskellDepends = [ base parsec tasty tasty-hunit ];
       homepage = "https://bitbucket.org/adamsmd/indentation";
       description = "Indentation sensitive parsing combinators for Parsec";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "indents" = callPackage
    ({ mkDerivation, base, concatenative, mtl, parsec }:
     mkDerivation {
       pname = "indents";
       version = "0.3.3";
       sha256 = "16lz21bp9j14xilnq8yym22p3saxvc9fsgfcf5awn2a6i6n527xn";
       libraryHaskellDepends = [ base concatenative mtl parsec ];
       homepage = "http://patch-tag.com/r/salazar/indents";
       description = "indentation sensitive parser-combinators for parsec";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "inflections" = callPackage
    ({ mkDerivation, base, containers, HUnit, parsec, QuickCheck
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "inflections";
       version = "0.2.0.1";
       sha256 = "0d9civz3kbmi66yk7qaqrx114w5lkl5zaysgf5sgiyq9nji5dj2b";
       libraryHaskellDepends = [ base containers parsec ];
       testHaskellDepends = [
         base containers HUnit parsec QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2
       ];
       homepage = "https://github.com/stackbuilders/inflections-hs";
       description = "Inflections library for Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};
  "ini" = callPackage
    ({ mkDerivation, attoparsec, base, text, unordered-containers }:
     mkDerivation {
       pname = "ini";
       version = "0.3.5";
       sha256 = "1iicavbjr4qmlcdxh32cgqxlxd80xvzyxxskrs3hji1qzrnq7lxz";
       libraryHaskellDepends = [
         attoparsec base text unordered-containers
       ];
       homepage = "http://github.com/chrisdone/ini";
       description = "Quick and easy configuration files in the INI format";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "inline-c" = callPackage
    ({ mkDerivation, ansi-wl-pprint, base, binary, bytestring
     , containers, cryptohash, directory, filepath, gsl, gslcblas
     , hashable, hspec, mtl, parsec, parsers, QuickCheck, raw-strings-qq
     , regex-posix, template-haskell, transformers, unordered-containers
     , vector
     }:
     mkDerivation {
       pname = "inline-c";
       version = "0.5.6.1";
       sha256 = "0kpbwrri9idllwd7gfamghrdrz16zqjphmb3cp5nq160dxz73brd";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         ansi-wl-pprint base binary bytestring containers cryptohash
         directory filepath hashable mtl parsec parsers QuickCheck
         template-haskell transformers unordered-containers vector
       ];
       executableSystemDepends = [ gsl gslcblas ];
       testHaskellDepends = [
         ansi-wl-pprint base containers hashable hspec parsers QuickCheck
         raw-strings-qq regex-posix template-haskell transformers
         unordered-containers vector
       ];
       description = "Write Haskell source files including C code inline. No FFI required.";
       license = stdenv.lib.licenses.mit;
     }) {inherit (pkgs) gsl; gslcblas = null;};
  "inline-c-cpp" = callPackage
    ({ mkDerivation, base, inline-c, template-haskell }:
     mkDerivation {
       pname = "inline-c-cpp";
       version = "0.1.0.0";
       sha256 = "0iba77p2ncxbg5sb4ks8f3lgp6zdnjhzvrr2ap3yg49is5b9f5rf";
       libraryHaskellDepends = [ base inline-c template-haskell ];
       testHaskellDepends = [ base ];
       description = "Lets you embed C++ code into Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};
  "inline-r" = callPackage
    ({ mkDerivation, aeson, base, bytestring, c2hs, containers
     , criterion, data-default-class, deepseq, directory, exceptions
     , filepath, ieee754, mtl, pretty, primitive, process
     , quickcheck-assertions, R, reflection, setenv, silently
     , singletons, strict, tasty, tasty-expected-failure, tasty-golden
     , tasty-hunit, tasty-quickcheck, template-haskell, temporary, text
     , th-lift, th-orphans, transformers, unix, vector
     }:
     mkDerivation {
       pname = "inline-r";
       version = "0.9.0.1";
       sha256 = "1by27qjsgwaws7nf3lslml7n58j2fk478pinflk10jji5zcs4nz9";
       libraryHaskellDepends = [
         aeson base bytestring containers data-default-class deepseq
         exceptions mtl pretty primitive process reflection setenv
         singletons template-haskell text th-lift th-orphans transformers
         unix vector
       ];
       libraryPkgconfigDepends = [ R ];
       libraryToolDepends = [ c2hs ];
       testHaskellDepends = [
         base bytestring directory filepath ieee754 mtl process
         quickcheck-assertions silently singletons strict tasty
         tasty-expected-failure tasty-golden tasty-hunit tasty-quickcheck
         template-haskell temporary text unix vector
       ];
       benchmarkHaskellDepends = [
         base criterion filepath primitive process singletons
         template-haskell vector
       ];
       homepage = "https://tweag.github.io/HaskellR";
       description = "Seamlessly call R from Haskell and vice versa. No FFI required.";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) R;};
  "insert-ordered-containers" = callPackage
    ({ mkDerivation, aeson, base, base-compat, hashable, lens
     , QuickCheck, semigroupoids, semigroups, tasty, tasty-quickcheck
     , text, transformers, unordered-containers
     }:
     mkDerivation {
       pname = "insert-ordered-containers";
       version = "0.1.0.1";
       sha256 = "02lhdgaaf6qmn247fnicmd1v1cvcn6n50498kfkqg661538ya1a9";
       revision = "3";
       editedCabalFile = "1ccq5ivly2y9k214lbdz0l5h4w5wh1mw24n88n5ldb9ml2dac7y8";
       libraryHaskellDepends = [
         aeson base base-compat hashable lens semigroupoids semigroups text
         transformers unordered-containers
       ];
       testHaskellDepends = [
         aeson base base-compat hashable lens QuickCheck semigroupoids
         semigroups tasty tasty-quickcheck text transformers
         unordered-containers
       ];
       homepage = "https://github.com/phadej/insert-ordered-containers#readme";
       description = "Associative containers retating insertion order for traversals";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "integration" = callPackage
    ({ mkDerivation, base, parallel }:
     mkDerivation {
       pname = "integration";
       version = "0.2.1";
       sha256 = "0bsqad6q4kc0wykswwqykcn6nd4wj6yd9dzpg075h2n1mmg3h9qc";
       libraryHaskellDepends = [ base parallel ];
       homepage = "https://github.com/ekmett/integration";
       description = "Fast robust numeric integration via tanh-sinh quadrature";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "intero" = callPackage
    ({ mkDerivation, array, base, bytestring, containers, directory
     , filepath, ghc, ghc-boot-th, ghc-paths, ghci, haskeline, hspec
     , process, regex-compat, syb, temporary, time, transformers, unix
     }:
     mkDerivation {
       pname = "intero";
       version = "0.1.20";
       sha256 = "0xysd4afdvrqbbndby0ylm8qph190d5sj81l42hcdl9w7bgx4gz9";
       revision = "1";
       editedCabalFile = "1fgqd3qkws9yb3vj8ay695ym5cgifi082wryh68dp0qqh7agwkhl";
       isLibrary = false;
       isExecutable = true;
       enableSeparateDataOutput = true;
       executableHaskellDepends = [
         array base bytestring containers directory filepath ghc ghc-boot-th
         ghc-paths ghci haskeline process syb time transformers unix
       ];
       testHaskellDepends = [
         base directory hspec process regex-compat temporary transformers
       ];
       doHaddock = false;
       homepage = "https://github.com/commercialhaskell/intero";
       description = "Complete interactive development program for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "interpolate" = callPackage
    ({ mkDerivation, base, bytestring, haskell-src-meta, hspec
     , QuickCheck, quickcheck-instances, template-haskell, text
     }:
     mkDerivation {
       pname = "interpolate";
       version = "0.1.0";
       sha256 = "0wlc10qd1bq3xj64a3yq2gzds9kas9zyylkm9kxd46gy35fns6id";
       libraryHaskellDepends = [ base haskell-src-meta template-haskell ];
       testHaskellDepends = [
         base bytestring haskell-src-meta hspec QuickCheck
         quickcheck-instances template-haskell text
       ];
       description = "String interpolation done right";
       license = stdenv.lib.licenses.mit;
     }) {};
  "interpolatedstring-perl6" = callPackage
    ({ mkDerivation, base, bytestring, haskell-src-meta
     , template-haskell, text
     }:
     mkDerivation {
       pname = "interpolatedstring-perl6";
       version = "1.0.0";
       sha256 = "1lx125wzadvbicsaml9wrhxxplc4gd0i4wk3f1apb0kl5nnv5q35";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base bytestring haskell-src-meta template-haskell text
       ];
       description = "QuasiQuoter for Perl6-style multi-line interpolated strings";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "intervals" = callPackage
    ({ mkDerivation, array, base, distributive, ghc-prim }:
     mkDerivation {
       pname = "intervals";
       version = "0.7.2";
       sha256 = "0a7ysncmwkqh7q1d8y1h4lb5373k93xdly3bqrjb7ihazmylml0d";
       libraryHaskellDepends = [ array base distributive ghc-prim ];
       homepage = "http://github.com/ekmett/intervals";
       description = "Interval Arithmetic";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "invariant" = callPackage
    ({ mkDerivation, array, base, bifunctors, comonad, containers
     , contravariant, ghc-prim, hspec, profunctors, QuickCheck
     , semigroups, StateVar, stm, tagged, template-haskell, transformers
     , transformers-compat, unordered-containers
     }:
     mkDerivation {
       pname = "invariant";
       version = "0.4";
       sha256 = "05pkmsbq98xcvz4y6n6ipw240wcdhfh3l4y04dv1cpalxf82gkyw";
       libraryHaskellDepends = [
         array base bifunctors comonad containers contravariant ghc-prim
         profunctors semigroups StateVar stm tagged template-haskell
         transformers transformers-compat unordered-containers
       ];
       testHaskellDepends = [ base hspec QuickCheck ];
       homepage = "https://github.com/nfrisby/invariant-functors";
       description = "Haskell 98 invariant functors";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "io-choice" = callPackage
    ({ mkDerivation, base, hspec, lifted-base, monad-control
     , template-haskell, transformers, transformers-base
     }:
     mkDerivation {
       pname = "io-choice";
       version = "0.0.6";
       sha256 = "1vqw5v1b9mrkhhszxp1rg8gl1d53akdlzwh40w01b1ni208jhav1";
       libraryHaskellDepends = [
         base lifted-base monad-control template-haskell transformers
         transformers-base
       ];
       testHaskellDepends = [
         base hspec lifted-base monad-control transformers
       ];
       description = "Choice for IO and lifted IO";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "io-machine" = callPackage
    ({ mkDerivation, base, time }:
     mkDerivation {
       pname = "io-machine";
       version = "0.2.0.0";
       sha256 = "1jqw6g0nm1mx9c6qnbrwr5mpgaiyfjzqwj0r6mzhsvxvzkawip05";
       libraryHaskellDepends = [ base time ];
       testHaskellDepends = [ base ];
       homepage = "https://github.com/YoshikuniJujo/io-machine#readme";
       description = "Easy I/O model to learn IO monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "io-manager" = callPackage
    ({ mkDerivation, base, containers }:
     mkDerivation {
       pname = "io-manager";
       version = "0.1.0.2";
       sha256 = "0f21h36z2ls0d6g31pcf4kcyfninaxws8w159zy33bwa19saf2mz";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base containers ];
       executableHaskellDepends = [ base containers ];
       description = "Skeleton library around the IO monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "io-memoize" = callPackage
    ({ mkDerivation, async, base }:
     mkDerivation {
       pname = "io-memoize";
       version = "1.1.1.0";
       sha256 = "0ga85wdvz67jjx8qh6f687kfikcrfmp7winn13v6na7vlaqs2ly7";
       libraryHaskellDepends = [ async base ];
       homepage = "https://github.com/DanBurton/io-memoize";
       description = "Memoize IO actions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "io-region" = callPackage
    ({ mkDerivation, base, hspec, stm, transformers }:
     mkDerivation {
       pname = "io-region";
       version = "0.1.1";
       sha256 = "1w8m21zkhbhqr9lsdzwxfpy0jhb2ciybn3bvhyp3zlxkq9k3yc7f";
       libraryHaskellDepends = [ base stm ];
       testHaskellDepends = [ base hspec transformers ];
       homepage = "https://github.com/Yuras/io-region/wiki";
       description = "Exception safe resource management with dynamic regions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "io-storage" = callPackage
    ({ mkDerivation, base, containers }:
     mkDerivation {
       pname = "io-storage";
       version = "0.3";
       sha256 = "1ga9bd7iri6vlsxnjx765yy3bxc4lbz644wyw88yzvpjgz6ga3cs";
       libraryHaskellDepends = [ base containers ];
       homepage = "http://github.com/willdonnelly/io-storage";
       description = "A key-value store in the IO monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "io-streams" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, bytestring-builder
     , deepseq, directory, filepath, HUnit, mtl, network, primitive
     , process, QuickCheck, test-framework, test-framework-hunit
     , test-framework-quickcheck2, text, time, transformers, vector
     , zlib, zlib-bindings
     }:
     mkDerivation {
       pname = "io-streams";
       version = "1.3.6.0";
       sha256 = "0gcy4hyxxn323sf85hgw0jqv6lzc25kzm2xrgml6j3f37hvfhajy";
       revision = "1";
       editedCabalFile = "0kwrz9117lzl61hsh3yh1hbdzszbqrvwr0m4c110yv7b8mws4pif";
       libraryHaskellDepends = [
         attoparsec base bytestring bytestring-builder network primitive
         process text time transformers vector zlib-bindings
       ];
       testHaskellDepends = [
         attoparsec base bytestring bytestring-builder deepseq directory
         filepath HUnit mtl network primitive process QuickCheck
         test-framework test-framework-hunit test-framework-quickcheck2 text
         time transformers vector zlib zlib-bindings
       ];
       description = "Simple, composable, and easy-to-use stream I/O";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "io-streams-haproxy" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, HUnit, io-streams
     , network, test-framework, test-framework-hunit, transformers
     }:
     mkDerivation {
       pname = "io-streams-haproxy";
       version = "1.0.0.1";
       sha256 = "0zwjdsg1pcxzd8s0d308q4jhx0pfrk2aq8q039gs8k9y8h9cbh64";
       libraryHaskellDepends = [
         attoparsec base bytestring io-streams network transformers
       ];
       testHaskellDepends = [
         attoparsec base bytestring HUnit io-streams network test-framework
         test-framework-hunit transformers
       ];
       homepage = "http://snapframework.com/";
       description = "HAProxy protocol 1.5 support for io-streams";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ip6addr" = callPackage
    ({ mkDerivation, base, cmdargs, IPv6Addr, text }:
     mkDerivation {
       pname = "ip6addr";
       version = "0.5.2";
       sha256 = "17slx6q5i02j8a81fyx2ns1q86qsln5ihm41jr8a0nknsbvhnimd";
       revision = "1";
       editedCabalFile = "0z030w6lsxz67d7131alpldzqyfk0irmpxygdv2z73hrx306k5pm";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [ base cmdargs IPv6Addr text ];
       doHaddock = false;
       homepage = "https://github.com/MichelBoucey/ip6addr";
       description = "Commandline tool to generate IPv6 address text representations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "iproute" = callPackage
    ({ mkDerivation, appar, base, byteorder, containers, doctest, hspec
     , network, QuickCheck, safe
     }:
     mkDerivation {
       pname = "iproute";
       version = "1.7.1";
       sha256 = "1viyxq3m1aifl05w0hxwrhhhcfpmvwz4ymil2gngi4nfm0yd1f2p";
       libraryHaskellDepends = [
         appar base byteorder containers network
       ];
       testHaskellDepends = [
         appar base byteorder containers doctest hspec network QuickCheck
         safe
       ];
       homepage = "http://www.mew.org/~kazu/proj/iproute/";
       description = "IP Routing Table";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "irc" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, HUnit, QuickCheck
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "irc";
       version = "0.6.1.0";
       sha256 = "1q9p2qwfy9rsfyaja4x3gjr8ql2ka2ja5qv56b062bdkvzafl5iq";
       libraryHaskellDepends = [ attoparsec base bytestring ];
       testHaskellDepends = [
         base bytestring HUnit QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2
       ];
       description = "A small library for parsing IRC messages";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "irc-client" = callPackage
    ({ mkDerivation, base, bytestring, conduit, connection, irc-conduit
     , irc-ctcp, network-conduit-tls, old-locale, stm, stm-conduit, text
     , time, tls, transformers, x509, x509-store, x509-validation
     }:
     mkDerivation {
       pname = "irc-client";
       version = "0.4.4.1";
       sha256 = "1xpccg4bqflrf039953qjb721m38w8x6qn75x1xr7d4y8b6hbl9q";
       libraryHaskellDepends = [
         base bytestring conduit connection irc-conduit irc-ctcp
         network-conduit-tls old-locale stm stm-conduit text time tls
         transformers x509 x509-store x509-validation
       ];
       homepage = "https://github.com/barrucadu/irc-client";
       description = "An IRC client library";
       license = stdenv.lib.licenses.mit;
     }) {};
  "irc-conduit" = callPackage
    ({ mkDerivation, async, base, bytestring, conduit, conduit-extra
     , connection, irc, irc-ctcp, network-conduit-tls, profunctors, text
     , time, tls, transformers, x509-validation
     }:
     mkDerivation {
       pname = "irc-conduit";
       version = "0.2.2.0";
       sha256 = "0r9hn6mfjw1a268ndnrksxapq5c0pc0b3rjv0qppikg9cs50avmn";
       libraryHaskellDepends = [
         async base bytestring conduit conduit-extra connection irc irc-ctcp
         network-conduit-tls profunctors text time tls transformers
         x509-validation
       ];
       homepage = "https://github.com/barrucadu/irc-conduit";
       description = "Streaming IRC message library using conduits";
       license = stdenv.lib.licenses.mit;
     }) {};
  "irc-ctcp" = callPackage
    ({ mkDerivation, base, bytestring, text }:
     mkDerivation {
       pname = "irc-ctcp";
       version = "0.1.3.0";
       sha256 = "16mp9dpp57id760zc932dszd5r1ncskwwxrp0djka5r1alddjz6n";
       libraryHaskellDepends = [ base bytestring text ];
       homepage = "https://github.com/barrucadu/irc-ctcp";
       description = "A CTCP encoding and decoding library for IRC clients";
       license = stdenv.lib.licenses.mit;
     }) {};
  "irc-dcc" = callPackage
    ({ mkDerivation, attoparsec, base, binary, bytestring, errors
     , hspec-attoparsec, io-streams, iproute, irc-ctcp, mtl, network
     , path, safe-exceptions, tasty, tasty-hspec, tasty-quickcheck
     , transformers, utf8-string
     }:
     mkDerivation {
       pname = "irc-dcc";
       version = "2.0.0";
       sha256 = "059i92c690j8y0jqzpf8j6fr96apqfqlvkj51ng47mza544vn8dg";
       libraryHaskellDepends = [
         attoparsec base binary bytestring errors io-streams iproute
         irc-ctcp mtl network path safe-exceptions transformers utf8-string
       ];
       testHaskellDepends = [
         base bytestring hspec-attoparsec iproute network path tasty
         tasty-hspec tasty-quickcheck utf8-string
       ];
       homepage = "https://github.com/JanGe/irc-dcc";
       description = "A DCC message parsing and helper library for IRC clients";
       license = stdenv.lib.licenses.mit;
     }) {};
  "islink" = callPackage
    ({ mkDerivation, base, unordered-containers }:
     mkDerivation {
       pname = "islink";
       version = "0.1.0.0";
       sha256 = "1mxfs8k0znc7v2iynjnhr4k5c9as4ip37ybvxnvjfqy4dld9rgyg";
       libraryHaskellDepends = [ base unordered-containers ];
       homepage = "https://github.com/redneb/islink";
       description = "Check if an HTML element is a link";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "iso3166-country-codes" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "iso3166-country-codes";
       version = "0.20140203.7";
       sha256 = "1cfmrkrx5wdcr8rrwakhmv0a5bxipxc3l7p4z5nxzl5nrjrli79s";
       libraryHaskellDepends = [ base ];
       description = "A datatype for ISO 3166 country codes";
       license = "LGPL";
     }) {};
  "iso639" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "iso639";
       version = "0.1.0.3";
       sha256 = "1s15vb00nqxnmm59axapipib1snh6q5qhfdw7pgb9vdsz8i86jqj";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/HugoDaniel/iso639";
       description = "ISO-639-1 language codes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "iso8601-time" = callPackage
    ({ mkDerivation, base, hspec, HUnit, time }:
     mkDerivation {
       pname = "iso8601-time";
       version = "0.1.4";
       sha256 = "09h1jfdj9fv1nsryhka2mgl8nig9840f5kv06vyyh7l4l1z767bn";
       libraryHaskellDepends = [ base time ];
       testHaskellDepends = [ base hspec HUnit time ];
       homepage = "https://github.com/nh2/iso8601-time";
       description = "Convert to/from the ISO 8601 time format";
       license = stdenv.lib.licenses.mit;
     }) {};
  "iterable" = callPackage
    ({ mkDerivation, base, mtl, tagged, template-haskell, vector }:
     mkDerivation {
       pname = "iterable";
       version = "3.0";
       sha256 = "194718jpjwkv3ynlpgjlpvf0iqnj7dkd3zmci363gsa425i3vlbc";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base mtl tagged template-haskell vector
       ];
       homepage = "https://github.com/BioHaskell/iterable";
       description = "API for hierarchical multilevel collections";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ix-shapable" = callPackage
    ({ mkDerivation, array, base }:
     mkDerivation {
       pname = "ix-shapable";
       version = "0.1.0";
       sha256 = "08ljlzywnw0h8ijwb6yh4r8l6z7bbknwxv9cjq7lkfx7m2vgy1sh";
       libraryHaskellDepends = [ array base ];
       description = "Reshape multi-dimensional arrays";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ixset" = callPackage
    ({ mkDerivation, base, containers, safecopy, syb, syb-with-class
     , template-haskell
     }:
     mkDerivation {
       pname = "ixset";
       version = "1.0.7";
       sha256 = "1la2gdlblgwpymlawcc9zqr7c5w942di12yshm35wg0x3dc5l3ig";
       libraryHaskellDepends = [
         base containers safecopy syb syb-with-class template-haskell
       ];
       homepage = "http://happstack.com";
       description = "Efficient relational queries on Haskell sets";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ixset-typed" = callPackage
    ({ mkDerivation, base, containers, deepseq, HUnit, QuickCheck
     , safecopy, syb, tasty, tasty-hunit, tasty-quickcheck
     , template-haskell
     }:
     mkDerivation {
       pname = "ixset-typed";
       version = "0.3.1";
       sha256 = "0xdm036vd6p7ax6dqziccrgzh45hv5zzg747s25hsihhjv46665l";
       libraryHaskellDepends = [
         base containers deepseq safecopy syb template-haskell
       ];
       testHaskellDepends = [
         base containers HUnit QuickCheck tasty tasty-hunit tasty-quickcheck
       ];
       description = "Efficient relational queries on Haskell sets";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "jailbreak-cabal" = callPackage
    ({ mkDerivation, base, Cabal }:
     mkDerivation {
       pname = "jailbreak-cabal";
       version = "1.3.2";
       sha256 = "1x2h54sx4ycik34q8f9g698xc2b7fai18918cd08qx7w7ny8nai1";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [ base Cabal ];
       doHaddock = false;
       homepage = "https://github.com/peti/jailbreak-cabal#readme";
       description = "Strip version restrictions from build dependencies in Cabal files";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "jmacro" = callPackage
    ({ mkDerivation, aeson, base, bytestring, containers
     , haskell-src-exts, haskell-src-meta, mtl, parseargs, parsec
     , regex-posix, safe, syb, template-haskell, text
     , unordered-containers, vector, wl-pprint-text
     }:
     mkDerivation {
       pname = "jmacro";
       version = "0.6.14";
       sha256 = "084rvwav0j33nffiklsrgafg3kmsmd2wnrydw152l6cznwd43fdc";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base bytestring containers haskell-src-exts haskell-src-meta
         mtl parsec regex-posix safe syb template-haskell text
         unordered-containers vector wl-pprint-text
       ];
       executableHaskellDepends = [
         aeson base bytestring containers haskell-src-exts haskell-src-meta
         mtl parseargs parsec regex-posix safe syb template-haskell text
         unordered-containers vector wl-pprint-text
       ];
       description = "QuasiQuotation library for programmatic generation of Javascript code";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "jmacro-rpc" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, blaze-html, bytestring
     , containers, contravariant, jmacro, mtl, scientific, split, text
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "jmacro-rpc";
       version = "0.3.2";
       sha256 = "1nf5f62s749xsji2rg25dgj7mc668l3n7i7l9n1pjkn8gfwm6bx3";
       libraryHaskellDepends = [
         aeson attoparsec base blaze-html bytestring containers
         contravariant jmacro mtl scientific split text unordered-containers
         vector
       ];
       homepage = "http://hub.darcs.net/gershomb/jmacro";
       description = "JSON-RPC clients and servers using JMacro, and evented client-server Reactive Programming";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "jmacro-rpc-happstack" = callPackage
    ({ mkDerivation, aeson, base, blaze-html, bytestring, containers
     , happstack-server, jmacro, jmacro-rpc, mtl
     }:
     mkDerivation {
       pname = "jmacro-rpc-happstack";
       version = "0.3.2";
       sha256 = "0r5h8hlsjppnhqdxa0dsrjkpv3pldbkv5v4dryd4km2v38yfxkcr";
       libraryHaskellDepends = [
         aeson base blaze-html bytestring containers happstack-server jmacro
         jmacro-rpc mtl
       ];
       homepage = "http://hub.darcs.net/gershomb/jmacro-rpc";
       description = "Happstack backend for jmacro-rpc";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "jose" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, base64-bytestring
     , bifunctors, byteable, bytestring, cryptonite, data-default-class
     , hspec, lens, memory, mtl, network-uri, QuickCheck
     , quickcheck-instances, safe, semigroups, tasty, tasty-hspec
     , tasty-quickcheck, template-haskell, text, time
     , unordered-containers, vector, x509
     }:
     mkDerivation {
       pname = "jose";
       version = "0.4.0.3";
       sha256 = "02hgbsm1b12l6j24qn7vd1vv2gscb4jx8sqri5vl576cwlvq0avl";
       libraryHaskellDepends = [
         aeson attoparsec base base64-bytestring bifunctors byteable
         bytestring cryptonite data-default-class lens memory mtl
         network-uri QuickCheck quickcheck-instances safe semigroups
         template-haskell text time unordered-containers vector x509
       ];
       testHaskellDepends = [
         aeson attoparsec base base64-bytestring bifunctors byteable
         bytestring cryptonite data-default-class hspec lens memory mtl
         network-uri QuickCheck quickcheck-instances safe semigroups tasty
         tasty-hspec tasty-quickcheck template-haskell text time
         unordered-containers vector x509
       ];
       homepage = "https://github.com/frasertweedale/hs-jose";
       description = "Javascript Object Signing and Encryption and JSON Web Token library";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "jose-jwt" = callPackage
    ({ mkDerivation, aeson, base, bytestring, cereal, containers
     , criterion, cryptonite, either, hspec, HUnit, memory, mtl
     , QuickCheck, text, time, unordered-containers, vector
     }:
     mkDerivation {
       pname = "jose-jwt";
       version = "0.7.4";
       sha256 = "1ggysf5y2zf1lklxsxqny3r82hcw3y9gl9ywx2y5fazfi9jqhw3l";
       configureFlags = [ "-f-doctest" ];
       libraryHaskellDepends = [
         aeson base bytestring cereal containers cryptonite either memory
         mtl text time unordered-containers vector
       ];
       testHaskellDepends = [
         aeson base bytestring cryptonite either hspec HUnit memory mtl
         QuickCheck text unordered-containers vector
       ];
       benchmarkHaskellDepends = [ base bytestring criterion cryptonite ];
       homepage = "http://github.com/tekul/jose-jwt";
       description = "JSON Object Signing and Encryption Library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "js-flot" = callPackage
    ({ mkDerivation, base, HTTP }:
     mkDerivation {
       pname = "js-flot";
       version = "0.8.3";
       sha256 = "0yjyzqh3qzhy5h3nql1fckw0gcfb0f4wj9pm85nafpfqp2kg58hv";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base HTTP ];
       homepage = "https://github.com/ndmitchell/js-flot#readme";
       description = "Obtain minified flot code";
       license = stdenv.lib.licenses.mit;
     }) {};
  "js-jquery" = callPackage
    ({ mkDerivation, base, HTTP }:
     mkDerivation {
       pname = "js-jquery";
       version = "3.1.1";
       sha256 = "011adwcf0rx57ld6c75m9rw90zd2qj0d4pf7rmdnf7fp5gbnfbyp";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base HTTP ];
       homepage = "https://github.com/ndmitchell/js-jquery#readme";
       description = "Obtain minified jQuery code";
       license = stdenv.lib.licenses.mit;
     }) {};
  "json" = callPackage
    ({ mkDerivation, array, base, bytestring, containers, mtl, parsec
     , pretty, syb, text
     }:
     mkDerivation {
       pname = "json";
       version = "0.9.1";
       sha256 = "18l5027vc68hnnxrxlnyl59vkkg95a92m1zzms0dqiby2r6pxdcn";
       libraryHaskellDepends = [
         array base bytestring containers mtl parsec pretty syb text
       ];
       description = "Support for serialising Haskell to and from JSON";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "json-autotype" = callPackage
    ({ mkDerivation, aeson, base, bytestring, containers, directory
     , filepath, GenericPretty, hashable, hflags, lens, mmap, mtl
     , pretty, process, QuickCheck, scientific, smallcheck, text
     , uniplate, unordered-containers, vector, yaml
     }:
     mkDerivation {
       pname = "json-autotype";
       version = "1.0.15";
       sha256 = "0ig0pgv45aw2c8nq9k1r3h3g6h0wnlr8byv0by5d8lwrlh1yjlj5";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base bytestring containers filepath GenericPretty hashable
         hflags lens mmap mtl pretty process scientific text uniplate
         unordered-containers vector
       ];
       executableHaskellDepends = [
         aeson base bytestring containers filepath GenericPretty hashable
         hflags lens mtl pretty process scientific text uniplate
         unordered-containers vector yaml
       ];
       testHaskellDepends = [
         aeson base bytestring containers directory filepath GenericPretty
         hashable hflags lens mtl pretty process QuickCheck scientific
         smallcheck text uniplate unordered-containers vector
       ];
       homepage = "https://github.com/mgajda/json-autotype";
       description = "Automatic type declaration for JSON input data";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "json-rpc-generic" = callPackage
    ({ mkDerivation, aeson, aeson-generic-compat, base, bytestring
     , containers, dlist, QuickCheck, quickcheck-simple, scientific
     , text, transformers, unordered-containers, vector
     }:
     mkDerivation {
       pname = "json-rpc-generic";
       version = "0.2.1.2";
       sha256 = "1nhd3k7ji5fqdqbc23072ayzylwz987a458jc11skil9nwl5yswl";
       libraryHaskellDepends = [
         aeson aeson-generic-compat base bytestring containers dlist
         scientific text transformers unordered-containers vector
       ];
       testHaskellDepends = [
         aeson base QuickCheck quickcheck-simple text
       ];
       homepage = "http://github.com/khibino/haskell-json-rpc-generic";
       description = "Generic encoder and decode for JSON-RPC";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "json-schema" = callPackage
    ({ mkDerivation, aeson, aeson-utils, attoparsec, base, bytestring
     , containers, generic-aeson, generic-deriving, mtl, scientific
     , tasty, tasty-hunit, tasty-th, text, time, unordered-containers
     , vector
     }:
     mkDerivation {
       pname = "json-schema";
       version = "0.7.4.1";
       sha256 = "15kwgpkryd865nls9zm6ya6jzmiygsb537ij7ps39dzasqbnl3an";
       revision = "6";
       editedCabalFile = "1ck08f81klrd9glf4icm2dwywl1fgz8vg1f2r9vdbrwwk2w1l8dn";
       libraryHaskellDepends = [
         aeson base containers generic-aeson generic-deriving mtl scientific
         text time unordered-containers vector
       ];
       testHaskellDepends = [
         aeson aeson-utils attoparsec base bytestring generic-aeson tasty
         tasty-hunit tasty-th text vector
       ];
       description = "Types and type classes for defining JSON schemas";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "jwt" = callPackage
    ({ mkDerivation, aeson, base, bytestring, containers, cryptonite
     , data-default, doctest, http-types, HUnit, lens, lens-aeson
     , memory, network-uri, QuickCheck, scientific, semigroups, tasty
     , tasty-hunit, tasty-quickcheck, tasty-th, text, time
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "jwt";
       version = "0.7.2";
       sha256 = "0c8aq9y7chq58xp9qd0w5dgbh2q3ksfidj3b4dm5k68ks89p95hp";
       revision = "1";
       editedCabalFile = "1q8h94yslw6k6zcjbwx94pnji8dcr2w5n1wzgzfb8hb78w2qr1dm";
       libraryHaskellDepends = [
         aeson base bytestring containers cryptonite data-default http-types
         memory network-uri scientific semigroups text time
         unordered-containers vector
       ];
       testHaskellDepends = [
         aeson base bytestring containers cryptonite data-default doctest
         http-types HUnit lens lens-aeson memory network-uri QuickCheck
         scientific semigroups tasty tasty-hunit tasty-quickcheck tasty-th
         text time unordered-containers vector
       ];
       doCheck = false;
       homepage = "https://bitbucket.org/ssaasen/haskell-jwt";
       description = "JSON Web Token (JWT) decoding and encoding";
       license = stdenv.lib.licenses.mit;
     }) {};
  "kan-extensions" = callPackage
    ({ mkDerivation, adjunctions, array, base, comonad, containers
     , contravariant, distributive, free, mtl, semigroupoids, tagged
     , transformers
     }:
     mkDerivation {
       pname = "kan-extensions";
       version = "5.0.1";
       sha256 = "1qm0kf4krmyjbjynn96ab0h3q117vwcia5nin7n2b8b4f3jrzph1";
       libraryHaskellDepends = [
         adjunctions array base comonad containers contravariant
         distributive free mtl semigroupoids tagged transformers
       ];
       homepage = "http://github.com/ekmett/kan-extensions/";
       description = "Kan extensions, Kan lifts, various forms of the Yoneda lemma, and (co)density (co)monads";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "kansas-comet" = callPackage
    ({ mkDerivation, aeson, base, containers, data-default-class
     , scotty, stm, text, time, transformers, unordered-containers
     }:
     mkDerivation {
       pname = "kansas-comet";
       version = "0.4";
       sha256 = "1q9rffh6589a5am8mvfzxzwws34vg08rdjxggfabhmg9y9jla6hz";
       revision = "9";
       editedCabalFile = "12m3f9qrbxrl60915jn9i4ybq8jm1ivsbz6njdk0j8hbpmq8cy3b";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson base containers data-default-class scotty stm text time
         transformers unordered-containers
       ];
       homepage = "https://github.com/ku-fpg/kansas-comet/";
       description = "A JavaScript push mechanism based on the comet idiom";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "kawhi" = callPackage
    ({ mkDerivation, aeson, base, bytestring, exceptions, http-client
     , http-conduit, http-types, mtl, safe, scientific, smallcheck
     , tasty, tasty-hunit, tasty-quickcheck, tasty-smallcheck, text
     }:
     mkDerivation {
       pname = "kawhi";
       version = "0.0.1";
       sha256 = "0vwxhd0z3pgmbv2f857fapxdsqyzj7wxjd3q44nh6rf0540v6yxv";
       revision = "1";
       editedCabalFile = "1crw5yy3fq2g0nfl79pa1y0dxkrsx7f554hzsn2zn5bja5vg4jv2";
       libraryHaskellDepends = [
         aeson base bytestring exceptions http-client http-conduit
         http-types mtl safe scientific text
       ];
       testHaskellDepends = [
         aeson base bytestring exceptions http-client http-types mtl
         scientific smallcheck tasty tasty-hunit tasty-quickcheck
         tasty-smallcheck text
       ];
       homepage = "https://github.com/hamsterdam/kawhi";
       description = "stats.NBA.com library";
       license = stdenv.lib.licenses.mit;
     }) {};
  "kdt" = callPackage
    ({ mkDerivation, base, criterion, deepseq, deepseq-generics, heap
     , mersenne-random-pure64, MonadRandom, QuickCheck
     }:
     mkDerivation {
       pname = "kdt";
       version = "0.2.4";
       sha256 = "16lz8zwv964izdbrdm8b2g8p1qdb4yv4f7qpfdi4c0fbq2d8y3xw";
       libraryHaskellDepends = [ base deepseq deepseq-generics heap ];
       testHaskellDepends = [ base deepseq deepseq-generics QuickCheck ];
       benchmarkHaskellDepends = [
         base criterion deepseq deepseq-generics heap mersenne-random-pure64
         MonadRandom QuickCheck
       ];
       homepage = "https://github.com/giogadi/kdt";
       description = "Fast and flexible k-d trees for various types of point queries";
       license = stdenv.lib.licenses.mit;
     }) {};
  "keter" = callPackage
    ({ mkDerivation, aeson, array, async, attoparsec, base
     , blaze-builder, bytestring, case-insensitive, conduit
     , conduit-extra, containers, data-default, directory, filepath
     , fsnotify, hspec, http-client, http-conduit, http-reverse-proxy
     , http-types, HUnit, lifted-base, mtl, network, process, random
     , regex-tdfa, stm, tar, template-haskell, text, time, tls
     , transformers, unix, unix-compat, unordered-containers, vector
     , wai, wai-app-static, wai-extra, warp, warp-tls, yaml, zlib
     }:
     mkDerivation {
       pname = "keter";
       version = "1.4.3.2";
       sha256 = "13sa6yjpkgqak7nnjmws928jm46839zbcdxi7whzhp1snwn9cb1k";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson array async attoparsec base blaze-builder bytestring
         case-insensitive conduit conduit-extra containers data-default
         directory filepath fsnotify http-client http-conduit
         http-reverse-proxy http-types lifted-base mtl network process
         random regex-tdfa stm tar template-haskell text time tls
         transformers unix unix-compat unordered-containers vector wai
         wai-app-static wai-extra warp warp-tls yaml zlib
       ];
       executableHaskellDepends = [ base data-default filepath ];
       testHaskellDepends = [
         base bytestring conduit hspec HUnit transformers unix
       ];
       homepage = "http://www.yesodweb.com/";
       description = "Web application deployment manager, focusing on Haskell web frameworks";
       license = stdenv.lib.licenses.mit;
     }) {};
  "keycode" = callPackage
    ({ mkDerivation, base, containers, ghc-prim, template-haskell }:
     mkDerivation {
       pname = "keycode";
       version = "0.2.2";
       sha256 = "046k8d1h5wwadf5z4pppjkc3g7v2zxlzb06s1xgixc42y5y41yan";
       libraryHaskellDepends = [
         base containers ghc-prim template-haskell
       ];
       homepage = "https://github.com/RyanGlScott/keycode";
       description = "Maps web browser keycodes to their corresponding keyboard keys";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "keys" = callPackage
    ({ mkDerivation, array, base, comonad, containers, free, hashable
     , semigroupoids, semigroups, transformers, transformers-compat
     , unordered-containers
     }:
     mkDerivation {
       pname = "keys";
       version = "3.11";
       sha256 = "1cn45h27hxwb4ci1iyd2qn0fzyb2y85qq4821a9xm37bwsvrgwqc";
       revision = "1";
       editedCabalFile = "1lyg4wyi7mkqvbfl9lvfln3j4vys47jih56zyjba7nx36kbw185i";
       libraryHaskellDepends = [
         array base comonad containers free hashable semigroupoids
         semigroups transformers transformers-compat unordered-containers
       ];
       homepage = "http://github.com/ekmett/keys/";
       description = "Keyed functors and containers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "kmeans" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "kmeans";
       version = "0.1.3";
       sha256 = "02rc3bd2cp1fp0fxbzqiy34s5gn38j8hgviilz1584z05jhj97ix";
       libraryHaskellDepends = [ base ];
       description = "K-means clustering algorithm";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "knob" = callPackage
    ({ mkDerivation, base, bytestring, transformers }:
     mkDerivation {
       pname = "knob";
       version = "0.1.1";
       sha256 = "05qj7s04p5pbasivyxc06l0jbii250zjnvb3l1y2sfhglb7q8b4c";
       libraryHaskellDepends = [ base bytestring transformers ];
       homepage = "https://john-millikin.com/software/knob/";
       description = "Memory-backed handles";
       license = stdenv.lib.licenses.mit;
     }) {};
  "koofr-client" = callPackage
    ({ mkDerivation, aeson, base, bytestring, filepath, http-client
     , http-client-tls, http-types, mtl
     }:
     mkDerivation {
       pname = "koofr-client";
       version = "1.0.0.3";
       sha256 = "1bz7akd7sssn1gzqfvr0y343771zk7dn1n3as0m93wg4ifpz1dia";
       revision = "1";
       editedCabalFile = "0qaipcg9n93z0za2a8jy3mv73a3q2b1dv98v2g5wwcv1qx7rvvhv";
       libraryHaskellDepends = [
         aeson base bytestring filepath http-client http-client-tls
         http-types mtl
       ];
       homepage = "https://github.com/edofic/koofr-api-hs";
       description = "Client to Koofr API";
       license = stdenv.lib.licenses.mit;
     }) {};
  "kraken" = callPackage
    ({ mkDerivation, aeson, base, bytestring, http-client
     , http-client-tls, mtl
     }:
     mkDerivation {
       pname = "kraken";
       version = "0.0.3";
       sha256 = "178y3d9gxfv03as4p3f5hdf4csnc3dfkpabwbyc38m0m8p2y20a0";
       revision = "1";
       editedCabalFile = "0dm107c8nxdh544pswj7saxmaz1jbzwphdzgpyk857l33sdmy203";
       libraryHaskellDepends = [
         aeson base bytestring http-client http-client-tls mtl
       ];
       description = "Kraken.io API client";
       license = stdenv.lib.licenses.mit;
     }) {};
  "lackey" = callPackage
    ({ mkDerivation, base, servant, servant-foreign, tasty, tasty-hspec
     , text
     }:
     mkDerivation {
       pname = "lackey";
       version = "0.4.1";
       sha256 = "0iqkwwd55301il0hx3lsq3j08w0v3jpz1j2b0j9flh9jcxrwq3cl";
       libraryHaskellDepends = [ base servant servant-foreign text ];
       testHaskellDepends = [ base servant tasty tasty-hspec text ];
       homepage = "https://github.com/tfausak/lackey#readme";
       description = "Generate Ruby clients from Servant APIs";
       license = stdenv.lib.licenses.mit;
     }) {};
  "language-c" = callPackage
    ({ mkDerivation, alex, array, base, bytestring, containers
     , directory, filepath, happy, pretty, process, syb
     }:
     mkDerivation {
       pname = "language-c";
       version = "0.5.0";
       sha256 = "08i2bl7jmmymn2sldzlbz6ig7lx3wfwhlpadzibs3fx72z08pmc6";
       libraryHaskellDepends = [
         array base bytestring containers directory filepath pretty process
         syb
       ];
       libraryToolDepends = [ alex happy ];
       homepage = "http://visq.github.io/language-c/";
       description = "Analysis and generation of C code";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "language-c-quote" = callPackage
    ({ mkDerivation, alex, array, base, bytestring, containers
     , exception-mtl, exception-transformers, filepath, happy
     , haskell-src-meta, HUnit, mainland-pretty, mtl, srcloc, syb
     , symbol, template-haskell, test-framework, test-framework-hunit
     }:
     mkDerivation {
       pname = "language-c-quote";
       version = "0.11.7.1";
       sha256 = "137q51rj3crd1pmb6fz06vhj9r0rn5pgigrn2p0cmd7690kyk0sm";
       libraryHaskellDepends = [
         array base bytestring containers exception-mtl
         exception-transformers filepath haskell-src-meta mainland-pretty
         mtl srcloc syb symbol template-haskell
       ];
       libraryToolDepends = [ alex happy ];
       testHaskellDepends = [
         base bytestring HUnit mainland-pretty srcloc symbol test-framework
         test-framework-hunit
       ];
       homepage = "http://www.drexel.edu/~mainland/";
       description = "C/CUDA/OpenCL/Objective-C quasiquoting library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "language-dockerfile" = callPackage
    ({ mkDerivation, base, bytestring, directory, filepath, free, Glob
     , hspec, HUnit, mtl, parsec, pretty, process, QuickCheck
     , ShellCheck, split, template-haskell, test-framework
     , test-framework-hunit, th-lift, th-lift-instances, transformers
     }:
     mkDerivation {
       pname = "language-dockerfile";
       version = "0.3.5.0";
       sha256 = "1ra2jg884w64c9c9dzai2vpsh9j9yxmr1bzvd69j5gvy45qgsrwn";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring free mtl parsec pretty ShellCheck split
         template-haskell th-lift th-lift-instances transformers
       ];
       executableHaskellDepends = [
         base bytestring free mtl parsec pretty ShellCheck split
         template-haskell th-lift th-lift-instances transformers
       ];
       testHaskellDepends = [
         base bytestring directory filepath free Glob hspec HUnit mtl parsec
         pretty process QuickCheck ShellCheck split template-haskell
         test-framework test-framework-hunit th-lift th-lift-instances
         transformers
       ];
       homepage = "https://github.com/beijaflor-io/language-dockerfile#readme";
       description = "Dockerfile linter, parser, pretty-printer and embedded DSL";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "language-ecmascript" = callPackage
    ({ mkDerivation, base, containers, data-default-class, Diff
     , directory, filepath, HUnit, mtl, parsec, QuickCheck
     , template-haskell, test-framework, test-framework-hunit
     , test-framework-quickcheck2, testing-feat, uniplate, wl-pprint
     }:
     mkDerivation {
       pname = "language-ecmascript";
       version = "0.17.1.0";
       sha256 = "0gl82zq50x98jzagkzdb5fgf5gnspvpx6i66g3r25mcn606ky7nz";
       revision = "2";
       editedCabalFile = "0wndi8w3nchzvsmqxy5pbxld4c18a0b3ncffqfail1dpa6i30my6";
       libraryHaskellDepends = [
         base containers data-default-class Diff mtl parsec QuickCheck
         template-haskell testing-feat uniplate wl-pprint
       ];
       testHaskellDepends = [
         base containers data-default-class Diff directory filepath HUnit
         mtl parsec QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2 uniplate wl-pprint
       ];
       homepage = "http://github.com/jswebtools/language-ecmascript";
       description = "JavaScript parser and pretty-printer library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "language-fortran" = callPackage
    ({ mkDerivation, alex, array, base, happy, haskell-src, parsec, syb
     }:
     mkDerivation {
       pname = "language-fortran";
       version = "0.5.1";
       sha256 = "16kzdvhxpmfiia68c4y36fv1sjymy7sblba4iz77qqnwfqz3zka4";
       libraryHaskellDepends = [ array base haskell-src parsec syb ];
       libraryToolDepends = [ alex happy ];
       description = "Fortran lexer and parser, language support, and extensions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "language-glsl" = callPackage
    ({ mkDerivation, base, HUnit, parsec, prettyclass, test-framework
     , test-framework-hunit
     }:
     mkDerivation {
       pname = "language-glsl";
       version = "0.2.0";
       sha256 = "1wmfzif1cc3a8sls3swms9x54hm9ic8y301zav6fg4mr7xa4hqr3";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base parsec prettyclass ];
       executableHaskellDepends = [ base parsec prettyclass ];
       testHaskellDepends = [
         base HUnit parsec prettyclass test-framework test-framework-hunit
       ];
       description = "GLSL abstract syntax tree, parser, and pretty-printer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "language-haskell-extract" = callPackage
    ({ mkDerivation, base, regex-posix, template-haskell }:
     mkDerivation {
       pname = "language-haskell-extract";
       version = "0.2.4";
       sha256 = "1nxcs7g8a1sp91bzpy4cj6s31k5pvc3gvig04cbrggv5cvjidnhl";
       libraryHaskellDepends = [ base regex-posix template-haskell ];
       homepage = "http://github.com/finnsson/template-helper";
       description = "Module to automatically extract functions from the local code";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "language-java" = callPackage
    ({ mkDerivation, alex, array, base, cpphs, directory, filepath
     , HUnit, mtl, parsec, pretty, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "language-java";
       version = "0.2.8";
       sha256 = "0ry3x4riqyjr2bwrk64992aw2g7jxzrsk8f291iby62bkq49wy0b";
       libraryHaskellDepends = [ array base cpphs parsec pretty ];
       libraryToolDepends = [ alex ];
       testHaskellDepends = [
         base directory filepath HUnit mtl QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2
       ];
       homepage = "http://github.com/vincenthz/language-java";
       description = "Manipulating Java source: abstract syntax, lexer, parser, and pretty-printer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "language-javascript" = callPackage
    ({ mkDerivation, alex, array, base, blaze-builder, bytestring
     , Cabal, containers, happy, hspec, mtl, QuickCheck, text
     , utf8-light, utf8-string
     }:
     mkDerivation {
       pname = "language-javascript";
       version = "0.6.0.9";
       sha256 = "1k1ji4iia6wpzls5999hirypxsng5bgfrvbv9zjvn9wczga9hsx8";
       libraryHaskellDepends = [
         array base blaze-builder bytestring containers mtl text utf8-string
       ];
       libraryToolDepends = [ alex happy ];
       testHaskellDepends = [
         array base blaze-builder bytestring Cabal containers hspec mtl
         QuickCheck utf8-light utf8-string
       ];
       homepage = "https://github.com/erikd/language-javascript";
       description = "Parser for JavaScript";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "language-lua2" = callPackage
    ({ mkDerivation, base, containers, deepseq, Earley
     , lexer-applicative, microlens, optparse-applicative, QuickCheck
     , regex-applicative, semigroups, srcloc, tasty, tasty-hunit
     , tasty-quickcheck, transformers, unordered-containers, wl-pprint
     }:
     mkDerivation {
       pname = "language-lua2";
       version = "0.1.0.5";
       sha256 = "0g9r4i29061xgglqwh3gicdm68v28b73bn7as7lwgqfv2nqdf92g";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base containers Earley lexer-applicative microlens
         regex-applicative semigroups srcloc transformers
         unordered-containers wl-pprint
       ];
       executableHaskellDepends = [
         base Earley lexer-applicative optparse-applicative srcloc wl-pprint
       ];
       testHaskellDepends = [
         base deepseq lexer-applicative QuickCheck semigroups srcloc tasty
         tasty-hunit tasty-quickcheck unordered-containers
       ];
       homepage = "http://github.com/mitchellwrosen/language-lua2";
       description = "Lua parser and pretty printer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "language-nix" = callPackage
    ({ mkDerivation, base, base-compat, Cabal, deepseq, doctest, lens
     , pretty, QuickCheck
     }:
     mkDerivation {
       pname = "language-nix";
       version = "2.1.0.1";
       sha256 = "1kqsw0hk03wdn7mszyjgi38nxk1wmhbxfv6di3irrhsaf807657h";
       revision = "1";
       editedCabalFile = "1zv12p4ralrks0517zs52rzmzmsxxkcxkqz7zijfgcsvh6bsmafi";
       libraryHaskellDepends = [
         base base-compat Cabal deepseq lens pretty QuickCheck
       ];
       testHaskellDepends = [
         base base-compat Cabal deepseq doctest lens pretty QuickCheck
       ];
       homepage = "https://github.com/peti/language-nix#readme";
       description = "Data types and useful functions to represent and manipulate the Nix language";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "language-puppet" = callPackage
    ({ mkDerivation, aeson, ansi-wl-pprint, attoparsec, base
     , base16-bytestring, bytestring, case-insensitive, containers
     , cryptonite, directory, either, exceptions, filecache, formatting
     , Glob, hashable, hruby, hslogger, hspec, hspec-megaparsec
     , http-api-data, http-client, HUnit, lens, lens-aeson, megaparsec
     , memory, mtl, operational, optparse-applicative, parallel-io
     , parsec, pcre-utils, process, random, regex-pcre-builtin
     , scientific, semigroups, servant, servant-client, split, stm
     , strict-base-types, temporary, text, time, transformers, unix
     , unordered-containers, vector, yaml
     }:
     mkDerivation {
       pname = "language-puppet";
       version = "1.3.1.1";
       sha256 = "04nxdp46n6dpvmjhqz93dgy968q2g0ihd1wnh6b8h56vd8ds5yz2";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson ansi-wl-pprint attoparsec base base16-bytestring bytestring
         case-insensitive containers cryptonite directory either exceptions
         filecache formatting hashable hruby hslogger hspec http-api-data
         http-client lens lens-aeson megaparsec memory mtl operational
         parsec pcre-utils process random regex-pcre-builtin scientific
         semigroups servant servant-client split stm strict-base-types text
         time transformers unix unordered-containers vector yaml
       ];
       executableHaskellDepends = [
         aeson base bytestring containers Glob hslogger http-client lens
         megaparsec mtl optparse-applicative parallel-io regex-pcre-builtin
         servant-client strict-base-types text transformers
         unordered-containers vector yaml
       ];
       testHaskellDepends = [
         ansi-wl-pprint base Glob hslogger hspec hspec-megaparsec HUnit lens
         megaparsec mtl scientific strict-base-types temporary text
         transformers unix unordered-containers vector
       ];
       homepage = "http://lpuppet.banquise.net/";
       description = "Tools to parse and evaluate the Puppet DSL";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "language-thrift" = callPackage
    ({ mkDerivation, ansi-wl-pprint, base, containers, hspec
     , hspec-discover, megaparsec, QuickCheck, scientific, semigroups
     , text, transformers
     }:
     mkDerivation {
       pname = "language-thrift";
       version = "0.9.0.2";
       sha256 = "0h6pid2mn4ghzxsj8hx607m72r3dvx9zb4qmkqm2gwbj6lch9hm5";
       libraryHaskellDepends = [
         ansi-wl-pprint base containers megaparsec scientific semigroups
         text transformers
       ];
       testHaskellDepends = [
         ansi-wl-pprint base containers hspec hspec-discover megaparsec
         QuickCheck scientific semigroups text transformers
       ];
       homepage = "https://github.com/abhinav/language-thrift#readme";
       description = "Parser and pretty printer for the Thrift IDL format";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "largeword" = callPackage
    ({ mkDerivation, base, binary, bytestring, HUnit, QuickCheck
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "largeword";
       version = "1.2.5";
       sha256 = "0ikxklg4w30hyfcnrq8hr348p8s9hg42b9sj9x0byjb6hinv1cq0";
       libraryHaskellDepends = [ base binary ];
       testHaskellDepends = [
         base binary bytestring HUnit QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2
       ];
       homepage = "https://github.com/idontgetoutmuch/largeword";
       description = "Provides Word128, Word192 and Word256 and a way of producing other large words if required";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lattices" = callPackage
    ({ mkDerivation, base, containers, deepseq, hashable, QuickCheck
     , semigroups, tagged, tasty, tasty-quickcheck, transformers
     , universe-base, universe-reverse-instances, unordered-containers
     , void
     }:
     mkDerivation {
       pname = "lattices";
       version = "1.5.0";
       sha256 = "07sxli1xix9gi8smk6crgx4ijs7mjq6g95ci423r0fsh6i1zpqy6";
       revision = "1";
       editedCabalFile = "04l5x09f48vdkljzl79g2cybbm5wdxa0bf4xvlwdkcbky9h0qvan";
       libraryHaskellDepends = [
         base containers deepseq hashable semigroups tagged universe-base
         universe-reverse-instances unordered-containers void
       ];
       testHaskellDepends = [
         base QuickCheck tasty tasty-quickcheck transformers
       ];
       homepage = "http://github.com/phadej/lattices/";
       description = "Fine-grained library for constructing and manipulating lattices";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lazy-csv" = callPackage
    ({ mkDerivation, base, bytestring }:
     mkDerivation {
       pname = "lazy-csv";
       version = "0.5.1";
       sha256 = "17v495xnv38bx9zfjfa8dl3prj94lg74dhn1jzqrjq488gfwp2w8";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base bytestring ];
       executableHaskellDepends = [ base bytestring ];
       homepage = "http://code.haskell.org/lazy-csv";
       description = "Efficient lazy parsers for CSV (comma-separated values)";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lca" = callPackage
    ({ mkDerivation, base, doctest }:
     mkDerivation {
       pname = "lca";
       version = "0.3";
       sha256 = "081fk0ci5vb84w4zwah6qwbr0i78v2pr6m6nn1y226vv5w3kakza";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base doctest ];
       homepage = "http://github.com/ekmett/lca/";
       description = "O(log n) persistent on-line lowest common ancestor calculation without preprocessing";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "leapseconds-announced" = callPackage
    ({ mkDerivation, base, QuickCheck, time }:
     mkDerivation {
       pname = "leapseconds-announced";
       version = "2017";
       sha256 = "1avx8wm98nrv04cfkv4npy1fwr42nnp7i8njl3dg31ybrwlwknvz";
       libraryHaskellDepends = [ base time ];
       testHaskellDepends = [ base QuickCheck time ];
       homepage = "https://github.com/bjornbm/leapseconds-announced";
       description = "Leap seconds announced at library release time";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lens" = callPackage
    ({ mkDerivation, array, base, base-orphans, bifunctors, bytestring
     , comonad, containers, contravariant, criterion, deepseq
     , distributive, exceptions, filepath, free, generic-deriving
     , ghc-prim, hashable, hlint, HUnit, kan-extensions, mtl, parallel
     , profunctors, QuickCheck, reflection, semigroupoids, semigroups
     , tagged, template-haskell, test-framework, test-framework-hunit
     , test-framework-quickcheck2, test-framework-th, text, transformers
     , transformers-compat, unordered-containers, vector, void
     }:
     mkDerivation {
       pname = "lens";
       version = "4.14";
       sha256 = "0jszxq3jk7yywy0dmkkdnl20fcmri2cl9b3cinw50a9mxwccv8vh";
       revision = "1";
       editedCabalFile = "1i2rh0a0d0y8jli09v7gnll7jx9f8fsicyqpr7329cw3ly7jabzc";
       libraryHaskellDepends = [
         array base base-orphans bifunctors bytestring comonad containers
         contravariant distributive exceptions filepath free ghc-prim
         hashable kan-extensions mtl parallel profunctors reflection
         semigroupoids semigroups tagged template-haskell text transformers
         transformers-compat unordered-containers vector void
       ];
       testHaskellDepends = [
         base containers hlint HUnit mtl QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2 test-framework-th
         transformers
       ];
       benchmarkHaskellDepends = [
         base bytestring comonad containers criterion deepseq
         generic-deriving transformers unordered-containers vector
       ];
       homepage = "http://github.com/ekmett/lens/";
       description = "Lenses, Folds and Traversals";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lens-action" = callPackage
    ({ mkDerivation, base, comonad, contravariant, directory, doctest
     , filepath, lens, mtl, profunctors, semigroupoids, semigroups
     , transformers
     }:
     mkDerivation {
       pname = "lens-action";
       version = "0.2.0.2";
       sha256 = "0wfkqqlkwk6jim7s21w2f182qnxlvzfapkbvx6ycz9v8vsr70v72";
       revision = "2";
       editedCabalFile = "1z0bgv6zvxhhcamv4pnwi8lldps38qx0jjmq3h5703nfiikqrwgj";
       libraryHaskellDepends = [
         base comonad contravariant lens mtl profunctors semigroupoids
         semigroups transformers
       ];
       testHaskellDepends = [ base directory doctest filepath ];
       homepage = "http://github.com/ekmett/lens-action/";
       description = "Monadic Getters and Folds";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lens-aeson" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, bytestring, directory
     , doctest, filepath, generic-deriving, lens, scientific, semigroups
     , simple-reflect, text, unordered-containers, vector
     }:
     mkDerivation {
       pname = "lens-aeson";
       version = "1.0.0.5";
       sha256 = "17sx79s3rx19smf0phdvyd5vkhk0fhgswhyzqss0j8l5fmdsvyk5";
       revision = "4";
       editedCabalFile = "1183sxwk8adaxm1202zhicfbv5q33p02w8499vvmiba2xdzkvpkg";
       libraryHaskellDepends = [
         aeson attoparsec base bytestring lens scientific text
         unordered-containers vector
       ];
       testHaskellDepends = [
         base directory doctest filepath generic-deriving semigroups
         simple-reflect
       ];
       homepage = "http://github.com/lens/lens-aeson/";
       description = "Law-abiding lenses for aeson";
       license = stdenv.lib.licenses.mit;
     }) {};
  "lens-datetime" = callPackage
    ({ mkDerivation, base, lens, time }:
     mkDerivation {
       pname = "lens-datetime";
       version = "0.3";
       sha256 = "1m6cns38xggw8kcc9h0mf4q024cvc8njm7n33f8gi7hwyxxqs7xv";
       libraryHaskellDepends = [ base lens time ];
       homepage = "https://github.com/nilcons/lens-datetime";
       description = "Lenses for Data.Time.* types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lens-family" = callPackage
    ({ mkDerivation, base, containers, lens-family-core, mtl
     , transformers
     }:
     mkDerivation {
       pname = "lens-family";
       version = "1.2.1";
       sha256 = "1dwsrli94i8vs1wzfbxbxh49qhn8jn9hzmxwgd3dqqx07yx8x0s1";
       libraryHaskellDepends = [
         base containers lens-family-core mtl transformers
       ];
       description = "Lens Families";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lens-family-core" = callPackage
    ({ mkDerivation, base, containers, transformers }:
     mkDerivation {
       pname = "lens-family-core";
       version = "1.2.1";
       sha256 = "190r3n25m8x24nd6xjbbk9x0qhs1mw22xlpsbf3cdp3cda3vkqwm";
       libraryHaskellDepends = [ base containers transformers ];
       description = "Haskell 98 Lens Families";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lens-family-th" = callPackage
    ({ mkDerivation, base, template-haskell }:
     mkDerivation {
       pname = "lens-family-th";
       version = "0.5.0.0";
       sha256 = "17lmvsj4jar5qkscz804infivv77cfx5c8yh6raxnscq1b9nm3ll";
       libraryHaskellDepends = [ base template-haskell ];
       homepage = "http://github.com/DanBurton/lens-family-th#readme";
       description = "Generate lens-family style lenses";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lens-regex" = callPackage
    ({ mkDerivation, array, base, directory, doctest, filepath, lens
     , regex-base, regex-posix, template-haskell
     }:
     mkDerivation {
       pname = "lens-regex";
       version = "0.1.0";
       sha256 = "0hjizjmvdngxn63gs7x87qidh71aqhvyigrnqlbfjqan76pb6m29";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         array base lens regex-base template-haskell
       ];
       testHaskellDepends = [
         base directory doctest filepath regex-posix
       ];
       homepage = "https://github.com/himura/lens-regex";
       description = "Lens powered regular expression";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lens-simple" = callPackage
    ({ mkDerivation, base, lens-family, lens-family-core
     , lens-family-th, mtl, transformers
     }:
     mkDerivation {
       pname = "lens-simple";
       version = "0.1.0.9";
       sha256 = "0al3bfhrq6lq43s6k0c03vcf126i1naajhd64shgi5s10yw9jgb1";
       libraryHaskellDepends = [
         base lens-family lens-family-core lens-family-th mtl transformers
       ];
       homepage = "https://github.com/michaelt/lens-simple";
       description = "simplified import of elementary lens-family combinators";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "leveldb-haskell" = callPackage
    ({ mkDerivation, async, base, bytestring, data-default, directory
     , exceptions, filepath, leveldb, mtl, QuickCheck, resourcet, tasty
     , tasty-quickcheck, temporary, transformers
     }:
     mkDerivation {
       pname = "leveldb-haskell";
       version = "0.6.4";
       sha256 = "010vmm7afzl8awn0iqdfd6gnh16q7cracwwi70ij98ymrp1gka15";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring data-default exceptions filepath resourcet
         transformers
       ];
       librarySystemDepends = [ leveldb ];
       executableHaskellDepends = [
         async base bytestring data-default resourcet transformers
       ];
       testHaskellDepends = [
         base bytestring data-default directory exceptions mtl QuickCheck
         tasty tasty-quickcheck temporary transformers
       ];
       homepage = "http://github.com/kim/leveldb-haskell";
       description = "Haskell bindings to LevelDB";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) leveldb;};
  "lexer-applicative" = callPackage
    ({ mkDerivation, base, deepseq, regex-applicative, srcloc, tasty
     , tasty-hunit
     }:
     mkDerivation {
       pname = "lexer-applicative";
       version = "2.1.0.1";
       sha256 = "1754rimbj7jdhdhc3ql5ks5mccqip4l6cffkw2bzjw3x1s0155iy";
       libraryHaskellDepends = [ base regex-applicative srcloc ];
       testHaskellDepends = [
         base deepseq regex-applicative srcloc tasty tasty-hunit
       ];
       homepage = "https://github.com/feuerbach/lexer-applicative";
       description = "Simple lexer based on applicative regular expressions";
       license = stdenv.lib.licenses.mit;
     }) {};
  "lhs2tex" = callPackage
    ({ mkDerivation, base, directory, filepath, mtl, process
     , regex-compat
     }:
     mkDerivation {
       pname = "lhs2tex";
       version = "1.19";
       sha256 = "03mhhkrqjjqmmh18im8di1cl6wqv30lsib5hv73f0wsnv5bhbbi4";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         base directory filepath mtl process regex-compat
       ];
       doHaddock = false;
       homepage = "http://www.andres-loeh.de/lhs2tex/";
       description = "Preprocessor for typesetting Haskell sources with LaTeX";
       license = "GPL";
     }) {};
  "libgit" = callPackage
    ({ mkDerivation, base, mtl, process }:
     mkDerivation {
       pname = "libgit";
       version = "0.3.1";
       sha256 = "08km9y2wqz426c5c6r49ar5snl8ss1w7d55yqivksdkwk3fn0k0x";
       libraryHaskellDepends = [ base mtl process ];
       homepage = "https://github.com/vincenthz/hs-libgit";
       description = "Simple Git Wrapper";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "libinfluxdb" = callPackage
    ({ mkDerivation, base, bytestring, clock, containers, http-client
     , http-client-tls, http-types, resource-pool, stm, text
     }:
     mkDerivation {
       pname = "libinfluxdb";
       version = "0.0.4";
       sha256 = "0gzgcczw1jz0cns9x9na8rnyrapwml2ih9x0dv28pqf9fk1bpd95";
       libraryHaskellDepends = [
         base bytestring clock containers http-client http-client-tls
         http-types resource-pool stm text
       ];
       description = "libinfluxdb";
       license = stdenv.lib.licenses.mit;
     }) {};
  "libmpd" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, containers
     , data-default-class, filepath, hspec, mtl, network, old-locale
     , QuickCheck, text, time, unix, utf8-string
     }:
     mkDerivation {
       pname = "libmpd";
       version = "0.9.0.6";
       sha256 = "0dy9j12mw3d2j2ixj1nq3s6g59zgwzr1xmqjvs2ysy50pd3bksxx";
       libraryHaskellDepends = [
         attoparsec base bytestring containers data-default-class filepath
         mtl network old-locale text time utf8-string
       ];
       testHaskellDepends = [
         attoparsec base bytestring containers data-default-class filepath
         hspec mtl network old-locale QuickCheck text time unix utf8-string
       ];
       homepage = "http://github.com/vimus/libmpd-haskell#readme";
       description = "An MPD client library";
       license = stdenv.lib.licenses.mit;
     }) {};
  "libnotify" = callPackage
    ({ mkDerivation, base, bytestring, glib, gtk, libnotify }:
     mkDerivation {
       pname = "libnotify";
       version = "0.2";
       sha256 = "0nazjlilbz3l32fn11shwxjlabvd2kfpxa7vnirpfp1y6k406mk6";
       libraryHaskellDepends = [ base bytestring glib gtk ];
       librarySystemDepends = [ libnotify ];
       description = "Bindings to libnotify library";
       license = stdenv.lib.licenses.mit;
     }) {inherit (pkgs) libnotify;};
  "libxml-sax" = callPackage
    ({ mkDerivation, base, bytestring, libxml2, text, xml-types }:
     mkDerivation {
       pname = "libxml-sax";
       version = "0.7.5";
       sha256 = "0lbdq6lmiyrnzk6gkx09vvp928wj8qnqnqfzy14mfv0drj21f54r";
       libraryHaskellDepends = [ base bytestring text xml-types ];
       librarySystemDepends = [ libxml2 ];
       libraryPkgconfigDepends = [ libxml2 ];
       homepage = "https://john-millikin.com/software/haskell-libxml/";
       description = "Bindings for the libXML2 SAX interface";
       license = stdenv.lib.licenses.mit;
     }) {inherit (pkgs) libxml2;};
  "lift-generics" = callPackage
    ({ mkDerivation, base, base-compat, generic-deriving, ghc-prim
     , hspec, template-haskell
     }:
     mkDerivation {
       pname = "lift-generics";
       version = "0.1.1";
       sha256 = "1jrh74a1c95cd70xr371fslqsjar8jb8mnlmapjb1dvg8722rkq7";
       libraryHaskellDepends = [
         base generic-deriving ghc-prim template-haskell
       ];
       testHaskellDepends = [
         base base-compat generic-deriving hspec template-haskell
       ];
       homepage = "https://github.com/RyanGlScott/lift-generics";
       description = "GHC.Generics-based Language.Haskell.TH.Syntax.lift implementation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lifted-async" = callPackage
    ({ mkDerivation, async, base, constraints, criterion, deepseq
     , HUnit, lifted-base, monad-control, mtl, tasty, tasty-hunit
     , tasty-th, transformers-base
     }:
     mkDerivation {
       pname = "lifted-async";
       version = "0.9.1";
       sha256 = "03ckyglh1j93y0b80cjr04jvbgqxq2a5li1ws42g89lj0y1kwj0g";
       libraryHaskellDepends = [
         async base constraints lifted-base monad-control transformers-base
       ];
       testHaskellDepends = [
         async base HUnit lifted-base monad-control mtl tasty tasty-hunit
         tasty-th
       ];
       benchmarkHaskellDepends = [ async base criterion deepseq ];
       homepage = "https://github.com/maoe/lifted-async";
       description = "Run lifted IO operations asynchronously and wait for their results";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lifted-base" = callPackage
    ({ mkDerivation, base, criterion, HUnit, monad-control, monad-peel
     , test-framework, test-framework-hunit, transformers
     , transformers-base, transformers-compat
     }:
     mkDerivation {
       pname = "lifted-base";
       version = "0.2.3.8";
       sha256 = "17yz4n7q96x4cp8vxai8csn2vmpigxvipkfh48arahf91f0xy18n";
       libraryHaskellDepends = [ base monad-control transformers-base ];
       testHaskellDepends = [
         base HUnit monad-control test-framework test-framework-hunit
         transformers transformers-base transformers-compat
       ];
       benchmarkHaskellDepends = [
         base criterion monad-control monad-peel transformers
       ];
       homepage = "https://github.com/basvandijk/lifted-base";
       description = "lifted IO operations from the base library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "line" = callPackage
    ({ mkDerivation, aeson, base, base64-bytestring, bytestring
     , cryptohash-sha256, http-types, lens, text, time, transformers
     , wai, wreq
     }:
     mkDerivation {
       pname = "line";
       version = "1.0.1.0";
       sha256 = "1mg1y6qay2c8hzmj326y8lkc7fxaiijrx9vixa0bz7lv6q9yhmmk";
       libraryHaskellDepends = [
         aeson base base64-bytestring bytestring cryptohash-sha256
         http-types lens text time transformers wai wreq
       ];
       testHaskellDepends = [ base ];
       homepage = "https://github.com/noraesae/line";
       description = "Haskell SDK for the LINE API";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "linear" = callPackage
    ({ mkDerivation, adjunctions, base, base-orphans, binary, bytes
     , bytestring, cereal, containers, deepseq, directory, distributive
     , doctest, filepath, ghc-prim, hashable, HUnit, lens, reflection
     , semigroupoids, semigroups, simple-reflect, tagged
     , template-haskell, test-framework, test-framework-hunit
     , transformers, transformers-compat, unordered-containers, vector
     , void
     }:
     mkDerivation {
       pname = "linear";
       version = "1.20.5";
       sha256 = "03fccjs8z7crp54azwwq2pk35mqzifmf3zzpbn92fz0y5wjbgn31";
       revision = "1";
       editedCabalFile = "1m8k06f28cyrbigq985yx5jgcsygzs4lmdf303fgwvrjqz10dysr";
       libraryHaskellDepends = [
         adjunctions base base-orphans binary bytes cereal containers
         deepseq distributive ghc-prim hashable lens reflection
         semigroupoids semigroups tagged template-haskell transformers
         transformers-compat unordered-containers vector void
       ];
       testHaskellDepends = [
         base binary bytestring directory doctest filepath HUnit lens
         simple-reflect test-framework test-framework-hunit
       ];
       homepage = "http://github.com/ekmett/linear/";
       description = "Linear Algebra";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "linear-accelerate" = callPackage
    ({ mkDerivation, accelerate, base, lens, linear }:
     mkDerivation {
       pname = "linear-accelerate";
       version = "0.2";
       sha256 = "0433mzw2cswk86nmj3gnygn3d07yq0sbmv2ylxbw8ri35yddjap6";
       libraryHaskellDepends = [ accelerate base lens linear ];
       homepage = "http://github.com/ekmett/linear-accelerate/";
       description = "Instances to use linear vector spaces on accelerate backends";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "linux-file-extents" = callPackage
    ({ mkDerivation, base, unix }:
     mkDerivation {
       pname = "linux-file-extents";
       version = "0.2.0.0";
       sha256 = "1l4vznam1a8vf3nixhbmw38rpzkvmbka0cbdfdsgfrpn03kxjz3c";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base unix ];
       homepage = "https://github.com/redneb/linux-file-extents";
       description = "Retrieve file fragmentation information under Linux";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "linux-namespaces" = callPackage
    ({ mkDerivation, base, unix }:
     mkDerivation {
       pname = "linux-namespaces";
       version = "0.1.2.0";
       sha256 = "0yznnp9rdz15drm79pvbqbrbk2nczbkmlf00pb7rki7w1l9njp2q";
       libraryHaskellDepends = [ base unix ];
       homepage = "https://github.com/redneb/hs-linux-namespaces";
       description = "Create new or enter an existing linux namespaces";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "list-fusion-probe" = callPackage
    ({ mkDerivation, base, tasty, tasty-hunit }:
     mkDerivation {
       pname = "list-fusion-probe";
       version = "0.1.0.6";
       sha256 = "1cd6pbaliavasjl76bz86swa5zdymh84grs3cx01hspbc1a190kn";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base tasty tasty-hunit ];
       description = "testing list fusion for success";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "list-prompt" = callPackage
    ({ mkDerivation, ansi-terminal, base, data-default, hspec, stm
     , terminal-size, vty
     }:
     mkDerivation {
       pname = "list-prompt";
       version = "0.1.1.0";
       sha256 = "1vjdr8q1fzk07a90hpsd2x4ga0cczmjn5r3v3axdwh19h1x3qcn7";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         ansi-terminal base data-default stm terminal-size vty
       ];
       executableHaskellDepends = [
         ansi-terminal base data-default stm terminal-size vty
       ];
       testHaskellDepends = [
         ansi-terminal base data-default hspec stm terminal-size vty
       ];
       homepage = "https://github.com/yamadapc/list-prompt.git";
       description = "A simple list prompt UI for the terminal";
       license = stdenv.lib.licenses.gpl2;
     }) {};
  "list-t" = callPackage
    ({ mkDerivation, base, base-prelude, HTF, mmorph, monad-control
     , mtl, mtl-prelude, transformers, transformers-base
     }:
     mkDerivation {
       pname = "list-t";
       version = "1";
       sha256 = "05ccx0l6rc97ls0jy7hfma5g0fa10s0h0kik1m596lk41776i6ji";
       libraryHaskellDepends = [
         base base-prelude mmorph monad-control mtl transformers
         transformers-base
       ];
       testHaskellDepends = [ base-prelude HTF mmorph mtl-prelude ];
       homepage = "https://github.com/nikita-volkov/list-t";
       description = "ListT done right";
       license = stdenv.lib.licenses.mit;
     }) {};
  "load-env" = callPackage
    ({ mkDerivation, base, directory, hspec, HUnit, parsec }:
     mkDerivation {
       pname = "load-env";
       version = "0.1.1";
       sha256 = "05pxxplp96pcnzk61xcckxnxljl3hjl13ckn4xrr93zmlw49rqwg";
       libraryHaskellDepends = [ base directory parsec ];
       testHaskellDepends = [ base directory hspec HUnit parsec ];
       description = "Load environment variables from a file";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "loch-th" = callPackage
    ({ mkDerivation, base, pretty, template-haskell }:
     mkDerivation {
       pname = "loch-th";
       version = "0.2.1";
       sha256 = "1kfrjsgzq6wl749n2wm1fhwwigjxcd9lww7whiwjrbmhiz5ism3p";
       libraryHaskellDepends = [ base pretty template-haskell ];
       homepage = "https://github.com/liskin/loch-th";
       description = "Support for precise error locations in source files (Template Haskell version)";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "log-domain" = callPackage
    ({ mkDerivation, base, binary, bytes, cereal, comonad, deepseq
     , directory, distributive, doctest, filepath, generic-deriving
     , hashable, hashable-extras, safecopy, semigroupoids, semigroups
     , simple-reflect, vector
     }:
     mkDerivation {
       pname = "log-domain";
       version = "0.10.3.1";
       sha256 = "059qcjasf5m40z42djhqmjmnz086hjrmyv86l8h8nd8qc982gx1n";
       revision = "2";
       editedCabalFile = "0vswf377xdplr6gai4jr493sjbx9yqgmr0nf2jqb87jm1jpx9h6m";
       libraryHaskellDepends = [
         base binary bytes cereal comonad deepseq distributive hashable
         hashable-extras safecopy semigroupoids semigroups vector
       ];
       testHaskellDepends = [
         base directory doctest filepath generic-deriving semigroups
         simple-reflect
       ];
       homepage = "http://github.com/ekmett/log-domain/";
       description = "Log-domain arithmetic";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "logfloat" = callPackage
    ({ mkDerivation, array, base }:
     mkDerivation {
       pname = "logfloat";
       version = "0.13.3.3";
       sha256 = "10kza99pzs0ajn6xqd66sm059xp43i2sl0mnd8257q1av1qvsx7p";
       libraryHaskellDepends = [ array base ];
       homepage = "http://code.haskell.org/~wren/";
       description = "Log-domain floating point numbers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "logging-facade" = callPackage
    ({ mkDerivation, base, hspec, template-haskell, transformers }:
     mkDerivation {
       pname = "logging-facade";
       version = "0.1.1";
       sha256 = "18ldv6rsff480rqpbs3iabjpvn1fhw0i2a0g80jnhxg9ajfz5yb0";
       revision = "1";
       editedCabalFile = "1cm2q8l033w1bwi30mzsz0knr8pqxcb4f5c38594rdm96r9h12gw";
       libraryHaskellDepends = [ base template-haskell transformers ];
       testHaskellDepends = [ base hspec ];
       description = "Simple logging abstraction that allows multiple back-ends";
       license = stdenv.lib.licenses.mit;
     }) {};
  "logict" = callPackage
    ({ mkDerivation, base, mtl }:
     mkDerivation {
       pname = "logict";
       version = "0.6.0.2";
       sha256 = "07hnirv6snnym2r7iijlfz00b60jpy2856zvqxh989q0in7bd0hi";
       libraryHaskellDepends = [ base mtl ];
       homepage = "http://code.haskell.org/~dolio/";
       description = "A backtracking logic-programming monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "loop" = callPackage
    ({ mkDerivation, base, criterion, foldl, hspec, mtl, random, vector
     }:
     mkDerivation {
       pname = "loop";
       version = "0.3.0";
       sha256 = "1kry1c6jmn96jqsdj46x2z3ibwnn34lf8gyxj80cqa5bpl8215lj";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base hspec mtl ];
       benchmarkHaskellDepends = [
         base criterion foldl mtl random vector
       ];
       homepage = "https://github.com/nh2/loop";
       description = "Fast loops (for when GHC can't optimize forM_)";
       license = stdenv.lib.licenses.mit;
     }) {};
  "lrucache" = callPackage
    ({ mkDerivation, base, containers, contravariant }:
     mkDerivation {
       pname = "lrucache";
       version = "1.2.0.0";
       sha256 = "05knlckzx261yxbz38rqq8vy86zj1np0w2l32cnib6714vhaj5sz";
       libraryHaskellDepends = [ base containers contravariant ];
       homepage = "http://github.com/chowells79/lrucache";
       description = "a simple, pure LRU cache";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lrucaching" = callPackage
    ({ mkDerivation, base, base-compat, containers, deepseq, hashable
     , hspec, psqueues, QuickCheck, transformers, vector
     }:
     mkDerivation {
       pname = "lrucaching";
       version = "0.3.1";
       sha256 = "1mijn42qd938xx3pd2fi3njfk37rag4xw1f19m3mh7vj1nk7wa1g";
       revision = "1";
       editedCabalFile = "0q7hzsc7l64x9gdcxfims25nzqqwammwj91wqv4qjwahgkasmkyn";
       libraryHaskellDepends = [
         base base-compat deepseq hashable psqueues vector
       ];
       testHaskellDepends = [
         base containers deepseq hashable hspec QuickCheck transformers
       ];
       homepage = "https://github.com/cocreature/lrucaching#readme";
       description = "LRU cache";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ltext" = callPackage
    ({ mkDerivation, attoparsec, base, directory, exceptions, extra
     , mtl, optparse-applicative, pretty, QuickCheck
     , quickcheck-combinators, quickcheck-instances, tasty
     , tasty-quickcheck, text, transformers, unordered-containers
     }:
     mkDerivation {
       pname = "ltext";
       version = "0.1.2.1";
       sha256 = "0d3m8hda9g9g4phnxs2fnaw8lxjqnvkar63y4gg2cwi29zqgj6kv";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         attoparsec base directory exceptions extra mtl pretty QuickCheck
         quickcheck-combinators quickcheck-instances text transformers
         unordered-containers
       ];
       executableHaskellDepends = [
         attoparsec base directory exceptions extra mtl optparse-applicative
         pretty QuickCheck quickcheck-combinators quickcheck-instances text
         transformers unordered-containers
       ];
       testHaskellDepends = [
         base QuickCheck quickcheck-combinators quickcheck-instances tasty
         tasty-quickcheck text
       ];
       description = "Parameterized file evaluator";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lucid" = callPackage
    ({ mkDerivation, base, bifunctors, blaze-builder, bytestring
     , containers, criterion, deepseq, hashable, hspec, HUnit, mmorph
     , mtl, parsec, text, transformers, unordered-containers
     }:
     mkDerivation {
       pname = "lucid";
       version = "2.9.7";
       sha256 = "0206bvv1fy52wqa5di9a9fhqji9q5nhm9fdnri0klvhrmlksz1x0";
       libraryHaskellDepends = [
         base blaze-builder bytestring containers hashable mmorph mtl text
         transformers unordered-containers
       ];
       testHaskellDepends = [
         base bifunctors hspec HUnit mtl parsec text
       ];
       benchmarkHaskellDepends = [
         base blaze-builder bytestring criterion deepseq text
       ];
       homepage = "https://github.com/chrisdone/lucid";
       description = "Clear to write, read and edit DSL for HTML";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lucid-svg" = callPackage
    ({ mkDerivation, base, blaze-builder, lucid, text, transformers }:
     mkDerivation {
       pname = "lucid-svg";
       version = "0.7.0.0";
       sha256 = "0sqzgmadm7a0lydsc9p7632sd37152f8xf8x4abdfnakqpdvni3m";
       libraryHaskellDepends = [
         base blaze-builder lucid text transformers
       ];
       homepage = "http://github.com/jeffreyrosenbluth/lucid-svg.git";
       description = "DSL for SVG using lucid for HTML";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "machines" = callPackage
    ({ mkDerivation, adjunctions, base, comonad, conduit
     , conduit-combinators, containers, criterion, directory
     , distributive, doctest, filepath, free, mtl, pipes, pointed
     , profunctors, semigroupoids, semigroups, transformers
     , transformers-compat, void
     }:
     mkDerivation {
       pname = "machines";
       version = "0.6.1";
       sha256 = "0mnwi78jm2rjlk5bf6i49dyf4d2v7qbajsvhqi599lv23baq92x5";
       libraryHaskellDepends = [
         adjunctions base comonad containers distributive free mtl pointed
         profunctors semigroupoids semigroups transformers
         transformers-compat void
       ];
       testHaskellDepends = [ base directory doctest filepath ];
       benchmarkHaskellDepends = [
         base conduit conduit-combinators criterion mtl pipes
       ];
       homepage = "http://github.com/ekmett/machines/";
       description = "Networked stream transducers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "magic" = callPackage
    ({ mkDerivation, base, file }:
     mkDerivation {
       pname = "magic";
       version = "1.1";
       sha256 = "10p0gjjjwr1dda7hahwrwn5njbfhl67arq3v3nf1jr3vymlkn75j";
       libraryHaskellDepends = [ base ];
       librarySystemDepends = [ file ];
       description = "Interface to C file/magic library";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) file;};
  "mainland-pretty" = callPackage
    ({ mkDerivation, base, containers, srcloc, text }:
     mkDerivation {
       pname = "mainland-pretty";
       version = "0.4.1.4";
       sha256 = "175gbycqnmnjiqx2mfr9x9gqafx4s2abg6n681kh0knqkl8nnlmn";
       libraryHaskellDepends = [ base containers srcloc text ];
       homepage = "http://www.cs.drexel.edu/~mainland/";
       description = "Pretty printing designed for printing source code";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "makefile" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, doctest, Glob }:
     mkDerivation {
       pname = "makefile";
       version = "0.1.0.5";
       sha256 = "05h3v0jqfwdjgm7nnr6glg1d65grcv739h41k0dflw9hn83myzp4";
       libraryHaskellDepends = [ attoparsec base bytestring ];
       testHaskellDepends = [ attoparsec base bytestring doctest Glob ];
       homepage = "http://github.com/nmattia/mask";
       description = "Simple Makefile parser";
       license = stdenv.lib.licenses.mit;
     }) {};
  "managed" = callPackage
    ({ mkDerivation, base, transformers }:
     mkDerivation {
       pname = "managed";
       version = "1.0.5";
       sha256 = "1q3j8w6z8jaxh5a0ifzj51vipyhfrb1hk6l87pm319ysv91rkjdr";
       libraryHaskellDepends = [ base transformers ];
       description = "A monad for managed values";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mandrill" = callPackage
    ({ mkDerivation, aeson, base, base64-bytestring, blaze-html
     , bytestring, containers, email-validate, http-client
     , http-client-tls, http-types, lens, mtl, old-locale, QuickCheck
     , raw-strings-qq, tasty, tasty-hunit, tasty-quickcheck, text, time
     , unordered-containers
     }:
     mkDerivation {
       pname = "mandrill";
       version = "0.5.3.1";
       sha256 = "05f3q2kl22bvxqsrx7l1zzyq4aljkzdkf1mv9w7m4q944dka2nd5";
       libraryHaskellDepends = [
         aeson base base64-bytestring blaze-html bytestring containers
         email-validate http-client http-client-tls http-types lens mtl
         old-locale QuickCheck text time unordered-containers
       ];
       testHaskellDepends = [
         aeson base bytestring QuickCheck raw-strings-qq tasty tasty-hunit
         tasty-quickcheck text
       ];
       description = "Library for interfacing with the Mandrill JSON API";
       license = stdenv.lib.licenses.mit;
     }) {};
  "markdown" = callPackage
    ({ mkDerivation, attoparsec, base, blaze-html, blaze-markup
     , conduit, conduit-extra, containers, data-default, directory
     , filepath, hspec, text, transformers, xml-conduit, xml-types
     , xss-sanitize
     }:
     mkDerivation {
       pname = "markdown";
       version = "0.1.16";
       sha256 = "11gdawvwji7301lm07z5q94g5jlf9iq63wf6k7f6sc88w99b7c08";
       libraryHaskellDepends = [
         attoparsec base blaze-html blaze-markup conduit conduit-extra
         containers data-default text transformers xml-conduit xml-types
         xss-sanitize
       ];
       testHaskellDepends = [
         base blaze-html conduit conduit-extra containers directory filepath
         hspec text transformers
       ];
       homepage = "https://github.com/snoyberg/markdown";
       description = "Convert Markdown to HTML, with XSS protection";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "markdown-unlit" = callPackage
    ({ mkDerivation, base, base-compat, directory, hspec, QuickCheck
     , silently, stringbuilder, temporary
     }:
     mkDerivation {
       pname = "markdown-unlit";
       version = "0.4.0";
       sha256 = "1kj2bffl7ndd8ygwwa3r1mbpwbxbfhyfgnbla8k8g9i6ffp0qrbw";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base base-compat ];
       executableHaskellDepends = [ base base-compat ];
       testHaskellDepends = [
         base base-compat directory hspec QuickCheck silently stringbuilder
         temporary
       ];
       homepage = "https://github.com/sol/markdown-unlit#readme";
       description = "Literate Haskell support for Markdown";
       license = stdenv.lib.licenses.mit;
     }) {};
  "markup" = callPackage
    ({ mkDerivation, base, blaze-html, blaze-markup, clay, comonad
     , lucid, mmorph, monad-control, monad-logger, mtl, path-extra
     , resourcet, text, transformers-base, urlpath
     }:
     mkDerivation {
       pname = "markup";
       version = "3.1.0";
       sha256 = "0g8dg03r7i4r71bg834kf1cgh0igmb74334skkydlq9q911hclf7";
       revision = "1";
       editedCabalFile = "1ax30n6qyy7kjcz2qyd6idaif1hxxz4n37p6lpfn5bnvg585ddmg";
       libraryHaskellDepends = [
         base blaze-html blaze-markup clay comonad lucid mmorph
         monad-control monad-logger mtl path-extra resourcet text
         transformers-base urlpath
       ];
       description = "Abstraction for HTML-embedded content";
       license = stdenv.lib.licenses.mit;
     }) {};
  "math-functions" = callPackage
    ({ mkDerivation, base, deepseq, erf, HUnit, primitive, QuickCheck
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , vector, vector-th-unbox
     }:
     mkDerivation {
       pname = "math-functions";
       version = "0.2.1.0";
       sha256 = "1sv5vabsx332v1lpb6v3jv4zrzvpx1n7yprzd8wlcda5vsc5a6zp";
       libraryHaskellDepends = [
         base deepseq primitive vector vector-th-unbox
       ];
       testHaskellDepends = [
         base deepseq erf HUnit primitive QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2 vector
         vector-th-unbox
       ];
       doCheck = false;
       homepage = "https://github.com/bos/math-functions";
       description = "Special functions and Chebyshev polynomials";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "matrices" = callPackage
    ({ mkDerivation, base, criterion, deepseq, primitive, tasty
     , tasty-hunit, tasty-quickcheck, vector
     }:
     mkDerivation {
       pname = "matrices";
       version = "0.4.4";
       sha256 = "1virsmh7rwrb3kf9wrvkwj718dp989ji43xyvxx2bnvi3lr11wah";
       libraryHaskellDepends = [ base deepseq primitive vector ];
       testHaskellDepends = [
         base tasty tasty-hunit tasty-quickcheck vector
       ];
       benchmarkHaskellDepends = [ base criterion vector ];
       description = "native matrix based on vector";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "matrix" = callPackage
    ({ mkDerivation, base, criterion, deepseq, loop, primitive
     , QuickCheck, tasty, tasty-quickcheck, vector
     }:
     mkDerivation {
       pname = "matrix";
       version = "0.3.5.0";
       sha256 = "1d9mrbkzg6k9frvash5hf6gxmj3r2zwfk6mjaw03c4k2yv042gbs";
       libraryHaskellDepends = [ base deepseq loop primitive vector ];
       testHaskellDepends = [ base QuickCheck tasty tasty-quickcheck ];
       benchmarkHaskellDepends = [ base criterion ];
       description = "A native implementation of matrix operations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "maximal-cliques" = callPackage
    ({ mkDerivation, base, containers, vector }:
     mkDerivation {
       pname = "maximal-cliques";
       version = "0.1.1";
       sha256 = "1sbmykgb5lrd32rih09d8d0r5isz4nh5slfyd93dgln7ag3hb7bh";
       libraryHaskellDepends = [ base containers vector ];
       description = "Enumerate all maximal cliques of a graph";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mbox" = callPackage
    ({ mkDerivation, base, safe, text, time, time-locale-compat }:
     mkDerivation {
       pname = "mbox";
       version = "0.3.3";
       sha256 = "1r8r5y2a69aralqz3mjhkq9dnb9jq1z1v1s2y1dpvx2alapkw2h8";
       libraryHaskellDepends = [ base safe text time time-locale-compat ];
       description = "Read and write standard mailbox files";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mcmc-types" = callPackage
    ({ mkDerivation, base, containers, mwc-probability, transformers }:
     mkDerivation {
       pname = "mcmc-types";
       version = "1.0.3";
       sha256 = "0vpwrszhpl0ygs1qjk9v8gakl4rjia0cl4y3vna7cmh51c1jajrw";
       libraryHaskellDepends = [
         base containers mwc-probability transformers
       ];
       homepage = "http://github.com/jtobin/mcmc-types";
       description = "Common types for sampling";
       license = stdenv.lib.licenses.mit;
     }) {};
  "megaparsec" = callPackage
    ({ mkDerivation, base, bytestring, containers, criterion, deepseq
     , exceptions, HUnit, mtl, QuickCheck, scientific, test-framework
     , test-framework-hunit, test-framework-quickcheck2, text
     , transformers
     }:
     mkDerivation {
       pname = "megaparsec";
       version = "5.0.1";
       sha256 = "099vmasclyx3dw1s3ys2h6281ag0b0zx3ayffxaz8b6ry7sc9ncb";
       libraryHaskellDepends = [
         base bytestring containers deepseq exceptions mtl scientific text
         transformers
       ];
       testHaskellDepends = [
         base bytestring containers exceptions HUnit mtl QuickCheck
         scientific test-framework test-framework-hunit
         test-framework-quickcheck2 text transformers
       ];
       benchmarkHaskellDepends = [ base bytestring criterion text ];
       homepage = "https://github.com/mrkkrp/megaparsec";
       description = "Monadic parser combinators";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "memory" = callPackage
    ({ mkDerivation, base, bytestring, deepseq, ghc-prim, tasty
     , tasty-hunit, tasty-quickcheck
     }:
     mkDerivation {
       pname = "memory";
       version = "0.13";
       sha256 = "02l742qxjqy3jw1a347gb7sn7pn7a5qha1vzi2qqbvgafcjn0wyw";
       libraryHaskellDepends = [ base bytestring deepseq ghc-prim ];
       testHaskellDepends = [ base tasty tasty-hunit tasty-quickcheck ];
       homepage = "https://github.com/vincenthz/hs-memory";
       description = "memory and related abstraction stuff";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mersenne-random" = callPackage
    ({ mkDerivation, base, old-time }:
     mkDerivation {
       pname = "mersenne-random";
       version = "1.0.0.1";
       sha256 = "193qz3wn7lz18aywddr9qyn8v08ifv2yxwr68c67p5mn8vr8mvmw";
       libraryHaskellDepends = [ base old-time ];
       homepage = "http://code.haskell.org/~dons/code/mersenne-random";
       description = "Generate high quality pseudorandom numbers using a SIMD Fast Mersenne Twister";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mersenne-random-pure64" = callPackage
    ({ mkDerivation, base, old-time, random }:
     mkDerivation {
       pname = "mersenne-random-pure64";
       version = "0.2.0.5";
       sha256 = "0vil720bmbijf07i23iy10qnqa29j52pjvhcqj3a1s3gqbb3389w";
       configureFlags = [ "-f-small_base" ];
       libraryHaskellDepends = [ base old-time random ];
       homepage = "http://code.haskell.org/~dons/code/mersenne-random-pure64/";
       description = "Generate high quality pseudorandom numbers purely using a Mersenne Twister";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "messagepack" = callPackage
    ({ mkDerivation, base, bytestring, cereal, containers, deepseq
     , QuickCheck, test-framework, test-framework-quickcheck2
     , test-framework-th
     }:
     mkDerivation {
       pname = "messagepack";
       version = "0.5.4";
       sha256 = "0z2xbfqg9x8ymbr0j81br610ja8f0wd2wvvrnjrk222vbp0915ck";
       revision = "1";
       editedCabalFile = "0p13in70gvxl8d8hjl1dcxczfpcfyffy2lxbdy1d21h742ks1zjb";
       libraryHaskellDepends = [
         base bytestring cereal containers deepseq
       ];
       testHaskellDepends = [
         base bytestring cereal containers QuickCheck test-framework
         test-framework-quickcheck2 test-framework-th
       ];
       homepage = "https://github.com/rodrigosetti/messagepack";
       description = "Serialize instance for Message Pack Object";
       license = stdenv.lib.licenses.mit;
     }) {};
  "messagepack-rpc" = callPackage
    ({ mkDerivation, base, bytestring, cereal, containers, messagepack
     , network-simple
     }:
     mkDerivation {
       pname = "messagepack-rpc";
       version = "0.5.1";
       sha256 = "1g5096h595ajcb6kyb4s1azkwv9cmw2w7r9nvmm4wa388rj60yda";
       revision = "1";
       editedCabalFile = "05p6naaxswmsc3w7k67ydzzwyn60ymp0jbrc0f66p2sajvlnviax";
       libraryHaskellDepends = [
         base bytestring cereal containers messagepack network-simple
       ];
       homepage = "http://github.com/rodrigosetti/messagepack-rpc";
       description = "Message Pack RPC over TCP";
       license = stdenv.lib.licenses.mit;
     }) {};
  "metrics" = callPackage
    ({ mkDerivation, ansi-terminal, async, base, bytestring, containers
     , lens, mtl, mwc-random, primitive, QuickCheck, text, time, unix
     , unordered-containers, vector, vector-algorithms
     }:
     mkDerivation {
       pname = "metrics";
       version = "0.3.0.2";
       sha256 = "00iwairgi9lvb4f8iz4d834v8vq1f4awr34nl72fbkqgccdq1whd";
       libraryHaskellDepends = [
         ansi-terminal base bytestring containers lens mtl mwc-random
         primitive text time unix unordered-containers vector
         vector-algorithms
       ];
       testHaskellDepends = [
         async base lens mwc-random primitive QuickCheck unix
       ];
       doHaddock = false;
       description = "High-performance application metric tracking";
       license = stdenv.lib.licenses.mit;
     }) {};
  "microformats2-parser" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, aeson-qq, attoparsec, base
     , base-compat, blaze-html, blaze-markup, bytestring, containers
     , data-default, either, errors, hspec
     , hspec-expectations-pretty-diff, html-conduit, lens-aeson, mtl
     , network, network-uri, options, pcre-heavy, raw-strings-qq, safe
     , scotty, streaming-commons, tagsoup, template-haskell, text, time
     , transformers, unordered-containers, vector, wai-extra, warp
     , xml-lens, xss-sanitize
     }:
     mkDerivation {
       pname = "microformats2-parser";
       version = "1.0.1.6";
       sha256 = "1y1kxnih57yizdf89xajrmr6y8qwrl7qzk039yrzn6xzb0vawdwr";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson aeson-qq attoparsec base base-compat blaze-markup bytestring
         containers data-default either errors html-conduit lens-aeson
         network-uri pcre-heavy safe tagsoup text time transformers
         unordered-containers vector xml-lens xss-sanitize
       ];
       executableHaskellDepends = [
         aeson aeson-pretty base base-compat blaze-html blaze-markup
         data-default network network-uri options scotty streaming-commons
         text wai-extra warp
       ];
       testHaskellDepends = [
         aeson-qq base base-compat bytestring data-default hspec
         hspec-expectations-pretty-diff html-conduit mtl network-uri
         raw-strings-qq template-haskell text time xml-lens
       ];
       homepage = "https://github.com/myfreeweb/microformats2-parser";
       description = "A Microformats 2 parser";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "microlens" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "microlens";
       version = "0.4.7.0";
       sha256 = "09hylf79vnxahxvirlaykrhifs0i6ckv4y8vwpfw2f7hbi58fjf1";
       libraryHaskellDepends = [ base ];
       homepage = "http://github.com/aelve/microlens";
       description = "A tiny lens library with no dependencies. If you're writing an app, you probably want microlens-platform, not this.";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "microlens-aeson" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, bytestring, microlens
     , scientific, tasty, tasty-hunit, text, unordered-containers
     , vector
     }:
     mkDerivation {
       pname = "microlens-aeson";
       version = "2.1.1.3";
       sha256 = "0cb72sa5r5mi26y3bqp1lamf3kwkvi4q3xz09pp092151nyvshsf";
       libraryHaskellDepends = [
         aeson attoparsec base bytestring microlens scientific text
         unordered-containers vector
       ];
       testHaskellDepends = [
         aeson base bytestring microlens tasty tasty-hunit text
         unordered-containers vector
       ];
       homepage = "http://github.com/fosskers/microlens-aeson/";
       description = "Law-abiding lenses for Aeson, using microlens";
       license = stdenv.lib.licenses.mit;
     }) {};
  "microlens-contra" = callPackage
    ({ mkDerivation, base, contravariant, microlens }:
     mkDerivation {
       pname = "microlens-contra";
       version = "0.1.0.1";
       sha256 = "15gmqxi24jy8w83852y5qf4xymiilkl24sppcaw7r2hn6yfz30s9";
       libraryHaskellDepends = [ base contravariant microlens ];
       homepage = "http://github.com/aelve/microlens";
       description = "True folds and getters for microlens";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "microlens-ghc" = callPackage
    ({ mkDerivation, array, base, bytestring, containers, microlens
     , transformers
     }:
     mkDerivation {
       pname = "microlens-ghc";
       version = "0.4.7.0";
       sha256 = "1pqcpx235al3y73p3day2w1mfqh9f5ix0bc513qyjqhgbmj6h7zg";
       libraryHaskellDepends = [
         array base bytestring containers microlens transformers
       ];
       homepage = "http://github.com/aelve/microlens";
       description = "microlens + array, bytestring, containers, transformers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "microlens-mtl" = callPackage
    ({ mkDerivation, base, microlens, mtl, transformers
     , transformers-compat
     }:
     mkDerivation {
       pname = "microlens-mtl";
       version = "0.1.10.0";
       sha256 = "17dk2i7ggpipyjnb01wdlqcg4fnmgdbq7xhm34zaw97k03qc9pmi";
       libraryHaskellDepends = [
         base microlens mtl transformers transformers-compat
       ];
       homepage = "http://github.com/aelve/microlens";
       description = "microlens support for Reader/Writer/State from mtl";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "microlens-platform" = callPackage
    ({ mkDerivation, base, hashable, microlens, microlens-ghc
     , microlens-mtl, microlens-th, text, unordered-containers, vector
     }:
     mkDerivation {
       pname = "microlens-platform";
       version = "0.3.7.1";
       sha256 = "14s45jmgyivbllkiwck0f7z5h0g07s5lwfvz1wqmlpihakscchp2";
       libraryHaskellDepends = [
         base hashable microlens microlens-ghc microlens-mtl microlens-th
         text unordered-containers vector
       ];
       homepage = "http://github.com/aelve/microlens";
       description = "Feature-complete microlens";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "microlens-th" = callPackage
    ({ mkDerivation, base, containers, microlens, template-haskell }:
     mkDerivation {
       pname = "microlens-th";
       version = "0.4.1.1";
       sha256 = "0yvaabxs80fbmbg0yc1q7c147ks15bpn6fdq1zc0ay2pp06l06jv";
       libraryHaskellDepends = [
         base containers microlens template-haskell
       ];
       homepage = "http://github.com/aelve/microlens";
       description = "Automatic generation of record lenses for microlens";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mighty-metropolis" = callPackage
    ({ mkDerivation, base, containers, mcmc-types, mwc-probability
     , pipes, primitive, transformers
     }:
     mkDerivation {
       pname = "mighty-metropolis";
       version = "1.0.4";
       sha256 = "1kwjh1fzashq493jxqrxkq8rb4w8jwdfa33c4aklfgwb56b0frvf";
       libraryHaskellDepends = [
         base mcmc-types mwc-probability pipes primitive transformers
       ];
       testHaskellDepends = [ base containers mwc-probability ];
       homepage = "http://github.com/jtobin/mighty-metropolis";
       description = "The Metropolis algorithm";
       license = stdenv.lib.licenses.mit;
     }) {};
  "mime-mail" = callPackage
    ({ mkDerivation, base, base64-bytestring, blaze-builder, bytestring
     , filepath, hspec, process, random, text
     }:
     mkDerivation {
       pname = "mime-mail";
       version = "0.4.12";
       sha256 = "0z116scmaphamympnarqp2wjsblyxbrv47ck3gf15v1bjflwmqck";
       libraryHaskellDepends = [
         base base64-bytestring blaze-builder bytestring filepath process
         random text
       ];
       testHaskellDepends = [ base blaze-builder bytestring hspec text ];
       homepage = "http://github.com/snoyberg/mime-mail";
       description = "Compose MIME email messages";
       license = stdenv.lib.licenses.mit;
     }) {};
  "mime-mail-ses" = callPackage
    ({ mkDerivation, base, base64-bytestring, byteable, bytestring
     , conduit, cryptohash, http-client, http-conduit, http-types
     , mime-mail, old-locale, text, time, transformers, xml-conduit
     , xml-types
     }:
     mkDerivation {
       pname = "mime-mail-ses";
       version = "0.3.2.3";
       sha256 = "0k2dgw3alnfjj4byr30d687b27hmwh4pacm0jwh15prcdhw7gy83";
       libraryHaskellDepends = [
         base base64-bytestring byteable bytestring conduit cryptohash
         http-client http-conduit http-types mime-mail old-locale text time
         transformers xml-conduit xml-types
       ];
       homepage = "http://github.com/snoyberg/mime-mail";
       description = "Send mime-mail messages via Amazon SES";
       license = stdenv.lib.licenses.mit;
     }) {};
  "mime-types" = callPackage
    ({ mkDerivation, base, bytestring, containers, text }:
     mkDerivation {
       pname = "mime-types";
       version = "0.1.0.7";
       sha256 = "1fg9cqpp5lswk8ajlq4f41n12c2v2naz179l8dsz6zisjqj4l5l3";
       libraryHaskellDepends = [ base bytestring containers text ];
       homepage = "https://github.com/yesodweb/wai";
       description = "Basic mime-type handling types and functions";
       license = stdenv.lib.licenses.mit;
     }) {};
  "misfortune" = callPackage
    ({ mkDerivation, base, bytestring, cereal, directory, filepath
     , knob, monad-loops, random-fu, regex-base, regex-pcre, semigroups
     , text, utf8-string, vector
     }:
     mkDerivation {
       pname = "misfortune";
       version = "0.1.1.2";
       sha256 = "0j93zqgqskrj2zc0vwsmwldidr6nkcxq2v3mmzv7l7l1bwhl8jxf";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base bytestring cereal directory filepath knob random-fu semigroups
         text utf8-string vector
       ];
       executableHaskellDepends = [ monad-loops regex-base regex-pcre ];
       homepage = "https://github.com/mokus0/misfortune";
       description = "fortune-mod clone";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "missing-foreign" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "missing-foreign";
       version = "0.1.1";
       sha256 = "11f8pknbarlj956nmalqhd2v704z7d7xbi61hs1q8vb2p36kc6wy";
       libraryHaskellDepends = [ base ];
       description = "Convenience functions for FFI work";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mmap" = callPackage
    ({ mkDerivation, base, bytestring }:
     mkDerivation {
       pname = "mmap";
       version = "0.5.9";
       sha256 = "1y5mk3yf4b8r6rzmlx1xqn4skaigrqnv08sqq0v7r3nbw42bpz2q";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base bytestring ];
       description = "Memory mapped files for POSIX and Windows";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mmorph" = callPackage
    ({ mkDerivation, base, mtl, transformers, transformers-compat }:
     mkDerivation {
       pname = "mmorph";
       version = "1.0.9";
       sha256 = "0qs5alhy719a14lrs7rnh2qsn1146czg68gvgylf4m5jh4w7vwp1";
       libraryHaskellDepends = [
         base mtl transformers transformers-compat
       ];
       description = "Monad morphisms";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mockery" = callPackage
    ({ mkDerivation, base, base-compat, bytestring, directory, filepath
     , hspec, logging-facade, temporary
     }:
     mkDerivation {
       pname = "mockery";
       version = "0.3.4";
       sha256 = "0f19b057cphfslw3brc690v4hq86xwjlllfc9idbilfgz7s3bzih";
       libraryHaskellDepends = [
         base base-compat bytestring directory filepath logging-facade
         temporary
       ];
       testHaskellDepends = [
         base base-compat bytestring directory filepath hspec logging-facade
         temporary
       ];
       description = "Support functions for automated testing";
       license = stdenv.lib.licenses.mit;
     }) {};
  "modify-fasta" = callPackage
    ({ mkDerivation, base, containers, fasta, mtl, optparse-applicative
     , pipes, pipes-text, regex-tdfa, regex-tdfa-text, split, text
     , text-show
     }:
     mkDerivation {
       pname = "modify-fasta";
       version = "0.8.2.1";
       sha256 = "18319sq20kh1iy5f66hxdbmnxi56wri5jpp12qgaqlrkfpdwvxss";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base containers fasta regex-tdfa regex-tdfa-text split text
         text-show
       ];
       executableHaskellDepends = [
         base containers fasta mtl optparse-applicative pipes pipes-text
         split text
       ];
       homepage = "https://github.com/GregorySchwartz/modify-fasta";
       description = "Modify fasta (and CLIP) files in several optional ways";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "moesocks" = callPackage
    ({ mkDerivation, aeson, async, attoparsec, base, binary, bytestring
     , containers, cryptohash, hslogger, HsOpenSSL, iproute, lens
     , lens-aeson, mtl, network, optparse-applicative, random, stm
     , strict, text, time, transformers, unordered-containers
     }:
     mkDerivation {
       pname = "moesocks";
       version = "1.0.0.41";
       sha256 = "15fbqmjshkc6fiqz7k8sfv6vkabk7slw77hg3da1gdiw6rh5k445";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         aeson async attoparsec base binary bytestring containers cryptohash
         hslogger HsOpenSSL iproute lens lens-aeson mtl network
         optparse-applicative random stm strict text time transformers
         unordered-containers
       ];
       doHaddock = false;
       homepage = "https://github.com/nfjinjing/moesocks";
       description = "A functional firewall killer";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "monad-control" = callPackage
    ({ mkDerivation, base, stm, transformers, transformers-base
     , transformers-compat
     }:
     mkDerivation {
       pname = "monad-control";
       version = "1.0.1.0";
       sha256 = "1x018gi5irznx5rgzmkr2nrgh26r8cvqwkcfc6n6y05pdjf21c6l";
       libraryHaskellDepends = [
         base stm transformers transformers-base transformers-compat
       ];
       homepage = "https://github.com/basvandijk/monad-control";
       description = "Lift control operations, like exception catching, through monad transformers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monad-coroutine" = callPackage
    ({ mkDerivation, base, monad-parallel, transformers
     , transformers-compat
     }:
     mkDerivation {
       pname = "monad-coroutine";
       version = "0.9.0.3";
       sha256 = "1r69cjmkgplgwf94bqm0hz4aiyp5fkn6fyqr72i128zgk62gxah8";
       libraryHaskellDepends = [
         base monad-parallel transformers transformers-compat
       ];
       homepage = "http://trac.haskell.org/SCC/wiki/monad-coroutine";
       description = "Coroutine monad transformer for suspending and resuming monadic computations";
       license = "GPL";
     }) {};
  "monad-extras" = callPackage
    ({ mkDerivation, base, mmorph, monad-control, stm, transformers
     , transformers-base
     }:
     mkDerivation {
       pname = "monad-extras";
       version = "0.5.11";
       sha256 = "0rq44dk1fvfqkhng2yczyyz7jh6d6m0kjy58k02ady28f7j2r5vn";
       libraryHaskellDepends = [
         base mmorph monad-control stm transformers transformers-base
       ];
       homepage = "http://github.com/jwiegley/monad-extras";
       description = "Extra utility functions for working with monads";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monad-http" = callPackage
    ({ mkDerivation, base, base-compat, bytestring, exceptions
     , http-client, http-client-tls, http-types, monad-logger
     , monadcryptorandom, MonadRandom, mtl, text, transformers
     , transformers-compat
     }:
     mkDerivation {
       pname = "monad-http";
       version = "0.1.0.0";
       sha256 = "14ki66l60la1mmm544vvzn930liaygj6zrql10nr192shf3v0cx3";
       revision = "3";
       editedCabalFile = "1xjgcqg1l2dbsvd5xr780ncbjd4cahih5mz7dnpyfcpi9s54y93x";
       libraryHaskellDepends = [
         base base-compat bytestring exceptions http-client http-client-tls
         http-types monad-logger monadcryptorandom MonadRandom mtl text
         transformers transformers-compat
       ];
       homepage = "https://github.com/futurice/haskell-monad-http#readme";
       description = "A class of monads which can do http requests";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monad-journal" = callPackage
    ({ mkDerivation, base, either, monad-control, mtl, transformers
     , transformers-base
     }:
     mkDerivation {
       pname = "monad-journal";
       version = "0.7.2";
       sha256 = "024xqvbbhfg5miy86nm3bvjplkqv3mds0qa89ia9hhcrpmvadcbj";
       libraryHaskellDepends = [
         base either monad-control mtl transformers transformers-base
       ];
       homepage = "http://github.com/phaazon/monad-journal";
       description = "Pure logger typeclass and monad transformer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monad-logger" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring, conduit
     , conduit-extra, exceptions, fast-logger, lifted-base
     , monad-control, monad-loops, mtl, resourcet, stm, stm-chans
     , template-haskell, text, transformers, transformers-base
     , transformers-compat
     }:
     mkDerivation {
       pname = "monad-logger";
       version = "0.3.20.1";
       sha256 = "1bdsq3lf6zh7fp8znkkr890x2ifpc0f24k8qxhlvxii8dapx6z4f";
       libraryHaskellDepends = [
         base blaze-builder bytestring conduit conduit-extra exceptions
         fast-logger lifted-base monad-control monad-loops mtl resourcet stm
         stm-chans template-haskell text transformers transformers-base
         transformers-compat
       ];
       homepage = "https://github.com/kazu-yamamoto/logger";
       description = "A class of monads which can log messages";
       license = stdenv.lib.licenses.mit;
     }) {};
  "monad-logger-json" = callPackage
    ({ mkDerivation, aeson, base, monad-logger, template-haskell, text
     }:
     mkDerivation {
       pname = "monad-logger-json";
       version = "0.1.0.0";
       sha256 = "1ap98487lwgvgrrxkjskga86ckbv6rhn2n6pzp403343xx51r1qh";
       libraryHaskellDepends = [
         aeson base monad-logger template-haskell text
       ];
       homepage = "http://github.com/fpco/monad-logger-json";
       description = "JSON-friendly Logging APIs";
       license = stdenv.lib.licenses.mit;
     }) {};
  "monad-logger-prefix" = callPackage
    ({ mkDerivation, base, criterion, doctest, exceptions, Glob, hspec
     , monad-control, monad-logger, mtl, QuickCheck, resourcet, text
     , transformers, transformers-base
     }:
     mkDerivation {
       pname = "monad-logger-prefix";
       version = "0.1.6";
       sha256 = "14jdx72wx6yavjjaaxx5p270vy5cdshynfbp5ss4mdi3h84rfxpv";
       libraryHaskellDepends = [
         base exceptions monad-control monad-logger mtl resourcet text
         transformers transformers-base
       ];
       testHaskellDepends = [ base doctest Glob hspec QuickCheck ];
       benchmarkHaskellDepends = [ base criterion monad-logger ];
       doCheck = false;
       homepage = "https://github.com/sellerlabs/monad-logger-prefix#readme";
       description = "Add prefixes to your monad-logger output";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "monad-logger-syslog" = callPackage
    ({ mkDerivation, base, bytestring, fast-logger, hsyslog
     , monad-logger, text, transformers
     }:
     mkDerivation {
       pname = "monad-logger-syslog";
       version = "0.1.3.0";
       sha256 = "1qw36csyw1zgx9xis08hckrihij0kjqn0sl8vb6rpsm7sgsrhl5k";
       libraryHaskellDepends = [
         base bytestring fast-logger hsyslog monad-logger text transformers
       ];
       homepage = "https://github.com/fpco/monad-logger-syslog";
       description = "syslog output for monad-logger";
       license = stdenv.lib.licenses.mit;
     }) {};
  "monad-loops" = callPackage
    ({ mkDerivation, base, tasty, tasty-hunit }:
     mkDerivation {
       pname = "monad-loops";
       version = "0.4.3";
       sha256 = "062c2sn3hc8h50p1mhqkpyv6x8dydz2zh3ridvlfjq9nqimszaky";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base tasty tasty-hunit ];
       homepage = "https://github.com/mokus0/monad-loops";
       description = "Monadic loops";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "monad-par" = callPackage
    ({ mkDerivation, abstract-deque, abstract-par, array, base
     , containers, deepseq, HUnit, monad-par-extras, mtl, mwc-random
     , parallel, QuickCheck, test-framework, test-framework-hunit
     , test-framework-quickcheck2, test-framework-th, time
     }:
     mkDerivation {
       pname = "monad-par";
       version = "0.3.4.8";
       sha256 = "0ldrzqy24fsszvn2a2nr77m2ih7xm0h9bgkjyv1l274aj18xyk7q";
       libraryHaskellDepends = [
         abstract-deque abstract-par array base containers deepseq
         monad-par-extras mtl mwc-random parallel
       ];
       testHaskellDepends = [
         abstract-deque abstract-par array base containers deepseq HUnit
         monad-par-extras mtl mwc-random QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2 test-framework-th
         time
       ];
       homepage = "https://github.com/simonmar/monad-par";
       description = "A library for parallel programming based on a monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monad-par-extras" = callPackage
    ({ mkDerivation, abstract-par, base, cereal, deepseq, mtl, random
     , transformers
     }:
     mkDerivation {
       pname = "monad-par-extras";
       version = "0.3.3";
       sha256 = "0bl4bd6jzdc5zm20q1g67ppkfh6j6yn8fwj6msjayj621cck67p2";
       libraryHaskellDepends = [
         abstract-par base cereal deepseq mtl random transformers
       ];
       homepage = "https://github.com/simonmar/monad-par";
       description = "Combinators and extra features for Par monads";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monad-parallel" = callPackage
    ({ mkDerivation, base, parallel, transformers, transformers-compat
     }:
     mkDerivation {
       pname = "monad-parallel";
       version = "0.7.2.2";
       sha256 = "1czg23k9qpggj58fksi4zqyig2flqqi1fznq17iw276fivnimgb0";
       libraryHaskellDepends = [
         base parallel transformers transformers-compat
       ];
       homepage = "http://trac.haskell.org/SCC/wiki/monad-parallel";
       description = "Parallel execution of monadic computations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monad-peel" = callPackage
    ({ mkDerivation, base, extensible-exceptions, HUnit, test-framework
     , test-framework-hunit, transformers
     }:
     mkDerivation {
       pname = "monad-peel";
       version = "0.2.1.1";
       sha256 = "1573kzxbqgrmvgwmqq0v31lwx3k6vq15agcnzjibn5x1214zb4gm";
       libraryHaskellDepends = [
         base extensible-exceptions transformers
       ];
       testHaskellDepends = [
         base extensible-exceptions HUnit test-framework
         test-framework-hunit transformers
       ];
       homepage = "http://andersk.mit.edu/haskell/monad-peel/";
       description = "Lift control operations like exception catching through monad transformers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monad-primitive" = callPackage
    ({ mkDerivation, base, primitive, transformers }:
     mkDerivation {
       pname = "monad-primitive";
       version = "0.1";
       sha256 = "1vi6g65hdyq5vq78mfag0qljxgzb6vq83m82x3cpgjl7dr9k5h1x";
       libraryHaskellDepends = [ base primitive transformers ];
       homepage = "http://bitbucket.org/Shimuuar/monad-primitive";
       description = "Type class for monad transformers stack with pirimitive base monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monad-products" = callPackage
    ({ mkDerivation, base, semigroupoids }:
     mkDerivation {
       pname = "monad-products";
       version = "4.0.1";
       sha256 = "1skcjjkn14fh92l4rx3akxjg1c85jqhnlwvkkzqwz9g15bdy3gq2";
       libraryHaskellDepends = [ base semigroupoids ];
       homepage = "http://github.com/ekmett/monad-products";
       description = "Monad products";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monad-skeleton" = callPackage
    ({ mkDerivation, base, containers, ghc-prim }:
     mkDerivation {
       pname = "monad-skeleton";
       version = "0.1.2.2";
       sha256 = "1qrd6qgb2avr1ww5swqm16dqdbz0h61jp502d73p90rhkq5lzk5i";
       libraryHaskellDepends = [ base containers ghc-prim ];
       homepage = "https://github.com/fumieval/monad-skeleton";
       description = "An undead monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monad-time" = callPackage
    ({ mkDerivation, base, mtl, time }:
     mkDerivation {
       pname = "monad-time";
       version = "0.2";
       sha256 = "0pdhx2xfh0ik3vzflg2jmw9nplljvc32aisa6xgivixljk503fd9";
       revision = "1";
       editedCabalFile = "1v59w75w589mh6n3ga2fcihgmjmg0vd0q7fg9l2q52yhgx5pz9m3";
       libraryHaskellDepends = [ base mtl time ];
       testHaskellDepends = [ base mtl time ];
       homepage = "https://github.com/scrive/monad-time";
       description = "Type class for monads which carry the notion of the current time";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monad-unlift" = callPackage
    ({ mkDerivation, base, constraints, monad-control, transformers
     , transformers-base
     }:
     mkDerivation {
       pname = "monad-unlift";
       version = "0.2.0";
       sha256 = "03zf2nd00ds12rrbp3qn7pr9vaw1npzswrzcnhc1k0p436366pjb";
       libraryHaskellDepends = [
         base constraints monad-control transformers transformers-base
       ];
       homepage = "https://github.com/fpco/monad-unlift";
       description = "Typeclasses for representing monad transformer unlifting";
       license = stdenv.lib.licenses.mit;
     }) {};
  "monad-unlift-ref" = callPackage
    ({ mkDerivation, base, constraints, exceptions, monad-control
     , monad-unlift, mtl, mutable-containers, resourcet, stm
     , transformers, transformers-base
     }:
     mkDerivation {
       pname = "monad-unlift-ref";
       version = "0.2.0";
       sha256 = "1qac8ijilndn4pcdf142f1vpqqaqrnh7zmq0jh86bpnwhhrwqym9";
       libraryHaskellDepends = [
         base constraints exceptions monad-control monad-unlift mtl
         mutable-containers resourcet stm transformers transformers-base
       ];
       homepage = "https://github.com/fpco/monad-unlift";
       description = "Typeclasses for representing monad transformer unlifting";
       license = stdenv.lib.licenses.mit;
     }) {};
  "monadLib" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "monadLib";
       version = "3.7.3";
       sha256 = "17m9rj6spr5n9jlhwwvk8p40yrpwgz3j9kj3pjq7mpyrc1ssfd0q";
       libraryHaskellDepends = [ base ];
       homepage = "http://wiki.github.com/yav/monadlib";
       description = "A collection of monad transformers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monadcryptorandom" = callPackage
    ({ mkDerivation, base, bytestring, crypto-api, mtl, tagged
     , transformers
     }:
     mkDerivation {
       pname = "monadcryptorandom";
       version = "0.7.0";
       sha256 = "08sna63ndgcnry14xh6sl471dhx3vklbpv8f3mgqvi9bjdrij0b7";
       libraryHaskellDepends = [
         base bytestring crypto-api mtl tagged transformers
       ];
       homepage = "https://github.com/TomMD/monadcryptorandom";
       description = "A monad for using CryptoRandomGen";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monadic-arrays" = callPackage
    ({ mkDerivation, array, base, stm, transformers
     , transformers-compat
     }:
     mkDerivation {
       pname = "monadic-arrays";
       version = "0.2.2";
       sha256 = "183nwb3ji4ak6yf2wahsa92l8ymnhhljxkvp8f6b8wh223318xv6";
       libraryHaskellDepends = [
         array base stm transformers transformers-compat
       ];
       homepage = "http://github.com/ekmett/monadic-arrays/";
       description = "Boxed and unboxed arrays for monad transformers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monadloc" = callPackage
    ({ mkDerivation, base, template-haskell, transformers }:
     mkDerivation {
       pname = "monadloc";
       version = "0.7.1";
       sha256 = "1a773nysrsj61ka7bdacb0i7dxlgb1fjz3x5w9c1w1dv7rmhynmj";
       libraryHaskellDepends = [ base template-haskell transformers ];
       homepage = "http://github.com/pepeiborra/monadloc";
       description = "A class for monads which can keep a monadic call trace";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "monadplus" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "monadplus";
       version = "1.4.2";
       sha256 = "15b5320wdpmdp5slpphnc1x4rhjch3igw245dp2jxbqyvchdavin";
       libraryHaskellDepends = [ base ];
       description = "Haskell98 partial maps and filters over MonadPlus";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monads-tf" = callPackage
    ({ mkDerivation, base, transformers }:
     mkDerivation {
       pname = "monads-tf";
       version = "0.1.0.3";
       sha256 = "1wdhskwa6dw8qljbvwpyxj8ca6y95q2np7z4y4q6bpf4anmd5794";
       libraryHaskellDepends = [ base transformers ];
       description = "Monad classes, using type families";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mongoDB" = callPackage
    ({ mkDerivation, array, base, base16-bytestring, base64-bytestring
     , binary, bson, bytestring, containers, criterion, cryptohash
     , data-default-class, hashtables, hspec, lifted-base, monad-control
     , mtl, network, nonce, old-locale, parsec, random, random-shuffle
     , text, time, tls, transformers-base
     }:
     mkDerivation {
       pname = "mongoDB";
       version = "2.1.1.1";
       sha256 = "0mww0caczsi2srhdzkrmlivd4nsqsyqla524j4dxnwfs4w1qbgz4";
       libraryHaskellDepends = [
         array base base16-bytestring base64-bytestring binary bson
         bytestring containers cryptohash data-default-class hashtables
         lifted-base monad-control mtl network nonce parsec random
         random-shuffle text tls transformers-base
       ];
       testHaskellDepends = [ base hspec mtl old-locale text time ];
       benchmarkHaskellDepends = [
         array base base16-bytestring base64-bytestring binary bson
         bytestring containers criterion cryptohash hashtables lifted-base
         monad-control mtl network nonce parsec random random-shuffle text
         transformers-base
       ];
       doCheck = false;
       homepage = "https://github.com/mongodb-haskell/mongodb";
       description = "Driver (client) for MongoDB, a free, scalable, fast, document DBMS";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "mono-traversable" = callPackage
    ({ mkDerivation, base, bytestring, containers, criterion, foldl
     , hashable, hspec, HUnit, mwc-random, QuickCheck, semigroups, split
     , text, transformers, unordered-containers, vector
     , vector-algorithms
     }:
     mkDerivation {
       pname = "mono-traversable";
       version = "1.0.1.1";
       sha256 = "0myy7nxywpf7x5b4vyz4yskkp76v1iy3s8x1vhaw465i5mkjgyis";
       libraryHaskellDepends = [
         base bytestring containers hashable split text transformers
         unordered-containers vector vector-algorithms
       ];
       testHaskellDepends = [
         base bytestring containers foldl hspec HUnit QuickCheck semigroups
         text transformers unordered-containers vector
       ];
       benchmarkHaskellDepends = [ base criterion mwc-random vector ];
       homepage = "https://github.com/snoyberg/mono-traversable";
       description = "Type classes for mapping, folding, and traversing monomorphic containers";
       license = stdenv.lib.licenses.mit;
     }) {};
  "mono-traversable-instances" = callPackage
    ({ mkDerivation, base, comonad, containers, dlist, dlist-instances
     , mono-traversable, semigroupoids, semigroups, transformers
     , vector-instances
     }:
     mkDerivation {
       pname = "mono-traversable-instances";
       version = "0.1.0.0";
       sha256 = "0zh81hvqnracil2nvkx14xzwv9vavsnx739acp6gycdyrs5jpzxm";
       libraryHaskellDepends = [
         base comonad containers dlist dlist-instances mono-traversable
         semigroupoids semigroups transformers vector-instances
       ];
       homepage = "https://github.com/snoyberg/mono-traversable#readme";
       description = "Extra typeclass instances for mono-traversable";
       license = stdenv.lib.licenses.mit;
     }) {};
  "monoid-extras" = callPackage
    ({ mkDerivation, base, criterion, groups, semigroupoids, semigroups
     }:
     mkDerivation {
       pname = "monoid-extras";
       version = "0.4.2";
       sha256 = "07r86ip6jfa2ka84dpilap01g1pg8r5bqz2nk7js6mlnbh2lxzqk";
       libraryHaskellDepends = [ base groups semigroupoids semigroups ];
       benchmarkHaskellDepends = [ base criterion ];
       description = "Various extra monoid-related definitions and utilities";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monoid-subclasses" = callPackage
    ({ mkDerivation, base, bytestring, containers, primes, QuickCheck
     , quickcheck-instances, tasty, tasty-quickcheck, text, vector
     }:
     mkDerivation {
       pname = "monoid-subclasses";
       version = "0.4.2.1";
       sha256 = "0ah3yn1fhc09860aaa3a3rdj5b8k51z37060i6x6d6y00q6kdqsg";
       libraryHaskellDepends = [
         base bytestring containers primes text vector
       ];
       testHaskellDepends = [
         base bytestring containers primes QuickCheck quickcheck-instances
         tasty tasty-quickcheck text vector
       ];
       homepage = "https://github.com/blamario/monoid-subclasses/";
       description = "Subclasses of Monoid";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monoidal-containers" = callPackage
    ({ mkDerivation, base, containers, deepseq, hashable, lens, newtype
     , unordered-containers
     }:
     mkDerivation {
       pname = "monoidal-containers";
       version = "0.3.0.1";
       sha256 = "1754bn5kxp7zqprgjkl5w6az4h64iz6hc3wn711s46p7b9llcaps";
       libraryHaskellDepends = [
         base containers deepseq hashable lens newtype unordered-containers
       ];
       homepage = "http://github.com/bgamari/monoidal-containers";
       description = "Containers with monoidal accumulation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "morte" = callPackage
    ({ mkDerivation, alex, array, base, binary, containers, criterion
     , deepseq, Earley, http-client, http-client-tls, microlens
     , microlens-mtl, mtl, optparse-applicative, pipes, QuickCheck
     , system-fileio, system-filepath, tasty, tasty-hunit
     , tasty-quickcheck, text, text-format, transformers
     }:
     mkDerivation {
       pname = "morte";
       version = "1.6.2";
       sha256 = "0niv6s3r863p67zabnh6fz5dijfx128x4m6i5nhahdh2qhfa8yr7";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         array base binary containers deepseq Earley http-client
         http-client-tls microlens microlens-mtl pipes system-fileio
         system-filepath text text-format transformers
       ];
       libraryToolDepends = [ alex ];
       executableHaskellDepends = [ base optparse-applicative text ];
       testHaskellDepends = [
         base mtl QuickCheck system-filepath tasty tasty-hunit
         tasty-quickcheck text transformers
       ];
       benchmarkHaskellDepends = [ base criterion system-filepath text ];
       description = "A bare-bones calculus of constructions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mountpoints" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "mountpoints";
       version = "1.0.2";
       sha256 = "1hnm31pqcffphyc463wf0vbik9fzm5lb2r4wjdc1y4dqzmjdzz37";
       libraryHaskellDepends = [ base ];
       description = "list mount points";
       license = "LGPL";
     }) {};
  "mtl" = callPackage
    ({ mkDerivation, base, transformers }:
     mkDerivation {
       pname = "mtl";
       version = "2.2.1";
       sha256 = "1icdbj2rshzn0m1zz5wa7v3xvkf6qw811p4s7jgqwvx1ydwrvrfa";
       revision = "1";
       editedCabalFile = "0fsa965g9h23mlfjzghmmhcb9dmaq8zpm374gby6iwgdx47q0njb";
       libraryHaskellDepends = [ base transformers ];
       homepage = "http://github.com/ekmett/mtl";
       description = "Monad classes, using functional dependencies";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mtl-compat" = callPackage
    ({ mkDerivation, base, mtl }:
     mkDerivation {
       pname = "mtl-compat";
       version = "0.2.1.3";
       sha256 = "15388p9ybdn6digk6cpdsw6havd0yva8vvwl3p7fnc9sb59wln34";
       revision = "3";
       editedCabalFile = "0igfsrc7q326ggvw47xwq1xffa4r225akla0nwgmqhd7y1n5753c";
       libraryHaskellDepends = [ base mtl ];
       doHaddock = false;
       homepage = "https://github.com/haskell-compat/mtl-compat";
       description = "Backported Control.Monad.Except module from mtl";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mtl-prelude" = callPackage
    ({ mkDerivation, base, mtl, transformers }:
     mkDerivation {
       pname = "mtl-prelude";
       version = "2.0.3.1";
       sha256 = "0cqjl0mcnj6qgx46qxjygndzlgch4mc0q0sm3wbd4fynjfhdv9n4";
       libraryHaskellDepends = [ base mtl transformers ];
       homepage = "https://github.com/nikita-volkov/mtl-prelude";
       description = "Reexports of most definitions from \"mtl\" and \"transformers\"";
       license = stdenv.lib.licenses.mit;
     }) {};
  "multiarg" = callPackage
    ({ mkDerivation, base, QuickCheck, tasty, tasty-quickcheck
     , tasty-th
     }:
     mkDerivation {
       pname = "multiarg";
       version = "0.30.0.10";
       sha256 = "188pqjpd1l4kwv4gnym6nq6nyfmcrq153bdpqbfjmmh6iqx65yn9";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [
         base QuickCheck tasty tasty-quickcheck tasty-th
       ];
       homepage = "https://github.com/massysett/multiarg";
       description = "Command lines for options that take multiple arguments";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "multimap" = callPackage
    ({ mkDerivation, base, containers }:
     mkDerivation {
       pname = "multimap";
       version = "1.2.1";
       sha256 = "0d3l5q4yvmywl6i9ip96zz0fvhjdh00mfbbniphbjxsi8wlwack3";
       libraryHaskellDepends = [ base containers ];
       homepage = "http://hub.darcs.net/scravy/multimap";
       description = "A multimap";
       license = stdenv.lib.licenses.mit;
     }) {};
  "multipart" = callPackage
    ({ mkDerivation, base, bytestring, parsec }:
     mkDerivation {
       pname = "multipart";
       version = "0.1.2";
       sha256 = "0g04jhyw1ib1s7c9bcldyyn4n90qd9x7dmvic4vgq57bgcqgnhz5";
       libraryHaskellDepends = [ base bytestring parsec ];
       homepage = "http://www.github.com/silkapp/multipart";
       description = "HTTP multipart split out of the cgi package";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "multiset" = callPackage
    ({ mkDerivation, base, containers, doctest, Glob }:
     mkDerivation {
       pname = "multiset";
       version = "0.3.3";
       sha256 = "0dg1dlvsyjam5z284p2pzfdzhk88z9bw57v290xzx0dyvg9pfkn7";
       revision = "2";
       editedCabalFile = "1pwb1prra12yrm3qdjp8h7343cilbkck85blhaflzsmn1sbcyq2w";
       libraryHaskellDepends = [ base containers ];
       testHaskellDepends = [ base doctest Glob ];
       description = "The Data.MultiSet container type";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "multiset-comb" = callPackage
    ({ mkDerivation, base, containers, transformers }:
     mkDerivation {
       pname = "multiset-comb";
       version = "0.2.4.1";
       sha256 = "1nih0101d6z2m4wi22804vjxrd5nr35mmqk31lm7bhanmwnl7qwa";
       libraryHaskellDepends = [ base containers transformers ];
       description = "Combinatorial algorithms over multisets";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "murmur-hash" = callPackage
    ({ mkDerivation, base, bytestring }:
     mkDerivation {
       pname = "murmur-hash";
       version = "0.1.0.9";
       sha256 = "1bb58kfnzvx3mpc0rc0dhqc1fk36nm8prd6gvf20gk6lxaadpfc9";
       libraryHaskellDepends = [ base bytestring ];
       homepage = "http://github.com/nominolo/murmur-hash";
       description = "MurmurHash2 implementation for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "murmur3" = callPackage
    ({ mkDerivation, base, base16-bytestring, bytestring, cereal, HUnit
     , QuickCheck, test-framework, test-framework-hunit
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "murmur3";
       version = "1.0.3";
       sha256 = "0ahzspjgiy8p594x0v45bsvf0k9z94nnvvfcpi8lyq5fwvh82b0h";
       libraryHaskellDepends = [ base bytestring cereal ];
       testHaskellDepends = [
         base base16-bytestring bytestring HUnit QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2
       ];
       homepage = "http://github.com/plaprade/murmur3";
       description = "Pure Haskell implementation of the MurmurHash3 x86_32 algorithm";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "mustache" = callPackage
    ({ mkDerivation, aeson, base, base-unicode-symbols, bytestring
     , cmdargs, containers, directory, either, filepath, hspec, lens
     , mtl, parsec, process, scientific, tar, template-haskell
     , temporary, text, th-lift, unordered-containers, vector, wreq
     , yaml, zlib
     }:
     mkDerivation {
       pname = "mustache";
       version = "2.1.2";
       sha256 = "100gi18j64ldn4dl4q6nsv2zzfdnsll5zngnnkq700200arhacrq";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base bytestring containers directory either filepath mtl
         parsec scientific template-haskell text th-lift
         unordered-containers vector
       ];
       executableHaskellDepends = [
         aeson base bytestring cmdargs filepath text yaml
       ];
       testHaskellDepends = [
         aeson base base-unicode-symbols bytestring directory filepath hspec
         lens process tar temporary text unordered-containers wreq yaml zlib
       ];
       homepage = "https://github.com/JustusAdam/mustache";
       description = "A mustache template parser library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mutable-containers" = callPackage
    ({ mkDerivation, base, containers, criterion, ghc-prim, hspec
     , mono-traversable, primitive, QuickCheck, vector
     }:
     mkDerivation {
       pname = "mutable-containers";
       version = "0.3.3";
       sha256 = "1svwa54prfdmhdlmv118lnkwv3jx3rx7v5x30wbdsy39n75kjyks";
       libraryHaskellDepends = [
         base containers ghc-prim mono-traversable primitive vector
       ];
       testHaskellDepends = [
         base containers hspec primitive QuickCheck vector
       ];
       benchmarkHaskellDepends = [ base containers criterion ];
       homepage = "https://github.com/snoyberg/mono-traversable";
       description = "Abstactions and concrete implementations of mutable containers";
       license = stdenv.lib.licenses.mit;
     }) {};
  "mwc-probability" = callPackage
    ({ mkDerivation, base, mwc-random, primitive, transformers }:
     mkDerivation {
       pname = "mwc-probability";
       version = "1.2.2";
       sha256 = "0nlislvxiziyvzzlcl8fy1xap6f9rx7mhk94p077xdn7a6g9wkm5";
       libraryHaskellDepends = [ base mwc-random primitive transformers ];
       homepage = "http://github.com/jtobin/mwc-probability";
       description = "Sampling function-based probability distributions";
       license = stdenv.lib.licenses.mit;
     }) {};
  "mwc-random" = callPackage
    ({ mkDerivation, base, HUnit, primitive, QuickCheck, statistics
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , time, vector
     }:
     mkDerivation {
       pname = "mwc-random";
       version = "0.13.5.0";
       sha256 = "1a8wim67n6wbliq9qlw719qc9dh0qpflbvlxbsqqlhw8s2ajvp98";
       libraryHaskellDepends = [ base primitive time vector ];
       testHaskellDepends = [
         base HUnit QuickCheck statistics test-framework
         test-framework-hunit test-framework-quickcheck2 vector
       ];
       homepage = "https://github.com/bos/mwc-random";
       description = "Fast, high quality pseudo random number generation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mwc-random-monad" = callPackage
    ({ mkDerivation, base, monad-primitive, mwc-random, primitive
     , transformers, vector
     }:
     mkDerivation {
       pname = "mwc-random-monad";
       version = "0.7.3.1";
       sha256 = "0h4ljwwhqg4yy513lqk2ix0m9q2hmk276hgfrc6n3ja6wqbpkwyh";
       libraryHaskellDepends = [
         base monad-primitive mwc-random primitive transformers vector
       ];
       description = "Monadic interface for mwc-random";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "nagios-check" = callPackage
    ({ mkDerivation, base, bifunctors, exceptions, hspec, mtl
     , QuickCheck, text
     }:
     mkDerivation {
       pname = "nagios-check";
       version = "0.3.2";
       sha256 = "1dv0g25iz61ql9nz9s7krlpa1hjv3iqf4i1wsm1njf8cn5fbij8v";
       libraryHaskellDepends = [ base bifunctors exceptions mtl text ];
       testHaskellDepends = [ base hspec QuickCheck text ];
       homepage = "https://github.com/olorin/haskell-nagios-check";
       description = "Package for writing monitoring plugins";
       license = stdenv.lib.licenses.mit;
     }) {};
  "names-th" = callPackage
    ({ mkDerivation, base, containers, template-haskell }:
     mkDerivation {
       pname = "names-th";
       version = "0.2.0.2";
       sha256 = "09mzb4ff45kn6gbbf40jvpk0pgnwlyyw7i3ncmmybx6i4mypv048";
       libraryHaskellDepends = [ base containers template-haskell ];
       homepage = "http://khibino.github.io/haskell-relational-record/";
       description = "Manipulate name strings for TH";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "nano-erl" = callPackage
    ({ mkDerivation, base, stm }:
     mkDerivation {
       pname = "nano-erl";
       version = "0.1.0.1";
       sha256 = "04pfk3a9m6fgspyk2vriixldsx2y9p2jcwzfjfvpgjiq5dl602ip";
       libraryHaskellDepends = [ base stm ];
       description = "Small library for Erlang-style actor semantics";
       license = stdenv.lib.licenses.mit;
     }) {};
  "nanospec" = callPackage
    ({ mkDerivation, base, hspec, silently }:
     mkDerivation {
       pname = "nanospec";
       version = "0.2.1";
       sha256 = "0jq2l1lmy4hcl6r975xcg86xr1y7jfxr3qn27ibsmjbzlnxdkjyv";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base hspec silently ];
       description = "A lightweight implementation of a subset of Hspec's API";
       license = stdenv.lib.licenses.mit;
     }) {};
  "nationstates" = callPackage
    ({ mkDerivation, base, bytestring, clock, containers, http-client
     , http-client-tls, http-types, multiset, tls, transformers, xml
     }:
     mkDerivation {
       pname = "nationstates";
       version = "0.5.0.0";
       sha256 = "14jnyzbjfvs0kcpdm5nwb9s4bnwqwc10q6484k77gbhn3gfgq3h2";
       libraryHaskellDepends = [
         base bytestring clock containers http-client http-client-tls
         http-types multiset tls transformers xml
       ];
       homepage = "https://github.com/lfairy/nationstates";
       description = "NationStates API client";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "nats" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "nats";
       version = "1.1.1";
       sha256 = "1kfl2yy97nb7q0j17v96rl73xvi3z4db9bk0xychc76dax41n78k";
       doHaddock = false;
       homepage = "http://github.com/ekmett/nats/";
       description = "Natural numbers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "natural-sort" = callPackage
    ({ mkDerivation, base, bytestring, parsec, text }:
     mkDerivation {
       pname = "natural-sort";
       version = "0.1.2";
       sha256 = "0l3bkbqzrlpdhzazqqlx71ah0m13ypa0981qvw3sn9q8d0sbfwkv";
       libraryHaskellDepends = [ base bytestring parsec text ];
       homepage = "https://john-millikin.com/software/natural-sort/";
       description = "User-friendly text collation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "natural-transformation" = callPackage
    ({ mkDerivation, base, containers, quickcheck-instances, tasty
     , tasty-quickcheck
     }:
     mkDerivation {
       pname = "natural-transformation";
       version = "0.3.1";
       sha256 = "00lps0m6ysdz36sd5cz8fjl3r1p2k1qdqiwd543kiwwhhzqkjnlv";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [
         base containers quickcheck-instances tasty tasty-quickcheck
       ];
       homepage = "https://github.com/ku-fpg/natural-transformation";
       description = "A natural transformation package";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ndjson-conduit" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, bytestring, conduit }:
     mkDerivation {
       pname = "ndjson-conduit";
       version = "0.1.0.5";
       sha256 = "1ccxliyy0flpby9jix2n8jy1i4jgiap42maqhh9ny53vqkvvhdy0";
       libraryHaskellDepends = [
         aeson attoparsec base bytestring conduit
       ];
       homepage = "https://github.com/srijs/haskell-ndjson-conduit";
       description = "Conduit-based parsing and serialization for newline delimited JSON";
       license = stdenv.lib.licenses.mit;
     }) {};
  "neat-interpolation" = callPackage
    ({ mkDerivation, base, base-prelude, HTF, parsec, template-haskell
     , text
     }:
     mkDerivation {
       pname = "neat-interpolation";
       version = "0.3.2.1";
       sha256 = "0550dy0vwh81byi9bxhdzqx5y9lnvkwj5rbks5rbj2fylhyf8c2m";
       libraryHaskellDepends = [
         base base-prelude parsec template-haskell text
       ];
       testHaskellDepends = [ base-prelude HTF ];
       homepage = "https://github.com/nikita-volkov/neat-interpolation";
       description = "A quasiquoter for neat and simple multiline text interpolation";
       license = stdenv.lib.licenses.mit;
     }) {};
  "netpbm" = callPackage
    ({ mkDerivation, attoparsec, attoparsec-binary, base, bytestring
     , criterion, hspec, HUnit, storable-record, unordered-containers
     , vector, vector-th-unbox
     }:
     mkDerivation {
       pname = "netpbm";
       version = "1.0.2";
       sha256 = "1my2zi26wspzh0pplfhgwj9vmkv41hwvrzl8k1virqsbm6y08sl4";
       revision = "1";
       editedCabalFile = "1vhwjv5c5gxn9l9982da54nzczbmj8rl09xn8ac7rix0zmmyvl50";
       libraryHaskellDepends = [
         attoparsec attoparsec-binary base bytestring storable-record
         unordered-containers vector vector-th-unbox
       ];
       testHaskellDepends = [ base bytestring hspec HUnit vector ];
       benchmarkHaskellDepends = [ base bytestring criterion ];
       homepage = "https://github.com/nh2/haskell-netpbm";
       description = "Loading PBM, PGM, PPM image files";
       license = stdenv.lib.licenses.mit;
     }) {};
  "nettle" = callPackage
    ({ mkDerivation, array, base, byteable, bytestring
     , crypto-cipher-tests, crypto-cipher-types, HUnit, nettle
     , QuickCheck, securemem, tagged, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "nettle";
       version = "0.2.0";
       sha256 = "1plv9r86ljgjvvb8ny8zayrcdrmy7cd8jfvq4vp56b407dqq8092";
       libraryHaskellDepends = [
         base byteable bytestring crypto-cipher-types securemem tagged
       ];
       libraryPkgconfigDepends = [ nettle ];
       testHaskellDepends = [
         array base bytestring crypto-cipher-tests crypto-cipher-types HUnit
         QuickCheck tagged test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       doCheck = false;
       homepage = "https://github.com/stbuehler/haskell-nettle";
       description = "safe nettle binding";
       license = stdenv.lib.licenses.mit;
     }) {inherit (pkgs) nettle;};
  "network" = callPackage
    ({ mkDerivation, base, bytestring, doctest, HUnit, test-framework
     , test-framework-hunit, unix
     }:
     mkDerivation {
       pname = "network";
       version = "2.6.3.1";
       sha256 = "1rl2gl37cf4k0ddsq93q15fwdz1l25nhl4w205krbh7d5dg5y12p";
       libraryHaskellDepends = [ base bytestring unix ];
       testHaskellDepends = [
         base bytestring doctest HUnit test-framework test-framework-hunit
       ];
       doCheck = false;
       homepage = "https://github.com/haskell/network";
       description = "Low-level networking interface";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "network-anonymous-i2p" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, exceptions, hspec
     , hspec-attoparsec, hspec-expectations, mtl, network
     , network-attoparsec, network-simple, text, transformers, uuid
     }:
     mkDerivation {
       pname = "network-anonymous-i2p";
       version = "0.10.0";
       sha256 = "0b7z7w105l1yd3xpnnl2z779m5zknf756cslksbbpsy16rn7kxfg";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         attoparsec base bytestring exceptions mtl network
         network-attoparsec network-simple text transformers uuid
       ];
       testHaskellDepends = [
         attoparsec base bytestring exceptions hspec hspec-attoparsec
         hspec-expectations mtl network network-simple transformers uuid
       ];
       doCheck = false;
       homepage = "http://github.com/solatis/haskell-network-anonymous-i2p";
       description = "Haskell API for I2P anonymous networking";
       license = stdenv.lib.licenses.mit;
     }) {};
  "network-anonymous-tor" = callPackage
    ({ mkDerivation, attoparsec, base, base32string, bytestring
     , exceptions, hexstring, hspec, hspec-attoparsec
     , hspec-expectations, network, network-attoparsec, network-simple
     , socks, splice, text, transformers
     }:
     mkDerivation {
       pname = "network-anonymous-tor";
       version = "0.11.0";
       sha256 = "0jbm29795dznmrdkvl95v9xhj8pcmwgsdk2ngaj6zv5a9arybbj1";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         attoparsec base base32string bytestring exceptions hexstring
         network network-attoparsec network-simple socks text transformers
       ];
       executableHaskellDepends = [
         base exceptions network network-simple splice
       ];
       testHaskellDepends = [
         attoparsec base base32string bytestring exceptions hspec
         hspec-attoparsec hspec-expectations network network-simple socks
         text transformers
       ];
       homepage = "http://www.leonmergen.com/opensource.html";
       description = "Haskell API for Tor anonymous networking";
       license = stdenv.lib.licenses.mit;
     }) {};
  "network-attoparsec" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, enclosed-exceptions
     , exceptions, hspec, lifted-base, monad-control, mtl, network
     , network-simple, transformers
     }:
     mkDerivation {
       pname = "network-attoparsec";
       version = "0.12.2";
       sha256 = "1w08py367mmwfg5lff6y9s6hdpg1nbjf7v6vv9s19aw6saxak44p";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         attoparsec base bytestring enclosed-exceptions exceptions
         lifted-base monad-control mtl network transformers
       ];
       testHaskellDepends = [
         attoparsec base bytestring exceptions hspec mtl network
         network-simple transformers
       ];
       homepage = "http://github.com/solatis/haskell-network-attoparsec";
       description = "Utility functions for running a parser against a socket";
       license = stdenv.lib.licenses.mit;
     }) {};
  "network-conduit-tls" = callPackage
    ({ mkDerivation, base, bytestring, conduit, conduit-extra
     , connection, cprng-aes, data-default, HUnit, monad-control, mtl
     , network, streaming-commons, tls, transformers, transformers-base
     }:
     mkDerivation {
       pname = "network-conduit-tls";
       version = "1.2.2";
       sha256 = "11xh5g0c7arf6d0klilacajf2mg24pb47wbzwn2hb7fimkgwv8hj";
       libraryHaskellDepends = [
         base bytestring conduit conduit-extra connection cprng-aes
         data-default monad-control network streaming-commons tls
         transformers transformers-base
       ];
       testHaskellDepends = [
         base bytestring conduit conduit-extra connection HUnit mtl
       ];
       homepage = "https://github.com/snoyberg/conduit";
       description = "Create TLS-aware network code with conduits";
       license = stdenv.lib.licenses.mit;
     }) {};
  "network-house" = callPackage
    ({ mkDerivation, array, base, containers, mtl }:
     mkDerivation {
       pname = "network-house";
       version = "0.1.0.2";
       sha256 = "0hxbzzdjrxnx9pknsbma7iyfr3pxrsff5n9mhbkpaqaizhibq7q7";
       libraryHaskellDepends = [ array base containers mtl ];
       homepage = "https://github.com/nh2/network-house";
       description = "data and parsers for Ethernet, TCP, UDP, IPv4, IPv6, ICMP, DHCP, TFTP";
       license = stdenv.lib.licenses.gpl2;
     }) {};
  "network-info" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "network-info";
       version = "0.2.0.8";
       sha256 = "0xndvg776241fgjmynxfpy81f1csjmh8dg33yf0c8m71ychz3pzc";
       libraryHaskellDepends = [ base ];
       homepage = "http://github.com/jystic/network-info";
       description = "Access the local computer's basic network configuration";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "network-simple" = callPackage
    ({ mkDerivation, base, bytestring, exceptions, network
     , transformers
     }:
     mkDerivation {
       pname = "network-simple";
       version = "0.4.0.5";
       sha256 = "1akarns88nhrkm47nl20mg2s2r8in339j2jcv6h0z3gnxc4v8iq9";
       libraryHaskellDepends = [
         base bytestring exceptions network transformers
       ];
       homepage = "https://github.com/k0001/network-simple";
       description = "Simple network sockets usage patterns";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "network-transport" = callPackage
    ({ mkDerivation, base, binary, bytestring, deepseq, hashable
     , transformers
     }:
     mkDerivation {
       pname = "network-transport";
       version = "0.4.4.0";
       sha256 = "1n3ywsmbcsh35h5dcyxr50nfgxh5qq6i9wgskn9dc79vpjdvq4cf";
       revision = "1";
       editedCabalFile = "1gq1qnx3n59kci6imk2rf1dahvsq9ifsnb50fh98h9b7yhczj4ag";
       libraryHaskellDepends = [
         base binary bytestring deepseq hashable transformers
       ];
       homepage = "http://haskell-distributed.github.com";
       description = "Network abstraction layer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "network-transport-composed" = callPackage
    ({ mkDerivation, base, bytestring, network-transport }:
     mkDerivation {
       pname = "network-transport-composed";
       version = "0.2.0.1";
       sha256 = "0kvj85yx7mvj1rjgv90cb9sfm9f4dqi8mahcp2bqxsn2w4n9wpwn";
       revision = "1";
       editedCabalFile = "1fwn9wix1k2kccs1dqp4z2ym98bskdkhjff9in7d6myaz93f23gw";
       libraryHaskellDepends = [ base bytestring network-transport ];
       homepage = "http://haskell-distributed.github.com";
       description = "Compose network transports";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "network-transport-inmemory" = callPackage
    ({ mkDerivation, base, bytestring, containers, data-accessor
     , network-transport, network-transport-tests, stm
     }:
     mkDerivation {
       pname = "network-transport-inmemory";
       version = "0.5.2";
       sha256 = "0kpgx6r60cczr178ras5ia9xiihrs5a9hnfyv45djmq16faxfic2";
       libraryHaskellDepends = [
         base bytestring containers data-accessor network-transport stm
       ];
       testHaskellDepends = [
         base network-transport network-transport-tests
       ];
       homepage = "http://haskell-distributed.github.com";
       description = "In-memory instantiation of Network.Transport";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "network-transport-tcp" = callPackage
    ({ mkDerivation, base, bytestring, containers, data-accessor
     , network, network-transport, network-transport-tests
     }:
     mkDerivation {
       pname = "network-transport-tcp";
       version = "0.5.1";
       sha256 = "1svvxkxknlzdgc4xcr7lvq1xvy8ki3mwysfkk6y3w8gq11yxdhy4";
       libraryHaskellDepends = [
         base bytestring containers data-accessor network network-transport
       ];
       testHaskellDepends = [
         base network network-transport network-transport-tests
       ];
       homepage = "http://haskell-distributed.github.com";
       description = "TCP instantiation of Network.Transport";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "network-transport-tests" = callPackage
    ({ mkDerivation, ansi-terminal, base, bytestring, containers, mtl
     , network-transport, random
     }:
     mkDerivation {
       pname = "network-transport-tests";
       version = "0.2.3.0";
       sha256 = "0v1vyn0v41kzw54qy2f46phwglyh0qsng534ma8rhwbxxfbvsxw2";
       libraryHaskellDepends = [
         ansi-terminal base bytestring containers mtl network-transport
         random
       ];
       homepage = "http://haskell-distributed.github.com";
       description = "Unit tests for Network.Transport implementations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "network-uri" = callPackage
    ({ mkDerivation, base, deepseq, HUnit, parsec, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "network-uri";
       version = "2.6.1.0";
       sha256 = "1w27zkvn39kjr9lmw9421y8w43h572ycsfafsb7kyvr3a4ihlgj2";
       libraryHaskellDepends = [ base deepseq parsec ];
       testHaskellDepends = [
         base HUnit test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       homepage = "https://github.com/haskell/network-uri";
       description = "URI manipulation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "network-uri-flag" = callPackage
    ({ mkDerivation, network, network-uri }:
     mkDerivation {
       pname = "network-uri-flag";
       version = "0.1";
       sha256 = "0qmn1dj2frz1f8k9pnyqrsr8rn3gfy1ywhw6gcnyzgvfp36k7a25";
       revision = "2";
       editedCabalFile = "1va2q0j8nlmpg1x31ivgxaihzrj3lck153nkxp8q75p2zx0xyp5k";
       libraryHaskellDepends = [ network network-uri ];
       doHaddock = false;
       description = "Pseudo-package encapsulating flag(network-uri) Cabal boilerplate";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "newtype" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "newtype";
       version = "0.2";
       sha256 = "0ng4i5r73256gzwl6bw57h0abqixj783c3ggph1hk2wsplx0655p";
       libraryHaskellDepends = [ base ];
       description = "A typeclass and set of functions for working with newtypes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "nicify-lib" = callPackage
    ({ mkDerivation, base, parsec, transformers }:
     mkDerivation {
       pname = "nicify-lib";
       version = "1.0.1";
       sha256 = "0cp76s0msf1i8a7pkzjl6qgi18n7zdya3pg90ml1dnidg5nzh9kx";
       libraryHaskellDepends = [ base parsec transformers ];
       description = "Pretty print the standard output of default `Show` instances";
       license = stdenv.lib.licenses.mit;
     }) {};
  "nix-paths" = callPackage
    ({ mkDerivation, base, process }:
     mkDerivation {
       pname = "nix-paths";
       version = "1.0.0.1";
       sha256 = "05gkx79p532zciqjrsq16231pmzb5rixxip9j0vdc85a5h2a4bbl";
       revision = "1";
       editedCabalFile = "17l6x5azdiklwmiwkk05zxg50gqgdq9n5a1nyfywy05b6h7m33il";
       configureFlags = [ "-fallow-relative-paths" ];
       libraryHaskellDepends = [ base process ];
       homepage = "https://github.com/peti/nix-paths";
       description = "Knowledge of Nix's installation directories";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "non-empty-sequence" = callPackage
    ({ mkDerivation, base, containers, semigroups }:
     mkDerivation {
       pname = "non-empty-sequence";
       version = "0.2.0.2";
       sha256 = "1qfidlv190wxrrp67h7rcrlczwfv7r0mdbwm31rrf08l1i6618yr";
       libraryHaskellDepends = [ base containers semigroups ];
       homepage = "http://www.github.com/massysett/non-empty-sequence";
       description = "Non-empty sequence";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "nonce" = callPackage
    ({ mkDerivation, base, base64-bytestring, bytestring, cprng-aes
     , crypto-random, text, transformers
     }:
     mkDerivation {
       pname = "nonce";
       version = "1.0.2";
       sha256 = "1l4w6bdrwa42r90n6xzwr8lz2fdrn3m763ls311pnygajr4ih10h";
       revision = "1";
       editedCabalFile = "012hkf9hlvwmlbf1n1v05vgidssxv99z4bq2lbpbf1dlb366madj";
       libraryHaskellDepends = [
         base base64-bytestring bytestring cprng-aes crypto-random text
         transformers
       ];
       homepage = "https://github.com/prowdsponsor/nonce";
       description = "Generate cryptographic nonces";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "nsis" = callPackage
    ({ mkDerivation, base, directory, process, transformers, uniplate
     }:
     mkDerivation {
       pname = "nsis";
       version = "0.3";
       sha256 = "0w7mip0dxpzdfdxj8gdk58zfz5n4aasd60ql546hx3yv5r65dbq3";
       libraryHaskellDepends = [ base transformers uniplate ];
       testHaskellDepends = [
         base directory process transformers uniplate
       ];
       doCheck = false;
       homepage = "https://github.com/ndmitchell/nsis#readme";
       description = "DSL for producing Windows Installer using NSIS";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "numbers" = callPackage
    ({ mkDerivation, base, QuickCheck, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "numbers";
       version = "3000.2.0.1";
       sha256 = "10z1bi5qbc81z5xx2v1ylwcpmcfl1ci7lxrswkgi0dd1wi8havbk";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [
         base QuickCheck test-framework test-framework-quickcheck2
       ];
       homepage = "https://github.com/jwiegley/numbers#readme";
       description = "Various number types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "numeric-extras" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "numeric-extras";
       version = "0.1";
       sha256 = "1mk11c0gz1yjy5b8dvq6czfny57pln0bs7x28fz38qyr44872067";
       libraryHaskellDepends = [ base ];
       homepage = "http://github.com/ekmett/numeric-extras";
       description = "Useful tools from the C standard library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "numtype-dk" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "numtype-dk";
       version = "0.5.0.1";
       sha256 = "05yhjnp8wa25chsf0v2nmd9wznm4n4qxw12qc2a9z64kfszvknr9";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/bjornbm/numtype-dk";
       description = "Type-level integers, using TypeNats, Data Kinds, and Closed Type Families";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "objective" = callPackage
    ({ mkDerivation, base, containers, either, exceptions, free
     , hashable, monad-skeleton, mtl, profunctors, template-haskell
     , transformers, transformers-compat, unordered-containers, void
     , witherable
     }:
     mkDerivation {
       pname = "objective";
       version = "1.1.1";
       sha256 = "0d36v2w8f9g68zh2cdf8hnkzdafv0z6np895ak610n8bkxvqxlbs";
       libraryHaskellDepends = [
         base containers either exceptions free hashable monad-skeleton mtl
         profunctors template-haskell transformers transformers-compat
         unordered-containers void witherable
       ];
       homepage = "https://github.com/fumieval/objective";
       description = "Composable objects";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "octane" = callPackage
    ({ mkDerivation, aeson, base, bimap, binary, binary-bits
     , bytestring, containers, criterion, data-binary-ieee754
     , data-default-class, deepseq, file-embed, http-client
     , http-client-tls, overloaded-records, regex-compat, tasty
     , tasty-hspec, tasty-quickcheck, text, unordered-containers, vector
     }:
     mkDerivation {
       pname = "octane";
       version = "0.16.3";
       sha256 = "1zlibp0dxap4pxlh6jxfrd1gpvc4vvml4xbya1frk469pswswbz6";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base bimap binary binary-bits bytestring containers
         data-binary-ieee754 data-default-class deepseq file-embed
         overloaded-records regex-compat text unordered-containers vector
       ];
       executableHaskellDepends = [
         aeson base binary bytestring http-client http-client-tls
       ];
       testHaskellDepends = [
         base binary binary-bits bytestring containers tasty tasty-hspec
         tasty-quickcheck text
       ];
       benchmarkHaskellDepends = [ base criterion ];
       homepage = "https://github.com/tfausak/octane#readme";
       description = "Parse Rocket League replays";
       license = stdenv.lib.licenses.mit;
     }) {};
  "oeis" = callPackage
    ({ mkDerivation, base, HTTP, HUnit, network, network-uri
     , test-framework, test-framework-hunit
     }:
     mkDerivation {
       pname = "oeis";
       version = "0.3.8";
       sha256 = "14wwwg9pvsa5jsyi99iqgc8rys24l2si1n7qaqgaaib0b602zrsb";
       libraryHaskellDepends = [ base HTTP network network-uri ];
       testHaskellDepends = [
         base HUnit test-framework test-framework-hunit
       ];
       description = "Interface to the Online Encyclopedia of Integer Sequences (OEIS)";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ofx" = callPackage
    ({ mkDerivation, base, parsec, pretty, time }:
     mkDerivation {
       pname = "ofx";
       version = "0.4.2.0";
       sha256 = "1wcmrlf27s6iyyndzhyyrf9dzyjia0ii8s365y1h75h9kwkf48hf";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base parsec pretty time ];
       executableHaskellDepends = [ base parsec pretty time ];
       homepage = "http://www.github.com/massysett/ofx";
       description = "Parser for OFX data";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "old-locale" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "old-locale";
       version = "1.0.0.7";
       sha256 = "0l3viphiszvz5wqzg7a45zp40grwlab941q5ay29iyw8p3v8pbyv";
       revision = "1";
       editedCabalFile = "1svcda2sb19k4n8h47yims3a4cri1fqnh7h5ra13r1mzjl27qz7q";
       libraryHaskellDepends = [ base ];
       description = "locale library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "old-time" = callPackage
    ({ mkDerivation, base, old-locale }:
     mkDerivation {
       pname = "old-time";
       version = "1.1.0.3";
       sha256 = "1h9b26s3kfh2k0ih4383w90ibji6n0iwamxp6rfp2lbq1y5ibjqw";
       revision = "1";
       editedCabalFile = "0vkrmzpbyi7kymgpayraqsgx760l5gr9bkkjg6dqg3nk4gfid861";
       libraryHaskellDepends = [ base old-locale ];
       description = "Time library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "omnifmt" = callPackage
    ({ mkDerivation, aeson, base, exceptions, extra, fast-logger
     , filepath, monad-logger, monad-parallel, mtl, optparse-applicative
     , pipes, pipes-concurrency, temporary, text, time
     , unordered-containers, yaml
     }:
     mkDerivation {
       pname = "omnifmt";
       version = "0.2.1.1";
       sha256 = "0c8p6j434ik6g3n2gxc6mhnkk1crp7m7nfgsfapa4ki3h28phr0r";
       revision = "1";
       editedCabalFile = "1yj2pbdyhj2qavx5aarcj6ncj1pkf7rs3cqm7k163rqyna811xji";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base exceptions extra filepath monad-logger mtl pipes text
         unordered-containers yaml
       ];
       executableHaskellDepends = [
         base exceptions extra fast-logger filepath monad-logger
         monad-parallel mtl optparse-applicative pipes pipes-concurrency
         temporary text time
       ];
       homepage = "https://github.com/hjwylde/omnifmt";
       description = "A pretty-printer wrapper to faciliate ease of formatting during development";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "once" = callPackage
    ({ mkDerivation, base, containers, hashable, template-haskell
     , unordered-containers
     }:
     mkDerivation {
       pname = "once";
       version = "0.2";
       sha256 = "1a2833v9mvjjh0m87qc5aj0n5yb8wzg5mrxhlh4g7hgsl4lccgkm";
       libraryHaskellDepends = [
         base containers hashable template-haskell unordered-containers
       ];
       homepage = "https://anonscm.debian.org/cgit/users/kaction-guest/haskell-once.git";
       description = "memoization for IO actions and functions";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "oo-prototypes" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "oo-prototypes";
       version = "0.1.0.0";
       sha256 = "0xpm2adf47clhzpwd833w706mc5xfxwr2wp4aywigy11687f9bly";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/yi-editor/oo-prototypes";
       description = "Support for OO-like prototypes";
       license = stdenv.lib.licenses.gpl2;
     }) {};
  "opaleye" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, base16-bytestring
     , bytestring, case-insensitive, containers, contravariant, multiset
     , postgresql-simple, pretty, product-profunctors, profunctors
     , QuickCheck, semigroups, text, time, time-locale-compat
     , transformers, uuid, void
     }:
     mkDerivation {
       pname = "opaleye";
       version = "0.5.2.2";
       sha256 = "00niscyp0xnk0v7iyx3rslap5vgrwig2k9gh941l56nm2i9md7p0";
       libraryHaskellDepends = [
         aeson attoparsec base base16-bytestring bytestring case-insensitive
         contravariant postgresql-simple pretty product-profunctors
         profunctors semigroups text time time-locale-compat transformers
         uuid void
       ];
       testHaskellDepends = [
         aeson base containers contravariant multiset postgresql-simple
         product-profunctors profunctors QuickCheck semigroups text time
       ];
       doCheck = false;
       homepage = "https://github.com/tomjaguarpaw/haskell-opaleye";
       description = "An SQL-generating DSL targeting PostgreSQL";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "opaleye-trans" = callPackage
    ({ mkDerivation, base, mtl, opaleye, postgresql-simple
     , product-profunctors, transformers, transformers-base
     }:
     mkDerivation {
       pname = "opaleye-trans";
       version = "0.3.3";
       sha256 = "0hfqpxycg64fm33yjj06hjszyb3gws5s3jy6gsmsh8992py0bykv";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base mtl opaleye postgresql-simple product-profunctors transformers
         transformers-base
       ];
       executableHaskellDepends = [
         base opaleye postgresql-simple product-profunctors
       ];
       homepage = "https://github.com/WraithM/opaleye-trans";
       description = "A monad transformer for Opaleye";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "open-browser" = callPackage
    ({ mkDerivation, base, process }:
     mkDerivation {
       pname = "open-browser";
       version = "0.2.1.0";
       sha256 = "0rna8ir2cfp8gk0rd2q60an51jxc08lx4gl0liw8wwqgh1ijxv8b";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base process ];
       executableHaskellDepends = [ base ];
       homepage = "https://github.com/rightfold/open-browser";
       description = "Open a web browser from Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "openpgp-asciiarmor" = callPackage
    ({ mkDerivation, attoparsec, base, base64-bytestring, bytestring
     , cereal, HUnit, test-framework, test-framework-hunit
     }:
     mkDerivation {
       pname = "openpgp-asciiarmor";
       version = "0.1";
       sha256 = "1xrv0n7n1n8izvxvqm8wmj6mkn5l6wcq18bxs9zd1q5riynmmm2w";
       libraryHaskellDepends = [
         attoparsec base base64-bytestring bytestring cereal
       ];
       testHaskellDepends = [
         attoparsec base base64-bytestring bytestring cereal HUnit
         test-framework test-framework-hunit
       ];
       homepage = "http://floss.scru.org/openpgp-asciiarmor";
       description = "OpenPGP (RFC4880) ASCII Armor codec";
       license = "unknown";
     }) {};
  "opensource" = callPackage
    ({ mkDerivation, aeson, base, bytestring, http-client
     , http-client-tls, tasty, tasty-hunit, text, transformers
     }:
     mkDerivation {
       pname = "opensource";
       version = "0.1.0.0";
       sha256 = "09q1c9v27b7d482ccgv73fhvhk3jfq2fvxnrz6ywi3zvf37bcn9l";
       revision = "1";
       editedCabalFile = "02zb9m7d6fsjbqgwbjnkrpgqc93zm34bvzgasw903hhdkskshrp6";
       libraryHaskellDepends = [
         aeson base http-client http-client-tls text transformers
       ];
       testHaskellDepends = [
         aeson base bytestring http-client http-client-tls tasty tasty-hunit
         text transformers
       ];
       homepage = "https://api.opensource.org/";
       description = "Haskell API Wrapper for the Open Source License API";
       license = stdenv.lib.licenses.mit;
     }) {};
  "openssl-streams" = callPackage
    ({ mkDerivation, base, bytestring, HsOpenSSL, HUnit, io-streams
     , network, test-framework, test-framework-hunit
     }:
     mkDerivation {
       pname = "openssl-streams";
       version = "1.2.1.0";
       sha256 = "1jqrc9wxvw196vgcbhpazi9vldqs31jb6jxc529iy9k7vh4mk5m9";
       libraryHaskellDepends = [
         base bytestring HsOpenSSL io-streams network
       ];
       testHaskellDepends = [
         base bytestring HsOpenSSL HUnit io-streams network test-framework
         test-framework-hunit
       ];
       description = "OpenSSL network support for io-streams";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "operational" = callPackage
    ({ mkDerivation, base, mtl, random }:
     mkDerivation {
       pname = "operational";
       version = "0.2.3.5";
       sha256 = "1x2abg2q9d26h1vzj40r6k7k3gqgappbs4g9d853vvg77837km4i";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base mtl ];
       executableHaskellDepends = [ base mtl random ];
       homepage = "http://wiki.haskell.org/Operational";
       description = "Implementation of difficult monads made easy with operational semantics";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "operational-class" = callPackage
    ({ mkDerivation, base, operational, transformers }:
     mkDerivation {
       pname = "operational-class";
       version = "0.3.0.0";
       sha256 = "02z766b5a6fa7dgmw3qa1xryijf2im9n79gnjq0m5pd2hv5vja4b";
       libraryHaskellDepends = [ base operational transformers ];
       homepage = "https://github.com/srijs/haskell-operational-class";
       description = "MonadProgram typeclass for the operational package";
       license = stdenv.lib.licenses.mit;
     }) {};
  "opml-conduit" = callPackage
    ({ mkDerivation, base, bytestring, case-insensitive, conduit
     , conduit-combinators, conduit-parse, containers, data-default
     , exceptions, foldl, hlint, lens-simple, mono-traversable
     , monoid-subclasses, mtl, parsers, QuickCheck, quickcheck-instances
     , resourcet, semigroups, tasty, tasty-hunit, tasty-quickcheck, text
     , time, timerep, uri-bytestring, xml-conduit, xml-conduit-parse
     , xml-types
     }:
     mkDerivation {
       pname = "opml-conduit";
       version = "0.5.0.1";
       sha256 = "0cr5ibyxiybv4lzk8ph3bq5phalq0vgfk4zrvi2rqfhgm9q25hk9";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base case-insensitive conduit conduit-parse containers exceptions
         foldl lens-simple mono-traversable monoid-subclasses parsers
         semigroups text time timerep uri-bytestring xml-conduit
         xml-conduit-parse xml-types
       ];
       testHaskellDepends = [
         base bytestring conduit conduit-combinators conduit-parse
         containers data-default exceptions hlint lens-simple
         mono-traversable mtl parsers QuickCheck quickcheck-instances
         resourcet semigroups tasty tasty-hunit tasty-quickcheck text time
         uri-bytestring xml-conduit-parse
       ];
       homepage = "https://github.com/k0ral/opml-conduit";
       description = "Streaming parser/renderer for the OPML 2.0 format.";
       license = "unknown";
     }) {};
  "optional-args" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "optional-args";
       version = "1.0.1";
       sha256 = "16gxy78r868k8hc88hayclhdkn8chyry08fbf99ipyy1xgb081ll";
       libraryHaskellDepends = [ base ];
       description = "Optional function arguments";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "options" = callPackage
    ({ mkDerivation, base, chell, chell-quickcheck, containers
     , monads-tf, transformers
     }:
     mkDerivation {
       pname = "options";
       version = "1.2.1.1";
       sha256 = "0qjs0v1ny52w51n5582d4z8wy9h6n0zw1xb5dh686ff5wadflgi8";
       libraryHaskellDepends = [ base containers monads-tf transformers ];
       testHaskellDepends = [
         base chell chell-quickcheck containers monads-tf transformers
       ];
       doCheck = false;
       homepage = "https://john-millikin.com/software/haskell-options/";
       description = "A powerful and easy-to-use command-line option parser";
       license = stdenv.lib.licenses.mit;
     }) {};
  "optparse-applicative" = callPackage
    ({ mkDerivation, ansi-wl-pprint, base, process, transformers
     , transformers-compat
     }:
     mkDerivation {
       pname = "optparse-applicative";
       version = "0.12.1.0";
       sha256 = "1m8k4c04sg8xsx3fkv3krrfpjmphj01rhkpq0axl3s8p5innvd0q";
       libraryHaskellDepends = [
         ansi-wl-pprint base process transformers transformers-compat
       ];
       homepage = "https://github.com/pcapriotti/optparse-applicative";
       description = "Utilities and combinators for parsing command line options";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "optparse-generic" = callPackage
    ({ mkDerivation, base, bytestring, optparse-applicative
     , system-filepath, text, time, transformers, void
     }:
     mkDerivation {
       pname = "optparse-generic";
       version = "1.1.1";
       sha256 = "04f655wy0a8jrahya2r8v8hgy7p0f4kl1vb9rnffwaidinhqz4q2";
       libraryHaskellDepends = [
         base bytestring optparse-applicative system-filepath text time
         transformers void
       ];
       description = "Auto-generate a command-line parser for your datatype";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "optparse-helper" = callPackage
    ({ mkDerivation, base, optparse-applicative }:
     mkDerivation {
       pname = "optparse-helper";
       version = "0.2.1.1";
       sha256 = "043mdm25lpzbfghmda0iayv7lnff1gni9g29pd5h2ssgscyvs2qa";
       libraryHaskellDepends = [ base optparse-applicative ];
       homepage = "https://github.com/pharpend/optparse-helper";
       description = "Helper functions for optparse-applicative";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "optparse-simple" = callPackage
    ({ mkDerivation, base, either, gitrev, optparse-applicative
     , template-haskell, transformers
     }:
     mkDerivation {
       pname = "optparse-simple";
       version = "0.0.3";
       sha256 = "0zlcvxhx98k1akbv5fzsvwcrmb1rxsmmyaiwkhfrp5dxq6kg0is5";
       libraryHaskellDepends = [
         base either gitrev optparse-applicative template-haskell
         transformers
       ];
       description = "Simple interface to optparse-applicative";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "optparse-text" = callPackage
    ({ mkDerivation, base, hspec, optparse-applicative, text }:
     mkDerivation {
       pname = "optparse-text";
       version = "0.1.1.0";
       sha256 = "1vw410q7vayfgfbrxpigkpnwm8x1lcdxkh959w9f82l8xkn83h7n";
       libraryHaskellDepends = [ base optparse-applicative text ];
       testHaskellDepends = [ base hspec optparse-applicative text ];
       homepage = "https://github.com/passy/optparse-text#readme";
       description = "Data.Text helpers for optparse-applicative";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "osdkeys" = callPackage
    ({ mkDerivation, base, bytestring, conduit, conduit-extra
     , containers, libnotify, process, resourcet, time, transformers
     }:
     mkDerivation {
       pname = "osdkeys";
       version = "0.0";
       sha256 = "18pc2r5acb3b6dr7niib4fn8x2la6y3f5zlj3ibrxhl5c1q35j6y";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring conduit conduit-extra containers libnotify
         resourcet time transformers
       ];
       executableHaskellDepends = [ base process ];
       description = "Show keys pressed with an on-screen display (Linux only)";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "overloaded-records" = callPackage
    ({ mkDerivation, base, data-default-class, HUnit, template-haskell
     , test-framework, test-framework-hunit
     }:
     mkDerivation {
       pname = "overloaded-records";
       version = "0.4.2.0";
       sha256 = "15ijx0mbgxlwardr39dsya21hidfwwgsd374s6kasg2imhzv9cc6";
       revision = "1";
       editedCabalFile = "01bn5jqfkffcl4xdvw7hbarv0pvwgdrjcfvm4gqaz7ia7cwcpynr";
       libraryHaskellDepends = [
         base data-default-class template-haskell
       ];
       testHaskellDepends = [
         base data-default-class HUnit template-haskell test-framework
         test-framework-hunit
       ];
       homepage = "https://github.com/trskop/overloaded-records";
       description = "Overloaded Records based on current GHC proposal";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "package-description-remote" = callPackage
    ({ mkDerivation, base, bytestring, Cabal, lens, lens-aeson, wreq }:
     mkDerivation {
       pname = "package-description-remote";
       version = "0.2.0.0";
       sha256 = "0i47yvjcfc6fyxvz39bambvfsnpix5r25cbm12b4sp968qinv4sa";
       libraryHaskellDepends = [
         base bytestring Cabal lens lens-aeson wreq
       ];
       testHaskellDepends = [ base ];
       homepage = "http://github.com/yamadapc/stack-run-auto/package-description-remote";
       description = "Fetches a 'GenericPackageDescription' from Hackage";
       license = stdenv.lib.licenses.mit;
     }) {};
  "packdeps" = callPackage
    ({ mkDerivation, base, bytestring, Cabal, containers, directory
     , filepath, split, tar, text, time
     }:
     mkDerivation {
       pname = "packdeps";
       version = "0.4.3";
       sha256 = "0sqiy737czdv8n1mr6xx6rgpb5li9im0n1zl5v6pz38mp5mbvm58";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring Cabal containers directory filepath split tar text
         time
       ];
       executableHaskellDepends = [ base Cabal ];
       homepage = "http://packdeps.haskellers.com/";
       description = "Check your cabal packages for lagging dependencies";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pager" = callPackage
    ({ mkDerivation, base, bytestring, conduit, conduit-extra
     , directory, process, resourcet, safe, terminfo, text, transformers
     , unix
     }:
     mkDerivation {
       pname = "pager";
       version = "0.1.1.0";
       sha256 = "1wzfsindjxx61nca36hhldy0y33pgagg506ls9ldvrkvl4n4y7iy";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base bytestring conduit conduit-extra directory process resourcet
         safe terminfo text transformers unix
       ];
       executableHaskellDepends = [ base bytestring conduit-extra text ];
       homepage = "https://github.com/pharpend/pager";
       description = "Open up a pager, like 'less' or 'more'";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "pagerduty" = callPackage
    ({ mkDerivation, aeson, base, bifunctors, bytestring
     , bytestring-conversion, conduit, data-default-class, exceptions
     , generics-sop, http-client, http-types, lens, lens-aeson, mmorph
     , monad-control, mtl, template-haskell, text, time
     , time-locale-compat, transformers, transformers-base
     , transformers-compat, unordered-containers
     }:
     mkDerivation {
       pname = "pagerduty";
       version = "0.0.7";
       sha256 = "177yay3n4pm0c66db4x1ncksccissp6z1qvp35bcdxhc11d0fijy";
       libraryHaskellDepends = [
         aeson base bifunctors bytestring bytestring-conversion conduit
         data-default-class exceptions generics-sop http-client http-types
         lens lens-aeson mmorph monad-control mtl template-haskell text time
         time-locale-compat transformers transformers-base
         transformers-compat unordered-containers
       ];
       homepage = "http://github.com/brendanhay/pagerduty";
       description = "Client library for PagerDuty Integration and REST APIs";
       license = "unknown";
     }) {};
  "pagination" = callPackage
    ({ mkDerivation, base, deepseq, exceptions, hspec, QuickCheck }:
     mkDerivation {
       pname = "pagination";
       version = "0.1.1";
       sha256 = "017bws1ws4zq6058p6wxkxk6fjhxjrc20vm2nb6pizks0227pi5s";
       libraryHaskellDepends = [ base deepseq exceptions ];
       testHaskellDepends = [ base exceptions hspec QuickCheck ];
       homepage = "https://github.com/mrkkrp/pagination";
       description = "Framework-agnostic pagination boilerplate";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "palette" = callPackage
    ({ mkDerivation, array, base, colour, containers }:
     mkDerivation {
       pname = "palette";
       version = "0.1.0.4";
       sha256 = "1k57mp56zgjs8xpf57vwnnm2ilkbgp717hchrg3ilrbx0yhb9cz6";
       libraryHaskellDepends = [ array base colour containers ];
       homepage = "http://projects.haskell.org/diagrams";
       description = "Utilities for choosing and creating color schemes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pandoc" = callPackage
    ({ mkDerivation, aeson, ansi-terminal, array, base
     , base64-bytestring, binary, blaze-html, blaze-markup, bytestring
     , cmark, containers, criterion, data-default, deepseq, Diff
     , directory, executable-path, extensible-exceptions, filemanip
     , filepath, ghc-prim, haddock-library, highlighting-kate, hslua
     , HTTP, http-client, http-client-tls, http-types, HUnit
     , JuicyPixels, mtl, network, network-uri, old-time, pandoc-types
     , parsec, process, QuickCheck, random, scientific, SHA, syb
     , tagsoup, temporary, test-framework, test-framework-hunit
     , test-framework-quickcheck2, texmath, text, time
     , unordered-containers, vector, xml, yaml, zip-archive, zlib
     }:
     mkDerivation {
       pname = "pandoc";
       version = "1.17.1";
       sha256 = "11hc07dyrqkb522swqhlqqm2q6m1splnp2hh12sm9qjccspvly2r";
       revision = "1";
       editedCabalFile = "109n25sc32zf8a73q69q3wrzy6785nlzgawbmars1fmwb0gs3shc";
       configureFlags = [ "-fhttps" "-f-old-locale" ];
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson array base base64-bytestring binary blaze-html blaze-markup
         bytestring cmark containers data-default deepseq directory
         extensible-exceptions filemanip filepath ghc-prim haddock-library
         highlighting-kate hslua HTTP http-client http-client-tls http-types
         JuicyPixels mtl network network-uri old-time pandoc-types parsec
         process random scientific SHA syb tagsoup temporary texmath text
         time unordered-containers vector xml yaml zip-archive zlib
       ];
       executableHaskellDepends = [
         aeson base bytestring containers directory extensible-exceptions
         filepath highlighting-kate HTTP network network-uri pandoc-types
         text yaml
       ];
       testHaskellDepends = [
         ansi-terminal base bytestring containers Diff directory
         executable-path filepath highlighting-kate HUnit pandoc-types
         process QuickCheck syb test-framework test-framework-hunit
         test-framework-quickcheck2 text zip-archive
       ];
       benchmarkHaskellDepends = [ base criterion syb ];
       homepage = "http://pandoc.org";
       description = "Conversion between markup formats";
       license = "GPL";
     }) {};
  "pandoc-citeproc" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, attoparsec, base, bytestring
     , containers, data-default, directory, filepath, hs-bibutils, mtl
     , old-locale, pandoc, pandoc-types, parsec, process, rfc5051
     , setenv, split, syb, tagsoup, temporary, text, time
     , unordered-containers, vector, xml-conduit, yaml
     }:
     mkDerivation {
       pname = "pandoc-citeproc";
       version = "0.10.3";
       sha256 = "0n2dvz3x6kb7a827smbw19cqg7bj83nb9hhazgnhiyx9j7zk6qig";
       revision = "1";
       editedCabalFile = "1cxfy7m1k3g73x1j6afgkc61cn6cpvb7qbzz46zx0r5z7yfypjma";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson base bytestring containers data-default directory filepath
         hs-bibutils mtl old-locale pandoc pandoc-types parsec rfc5051
         setenv split syb tagsoup text time unordered-containers vector
         xml-conduit yaml
       ];
       executableHaskellDepends = [
         aeson aeson-pretty attoparsec base bytestring containers directory
         filepath pandoc pandoc-types process syb temporary text vector yaml
       ];
       testHaskellDepends = [
         aeson base bytestring directory filepath pandoc pandoc-types
         process temporary text yaml
       ];
       doCheck = false;
       homepage = "https://github.com/jgm/pandoc-citeproc";
       description = "Supports using pandoc with citeproc";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pandoc-types" = callPackage
    ({ mkDerivation, aeson, base, bytestring, containers, deepseq
     , ghc-prim, syb
     }:
     mkDerivation {
       pname = "pandoc-types";
       version = "1.16.1.1";
       sha256 = "094mzgdxva84kcpjf9m8b5n3chm1wm44bzflh5x6xhddz6pb7zpq";
       libraryHaskellDepends = [
         aeson base bytestring containers deepseq ghc-prim syb
       ];
       homepage = "http://johnmacfarlane.net/pandoc";
       description = "Types for representing a structured document";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pango" = callPackage
    ({ mkDerivation, array, base, Cabal, cairo, containers, directory
     , filepath, glib, gtk2hs-buildtools, mtl, pango, pretty, process
     , text
     }:
     mkDerivation {
       pname = "pango";
       version = "0.13.3.1";
       sha256 = "1frzcgqa1f1i3bk0q229vy8y6gsi423s8hfqvnr56h7ys8blysih";
       enableSeparateDataOutput = true;
       setupHaskellDepends = [ base Cabal filepath gtk2hs-buildtools ];
       libraryHaskellDepends = [
         array base cairo containers directory glib mtl pretty process text
       ];
       libraryPkgconfigDepends = [ pango ];
       homepage = "http://projects.haskell.org/gtk2hs/";
       description = "Binding to the Pango text rendering engine";
       license = stdenv.lib.licenses.lgpl21;
     }) {inherit (pkgs.gnome2) pango;};
  "parallel" = callPackage
    ({ mkDerivation, array, base, containers, deepseq }:
     mkDerivation {
       pname = "parallel";
       version = "3.2.1.0";
       sha256 = "09l52k1gsn667lmv0pp052cbwkzkbhfivp51f2xkrlfzf6xwvqsd";
       libraryHaskellDepends = [ array base containers deepseq ];
       description = "Parallel programming library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "parallel-io" = callPackage
    ({ mkDerivation, base, containers, extensible-exceptions, random }:
     mkDerivation {
       pname = "parallel-io";
       version = "0.3.3";
       sha256 = "0i86x3bf8pjlg6mdg1zg5lcrjpg75pbqs2mrgrbp4z4bkcmw051s";
       revision = "1";
       editedCabalFile = "1vlb2x1ghih4l64031rmh7h643c3knh5r5mwilf7g8izb58ypvkm";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base containers extensible-exceptions random
       ];
       homepage = "http://batterseapower.github.com/parallel-io";
       description = "Combinators for executing IO actions in parallel on a thread pool";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "parseargs" = callPackage
    ({ mkDerivation, base, containers, process }:
     mkDerivation {
       pname = "parseargs";
       version = "0.2.0.8";
       sha256 = "1mppvhk78g60xpx5bxkazh4ma2wplr4z6cyinf6lf32xq4294y3v";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base containers ];
       executableHaskellDepends = [ base containers ];
       testHaskellDepends = [ base process ];
       homepage = "http://github.com/BartMassey/parseargs";
       description = "Full-featured command-line argument parsing library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "parsec" = callPackage
    ({ mkDerivation, base, bytestring, HUnit, mtl, test-framework
     , test-framework-hunit, text
     }:
     mkDerivation {
       pname = "parsec";
       version = "3.1.11";
       sha256 = "0vk7q9j2128q191zf1sg0ylj9s9djwayqk9747k0a5fin4f2b1vg";
       libraryHaskellDepends = [ base bytestring mtl text ];
       testHaskellDepends = [
         base HUnit test-framework test-framework-hunit
       ];
       homepage = "https://github.com/aslatter/parsec";
       description = "Monadic parser combinators";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "parsers" = callPackage
    ({ mkDerivation, attoparsec, base, base-orphans, bytestring
     , charset, containers, directory, doctest, filepath, parsec
     , QuickCheck, quickcheck-instances, scientific, text, transformers
     , unordered-containers
     }:
     mkDerivation {
       pname = "parsers";
       version = "0.12.4";
       sha256 = "07najh7f9y3ahh42z96sw4hnd0kc4x3wm0xlf739y0gh81ys5097";
       libraryHaskellDepends = [
         attoparsec base base-orphans charset containers parsec scientific
         text transformers unordered-containers
       ];
       testHaskellDepends = [
         attoparsec base bytestring containers directory doctest filepath
         parsec QuickCheck quickcheck-instances
       ];
       homepage = "http://github.com/ekmett/parsers/";
       description = "Parsing combinators";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "partial-handler" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "partial-handler";
       version = "1.0.2";
       sha256 = "1wd4dad207ljw4pfcx4v1qx38mbppjdjjwz17gmk2rhlyj8z5sgs";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/nikita-volkov/partial-handler";
       description = "A composable exception handler";
       license = stdenv.lib.licenses.mit;
     }) {};
  "path" = callPackage
    ({ mkDerivation, aeson, base, bytestring, deepseq, exceptions
     , filepath, genvalidity, genvalidity-hspec, hspec, HUnit, mtl
     , QuickCheck, template-haskell, validity
     }:
     mkDerivation {
       pname = "path";
       version = "0.5.11";
       sha256 = "055chr9661kr9l80k5l94212f5i1n9n16plxyn9ph0bi0ah9w3dz";
       revision = "1";
       editedCabalFile = "15y1sahs0apbwnxgxk1a31rw9dqkfp116dx1j1whdka9h2dxijm7";
       libraryHaskellDepends = [
         aeson base deepseq exceptions filepath template-haskell
       ];
       testHaskellDepends = [
         aeson base bytestring filepath genvalidity genvalidity-hspec hspec
         HUnit mtl QuickCheck validity
       ];
       description = "Support for well-typed paths";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "path-extra" = callPackage
    ({ mkDerivation, base, exceptions, path }:
     mkDerivation {
       pname = "path-extra";
       version = "0.0.3";
       sha256 = "0ncbcc16b1xg5hc8mm3czabn7crz7d41jv1k5lbcvbisgarkn12m";
       libraryHaskellDepends = [ base exceptions path ];
       description = "Chris Done's path library, enriched with URL-related goodies";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "path-io" = callPackage
    ({ mkDerivation, base, containers, directory, exceptions, filepath
     , hspec, path, temporary, time, transformers, unix-compat
     }:
     mkDerivation {
       pname = "path-io";
       version = "1.2.2";
       sha256 = "0ipy07jb1d34jisy8khwx1j2p2s4lm2z8dy5siywi1a206fmy9bj";
       libraryHaskellDepends = [
         base containers directory exceptions filepath path temporary time
         transformers unix-compat
       ];
       testHaskellDepends = [ base exceptions hspec path unix-compat ];
       homepage = "https://github.com/mrkkrp/path-io";
       description = "Interface to ‘directory’ package for users of ‘path’";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "path-pieces" = callPackage
    ({ mkDerivation, base, hspec, HUnit, QuickCheck, text, time }:
     mkDerivation {
       pname = "path-pieces";
       version = "0.2.1";
       sha256 = "0vx3sivcsld76058925hym2j6hm3g71f0qjr7v59f1g2afgx82q8";
       revision = "1";
       editedCabalFile = "0p7wsphh513s8l5d62lzgbhk2l1h6kj5y7bc27qqjsry9g8ah4y7";
       libraryHaskellDepends = [ base text time ];
       testHaskellDepends = [ base hspec HUnit QuickCheck text ];
       description = "Components of paths";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pathwalk" = callPackage
    ({ mkDerivation, base, directory, filepath, transformers }:
     mkDerivation {
       pname = "pathwalk";
       version = "0.3.1.2";
       sha256 = "148fapj00f59aa2igfq6hwrdcwcyslvrskmfvdia0crid9jd1q3n";
       libraryHaskellDepends = [ base directory filepath transformers ];
       testHaskellDepends = [ base ];
       homepage = "https://github.com/Xe/pathwalk";
       description = "Path walking utilities for Haskell programs";
       license = stdenv.lib.licenses.mit;
     }) {};
  "patience" = callPackage
    ({ mkDerivation, base, containers }:
     mkDerivation {
       pname = "patience";
       version = "0.1.1";
       sha256 = "0qyv20gqy9pb1acy700ahv70lc6vprcwb26cc7fcpcs4scsc7irm";
       libraryHaskellDepends = [ base containers ];
       description = "Patience diff and longest increasing subsequence";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pattern-arrows" = callPackage
    ({ mkDerivation, base, mtl }:
     mkDerivation {
       pname = "pattern-arrows";
       version = "0.0.2";
       sha256 = "13q7bj19hd60rnjfc05wxlyck8llxy11z3mns8kxg197wxrdkhkg";
       libraryHaskellDepends = [ base mtl ];
       homepage = "http://blog.functorial.com/posts/2013-10-27-Pretty-Printing-Arrows.html";
       description = "Arrows for Pretty Printing";
       license = stdenv.lib.licenses.mit;
     }) {};
  "pbkdf" = callPackage
    ({ mkDerivation, base, binary, byteable, bytedump, bytestring
     , cryptohash, utf8-string
     }:
     mkDerivation {
       pname = "pbkdf";
       version = "1.1.1.1";
       sha256 = "1nbn8kan43i00g23g8aljxjpaxm9q1qhzxxdgks0mc4mr1f7bifx";
       libraryHaskellDepends = [
         base binary byteable bytedump bytestring cryptohash utf8-string
       ];
       testHaskellDepends = [
         base binary byteable bytedump bytestring cryptohash utf8-string
       ];
       homepage = "https://github.com/cdornan/pbkdf";
       description = "Haskell implementation of the PBKDF functions from RFC-2898";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pcap" = callPackage
    ({ mkDerivation, base, bytestring, network, time }:
     mkDerivation {
       pname = "pcap";
       version = "0.4.5.2";
       sha256 = "0pydw62qqw61sxfd8x9vvwgpgl3zp6mqv8rm4c825ymzyipjxsg7";
       libraryHaskellDepends = [ base bytestring network time ];
       homepage = "https://github.com/bos/pcap";
       description = "A system-independent interface for user-level packet capture";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pcre-heavy" = callPackage
    ({ mkDerivation, base, base-compat, bytestring, doctest, Glob
     , pcre-light, semigroups, string-conversions, template-haskell
     }:
     mkDerivation {
       pname = "pcre-heavy";
       version = "1.0.0.2";
       sha256 = "1lfbjgvl55jh226n307c2w8mrb3l1myzbkjh4j0jfcb8nybzcp4a";
       libraryHaskellDepends = [
         base base-compat bytestring pcre-light semigroups
         string-conversions template-haskell
       ];
       testHaskellDepends = [ base doctest Glob ];
       homepage = "https://github.com/myfreeweb/pcre-heavy";
       description = "A regexp library on top of pcre-light you can actually use";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "pcre-light" = callPackage
    ({ mkDerivation, base, bytestring, pcre }:
     mkDerivation {
       pname = "pcre-light";
       version = "0.4.0.4";
       sha256 = "0xcyi1fivwg7a92mch5bcqzmrfxzqj42rmb3m8kgs61x4qwpxj82";
       libraryHaskellDepends = [ base bytestring ];
       libraryPkgconfigDepends = [ pcre ];
       homepage = "https://github.com/Daniel-Diaz/pcre-light";
       description = "Portable regex library for Perl 5 compatible regular expressions";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) pcre;};
  "pcre-utils" = callPackage
    ({ mkDerivation, array, attoparsec, base, bytestring, HUnit, mtl
     , regex-pcre-builtin, vector
     }:
     mkDerivation {
       pname = "pcre-utils";
       version = "0.1.8.1";
       sha256 = "1mqyjzccpj2ybwjhjx68bisn1zm9zwmf73hqkyqb5q5k2d7c2bvc";
       libraryHaskellDepends = [
         array attoparsec base bytestring mtl regex-pcre-builtin vector
       ];
       testHaskellDepends = [ base bytestring HUnit regex-pcre-builtin ];
       homepage = "https://github.com/bartavelle/pcre-utils";
       description = "Perl-like substitute and split for PCRE regexps";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pdf-toolbox-content" = callPackage
    ({ mkDerivation, attoparsec, base, base16-bytestring, bytestring
     , containers, io-streams, pdf-toolbox-core, text
     }:
     mkDerivation {
       pname = "pdf-toolbox-content";
       version = "0.0.5.1";
       sha256 = "1244r2ij46gs10zxc3mlf2693nnb1jpyminqkpzh71hp5qilw40w";
       libraryHaskellDepends = [
         attoparsec base base16-bytestring bytestring containers io-streams
         pdf-toolbox-core text
       ];
       homepage = "https://github.com/Yuras/pdf-toolbox";
       description = "A collection of tools for processing PDF files";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pdf-toolbox-core" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, containers, errors
     , io-streams, scientific, transformers, zlib-bindings
     }:
     mkDerivation {
       pname = "pdf-toolbox-core";
       version = "0.0.4.1";
       sha256 = "10d9fchmiwdbkbdxqmn5spim4pywc1qm9q9c0dhmsssryng99qyc";
       libraryHaskellDepends = [
         attoparsec base bytestring containers errors io-streams scientific
         transformers zlib-bindings
       ];
       homepage = "https://github.com/Yuras/pdf-toolbox";
       description = "A collection of tools for processing PDF files";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pdf-toolbox-document" = callPackage
    ({ mkDerivation, base, bytestring, cipher-aes, cipher-rc4
     , containers, crypto-api, cryptohash, io-streams
     , pdf-toolbox-content, pdf-toolbox-core, text, transformers
     }:
     mkDerivation {
       pname = "pdf-toolbox-document";
       version = "0.0.7.1";
       sha256 = "1qghjsaya0wnl3vil8gv6a3crd94mmvl3y73k2cwzhc5madkfz9z";
       libraryHaskellDepends = [
         base bytestring cipher-aes cipher-rc4 containers crypto-api
         cryptohash io-streams pdf-toolbox-content pdf-toolbox-core text
         transformers
       ];
       homepage = "https://github.com/Yuras/pdf-toolbox";
       description = "A collection of tools for processing PDF files";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pdfinfo" = callPackage
    ({ mkDerivation, base, mtl, old-locale, process-extras, text, time
     , time-locale-compat
     }:
     mkDerivation {
       pname = "pdfinfo";
       version = "1.5.4";
       sha256 = "04894cwvcn910j2b0j95dc6i9v6xriqa0v97z3vyi9dhi9yiysls";
       libraryHaskellDepends = [
         base mtl old-locale process-extras text time time-locale-compat
       ];
       homepage = "https://github.com/chrisdone/pdfinfo";
       description = "Wrapper around the pdfinfo command";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pem" = callPackage
    ({ mkDerivation, base, base64-bytestring, bytestring, HUnit, mtl
     , QuickCheck, test-framework, test-framework-hunit
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "pem";
       version = "0.2.2";
       sha256 = "162sk5sg22w21wqz5qv8kx6ibxp99v5p20g3nknhm1kddk3hha1p";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base base64-bytestring bytestring mtl ];
       testHaskellDepends = [
         base bytestring HUnit QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2
       ];
       homepage = "http://github.com/vincenthz/hs-pem";
       description = "Privacy Enhanced Mail (PEM) format reader and writer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "permutation" = callPackage
    ({ mkDerivation, base, ghc-prim, QuickCheck }:
     mkDerivation {
       pname = "permutation";
       version = "0.5.0.5";
       sha256 = "005737s6k9dfpjmjf41m3k1wc31c2kql08ig7fd6npk22nhwmdai";
       libraryHaskellDepends = [ base ghc-prim QuickCheck ];
       homepage = "https://github.com/spacekitteh/permutation";
       description = "A library for permutations and combinations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "persistable-record" = callPackage
    ({ mkDerivation, array, base, containers, dlist, names-th
     , template-haskell, th-data-compat, transformers
     }:
     mkDerivation {
       pname = "persistable-record";
       version = "0.4.1.0";
       sha256 = "06bnvx3gih0a9pi357s9zqdgxlv7qc9di3ihynsjg8gglx4jmx2v";
       libraryHaskellDepends = [
         array base containers dlist names-th template-haskell
         th-data-compat transformers
       ];
       homepage = "http://khibino.github.io/haskell-relational-record/";
       description = "Binding between SQL database values and haskell records";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "persistable-types-HDBC-pg" = callPackage
    ({ mkDerivation, base, bytestring, convertible, HDBC
     , persistable-record, relational-query-HDBC, text-postgresql
     }:
     mkDerivation {
       pname = "persistable-types-HDBC-pg";
       version = "0.0.1.4";
       sha256 = "0nsnb4j6s2sjz66bagag039iv45ss6a3ggg25h3b7fnx2rcl7cnf";
       libraryHaskellDepends = [
         base bytestring convertible HDBC persistable-record
         relational-query-HDBC text-postgresql
       ];
       homepage = "http://khibino.github.io/haskell-relational-record/";
       description = "HDBC and Relational-Record instances of PostgreSQL extended types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "persistent" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, base64-bytestring
     , blaze-html, blaze-markup, bytestring, conduit, containers
     , exceptions, fast-logger, hspec, http-api-data, lifted-base
     , monad-control, monad-logger, mtl, old-locale, path-pieces
     , resource-pool, resourcet, scientific, silently, tagged
     , template-haskell, text, time, transformers, transformers-base
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "persistent";
       version = "2.6";
       sha256 = "0glf80nm3s62mqyrbcw7f10qf7hqfyx49rlbs60ranclvri36hj2";
       revision = "2";
       editedCabalFile = "1dmjfvcs4a16gk1dlpqvjjdnda6ngh08kqh3796d10nqqdjkiq1l";
       libraryHaskellDepends = [
         aeson attoparsec base base64-bytestring blaze-html blaze-markup
         bytestring conduit containers exceptions fast-logger http-api-data
         lifted-base monad-control monad-logger mtl old-locale path-pieces
         resource-pool resourcet scientific silently tagged template-haskell
         text time transformers transformers-base unordered-containers
         vector
       ];
       testHaskellDepends = [
         aeson attoparsec base base64-bytestring blaze-html bytestring
         conduit containers fast-logger hspec http-api-data lifted-base
         monad-control monad-logger mtl old-locale path-pieces resource-pool
         resourcet scientific tagged template-haskell text time transformers
         unordered-containers vector
       ];
       homepage = "http://www.yesodweb.com/book/persistent";
       description = "Type-safe, multi-backend data serialization";
       license = stdenv.lib.licenses.mit;
     }) {};
  "persistent-postgresql" = callPackage
    ({ mkDerivation, aeson, base, blaze-builder, bytestring, conduit
     , containers, monad-control, monad-logger, persistent
     , postgresql-libpq, postgresql-simple, resource-pool, resourcet
     , text, time, transformers
     }:
     mkDerivation {
       pname = "persistent-postgresql";
       version = "2.6";
       sha256 = "1qma7ay8cdndydvz8nbjwswa57209nvh32ph8amwaa45bk6fwh6n";
       libraryHaskellDepends = [
         aeson base blaze-builder bytestring conduit containers
         monad-control monad-logger persistent postgresql-libpq
         postgresql-simple resource-pool resourcet text time transformers
       ];
       homepage = "http://www.yesodweb.com/book/persistent";
       description = "Backend for the persistent library using postgresql";
       license = stdenv.lib.licenses.mit;
     }) {};
  "persistent-redis" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, binary, bytestring, hedis
     , http-api-data, monad-control, mtl, path-pieces, persistent
     , persistent-template, scientific, template-haskell, text, time
     , transformers, utf8-string
     }:
     mkDerivation {
       pname = "persistent-redis";
       version = "2.5.2";
       sha256 = "04rbszmdykk3ks5qpfbvw6gpgqic6lqyyw49rjf3g4p1yhlmd9kv";
       libraryHaskellDepends = [
         aeson attoparsec base binary bytestring hedis http-api-data
         monad-control mtl path-pieces persistent scientific text time
         transformers utf8-string
       ];
       testHaskellDepends = [
         aeson attoparsec base binary bytestring hedis http-api-data
         monad-control mtl path-pieces persistent persistent-template
         scientific template-haskell text time transformers utf8-string
       ];
       doCheck = false;
       description = "Backend for persistent library using Redis";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "persistent-refs" = callPackage
    ({ mkDerivation, base, containers, mtl, ref-fd, transformers }:
     mkDerivation {
       pname = "persistent-refs";
       version = "0.4";
       sha256 = "1lyhz0cywls91a6crjq5v8x4h4740s73h3blvbkr6fg26kh11cs6";
       libraryHaskellDepends = [
         base containers mtl ref-fd transformers
       ];
       homepage = "https://github.com/acfoltzer/persistent-refs";
       description = "Haskell references backed by an IntMap for persistence and reversibility";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "persistent-sqlite" = callPackage
    ({ mkDerivation, aeson, base, bytestring, conduit, containers
     , hspec, monad-control, monad-logger, old-locale, persistent
     , persistent-template, resource-pool, resourcet, temporary, text
     , time, transformers
     }:
     mkDerivation {
       pname = "persistent-sqlite";
       version = "2.6";
       sha256 = "1yhg1sq9nplh6byzi2i7d4zjpaijjcz2b6k4ayqascy5dkq711k2";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base bytestring conduit containers monad-control monad-logger
         old-locale persistent resource-pool resourcet text time
         transformers
       ];
       executableHaskellDepends = [ base monad-logger ];
       testHaskellDepends = [
         base hspec persistent persistent-template temporary text time
         transformers
       ];
       homepage = "http://www.yesodweb.com/book/persistent";
       description = "Backend for the persistent library using sqlite3";
       license = stdenv.lib.licenses.mit;
     }) {};
  "persistent-template" = callPackage
    ({ mkDerivation, aeson, aeson-compat, base, bytestring, containers
     , ghc-prim, hspec, http-api-data, monad-control, monad-logger
     , path-pieces, persistent, QuickCheck, tagged, template-haskell
     , text, transformers, unordered-containers
     }:
     mkDerivation {
       pname = "persistent-template";
       version = "2.5.1.6";
       sha256 = "0i3vbsjjcaa307s97r7gc3yk94k4bkyw3acqsvw9g89v2wsqg2pq";
       revision = "2";
       editedCabalFile = "1ik5ig4iakbs4cpvnfcbfp6a2dz7znfk3nmaak7zlhlp3n0f3shq";
       libraryHaskellDepends = [
         aeson aeson-compat base bytestring containers ghc-prim
         http-api-data monad-control monad-logger path-pieces persistent
         tagged template-haskell text transformers unordered-containers
       ];
       testHaskellDepends = [
         aeson base bytestring hspec persistent QuickCheck text transformers
       ];
       homepage = "http://www.yesodweb.com/book/persistent";
       description = "Type-safe, non-relational, multi-backend persistence";
       license = stdenv.lib.licenses.mit;
     }) {};
  "pgp-wordlist" = callPackage
    ({ mkDerivation, base, bytestring, containers, deepseq, doctest
     , HUnit, tasty, tasty-hunit, tasty-quickcheck, text, vector
     }:
     mkDerivation {
       pname = "pgp-wordlist";
       version = "0.1.0.2";
       sha256 = "0ri4m4a18kmnpw2a3vcw7zgjagccqr3snw2qgljg3b92abl6z2z2";
       libraryHaskellDepends = [ base bytestring containers text vector ];
       testHaskellDepends = [
         base bytestring deepseq doctest HUnit tasty tasty-hunit
         tasty-quickcheck text
       ];
       homepage = "https://github.com/quchen/pgp-wordlist";
       description = "Translate between binary data and a human-readable collection of words";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "phantom-state" = callPackage
    ({ mkDerivation, base, criterion, transformers, vector }:
     mkDerivation {
       pname = "phantom-state";
       version = "0.2.1.2";
       sha256 = "049q1ii8rgwwjli16hxs9ak813x2lw5k8y8l7zjsks8hx2cfyy7r";
       libraryHaskellDepends = [ base transformers ];
       benchmarkHaskellDepends = [ base criterion transformers vector ];
       description = "Phantom State Transformer. Like State Monad, but without values.";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "picoparsec" = callPackage
    ({ mkDerivation, array, attoparsec, base, bytestring
     , case-insensitive, containers, criterion, deepseq, directory
     , filepath, ghc-prim, hashable, http-types, monoid-subclasses
     , parsec, QuickCheck, quickcheck-instances, quickcheck-unicode
     , scientific, tasty, tasty-quickcheck, text, unordered-containers
     , vector
     }:
     mkDerivation {
       pname = "picoparsec";
       version = "0.1.2.3";
       sha256 = "0l4i5s0yh4jcagcywcx2bwpvky6xy4hisbvwbghjvxpsirkyviwf";
       libraryHaskellDepends = [
         array base bytestring containers deepseq monoid-subclasses
         scientific text
       ];
       testHaskellDepends = [
         array base bytestring deepseq monoid-subclasses QuickCheck
         quickcheck-instances quickcheck-unicode scientific tasty
         tasty-quickcheck text vector
       ];
       benchmarkHaskellDepends = [
         array attoparsec base bytestring case-insensitive criterion deepseq
         directory filepath ghc-prim hashable http-types monoid-subclasses
         parsec scientific text unordered-containers vector
       ];
       homepage = "https://bitbucket.org/blamario/picoparsec";
       description = "Fast combinator parsing for bytestrings and text";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pinboard" = callPackage
    ({ mkDerivation, aeson, base, bytestring, containers, either, hspec
     , http-client, http-client-tls, http-types, mtl, network
     , old-locale, profunctors, QuickCheck, random, semigroups, text
     , time, transformers, unordered-containers, vector
     }:
     mkDerivation {
       pname = "pinboard";
       version = "0.9.6";
       sha256 = "1ns76f3197lvl1cx0pdjif9g3k4y96w5cijs885q82jkdv39m68v";
       libraryHaskellDepends = [
         aeson base bytestring containers either http-client http-client-tls
         http-types mtl network old-locale profunctors random text time
         transformers unordered-containers vector
       ];
       testHaskellDepends = [
         aeson base bytestring containers hspec mtl QuickCheck semigroups
         text time transformers unordered-containers
       ];
       homepage = "https://github.com/jonschoning/pinboard";
       description = "Access to the Pinboard API";
       license = stdenv.lib.licenses.mit;
     }) {};
  "pinch" = callPackage
    ({ mkDerivation, array, base, bytestring, containers, deepseq
     , ghc-prim, hashable, hspec, hspec-discover, QuickCheck, text
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "pinch";
       version = "0.3.0.2";
       sha256 = "0jiyh3jmkhax6y1lxdavmzgc5d5iaiwywlpbfp86w56y2dzan4gm";
       libraryHaskellDepends = [
         array base bytestring containers deepseq ghc-prim hashable text
         unordered-containers vector
       ];
       testHaskellDepends = [
         base bytestring containers hspec hspec-discover QuickCheck text
         unordered-containers vector
       ];
       homepage = "https://github.com/abhinav/pinch#readme";
       description = "An alternative implementation of Thrift for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pinchot" = callPackage
    ({ mkDerivation, base, containers, Earley, lens, ListLike
     , non-empty-sequence, pretty-show, semigroups, template-haskell
     , transformers
     }:
     mkDerivation {
       pname = "pinchot";
       version = "0.22.0.0";
       sha256 = "05w6p3nl8n12pdh8qcfsawi76bldpk35pam19pyjmqfm128rx2i4";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base containers Earley lens ListLike non-empty-sequence pretty-show
         semigroups template-haskell transformers
       ];
       homepage = "http://www.github.com/massysett/pinchot";
       description = "Write grammars, not parsers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pipes" = callPackage
    ({ mkDerivation, base, criterion, deepseq, mmorph, mtl
     , optparse-applicative, QuickCheck, test-framework
     , test-framework-quickcheck2, transformers
     }:
     mkDerivation {
       pname = "pipes";
       version = "4.1.9";
       sha256 = "1sm3vsmqmjn3r2mv4c1cqn3a6l1gpfcks6zq0g52vdmvc63x1mf2";
       libraryHaskellDepends = [ base mmorph mtl transformers ];
       testHaskellDepends = [
         base mtl QuickCheck test-framework test-framework-quickcheck2
         transformers
       ];
       benchmarkHaskellDepends = [
         base criterion deepseq mtl optparse-applicative transformers
       ];
       description = "Compositional pipelines";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pipes-aeson" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, bytestring, pipes
     , pipes-attoparsec, pipes-bytestring, pipes-parse, transformers
     }:
     mkDerivation {
       pname = "pipes-aeson";
       version = "0.4.1.7";
       sha256 = "1kdqbk70g80wr5b3jvf5rfj52i69vr8700bhgywf6q1izscv3ky7";
       revision = "1";
       editedCabalFile = "0v981ln4hb4rsb6jxz07gijg3xdlc9hb5d86rn44k5yyfkh7drvw";
       libraryHaskellDepends = [
         aeson attoparsec base bytestring pipes pipes-attoparsec
         pipes-bytestring pipes-parse transformers
       ];
       homepage = "https://github.com/k0001/pipes-aeson";
       description = "Encode and decode JSON streams using Aeson and Pipes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pipes-attoparsec" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, HUnit, mmorph, pipes
     , pipes-parse, tasty, tasty-hunit, text, transformers
     }:
     mkDerivation {
       pname = "pipes-attoparsec";
       version = "0.5.1.4";
       sha256 = "01rmap6i8pdgvlxg7dya4f3nk36by2axhpz8x83axrl1kx7sic7s";
       revision = "1";
       editedCabalFile = "1pafyfjfvdpflrq292a3c46d4brqw2k9cgvz4qbyv60fwpc1h0n9";
       libraryHaskellDepends = [
         attoparsec base bytestring pipes pipes-parse text transformers
       ];
       testHaskellDepends = [
         attoparsec base HUnit mmorph pipes pipes-parse tasty tasty-hunit
         text transformers
       ];
       homepage = "https://github.com/k0001/pipes-attoparsec";
       description = "Attoparsec and Pipes integration";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pipes-bgzf" = callPackage
    ({ mkDerivation, base, bytestring, mtl, parallel, pipes
     , streaming-commons
     }:
     mkDerivation {
       pname = "pipes-bgzf";
       version = "0.2.0.1";
       sha256 = "04y0wzy8982g64xyxq6rl9xc63n0c8xl8mhyf0x4ivqxnn49iv23";
       libraryHaskellDepends = [
         base bytestring mtl parallel pipes streaming-commons
       ];
       description = "Blocked GZip";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pipes-bytestring" = callPackage
    ({ mkDerivation, base, bytestring, pipes, pipes-group, pipes-parse
     , transformers
     }:
     mkDerivation {
       pname = "pipes-bytestring";
       version = "2.1.4";
       sha256 = "1svd8ssdqf8lp083g3lray823854i178hhn4ys3qhlxa53g74gvc";
       libraryHaskellDepends = [
         base bytestring pipes pipes-group pipes-parse transformers
       ];
       description = "ByteString support for pipes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pipes-cacophony" = callPackage
    ({ mkDerivation, base, bytestring, cacophony, hlint, pipes }:
     mkDerivation {
       pname = "pipes-cacophony";
       version = "0.4.0";
       sha256 = "1h0yh8c9s33c6hx20i56yy78ac1bcflx5g9wffy946n67jcghkr2";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base bytestring cacophony pipes ];
       testHaskellDepends = [ base hlint ];
       homepage = "https://github.com/centromere/pipes-cacophony";
       description = "Pipes for Noise-secured network connections";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "pipes-cliff" = callPackage
    ({ mkDerivation, async, base, bytestring, pipes, pipes-safe
     , process, stm, unix
     }:
     mkDerivation {
       pname = "pipes-cliff";
       version = "0.12.0.0";
       sha256 = "1i8pakd4lpp3haxlr4q1d5nlfiy5igiwyr49xb8hxllri28cxi2g";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         async base bytestring pipes pipes-safe process stm unix
       ];
       homepage = "http://www.github.com/massysett/pipes-cliff";
       description = "Streaming to and from subprocesses using Pipes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pipes-concurrency" = callPackage
    ({ mkDerivation, async, base, contravariant, pipes, stm, void }:
     mkDerivation {
       pname = "pipes-concurrency";
       version = "2.0.7";
       sha256 = "0nbmyhnkcw0frdbjzyhgal3zadzf6hsrqj5l619lj6rnjq07z90l";
       libraryHaskellDepends = [ base contravariant pipes stm void ];
       testHaskellDepends = [ async base pipes stm ];
       description = "Concurrency for the pipes ecosystem";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pipes-csv" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring, cassava, HUnit
     , MissingH, pipes, pipes-bytestring, test-framework
     , test-framework-hunit, unordered-containers, vector
     }:
     mkDerivation {
       pname = "pipes-csv";
       version = "1.4.3";
       sha256 = "1cv8vb5jm95h3jqm4xhndgijcivmcxdjppvcs88bpjbfspfzb1cl";
       libraryHaskellDepends = [
         base blaze-builder bytestring cassava pipes unordered-containers
         vector
       ];
       testHaskellDepends = [
         base bytestring cassava HUnit MissingH pipes pipes-bytestring
         test-framework test-framework-hunit vector
       ];
       description = "Fast, streaming csv parser";
       license = stdenv.lib.licenses.mit;
     }) {};
  "pipes-extras" = callPackage
    ({ mkDerivation, base, foldl, HUnit, pipes, test-framework
     , test-framework-hunit, transformers
     }:
     mkDerivation {
       pname = "pipes-extras";
       version = "1.0.8";
       sha256 = "0yykjj0hbbi5v63nll0mmqdx2v1ivdk8s8v1qvjbb21944r7j3sd";
       libraryHaskellDepends = [ base foldl pipes transformers ];
       testHaskellDepends = [
         base HUnit pipes test-framework test-framework-hunit transformers
       ];
       description = "Extra utilities for pipes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pipes-fastx" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, pipes
     , pipes-attoparsec, pipes-bytestring
     }:
     mkDerivation {
       pname = "pipes-fastx";
       version = "0.3.0.0";
       sha256 = "0xds11gfacj7m5lz6cssaj4v5z73ycrdmn57f0qxzqdsc2kln9ii";
       libraryHaskellDepends = [
         attoparsec base bytestring pipes pipes-attoparsec pipes-bytestring
       ];
       description = "Streaming parsers for Fasta and Fastq";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pipes-group" = callPackage
    ({ mkDerivation, base, doctest, free, lens-family-core, pipes
     , pipes-parse, transformers
     }:
     mkDerivation {
       pname = "pipes-group";
       version = "1.0.6";
       sha256 = "0rmpi9gb151gsmvx9f0q9vssd6fsf08ifxxynfp5jnv7lxmnzb87";
       libraryHaskellDepends = [
         base free pipes pipes-parse transformers
       ];
       testHaskellDepends = [ base doctest lens-family-core ];
       description = "Group streams into substreams";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pipes-http" = callPackage
    ({ mkDerivation, base, bytestring, http-client, http-client-tls
     , pipes
     }:
     mkDerivation {
       pname = "pipes-http";
       version = "1.0.5";
       sha256 = "0m9hy9j6nnq2zngz1axbarjc1cwyxw7z36x40qw8yqz1dm39d8a9";
       libraryHaskellDepends = [
         base bytestring http-client http-client-tls pipes
       ];
       description = "HTTP client with pipes interface";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pipes-illumina" = callPackage
    ({ mkDerivation, base, bytestring, directory, filepath, pipes
     , pipes-bgzf
     }:
     mkDerivation {
       pname = "pipes-illumina";
       version = "0.1.0.0";
       sha256 = "19s6rkrfvmni914flq37fkbfs6angzl3c40bzg0ddivn4ada7jvn";
       libraryHaskellDepends = [
         base bytestring directory filepath pipes pipes-bgzf
       ];
       homepage = "http://github.com/rcallahan/pipes-illumina";
       description = "Illumina NGS data processing";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pipes-mongodb" = callPackage
    ({ mkDerivation, base, monad-control, mongoDB, pipes, text }:
     mkDerivation {
       pname = "pipes-mongodb";
       version = "0.1.0.0";
       sha256 = "0h4334fajrza7r8jrr78nqhs522kxnbzdj0gnbp7ndvzvx5ij888";
       libraryHaskellDepends = [ base monad-control mongoDB pipes ];
       testHaskellDepends = [ base monad-control mongoDB pipes text ];
       doCheck = false;
       homepage = "http://github.com/jb55/pipes-mongodb";
       description = "Stream results from MongoDB";
       license = stdenv.lib.licenses.mit;
     }) {};
  "pipes-network" = callPackage
    ({ mkDerivation, base, bytestring, network, network-simple, pipes
     , pipes-safe, transformers
     }:
     mkDerivation {
       pname = "pipes-network";
       version = "0.6.4.1";
       sha256 = "1bx0a7whir2g83q80m145nl13271sfl5jrvdjlaailp2g3n4lqm8";
       revision = "1";
       editedCabalFile = "0i7iyzsj6hax7k66rcrkqgkd7z5z65ak77jmg9mdlm13q12r6kih";
       libraryHaskellDepends = [
         base bytestring network network-simple pipes pipes-safe
         transformers
       ];
       homepage = "https://github.com/k0001/pipes-network";
       description = "Use network sockets together with the pipes library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pipes-parse" = callPackage
    ({ mkDerivation, base, pipes, transformers }:
     mkDerivation {
       pname = "pipes-parse";
       version = "3.0.8";
       sha256 = "1a87q6l610rhxr23qfzzzif3zpfjhw3mg5gfcyjwqac25hdq73yj";
       libraryHaskellDepends = [ base pipes transformers ];
       description = "Parsing infrastructure for the pipes ecosystem";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pipes-random" = callPackage
    ({ mkDerivation, base, mwc-random, pipes, vector }:
     mkDerivation {
       pname = "pipes-random";
       version = "1.0.0.3";
       sha256 = "14qinfky4mcd3xs6lm6fmfw1k5inkiry8mn6m6q4hq7pwick773j";
       libraryHaskellDepends = [ base mwc-random pipes vector ];
       description = "Producers for handling randomness";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pipes-safe" = callPackage
    ({ mkDerivation, base, containers, exceptions, monad-control, mtl
     , pipes, transformers, transformers-base
     }:
     mkDerivation {
       pname = "pipes-safe";
       version = "2.2.4";
       sha256 = "0vj86mkwbdywjqnxaf5rj7nm5nqpz5wxjvlh2w4wg5l5nddclbah";
       revision = "1";
       editedCabalFile = "0wz8b1nhxji107lvrxdcgdal7v861847z1svg61as0zdv4sqh769";
       libraryHaskellDepends = [
         base containers exceptions monad-control mtl pipes transformers
         transformers-base
       ];
       description = "Safety for the pipes ecosystem";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pipes-text" = callPackage
    ({ mkDerivation, base, bytestring, pipes, pipes-bytestring
     , pipes-group, pipes-parse, pipes-safe, streaming-commons, text
     , transformers
     }:
     mkDerivation {
       pname = "pipes-text";
       version = "0.0.2.5";
       sha256 = "0ahgkism9q5qda1iq45h9sc36vqyna017pf4kw28gzgbm01fx2a4";
       libraryHaskellDepends = [
         base bytestring pipes pipes-bytestring pipes-group pipes-parse
         pipes-safe streaming-commons text transformers
       ];
       homepage = "https://github.com/michaelt/text-pipes";
       description = "properly streaming text";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pipes-wai" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring, http-types, pipes
     , transformers, wai
     }:
     mkDerivation {
       pname = "pipes-wai";
       version = "3.2.0";
       sha256 = "0akd0n2qgv32pcq717j2xr2g29qmaz2v610ddx7vc4hc2kgp19h4";
       libraryHaskellDepends = [
         base blaze-builder bytestring http-types pipes transformers wai
       ];
       homepage = "http://github.com/iand675/pipes-wai";
       description = "A port of wai-conduit for the pipes ecosystem";
       license = stdenv.lib.licenses.mit;
     }) {};
  "pixelated-avatar-generator" = callPackage
    ({ mkDerivation, async, base, bytestring, cli, hspec, JuicyPixels
     , pureMD5, QuickCheck, random, split
     }:
     mkDerivation {
       pname = "pixelated-avatar-generator";
       version = "0.1.3";
       sha256 = "0y50cfjq660d4gn9dccnmnm435asay3z0skxm8glix918508fzad";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring JuicyPixels pureMD5 split
       ];
       executableHaskellDepends = [ async base cli random ];
       testHaskellDepends = [
         base bytestring hspec JuicyPixels QuickCheck
       ];
       homepage = "https://github.com/ExcaliburZero/pixelated-avatar-generator";
       description = "A library and application for generating pixelated avatars";
       license = stdenv.lib.licenses.mit;
     }) {};
  "pkcs10" = callPackage
    ({ mkDerivation, asn1-encoding, asn1-parse, asn1-types, base
     , bytestring, cryptonite, pem, QuickCheck, tasty, tasty-hunit
     , tasty-quickcheck, transformers, x509
     }:
     mkDerivation {
       pname = "pkcs10";
       version = "0.1.1.0";
       sha256 = "1v5ykhfbs6vkx5fhhghdwlyp3v71n43wacp16naqb7j2bbx6aihx";
       libraryHaskellDepends = [
         asn1-encoding asn1-parse asn1-types base bytestring cryptonite pem
         x509
       ];
       testHaskellDepends = [
         asn1-encoding asn1-parse asn1-types base bytestring cryptonite pem
         QuickCheck tasty tasty-hunit tasty-quickcheck transformers x509
       ];
       homepage = "https://github.com/fcomb/pkcs10-hs#readme";
       description = "PKCS#10 library";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "placeholders" = callPackage
    ({ mkDerivation, base, template-haskell }:
     mkDerivation {
       pname = "placeholders";
       version = "0.1";
       sha256 = "0ih35n2pw5gr9ggj2xz5zfcs4bdk200fdw6q9hdy3xna7maphak5";
       libraryHaskellDepends = [ base template-haskell ];
       homepage = "http://github.com/ahammar/placeholders";
       description = "Placeholders for use while developing Haskell code";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "plan-b" = callPackage
    ({ mkDerivation, base, exceptions, hspec, path, path-io
     , transformers
     }:
     mkDerivation {
       pname = "plan-b";
       version = "0.2.0";
       sha256 = "0sf7h18wddwlspg5gglfnbcha534nhm5va6idrd6mqqfk8j4nrgi";
       libraryHaskellDepends = [
         base exceptions path path-io transformers
       ];
       testHaskellDepends = [ base hspec path path-io ];
       homepage = "https://github.com/mrkkrp/plan-b";
       description = "Failure-tolerant file and directory editing";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "point-octree" = callPackage
    ({ mkDerivation, AC-Vector, base, QuickCheck }:
     mkDerivation {
       pname = "point-octree";
       version = "0.5.5.3";
       sha256 = "0lh5flwdc3j7nypl304pfqdn8mirg937y199j08mmlhca93p1z0m";
       libraryHaskellDepends = [ AC-Vector base QuickCheck ];
       doCheck = false;
       homepage = "https://github.com/mlitchard/point-octree";
       description = "Point octree, with bounding boxes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pointed" = callPackage
    ({ mkDerivation, base, comonad, containers, data-default-class
     , hashable, kan-extensions, semigroupoids, semigroups, stm, tagged
     , transformers, transformers-compat, unordered-containers
     }:
     mkDerivation {
       pname = "pointed";
       version = "5";
       sha256 = "05sxac90xv4j8glmf2mxs0smmv6vhia0qaaag5v37ar5a6pvh1l9";
       revision = "1";
       editedCabalFile = "170gqax34qch77zzqwq95z2lzq9da8gmfxg1vcll4aphhafwgzzp";
       libraryHaskellDepends = [
         base comonad containers data-default-class hashable kan-extensions
         semigroupoids semigroups stm tagged transformers
         transformers-compat unordered-containers
       ];
       homepage = "http://github.com/ekmett/pointed/";
       description = "Pointed and copointed data";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pointedlist" = callPackage
    ({ mkDerivation, base, binary }:
     mkDerivation {
       pname = "pointedlist";
       version = "0.6.1";
       sha256 = "16xsrzqql7i4z6a3xy07sqnbyqdmcar1jiacla58y4mvkkwb0g3l";
       libraryHaskellDepends = [ base binary ];
       description = "A zipper-like comonad which works as a list, tracking a position";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pointful" = callPackage
    ({ mkDerivation, base, containers, haskell-src-exts, mtl, syb
     , transformers
     }:
     mkDerivation {
       pname = "pointful";
       version = "1.0.8";
       sha256 = "1b3714r93g74dp8q3yanq4pdi77zvqidkd9apb9dkap743lm4cc1";
       revision = "1";
       editedCabalFile = "0xylc7fyz1x3zijjnbp73g6c106fw1dryw687i7sjlcjv1cq80xj";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base containers haskell-src-exts mtl syb transformers
       ];
       executableHaskellDepends = [
         base containers haskell-src-exts mtl syb transformers
       ];
       homepage = "http://github.com/23Skidoo/pointful";
       description = "Pointful refactoring tool";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pointless-fun" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "pointless-fun";
       version = "1.1.0.6";
       sha256 = "0m5hwd0mr7bmb2sbs1qa7l65xrr5h2wjznknsrk1ga08qkd5jp6h";
       libraryHaskellDepends = [ base ];
       homepage = "http://code.haskell.org/~wren/";
       description = "Some common point-free combinators";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "polynomials-bernstein" = callPackage
    ({ mkDerivation, base, vector }:
     mkDerivation {
       pname = "polynomials-bernstein";
       version = "1.1.2";
       sha256 = "0qkhvid0xgr7223mg2r5crxprwl0yrwqdy8zwkkl0fjkj7kz4l39";
       libraryHaskellDepends = [ base vector ];
       description = "A solver for systems of polynomial equations in bernstein form";
       license = "GPL";
     }) {};
  "polyparse" = callPackage
    ({ mkDerivation, base, bytestring, text }:
     mkDerivation {
       pname = "polyparse";
       version = "1.12";
       sha256 = "05dya1vdvq29hkhkdlsglzhw7bdn51rvs1javs0q75nf99c66k7m";
       libraryHaskellDepends = [ base bytestring text ];
       homepage = "http://code.haskell.org/~malcolm/polyparse/";
       description = "A variety of alternative parser combinator libraries";
       license = "LGPL";
     }) {};
  "posix-realtime" = callPackage
    ({ mkDerivation, base, bytestring, unix }:
     mkDerivation {
       pname = "posix-realtime";
       version = "0.0.0.4";
       sha256 = "01yz9p66m8w5418mqrrbz33dib97pscw329382wh0bi75swvlb39";
       libraryHaskellDepends = [ base bytestring unix ];
       description = "POSIX Realtime functionality";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "post-mess-age" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "post-mess-age";
       version = "0.2.1.0";
       sha256 = "0k6njm7fbj7y6bzqkfpdby4az13i2sqg7lacnn5ry2hkrfqrmxnh";
       libraryHaskellDepends = [ base ];
       description = "Send messages to a handle concurrently without getting them mixed";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "postgresql-binary" = callPackage
    ({ mkDerivation, aeson, base, base-prelude, binary-parser
     , bytestring, criterion, deepseq, foldl, loch-th, mtl-prelude
     , placeholders, scientific, text, time, transformers, uuid, vector
     }:
     mkDerivation {
       pname = "postgresql-binary";
       version = "0.9.1.1";
       sha256 = "1hns1n1mrg56xglcpnvr4z3n8wwmw0gj44k1bzgfr4g1qamv7bp9";
       libraryHaskellDepends = [
         aeson base base-prelude binary-parser bytestring foldl loch-th
         placeholders scientific text time transformers uuid vector
       ];
       benchmarkHaskellDepends = [
         base-prelude bytestring criterion deepseq mtl-prelude scientific
         text time
       ];
       doCheck = false;
       homepage = "https://github.com/nikita-volkov/postgresql-binary";
       description = "Encoders and decoders for the PostgreSQL's binary format";
       license = stdenv.lib.licenses.mit;
     }) {};
  "postgresql-libpq" = callPackage
    ({ mkDerivation, base, bytestring, postgresql }:
     mkDerivation {
       pname = "postgresql-libpq";
       version = "0.9.3.0";
       sha256 = "01fvzrc7fgpj7vffxfcy852pbdm4938cdm64130i3q2khzhg63ai";
       libraryHaskellDepends = [ base bytestring ];
       librarySystemDepends = [ postgresql ];
       homepage = "http://github.com/lpsmith/postgresql-libpq";
       description = "low-level binding to libpq";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) postgresql;};
  "postgresql-query" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, blaze-builder, bytestring
     , containers, data-default, derive, either, exceptions, file-embed
     , haskell-src-meta, hreader, hset, inflections, monad-control
     , monad-logger, mtl, postgresql-simple, QuickCheck
     , quickcheck-assertions, quickcheck-instances, resource-pool
     , semigroups, tasty, tasty-hunit, tasty-quickcheck, tasty-th
     , template-haskell, text, th-lift, th-lift-instances, time
     , transformers, transformers-base, transformers-compat, type-fun
     }:
     mkDerivation {
       pname = "postgresql-query";
       version = "3.0.1";
       sha256 = "1961zi3fdfi7i3xzzcrsw85a4xwp7ddd9xx0j70anzln683z37rf";
       libraryHaskellDepends = [
         aeson attoparsec base blaze-builder bytestring containers
         data-default either exceptions file-embed haskell-src-meta hreader
         hset inflections monad-control monad-logger mtl postgresql-simple
         resource-pool semigroups template-haskell text th-lift
         th-lift-instances time transformers transformers-base
         transformers-compat type-fun
       ];
       testHaskellDepends = [
         attoparsec base derive inflections postgresql-simple QuickCheck
         quickcheck-assertions quickcheck-instances tasty tasty-hunit
         tasty-quickcheck tasty-th text time
       ];
       doCheck = false;
       homepage = "https://bitbucket.org/s9gf4ult/postgresql-query";
       description = "Sql interpolating quasiquote plus some kind of primitive ORM using it";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "postgresql-schema" = callPackage
    ({ mkDerivation, base, basic-prelude, optparse-applicative
     , postgresql-simple, shelly, text, time, time-locale-compat
     }:
     mkDerivation {
       pname = "postgresql-schema";
       version = "0.1.10";
       sha256 = "0yp239akswajxp9l3d2sdgkba9iycri2zvb5r6pdjzvaj44pwc19";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base basic-prelude postgresql-simple shelly text
       ];
       executableHaskellDepends = [
         base basic-prelude optparse-applicative shelly text time
         time-locale-compat
       ];
       homepage = "https://github.com/mfine/postgresql-schema";
       description = "PostgreSQL Schema Management";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "postgresql-simple" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, base16-bytestring
     , bytestring, bytestring-builder, case-insensitive, containers
     , cryptohash, filepath, hashable, HUnit, postgresql-libpq
     , scientific, tasty, tasty-golden, tasty-hunit, template-haskell
     , text, time, transformers, uuid-types, vector
     }:
     mkDerivation {
       pname = "postgresql-simple";
       version = "0.5.2.1";
       sha256 = "0z1790nx2gdhir3j3vipa6961103jp4b3q49wgg4v55xvy1icykh";
       libraryHaskellDepends = [
         aeson attoparsec base bytestring bytestring-builder
         case-insensitive containers hashable postgresql-libpq scientific
         template-haskell text time transformers uuid-types vector
       ];
       testHaskellDepends = [
         aeson base base16-bytestring bytestring containers cryptohash
         filepath HUnit tasty tasty-golden tasty-hunit text time vector
       ];
       doCheck = false;
       description = "Mid-Level PostgreSQL client library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "postgresql-simple-url" = callPackage
    ({ mkDerivation, base, network-uri, postgresql-simple, split, tasty
     , tasty-quickcheck
     }:
     mkDerivation {
       pname = "postgresql-simple-url";
       version = "0.1.0.1";
       sha256 = "1878zcfgis931nn5pnbixzfj2sbp790rxq294cwjy6g1ab35w5ng";
       revision = "7";
       editedCabalFile = "1k68jfifdss9wj7brlz2k5pf9ys3l3740rm3bxkrdi1c6rg57y7l";
       libraryHaskellDepends = [
         base network-uri postgresql-simple split
       ];
       testHaskellDepends = [
         base postgresql-simple tasty tasty-quickcheck
       ];
       homepage = "https://github.com/futurice/postgresql-simple-url";
       description = "Parse postgres:// url into ConnectInfo";
       license = stdenv.lib.licenses.mit;
     }) {};
  "postgresql-transactional" = callPackage
    ({ mkDerivation, base, monad-control, mtl, postgresql-simple }:
     mkDerivation {
       pname = "postgresql-transactional";
       version = "1.1.1";
       sha256 = "1lsyaj19ihn93fz8hhlqsslskcr5dbilyg14pplz4cab2cg2lc7r";
       libraryHaskellDepends = [
         base monad-control mtl postgresql-simple
       ];
       description = "a transactional monad on top of postgresql-simple";
       license = stdenv.lib.licenses.mit;
     }) {};
  "pred-set" = callPackage
    ({ mkDerivation, base, hashable, hashtables, HSet }:
     mkDerivation {
       pname = "pred-set";
       version = "0.0.1";
       sha256 = "09kpqc281r4inrcnlsqspry6bvyzpa8npmjzqmmnpxscz58fq8nb";
       libraryHaskellDepends = [ base hashable hashtables HSet ];
       description = "Simple cached predicates";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "prednote" = callPackage
    ({ mkDerivation, base, bytestring, containers, contravariant
     , QuickCheck, rainbow, split, tasty, tasty-quickcheck, tasty-th
     , text, transformers
     }:
     mkDerivation {
       pname = "prednote";
       version = "0.36.0.4";
       sha256 = "139brai7fd4vwjmxb35zzpfcz01gplx9vq0f0aqbmz8sw10g5d5c";
       libraryHaskellDepends = [
         base bytestring containers contravariant rainbow split text
         transformers
       ];
       testHaskellDepends = [
         base bytestring containers contravariant QuickCheck rainbow split
         tasty tasty-quickcheck tasty-th text transformers
       ];
       homepage = "http://www.github.com/massysett/prednote";
       description = "Evaluate and display trees of predicates";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "prefix-units" = callPackage
    ({ mkDerivation, base, Cabal, HUnit, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "prefix-units";
       version = "0.2.0";
       sha256 = "1173fj11rb42l239xj8j0q12dclvspxrbc984r503gd54zwbs2h5";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [
         base Cabal HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       homepage = "https://github.com/iustin/prefix-units";
       description = "A basic library for SI/binary prefix units";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "prelude-extras" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "prelude-extras";
       version = "0.4.0.3";
       sha256 = "0xzqdf3nl2h0ra4gnslm1m1nsxlsgc0hh6ky3vn578vh11zhifq9";
       libraryHaskellDepends = [ base ];
       homepage = "http://github.com/ekmett/prelude-extras";
       description = "Higher order versions of Prelude classes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "prelude-safeenum" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "prelude-safeenum";
       version = "0.1.1.2";
       sha256 = "09wp6b7bvnp2wz0kigwm4vfca74phh3bbpqybqdgm60isfaz3yfl";
       libraryHaskellDepends = [ base ];
       homepage = "http://code.haskell.org/~wren/";
       description = "A redefinition of the Prelude's Enum class in order to render it safe";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "preprocessor-tools" = callPackage
    ({ mkDerivation, base, mtl, parsec, syb }:
     mkDerivation {
       pname = "preprocessor-tools";
       version = "1.0.1";
       sha256 = "0ngfmvw6hvbr52i01n180ls4c8rx2wk2rka6g6igpvy9x2gwjin9";
       libraryHaskellDepends = [ base mtl parsec syb ];
       homepage = "http://www.eecs.harvard.edu/~tov/pubs/haskell-session-types/";
       description = "A framework for extending Haskell's syntax via quick-and-dirty preprocessors";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "presburger" = callPackage
    ({ mkDerivation, base, containers, pretty, QuickCheck }:
     mkDerivation {
       pname = "presburger";
       version = "1.3.1";
       sha256 = "15yhqc6gk14dsqr4b0x87i1xw0sc3iscw28grg4vmcspsjxil0l6";
       revision = "1";
       editedCabalFile = "0pabxck7iyhyj7wf1bflg86xb2jip4vaspf080rfdc5s2cg0d23w";
       libraryHaskellDepends = [ base containers pretty ];
       testHaskellDepends = [ base QuickCheck ];
       homepage = "http://github.com/yav/presburger";
       description = "A decision procedure for quantifier-free linear arithmetic";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pretty-class" = callPackage
    ({ mkDerivation, base, pretty }:
     mkDerivation {
       pname = "pretty-class";
       version = "1.0.1.1";
       sha256 = "1qdfp2kpahzflq9a3idwmb0pqs4l7almxn5rbw5gp2pmdx81p3am";
       libraryHaskellDepends = [ base pretty ];
       homepage = "https://github.com/ddssff/pretty-class";
       description = "Pretty printing class similar to Show";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pretty-hex" = callPackage
    ({ mkDerivation, base, bytestring }:
     mkDerivation {
       pname = "pretty-hex";
       version = "1.0";
       sha256 = "0ylwkvvjvmpprha9nx83xb8gkhyanhk5fffc0r7lb96n4ch5z6pz";
       libraryHaskellDepends = [ base bytestring ];
       description = "A library for hex dumps of ByteStrings";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pretty-show" = callPackage
    ({ mkDerivation, array, base, filepath, ghc-prim, happy
     , haskell-lexer, pretty
     }:
     mkDerivation {
       pname = "pretty-show";
       version = "1.6.12";
       sha256 = "1fblcxw4z4ry14brin1mvwccs6hqqlhi7xhwv1f23szjq25cjacn";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         array base filepath ghc-prim haskell-lexer pretty
       ];
       libraryToolDepends = [ happy ];
       executableHaskellDepends = [ base ];
       homepage = "http://wiki.github.com/yav/pretty-show";
       description = "Tools for working with derived `Show` instances and generic inspection of values";
       license = stdenv.lib.licenses.mit;
     }) {};
  "pretty-types" = callPackage
    ({ mkDerivation, base, hspec, mtl, tagged }:
     mkDerivation {
       pname = "pretty-types";
       version = "0.2.3.1";
       sha256 = "0kvqp39q1qydgf6rlrabgjcgv53irdh9xvw2p7hazbls178ljv75";
       libraryHaskellDepends = [ base mtl tagged ];
       testHaskellDepends = [ base hspec tagged ];
       homepage = "https://github.com/sheyll/pretty-types#readme";
       description = "A small pretty printing DSL for complex types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "prettyclass" = callPackage
    ({ mkDerivation, base, pretty }:
     mkDerivation {
       pname = "prettyclass";
       version = "1.0.0.0";
       sha256 = "11l9ajci7nh1r547hx8hgxrhq8mh5gdq30pdf845wvilg9p48dz5";
       libraryHaskellDepends = [ base pretty ];
       description = "Pretty printing class similar to Show";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "primes" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "primes";
       version = "0.2.1.0";
       sha256 = "0ny6fzr967d1fifk050k95j9snnbjjif2bxf3v9s93k3zdc6bmkl";
       libraryHaskellDepends = [ base ];
       homepage = "http://github.com/sebfisch/primes";
       description = "Efficient, purely functional generation of prime numbers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "primitive" = callPackage
    ({ mkDerivation, base, ghc-prim, transformers }:
     mkDerivation {
       pname = "primitive";
       version = "0.6.1.0";
       sha256 = "1j1q7l21rdm8kfs93vibr3xwkkhqis181w2k6klfhx5g5skiywwk";
       revision = "1";
       editedCabalFile = "0gb8lcn6bd6ilfln7ah9jmqq6324vgkrgdsnz1qvlyj3bi2w5ivf";
       libraryHaskellDepends = [ base ghc-prim transformers ];
       testHaskellDepends = [ base ghc-prim ];
       homepage = "https://github.com/haskell/primitive";
       description = "Primitive memory-related operations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "process-extras" = callPackage
    ({ mkDerivation, base, bytestring, deepseq, generic-deriving
     , ListLike, process, text
     }:
     mkDerivation {
       pname = "process-extras";
       version = "0.4.1.4";
       sha256 = "1h6g73ll26bs8bkgpdalpwkqvz8vnphjssn87yv5qq7zb28r9k85";
       libraryHaskellDepends = [
         base bytestring deepseq generic-deriving ListLike process text
       ];
       homepage = "https://github.com/seereason/process-extras";
       description = "Process extras";
       license = stdenv.lib.licenses.mit;
     }) {};
  "product-profunctors" = callPackage
    ({ mkDerivation, base, contravariant, profunctors, tagged
     , template-haskell
     }:
     mkDerivation {
       pname = "product-profunctors";
       version = "0.7.1.0";
       sha256 = "0d6kp4dpdhi0jsmajdyp2c1bxgzrph8imb4jnq1jajrkv7ms004q";
       revision = "1";
       editedCabalFile = "1rds0bhac5f45nsa0riv3b730vmxqkmh0s305bic32a4mljd3ajn";
       libraryHaskellDepends = [
         base contravariant profunctors tagged template-haskell
       ];
       testHaskellDepends = [ base profunctors ];
       homepage = "https://github.com/tomjaguarpaw/product-profunctors";
       description = "product-profunctors";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "profiteur" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, bytestring, filepath
     , text, unordered-containers, vector
     }:
     mkDerivation {
       pname = "profiteur";
       version = "0.3.0.3";
       sha256 = "0i7130ndfz54aqyv1pf2qhh5r655zq6f1ynbqkj4phi6k02jk6ag";
       isLibrary = false;
       isExecutable = true;
       enableSeparateDataOutput = true;
       executableHaskellDepends = [
         aeson attoparsec base bytestring filepath text unordered-containers
         vector
       ];
       doHaddock = false;
       homepage = "http://github.com/jaspervdj/profiteur";
       description = "Treemap visualiser for GHC prof files";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "profunctor-extras" = callPackage
    ({ mkDerivation, base, profunctors }:
     mkDerivation {
       pname = "profunctor-extras";
       version = "4.0";
       sha256 = "10j458liqlyz5s9gkg95c6aq7ap5fa7d8pc7hygy71nn87pm2g4a";
       libraryHaskellDepends = [ base profunctors ];
       doHaddock = false;
       homepage = "http://github.com/ekmett/profunctor-extras/";
       description = "This package has been absorbed into profunctors 4.0";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "profunctors" = callPackage
    ({ mkDerivation, base, base-orphans, bifunctors, comonad
     , contravariant, distributive, tagged, transformers
     }:
     mkDerivation {
       pname = "profunctors";
       version = "5.2";
       sha256 = "1905xv9y2sx1iya0zlrx7nxhlwap5vn144nxg7s8zsj58xff59w7";
       libraryHaskellDepends = [
         base base-orphans bifunctors comonad contravariant distributive
         tagged transformers
       ];
       homepage = "http://github.com/ekmett/profunctors/";
       description = "Profunctors";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "project-template" = callPackage
    ({ mkDerivation, base, base64-bytestring, bytestring, conduit
     , conduit-extra, containers, directory, filepath, hspec, mtl
     , QuickCheck, resourcet, text, transformers
     }:
     mkDerivation {
       pname = "project-template";
       version = "0.2.0";
       sha256 = "0433a2cmximz2jbg0m97h80pvmb7vafjvw3qzjpsncavg38xgaxf";
       libraryHaskellDepends = [
         base base64-bytestring bytestring conduit conduit-extra containers
         directory filepath mtl resourcet text transformers
       ];
       testHaskellDepends = [
         base base64-bytestring bytestring conduit containers hspec
         QuickCheck resourcet text transformers
       ];
       homepage = "https://github.com/fpco/haskell-ide";
       description = "Specify Haskell project templates and generate files";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "projectroot" = callPackage
    ({ mkDerivation, base, directory, hspec, QuickCheck }:
     mkDerivation {
       pname = "projectroot";
       version = "0.2.0.1";
       sha256 = "1f0sgrdq83af1wff5pmzfh44rmzmc0k8axhddz7rkl9yaj330xak";
       libraryHaskellDepends = [ base directory ];
       testHaskellDepends = [ base hspec QuickCheck ];
       homepage = "https://github.com/yamadapc/haskell-projectroot";
       description = "Bindings to the projectroot C logic";
       license = stdenv.lib.licenses.mit;
     }) {};
  "prometheus-client" = callPackage
    ({ mkDerivation, atomic-primops, base, bytestring, containers
     , criterion, doctest, hspec, mtl, QuickCheck, random
     , random-shuffle, stm, time, transformers, utf8-string
     }:
     mkDerivation {
       pname = "prometheus-client";
       version = "0.1.0.1";
       sha256 = "0bvp40rdlq8f6rh5v75pgqnmiwz85j960sfi22y7s0r5vykbgh5x";
       libraryHaskellDepends = [
         atomic-primops base bytestring containers mtl stm time transformers
         utf8-string
       ];
       testHaskellDepends = [
         atomic-primops base bytestring containers doctest hspec mtl
         QuickCheck random-shuffle stm time transformers utf8-string
       ];
       benchmarkHaskellDepends = [
         base bytestring criterion random utf8-string
       ];
       homepage = "https://github.com/fimad/prometheus-haskell";
       description = "Haskell client library for http://prometheus.io.";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "prometheus-metrics-ghc" = callPackage
    ({ mkDerivation, base, doctest, prometheus-client, utf8-string }:
     mkDerivation {
       pname = "prometheus-metrics-ghc";
       version = "0.1.0.1";
       sha256 = "15a7hli2fsjmgjnvhdsv1572nqj3i214b0r9bygdang4cjrjv10p";
       libraryHaskellDepends = [ base prometheus-client utf8-string ];
       testHaskellDepends = [ base doctest prometheus-client ];
       homepage = "https://github.com/fimad/prometheus-haskell";
       description = "Metrics exposing GHC runtime information for use with prometheus-client";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "prompt" = callPackage
    ({ mkDerivation, base, base-compat, mtl, transformers
     , transformers-compat
     }:
     mkDerivation {
       pname = "prompt";
       version = "0.1.1.2";
       sha256 = "1wjil5rrh2flm3ikjk9f3i6y015vm0bdxndn8mv78l66yhg73db7";
       libraryHaskellDepends = [
         base base-compat mtl transformers transformers-compat
       ];
       homepage = "https://github.com/mstksg/prompt";
       description = "Monad (and transformer) for deferred-effect pure prompt-response queries";
       license = stdenv.lib.licenses.mit;
     }) {};
  "protobuf" = callPackage
    ({ mkDerivation, base, base-orphans, bytestring, cereal, containers
     , data-binary-ieee754, deepseq, hex, HUnit, mtl, QuickCheck, tagged
     , tasty, tasty-hunit, tasty-quickcheck, text, unordered-containers
     }:
     mkDerivation {
       pname = "protobuf";
       version = "0.2.1.1";
       sha256 = "0b3jbr6s8m21q4yiikvjv74j9w744frhrpsd1d6203b7bc49lrfd";
       libraryHaskellDepends = [
         base base-orphans bytestring cereal data-binary-ieee754 deepseq mtl
         text unordered-containers
       ];
       testHaskellDepends = [
         base bytestring cereal containers hex HUnit mtl QuickCheck tagged
         tasty tasty-hunit tasty-quickcheck text unordered-containers
       ];
       homepage = "https://github.com/alphaHeavy/protobuf";
       description = "Google Protocol Buffers via GHC.Generics";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "protobuf-simple" = callPackage
    ({ mkDerivation, base, binary, bytestring, containers
     , data-binary-ieee754, directory, filepath, hspec, mtl, parsec
     , QuickCheck, quickcheck-instances, split, text
     }:
     mkDerivation {
       pname = "protobuf-simple";
       version = "0.1.0.2";
       sha256 = "1wr20v86wv8cnsdhgkbayr41jvcaqvybqnxwgh19c5zisgzpjazg";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base binary bytestring containers data-binary-ieee754 mtl text
       ];
       executableHaskellDepends = [
         base containers directory filepath mtl parsec split text
       ];
       testHaskellDepends = [
         base binary bytestring containers data-binary-ieee754 filepath
         hspec parsec QuickCheck quickcheck-instances split text
       ];
       homepage = "https://github.com/sru-systems/protobuf-simple";
       description = "Simple Protocol Buffers library (proto2)";
       license = stdenv.lib.licenses.mit;
     }) {};
  "protocol-buffers" = callPackage
    ({ mkDerivation, array, base, binary, bytestring, containers
     , directory, filepath, mtl, parsec, syb, utf8-string
     }:
     mkDerivation {
       pname = "protocol-buffers";
       version = "2.4.0";
       sha256 = "0sgybwg7js8dmzibr6cxn0p1n0m8kc9a3xqdbz7l8d4ili4q4khw";
       libraryHaskellDepends = [
         array base binary bytestring containers directory filepath mtl
         parsec syb utf8-string
       ];
       homepage = "https://github.com/k-bx/protocol-buffers";
       description = "Parse Google Protocol Buffer specifications";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "protocol-buffers-descriptor" = callPackage
    ({ mkDerivation, base, bytestring, containers, protocol-buffers }:
     mkDerivation {
       pname = "protocol-buffers-descriptor";
       version = "2.4.0";
       sha256 = "1x1xnb3ldgic9y6hskr4h7xdd4lxql2r5fcmsw366b0w631vr57q";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base bytestring containers protocol-buffers
       ];
       homepage = "https://github.com/k-bx/protocol-buffers";
       description = "Text.DescriptorProto.Options and code generated from the Google Protocol Buffer specification";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "protolude" = callPackage
    ({ mkDerivation, async, base, bytestring, containers, deepseq
     , ghc-prim, mtl, safe, stm, text, transformers
     }:
     mkDerivation {
       pname = "protolude";
       version = "0.1.10";
       sha256 = "19f7w4n1k3xb3y00b10rxr781yxivl7byh7hrnfk5mzh32jrcchn";
       libraryHaskellDepends = [
         async base bytestring containers deepseq ghc-prim mtl safe stm text
         transformers
       ];
       homepage = "https://github.com/sdiehl/protolude";
       description = "A sensible set of defaults for writing custom Preludes";
       license = stdenv.lib.licenses.mit;
     }) {};
  "proxied" = callPackage
    ({ mkDerivation, base, generic-deriving, tagged }:
     mkDerivation {
       pname = "proxied";
       version = "0.2";
       sha256 = "02zf3ix122w1yxkv1hhxl9rf8b052yd3c0s2m933sdzmn9bs3wvn";
       libraryHaskellDepends = [ base generic-deriving tagged ];
       homepage = "https://github.com/RyanGlScott/proxied";
       description = "Make functions consume Proxy instead of undefined";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "psql-helpers" = callPackage
    ({ mkDerivation, base, postgresql-simple }:
     mkDerivation {
       pname = "psql-helpers";
       version = "0.1.0.0";
       sha256 = "1x0r68mfv56rp87j8ick875wbq3qzkii9ia60amx6xr40x1acg7i";
       libraryHaskellDepends = [ base postgresql-simple ];
       homepage = "http://github.com/agrafix/psql-helpers#readme";
       description = "A small collection of helper functions to generate postgresql queries";
       license = stdenv.lib.licenses.mit;
     }) {};
  "psqueues" = callPackage
    ({ mkDerivation, array, base, containers, criterion, deepseq
     , fingertree-psqueue, ghc-prim, hashable, HUnit, mtl, PSQueue
     , QuickCheck, random, tagged, test-framework, test-framework-hunit
     , test-framework-quickcheck2, unordered-containers
     }:
     mkDerivation {
       pname = "psqueues";
       version = "0.2.2.3";
       sha256 = "1dd6xv1wjxj1xinx155b14hijw8fafrg4096srzdzj7xyqq7qxbd";
       libraryHaskellDepends = [ base deepseq ghc-prim hashable ];
       testHaskellDepends = [
         array base deepseq ghc-prim hashable HUnit QuickCheck tagged
         test-framework test-framework-hunit test-framework-quickcheck2
       ];
       benchmarkHaskellDepends = [
         base containers criterion deepseq fingertree-psqueue ghc-prim
         hashable mtl PSQueue random unordered-containers
       ];
       description = "Pure priority search queues";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "publicsuffix" = callPackage
    ({ mkDerivation, base, criterion, filepath, hspec, random
     , template-haskell
     }:
     mkDerivation {
       pname = "publicsuffix";
       version = "0.20160716";
       sha256 = "0mk9jn8nbm3k0jd3wdg5c43n06rgi4md5n936c3q8hlmj2czvmqr";
       libraryHaskellDepends = [ base filepath template-haskell ];
       testHaskellDepends = [ base hspec ];
       benchmarkHaskellDepends = [ base criterion random ];
       homepage = "https://github.com/wereHamster/publicsuffix-haskell/";
       description = "The publicsuffix list exposed as proper Haskell types";
       license = stdenv.lib.licenses.mit;
     }) {};
  "pure-cdb" = callPackage
    ({ mkDerivation, base, binary, bytestring, containers, directory
     , mtl, test-simple, Unixutils, vector
     }:
     mkDerivation {
       pname = "pure-cdb";
       version = "0.1.2";
       sha256 = "0h7qycpz86r29yshbqm5cmvamv65jj66cs9m03y6qzxda8q8l8i5";
       libraryHaskellDepends = [
         base binary bytestring containers directory mtl vector
       ];
       testHaskellDepends = [
         base bytestring containers mtl test-simple Unixutils vector
       ];
       doCheck = false;
       homepage = "https://github.com/bosu/pure-cdb";
       description = "Another pure-haskell CDB (Constant Database) implementation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pure-io" = callPackage
    ({ mkDerivation, base, containers, mtl, safe }:
     mkDerivation {
       pname = "pure-io";
       version = "0.2.1";
       sha256 = "0pzvkd8jxw859s187n972yaq5wmwi00cxwhivgffr7z29hr0zvx9";
       libraryHaskellDepends = [ base containers mtl safe ];
       description = "Pure IO monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pureMD5" = callPackage
    ({ mkDerivation, base, binary, bytestring, cereal, crypto-api
     , crypto-api-tests, pretty-hex, QuickCheck, tagged, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "pureMD5";
       version = "2.1.3";
       sha256 = "0zdilz41cla2ck7mcw1a9702gyg2abq94mqahr4vci9sbs53bwxy";
       libraryHaskellDepends = [
         base binary bytestring cereal crypto-api tagged
       ];
       testHaskellDepends = [
         base binary bytestring cereal crypto-api-tests pretty-hex
         QuickCheck test-framework test-framework-quickcheck2
       ];
       description = "A Haskell-only implementation of the MD5 digest (hash) algorithm";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "purescript" = callPackage
    ({ mkDerivation, aeson, aeson-better-errors, ansi-terminal
     , ansi-wl-pprint, base, base-compat, bower-json, boxes, bytestring
     , clock, containers, directory, dlist, edit-distance, file-embed
     , filepath, fsnotify, Glob, haskeline, hspec, hspec-discover
     , http-client, http-types, HUnit, language-javascript, lifted-base
     , monad-control, monad-logger, mtl, network, optparse-applicative
     , parallel, parsec, pattern-arrows, pipes, pipes-http, process
     , protolude, regex-tdfa, safe, semigroups, silently, sourcemap
     , spdx, split, stm, syb, text, time, transformers
     , transformers-base, transformers-compat, unordered-containers
     , utf8-string, vector, wai, wai-websockets, warp, websockets
     }:
     mkDerivation {
       pname = "purescript";
       version = "0.9.3";
       sha256 = "1rci7friyz44nc5ipflb72pmhlimd37gqgrx21l7b8q84lijhihf";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson aeson-better-errors ansi-terminal base base-compat bower-json
         boxes bytestring clock containers directory dlist edit-distance
         filepath fsnotify Glob haskeline http-client http-types
         language-javascript lifted-base monad-control monad-logger mtl
         parallel parsec pattern-arrows pipes pipes-http process protolude
         regex-tdfa safe semigroups sourcemap spdx split stm syb text time
         transformers transformers-base transformers-compat
         unordered-containers utf8-string vector
       ];
       executableHaskellDepends = [
         aeson ansi-terminal ansi-wl-pprint base base-compat boxes
         bytestring containers directory file-embed filepath Glob haskeline
         http-types monad-logger mtl network optparse-applicative parsec
         process protolude split stm text time transformers
         transformers-compat utf8-string wai wai-websockets warp websockets
       ];
       testHaskellDepends = [
         aeson aeson-better-errors base base-compat boxes bytestring
         containers directory filepath Glob haskeline hspec hspec-discover
         HUnit mtl optparse-applicative parsec process protolude silently
         stm text time transformers transformers-compat utf8-string vector
       ];
       doCheck = false;
       homepage = "http://www.purescript.org/";
       description = "PureScript Programming Language Compiler";
       license = stdenv.lib.licenses.mit;
     }) {};
  "purescript-bridge" = callPackage
    ({ mkDerivation, base, containers, directory, filepath
     , generic-deriving, hspec, hspec-expectations-pretty-diff, lens
     , mtl, text, transformers
     }:
     mkDerivation {
       pname = "purescript-bridge";
       version = "0.8.0.1";
       sha256 = "0aa32a83hyaamklxl17lnp7lmblrarp1crm2ihvy0lvhcdzzhg5b";
       libraryHaskellDepends = [
         base containers directory filepath generic-deriving lens mtl text
         transformers
       ];
       testHaskellDepends = [
         base containers hspec hspec-expectations-pretty-diff text
       ];
       description = "Generate PureScript data types from Haskell data types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pwstore-fast" = callPackage
    ({ mkDerivation, base, base64-bytestring, binary, byteable
     , bytestring, cryptohash, random
     }:
     mkDerivation {
       pname = "pwstore-fast";
       version = "2.4.4";
       sha256 = "1cpvlwzg3qznhygrr78f75p65mnljd9v5cvnagfxjqppnrkay6bj";
       libraryHaskellDepends = [
         base base64-bytestring binary byteable bytestring cryptohash random
       ];
       homepage = "https://github.com/PeterScott/pwstore";
       description = "Secure password storage";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pwstore-purehaskell" = callPackage
    ({ mkDerivation, base, base64-bytestring, byteable, bytestring
     , random, SHA
     }:
     mkDerivation {
       pname = "pwstore-purehaskell";
       version = "2.1.4";
       sha256 = "1g7lmlgw8iscbbs96r3a534cf46fyks49b1f9y7hv25ny4wp1p9c";
       libraryHaskellDepends = [
         base base64-bytestring byteable bytestring random SHA
       ];
       homepage = "https://github.com/PeterScott/pwstore";
       description = "Secure password storage, in pure Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "quantum-random" = callPackage
    ({ mkDerivation, aeson, ansi-terminal, ansigraph, base, bytestring
     , directory, haskeline, hspec, http-conduit, mtl, QuickCheck
     , terminal-size, text
     }:
     mkDerivation {
       pname = "quantum-random";
       version = "0.6.4";
       sha256 = "16qk4m6jgf4phmc0zxw11as9rlvspxpqza5k318bra9f9ybn253y";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson ansi-terminal ansigraph base bytestring directory
         http-conduit terminal-size text
       ];
       executableHaskellDepends = [ base haskeline mtl ];
       testHaskellDepends = [ base hspec QuickCheck ];
       homepage = "http://github.com/BlackBrane/quantum-random/";
       description = "Retrieve, store and manage real quantum random data";
       license = stdenv.lib.licenses.mit;
     }) {};
  "questioner" = callPackage
    ({ mkDerivation, ansi-terminal, base, readline, terminal-size }:
     mkDerivation {
       pname = "questioner";
       version = "0.1.1.0";
       sha256 = "05q64mslkbg017fpjx7ma2al6iz5zjrkyzipm8p86n8zcx3l1aw3";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         ansi-terminal base readline terminal-size
       ];
       executableHaskellDepends = [ base ];
       homepage = "https://github.com/yamadapc/haskell-questioner.git";
       description = "A package for prompting values from the command-line";
       license = stdenv.lib.licenses.mit;
     }) {};
  "quickbench" = callPackage
    ({ mkDerivation, base, containers, directory, docopt, pretty-show
     , process, safe, split, tabular, time
     }:
     mkDerivation {
       pname = "quickbench";
       version = "1.0";
       sha256 = "09mrhwvz0jnjrxgj3as7d4jl739gakli5crxfmp390x6a0p2bzlb";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base containers directory docopt pretty-show process safe split
         tabular time
       ];
       executableHaskellDepends = [ base process ];
       testHaskellDepends = [ base ];
       homepage = "https://github.com/simonmichael/quickbench#readme";
       description = "quick & easy benchmarking of command-line programs";
       license = "GPL";
     }) {};
  "quickcheck-arbitrary-adt" = callPackage
    ({ mkDerivation, base, hspec, lens, QuickCheck, template-haskell
     , transformers
     }:
     mkDerivation {
       pname = "quickcheck-arbitrary-adt";
       version = "0.2.0.0";
       sha256 = "1ny04h3kxqdhlfxbvcdzsl6n7vgs5xdk9p0b9hb2jpvqlazqv6fr";
       libraryHaskellDepends = [ base QuickCheck ];
       testHaskellDepends = [
         base hspec lens QuickCheck template-haskell transformers
       ];
       homepage = "https://github.com/plow-technologies/quickcheck-arbitrary-adt#readme";
       description = "Generic typeclasses for generating arbitrary ADTs";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "quickcheck-assertions" = callPackage
    ({ mkDerivation, base, hspec, ieee754, QuickCheck }:
     mkDerivation {
       pname = "quickcheck-assertions";
       version = "0.2.0";
       sha256 = "0h7pa84hzy3bhv1acf1rvvw3lza0m8shd8a0vykzpx8lnkxbl3v0";
       libraryHaskellDepends = [ base ieee754 QuickCheck ];
       testHaskellDepends = [ base hspec ieee754 QuickCheck ];
       homepage = "https://github.com/s9gf4ult/quickcheck-assertions";
       description = "HUnit like assertions for QuickCheck";
       license = stdenv.lib.licenses.lgpl3;
     }) {};
  "quickcheck-combinators" = callPackage
    ({ mkDerivation, base, QuickCheck, unfoldable-restricted }:
     mkDerivation {
       pname = "quickcheck-combinators";
       version = "0.0.1";
       sha256 = "13gc01lfrsv9yy3lk4s3z4nz4jwjyp6c81xy7khq1rck9zs4ycxw";
       libraryHaskellDepends = [ base QuickCheck unfoldable-restricted ];
       description = "Simple type-level combinators for augmenting QuickCheck instances";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "quickcheck-instances" = callPackage
    ({ mkDerivation, array, base, bytestring, containers, hashable
     , old-time, QuickCheck, scientific, text, time
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "quickcheck-instances";
       version = "0.3.12";
       sha256 = "1wwvkzpams7i0j7nk5qj8vvhj8x5zcbgbgrpczszgvshva4bkmfx";
       revision = "2";
       editedCabalFile = "1v1r7gidkjc2v4dw1id57raqnjqv4rc10pa2l6xhhg0dzrnw28a3";
       libraryHaskellDepends = [
         array base bytestring containers hashable old-time QuickCheck
         scientific text time unordered-containers vector
       ];
       homepage = "https://github.com/aslatter/qc-instances";
       description = "Common quickcheck instances";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "quickcheck-io" = callPackage
    ({ mkDerivation, base, HUnit, QuickCheck }:
     mkDerivation {
       pname = "quickcheck-io";
       version = "0.1.4";
       sha256 = "179qcy15yxgllsjc2czm2jsxaryfd6mcsr07ac43kc3i11cm0dvb";
       libraryHaskellDepends = [ base HUnit QuickCheck ];
       homepage = "https://github.com/hspec/quickcheck-io#readme";
       description = "Use HUnit assertions as QuickCheck properties";
       license = stdenv.lib.licenses.mit;
     }) {};
  "quickcheck-properties" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "quickcheck-properties";
       version = "0.1";
       sha256 = "0hr61w1wpah1p4h87iz17aby53ysa8waqsl0als8b69in0zyv29w";
       libraryHaskellDepends = [ base ];
       description = "QuickCheck properties for standard type classes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "quickcheck-simple" = callPackage
    ({ mkDerivation, base, QuickCheck }:
     mkDerivation {
       pname = "quickcheck-simple";
       version = "0.1.0.1";
       sha256 = "166mavvz2rsi0clxhv9vkqdiyiird0xj8mdlfbav664qn5mn2yx5";
       libraryHaskellDepends = [ base QuickCheck ];
       description = "Test properties and default-mains for QuickCheck";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "quickcheck-text" = callPackage
    ({ mkDerivation, base, binary, bytestring, QuickCheck, text }:
     mkDerivation {
       pname = "quickcheck-text";
       version = "0.1.2.1";
       sha256 = "02dbs0k6igmsa1hcw8yfvp09v7038vp4zlsp9706km3cmswgshj4";
       libraryHaskellDepends = [ base binary bytestring QuickCheck text ];
       testHaskellDepends = [ base bytestring QuickCheck text ];
       homepage = "https://github.com/olorin/quickcheck-text";
       description = "Alternative arbitrary instance for Text";
       license = stdenv.lib.licenses.mit;
     }) {};
  "quickcheck-unicode" = callPackage
    ({ mkDerivation, base, QuickCheck }:
     mkDerivation {
       pname = "quickcheck-unicode";
       version = "1.0.0.1";
       sha256 = "1a8nl6x7l9b22yx61wm0bh2n1xzb1hd5i5zgg1w4fpaivjnrrhi4";
       libraryHaskellDepends = [ base QuickCheck ];
       homepage = "https://github.com/bos/quickcheck-unicode";
       description = "Generator and shrink functions for testing Unicode-related software";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "rainbow" = callPackage
    ({ mkDerivation, base, bytestring, lens-simple, process, QuickCheck
     , text
     }:
     mkDerivation {
       pname = "rainbow";
       version = "0.28.0.4";
       sha256 = "0cc89sn7ndy45ih3zcim076cw9mr5gx5ywfyqskaj875igw9d4l2";
       libraryHaskellDepends = [
         base bytestring lens-simple process text
       ];
       testHaskellDepends = [
         base bytestring lens-simple process QuickCheck text
       ];
       homepage = "https://www.github.com/massysett/rainbow";
       description = "Print text to terminal with colors and effects";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "rainbox" = callPackage
    ({ mkDerivation, base, bytestring, containers, lens-simple
     , QuickCheck, rainbow, tasty, tasty-quickcheck, text
     }:
     mkDerivation {
       pname = "rainbox";
       version = "0.18.0.10";
       sha256 = "018vp9vfl2302mflkq48bv7ywmm2dd6sx4v4ada49kmlcmayk4nn";
       libraryHaskellDepends = [
         base bytestring containers lens-simple rainbow text
       ];
       testHaskellDepends = [
         base bytestring containers lens-simple QuickCheck rainbow tasty
         tasty-quickcheck text
       ];
       homepage = "http://www.github.com/massysett/rainbox";
       description = "Two-dimensional box pretty printing, with colors";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "random" = callPackage
    ({ mkDerivation, base, time }:
     mkDerivation {
       pname = "random";
       version = "1.1";
       sha256 = "0nis3lbkp8vfx8pkr6v7b7kr5m334bzb0fk9vxqklnp2aw8a865p";
       libraryHaskellDepends = [ base time ];
       testHaskellDepends = [ base ];
       description = "random number library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "random-fu" = callPackage
    ({ mkDerivation, base, erf, log-domain, math-functions, monad-loops
     , mtl, random-shuffle, random-source, rvar, syb, template-haskell
     , transformers, vector
     }:
     mkDerivation {
       pname = "random-fu";
       version = "0.2.7.0";
       sha256 = "1i5hg74gv6885vnhmyknydhsyrps2h5zjiq4dv992jg3xnrs9cxn";
       libraryHaskellDepends = [
         base erf log-domain math-functions monad-loops mtl random-shuffle
         random-source rvar syb template-haskell transformers vector
       ];
       homepage = "https://github.com/mokus0/random-fu";
       description = "Random number generation";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "random-shuffle" = callPackage
    ({ mkDerivation, base, MonadRandom, random }:
     mkDerivation {
       pname = "random-shuffle";
       version = "0.0.4";
       sha256 = "0586bnlh0g2isc44jbjvafkcl4yw6lp1db8x6vr0pza0y08l8w2j";
       libraryHaskellDepends = [ base MonadRandom random ];
       description = "Random shuffle implementation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "random-source" = callPackage
    ({ mkDerivation, base, flexible-defaults, mersenne-random-pure64
     , mtl, mwc-random, random, stateref, syb, template-haskell
     , th-extras
     }:
     mkDerivation {
       pname = "random-source";
       version = "0.3.0.6";
       sha256 = "0wsv41kpswqml04ym5bq2nan4i637f7h3fmvda2zy506xwxfrpzk";
       libraryHaskellDepends = [
         base flexible-defaults mersenne-random-pure64 mtl mwc-random random
         stateref syb template-haskell th-extras
       ];
       homepage = "https://github.com/mokus0/random-fu";
       description = "Generic basis for random number generators";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "random-tree" = callPackage
    ({ mkDerivation, base, containers, lens, MonadRandom, mtl, random
     , random-shuffle, transformers, tree-fun
     }:
     mkDerivation {
       pname = "random-tree";
       version = "0.6.0.5";
       sha256 = "1hhwb4kah1j1hjsqwys24g0csq1hvz0vlgf6z9vwiql4w5y4wq1b";
       libraryHaskellDepends = [
         base containers lens MonadRandom mtl random random-shuffle
         transformers tree-fun
       ];
       description = "Create random trees";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "range" = callPackage
    ({ mkDerivation, base, Cabal, free, parsec, QuickCheck, random
     , test-framework, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "range";
       version = "0.1.2.0";
       sha256 = "028bigaq4vk5ykzf04f5hi3g37gxzzp6q24bjcb3gjfzcgy7z6ab";
       libraryHaskellDepends = [ base free parsec ];
       testHaskellDepends = [
         base Cabal free QuickCheck random test-framework
         test-framework-quickcheck2
       ];
       homepage = "https://bitbucket.org/robertmassaioli/range";
       description = "This has a bunch of code for specifying and managing ranges in your code";
       license = stdenv.lib.licenses.mit;
     }) {};
  "range-set-list" = callPackage
    ({ mkDerivation, base, containers, deepseq, hashable, semigroups
     , tasty, tasty-quickcheck
     }:
     mkDerivation {
       pname = "range-set-list";
       version = "0.1.2.0";
       sha256 = "0rxb5dq228xypnilqvjyn97knlzfc7fl771w4qgziwfw8zs9qx1v";
       libraryHaskellDepends = [
         base containers deepseq hashable semigroups
       ];
       testHaskellDepends = [
         base containers deepseq hashable semigroups tasty tasty-quickcheck
       ];
       homepage = "https://github.com/phadej/range-set-list#readme";
       description = "Memory efficient sets with ranges of elements";
       license = stdenv.lib.licenses.mit;
     }) {};
  "rank1dynamic" = callPackage
    ({ mkDerivation, base, binary, HUnit, test-framework
     , test-framework-hunit
     }:
     mkDerivation {
       pname = "rank1dynamic";
       version = "0.3.3.0";
       sha256 = "02wg4fw6p6cwy4mg07klzdmgs7m5zn9p7vj3j20frwsw8zldscna";
       libraryHaskellDepends = [ base binary ];
       testHaskellDepends = [
         base HUnit test-framework test-framework-hunit
       ];
       homepage = "http://haskell-distributed.github.com";
       description = "Like Data.Dynamic/Data.Typeable but with support for rank-1 polymorphic types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "rasterific-svg" = callPackage
    ({ mkDerivation, base, binary, bytestring, containers, directory
     , filepath, FontyFruity, JuicyPixels, lens, linear, mtl
     , optparse-applicative, Rasterific, scientific, svg-tree, text
     , transformers, vector
     }:
     mkDerivation {
       pname = "rasterific-svg";
       version = "0.3.1.2";
       sha256 = "12d768rp2xx4mpz42csap4naakvm4vnj4iiavq1m1w3kgnlhxjc3";
       revision = "1";
       editedCabalFile = "11m5vygdbzpyd35mndjsf8x4yilg2mmx6bbhsvs371a7hmfxnrhs";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base binary bytestring containers directory filepath FontyFruity
         JuicyPixels lens linear mtl Rasterific scientific svg-tree text
         transformers vector
       ];
       executableHaskellDepends = [
         base directory filepath FontyFruity JuicyPixels
         optparse-applicative Rasterific svg-tree
       ];
       description = "SVG renderer based on Rasterific";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ratel" = callPackage
    ({ mkDerivation, aeson, base, bytestring, case-insensitive
     , containers, http-client, http-client-tls, http-types, tasty
     , tasty-hspec, text, uuid
     }:
     mkDerivation {
       pname = "ratel";
       version = "0.3.2";
       sha256 = "0wxsqrgw325f8l6qmnzr4jwzpalvlafdjczpzm4ws22jv33kif4r";
       libraryHaskellDepends = [
         aeson base bytestring case-insensitive containers http-client
         http-client-tls http-types text uuid
       ];
       testHaskellDepends = [ base tasty tasty-hspec ];
       homepage = "https://github.com/tfausak/ratel#readme";
       description = "Notify Honeybadger about exceptions";
       license = stdenv.lib.licenses.mit;
     }) {};
  "ratel-wai" = callPackage
    ({ mkDerivation, base, bytestring, case-insensitive, containers
     , http-client, ratel, wai
     }:
     mkDerivation {
       pname = "ratel-wai";
       version = "0.2.0";
       sha256 = "04arqf5925dzr5wdgzlxzxglxzlnn72jhn2gibbbllk2xq8w4517";
       libraryHaskellDepends = [
         base bytestring case-insensitive containers http-client ratel wai
       ];
       homepage = "https://github.com/tfausak/ratel-wai#readme";
       description = "Notify Honeybadger about exceptions via a WAI middleware";
       license = stdenv.lib.licenses.mit;
     }) {};
  "raw-strings-qq" = callPackage
    ({ mkDerivation, base, HUnit, template-haskell }:
     mkDerivation {
       pname = "raw-strings-qq";
       version = "1.1";
       sha256 = "1lxy1wy3awf52968iy5y9r5z4qgnn2sxkdrh7js3m9gadb11w09f";
       libraryHaskellDepends = [ base template-haskell ];
       testHaskellDepends = [ base HUnit ];
       homepage = "https://github.com/23Skidoo/raw-strings-qq";
       description = "Raw string literals for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "read-editor" = callPackage
    ({ mkDerivation, base, directory, process }:
     mkDerivation {
       pname = "read-editor";
       version = "0.1.0.2";
       sha256 = "11bhfyzvw305avnp9abf45jvwflwdh8gshx5l08szyr3d2lfr2pd";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base directory process ];
       homepage = "https://github.com/yamadapc/haskell-read-editor";
       description = "Opens a temporary file on the system's EDITOR and returns the resulting edits";
       license = stdenv.lib.licenses.mit;
     }) {};
  "read-env-var" = callPackage
    ({ mkDerivation, base, doctest, Glob }:
     mkDerivation {
       pname = "read-env-var";
       version = "0.1.0.1";
       sha256 = "1r9g1wfwzjwbg87imf3zjlnzyxkfqxn47wcjgp7vl4dfa752r5i1";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base doctest Glob ];
       homepage = "https://github.com/cdepillabout/read-env-var#readme";
       description = "Functions for safely reading environment variables";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "readable" = callPackage
    ({ mkDerivation, base, bytestring, text }:
     mkDerivation {
       pname = "readable";
       version = "0.3.1";
       sha256 = "1ja39cg26wy2fs00gi12x7iq5k8i366pbqi3p916skfa5jnkfc3h";
       libraryHaskellDepends = [ base bytestring text ];
       homepage = "https://github.com/mightybyte/readable";
       description = "Reading from Text and ByteString";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "readline" = callPackage
    ({ mkDerivation, base, ncurses, process, readline }:
     mkDerivation {
       pname = "readline";
       version = "1.0.3.0";
       sha256 = "1sszlx34qa88fad3wlhd4rkb1my1nrpzvyd8vq7dn806j5sf3ff0";
       libraryHaskellDepends = [ base process ];
       librarySystemDepends = [ ncurses readline ];
       description = "An interface to the GNU readline library";
       license = "GPL";
     }) {inherit (pkgs) ncurses; inherit (pkgs) readline;};
  "rebase" = callPackage
    ({ mkDerivation, base, base-prelude, bifunctors, bytestring
     , containers, contravariant, contravariant-extras, deepseq, dlist
     , either, fail, hashable, mtl, profunctors, scientific
     , semigroupoids, semigroups, stm, text, time, transformers
     , unordered-containers, uuid, vector, void
     }:
     mkDerivation {
       pname = "rebase";
       version = "1.0.6";
       sha256 = "00gsmcr8414b9pjwrhzsayymg3kdbvcqibq8929si2ghndx23x6w";
       libraryHaskellDepends = [
         base base-prelude bifunctors bytestring containers contravariant
         contravariant-extras deepseq dlist either fail hashable mtl
         profunctors scientific semigroupoids semigroups stm text time
         transformers unordered-containers uuid vector void
       ];
       homepage = "https://github.com/nikita-volkov/rebase";
       description = "A more progressive alternative to the \"base\" package";
       license = stdenv.lib.licenses.mit;
     }) {};
  "redis-io" = callPackage
    ({ mkDerivation, async, attoparsec, auto-update, base, bytestring
     , bytestring-conversion, containers, criterion, exceptions, hedis
     , iproute, monad-control, mtl, network, operational, redis-resp
     , resource-pool, semigroups, stm, tasty, tasty-hunit, time, tinylog
     , transformers, transformers-base
     }:
     mkDerivation {
       pname = "redis-io";
       version = "0.7.0";
       sha256 = "06g630jrb0zxbai4n251plprafn5s9nywd3hgg14vz999wccns0z";
       libraryHaskellDepends = [
         attoparsec auto-update base bytestring containers exceptions
         iproute monad-control mtl network operational redis-resp
         resource-pool semigroups stm time tinylog transformers
         transformers-base
       ];
       testHaskellDepends = [
         async base bytestring bytestring-conversion containers redis-resp
         tasty tasty-hunit tinylog transformers
       ];
       benchmarkHaskellDepends = [
         base bytestring criterion hedis redis-resp tinylog transformers
       ];
       doCheck = false;
       homepage = "https://gitlab.com/twittner/redis-io/";
       description = "Yet another redis client";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "redis-resp" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring
     , bytestring-conversion, containers, dlist, double-conversion
     , operational, semigroups, split, transformers
     }:
     mkDerivation {
       pname = "redis-resp";
       version = "0.4.0";
       sha256 = "0clj5b6lbkdc64arb9z4qhbiqkx7mifja8ns7xxc619yhj9dbh4b";
       libraryHaskellDepends = [
         attoparsec base bytestring bytestring-conversion containers dlist
         double-conversion operational semigroups split transformers
       ];
       homepage = "https://gitlab.com/twittner/redis-resp/";
       description = "REdis Serialization Protocol (RESP) implementation";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "reducers" = callPackage
    ({ mkDerivation, array, base, bytestring, containers, fingertree
     , hashable, semigroupoids, semigroups, text, transformers
     , unordered-containers
     }:
     mkDerivation {
       pname = "reducers";
       version = "3.12.1";
       sha256 = "0pkddg0s3cn759miq0nfrq7lnp3imk5sx784ihsilsbjh9kvffz4";
       revision = "1";
       editedCabalFile = "1gn2s6r503cmxh8agcbif8q322503ix1igiks4kdz3rn97aliay6";
       libraryHaskellDepends = [
         array base bytestring containers fingertree hashable semigroupoids
         semigroups text transformers unordered-containers
       ];
       homepage = "http://github.com/ekmett/reducers/";
       description = "Semigroups, specialized containers and a general map/reduce framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ref-fd" = callPackage
    ({ mkDerivation, base, stm, transformers }:
     mkDerivation {
       pname = "ref-fd";
       version = "0.4.0.1";
       sha256 = "0dv0bwm952ivs1xi44nq8310k5mqs20i60g1rgwkm7hlpapz25p4";
       libraryHaskellDepends = [ base stm transformers ];
       description = "A type class for monads with references using functional dependencies";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "refact" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "refact";
       version = "0.3.0.2";
       sha256 = "0v0zxcx29b8jxs2kgy9csykqcp8kzhdvyylw2xfwmj4pfxr2kl0a";
       libraryHaskellDepends = [ base ];
       description = "Specify refactorings to perform with apply-refact";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "reflection" = callPackage
    ({ mkDerivation, base, template-haskell }:
     mkDerivation {
       pname = "reflection";
       version = "2.1.2";
       sha256 = "0f9w0akbm6p8h7kzgcd2f6nnpw1wy84pqn45vfz1ch5j0hn8h2d9";
       libraryHaskellDepends = [ base template-haskell ];
       homepage = "http://github.com/ekmett/reflection";
       description = "Reifies arbitrary terms into types that can be reflected back into terms";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "reform" = callPackage
    ({ mkDerivation, base, containers, mtl, text }:
     mkDerivation {
       pname = "reform";
       version = "0.2.7.1";
       sha256 = "0c4jh64rszp9rk62kh8nqyhafnbi5vm9lmc2rx7fx237j24j3gjr";
       libraryHaskellDepends = [ base containers mtl text ];
       homepage = "http://www.happstack.com/";
       description = "reform is a type-safe HTML form generation and validation library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "reform-blaze" = callPackage
    ({ mkDerivation, base, blaze-html, blaze-markup, reform, text }:
     mkDerivation {
       pname = "reform-blaze";
       version = "0.2.4.1";
       sha256 = "12v7d42yh4cgffcnrl9ynhkyjv5npfwlcxjqkmg15vswsyag1b6l";
       revision = "1";
       editedCabalFile = "1w85dbpfrgi0lan1b485s1bs2pa93myf8gwyi772g5if5rc9irdb";
       libraryHaskellDepends = [
         base blaze-html blaze-markup reform text
       ];
       homepage = "http://www.happstack.com/";
       description = "Add support for using blaze-html with Reform";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "reform-hamlet" = callPackage
    ({ mkDerivation, base, blaze-markup, reform, shakespeare, text }:
     mkDerivation {
       pname = "reform-hamlet";
       version = "0.0.5.1";
       sha256 = "1wl6j8jankf7ncr92z4q8j21fc00ds1m3ri61xwx6qq4b33iy9x0";
       libraryHaskellDepends = [
         base blaze-markup reform shakespeare text
       ];
       homepage = "http://www.happstack.com/";
       description = "Add support for using Hamlet with Reform";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "reform-happstack" = callPackage
    ({ mkDerivation, base, bytestring, happstack-server, mtl, random
     , reform, text, utf8-string
     }:
     mkDerivation {
       pname = "reform-happstack";
       version = "0.2.5.1";
       sha256 = "1ansv8d0qy4n7yfbld25bi4vgsgdd3j3smcaqdgbylbjq066z83g";
       libraryHaskellDepends = [
         base bytestring happstack-server mtl random reform text utf8-string
       ];
       homepage = "http://www.happstack.com/";
       description = "Happstack support for reform";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "reform-hsp" = callPackage
    ({ mkDerivation, base, hsp, hsx2hs, reform, text }:
     mkDerivation {
       pname = "reform-hsp";
       version = "0.2.7.1";
       sha256 = "084d03inyplx3n2zykaz2g7gskzs9hcjq8klhlnzpb1b6ahx5va8";
       libraryHaskellDepends = [ base hsp hsx2hs reform text ];
       homepage = "http://www.happstack.com/";
       description = "Add support for using HSP with Reform";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "regex-applicative" = callPackage
    ({ mkDerivation, base, containers, smallcheck, tasty, tasty-hunit
     , tasty-smallcheck, transformers
     }:
     mkDerivation {
       pname = "regex-applicative";
       version = "0.3.3";
       sha256 = "1riv7jqf26lbv4rm54sd6mrx8xdh4dvh4xbzymzdfdw13k6a4nb6";
       libraryHaskellDepends = [ base containers transformers ];
       testHaskellDepends = [
         base containers smallcheck tasty tasty-hunit tasty-smallcheck
         transformers
       ];
       homepage = "https://github.com/feuerbach/regex-applicative";
       description = "Regex-based parsing with applicative interface";
       license = stdenv.lib.licenses.mit;
     }) {};
  "regex-applicative-text" = callPackage
    ({ mkDerivation, base, regex-applicative, text }:
     mkDerivation {
       pname = "regex-applicative-text";
       version = "0.1.0.1";
       sha256 = "1ng2qhk4mvpzl8fx91ig7ldv09v9aqdsvn6yl9yjapc6h0ghb4xh";
       libraryHaskellDepends = [ base regex-applicative text ];
       homepage = "https://github.com/phadej/regex-applicative-text#readme";
       description = "regex-applicative on text";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "regex-base" = callPackage
    ({ mkDerivation, array, base, bytestring, containers, mtl }:
     mkDerivation {
       pname = "regex-base";
       version = "0.93.2";
       sha256 = "0y1j4h2pg12c853nzmczs263di7xkkmlnsq5dlp5wgbgl49mgp10";
       libraryHaskellDepends = [ array base bytestring containers mtl ];
       homepage = "http://sourceforge.net/projects/lazy-regex";
       description = "Replaces/Enhances Text.Regex";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "regex-compat" = callPackage
    ({ mkDerivation, array, base, regex-base, regex-posix }:
     mkDerivation {
       pname = "regex-compat";
       version = "0.95.1";
       sha256 = "0fwmima3f04p9y4h3c23493n1xj629ia2dxaisqm6rynljjv2z6m";
       libraryHaskellDepends = [ array base regex-base regex-posix ];
       homepage = "http://sourceforge.net/projects/lazy-regex";
       description = "Replaces/Enhances Text.Regex";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "regex-compat-tdfa" = callPackage
    ({ mkDerivation, array, base, regex-base, regex-tdfa }:
     mkDerivation {
       pname = "regex-compat-tdfa";
       version = "0.95.1.4";
       sha256 = "1p90fn90yhp7fvljjdqjp41cszidcfz4pw7fwvzyx4739b98x8sg";
       libraryHaskellDepends = [ array base regex-base regex-tdfa ];
       homepage = "http://hub.darcs.net/shelarcy/regex-compat-tdfa";
       description = "Unicode Support version of Text.Regex, using regex-tdfa";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "regex-pcre" = callPackage
    ({ mkDerivation, array, base, bytestring, containers, pcre
     , regex-base
     }:
     mkDerivation {
       pname = "regex-pcre";
       version = "0.94.4";
       sha256 = "1h16w994g9s62iwkdqa7bar2n9cfixmkzz2rm8svm960qr57valf";
       libraryHaskellDepends = [
         array base bytestring containers regex-base
       ];
       librarySystemDepends = [ pcre ];
       homepage = "http://hackage.haskell.org/package/regex-pcre";
       description = "Replaces/Enhances Text.Regex";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) pcre;};
  "regex-pcre-builtin" = callPackage
    ({ mkDerivation, array, base, bytestring, containers, regex-base }:
     mkDerivation {
       pname = "regex-pcre-builtin";
       version = "0.94.4.8.8.35";
       sha256 = "0y7as9wqlkykpipka2cfdhmcnin345q01pp0wsva8fwmvsavdl8b";
       libraryHaskellDepends = [
         array base bytestring containers regex-base
       ];
       homepage = "http://hackage.haskell.org/package/regex-pcre";
       description = "Replaces/Enhances Text.Regex";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "regex-posix" = callPackage
    ({ mkDerivation, array, base, bytestring, containers, regex-base }:
     mkDerivation {
       pname = "regex-posix";
       version = "0.95.2";
       sha256 = "0gkhzhj8nvfn1ija31c7xnl6p0gadwii9ihyp219ck2arlhrj0an";
       libraryHaskellDepends = [
         array base bytestring containers regex-base
       ];
       homepage = "http://sourceforge.net/projects/lazy-regex";
       description = "Replaces/Enhances Text.Regex";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "regex-tdfa" = callPackage
    ({ mkDerivation, array, base, bytestring, containers, ghc-prim, mtl
     , parsec, regex-base
     }:
     mkDerivation {
       pname = "regex-tdfa";
       version = "1.2.2";
       sha256 = "0f8x8wyr6m21g8dnxvnvalz5bsq37l125l6qhs0fscbvprsxc4nb";
       libraryHaskellDepends = [
         array base bytestring containers ghc-prim mtl parsec regex-base
       ];
       homepage = "https://github.com/ChrisKuklewicz/regex-tdfa";
       description = "Replaces/Enhances Text.Regex";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "regex-tdfa-text" = callPackage
    ({ mkDerivation, array, base, regex-base, regex-tdfa, text }:
     mkDerivation {
       pname = "regex-tdfa-text";
       version = "1.0.0.3";
       sha256 = "0090g6lgbdm9lywpqm2d3724nnnh24nx3vnlqr96qc2w486pmmrq";
       libraryHaskellDepends = [ array base regex-base regex-tdfa text ];
       description = "Text interface for regex-tdfa";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "reinterpret-cast" = callPackage
    ({ mkDerivation, array, base, criterion, data-binary-ieee754, hspec
     , loop
     }:
     mkDerivation {
       pname = "reinterpret-cast";
       version = "0.1.0";
       sha256 = "1r2k2fyfm5lknfdfs282l274bgaxf4j4dikk4hpwchjbj0n64m2n";
       libraryHaskellDepends = [ array base ];
       testHaskellDepends = [ base data-binary-ieee754 hspec loop ];
       benchmarkHaskellDepends = [ base criterion data-binary-ieee754 ];
       homepage = "https://github.com/nh2/reinterpret-cast";
       description = "Memory reinterpretation casts for Float/Double and Word32/Word64";
       license = stdenv.lib.licenses.mit;
     }) {};
  "relational-query" = callPackage
    ({ mkDerivation, array, base, bytestring, containers, dlist
     , names-th, persistable-record, quickcheck-simple, sql-words
     , template-haskell, text, th-reify-compat, time, time-locale-compat
     , transformers
     }:
     mkDerivation {
       pname = "relational-query";
       version = "0.8.3.2";
       sha256 = "16yhk012vya0kmp62mmqggnpvqbkr1h76svfdq1i2bhlrwprz290";
       libraryHaskellDepends = [
         array base bytestring containers dlist names-th persistable-record
         sql-words template-haskell text th-reify-compat time
         time-locale-compat transformers
       ];
       testHaskellDepends = [
         base containers quickcheck-simple transformers
       ];
       homepage = "http://khibino.github.io/haskell-relational-record/";
       description = "Typeful, Modular, Relational, algebraic query engine";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "relational-query-HDBC" = callPackage
    ({ mkDerivation, base, containers, convertible, dlist, HDBC
     , HDBC-session, names-th, persistable-record, relational-query
     , relational-schemas, template-haskell, th-data-compat
     , transformers
     }:
     mkDerivation {
       pname = "relational-query-HDBC";
       version = "0.6.0.2";
       sha256 = "1v859wpyjdxl6cshnmckgsqlqh6m58p6225rccb40521hpz392mg";
       libraryHaskellDepends = [
         base containers convertible dlist HDBC HDBC-session names-th
         persistable-record relational-query relational-schemas
         template-haskell th-data-compat transformers
       ];
       homepage = "http://khibino.github.io/haskell-relational-record/";
       description = "HDBC instance of relational-query and typed query interface for HDBC";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "relational-record" = callPackage
    ({ mkDerivation, base, persistable-types-HDBC-pg, relational-query
     , relational-query-HDBC
     }:
     mkDerivation {
       pname = "relational-record";
       version = "0.1.5.1";
       sha256 = "06spwjc05wvxgk9yw9kx6274j2flj2f9rpg53fsfrprli28k89xn";
       libraryHaskellDepends = [
         base persistable-types-HDBC-pg relational-query
         relational-query-HDBC
       ];
       homepage = "http://khibino.github.io/haskell-relational-record/";
       description = "Meta package of Relational Record";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "relational-schemas" = callPackage
    ({ mkDerivation, base, bytestring, containers, persistable-record
     , relational-query, template-haskell, time
     }:
     mkDerivation {
       pname = "relational-schemas";
       version = "0.1.3.1";
       sha256 = "1gaif7af90wrkqf0dhikmd8mn3xwbbf5k5pg63fkmdr17xvkfcfi";
       libraryHaskellDepends = [
         base bytestring containers persistable-record relational-query
         template-haskell time
       ];
       homepage = "http://khibino.github.io/haskell-relational-record/";
       description = "RDBMSs' schema templates for relational-query";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "renderable" = callPackage
    ({ mkDerivation, base, containers, hashable, transformers }:
     mkDerivation {
       pname = "renderable";
       version = "0.2.0.1";
       sha256 = "1idn0jg74wm3ksy5n4jk2dzsij64r1byghr6qc03g4d85n6mmsni";
       libraryHaskellDepends = [ base containers hashable transformers ];
       homepage = "https://github.com/schell/renderable";
       description = "An API for managing renderable resources";
       license = stdenv.lib.licenses.mit;
     }) {};
  "repa" = callPackage
    ({ mkDerivation, base, bytestring, ghc-prim, QuickCheck
     , template-haskell, vector
     }:
     mkDerivation {
       pname = "repa";
       version = "3.4.1.2";
       sha256 = "0myw05dicby7dhkmjvv9wphfnnx2jj3dxaa50357n76zysxhpy2p";
       libraryHaskellDepends = [
         base bytestring ghc-prim QuickCheck template-haskell vector
       ];
       homepage = "http://repa.ouroborus.net";
       description = "High performance, regular, shape polymorphic parallel arrays";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "repa-algorithms" = callPackage
    ({ mkDerivation, base, repa, vector }:
     mkDerivation {
       pname = "repa-algorithms";
       version = "3.4.1.1";
       sha256 = "0a3yhia6wb4blc8zyzd2pw6k7hfpamv08d64qplq181dp887kl64";
       libraryHaskellDepends = [ base repa vector ];
       homepage = "http://repa.ouroborus.net";
       description = "Algorithms using the Repa array library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "repa-io" = callPackage
    ({ mkDerivation, base, binary, bmp, bytestring, old-time, repa
     , vector
     }:
     mkDerivation {
       pname = "repa-io";
       version = "3.4.1.1";
       sha256 = "1nm9kfin6fv016r02l74c9hf8pr1rz7s33i833cqpyw8m6bcmnxm";
       libraryHaskellDepends = [
         base binary bmp bytestring old-time repa vector
       ];
       homepage = "http://repa.ouroborus.net";
       description = "Read and write Repa arrays in various formats";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "reroute" = callPackage
    ({ mkDerivation, base, criterion, deepseq, graph-core, hashable
     , hspec, hvect, mtl, path-pieces, random, regex-compat, text
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "reroute";
       version = "0.4.0.1";
       sha256 = "03hzf1qzpaingspyj5yrx7ijrzszb452ky8zf9am12fjlrm67hyi";
       libraryHaskellDepends = [
         base deepseq hashable hvect mtl path-pieces text
         unordered-containers
       ];
       testHaskellDepends = [
         base hspec hvect mtl text unordered-containers vector
       ];
       benchmarkHaskellDepends = [
         base criterion deepseq graph-core hashable hvect mtl path-pieces
         random regex-compat text unordered-containers vector
       ];
       homepage = "http://github.com/agrafix/Spock";
       description = "abstract implementation of typed and untyped web routing";
       license = stdenv.lib.licenses.mit;
     }) {};
  "resolve-trivial-conflicts" = callPackage
    ({ mkDerivation, ansi-terminal, base, base-compat, Diff, directory
     , filepath, mtl, optparse-applicative, process, unix
     }:
     mkDerivation {
       pname = "resolve-trivial-conflicts";
       version = "0.3.2.4";
       sha256 = "0892mrwky28nq3wcwr21znr4yss4sg2vz7g7w00j47wvhp3qmhv2";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         ansi-terminal base base-compat Diff directory filepath mtl
         optparse-applicative process unix
       ];
       doHaddock = false;
       homepage = "https://github.com/ElastiLotem/resolve-trivial-conflicts";
       description = "Remove trivial conflict markers in a git repository";
       license = stdenv.lib.licenses.gpl2;
     }) {};
  "resource-pool" = callPackage
    ({ mkDerivation, base, hashable, monad-control, stm, time
     , transformers, transformers-base, vector
     }:
     mkDerivation {
       pname = "resource-pool";
       version = "0.2.3.2";
       sha256 = "04mw8b9djb14zp4rdi6h7mc3zizh597ffiinfbr4m0m8psifw9w6";
       libraryHaskellDepends = [
         base hashable monad-control stm time transformers transformers-base
         vector
       ];
       homepage = "http://github.com/bos/pool";
       description = "A high-performance striped resource pooling implementation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "resourcet" = callPackage
    ({ mkDerivation, base, containers, exceptions, hspec, lifted-base
     , mmorph, monad-control, mtl, transformers, transformers-base
     , transformers-compat
     }:
     mkDerivation {
       pname = "resourcet";
       version = "1.1.9";
       sha256 = "1x9f2qz57agl3xljp1wi0ab51p13czrpf6qjp3506rl9dg99j6as";
       libraryHaskellDepends = [
         base containers exceptions lifted-base mmorph monad-control mtl
         transformers transformers-base transformers-compat
       ];
       testHaskellDepends = [ base hspec lifted-base transformers ];
       homepage = "http://github.com/snoyberg/conduit";
       description = "Deterministic allocation and freeing of scarce resources";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "rest-client" = callPackage
    ({ mkDerivation, aeson-utils, base, bytestring, case-insensitive
     , data-default, exceptions, http-client, http-conduit, http-types
     , hxt, hxt-pickle-utils, monad-control, mtl, resourcet, rest-types
     , tostring, transformers, transformers-base, transformers-compat
     , uri-encode, utf8-string
     }:
     mkDerivation {
       pname = "rest-client";
       version = "0.5.1.1";
       sha256 = "0qzn56bj821l9gcxyq6lcgwfa2444igiqczajybrnyy8yb4j792x";
       libraryHaskellDepends = [
         aeson-utils base bytestring case-insensitive data-default
         exceptions http-client http-conduit http-types hxt hxt-pickle-utils
         monad-control mtl resourcet rest-types tostring transformers
         transformers-base transformers-compat uri-encode utf8-string
       ];
       description = "Utility library for use in generated API client libraries";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "rest-core" = callPackage
    ({ mkDerivation, aeson, aeson-utils, base, base-compat, bytestring
     , case-insensitive, errors, fclabels, HUnit, hxt, hxt-pickle-utils
     , json-schema, mtl, mtl-compat, multipart, random, rest-stringmap
     , rest-types, safe, split, test-framework, test-framework-hunit
     , text, transformers, transformers-compat, unordered-containers
     , uri-encode, utf8-string, uuid
     }:
     mkDerivation {
       pname = "rest-core";
       version = "0.39";
       sha256 = "012l03am5hqhykn4apg5yhjaz4zv8mwqpq6x97crraf1gxad0q6p";
       revision = "4";
       editedCabalFile = "16kbwkq22h3yrdwwn1i06i2fmlvy99w9w2jay91g1lg053i247i6";
       libraryHaskellDepends = [
         aeson aeson-utils base base-compat bytestring case-insensitive
         errors fclabels hxt hxt-pickle-utils json-schema mtl mtl-compat
         multipart random rest-stringmap rest-types safe split text
         transformers transformers-compat unordered-containers uri-encode
         utf8-string uuid
       ];
       testHaskellDepends = [
         base bytestring HUnit mtl test-framework test-framework-hunit
         transformers transformers-compat unordered-containers
       ];
       description = "Rest API library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "rest-gen" = callPackage
    ({ mkDerivation, aeson, base, base-compat, blaze-html, Cabal
     , code-builder, directory, fclabels, filepath, hashable
     , haskell-src-exts, HStringTemplate, HUnit, hxt, json-schema
     , pretty, process, rest-core, safe, scientific, semigroups, split
     , test-framework, test-framework-hunit, text, uniplate
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "rest-gen";
       version = "0.19.0.3";
       sha256 = "0xifmgf6x2rh5n4ya3w9p3kz8ipdpwj4g0dn01hcb0fyv1725m4y";
       revision = "1";
       editedCabalFile = "1g9sjsclfcg57hd4z8bpc949wk6z5v26vi0kxrzhlnhwggcfl4yn";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson base base-compat blaze-html Cabal code-builder directory
         fclabels filepath hashable haskell-src-exts HStringTemplate hxt
         json-schema pretty process rest-core safe scientific semigroups
         split text uniplate unordered-containers vector
       ];
       testHaskellDepends = [
         base fclabels haskell-src-exts HUnit rest-core test-framework
         test-framework-hunit
       ];
       description = "Documentation and client generation from rest definition";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "rest-happstack" = callPackage
    ({ mkDerivation, base, containers, happstack-server, mtl, rest-core
     , rest-gen, utf8-string
     }:
     mkDerivation {
       pname = "rest-happstack";
       version = "0.3.1.1";
       sha256 = "1xjg745ydnw1mybkx2239wrj0jh9sy5mgx11gqwrbfcn5kmhckvr";
       revision = "1";
       editedCabalFile = "1b2f7y8zsxz5h6bjmm86fwfkz8yrjx9vbkkh2xmqg4409q7zvrm8";
       libraryHaskellDepends = [
         base containers happstack-server mtl rest-core rest-gen utf8-string
       ];
       description = "Rest driver for Happstack";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "rest-stringmap" = callPackage
    ({ mkDerivation, aeson, base, containers, hashable, hxt
     , json-schema, tostring, unordered-containers
     }:
     mkDerivation {
       pname = "rest-stringmap";
       version = "0.2.0.6";
       sha256 = "0jjj0yam4d4w36lnxk0ci7ylb9ya48y0ag3b54k9ikyg0hps7rb6";
       revision = "5";
       editedCabalFile = "1wahnanqjlswzv14mh4km9dklqpn0ar6k2qq7sss59snq9nkiza0";
       libraryHaskellDepends = [
         aeson base containers hashable hxt json-schema tostring
         unordered-containers
       ];
       description = "Maps with stringy keys that can be transcoded to JSON and XML";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "rest-types" = callPackage
    ({ mkDerivation, aeson, base, base-compat, case-insensitive
     , generic-aeson, generic-xmlpickler, hxt, json-schema
     , rest-stringmap, text, uuid
     }:
     mkDerivation {
       pname = "rest-types";
       version = "1.14.1.1";
       sha256 = "16lnwd7rwjb67sqklrwl40bq4h8qhp3wj1893y4vs85fpdjqxq5p";
       revision = "2";
       editedCabalFile = "083s97w8ymzz3dwjj96miyhjj3svi76yqdp53s3zqmfdb25g93vg";
       libraryHaskellDepends = [
         aeson base base-compat case-insensitive generic-aeson
         generic-xmlpickler hxt json-schema rest-stringmap text uuid
       ];
       description = "Silk Rest Framework Types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "rest-wai" = callPackage
    ({ mkDerivation, base, base-compat, bytestring, case-insensitive
     , containers, http-types, mime-types, mtl, rest-core, text
     , unordered-containers, wai
     }:
     mkDerivation {
       pname = "rest-wai";
       version = "0.2.0.1";
       sha256 = "00hd7i28p5diy00m18yi6f2jp5cxbvb9s2fv24phakjsp2vmw81q";
       libraryHaskellDepends = [
         base base-compat bytestring case-insensitive containers http-types
         mime-types mtl rest-core text unordered-containers wai
       ];
       description = "Rest driver for WAI applications";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "result" = callPackage
    ({ mkDerivation, base, bifunctors, keys, mtl, transformers }:
     mkDerivation {
       pname = "result";
       version = "0.2.6.0";
       sha256 = "1ibqc5h2vxy4h3sn94jxmjk099fkainnyd2y457g4ldqv9ydj9pm";
       libraryHaskellDepends = [ base bifunctors keys mtl transformers ];
       testHaskellDepends = [ base ];
       homepage = "https://github.com/srijs/haskell-result";
       description = "Encode success or at least one error";
       license = stdenv.lib.licenses.mit;
     }) {};
  "rethinkdb" = callPackage
    ({ mkDerivation, aeson, async, attoparsec, base, base64-bytestring
     , binary, bytestring, containers, criterion, data-default, doctest
     , mtl, network, scientific, text, time, unordered-containers
     , utf8-string, vector
     }:
     mkDerivation {
       pname = "rethinkdb";
       version = "2.2.0.8";
       sha256 = "03z5l2sxshqp5w800q6gkbyla7rlpl53qzjh0s3bwk5s5kb3hja4";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base base64-bytestring binary bytestring containers
         data-default mtl network scientific text time unordered-containers
         utf8-string vector
       ];
       executableHaskellDepends = [ attoparsec base text ];
       testHaskellDepends = [ base doctest ];
       benchmarkHaskellDepends = [ aeson async base criterion text ];
       doCheck = false;
       homepage = "http://github.com/atnnn/haskell-rethinkdb";
       description = "A driver for RethinkDB 2.2";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "rethinkdb-client-driver" = callPackage
    ({ mkDerivation, aeson, base, binary, bytestring, containers
     , criterion, hashable, hspec, hspec-smallcheck, mtl, network
     , old-locale, scientific, smallcheck, stm, template-haskell, text
     , time, unordered-containers, vector
     }:
     mkDerivation {
       pname = "rethinkdb-client-driver";
       version = "0.0.23";
       sha256 = "0hq4q9xb6aila7y3ia948mizlha6saj1cqj1smprxd1vag5s7rff";
       revision = "1";
       editedCabalFile = "1vgv2zfdkpxbrg8nssas8x85cbmah8d59ks9744hd7zc461kgfzl";
       libraryHaskellDepends = [
         aeson base binary bytestring containers hashable mtl network
         old-locale scientific stm template-haskell text time
         unordered-containers vector
       ];
       testHaskellDepends = [
         base hspec hspec-smallcheck smallcheck text time
         unordered-containers vector
       ];
       benchmarkHaskellDepends = [
         base criterion text time unordered-containers vector
       ];
       doCheck = false;
       homepage = "https://github.com/wereHamster/rethinkdb-client-driver";
       description = "Client driver for RethinkDB";
       license = stdenv.lib.licenses.mit;
     }) {};
  "retry" = callPackage
    ({ mkDerivation, base, data-default-class, exceptions, ghc-prim
     , hspec, HUnit, mtl, QuickCheck, random, stm, time, transformers
     }:
     mkDerivation {
       pname = "retry";
       version = "0.7.4.2";
       sha256 = "0z5ls9z5zcqkk3vbpl4wdgspi98n19m5i8mfian1fyxkf0jkj6sj";
       libraryHaskellDepends = [
         base data-default-class exceptions ghc-prim random transformers
       ];
       testHaskellDepends = [
         base data-default-class exceptions ghc-prim hspec HUnit mtl
         QuickCheck random stm time transformers
       ];
       homepage = "http://github.com/Soostone/retry";
       description = "Retry combinators for monadic actions that may fail";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "rev-state" = callPackage
    ({ mkDerivation, base, mtl }:
     mkDerivation {
       pname = "rev-state";
       version = "0.1.2";
       sha256 = "06gry2ysvdg5q0b86gr8i86xsbxw2yrnld9g7rcp7mppswwhw1zf";
       revision = "2";
       editedCabalFile = "0dfiwf4808vjhayv7xr058rzwl6jmsmhzy03mk48m9kmlqibk3fy";
       libraryHaskellDepends = [ base mtl ];
       testHaskellDepends = [ base ];
       homepage = "https://github.com/DanBurton/rev-state#readme";
       description = "Reverse State monad transformer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "rfc5051" = callPackage
    ({ mkDerivation, base, bytestring, containers }:
     mkDerivation {
       pname = "rfc5051";
       version = "0.1.0.3";
       sha256 = "0av4c3qvwbkbzrjrrg601ay9pds7wscqqp2lc2z78mv2lllap3g3";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base bytestring containers ];
       executableHaskellDepends = [ base bytestring containers ];
       description = "Simple unicode collation as per RFC5051";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "rng-utils" = callPackage
    ({ mkDerivation, base, bytestring, mwc-random, vector }:
     mkDerivation {
       pname = "rng-utils";
       version = "0.2.1";
       sha256 = "11yy6v0dbdf0cn823vlyd90zc5q5aw0zjzylpz5s9c94wsd4pjfa";
       libraryHaskellDepends = [ base bytestring mwc-random vector ];
       description = "RNG within an MVar for convenient concurrent use";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "rose-trees" = callPackage
    ({ mkDerivation, base, containers, criterion, deepseq, hashable
     , mtl, QuickCheck, quickcheck-instances, semigroupoids, semigroups
     , sets, tasty, tasty-quickcheck, unordered-containers, witherable
     }:
     mkDerivation {
       pname = "rose-trees";
       version = "0.0.4.3";
       sha256 = "09p4sna1payzrz6sx8gszr0bcz7ga5qxx81512pid4wmgsr81ldx";
       libraryHaskellDepends = [
         base containers deepseq hashable mtl QuickCheck
         quickcheck-instances semigroupoids semigroups sets
         unordered-containers witherable
       ];
       testHaskellDepends = [
         base containers deepseq hashable QuickCheck quickcheck-instances
         semigroupoids semigroups sets tasty tasty-quickcheck
         unordered-containers witherable
       ];
       benchmarkHaskellDepends = [
         base containers criterion deepseq hashable mtl QuickCheck
         quickcheck-instances semigroupoids semigroups sets
         unordered-containers witherable
       ];
       description = "A collection of rose tree structures";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "rosezipper" = callPackage
    ({ mkDerivation, base, containers }:
     mkDerivation {
       pname = "rosezipper";
       version = "0.2";
       sha256 = "1g6ppa8cappdbq9923lsac504dfjh0ks64gbm6qbihrc34f4zavc";
       libraryHaskellDepends = [ base containers ];
       description = "Generic zipper implementation for Data.Tree";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "rotating-log" = callPackage
    ({ mkDerivation, base, bytestring, directory, filepath, time }:
     mkDerivation {
       pname = "rotating-log";
       version = "0.4";
       sha256 = "0ldlfyz0avvlfxqbm7x1iaqmfbc64pbg2qczk3c7spdhynwj46k6";
       libraryHaskellDepends = [
         base bytestring directory filepath time
       ];
       testHaskellDepends = [ base bytestring directory filepath time ];
       homepage = "http://github.com/Soostone/rotating-log";
       description = "Size-limited, concurrent, automatically-rotating log writer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "rss-conduit" = callPackage
    ({ mkDerivation, base, bytestring, conduit, conduit-extra
     , conduit-parse, containers, data-default, exceptions, foldl, hlint
     , lens-simple, mono-traversable, parsers, QuickCheck
     , quickcheck-instances, resourcet, safe, tasty, tasty-hunit
     , tasty-quickcheck, text, time, timerep, uri-bytestring
     , xml-conduit, xml-conduit-parse, xml-types
     }:
     mkDerivation {
       pname = "rss-conduit";
       version = "0.2.0.2";
       sha256 = "1lcl6az0aal2n3b7jp1fd6razhxijiyabi783hcnayrzfhc2jjih";
       libraryHaskellDepends = [
         base conduit conduit-parse containers exceptions foldl lens-simple
         mono-traversable parsers safe text time timerep uri-bytestring
         xml-conduit xml-conduit-parse xml-types
       ];
       testHaskellDepends = [
         base bytestring conduit conduit-extra conduit-parse data-default
         exceptions hlint lens-simple mono-traversable parsers QuickCheck
         quickcheck-instances resourcet tasty tasty-hunit tasty-quickcheck
         text time uri-bytestring xml-conduit xml-conduit-parse xml-types
       ];
       description = "Streaming parser/renderer for the RSS 2.0 standard.";
       license = "unknown";
     }) {};
  "runmemo" = callPackage
    ({ mkDerivation, base, data-memocombinators, time }:
     mkDerivation {
       pname = "runmemo";
       version = "1.0.0.1";
       sha256 = "12fn0lsil0rj0pj0ixzppsdw2fmj0cnzci4fh11z9rcggwbz6pms";
       testHaskellDepends = [ base data-memocombinators time ];
       homepage = "https://github.com/DanBurton/runmemo";
       description = "A simple memoization helper library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "rvar" = callPackage
    ({ mkDerivation, base, MonadPrompt, mtl, random-source
     , transformers
     }:
     mkDerivation {
       pname = "rvar";
       version = "0.2.0.3";
       sha256 = "1h3bii1pamkv7656280i6zx7fpdwgbn2ysfijpd2s65szlpsz2np";
       libraryHaskellDepends = [
         base MonadPrompt mtl random-source transformers
       ];
       homepage = "https://github.com/mokus0/random-fu";
       description = "Random Variables";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "s3-signer" = callPackage
    ({ mkDerivation, base, base64-bytestring, cryptohash, http-types
     , time, utf8-string
     }:
     mkDerivation {
       pname = "s3-signer";
       version = "0.3.0.0";
       sha256 = "15647fs38blg37s0407ybxlmzwdhmxz3sk914p21g90i2bw5gsc9";
       libraryHaskellDepends = [
         base base64-bytestring cryptohash http-types time utf8-string
       ];
       homepage = "https://github.com/dmjio/s3-signer";
       description = "Pre-signed Amazon S3 URLs";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "safe" = callPackage
    ({ mkDerivation, base, deepseq, QuickCheck }:
     mkDerivation {
       pname = "safe";
       version = "0.3.11";
       sha256 = "0yfqgcyapiz97nww8zkr3kjrpcknx316jyq72k5ffplck8cwhn3a";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base deepseq QuickCheck ];
       homepage = "https://github.com/ndmitchell/safe#readme";
       description = "Library of safe (exception free) functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "safe-exceptions" = callPackage
    ({ mkDerivation, base, deepseq, exceptions, hspec, transformers
     , void
     }:
     mkDerivation {
       pname = "safe-exceptions";
       version = "0.1.4.0";
       sha256 = "19j1kbmqw8f7fig97fhkl1l4cvrk7ypa713gg6ik70kz8p47h865";
       libraryHaskellDepends = [ base deepseq exceptions transformers ];
       testHaskellDepends = [ base hspec void ];
       homepage = "https://github.com/fpco/safe-exceptions#readme";
       description = "Safe, consistent, and easy exception handling";
       license = stdenv.lib.licenses.mit;
     }) {};
  "safecopy" = callPackage
    ({ mkDerivation, array, base, bytestring, cereal, containers, lens
     , lens-action, old-time, QuickCheck, quickcheck-instances, tasty
     , tasty-quickcheck, template-haskell, text, time, vector
     }:
     mkDerivation {
       pname = "safecopy";
       version = "0.9.2";
       sha256 = "1lvfkfn504dr70vsynr3p6p4hw9nsjlxy6dwr4zv5mjk4qj6nrms";
       libraryHaskellDepends = [
         array base bytestring cereal containers old-time template-haskell
         text time vector
       ];
       testHaskellDepends = [
         array base cereal containers lens lens-action QuickCheck
         quickcheck-instances tasty tasty-quickcheck template-haskell time
         vector
       ];
       doCheck = false;
       homepage = "https://github.com/acid-state/safecopy";
       description = "Binary serialization with version control";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "sampling" = callPackage
    ({ mkDerivation, base, criterion, foldl, mwc-random, primitive
     , vector
     }:
     mkDerivation {
       pname = "sampling";
       version = "0.2.0";
       sha256 = "0ni96g9ivlra9bq7dwas0iiqbnz1c7qgqwfzjx9laxmjp6dq8003";
       revision = "1";
       editedCabalFile = "1c95gv6dc9wpjsy89mbdn5d8xyw9b0qrdncg8x883nr9lv4jjnbh";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base foldl mwc-random primitive vector ];
       executableHaskellDepends = [ base ];
       benchmarkHaskellDepends = [ base criterion ];
       homepage = "https://github.com/jtobin/sampling";
       description = "Sample values from collections";
       license = stdenv.lib.licenses.mit;
     }) {};
  "sandi" = callPackage
    ({ mkDerivation, base, bytestring, conduit, criterion, exceptions
     , HUnit, stringsearch, tasty, tasty-hunit, tasty-quickcheck
     , tasty-th
     }:
     mkDerivation {
       pname = "sandi";
       version = "0.4.0";
       sha256 = "1smf3bq44qni4zbgxpw7cy7b9g95fbrr73j8njjf6139naj9bj20";
       libraryHaskellDepends = [
         base bytestring conduit exceptions stringsearch
       ];
       testHaskellDepends = [
         base bytestring HUnit tasty tasty-hunit tasty-quickcheck tasty-th
       ];
       benchmarkHaskellDepends = [ base bytestring criterion ];
       homepage = "http://hackage.haskell.org/package/sandi";
       description = "Data encoding library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "sandman" = callPackage
    ({ mkDerivation, base, Cabal, containers, directory, filepath
     , optparse-applicative, process, text, unix-compat
     }:
     mkDerivation {
       pname = "sandman";
       version = "0.2.0.1";
       sha256 = "0r6f6xw1vzhbhlqi7knv9p0rlfdzhfb5db2vc5ls78n43wz2hza0";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         base Cabal containers directory filepath optparse-applicative
         process text unix-compat
       ];
       doHaddock = false;
       homepage = "https://github.com/abhinav/sandman#readme";
       description = "Manages Cabal sandboxes to avoid rebuilding packages";
       license = stdenv.lib.licenses.mit;
     }) {};
  "say" = callPackage
    ({ mkDerivation, base, bytestring, criterion, hspec, temporary
     , text, transformers
     }:
     mkDerivation {
       pname = "say";
       version = "0.1.0.0";
       sha256 = "0h7w49v9manw7yml2bms11sf6znsfkmdr87c7d8ax8l1xnadnvzj";
       libraryHaskellDepends = [ base bytestring text transformers ];
       testHaskellDepends = [ base bytestring hspec temporary text ];
       benchmarkHaskellDepends = [
         base bytestring criterion temporary text
       ];
       homepage = "https://github.com/fpco/say#readme";
       description = "Initial project template from stack";
       license = stdenv.lib.licenses.mit;
     }) {};
  "sbv" = callPackage
    ({ mkDerivation, array, async, base, base-compat, containers
     , crackNum, data-binary-ieee754, deepseq, directory, filepath, ghc
     , HUnit, mtl, old-time, pretty, process, QuickCheck, random, syb
     }:
     mkDerivation {
       pname = "sbv";
       version = "5.12";
       sha256 = "0pym7dfdvdxb0zpzc2rbriyj0pnal1fq6wcf9rnksspxfzmwlhqc";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         array async base base-compat containers crackNum
         data-binary-ieee754 deepseq directory filepath ghc mtl old-time
         pretty process QuickCheck random syb
       ];
       executableHaskellDepends = [
         base data-binary-ieee754 directory filepath HUnit process syb
       ];
       testHaskellDepends = [
         base data-binary-ieee754 directory filepath HUnit syb
       ];
       homepage = "http://leventerkok.github.com/sbv/";
       description = "SMT Based Verification: Symbolic Haskell theorem prover using SMT solving";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "scalpel" = callPackage
    ({ mkDerivation, base, bytestring, containers, criterion, curl
     , data-default, HUnit, regex-base, regex-tdfa, tagsoup, text
     }:
     mkDerivation {
       pname = "scalpel";
       version = "0.3.1";
       sha256 = "0kr0da15f3bjfksydm9v8lfa5kyrgxmlk3k7zc9xfh3ga1m09fax";
       libraryHaskellDepends = [
         base bytestring containers curl data-default regex-base regex-tdfa
         tagsoup text
       ];
       testHaskellDepends = [ base HUnit regex-base regex-tdfa tagsoup ];
       benchmarkHaskellDepends = [ base criterion text ];
       homepage = "https://github.com/fimad/scalpel";
       description = "A high level web scraping library for Haskell";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "scanner" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, cereal, criterion
     , hspec, text
     }:
     mkDerivation {
       pname = "scanner";
       version = "0.2";
       sha256 = "1sd5czkfncadyxlbr13is44ad3kkk6rfwm9fqw8m4aipl1l0s0is";
       libraryHaskellDepends = [ base bytestring ];
       testHaskellDepends = [ base bytestring hspec ];
       benchmarkHaskellDepends = [
         attoparsec base bytestring cereal criterion text
       ];
       homepage = "https://github.com/Yuras/scanner";
       description = "Fast non-backtracking incremental combinator parsing for bytestrings";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "scientific" = callPackage
    ({ mkDerivation, base, binary, bytestring, containers, criterion
     , deepseq, ghc-prim, hashable, integer-gmp, QuickCheck, smallcheck
     , tasty, tasty-ant-xml, tasty-hunit, tasty-quickcheck
     , tasty-smallcheck, text, vector
     }:
     mkDerivation {
       pname = "scientific";
       version = "0.3.4.9";
       sha256 = "1a0q15kq0pk3pabxh536wgphh8713hhn8n55gm6s1y8a5dk310qh";
       revision = "1";
       editedCabalFile = "0q8xnyyyl4llmfi0ph7cxi7cqyq3v8w7am027in39ir2wrh5jgw3";
       libraryHaskellDepends = [
         base binary bytestring containers deepseq ghc-prim hashable
         integer-gmp text vector
       ];
       testHaskellDepends = [
         base binary bytestring QuickCheck smallcheck tasty tasty-ant-xml
         tasty-hunit tasty-quickcheck tasty-smallcheck text
       ];
       benchmarkHaskellDepends = [ base criterion ];
       homepage = "https://github.com/basvandijk/scientific";
       description = "Numbers represented using scientific notation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "scotty" = callPackage
    ({ mkDerivation, aeson, async, base, blaze-builder, bytestring
     , case-insensitive, data-default-class, directory, fail, hspec
     , hspec-wai, http-types, lifted-base, monad-control, mtl, nats
     , network, regex-compat, text, transformers, transformers-base
     , transformers-compat, wai, wai-extra, warp
     }:
     mkDerivation {
       pname = "scotty";
       version = "0.11.0";
       sha256 = "1vc6lc8q1cqqq67y78c70sw2jim8ps7bgp85a2gjgwfc6z4h68l9";
       revision = "4";
       editedCabalFile = "18f5f7fhz56jm8by88xwcy7m8zdlnwbsvk131w6rx9ln4f6chvqd";
       libraryHaskellDepends = [
         aeson base blaze-builder bytestring case-insensitive
         data-default-class fail http-types monad-control mtl nats network
         regex-compat text transformers transformers-base
         transformers-compat wai wai-extra warp
       ];
       testHaskellDepends = [
         async base data-default-class directory hspec hspec-wai http-types
         lifted-base network text wai
       ];
       homepage = "https://github.com/scotty-web/scotty";
       description = "Haskell web framework inspired by Ruby's Sinatra, using WAI and Warp";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "scrape-changes" = callPackage
    ({ mkDerivation, async, attoparsec, base, bytestring, cron
     , directory, email-validate, filepath, hashable, hslogger
     , http-client, HUnit, lens, mime-mail, network-uri, QuickCheck
     , semigroups, shakespeare, strict, test-framework
     , test-framework-hunit, test-framework-quickcheck2, text
     , validation, wreq
     }:
     mkDerivation {
       pname = "scrape-changes";
       version = "0.1.0.4";
       sha256 = "0wiag72igcvrmvqvfnyi0c811rkjfmvckmasq5l26biw0qfsksyd";
       libraryHaskellDepends = [
         async attoparsec base bytestring cron directory email-validate
         filepath hashable hslogger http-client lens mime-mail network-uri
         semigroups strict text validation wreq
       ];
       testHaskellDepends = [
         base cron email-validate hashable HUnit lens QuickCheck semigroups
         shakespeare test-framework test-framework-hunit
         test-framework-quickcheck2 text validation
       ];
       description = "Scrape websites for changes";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "scrypt" = callPackage
    ({ mkDerivation, base, base64-bytestring, bytestring, entropy
     , HUnit, QuickCheck, test-framework, test-framework-hunit
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "scrypt";
       version = "0.5.0";
       sha256 = "1cnrjdq1ncv224dlk236a7w29na8r019d2acrsxlsaiy74iadh1y";
       libraryHaskellDepends = [
         base base64-bytestring bytestring entropy
       ];
       testHaskellDepends = [
         base bytestring HUnit QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2
       ];
       homepage = "http://github.com/informatikr/scrypt";
       description = "Stronger password hashing via sequential memory-hard functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "sdl2" = callPackage
    ({ mkDerivation, base, bytestring, exceptions, linear, SDL2
     , StateVar, text, transformers, vector
     }:
     mkDerivation {
       pname = "sdl2";
       version = "2.1.3";
       sha256 = "10l0n9675clvcxd2dnq04fdljzniikj243drvrcdc8gsjhsrc66f";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base bytestring exceptions linear StateVar text transformers vector
       ];
       librarySystemDepends = [ SDL2 ];
       libraryPkgconfigDepends = [ SDL2 ];
       description = "Both high- and low-level bindings to the SDL library (version 2.0.2+).";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) SDL2;};
  "secp256k1" = callPackage
    ({ mkDerivation, base, base16-bytestring, binary, bytestring
     , cereal, cryptohash, entropy, HUnit, largeword, mtl, QuickCheck
     , string-conversions, test-framework, test-framework-hunit
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "secp256k1";
       version = "0.4.6";
       sha256 = "1ha0zxdhyq2qwk4rxhv6javdj3aqvkhc02624ar2a0gmxg2qqmjh";
       libraryHaskellDepends = [
         base base16-bytestring binary bytestring cereal entropy largeword
         mtl QuickCheck string-conversions
       ];
       testHaskellDepends = [
         base base16-bytestring bytestring cryptohash entropy HUnit mtl
         QuickCheck string-conversions test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       homepage = "http://github.com/haskoin/secp256k1-haskell#readme";
       description = "Bindings for secp256k1 library from Bitcoin Core";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "securemem" = callPackage
    ({ mkDerivation, base, byteable, bytestring, ghc-prim, memory }:
     mkDerivation {
       pname = "securemem";
       version = "0.1.9";
       sha256 = "0dkhhjxa7njc3qbgvd5a23rkvr39vj2kn2a9nk6yjg7a8b2hvdpy";
       libraryHaskellDepends = [
         base byteable bytestring ghc-prim memory
       ];
       homepage = "http://github.com/vincenthz/hs-securemem";
       description = "abstraction to an auto scrubbing and const time eq, memory chunk";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "semigroupoid-extras" = callPackage
    ({ mkDerivation, base, profunctors, semigroupoids }:
     mkDerivation {
       pname = "semigroupoid-extras";
       version = "5";
       sha256 = "0ciq1jnc0d9d8jph9103v04vphiz7xqa69a8f4dmmcf3bjsk6bhh";
       libraryHaskellDepends = [ base profunctors semigroupoids ];
       homepage = "http://github.com/ekmett/semigroupoid-extras";
       description = "Semigroupoids that depend on PolyKinds";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "semigroupoids" = callPackage
    ({ mkDerivation, base, base-orphans, bifunctors, comonad
     , containers, contravariant, directory, distributive, doctest
     , filepath, semigroups, tagged, transformers, transformers-compat
     }:
     mkDerivation {
       pname = "semigroupoids";
       version = "5.1";
       sha256 = "0dgqc59p4xx5cl8qkpm6sn4wd3n59rq7l6din76hf10bnklqrb0n";
       libraryHaskellDepends = [
         base base-orphans bifunctors comonad containers contravariant
         distributive semigroups tagged transformers transformers-compat
       ];
       testHaskellDepends = [ base directory doctest filepath ];
       homepage = "http://github.com/ekmett/semigroupoids";
       description = "Semigroupoids: Category sans id";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "semigroups" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "semigroups";
       version = "0.18.2";
       sha256 = "1r6hsn3am3dpf4rprrj4m04d9318v9iq02bin0pl29dg4a3gzjax";
       libraryHaskellDepends = [ base ];
       homepage = "http://github.com/ekmett/semigroups/";
       description = "Anything that associates";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "semiring-simple" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "semiring-simple";
       version = "1.0.0.1";
       sha256 = "0a7xd58jl3dm03z2wv4iyp3dfjnpydn3lmlz25azqna57x9ip3f0";
       libraryHaskellDepends = [ base ];
       description = "A module for dealing with semirings";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "semver" = callPackage
    ({ mkDerivation, attoparsec, base, criterion, deepseq, tasty
     , tasty-hunit, text
     }:
     mkDerivation {
       pname = "semver";
       version = "0.3.3.1";
       sha256 = "1cf8dcxq4s479f826drncqc4hd07hv330zsipkrn0vc30sbkdlrn";
       libraryHaskellDepends = [ attoparsec base deepseq text ];
       testHaskellDepends = [ base tasty tasty-hunit text ];
       benchmarkHaskellDepends = [ base criterion text ];
       homepage = "https://github.com/brendanhay/semver";
       description = "Representation, manipulation, and de/serialisation of Semantic Versions";
       license = "unknown";
     }) {};
  "sendfile" = callPackage
    ({ mkDerivation, base, bytestring, network }:
     mkDerivation {
       pname = "sendfile";
       version = "0.7.9";
       sha256 = "0hnw1ym81cff49dwww19kgbs4s0kpandbvn6h5cml3y0p1nxybqh";
       libraryHaskellDepends = [ base bytestring network ];
       homepage = "http://hub.darcs.net/stepcut/sendfile";
       description = "A portable sendfile library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "seqalign" = callPackage
    ({ mkDerivation, base, bytestring, vector }:
     mkDerivation {
       pname = "seqalign";
       version = "0.2.0.4";
       sha256 = "01a3fhymyp7279hym03zzz6qkh5h47nq5y1xglar0n46imjr98af";
       libraryHaskellDepends = [ base bytestring vector ];
       description = "Sequence Alignment";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "seqloc" = callPackage
    ({ mkDerivation, attoparsec, base, biocore, bytestring, hashable
     , QuickCheck, random, unordered-containers, vector
     }:
     mkDerivation {
       pname = "seqloc";
       version = "0.6.1.1";
       sha256 = "1hsm9y6q0g7ixnqj562a33lmyka4k7f778fndcmn25v4m1myfda4";
       libraryHaskellDepends = [
         attoparsec base biocore bytestring hashable unordered-containers
         vector
       ];
       testHaskellDepends = [
         attoparsec base biocore bytestring hashable QuickCheck random
         unordered-containers vector
       ];
       homepage = "http://www.ingolia-lab.org/seqloc-tutorial.html";
       description = "Handle sequence locations for bioinformatics";
       license = stdenv.lib.licenses.mit;
     }) {};
  "serf" = callPackage
    ({ mkDerivation, attoparsec, base, conduit, conduit-extra, mtl
     , operational, process, resourcet, text
     }:
     mkDerivation {
       pname = "serf";
       version = "0.1.1.0";
       sha256 = "0ry0shqmazxcsjxsh6amvz2fky2fy3wwlck7d331j8csz7fwdjfn";
       libraryHaskellDepends = [
         attoparsec base conduit conduit-extra mtl operational process
         resourcet text
       ];
       homepage = "http://github.com/sanetracker/serf";
       description = "Interact with Serf via Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};
  "servant" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, base-compat, bytestring
     , bytestring-conversion, case-insensitive, directory, doctest
     , filemanip, filepath, hspec, http-api-data, http-media, http-types
     , mmorph, mtl, network-uri, QuickCheck, quickcheck-instances
     , string-conversions, text, url, vault
     }:
     mkDerivation {
       pname = "servant";
       version = "0.8.1";
       sha256 = "1hfqar2y09qin5qr9flwzificpj817qhqpakj9x3q4nqnk798m1b";
       libraryHaskellDepends = [
         aeson attoparsec base base-compat bytestring bytestring-conversion
         case-insensitive http-api-data http-media http-types mmorph mtl
         network-uri string-conversions text vault
       ];
       testHaskellDepends = [
         aeson attoparsec base base-compat bytestring directory doctest
         filemanip filepath hspec QuickCheck quickcheck-instances
         string-conversions text url
       ];
       homepage = "http://haskell-servant.readthedocs.org/";
       description = "A family of combinators for defining webservices APIs";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "servant-JuicyPixels" = callPackage
    ({ mkDerivation, base, bytestring, http-media, JuicyPixels, servant
     , servant-server, wai, warp
     }:
     mkDerivation {
       pname = "servant-JuicyPixels";
       version = "0.3.0.2";
       sha256 = "1g9y1fqyd7v1cmwjid5i83qji2a4c514hmpz7ypz6zvd4ppj5v9l";
       revision = "1";
       editedCabalFile = "1sj4qyaf75nf1mciddga30b8ddrwv94184cz751n9abxidl18r49";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring http-media JuicyPixels servant
       ];
       executableHaskellDepends = [
         base JuicyPixels servant servant-server wai warp
       ];
       homepage = "https://github.com/tvh/servant-JuicyPixels";
       description = "Servant support for JuicyPixels";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "servant-aeson-specs" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, base, bytestring, directory
     , doctest, filepath, hspec, hspec-core, hspec-golden-aeson, mockery
     , QuickCheck, quickcheck-arbitrary-adt, quickcheck-instances
     , random, servant, silently, string-conversions, temporary, text
     }:
     mkDerivation {
       pname = "servant-aeson-specs";
       version = "0.5.2.0";
       sha256 = "1pgj44hi9akj7irrbzr6f96pih7g9pb35jrhnwx4483rgj4ywa17";
       libraryHaskellDepends = [
         aeson aeson-pretty base bytestring directory filepath hspec
         hspec-golden-aeson QuickCheck quickcheck-arbitrary-adt random
         servant
       ];
       testHaskellDepends = [
         aeson aeson-pretty base bytestring directory doctest filepath hspec
         hspec-core hspec-golden-aeson mockery QuickCheck
         quickcheck-arbitrary-adt quickcheck-instances random servant
         silently string-conversions temporary text
       ];
       homepage = "https://github.com/plow-technologies/servant-aeson-specs#readme";
       description = "generic tests for aeson serialization in servant";
       license = stdenv.lib.licenses.mit;
     }) {};
  "servant-blaze" = callPackage
    ({ mkDerivation, base, blaze-html, http-media, servant }:
     mkDerivation {
       pname = "servant-blaze";
       version = "0.7.1";
       sha256 = "0ii60xn5khsj8w3glvwqpwrpd6v9yc1n52gk9qsfwfxq49x1rvch";
       revision = "3";
       editedCabalFile = "1vx5nmyvlkx70kx9g5vl6y5d801wkkl4vy3wr292qwp9ka442kwz";
       libraryHaskellDepends = [ base blaze-html http-media servant ];
       homepage = "http://haskell-servant.readthedocs.org/";
       description = "Blaze-html support for servant";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "servant-cassava" = callPackage
    ({ mkDerivation, base, cassava, http-media, servant, vector }:
     mkDerivation {
       pname = "servant-cassava";
       version = "0.8";
       sha256 = "1yz4vhj7b210mgk6wjkj0gg5vzz4092jxybvwizjri1gvkvqb6sx";
       revision = "1";
       editedCabalFile = "1c2lz3vm21h9r3ybhjggw0nfsbzrb6bqyqv2lvwz65wrj9hlrisn";
       libraryHaskellDepends = [ base cassava http-media servant vector ];
       homepage = "http://haskell-servant.readthedocs.org/";
       description = "Servant CSV content-type for cassava";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "servant-client" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, base64-bytestring
     , bytestring, deepseq, exceptions, hspec, http-api-data
     , http-client, http-client-tls, http-media, http-types, HUnit
     , network, network-uri, QuickCheck, safe, servant, servant-server
     , string-conversions, text, transformers, transformers-compat, wai
     , warp
     }:
     mkDerivation {
       pname = "servant-client";
       version = "0.8.1";
       sha256 = "0fp3z3c879pw0nxmym7v8kbd2sw8s10zaz78zsb5b38y4s7k41x0";
       libraryHaskellDepends = [
         aeson attoparsec base base64-bytestring bytestring exceptions
         http-api-data http-client http-client-tls http-media http-types
         network-uri safe servant string-conversions text transformers
         transformers-compat
       ];
       testHaskellDepends = [
         aeson base bytestring deepseq hspec http-client http-media
         http-types HUnit network QuickCheck servant servant-server text
         transformers transformers-compat wai warp
       ];
       homepage = "http://haskell-servant.readthedocs.org/";
       description = "automatical derivation of querying functions for servant webservices";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "servant-docs" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, base, bytestring
     , bytestring-conversion, case-insensitive, control-monad-omega
     , hashable, hspec, http-media, http-types, lens, servant
     , string-conversions, text, unordered-containers
     }:
     mkDerivation {
       pname = "servant-docs";
       version = "0.8.1";
       sha256 = "13c68lb086c0bda83iknlm243fmvl84s585v5zgzsm6s901fys2s";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson aeson-pretty base bytestring bytestring-conversion
         case-insensitive control-monad-omega hashable http-media http-types
         lens servant string-conversions text unordered-containers
       ];
       executableHaskellDepends = [
         aeson base bytestring-conversion lens servant string-conversions
         text
       ];
       testHaskellDepends = [
         aeson base hspec lens servant string-conversions
       ];
       homepage = "http://haskell-servant.readthedocs.org/";
       description = "generate API docs for your servant webservice";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "servant-foreign" = callPackage
    ({ mkDerivation, base, hspec, http-types, lens, servant, text }:
     mkDerivation {
       pname = "servant-foreign";
       version = "0.8.1";
       sha256 = "0w9igfmq2lflqvk1k6rqzw73a84dd6w5z15pcck92lxkhjivlw6x";
       libraryHaskellDepends = [ base http-types lens servant text ];
       testHaskellDepends = [ base hspec ];
       description = "Helpers for generating clients for servant APIs in any programming language";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "servant-js" = callPackage
    ({ mkDerivation, aeson, base, base-compat, charset, filepath, hspec
     , hspec-expectations, language-ecmascript, lens, servant
     , servant-foreign, servant-server, stm, text, transformers, warp
     }:
     mkDerivation {
       pname = "servant-js";
       version = "0.8.1";
       sha256 = "0qq3ikg9s8ggd4vcdwdki3jlaiajihf6pzf7f0amz7rzjn9dcq2z";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base base-compat charset lens servant servant-foreign text
       ];
       executableHaskellDepends = [
         aeson base filepath lens servant servant-server stm transformers
         warp
       ];
       testHaskellDepends = [
         base base-compat hspec hspec-expectations language-ecmascript lens
         servant text
       ];
       homepage = "http://haskell-servant.readthedocs.org/";
       description = "Automatically derive javascript functions to query servant webservices";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "servant-lucid" = callPackage
    ({ mkDerivation, base, http-media, lucid, servant }:
     mkDerivation {
       pname = "servant-lucid";
       version = "0.7.1";
       sha256 = "0h7yw140ymigrzrzp2vkkhg13gg1d8pj9xmcpq8bw2cv2myvl9pc";
       revision = "3";
       editedCabalFile = "1rfvijk4gf3vq1r12f9xqmwa2jgfxrxr6869sf8klgkg6dhixf2b";
       libraryHaskellDepends = [ base http-media lucid servant ];
       homepage = "http://haskell-servant.readthedocs.org/";
       description = "Servant support for lucid";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "servant-mock" = callPackage
    ({ mkDerivation, aeson, base, bytestring, bytestring-conversion
     , hspec, hspec-wai, http-types, QuickCheck, servant, servant-server
     , transformers, wai, warp
     }:
     mkDerivation {
       pname = "servant-mock";
       version = "0.8.1.1";
       sha256 = "0z8rsw995k8lkp4bpw4r8bcrnq7ljazznfh0dglcc2s6k5c1ldyp";
       revision = "1";
       editedCabalFile = "0kfv4nbzbny7wx5d7pgc3f2jgm9xq6zabldfdm8215bh5x3sfh90";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring http-types QuickCheck servant servant-server
         transformers wai
       ];
       executableHaskellDepends = [
         aeson base QuickCheck servant-server warp
       ];
       testHaskellDepends = [
         aeson base bytestring-conversion hspec hspec-wai QuickCheck servant
         servant-server wai
       ];
       homepage = "http://haskell-servant.readthedocs.org/";
       description = "Derive a mock server for free from your servant API types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "servant-purescript" = callPackage
    ({ mkDerivation, aeson, base, bytestring, containers, directory
     , filepath, http-types, lens, mainland-pretty, purescript-bridge
     , servant, servant-foreign, servant-server, servant-subscriber
     , text
     }:
     mkDerivation {
       pname = "servant-purescript";
       version = "0.3.1.5";
       sha256 = "1mdrfipl4xvd111861669ify3i97y9g9zsx4dlzgpisl44xkdx1v";
       libraryHaskellDepends = [
         aeson base bytestring containers directory filepath http-types lens
         mainland-pretty purescript-bridge servant servant-foreign
         servant-server servant-subscriber text
       ];
       testHaskellDepends = [
         aeson base containers lens mainland-pretty purescript-bridge
         servant servant-foreign servant-subscriber text
       ];
       homepage = "https://github.com/eskimor/servant-purescript#readme";
       description = "Generate PureScript accessor functions for you servant API";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "servant-server" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, base-compat
     , base64-bytestring, bytestring, bytestring-conversion, containers
     , directory, doctest, exceptions, filemanip, filepath, hspec
     , hspec-wai, http-api-data, http-types, mtl, network, network-uri
     , parsec, QuickCheck, safe, servant, should-not-typecheck, split
     , string-conversions, system-filepath, temporary, text
     , transformers, transformers-compat, wai, wai-app-static, wai-extra
     , warp, word8
     }:
     mkDerivation {
       pname = "servant-server";
       version = "0.8.1";
       sha256 = "1cm2hkz0hh9pwr0caa32gj28652wsr2i5l56n4g47kh0vxj2hria";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson attoparsec base base-compat base64-bytestring bytestring
         containers filepath http-api-data http-types mtl network
         network-uri safe servant split string-conversions system-filepath
         text transformers transformers-compat wai wai-app-static warp word8
       ];
       executableHaskellDepends = [ aeson base servant text wai warp ];
       testHaskellDepends = [
         aeson base base-compat base64-bytestring bytestring
         bytestring-conversion directory doctest exceptions filemanip
         filepath hspec hspec-wai http-types mtl network parsec QuickCheck
         safe servant should-not-typecheck string-conversions temporary text
         transformers transformers-compat wai wai-extra warp
       ];
       homepage = "http://haskell-servant.readthedocs.org/";
       description = "A family of combinators for defining webservices APIs and serving them";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "servant-subscriber" = callPackage
    ({ mkDerivation, aeson, async, attoparsec, base, blaze-builder
     , bytestring, case-insensitive, containers, directory, filepath
     , http-types, lens, lifted-base, monad-control, monad-logger
     , network-uri, purescript-bridge, servant, servant-foreign
     , servant-server, stm, text, time, transformers, wai
     , wai-websockets, warp, websockets
     }:
     mkDerivation {
       pname = "servant-subscriber";
       version = "0.5.0.3";
       sha256 = "0al40x2hiam4nv8zxw8ysc2vs5r5y72dqa604i2n44jwaryg8c05";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson async attoparsec base blaze-builder bytestring
         case-insensitive containers directory filepath http-types lens
         lifted-base monad-control monad-logger network-uri servant
         servant-foreign servant-server stm text time transformers wai
         wai-websockets warp websockets
       ];
       executableHaskellDepends = [ base purescript-bridge ];
       homepage = "http://github.com/eskimor/servant-subscriber#readme";
       description = "When REST is not enough ...";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "servant-swagger" = callPackage
    ({ mkDerivation, aeson, aeson-qq, base, bytestring, directory
     , doctest, filepath, hspec, http-media, insert-ordered-containers
     , lens, QuickCheck, servant, swagger2, text, time
     , unordered-containers
     }:
     mkDerivation {
       pname = "servant-swagger";
       version = "1.1.2";
       sha256 = "0zn4r325mp1aqcg6gq2lvwizvypaabqdsnsx5v8gx29117gmr98s";
       revision = "2";
       editedCabalFile = "10f0f010wkz3q834c9nfnv9dg0m4hbz21r3zy39dnvjm4zjyfk0v";
       libraryHaskellDepends = [
         aeson base bytestring hspec http-media insert-ordered-containers
         lens QuickCheck servant swagger2 text unordered-containers
       ];
       testHaskellDepends = [
         aeson aeson-qq base directory doctest filepath hspec lens
         QuickCheck servant swagger2 text time
       ];
       homepage = "https://github.com/haskell-servant/servant-swagger";
       description = "Generate Swagger specification for your servant API";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "servant-swagger-ui" = callPackage
    ({ mkDerivation, aeson, base, base-compat, blaze-markup, bytestring
     , directory, file-embed, filepath, http-media, lens, servant
     , servant-blaze, servant-server, servant-swagger, swagger2
     , template-haskell, text, transformers, transformers-compat, wai
     , wai-app-static, warp
     }:
     mkDerivation {
       pname = "servant-swagger-ui";
       version = "0.2.1.2.2.8";
       sha256 = "195kmk2izws58mzkb1qmpvkk91kd249dybmf2jd8ayjjqgsmv8i1";
       revision = "1";
       editedCabalFile = "1j1av2wijkql9x4i3x32rhlx3fxdwkkr2ilifzc8078dyqihvm1s";
       libraryHaskellDepends = [
         base blaze-markup bytestring directory file-embed filepath
         http-media servant servant-blaze servant-server servant-swagger
         swagger2 template-haskell text transformers transformers-compat
         wai-app-static
       ];
       testHaskellDepends = [
         aeson base base-compat blaze-markup bytestring directory file-embed
         filepath http-media lens servant servant-blaze servant-server
         servant-swagger swagger2 template-haskell text transformers
         transformers-compat wai wai-app-static warp
       ];
       homepage = "https://github.com/phadej/servant-swagger-ui#readme";
       description = "Servant swagger ui";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "servant-yaml" = callPackage
    ({ mkDerivation, aeson, base, base-compat, bytestring, http-media
     , servant, servant-server, wai, warp, yaml
     }:
     mkDerivation {
       pname = "servant-yaml";
       version = "0.1.0.0";
       sha256 = "011jxvr2i65bf0kmdn0sxkqgfz628a0sfhzphr1rqsmh8sqdj5y9";
       revision = "12";
       editedCabalFile = "06a5656356ki17nb9zxykrm3a0vx1nnh65dpyvaph470zjdb5g58";
       libraryHaskellDepends = [
         base bytestring http-media servant yaml
       ];
       testHaskellDepends = [
         aeson base base-compat bytestring http-media servant servant-server
         wai warp yaml
       ];
       homepage = "https://github.com/phadej/servant-yaml#readme";
       description = "Servant support for yaml";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "serversession" = callPackage
    ({ mkDerivation, aeson, base, base64-bytestring, bytestring
     , containers, data-default, hashable, hspec, nonce, path-pieces
     , QuickCheck, text, time, transformers, unordered-containers
     }:
     mkDerivation {
       pname = "serversession";
       version = "1.0.1";
       sha256 = "08j8v6a2018bmvwsb7crdg0ajak74jggb073pdpx9s0pf3cfzyrz";
       libraryHaskellDepends = [
         aeson base base64-bytestring bytestring data-default hashable nonce
         path-pieces text time transformers unordered-containers
       ];
       testHaskellDepends = [
         aeson base base64-bytestring bytestring containers data-default
         hspec nonce path-pieces QuickCheck text time transformers
         unordered-containers
       ];
       homepage = "https://github.com/yesodweb/serversession";
       description = "Secure, modular server-side sessions";
       license = stdenv.lib.licenses.mit;
     }) {};
  "serversession-backend-acid-state" = callPackage
    ({ mkDerivation, acid-state, base, containers, hspec, mtl, safecopy
     , serversession, unordered-containers
     }:
     mkDerivation {
       pname = "serversession-backend-acid-state";
       version = "1.0.3";
       sha256 = "1rkw5an7lwx05063caqjhvf449jxij2zrbymg64p600mngb1flq0";
       libraryHaskellDepends = [
         acid-state base containers mtl safecopy serversession
         unordered-containers
       ];
       testHaskellDepends = [
         acid-state base containers hspec mtl safecopy serversession
         unordered-containers
       ];
       homepage = "https://github.com/yesodweb/serversession";
       description = "Storage backend for serversession using acid-state";
       license = stdenv.lib.licenses.mit;
     }) {};
  "serversession-frontend-wai" = callPackage
    ({ mkDerivation, base, bytestring, cookie, data-default
     , path-pieces, serversession, text, time, transformers
     , unordered-containers, vault, wai, wai-session
     }:
     mkDerivation {
       pname = "serversession-frontend-wai";
       version = "1.0";
       sha256 = "0rxifhjirhmhk1x14m6lvpv6dl32g179i4i3xi3dq59r7l716j0b";
       libraryHaskellDepends = [
         base bytestring cookie data-default path-pieces serversession text
         time transformers unordered-containers vault wai wai-session
       ];
       homepage = "https://github.com/yesodweb/serversession";
       description = "wai-session bindings for serversession";
       license = stdenv.lib.licenses.mit;
     }) {};
  "serversession-frontend-yesod" = callPackage
    ({ mkDerivation, base, bytestring, containers, cookie, data-default
     , path-pieces, serversession, text, time, transformers
     , unordered-containers, wai, yesod-core
     }:
     mkDerivation {
       pname = "serversession-frontend-yesod";
       version = "1.0";
       sha256 = "0lv7gkj4inks98g44n5kqvx5s4c66lmxf7gqfdly54znggglcf86";
       libraryHaskellDepends = [
         base bytestring containers cookie data-default path-pieces
         serversession text time transformers unordered-containers wai
         yesod-core
       ];
       homepage = "https://github.com/yesodweb/serversession";
       description = "Yesod bindings for serversession";
       license = stdenv.lib.licenses.mit;
     }) {};
  "servius" = callPackage
    ({ mkDerivation, base, blaze-builder, blaze-html, bytestring
     , http-types, markdown, shakespeare, text, wai, wai-app-static
     }:
     mkDerivation {
       pname = "servius";
       version = "1.2.0.2";
       sha256 = "0asxkdg7csxmnpzw672jazynhnnc73ddpay65npql0jz93mq45n1";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         base blaze-builder blaze-html bytestring http-types markdown
         shakespeare text wai wai-app-static
       ];
       doHaddock = false;
       homepage = "http://github.com/snoyberg/servius#readme";
       description = "Warp web server with template rendering";
       license = stdenv.lib.licenses.mit;
     }) {};
  "set-monad" = callPackage
    ({ mkDerivation, base, containers, deepseq }:
     mkDerivation {
       pname = "set-monad";
       version = "0.2.0.0";
       sha256 = "1nxgn8d0qff4s66gcvfrnxjh0aq5q5jk0s453km28457qh946azb";
       libraryHaskellDepends = [ base containers deepseq ];
       description = "Set monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "setenv" = callPackage
    ({ mkDerivation, base, unix }:
     mkDerivation {
       pname = "setenv";
       version = "0.1.1.3";
       sha256 = "0cnbgrvb9byyahb37zlqrj05rj25v190crgcw8wmlgf0mwwxyn73";
       revision = "1";
       editedCabalFile = "0ny4g3kjys0hqg41mnwrsymy1bwhl8l169kis4y4fa58sb06m4f5";
       libraryHaskellDepends = [ base unix ];
       description = "A cross-platform library for setting environment variables";
       license = stdenv.lib.licenses.mit;
     }) {};
  "setlocale" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "setlocale";
       version = "1.0.0.4";
       sha256 = "1sd73zgpijr9xjdj5p562cmlcxmx5iff5k8xh9b6rpcgrgnnlf9j";
       libraryHaskellDepends = [ base ];
       homepage = "https://bitbucket.org/IchUndNichtDu/haskell-setlocale";
       description = "Haskell bindings to setlocale";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "sets" = callPackage
    ({ mkDerivation, base, commutative, composition, containers
     , contravariant, criterion, hashable, keys, mtl, QuickCheck
     , quickcheck-instances, semigroupoids, semigroups, tasty
     , tasty-hunit, tasty-quickcheck, transformers, transformers-base
     , unordered-containers, witherable
     }:
     mkDerivation {
       pname = "sets";
       version = "0.0.5.2";
       sha256 = "04w7wisn9fzkg7wqfzmibd6myj3c4bvkx7w7i5q0nxx5njvxa85y";
       libraryHaskellDepends = [
         base commutative composition containers contravariant hashable keys
         mtl QuickCheck semigroupoids semigroups transformers
         transformers-base unordered-containers witherable
       ];
       testHaskellDepends = [
         base commutative containers contravariant QuickCheck
         quickcheck-instances tasty tasty-hunit tasty-quickcheck
         unordered-containers
       ];
       benchmarkHaskellDepends = [
         base commutative containers contravariant criterion
         unordered-containers
       ];
       description = "Ducktyped set interface for Haskell containers";
       license = stdenv.lib.licenses.mit;
     }) {};
  "shake" = callPackage
    ({ mkDerivation, base, binary, bytestring, deepseq, directory
     , extra, filepath, hashable, js-flot, js-jquery, primitive, process
     , QuickCheck, random, time, transformers, unix
     , unordered-containers, utf8-string
     }:
     mkDerivation {
       pname = "shake";
       version = "0.15.11";
       sha256 = "1fxi4vl6fffq0h84rxd9cqik58mj8jk7gmspm9vkjmp97j1hslh5";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base binary bytestring deepseq directory extra filepath hashable
         js-flot js-jquery process random time transformers unix
         unordered-containers utf8-string
       ];
       executableHaskellDepends = [
         base binary bytestring deepseq directory extra filepath hashable
         js-flot js-jquery primitive process random time transformers unix
         unordered-containers utf8-string
       ];
       testHaskellDepends = [
         base binary bytestring deepseq directory extra filepath hashable
         js-flot js-jquery process QuickCheck random time transformers unix
         unordered-containers utf8-string
       ];
       doCheck = false;
       homepage = "http://shakebuild.com";
       description = "Build system library, like Make, but more accurate dependencies";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "shake-language-c" = callPackage
    ({ mkDerivation, base, data-default-class, directory, doctest
     , fclabels, hspec, process, shake, split, unordered-containers
     }:
     mkDerivation {
       pname = "shake-language-c";
       version = "0.10.0";
       sha256 = "123q81nzsklmy088r912m5dvigd2viwsn28fz0hc6ynv6wf063qv";
       libraryHaskellDepends = [
         base data-default-class fclabels process shake split
         unordered-containers
       ];
       testHaskellDepends = [ base directory doctest hspec shake ];
       homepage = "https://github.com/samplecount/shake-language-c";
       description = "Utilities for cross-compiling with Shake";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "shakespeare" = callPackage
    ({ mkDerivation, aeson, base, blaze-html, blaze-markup, bytestring
     , containers, directory, exceptions, ghc-prim, hspec, HUnit, parsec
     , process, scientific, template-haskell, text, time, transformers
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "shakespeare";
       version = "2.0.12.1";
       sha256 = "1b486jyq5yi87jidzk4lzyancag1p5a5s2zk2ah2hkwsl59p2z85";
       libraryHaskellDepends = [
         aeson base blaze-html blaze-markup bytestring containers directory
         exceptions ghc-prim parsec process scientific template-haskell text
         time transformers unordered-containers vector
       ];
       testHaskellDepends = [
         aeson base blaze-html blaze-markup bytestring containers directory
         exceptions ghc-prim hspec HUnit parsec process template-haskell
         text time transformers
       ];
       homepage = "http://www.yesodweb.com/book/shakespearean-templates";
       description = "A toolkit for making compile-time interpolated templates";
       license = stdenv.lib.licenses.mit;
     }) {};
  "shell-conduit" = callPackage
    ({ mkDerivation, async, base, bytestring, conduit, conduit-extra
     , control-monad-loop, directory, filepath, monad-control, monads-tf
     , process, resourcet, semigroups, split, template-haskell, text
     , transformers, transformers-base, unix
     }:
     mkDerivation {
       pname = "shell-conduit";
       version = "4.5.2";
       sha256 = "04kc9gzlqbw3d2pj6qn13pnmmrlmx8nmmj5bvxn7zdmh25nw6ys2";
       libraryHaskellDepends = [
         async base bytestring conduit conduit-extra control-monad-loop
         directory filepath monad-control monads-tf process resourcet
         semigroups split template-haskell text transformers
         transformers-base unix
       ];
       homepage = "https://github.com/chrisdone/shell-conduit";
       description = "Write shell scripts with Conduit";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "shelly" = callPackage
    ({ mkDerivation, async, base, bytestring, containers, directory
     , enclosed-exceptions, exceptions, lifted-async, lifted-base
     , monad-control, mtl, process, system-fileio, system-filepath, text
     , time, transformers, transformers-base, unix-compat
     }:
     mkDerivation {
       pname = "shelly";
       version = "1.6.8.1";
       sha256 = "1ka58jxs12zwsqy518d7y6ywmpf9k4g2fk8ny38ng5kpa9sjz8z5";
       revision = "1";
       editedCabalFile = "00amvlmjkhibpjip84d9s1xrn4nx78zmavha5d65dm2j25q9al25";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         async base bytestring containers directory enclosed-exceptions
         exceptions lifted-async lifted-base monad-control mtl process
         system-fileio system-filepath text time transformers
         transformers-base unix-compat
       ];
       doCheck = false;
       homepage = "https://github.com/yesodweb/Shelly.hs";
       description = "shell-like (systems) programming in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "shortcut-links" = callPackage
    ({ mkDerivation, base, text }:
     mkDerivation {
       pname = "shortcut-links";
       version = "0.4.2.0";
       sha256 = "09sh6c1cwhs9x49mim8z1pafb0sh1z3im0k5wvigkpagx72pasqy";
       libraryHaskellDepends = [ base text ];
       homepage = "http://github.com/aelve/shortcut-links";
       description = "Link shortcuts for use in text markup";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "should-not-typecheck" = callPackage
    ({ mkDerivation, base, deepseq, hspec, hspec-expectations, HUnit }:
     mkDerivation {
       pname = "should-not-typecheck";
       version = "2.1.0";
       sha256 = "14fmv0mv2v4fqzynamlrmdj6d1l65aw1srf1wv19nrq7rrqaqf7m";
       libraryHaskellDepends = [ base deepseq HUnit ];
       testHaskellDepends = [
         base deepseq hspec hspec-expectations HUnit
       ];
       homepage = "http://github.com/CRogers/should-not-typecheck";
       description = "A HUnit/hspec assertion library to verify that an expression does not typecheck";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "show-type" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "show-type";
       version = "0.1.1";
       sha256 = "1sppi8vj1cg7gwz7vagc1cry22b814wlwbm6jjj1c4d5f4kmpyyv";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/Kinokkory/show-type";
       description = "convert types into string values in haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "signal" = callPackage
    ({ mkDerivation, base, unix }:
     mkDerivation {
       pname = "signal";
       version = "0.1.0.3";
       sha256 = "1iwa707xd4g4lycdjr72ygrjy68gyqyvhvl2bbxswgpfxy5i1x8x";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base unix ];
       executableHaskellDepends = [ base ];
       homepage = "http://github.com/pmlodawski/signal";
       description = "Multiplatform signal support for Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};
  "silently" = callPackage
    ({ mkDerivation, base, deepseq, directory, nanospec, temporary }:
     mkDerivation {
       pname = "silently";
       version = "1.2.5";
       sha256 = "0f9qm3f7y0hpxn6mddhhg51mm1r134qkvd2kr8r6192ka1ijbxnf";
       libraryHaskellDepends = [ base deepseq directory ];
       testHaskellDepends = [ base deepseq directory nanospec temporary ];
       homepage = "https://github.com/hspec/silently";
       description = "Prevent or capture writing to stdout and other handles";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "simple" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, base64-bytestring
     , blaze-builder, bytestring, cmdargs, directory, filepath, hspec
     , hspec-contrib, http-types, mime-types, monad-control, mtl
     , process, setenv, simple-templates, text, transformers
     , transformers-base, unordered-containers, vector, wai, wai-extra
     }:
     mkDerivation {
       pname = "simple";
       version = "0.11.1";
       sha256 = "05g8ymvygy0zcsqzmm6h1ws0ayll33cwgfwagssfpficm6wwzhvl";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson base base64-bytestring blaze-builder bytestring directory
         filepath http-types mime-types monad-control mtl simple-templates
         text transformers transformers-base unordered-containers vector wai
         wai-extra
       ];
       executableHaskellDepends = [
         aeson attoparsec base bytestring cmdargs directory filepath process
         setenv simple-templates text unordered-containers vector
       ];
       testHaskellDepends = [
         aeson base base64-bytestring blaze-builder bytestring directory
         filepath hspec hspec-contrib http-types mime-types monad-control
         mtl simple-templates text transformers transformers-base
         unordered-containers vector wai wai-extra
       ];
       homepage = "http://simple.cx";
       description = "A minimalist web framework for the WAI server interface";
       license = stdenv.lib.licenses.lgpl3;
     }) {};
  "simple-download" = callPackage
    ({ mkDerivation, base, conduit-combinators, http-client
     , http-conduit, mtl, transformers
     }:
     mkDerivation {
       pname = "simple-download";
       version = "0.0.2";
       sha256 = "1khgz6wljxzxsasvm20jinxyd59amw0izx50pfv12j5mbsszxajp";
       libraryHaskellDepends = [
         base conduit-combinators http-client http-conduit mtl transformers
       ];
       homepage = "https://github.com/TerrorJack/simple-download#readme";
       description = "A simple wrapper of http-conduit for file download";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "simple-log" = callPackage
    ({ mkDerivation, async, base, containers, deepseq, directory
     , exceptions, filepath, mtl, SafeSemaphore, text, time
     , transformers
     }:
     mkDerivation {
       pname = "simple-log";
       version = "0.4.0";
       sha256 = "19asnnlidiay6vprjmnwks3s3jksch61wnsbn41fn2zp0m2l932l";
       libraryHaskellDepends = [
         async base containers deepseq directory exceptions filepath mtl
         SafeSemaphore text time transformers
       ];
       homepage = "http://github.com/mvoidex/simple-log";
       description = "Simple log for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "simple-reflect" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "simple-reflect";
       version = "0.3.2";
       sha256 = "1dpcf6w3cf1sfl9bnlsx04x7aghw029glj5d05qzrsnms2rlw8iq";
       libraryHaskellDepends = [ base ];
       homepage = "http://twanvl.nl/blog/haskell/simple-reflection-of-expressions";
       description = "Simple reflection of expressions containing variables";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "simple-sendfile" = callPackage
    ({ mkDerivation, base, bytestring, conduit, conduit-extra
     , directory, hspec, HUnit, network, process, resourcet, unix
     }:
     mkDerivation {
       pname = "simple-sendfile";
       version = "0.2.25";
       sha256 = "0k99j9xfcf83c55jmn202hdinhjaa4yn3dal4rvjk2w2rlhqirha";
       revision = "1";
       editedCabalFile = "1axghvn2iz0gzlc0ics4q8abl15ggwvcwcmly5cxhmc32hqv8y5c";
       libraryHaskellDepends = [ base bytestring network unix ];
       testHaskellDepends = [
         base bytestring conduit conduit-extra directory hspec HUnit network
         process resourcet unix
       ];
       description = "Cross platform library for the sendfile system call";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "simple-session" = callPackage
    ({ mkDerivation, base, base64-bytestring, blaze-builder, byteable
     , bytestring, containers, cookie, cryptohash, http-types, simple
     , transformers, wai, wai-extra
     }:
     mkDerivation {
       pname = "simple-session";
       version = "0.10.1.1";
       sha256 = "1hg7925p14hk1p8v65n5ysd41qyfsccrjm40192bd000m2vrr74a";
       libraryHaskellDepends = [
         base base64-bytestring blaze-builder byteable bytestring containers
         cookie cryptohash http-types simple transformers wai wai-extra
       ];
       homepage = "http://simple.cx";
       description = "Cookie-based session management for the Simple web framework";
       license = stdenv.lib.licenses.lgpl3;
     }) {};
  "simple-smt" = callPackage
    ({ mkDerivation, base, process }:
     mkDerivation {
       pname = "simple-smt";
       version = "0.6.0";
       sha256 = "15dnd6vjf8zl0bi5r4pczxdns8614rvdq1f44sgrmy8crc4x9d0c";
       libraryHaskellDepends = [ base process ];
       description = "A simple way to interact with an SMT solver process";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "simple-templates" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, hspec, HUnit, scientific
     , text, unordered-containers, vector
     }:
     mkDerivation {
       pname = "simple-templates";
       version = "0.8.0.1";
       sha256 = "13na1f29fvc0j452kh0a3fjig3fq4qbklcpdv6bm1fr0cf8hzq98";
       libraryHaskellDepends = [
         aeson attoparsec base scientific text unordered-containers vector
       ];
       testHaskellDepends = [
         aeson attoparsec base hspec HUnit scientific vector
       ];
       homepage = "http://simple.cx";
       description = "A basic template language for the Simple web framework";
       license = stdenv.lib.licenses.lgpl3;
     }) {};
  "singleton-bool" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "singleton-bool";
       version = "0.1.2.0";
       sha256 = "17a49mka1h7cd5jmgd3wm0dr45pwmc5i76xjaq7jcqsk193d1frk";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/phadej/singleton-bool#readme";
       description = "Type level booleans";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "singletons" = callPackage
    ({ mkDerivation, base, Cabal, containers, directory, filepath, mtl
     , process, syb, tasty, tasty-golden, template-haskell, th-desugar
     }:
     mkDerivation {
       pname = "singletons";
       version = "2.2";
       sha256 = "1bwcsp1x8bivmvkv8a724lsnwyjharhb0x0hl0isp3jgigh0dg9k";
       libraryHaskellDepends = [
         base containers mtl syb template-haskell th-desugar
       ];
       testHaskellDepends = [
         base Cabal directory filepath process tasty tasty-golden
       ];
       doCheck = false;
       homepage = "http://www.github.com/goldfirere/singletons";
       description = "A framework for generating singleton types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "siphash" = callPackage
    ({ mkDerivation, base, bytestring, cpu, QuickCheck, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "siphash";
       version = "1.0.3";
       sha256 = "1wq5dan30ggjgmravy92ylqjvjv1q7mxrmddr7zc8h6aqr0wx0fg";
       revision = "1";
       editedCabalFile = "1q2dy0ywngm9iv7k6d9gnf860m9hpf62q5qvdzmxw5s629gk4afn";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base bytestring cpu ];
       testHaskellDepends = [
         base bytestring QuickCheck test-framework
         test-framework-quickcheck2
       ];
       homepage = "http://github.com/vincenthz/hs-siphash";
       description = "siphash: a fast short input PRF";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "skein" = callPackage
    ({ mkDerivation, base, bytestring, cereal, crypto-api, filepath
     , hspec, tagged
     }:
     mkDerivation {
       pname = "skein";
       version = "1.0.9.4";
       sha256 = "1jdqdk0rz2wnvw735clnj8jh0a9rkrbqjg7vk3w6wczdql6cm0pq";
       libraryHaskellDepends = [
         base bytestring cereal crypto-api tagged
       ];
       testHaskellDepends = [
         base bytestring cereal crypto-api filepath hspec tagged
       ];
       doCheck = false;
       homepage = "https://github.com/meteficha/skein";
       description = "Skein, a family of cryptographic hash functions. Includes Skein-MAC as well.";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "skeletons" = callPackage
    ({ mkDerivation, ansi-wl-pprint, base, containers, directory
     , filepath, text, tinytemplate, transformers, transformers-compat
     }:
     mkDerivation {
       pname = "skeletons";
       version = "0.4.0";
       sha256 = "1imwdzgrpg2v8nn1c49f5lqs8kd5nj02jidrjjkk850k15fh9m9x";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         ansi-wl-pprint base containers directory filepath text tinytemplate
         transformers transformers-compat
       ];
       doHaddock = false;
       homepage = "https://github.com/jb55/skeletons";
       description = "Manage project skeletons";
       license = stdenv.lib.licenses.mit;
     }) {};
  "slave-thread" = callPackage
    ({ mkDerivation, base, base-prelude, HTF, list-t, mmorph
     , partial-handler, QuickCheck, quickcheck-instances, SafeSemaphore
     , stm-containers, transformers
     }:
     mkDerivation {
       pname = "slave-thread";
       version = "1.0.2";
       sha256 = "04sbbdgzsi1ww642b9fgbhx348c0a4qim4ak6bivwpnnimcj0wg4";
       libraryHaskellDepends = [
         base base-prelude list-t mmorph partial-handler stm-containers
         transformers
       ];
       testHaskellDepends = [
         base base-prelude HTF QuickCheck quickcheck-instances SafeSemaphore
       ];
       homepage = "https://github.com/nikita-volkov/slave-thread";
       description = "A principal solution to ghost threads and silent exceptions";
       license = stdenv.lib.licenses.mit;
     }) {};
  "slug" = callPackage
    ({ mkDerivation, aeson, base, exceptions, hspec, http-api-data
     , path-pieces, persistent, QuickCheck, text
     }:
     mkDerivation {
       pname = "slug";
       version = "0.1.6";
       sha256 = "14j6fca3fan8iazhf1r5l18hg22z59jj86mzbpnqhivx1nrqkmf4";
       libraryHaskellDepends = [
         aeson base exceptions http-api-data path-pieces persistent
         QuickCheck text
       ];
       testHaskellDepends = [
         base exceptions hspec http-api-data path-pieces QuickCheck text
       ];
       homepage = "https://github.com/mrkkrp/slug";
       description = "Type-safe slugs for Yesod ecosystem";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "smallcaps" = callPackage
    ({ mkDerivation, attoparsec, base, containers, data-default
     , directory, filepath, parsec, text, transformers
     }:
     mkDerivation {
       pname = "smallcaps";
       version = "0.6.0.4";
       sha256 = "1lw5zzfpizwrbpm981xr7sx1ac7iwkhwp541g276sszq927ls8n5";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         attoparsec base containers data-default directory filepath parsec
         text transformers
       ];
       executableHaskellDepends = [ base containers data-default text ];
       testHaskellDepends = [
         attoparsec base containers data-default parsec text
       ];
       description = "Flatten camel case text in LaTeX files";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "smallcheck" = callPackage
    ({ mkDerivation, base, ghc-prim, logict, mtl, pretty }:
     mkDerivation {
       pname = "smallcheck";
       version = "1.1.1";
       sha256 = "1ygrabxh40bym3grnzqyfqn96lirnxspb8cmwkkr213239y605sd";
       revision = "1";
       editedCabalFile = "1ykq0hqs1alw86p0ssa6dhsb1a8d4m6bqwibkhvzcd6c28dq975i";
       libraryHaskellDepends = [ base ghc-prim logict mtl pretty ];
       homepage = "https://github.com/feuerbach/smallcheck";
       description = "A property-based testing library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "smoothie" = callPackage
    ({ mkDerivation, aeson, base, linear, text, vector }:
     mkDerivation {
       pname = "smoothie";
       version = "0.4.2.6";
       sha256 = "0x31hd0m1z42g7qanwvh15y53n7n4cxl09hyv424a2yxk5s8f9cj";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ aeson base linear text vector ];
       homepage = "https://github.com/phaazon/smoothie";
       description = "Smooth curves via several interpolation modes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "smsaero" = callPackage
    ({ mkDerivation, aeson, base, containers, http-api-data
     , http-client, servant, servant-client, servant-docs, text, time
     }:
     mkDerivation {
       pname = "smsaero";
       version = "0.6.2";
       sha256 = "1v4hsiqs34368sjfhgg18z5ibsd9wfjljcdsxcff326mx6yxrwij";
       libraryHaskellDepends = [
         aeson base containers http-api-data http-client servant
         servant-client servant-docs text time
       ];
       homepage = "https://github.com/GetShopTV/smsaero";
       description = "SMSAero API and HTTP client based on servant library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "smtLib" = callPackage
    ({ mkDerivation, base, pretty }:
     mkDerivation {
       pname = "smtLib";
       version = "1.0.8";
       sha256 = "1a91ml428xxb9pd88vdw5cj076s13k864bk9kp48hb3l4a9ny09p";
       libraryHaskellDepends = [ base pretty ];
       description = "A library for working with the SMTLIB format";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "smtp-mail" = callPackage
    ({ mkDerivation, array, base, base16-bytestring, base64-bytestring
     , bytestring, cryptohash, filepath, mime-mail, network, text
     }:
     mkDerivation {
       pname = "smtp-mail";
       version = "0.1.4.6";
       sha256 = "1g0lsbd9h8bhk4xddgzm96i8fy233904jnqnl4i94ld2hzpwpnl6";
       libraryHaskellDepends = [
         array base base16-bytestring base64-bytestring bytestring
         cryptohash filepath mime-mail network text
       ];
       homepage = "http://github.com/jhickner/smtp-mail";
       description = "Simple email sending via SMTP";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "snap-core" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, bytestring-builder
     , case-insensitive, containers, deepseq, directory, filepath
     , hashable, HUnit, io-streams, lifted-base, monad-control, mtl
     , old-locale, parallel, QuickCheck, random, readable, regex-posix
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , text, time, transformers, transformers-base, unix-compat
     , unordered-containers, vector, zlib
     }:
     mkDerivation {
       pname = "snap-core";
       version = "1.0.1.0";
       sha256 = "0z53mx50c75nwyypd4ckhsr16apw25h8blbvdri06yz7j2vailpm";
       revision = "1";
       editedCabalFile = "1j288lpkzj6ki9gk1a1knbjh5pa87zdr3w62zgg3bmf91gi8n97g";
       libraryHaskellDepends = [
         attoparsec base bytestring bytestring-builder case-insensitive
         containers directory filepath HUnit io-streams lifted-base
         monad-control mtl old-locale random readable regex-posix text time
         transformers transformers-base unix-compat unordered-containers
         vector
       ];
       testHaskellDepends = [
         attoparsec base bytestring bytestring-builder case-insensitive
         containers deepseq directory filepath hashable HUnit io-streams
         lifted-base monad-control mtl old-locale parallel QuickCheck random
         readable regex-posix test-framework test-framework-hunit
         test-framework-quickcheck2 text time transformers transformers-base
         unix-compat unordered-containers vector zlib
       ];
       doCheck = false;
       homepage = "http://snapframework.com/";
       description = "Snap: A Haskell Web Framework (core interfaces and types)";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "snap-server" = callPackage
    ({ mkDerivation, attoparsec, base, base16-bytestring, blaze-builder
     , bytestring, bytestring-builder, case-insensitive, clock
     , containers, criterion, deepseq, directory, filepath, http-common
     , http-streams, HUnit, io-streams, io-streams-haproxy, lifted-base
     , monad-control, mtl, network, old-locale, parallel, QuickCheck
     , random, snap-core, test-framework, test-framework-hunit
     , test-framework-quickcheck2, text, threads, time, transformers
     , unix, unix-compat, vector
     }:
     mkDerivation {
       pname = "snap-server";
       version = "1.0.1.1";
       sha256 = "0w3c2h29j7qv1izz2iwih7vvaa0m8kygmxif50yqzk5r2nl873c7";
       revision = "1";
       editedCabalFile = "19zr69g7yq8xb9z6nlzzai2ywxzx9bmz976z5065kf1jvxqq16sv";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         attoparsec base blaze-builder bytestring bytestring-builder
         case-insensitive clock containers filepath io-streams
         io-streams-haproxy lifted-base mtl network old-locale snap-core
         text time unix unix-compat vector
       ];
       executableHaskellDepends = [
         attoparsec base blaze-builder bytestring bytestring-builder
         case-insensitive clock containers directory io-streams
         io-streams-haproxy lifted-base mtl network old-locale snap-core
         text time transformers unix unix-compat vector
       ];
       testHaskellDepends = [
         attoparsec base base16-bytestring blaze-builder bytestring
         bytestring-builder case-insensitive clock containers deepseq
         directory filepath http-common http-streams HUnit io-streams
         io-streams-haproxy lifted-base monad-control mtl network old-locale
         parallel QuickCheck random snap-core test-framework
         test-framework-hunit test-framework-quickcheck2 text threads time
         transformers unix unix-compat vector
       ];
       benchmarkHaskellDepends = [
         attoparsec base blaze-builder bytestring bytestring-builder
         criterion io-streams io-streams-haproxy snap-core vector
       ];
       homepage = "http://snapframework.com/";
       description = "A web server for the Snap Framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "snowflake" = callPackage
    ({ mkDerivation, base, time }:
     mkDerivation {
       pname = "snowflake";
       version = "0.1.1.1";
       sha256 = "1pfd8lqwv0504hli6fhwiqckcca0x9pnfzmy3kz36w7138rclmpi";
       revision = "1";
       editedCabalFile = "1y5v3nsin8iyxvh0abfhs7ma75p5zjvha0lp41801pdiikacfzha";
       libraryHaskellDepends = [ base time ];
       description = "A loose port of Twitter Snowflake to Haskell. Generates arbitrary precision, unique, time-sortable identifiers.";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "soap" = callPackage
    ({ mkDerivation, base, bytestring, conduit, configurator
     , data-default, exceptions, hspec, http-client, http-types, HUnit
     , iconv, mtl, resourcet, text, unordered-containers, xml-conduit
     , xml-conduit-writer, xml-types
     }:
     mkDerivation {
       pname = "soap";
       version = "0.2.3.3";
       sha256 = "0yarhkcnn9z11ghjs756fmcdawgr33r4mipzf32aqp677g45j5rd";
       libraryHaskellDepends = [
         base bytestring conduit configurator data-default exceptions
         http-client http-types iconv mtl resourcet text
         unordered-containers xml-conduit xml-conduit-writer xml-types
       ];
       testHaskellDepends = [
         base bytestring hspec HUnit text unordered-containers xml-conduit
         xml-conduit-writer
       ];
       homepage = "https://bitbucket.org/dpwiz/haskell-soap";
       description = "SOAP client tools";
       license = stdenv.lib.licenses.mit;
     }) {};
  "soap-openssl" = callPackage
    ({ mkDerivation, base, configurator, data-default, HsOpenSSL
     , http-client, http-client-openssl, soap, text
     }:
     mkDerivation {
       pname = "soap-openssl";
       version = "0.1.0.2";
       sha256 = "03w389yhybzvc06gpxigibqga9mr7m41rkg1ki3n686j9xzm8210";
       libraryHaskellDepends = [
         base configurator data-default HsOpenSSL http-client
         http-client-openssl soap text
       ];
       homepage = "https://bitbucket.org/dpwiz/haskell-soap";
       description = "TLS-enabled SOAP transport (using openssl bindings)";
       license = stdenv.lib.licenses.mit;
     }) {};
  "soap-tls" = callPackage
    ({ mkDerivation, base, configurator, connection, data-default
     , http-client, http-client-tls, soap, text, tls, x509, x509-store
     , x509-validation
     }:
     mkDerivation {
       pname = "soap-tls";
       version = "0.1.1.2";
       sha256 = "0xnzwzmhh2i5nci7xbnkr28hxm376fbmgjcwz7svk46k1vxvlfp4";
       libraryHaskellDepends = [
         base configurator connection data-default http-client
         http-client-tls soap text tls x509 x509-store x509-validation
       ];
       homepage = "https://bitbucket.org/dpwiz/haskell-soap";
       description = "TLS-enabled SOAP transport (using tls package)";
       license = stdenv.lib.licenses.mit;
     }) {};
  "socket" = callPackage
    ({ mkDerivation, async, base, bytestring, tasty, tasty-hunit }:
     mkDerivation {
       pname = "socket";
       version = "0.6.1.0";
       sha256 = "1rh9qir8qr8dwp1pn6073jvfhjbvyl3mzm61m193yj05qysza460";
       libraryHaskellDepends = [ base bytestring ];
       testHaskellDepends = [ async base bytestring tasty tasty-hunit ];
       homepage = "https://github.com/lpeterse/haskell-socket";
       description = "An extensible socket library";
       license = stdenv.lib.licenses.mit;
     }) {};
  "socks" = callPackage
    ({ mkDerivation, base, bytestring, cereal, network }:
     mkDerivation {
       pname = "socks";
       version = "0.5.5";
       sha256 = "0s689w1hh9g8ifl75xhzbv96ir07hwn04b4lgvbxzl8swa9ylir6";
       revision = "1";
       editedCabalFile = "0nz8q0xvd8y6f42bd1w3q8d8bg1qzl8ggx0a23kb3jb60g36dmvw";
       libraryHaskellDepends = [ base bytestring cereal network ];
       homepage = "http://github.com/vincenthz/hs-socks";
       description = "Socks proxy (version 5) implementation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "solga" = callPackage
    ({ mkDerivation, aeson, base, bytestring, containers, hashable
     , hspec, hspec-wai, hspec-wai-json, http-types, QuickCheck
     , resourcet, safe-exceptions, scientific, text
     , unordered-containers, vector, wai, wai-extra
     }:
     mkDerivation {
       pname = "solga";
       version = "0.1.0.1";
       sha256 = "1fmq3pmxj1shnnqfkqshmkmg1f20ngnlyr6akdhqssdk55s72ja9";
       libraryHaskellDepends = [
         aeson base bytestring containers http-types resourcet
         safe-exceptions text wai wai-extra
       ];
       testHaskellDepends = [
         aeson base bytestring hashable hspec hspec-wai hspec-wai-json
         http-types QuickCheck scientific text unordered-containers vector
         wai wai-extra
       ];
       homepage = "https://github.com/chpatrick/solga";
       description = "Simple typesafe web routing";
       license = stdenv.lib.licenses.mit;
     }) {};
  "solga-swagger" = callPackage
    ({ mkDerivation, base, bytestring, dlist, http-types
     , insert-ordered-containers, lens, mtl, solga, swagger2, text
     , unordered-containers
     }:
     mkDerivation {
       pname = "solga-swagger";
       version = "0.1.0.2";
       sha256 = "1m1n4675lm2xggbkg8zplpziyx2rrv1cwgl46ngwx0hc149p7dyw";
       libraryHaskellDepends = [
         base bytestring dlist http-types insert-ordered-containers lens mtl
         solga swagger2 text unordered-containers
       ];
       homepage = "https://github.com/chpatrick/solga";
       description = "Swagger generation for Solga";
       license = stdenv.lib.licenses.mit;
     }) {};
  "sorted-list" = callPackage
    ({ mkDerivation, base, criterion, deepseq }:
     mkDerivation {
       pname = "sorted-list";
       version = "0.2.0.0";
       sha256 = "0f6ihm4xsg31izzl4c13lic2aq4m2rq0d7y5xjlx7x2nn23wflnc";
       libraryHaskellDepends = [ base deepseq ];
       benchmarkHaskellDepends = [ base criterion ];
       homepage = "https://github.com/Daniel-Diaz/sorted-list/blob/master/README.md";
       description = "Type-enforced sorted lists and related functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "sourcemap" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, bytestring, criterion
     , process, random, text, unordered-containers, utf8-string
     }:
     mkDerivation {
       pname = "sourcemap";
       version = "0.1.6";
       sha256 = "0ynfm44ym8y592wnzdwa0d05dbkffyyg5sm26y5ylzpynk64r85r";
       revision = "1";
       editedCabalFile = "1f7q44ar6qfip8fsllg43jyn7r15ifn2r0vz32cbmx0sb0d38dax";
       libraryHaskellDepends = [
         aeson attoparsec base bytestring process text unordered-containers
         utf8-string
       ];
       testHaskellDepends = [
         aeson base bytestring process text unordered-containers utf8-string
       ];
       benchmarkHaskellDepends = [ base bytestring criterion random ];
       doCheck = false;
       description = "Implementation of source maps as proposed by Google and Mozilla";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "spdx" = callPackage
    ({ mkDerivation, base, tasty, tasty-quickcheck, transformers }:
     mkDerivation {
       pname = "spdx";
       version = "0.2.1.0";
       sha256 = "1wl0r4q6li6srvcbp4h1bk4k164vd7z8fcy12ixms7r0iq4xdw57";
       revision = "1";
       editedCabalFile = "0qffjk0iz3fnd4099n9bqzakpma6ffw6znk99x67j3i8qdmk1fmd";
       libraryHaskellDepends = [ base transformers ];
       testHaskellDepends = [ base tasty tasty-quickcheck ];
       doCheck = false;
       homepage = "https://github.com/phadej/spdx";
       description = "SPDX license expression language";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "speculation" = callPackage
    ({ mkDerivation, base, ghc-prim, stm, transformers }:
     mkDerivation {
       pname = "speculation";
       version = "1.5.0.3";
       sha256 = "0gsdxgi1bw33z7v23m2fq8ynqxz06swjv4ikl8mqmlp0hwd69gvk";
       libraryHaskellDepends = [ base ghc-prim stm transformers ];
       homepage = "http://github.com/ekmett/speculation";
       description = "A framework for safe, programmable, speculative parallelism";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "speedy-slice" = callPackage
    ({ mkDerivation, base, containers, lens, mcmc-types
     , mwc-probability, pipes, primitive, transformers
     }:
     mkDerivation {
       pname = "speedy-slice";
       version = "0.1.5";
       sha256 = "0h94s0ni5d4gdrm5rvb2rlg4lxgwm73rs9kb59xg879f2jdh8wnh";
       libraryHaskellDepends = [
         base lens mcmc-types mwc-probability pipes primitive transformers
       ];
       testHaskellDepends = [ base containers mwc-probability ];
       homepage = "http://github.com/jtobin/speedy-slice";
       description = "Speedy slice sampling";
       license = stdenv.lib.licenses.mit;
     }) {};
  "sphinx" = callPackage
    ({ mkDerivation, base, binary, bytestring, data-binary-ieee754
     , network, text, text-icu, xml
     }:
     mkDerivation {
       pname = "sphinx";
       version = "0.6.0.2";
       sha256 = "1px6lxxy7a34jni83l68nnhw40751g6pmvazplhc4wbfrv37gabn";
       libraryHaskellDepends = [
         base binary bytestring data-binary-ieee754 network text text-icu
         xml
       ];
       homepage = "https://github.com/gregwebs/haskell-sphinx-client";
       description = "Haskell bindings to the Sphinx full-text searching daemon";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "splice" = callPackage
    ({ mkDerivation, base, network }:
     mkDerivation {
       pname = "splice";
       version = "0.6.1.1";
       sha256 = "0lsfkm4vfipzbnqpf3yli6fwrv5a5mwbs149dfzhs7spa9kbxyl1";
       libraryHaskellDepends = [ base network ];
       homepage = "http://corsis.github.com/splice/";
       description = "Cross-platform Socket to Socket Data Splicing";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "split" = callPackage
    ({ mkDerivation, base, QuickCheck }:
     mkDerivation {
       pname = "split";
       version = "0.2.3.1";
       sha256 = "12660m16c6sib3laaxn6w9s453pyx1b49myrmzfij372vq5bc5bn";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base QuickCheck ];
       description = "Combinator library for splitting lists";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "spool" = callPackage
    ({ mkDerivation, base, bytestring, vector }:
     mkDerivation {
       pname = "spool";
       version = "0.1";
       sha256 = "1svkz3cxkyi6f3akakjfk1cvij85xy69v52d88gh97xgiawp5346";
       libraryHaskellDepends = [ base bytestring vector ];
       description = "Convert between ByteString and Vector.Storable without copying";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "spoon" = callPackage
    ({ mkDerivation, base, deepseq }:
     mkDerivation {
       pname = "spoon";
       version = "0.3.1";
       sha256 = "1m41k0mfy6fpfrv2ym4m5jsjaj9xdfl2iqpppd3c4d0fffv51cxr";
       revision = "1";
       editedCabalFile = "09s5jjcsg4g4qxchq9g2l4i9d5zh3rixpkbiysqcgl69kj8mwv74";
       libraryHaskellDepends = [ base deepseq ];
       description = "Catch errors thrown from pure computations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "sql-words" = callPackage
    ({ mkDerivation, base, QuickCheck, quickcheck-simple }:
     mkDerivation {
       pname = "sql-words";
       version = "0.1.4.1";
       sha256 = "1bixzyr6gy64ncmal010y22v9gdqxdnaambsc22sv08jcbwshgpm";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base QuickCheck quickcheck-simple ];
       homepage = "http://khibino.github.io/haskell-relational-record/";
       description = "Simple idea SQL keywords data constructor into OverloadedString";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "sqlite-simple" = callPackage
    ({ mkDerivation, attoparsec, base, base16-bytestring, blaze-builder
     , blaze-textual, bytestring, containers, direct-sqlite, HUnit, text
     , time, transformers
     }:
     mkDerivation {
       pname = "sqlite-simple";
       version = "0.4.12.1";
       sha256 = "09r225kkv95f9q42vhh9ksw1n15xd9k8dir6gdjw2frvxbgz891g";
       libraryHaskellDepends = [
         attoparsec base blaze-builder blaze-textual bytestring containers
         direct-sqlite text time transformers
       ];
       testHaskellDepends = [
         base base16-bytestring bytestring direct-sqlite HUnit text time
       ];
       homepage = "http://github.com/nurpax/sqlite-simple";
       description = "Mid-Level SQLite client library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "srcloc" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "srcloc";
       version = "0.5.1.0";
       sha256 = "1zssd6jxdhzl5wcygbmzq1s82i7m7rav6nm1m6kl5b68g77gc7g6";
       libraryHaskellDepends = [ base ];
       homepage = "http://www.cs.drexel.edu/~mainland/";
       description = "Data types for managing source code locations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "stache" = callPackage
    ({ mkDerivation, aeson, base, bytestring, containers, criterion
     , deepseq, directory, exceptions, file-embed, filepath, hspec
     , hspec-megaparsec, megaparsec, mtl, template-haskell, text
     , unordered-containers, vector, yaml
     }:
     mkDerivation {
       pname = "stache";
       version = "0.1.8";
       sha256 = "1cim7hn0qp9yf145cm57vd9f6a1822hsh21kzcx2rc47w0j7jqd8";
       revision = "2";
       editedCabalFile = "1nap6x2ihv5kdnl8h1imjwjlkspkwlfpn0k9327qllpx6iw5hgi9";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson base bytestring containers deepseq directory exceptions
         filepath megaparsec mtl template-haskell text unordered-containers
         vector
       ];
       testHaskellDepends = [
         aeson base bytestring containers file-embed hspec hspec-megaparsec
         megaparsec text yaml
       ];
       benchmarkHaskellDepends = [
         aeson base criterion deepseq megaparsec text
       ];
       homepage = "https://github.com/stackbuilders/stache";
       description = "Mustache templates for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "stack" = callPackage
    ({ mkDerivation, aeson, ansi-terminal, async, attoparsec, base
     , base-compat, base16-bytestring, base64-bytestring, binary
     , binary-tagged, blaze-builder, byteable, bytestring, Cabal
     , conduit, conduit-extra, containers, cryptohash
     , cryptohash-conduit, deepseq, directory, edit-distance, either
     , enclosed-exceptions, errors, exceptions, extra, fast-logger
     , filelock, filepath, fsnotify, generic-deriving, gitrev, hashable
     , hastache, hit, hpack, hpc, hspec, http-client, http-client-tls
     , http-conduit, http-types, lifted-base, microlens, monad-control
     , monad-logger, monad-unlift, mtl, open-browser
     , optparse-applicative, optparse-simple, path, path-io, persistent
     , persistent-sqlite, persistent-template, pretty, process
     , project-template, QuickCheck, regex-applicative-text, resourcet
     , retry, safe, semigroups, split, stm, streaming-commons, tar
     , template-haskell, temporary, text, text-binary, time, tls
     , transformers, transformers-base, unix, unix-compat
     , unordered-containers, vector, vector-binary-instances, yaml
     , zip-archive, zlib
     }:
     mkDerivation {
       pname = "stack";
       version = "1.1.2";
       sha256 = "0986n7rc4z3cb5lqxbajwnvldqfybrfpgdkrzi245igazlj6p0zw";
       revision = "8";
       editedCabalFile = "04isgkd0dw1ypzwwi17hd68wffz0r0yf7n6ccga1qj4wqxlwvdqf";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson ansi-terminal async attoparsec base base-compat
         base16-bytestring base64-bytestring binary binary-tagged
         blaze-builder byteable bytestring Cabal conduit conduit-extra
         containers cryptohash cryptohash-conduit deepseq directory
         edit-distance either enclosed-exceptions errors exceptions extra
         fast-logger filelock filepath fsnotify generic-deriving hashable
         hastache hit hpack hpc http-client http-client-tls http-conduit
         http-types lifted-base microlens monad-control monad-logger
         monad-unlift mtl open-browser optparse-applicative path path-io
         persistent persistent-sqlite persistent-template pretty process
         project-template regex-applicative-text resourcet retry safe
         semigroups split stm streaming-commons tar template-haskell
         temporary text text-binary time tls transformers transformers-base
         unix unix-compat unordered-containers vector
         vector-binary-instances yaml zip-archive zlib
       ];
       executableHaskellDepends = [
         base bytestring Cabal containers directory filelock filepath gitrev
         http-client lifted-base microlens monad-control monad-logger mtl
         optparse-applicative optparse-simple path path-io text transformers
       ];
       testHaskellDepends = [
         async attoparsec base bytestring Cabal conduit conduit-extra
         containers cryptohash directory exceptions filepath hspec
         http-conduit monad-logger path path-io process QuickCheck resourcet
         retry temporary text transformers unix-compat
       ];
       doCheck = false;
       preCheck = "export HOME=$TMPDIR";
       postInstall = ''
         exe=$out/bin/stack
         mkdir -p $out/share/bash-completion/completions
         $exe --bash-completion-script $exe >$out/share/bash-completion/completions/stack
       '';
       homepage = "http://haskellstack.org";
       description = "The Haskell Tool Stack";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "stack-run-auto" = callPackage
    ({ mkDerivation, async, base, directory, extract-dependencies
     , file-modules, filepath, lens, lens-aeson, MissingH, process
     , stm-containers, text, time, wreq
     }:
     mkDerivation {
       pname = "stack-run-auto";
       version = "0.1.1.4";
       sha256 = "0hzm0pbc3g2ixmbrrjly23afs1mhifccg7704sp5cjn59slnxfay";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         async base directory extract-dependencies file-modules filepath
         lens lens-aeson MissingH process stm-containers text time wreq
       ];
       executableHaskellDepends = [
         async base directory extract-dependencies file-modules filepath
         lens lens-aeson MissingH process stm-containers text time wreq
       ];
       testHaskellDepends = [
         async base directory extract-dependencies file-modules filepath
         lens lens-aeson MissingH process stm-containers text time wreq
       ];
       homepage = "http://github.com/yamadapc/stack-run-auto#readme";
       description = "Initial project template from stack";
       license = stdenv.lib.licenses.mit;
     }) {};
  "stackage-curator" = callPackage
    ({ mkDerivation, aeson, amazonka, amazonka-core, amazonka-s3, async
     , base, base16-bytestring, blaze-html, byteable, bytestring, Cabal
     , classy-prelude-conduit, conduit, conduit-extra, containers
     , cryptohash, cryptohash-conduit, data-default-class, directory
     , exceptions, filepath, hashable, hspec, html-conduit, http-client
     , http-client-tls, http-conduit, lucid, mime-types, monad-unlift
     , monad-unlift-ref, mono-traversable, mtl, old-locale
     , optparse-applicative, optparse-simple, process, QuickCheck
     , resourcet, safe, semigroups, stm, store, streaming-commons, syb
     , system-fileio, system-filepath, tar, temporary, text, time
     , transformers, unix-compat, unordered-containers, utf8-string
     , vector, xml-conduit, xml-types, yaml, zlib
     }:
     mkDerivation {
       pname = "stackage-curator";
       version = "0.14.3";
       sha256 = "1ym87c0a9q522sxzzackwx88wh9wc6lgj7a2f8vd51f3qq5qz1nf";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson amazonka amazonka-core amazonka-s3 async base
         base16-bytestring blaze-html byteable bytestring Cabal
         classy-prelude-conduit conduit conduit-extra containers cryptohash
         cryptohash-conduit data-default-class directory exceptions filepath
         hashable html-conduit http-client http-client-tls http-conduit
         lucid mime-types monad-unlift monad-unlift-ref mono-traversable mtl
         old-locale process resourcet safe semigroups stm store
         streaming-commons syb system-fileio system-filepath tar temporary
         text time transformers unix-compat unordered-containers utf8-string
         vector xml-conduit xml-types yaml zlib
       ];
       executableHaskellDepends = [
         aeson base http-client http-client-tls optparse-applicative
         optparse-simple system-filepath text
       ];
       testHaskellDepends = [
         base Cabal classy-prelude-conduit containers directory hspec
         http-client http-client-tls QuickCheck text yaml
       ];
       homepage = "https://github.com/fpco/stackage-curator";
       description = "Tools for curating Stackage bundles";
       license = stdenv.lib.licenses.mit;
     }) {};
  "stackage-types" = callPackage
    ({ mkDerivation, aeson, base, Cabal, containers, exceptions
     , hashable, safe, semigroups, text, time, unordered-containers
     , vector
     }:
     mkDerivation {
       pname = "stackage-types";
       version = "1.2.0";
       sha256 = "1jzlxnibl4fn6mqbxv9c8hw4zp7adyicwwkknr5w1am5k825a0n0";
       libraryHaskellDepends = [
         aeson base Cabal containers exceptions hashable safe semigroups
         text time unordered-containers vector
       ];
       homepage = "https://github.com/fpco/stackage-types";
       description = "Shared data types between various Stackage packages";
       license = stdenv.lib.licenses.mit;
     }) {};
  "state-plus" = callPackage
    ({ mkDerivation, base, checkers, mtl, QuickCheck }:
     mkDerivation {
       pname = "state-plus";
       version = "0.1.2";
       sha256 = "0z9pxr2qbsqfk1dkzj2argdlpp7cjfymb0d3iazn40nl6x8ibvf6";
       libraryHaskellDepends = [ base mtl ];
       testHaskellDepends = [ base checkers mtl QuickCheck ];
       description = "MonadPlus for StateT";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "stateWriter" = callPackage
    ({ mkDerivation, base, containers, criterion, deepseq, dlist, free
     , hspec, lens, mtl, QuickCheck, transformers, vector
     }:
     mkDerivation {
       pname = "stateWriter";
       version = "0.2.8";
       sha256 = "1qn6rj13cn71bmradmy0frmlz1s925ssp233qnr53dshqfg21vfv";
       libraryHaskellDepends = [ base mtl transformers ];
       testHaskellDepends = [ base free hspec mtl QuickCheck ];
       benchmarkHaskellDepends = [
         base containers criterion deepseq dlist lens mtl transformers
         vector
       ];
       description = "A faster variant of the RWS monad transformers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "stateref" = callPackage
    ({ mkDerivation, base, mtl, stm }:
     mkDerivation {
       pname = "stateref";
       version = "0.3";
       sha256 = "0hdpw6g255lj7jjvgqwhjdpzmka546vda5qjvry8gjj6nfm91lvx";
       libraryHaskellDepends = [ base mtl stm ];
       homepage = "http://code.haskell.org/~mokus/stateref/";
       description = "Abstraction for things that work like IORef";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "statestack" = callPackage
    ({ mkDerivation, base, mtl, transformers, transformers-compat }:
     mkDerivation {
       pname = "statestack";
       version = "0.2.0.5";
       sha256 = "0rjzx9iy5mx5igir6gvslznnx3gpxlb1xy1n8h4cn54cn3wxrspl";
       libraryHaskellDepends = [
         base mtl transformers transformers-compat
       ];
       description = "Simple State-like monad transformer with saveable and restorable state";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "static-canvas" = callPackage
    ({ mkDerivation, base, double-conversion, free, mtl, text }:
     mkDerivation {
       pname = "static-canvas";
       version = "0.2.0.3";
       sha256 = "0jfp3nk9flzjw0qjkbh7rk7q0g6dsmgqb2xwrfmg5pnf13gj821p";
       libraryHaskellDepends = [ base double-conversion free mtl text ];
       homepage = "https://github.com/jeffreyrosenbluth/static-canvas";
       description = "DSL to generate HTML5 Canvas javascript";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "statistics" = callPackage
    ({ mkDerivation, aeson, base, binary, deepseq, erf, HUnit, ieee754
     , math-functions, monad-par, mwc-random, primitive, QuickCheck
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , vector, vector-algorithms, vector-binary-instances
     }:
     mkDerivation {
       pname = "statistics";
       version = "0.13.3.0";
       sha256 = "1vc12c3mnpspbycwkl0b22jqrdbg9fpmr1fxdxlmqwl603qy0zvf";
       libraryHaskellDepends = [
         aeson base binary deepseq erf math-functions monad-par mwc-random
         primitive vector vector-algorithms vector-binary-instances
       ];
       testHaskellDepends = [
         base binary erf HUnit ieee754 math-functions mwc-random primitive
         QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2 vector vector-algorithms
       ];
       doCheck = false;
       homepage = "https://github.com/bos/statistics";
       description = "A library of statistical types, data, and functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "stm" = callPackage
    ({ mkDerivation, array, base }:
     mkDerivation {
       pname = "stm";
       version = "2.4.4.1";
       sha256 = "111kpy1d6f5c0bggh6hyfm86q5p8bq1qbqf6dw2x4l4dxnar16cg";
       libraryHaskellDepends = [ array base ];
       description = "Software Transactional Memory";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "stm-chans" = callPackage
    ({ mkDerivation, base, stm }:
     mkDerivation {
       pname = "stm-chans";
       version = "3.0.0.4";
       sha256 = "0f27sp09yha43xk9q55sc185jyjs5h7gq2dhsyx6bm9kz9dzqi13";
       libraryHaskellDepends = [ base stm ];
       homepage = "http://code.haskell.org/~wren/";
       description = "Additional types of channels for STM";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "stm-conduit" = callPackage
    ({ mkDerivation, async, base, cereal, cereal-conduit, conduit
     , conduit-combinators, conduit-extra, directory, doctest, ghc-prim
     , HUnit, lifted-async, lifted-base, monad-control, monad-loops
     , QuickCheck, resourcet, stm, stm-chans, test-framework
     , test-framework-hunit, test-framework-quickcheck2, transformers
     , void
     }:
     mkDerivation {
       pname = "stm-conduit";
       version = "3.0.0";
       sha256 = "02d83mji1rlijdn315q7fik6jy5q49fjwygd64c9kf4z0qy6cvyg";
       libraryHaskellDepends = [
         async base cereal cereal-conduit conduit conduit-combinators
         conduit-extra directory ghc-prim lifted-async lifted-base
         monad-control monad-loops resourcet stm stm-chans transformers void
       ];
       testHaskellDepends = [
         base conduit conduit-combinators directory doctest HUnit QuickCheck
         resourcet stm stm-chans test-framework test-framework-hunit
         test-framework-quickcheck2 transformers
       ];
       homepage = "https://github.com/cgaebel/stm-conduit";
       description = "Introduces conduits to channels, and promotes using conduits concurrently";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "stm-containers" = callPackage
    ({ mkDerivation, async, base, base-prelude, containers, criterion
     , focus, free, hashable, hashtables, HTF, list-t, loch-th, mtl
     , mtl-prelude, mwc-random, mwc-random-monad, placeholders
     , primitive, QuickCheck, text, transformers, unordered-containers
     }:
     mkDerivation {
       pname = "stm-containers";
       version = "0.2.15";
       sha256 = "1q5jsrmvmqlw6xjh6gj94qz1l0a37iybcqx42v17a50kpsy86925";
       libraryHaskellDepends = [
         base base-prelude focus hashable list-t primitive transformers
       ];
       testHaskellDepends = [
         base base-prelude focus free hashable HTF list-t loch-th mtl
         mtl-prelude placeholders primitive QuickCheck transformers
         unordered-containers
       ];
       benchmarkHaskellDepends = [
         async base base-prelude containers criterion focus free hashable
         hashtables list-t loch-th mtl mtl-prelude mwc-random
         mwc-random-monad placeholders text unordered-containers
       ];
       homepage = "https://github.com/nikita-volkov/stm-containers";
       description = "Containers for STM";
       license = stdenv.lib.licenses.mit;
     }) {};
  "stm-delay" = callPackage
    ({ mkDerivation, base, stm }:
     mkDerivation {
       pname = "stm-delay";
       version = "0.1.1.1";
       sha256 = "0cla21v89gcvmr1iwzibq13v1yq02xg4h6k9l6kcprj7mhd5hcmi";
       libraryHaskellDepends = [ base stm ];
       testHaskellDepends = [ base stm ];
       homepage = "https://github.com/joeyadams/haskell-stm-delay";
       description = "Updatable one-shot timer polled with STM";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "stm-stats" = callPackage
    ({ mkDerivation, base, containers, stm, template-haskell, time }:
     mkDerivation {
       pname = "stm-stats";
       version = "0.2.0.0";
       sha256 = "0i8ky2l8lvh7nymxglvbifp0ylbyjw20p75avzb51zpzx6qkjkqa";
       libraryHaskellDepends = [
         base containers stm template-haskell time
       ];
       description = "retry statistics for STM transactions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "stopwatch" = callPackage
    ({ mkDerivation, base, clock, hspec, transformers }:
     mkDerivation {
       pname = "stopwatch";
       version = "0.1.0.4";
       sha256 = "1hmmn4jf3rwk68himknzm9vy1mxbz4gvv810zp4r351mjcpw5x5r";
       libraryHaskellDepends = [ base clock transformers ];
       testHaskellDepends = [ base clock hspec ];
       homepage = "https://github.com/debug-ito/stopwatch";
       description = "A simple stopwatch utility";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "storable-complex" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "storable-complex";
       version = "0.2.2";
       sha256 = "01kwwkpbfjrv26vj83cd92px5qbq1bpgxj0r45534aksqhany1xb";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/cartazio/storable-complex";
       description = "Storable instance for Complex";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "storable-endian" = callPackage
    ({ mkDerivation, base, byteorder }:
     mkDerivation {
       pname = "storable-endian";
       version = "0.2.6";
       sha256 = "12allvahkgx1nr10z4gp07gwaxqf52n4yyzihdxiilsf127sqhrp";
       libraryHaskellDepends = [ base byteorder ];
       description = "Storable instances with endianness";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "storable-record" = callPackage
    ({ mkDerivation, base, transformers, utility-ht }:
     mkDerivation {
       pname = "storable-record";
       version = "0.0.3.1";
       sha256 = "1fmdzngikc8bi8bfk04bdd046j3i3v99g5bm2dfn5dz097pcxrbl";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base transformers utility-ht ];
       homepage = "http://code.haskell.org/~thielema/storable-record/";
       description = "Elegant definition of Storable instances for records";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "store" = callPackage
    ({ mkDerivation, array, base, base-orphans, base64-bytestring
     , bytestring, cereal, cereal-vector, conduit, containers, criterion
     , cryptohash, deepseq, directory, fail, filepath, ghc-prim
     , hashable, hspec, hspec-smallcheck, integer-gmp, lifted-base
     , monad-control, mono-traversable, primitive, resourcet, safe
     , semigroups, smallcheck, store-core, syb, template-haskell, text
     , th-lift, th-lift-instances, th-orphans, th-reify-many
     , th-utilities, time, transformers, unordered-containers, vector
     , vector-binary-instances, void, weigh
     }:
     mkDerivation {
       pname = "store";
       version = "0.2.1.2";
       sha256 = "1b8w7r7siblhrfkcjwajjcjf9pi2cy98lfav66y5vzbrmalvkk2s";
       libraryHaskellDepends = [
         array base base-orphans base64-bytestring bytestring conduit
         containers cryptohash deepseq directory fail filepath ghc-prim
         hashable hspec hspec-smallcheck integer-gmp lifted-base
         monad-control mono-traversable primitive resourcet safe semigroups
         smallcheck store-core syb template-haskell text th-lift
         th-lift-instances th-orphans th-reify-many th-utilities time
         transformers unordered-containers vector void
       ];
       testHaskellDepends = [
         array base base-orphans base64-bytestring bytestring cereal
         cereal-vector conduit containers criterion cryptohash deepseq
         directory fail filepath ghc-prim hashable hspec hspec-smallcheck
         integer-gmp lifted-base monad-control mono-traversable primitive
         resourcet safe semigroups smallcheck store-core syb
         template-haskell text th-lift th-lift-instances th-orphans
         th-reify-many th-utilities time transformers unordered-containers
         vector vector-binary-instances void weigh
       ];
       benchmarkHaskellDepends = [
         array base base-orphans base64-bytestring bytestring conduit
         containers criterion cryptohash deepseq directory fail filepath
         ghc-prim hashable hspec hspec-smallcheck integer-gmp lifted-base
         monad-control mono-traversable primitive resourcet safe semigroups
         smallcheck store-core syb template-haskell text th-lift
         th-lift-instances th-orphans th-reify-many th-utilities time
         transformers unordered-containers vector void
       ];
       homepage = "https://github.com/fpco/store#readme";
       description = "Fast binary serialization";
       license = stdenv.lib.licenses.mit;
     }) {};
  "store-core" = callPackage
    ({ mkDerivation, base, bytestring, fail, ghc-prim, primitive, text
     , transformers
     }:
     mkDerivation {
       pname = "store-core";
       version = "0.2.0.2";
       sha256 = "03j2wqibz5n0arw926bdi49j91bq7rsy5qkn1cgrsclndwc6spq2";
       libraryHaskellDepends = [
         base bytestring fail ghc-prim primitive text transformers
       ];
       homepage = "https://github.com/fpco/store#readme";
       description = "Fast and lightweight binary serialization";
       license = stdenv.lib.licenses.mit;
     }) {};
  "stratosphere" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, base, bytestring, directory
     , hlint, lens, tasty, tasty-hspec, template-haskell, text
     , unordered-containers
     }:
     mkDerivation {
       pname = "stratosphere";
       version = "0.1.6";
       sha256 = "1qdah45x84m5glvrm8jncjilfafkc5pkk3vba02q3d0cw3ysxxhn";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson aeson-pretty base bytestring lens template-haskell text
         unordered-containers
       ];
       executableHaskellDepends = [
         aeson aeson-pretty base bytestring lens template-haskell text
         unordered-containers
       ];
       testHaskellDepends = [
         aeson aeson-pretty base bytestring directory hlint lens tasty
         tasty-hspec template-haskell text unordered-containers
       ];
       homepage = "https://github.com/frontrowed/stratosphere#readme";
       description = "EDSL for AWS CloudFormation";
       license = stdenv.lib.licenses.mit;
     }) {};
  "streaming" = callPackage
    ({ mkDerivation, base, containers, exceptions, ghc-prim, mmorph
     , monad-control, mtl, resourcet, time, transformers
     , transformers-base
     }:
     mkDerivation {
       pname = "streaming";
       version = "0.1.4.5";
       sha256 = "0hv8vajs0syi5r5bbqra0lp2ycfd7gw3x0n51x431slcq3i21afn";
       libraryHaskellDepends = [
         base containers exceptions ghc-prim mmorph monad-control mtl
         resourcet time transformers transformers-base
       ];
       homepage = "https://github.com/michaelt/streaming";
       description = "an elementary streaming prelude and general stream type";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "streaming-bytestring" = callPackage
    ({ mkDerivation, base, bytestring, deepseq, exceptions, mmorph, mtl
     , resourcet, smallcheck, streaming, tasty, tasty-smallcheck
     , transformers, transformers-base
     }:
     mkDerivation {
       pname = "streaming-bytestring";
       version = "0.1.4.6";
       sha256 = "00kars95baxdg97vfp904phnfszv4sicq7248wijkkzbg3frgmc9";
       libraryHaskellDepends = [
         base bytestring deepseq exceptions mmorph mtl resourcet streaming
         transformers transformers-base
       ];
       testHaskellDepends = [
         base bytestring smallcheck streaming tasty tasty-smallcheck
         transformers
       ];
       homepage = "https://github.com/michaelt/streaming-bytestring";
       description = "effectful byte steams, or: bytestring io done right";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "streaming-commons" = callPackage
    ({ mkDerivation, array, async, base, blaze-builder, bytestring
     , criterion, deepseq, directory, hspec, network, process
     , QuickCheck, random, stm, text, transformers, unix, zlib
     }:
     mkDerivation {
       pname = "streaming-commons";
       version = "0.1.17";
       sha256 = "1abxyjkn8xc8d33yhqxy1ki01kpzf4hy55f167qg4vk2ig5kh2p5";
       libraryHaskellDepends = [
         array async base blaze-builder bytestring directory network process
         random stm text transformers unix zlib
       ];
       testHaskellDepends = [
         array async base blaze-builder bytestring deepseq hspec network
         QuickCheck text unix zlib
       ];
       benchmarkHaskellDepends = [
         base blaze-builder bytestring criterion deepseq text
       ];
       homepage = "https://github.com/fpco/streaming-commons";
       description = "Common lower-level functions needed by various streaming data libraries";
       license = stdenv.lib.licenses.mit;
     }) {};
  "streamproc" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "streamproc";
       version = "1.6.2";
       sha256 = "1wl44n4nav4h203mzfdf1bd5nh4v23dib54lvxka1rl3zymgyvp7";
       libraryHaskellDepends = [ base ];
       homepage = "http://github.com/peti/streamproc";
       description = "Stream Processer Arrow";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "streams" = callPackage
    ({ mkDerivation, adjunctions, base, comonad, distributive
     , semigroupoids, semigroups
     }:
     mkDerivation {
       pname = "streams";
       version = "3.3";
       sha256 = "0h2fjlcsqnwwsqdk371m6drb119rx76b122mmwkd7zl3d86zhcr9";
       libraryHaskellDepends = [
         adjunctions base comonad distributive semigroupoids semigroups
       ];
       homepage = "http://github.com/ekmett/streams/issues";
       description = "Various Haskell 2010 stream comonads";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "strict" = callPackage
    ({ mkDerivation, array, base }:
     mkDerivation {
       pname = "strict";
       version = "0.3.2";
       sha256 = "08cjajqz9h47fkq98mlf3rc8n5ghbmnmgn8pfsl3bdldjdkmmlrc";
       libraryHaskellDepends = [ array base ];
       homepage = "http://www.cse.unsw.edu.au/~rl/code/strict.html";
       description = "Strict data types and String IO";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "strict-base-types" = callPackage
    ({ mkDerivation, aeson, base, bifunctors, binary, deepseq, ghc-prim
     , hashable, lens, QuickCheck, strict
     }:
     mkDerivation {
       pname = "strict-base-types";
       version = "0.5.0";
       sha256 = "1jx10iqkdmrhakk1aq2g9vf8lfm8gd9y560s2s69qzzrszrsvg7y";
       libraryHaskellDepends = [
         aeson base bifunctors binary deepseq ghc-prim hashable lens
         QuickCheck strict
       ];
       homepage = "https://github.com/meiersi/strict-base-types";
       description = "Strict variants of the types provided in base";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "string-class" = callPackage
    ({ mkDerivation, base, bytestring, tagged, text }:
     mkDerivation {
       pname = "string-class";
       version = "0.1.6.5";
       sha256 = "0yi3fagwqkgr8pf6wnl360qikyvfb649qs2y6gp0n7jjw0zc27c2";
       libraryHaskellDepends = [ base bytestring tagged text ];
       homepage = "https://github.com/bairyn/string-class";
       description = "String class library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "string-combinators" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "string-combinators";
       version = "0.6.0.5";
       sha256 = "07ky2z5f1l5mb7r3rvyraak0bzciq4krkg5lv8g0a5vxpnzlm4cl";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/basvandijk/string-combinators";
       description = "Polymorphic functions to build and combine stringlike values";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "string-conv" = callPackage
    ({ mkDerivation, base, bytestring, text }:
     mkDerivation {
       pname = "string-conv";
       version = "0.1.2";
       sha256 = "0fb04bm384rpiq7kd7v783z1sriqialvjyn0f6dg2si9dwza0ngj";
       libraryHaskellDepends = [ base bytestring text ];
       homepage = "https://github.com/Soostone/string-conv";
       description = "Standardized conversion between string types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "string-conversions" = callPackage
    ({ mkDerivation, base, bytestring, deepseq, hspec, QuickCheck
     , quickcheck-instances, text, utf8-string
     }:
     mkDerivation {
       pname = "string-conversions";
       version = "0.4.0.1";
       sha256 = "150rdank90h7v08x0wq4dffjbxv2daf5v9sqfs5mab76kinwxg26";
       libraryHaskellDepends = [ base bytestring text utf8-string ];
       testHaskellDepends = [
         base bytestring deepseq hspec QuickCheck quickcheck-instances text
         utf8-string
       ];
       homepage = "https://github.com/soenkehahn/string-conversions#readme";
       description = "Simplifies dealing with different types for strings";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "string-qq" = callPackage
    ({ mkDerivation, base, template-haskell }:
     mkDerivation {
       pname = "string-qq";
       version = "0.0.2";
       sha256 = "0662m3i5xrdrr95w829bszkhp88mj9iy1zya54vk2sl5hz9wlmwp";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base template-haskell ];
       description = "QuasiQuoter for non-interpolated strings, texts and bytestrings";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "stringable" = callPackage
    ({ mkDerivation, base, bytestring, system-filepath, text }:
     mkDerivation {
       pname = "stringable";
       version = "0.1.3";
       sha256 = "10jsvbiqbmnbipv1566k5mqkpgfyrzbk8m7b18rqjb5m3qg9dbz7";
       libraryHaskellDepends = [ base bytestring system-filepath text ];
       description = "A Stringable type class, in the spirit of Foldable and Traversable";
       license = stdenv.lib.licenses.mit;
     }) {};
  "stringbuilder" = callPackage
    ({ mkDerivation, base, hspec, QuickCheck }:
     mkDerivation {
       pname = "stringbuilder";
       version = "0.5.0";
       sha256 = "1ap95xphqnrhv64c2a137wqslkdmb2jjd9ldb17gs1pw48k8hrl9";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base hspec QuickCheck ];
       description = "A writer monad for multi-line string literals";
       license = stdenv.lib.licenses.mit;
     }) {};
  "stringsearch" = callPackage
    ({ mkDerivation, array, base, bytestring, containers }:
     mkDerivation {
       pname = "stringsearch";
       version = "0.3.6.6";
       sha256 = "0jpy9xjcjdbpi3wk6mg7xwd7wfi2mma70p97v1ij5i8bj9qijpr9";
       libraryHaskellDepends = [ array base bytestring containers ];
       homepage = "https://bitbucket.org/dafis/stringsearch";
       description = "Fast searching, splitting and replacing of ByteStrings";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "stripe-core" = callPackage
    ({ mkDerivation, aeson, base, bytestring, mtl, text, time
     , transformers, unordered-containers
     }:
     mkDerivation {
       pname = "stripe-core";
       version = "2.1.0";
       sha256 = "1r9wjww6br1hyyhk11b3h39f3arznmy6abhfhnqmhhi4nhfqmm3l";
       libraryHaskellDepends = [
         aeson base bytestring mtl text time transformers
         unordered-containers
       ];
       homepage = "https://github.com/dmjio/stripe-haskell";
       description = "Stripe API for Haskell - Pure Core";
       license = stdenv.lib.licenses.mit;
     }) {};
  "strive" = callPackage
    ({ mkDerivation, aeson, base, bytestring, data-default, gpolyline
     , http-client, http-client-tls, http-types, markdown-unlit
     , template-haskell, text, time, transformers
     }:
     mkDerivation {
       pname = "strive";
       version = "3.0.2";
       sha256 = "03qb9zc2zy34a6rxnix03z4sypxa1fvjv3j4blv2g2pdgppxrwcl";
       libraryHaskellDepends = [
         aeson base bytestring data-default gpolyline http-client
         http-client-tls http-types template-haskell text time transformers
       ];
       testHaskellDepends = [ base bytestring markdown-unlit time ];
       homepage = "https://github.com/tfausak/strive#readme";
       description = "A client for the Strava V3 API";
       license = stdenv.lib.licenses.mit;
     }) {};
  "stylish-haskell" = callPackage
    ({ mkDerivation, aeson, base, bytestring, containers, directory
     , filepath, haskell-src-exts, HUnit, mtl, optparse-applicative
     , strict, syb, test-framework, test-framework-hunit, yaml
     }:
     mkDerivation {
       pname = "stylish-haskell";
       version = "0.6.1.0";
       sha256 = "03bv6p77z8qnr3q0d9jzb9i9cv5f2xna5zx3qf9f0y87jkimzy7f";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson base bytestring containers directory filepath
         haskell-src-exts mtl syb yaml
       ];
       executableHaskellDepends = [
         aeson base bytestring containers directory filepath
         haskell-src-exts mtl optparse-applicative strict syb yaml
       ];
       testHaskellDepends = [
         aeson base bytestring containers directory filepath
         haskell-src-exts HUnit mtl syb test-framework test-framework-hunit
         yaml
       ];
       homepage = "https://github.com/jaspervdj/stylish-haskell";
       description = "Haskell code prettifier";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "success" = callPackage
    ({ mkDerivation, base, monad-control, mtl, transformers
     , transformers-base
     }:
     mkDerivation {
       pname = "success";
       version = "0.2.6";
       sha256 = "1dnsya1cbj0z2fag4vp43bm3v18p9mm1yxza8gaw8fz1i9zfg5g9";
       libraryHaskellDepends = [
         base monad-control mtl transformers transformers-base
       ];
       homepage = "https://github.com/nikita-volkov/success";
       description = "A version of Either specialised for encoding of success or failure";
       license = stdenv.lib.licenses.mit;
     }) {};
  "sundown" = callPackage
    ({ mkDerivation, base, bytestring, text }:
     mkDerivation {
       pname = "sundown";
       version = "0.6";
       sha256 = "09xh3pbyarflfjk17bn2isgpmsq49d6gmq7z918kf4c32fc7x6yb";
       libraryHaskellDepends = [ base bytestring text ];
       homepage = "https://github.com/bitonic/sundown";
       description = "Bindings to the sundown markdown library";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "svg-builder" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring, hashable, text
     , unordered-containers
     }:
     mkDerivation {
       pname = "svg-builder";
       version = "0.1.0.2";
       sha256 = "0m7fpxh2viafcfm04xzy64jakx5c0p5wcam3bdwxgmj3r3q0qjc1";
       libraryHaskellDepends = [
         base blaze-builder bytestring hashable text unordered-containers
       ];
       homepage = "http://github.com/jeffreyrosenbluth/svg-builder.git";
       description = "DSL for building SVG";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "svg-tree" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, containers
     , JuicyPixels, lens, linear, mtl, scientific, text, transformers
     , vector, xml
     }:
     mkDerivation {
       pname = "svg-tree";
       version = "0.5.1.2";
       sha256 = "181xi4bi72gzjvssqbfl7vhbb88b9j9c7rkrf5ymqm832br5qa0c";
       libraryHaskellDepends = [
         attoparsec base bytestring containers JuicyPixels lens linear mtl
         scientific text transformers vector xml
       ];
       description = "SVG file loader and serializer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "swagger" = callPackage
    ({ mkDerivation, aeson, base, bytestring, tasty, tasty-hunit, text
     , time, transformers
     }:
     mkDerivation {
       pname = "swagger";
       version = "0.2.2";
       sha256 = "1hpc569n34kr1nkrwlx76pc0yp9icr8j5cxliwjqffnh7x2czzqr";
       libraryHaskellDepends = [
         aeson base bytestring text time transformers
       ];
       testHaskellDepends = [ aeson base bytestring tasty tasty-hunit ];
       doCheck = false;
       description = "Implementation of swagger data model";
       license = "unknown";
     }) {};
  "swagger2" = callPackage
    ({ mkDerivation, aeson, aeson-qq, base, base-compat, bytestring
     , containers, doctest, generics-sop, Glob, hashable, hspec
     , http-media, HUnit, insert-ordered-containers, lens, mtl, network
     , QuickCheck, scientific, template-haskell, text, time
     , transformers, unordered-containers, uuid-types, vector
     }:
     mkDerivation {
       pname = "swagger2";
       version = "2.1.3";
       sha256 = "1vs4qsygw2mfmcdn8jjk5y0ms8nglqnhiwr1nvb4iz1qnl5g652d";
       libraryHaskellDepends = [
         aeson base base-compat bytestring containers generics-sop hashable
         http-media insert-ordered-containers lens mtl network scientific
         template-haskell text time transformers unordered-containers
         uuid-types vector
       ];
       testHaskellDepends = [
         aeson aeson-qq base base-compat bytestring containers doctest Glob
         hashable hspec HUnit insert-ordered-containers lens mtl QuickCheck
         text time unordered-containers vector
       ];
       doHaddock = false;
       homepage = "https://github.com/GetShopTV/swagger2";
       description = "Swagger 2.0 data model";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "syb" = callPackage
    ({ mkDerivation, base, containers, HUnit, mtl }:
     mkDerivation {
       pname = "syb";
       version = "0.6";
       sha256 = "1p3cnqjm13677r4a966zffzhi9b3a321aln8zs8ckqj0d9z1z3d3";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base containers HUnit mtl ];
       homepage = "http://www.cs.uu.nl/wiki/GenericProgramming/SYB";
       description = "Scrap Your Boilerplate";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "syb-with-class" = callPackage
    ({ mkDerivation, array, base, bytestring, containers
     , template-haskell
     }:
     mkDerivation {
       pname = "syb-with-class";
       version = "0.6.1.7";
       sha256 = "1fvawrlipr3rybbrmldcdlsw46vyi695a0c30jxxlcy5v1q1hljw";
       libraryHaskellDepends = [
         array base bytestring containers template-haskell
       ];
       description = "Scrap Your Boilerplate With Class";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "symbol" = callPackage
    ({ mkDerivation, base, containers, deepseq }:
     mkDerivation {
       pname = "symbol";
       version = "0.2.4";
       sha256 = "0cc8kdm68pirb0s7n46v0yvw5b718qf7qip40jkg5q3c3xsafx6h";
       revision = "1";
       editedCabalFile = "01ab7600ja88wfvg9x8zmxksw44j9klmm71y9zmig7qxs1qslb25";
       libraryHaskellDepends = [ base containers deepseq ];
       homepage = "http://www.cs.drexel.edu/~mainland/";
       description = "A 'Symbol' type for fast symbol comparison";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "symengine" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "symengine";
       version = "0.1.2.0";
       sha256 = "1x42rbkc2lq06iqwkwwh5h4y9xl0xf1qfg47n62ax1j6j9mgfn8a";
       libraryHaskellDepends = [ base ];
       doCheck = false;
       homepage = "http://github.com/symengine/symengine.hs#readme";
       description = "SymEngine symbolic mathematics engine for Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};
  "system-argv0" = callPackage
    ({ mkDerivation, base, bytestring, system-filepath, text }:
     mkDerivation {
       pname = "system-argv0";
       version = "0.1.1";
       sha256 = "1ijfry2r3cypp3zmws6dczk21m4n86fkxjld7yl19gjp46fxllbd";
       libraryHaskellDepends = [ base bytestring system-filepath text ];
       homepage = "https://john-millikin.com/software/haskell-filesystem/";
       description = "Get argv[0] as a FilePath";
       license = stdenv.lib.licenses.mit;
     }) {};
  "system-fileio" = callPackage
    ({ mkDerivation, base, bytestring, chell, system-filepath
     , temporary, text, time, transformers, unix
     }:
     mkDerivation {
       pname = "system-fileio";
       version = "0.3.16.3";
       sha256 = "1484hcl27s2qcby8ws5djj11q9bz68bspcifz9h5gii2ndy70x9i";
       libraryHaskellDepends = [
         base bytestring system-filepath text time unix
       ];
       testHaskellDepends = [
         base bytestring chell system-filepath temporary text time
         transformers unix
       ];
       homepage = "https://github.com/fpco/haskell-filesystem";
       description = "Consistent filesystem interaction across GHC versions (deprecated)";
       license = stdenv.lib.licenses.mit;
     }) {};
  "system-filepath" = callPackage
    ({ mkDerivation, base, bytestring, chell, chell-quickcheck, deepseq
     , QuickCheck, text
     }:
     mkDerivation {
       pname = "system-filepath";
       version = "0.4.13.4";
       sha256 = "1yy5zsmmimhg6iaw9fmpwrxvxrgi5s6bfyqfihdsnx4bjvn7sp9l";
       libraryHaskellDepends = [ base bytestring deepseq text ];
       testHaskellDepends = [
         base bytestring chell chell-quickcheck QuickCheck text
       ];
       doCheck = false;
       homepage = "https://github.com/fpco/haskell-filesystem";
       description = "High-level, byte-based file and directory path manipulations (deprecated)";
       license = stdenv.lib.licenses.mit;
     }) {};
  "system-posix-redirect" = callPackage
    ({ mkDerivation, base, bytestring, unix }:
     mkDerivation {
       pname = "system-posix-redirect";
       version = "1.1.0.1";
       sha256 = "1wkfz898d3607xnx779l1k1qc8i2k63ixg47542r45scwq8m0lsk";
       libraryHaskellDepends = [ base bytestring unix ];
       description = "A toy module to temporarily redirect a program's stdout";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "syz" = callPackage
    ({ mkDerivation, base, syb }:
     mkDerivation {
       pname = "syz";
       version = "0.2.0.0";
       sha256 = "1m5395937yyxsa1bmlfn1dxa1jr15yjhlz9s15bpwapshcd8119y";
       libraryHaskellDepends = [ base syb ];
       homepage = "http://www.cs.indiana.edu/~adamsmd/papers/scrap_your_zippers/";
       description = "Scrap Your Zippers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tabular" = callPackage
    ({ mkDerivation, base, csv, html, mtl }:
     mkDerivation {
       pname = "tabular";
       version = "0.2.2.7";
       sha256 = "1ysgq7rrks7f98nnvxil8xz1q27hxdgz4szbjhqwzbwd209dmy0k";
       libraryHaskellDepends = [ base csv html mtl ];
       homepage = "http://hub.darcs.net/kowey/tabular";
       description = "Two-dimensional data tables with rendering functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tagged" = callPackage
    ({ mkDerivation, base, deepseq, template-haskell, transformers
     , transformers-compat
     }:
     mkDerivation {
       pname = "tagged";
       version = "0.8.5";
       sha256 = "16cdzh0bw16nvjnyyy5j9s60malhz4nnazw96vxb0xzdap4m2z74";
       revision = "1";
       editedCabalFile = "15mqdimbgrq5brqljjl7dbxkyrxppap06q53cp7ml7w3l08v5mx8";
       libraryHaskellDepends = [
         base deepseq template-haskell transformers transformers-compat
       ];
       homepage = "http://github.com/ekmett/tagged";
       description = "Haskell 98 phantom types to avoid unsafely passing dummy arguments";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tagged-binary" = callPackage
    ({ mkDerivation, base, binary, bytestring, pureMD5 }:
     mkDerivation {
       pname = "tagged-binary";
       version = "0.2.0.0";
       sha256 = "0ibp4hmzg4c4dn88ws7x1j5wc6cbz3j2hymyaw2qkac3j4phzqrm";
       libraryHaskellDepends = [ base binary bytestring pureMD5 ];
       description = "Provides tools for serializing data tagged with type information";
       license = stdenv.lib.licenses.mit;
     }) {};
  "taggy" = callPackage
    ({ mkDerivation, attoparsec, base, blaze-html, blaze-markup
     , criterion, directory, hspec, hspec-attoparsec, tagsoup, text
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "taggy";
       version = "0.2.0";
       sha256 = "01q2ccf3a8akaifh79ajnfr5yrjsq4xihq0pl7lsz173n7mhnsy3";
       revision = "1";
       editedCabalFile = "02xmvs9m977szhf5cgy31rbadi662g194giq3djzvsd41c1sshq3";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         attoparsec base blaze-html blaze-markup text unordered-containers
         vector
       ];
       executableHaskellDepends = [ attoparsec base text ];
       testHaskellDepends = [
         attoparsec base blaze-html blaze-markup directory hspec
         hspec-attoparsec text unordered-containers vector
       ];
       benchmarkHaskellDepends = [
         attoparsec base criterion tagsoup text vector
       ];
       homepage = "http://github.com/alpmestan/taggy";
       description = "Efficient and simple HTML/XML parsing library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "taggy-lens" = callPackage
    ({ mkDerivation, base, doctest, hspec, lens, taggy, text
     , unordered-containers
     }:
     mkDerivation {
       pname = "taggy-lens";
       version = "0.1.2";
       sha256 = "05m2c9q0rz4y0zz6n3dqf0hhzfvk0mp1692jxykg86c802d7pkib";
       libraryHaskellDepends = [
         base lens taggy text unordered-containers
       ];
       testHaskellDepends = [
         base doctest hspec lens taggy text unordered-containers
       ];
       homepage = "http://github.com/alpmestan/taggy-lens";
       description = "Lenses for the taggy html/xml parser";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tagshare" = callPackage
    ({ mkDerivation, base, containers, mtl }:
     mkDerivation {
       pname = "tagshare";
       version = "0.0";
       sha256 = "1q3chp1rmwmxa8rxv7548wsvbqbng6grrnv1587p08385sp4ncfj";
       libraryHaskellDepends = [ base containers mtl ];
       description = "TagShare - explicit sharing with tags";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tagsoup" = callPackage
    ({ mkDerivation, base, bytestring, containers, text }:
     mkDerivation {
       pname = "tagsoup";
       version = "0.14";
       sha256 = "07pax7i0bl79dmqqz58zy09yrgpnyyr2ya0z183hv96kp65jv0lh";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base bytestring containers text ];
       homepage = "https://github.com/ndmitchell/tagsoup#readme";
       description = "Parsing and extracting information from (possibly malformed) HTML/XML documents";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tagstream-conduit" = callPackage
    ({ mkDerivation, attoparsec, base, blaze-builder, bytestring
     , case-insensitive, conduit, conduit-extra, data-default, hspec
     , HUnit, QuickCheck, resourcet, text, transformers, xml-conduit
     }:
     mkDerivation {
       pname = "tagstream-conduit";
       version = "0.5.5.3";
       sha256 = "1arlf7qil9bzcqykda8yyrnncm29jsfjvz5kbcdrbbhqpbqfi5mj";
       libraryHaskellDepends = [
         attoparsec base blaze-builder bytestring case-insensitive conduit
         conduit-extra data-default resourcet text transformers xml-conduit
       ];
       testHaskellDepends = [
         base bytestring conduit hspec HUnit QuickCheck resourcet text
       ];
       homepage = "http://github.com/yihuang/tagstream-conduit";
       description = "streamlined html tag parser";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tar" = callPackage
    ({ mkDerivation, array, base, bytestring, bytestring-handle
     , containers, criterion, deepseq, directory, filepath, old-time
     , QuickCheck, tasty, tasty-quickcheck, time
     }:
     mkDerivation {
       pname = "tar";
       version = "0.5.0.3";
       sha256 = "18qq94j9bm91iswnxq2dm5dws5c7wm4k01q2rpf8py35cf3svnfq";
       configureFlags = [ "-f-old-time" ];
       libraryHaskellDepends = [
         array base bytestring containers deepseq directory filepath time
       ];
       testHaskellDepends = [
         array base bytestring bytestring-handle containers deepseq
         directory filepath QuickCheck tasty tasty-quickcheck time
       ];
       benchmarkHaskellDepends = [
         array base bytestring containers criterion deepseq directory
         filepath old-time time
       ];
       description = "Reading, writing and manipulating \".tar\" archive files.";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tardis" = callPackage
    ({ mkDerivation, base, mmorph, mtl }:
     mkDerivation {
       pname = "tardis";
       version = "0.4.1.0";
       sha256 = "1nd54pff1n6ds5jqa98qrby06d3ziw2rhb3j5lvw4mahsynsnwp6";
       revision = "1";
       editedCabalFile = "1wp6vp90g19hv8r2l83ava7qxf0933gb7ni2zgyfa66vlvxvhibv";
       libraryHaskellDepends = [ base mmorph mtl ];
       homepage = "https://github.com/DanBurton/tardis";
       description = "Bidirectional state monad transformer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tasty" = callPackage
    ({ mkDerivation, ansi-terminal, async, base, clock, containers
     , deepseq, mtl, optparse-applicative, regex-tdfa, stm, tagged
     , unbounded-delays
     }:
     mkDerivation {
       pname = "tasty";
       version = "0.11.1";
       sha256 = "1p5bbsxvhzbp8x3f3ajdd29sava169z49ql5ph2rvfd83d0877xb";
       libraryHaskellDepends = [
         ansi-terminal async base clock containers deepseq mtl
         optparse-applicative regex-tdfa stm tagged unbounded-delays
       ];
       homepage = "http://documentup.com/feuerbach/tasty";
       description = "Modern and extensible testing framework";
       license = stdenv.lib.licenses.mit;
     }) {};
  "tasty-ant-xml" = callPackage
    ({ mkDerivation, base, containers, directory, filepath
     , generic-deriving, ghc-prim, mtl, stm, tagged, tasty, transformers
     , xml
     }:
     mkDerivation {
       pname = "tasty-ant-xml";
       version = "1.0.4";
       sha256 = "127imv2z0syj8ylmkgkzr3kpx6q827pa7shndkcij2g8w04wb4ad";
       libraryHaskellDepends = [
         base containers directory filepath generic-deriving ghc-prim mtl
         stm tagged tasty transformers xml
       ];
       homepage = "http://github.com/ocharles/tasty-ant-xml";
       description = "Render tasty output to XML for Jenkins";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tasty-dejafu" = callPackage
    ({ mkDerivation, base, dejafu, tagged, tasty }:
     mkDerivation {
       pname = "tasty-dejafu";
       version = "0.3.0.2";
       sha256 = "0p9gpsfm2xsbm63w2bb9yws26lqcyj0w87l76vh67ivnmnxjw78z";
       libraryHaskellDepends = [ base dejafu tagged tasty ];
       homepage = "https://github.com/barrucadu/dejafu";
       description = "Deja Fu support for the Tasty test framework";
       license = stdenv.lib.licenses.mit;
     }) {};
  "tasty-expected-failure" = callPackage
    ({ mkDerivation, base, tagged, tasty }:
     mkDerivation {
       pname = "tasty-expected-failure";
       version = "0.11.0.4";
       sha256 = "0r555f18d2gj96pjyc13chn1nxaxl81am4xgip3mvvjhw8s5mva1";
       libraryHaskellDepends = [ base tagged tasty ];
       homepage = "http://github.com/nomeata/tasty-expected-failure";
       description = "Mark tasty tests as failure expected";
       license = stdenv.lib.licenses.mit;
     }) {};
  "tasty-golden" = callPackage
    ({ mkDerivation, async, base, bytestring, containers, deepseq
     , directory, filepath, mtl, optparse-applicative, process, tagged
     , tasty, tasty-hunit, temporary, temporary-rc
     }:
     mkDerivation {
       pname = "tasty-golden";
       version = "2.3.1.1";
       sha256 = "0pcf5hsyp5mmbqn7krdm49jxpkjm6rb4j83j28f76h7q55dzm1wy";
       libraryHaskellDepends = [
         async base bytestring containers deepseq directory filepath mtl
         optparse-applicative process tagged tasty temporary
       ];
       testHaskellDepends = [
         base directory filepath process tasty tasty-hunit temporary-rc
       ];
       homepage = "https://github.com/feuerbach/tasty-golden";
       description = "Golden tests support for tasty";
       license = stdenv.lib.licenses.mit;
     }) {};
  "tasty-hspec" = callPackage
    ({ mkDerivation, base, hspec, hspec-core, QuickCheck, random
     , tagged, tasty, tasty-quickcheck, tasty-smallcheck
     }:
     mkDerivation {
       pname = "tasty-hspec";
       version = "1.1.3";
       sha256 = "0cgykdslqldm1a9zss20dvmk1ldsmcrib0anb8sn375dija7sn9w";
       revision = "2";
       editedCabalFile = "1x4k7la10bfpwlc0chn8v1b8claqcrf394c2hwhpkg6ly3mkzq0n";
       libraryHaskellDepends = [
         base hspec hspec-core QuickCheck random tagged tasty
         tasty-quickcheck tasty-smallcheck
       ];
       homepage = "https://github.com/mitchellwrosen/tasty-hspec";
       description = "Hspec support for the Tasty test framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tasty-html" = callPackage
    ({ mkDerivation, base, blaze-html, bytestring, containers, filepath
     , generic-deriving, mtl, stm, tagged, tasty, text, transformers
     }:
     mkDerivation {
       pname = "tasty-html";
       version = "0.4.1.1";
       sha256 = "06hzb4y98aqmcn3zl6mr1gwmkkl73phqc4419fwsxwqyrygirshf";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base blaze-html bytestring containers filepath generic-deriving mtl
         stm tagged tasty text transformers
       ];
       homepage = "http://github.com/feuerbach/tasty-html";
       description = "Render tasty output to HTML";
       license = stdenv.lib.licenses.mit;
     }) {};
  "tasty-hunit" = callPackage
    ({ mkDerivation, base, tasty }:
     mkDerivation {
       pname = "tasty-hunit";
       version = "0.9.2";
       sha256 = "08qnxaw34wfnzi9irs1jd4d0zczqm3k5ffkd4zwhkz0dflmgq7mf";
       libraryHaskellDepends = [ base tasty ];
       homepage = "http://documentup.com/feuerbach/tasty";
       description = "HUnit support for the Tasty test framework";
       license = stdenv.lib.licenses.mit;
     }) {};
  "tasty-kat" = callPackage
    ({ mkDerivation, base, bytestring, mtl, tasty, tasty-hunit
     , tasty-quickcheck
     }:
     mkDerivation {
       pname = "tasty-kat";
       version = "0.0.3";
       sha256 = "14yvlpli6cv6bn3kh8mlfp4x1l6ns4fvmfv6hmj75cvxyzq029d7";
       libraryHaskellDepends = [ base bytestring tasty ];
       testHaskellDepends = [
         base bytestring mtl tasty tasty-hunit tasty-quickcheck
       ];
       homepage = "https://github.com/vincenthz/tasty-kat";
       description = "Known Answer Tests (KAT) framework for tasty";
       license = stdenv.lib.licenses.mit;
     }) {};
  "tasty-program" = callPackage
    ({ mkDerivation, base, deepseq, directory, filepath, process, tasty
     }:
     mkDerivation {
       pname = "tasty-program";
       version = "1.0.5";
       sha256 = "1i19b1pps1hwqs7djx859ddcdmqfzgyzyi72db62jw03bynmbcjc";
       libraryHaskellDepends = [
         base deepseq directory filepath process tasty
       ];
       homepage = "https://github.com/jstolarek/tasty-program";
       description = "Use tasty framework to test whether a program executes correctly";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tasty-quickcheck" = callPackage
    ({ mkDerivation, base, pcre-light, QuickCheck, tagged, tasty
     , tasty-hunit
     }:
     mkDerivation {
       pname = "tasty-quickcheck";
       version = "0.8.4";
       sha256 = "15rjxib5jmjq0hzj47x15kgp3awc73va4cy1pmpf7k3hvfv4qprn";
       libraryHaskellDepends = [ base QuickCheck tagged tasty ];
       testHaskellDepends = [ base pcre-light tasty tasty-hunit ];
       homepage = "http://documentup.com/feuerbach/tasty";
       description = "QuickCheck support for the Tasty test framework";
       license = stdenv.lib.licenses.mit;
     }) {};
  "tasty-rerun" = callPackage
    ({ mkDerivation, base, containers, mtl, optparse-applicative
     , reducers, split, stm, tagged, tasty, transformers
     }:
     mkDerivation {
       pname = "tasty-rerun";
       version = "1.1.6";
       sha256 = "0ycxg7whabgcxyzy6gr536x8ykzx45whh1wrbsc7c58zi862fczd";
       libraryHaskellDepends = [
         base containers mtl optparse-applicative reducers split stm tagged
         tasty transformers
       ];
       homepage = "http://github.com/ocharles/tasty-rerun";
       description = "Run tests by filtering the test tree depending on the result of previous test runs";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tasty-silver" = callPackage
    ({ mkDerivation, ansi-terminal, async, base, bytestring, containers
     , deepseq, directory, filepath, mtl, optparse-applicative, process
     , process-extras, regex-tdfa, stm, tagged, tasty, tasty-hunit
     , temporary, text, transformers
     }:
     mkDerivation {
       pname = "tasty-silver";
       version = "3.1.9";
       sha256 = "0c5nd765s40wa8w4qmcwpg42ggmfphar5h56xh123i31w15scrvh";
       libraryHaskellDepends = [
         ansi-terminal async base bytestring containers deepseq directory
         filepath mtl optparse-applicative process process-extras regex-tdfa
         stm tagged tasty temporary text
       ];
       testHaskellDepends = [
         base directory filepath process tasty tasty-hunit temporary
         transformers
       ];
       homepage = "https://github.com/phile314/tasty-silver";
       description = "A fancy test runner, including support for golden tests";
       license = stdenv.lib.licenses.mit;
     }) {};
  "tasty-smallcheck" = callPackage
    ({ mkDerivation, async, base, smallcheck, tagged, tasty }:
     mkDerivation {
       pname = "tasty-smallcheck";
       version = "0.8.1";
       sha256 = "1n66ngzllf3xrlqykwszlkwsi96n5nkm7xbpfq7774vpvfnafjri";
       libraryHaskellDepends = [ async base smallcheck tagged tasty ];
       homepage = "http://documentup.com/feuerbach/tasty";
       description = "SmallCheck support for the Tasty test framework";
       license = stdenv.lib.licenses.mit;
     }) {};
  "tasty-th" = callPackage
    ({ mkDerivation, base, tasty, template-haskell }:
     mkDerivation {
       pname = "tasty-th";
       version = "0.1.4";
       sha256 = "0dff9si8i1qp0s7p4hlk0l29vq7wxfglw6mvlgmld43h7rllv88q";
       libraryHaskellDepends = [ base tasty template-haskell ];
       homepage = "http://github.com/bennofs/tasty-th";
       description = "Automatic tasty test case discovery using TH";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tcp-streams" = callPackage
    ({ mkDerivation, base, bytestring, data-default-class, HsOpenSSL
     , HsOpenSSL-x509-system, HUnit, io-streams, network, openssl, pem
     , QuickCheck, test-framework, test-framework-hunit
     , test-framework-quickcheck2, tls, x509, x509-store, x509-system
     }:
     mkDerivation {
       pname = "tcp-streams";
       version = "0.4.0.0";
       sha256 = "0908d8aw9lagkcbfhq6s1sy59ygq54rb8p9ws0xnbf2cqfjabbg6";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base bytestring data-default-class HsOpenSSL HsOpenSSL-x509-system
         io-streams network pem tls x509 x509-store x509-system
       ];
       librarySystemDepends = [ openssl ];
       testHaskellDepends = [
         base bytestring HUnit io-streams network QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2
       ];
       description = "One stop solution for tcp client and server with tls support";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) openssl;};
  "template" = callPackage
    ({ mkDerivation, base, mtl, text }:
     mkDerivation {
       pname = "template";
       version = "0.2.0.10";
       sha256 = "10mcnhi2rdflmv79z0359nn5sylifvk9ih38xnjqqby6n4hs7mcg";
       libraryHaskellDepends = [ base mtl text ];
       description = "Simple string substitution";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "temporary" = callPackage
    ({ mkDerivation, base, directory, exceptions, filepath
     , transformers, unix
     }:
     mkDerivation {
       pname = "temporary";
       version = "1.2.0.4";
       sha256 = "0qk741yqnpd69sksgks2vb7zi50rglp9m498lzw4sh268a017rsi";
       libraryHaskellDepends = [
         base directory exceptions filepath transformers unix
       ];
       homepage = "http://www.github.com/feuerbach/temporary";
       description = "Portable temporary file and directory support for Windows and Unix, based on code from Cabal";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "temporary-rc" = callPackage
    ({ mkDerivation, base, directory, exceptions, filepath
     , transformers, unix
     }:
     mkDerivation {
       pname = "temporary-rc";
       version = "1.2.0.3";
       sha256 = "1nqih0qks439k3pr5kmbbc8rjdw730slrxlflqb27fbxbzb8skqs";
       libraryHaskellDepends = [
         base directory exceptions filepath transformers unix
       ];
       homepage = "http://www.github.com/feuerbach/temporary";
       description = "Portable temporary file and directory support for Windows and Unix, based on code from Cabal";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "terminal-progress-bar" = callPackage
    ({ mkDerivation, base, base-unicode-symbols, stm, stm-chans }:
     mkDerivation {
       pname = "terminal-progress-bar";
       version = "0.0.1.4";
       sha256 = "0ldvii23ks446xrd27aklh8s8pn1yi3dzhhzl05gipjqbhq3lsx3";
       libraryHaskellDepends = [
         base base-unicode-symbols stm stm-chans
       ];
       doCheck = false;
       homepage = "https://github.com/roelvandijk/terminal-progress-bar";
       description = "A simple progress bar in the terminal";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "terminal-size" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "terminal-size";
       version = "0.3.2.1";
       sha256 = "0n4nvj3dbj9gxfnprgish45asn9z4dipv9j98s8i7g2n8yb3xhmm";
       libraryHaskellDepends = [ base ];
       description = "Get terminal window height and width";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "terminfo" = callPackage
    ({ mkDerivation, base, ncurses }:
     mkDerivation {
       pname = "terminfo";
       version = "0.4.0.2";
       sha256 = "0mpqv0wn2x03mw8myc4j75hsgh1575dni6bndhqzspiz8hl8pa7y";
       libraryHaskellDepends = [ base ];
       librarySystemDepends = [ ncurses ];
       homepage = "https://github.com/judah/terminfo";
       description = "Haskell bindings to the terminfo library";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) ncurses;};
  "test-fixture" = callPackage
    ({ mkDerivation, base, data-default, hspec, hspec-discover, mtl
     , template-haskell, th-to-exp, transformers
     }:
     mkDerivation {
       pname = "test-fixture";
       version = "0.4.2.0";
       sha256 = "06lqaiwyn247m9dx17p2c09rgs91l2gn4928bg6l9pbh7flgy1sc";
       libraryHaskellDepends = [ base data-default mtl template-haskell ];
       testHaskellDepends = [
         base hspec hspec-discover mtl template-haskell th-to-exp
         transformers
       ];
       homepage = "http://github.com/cjdev/test-fixture#readme";
       description = "Test monadic side-effects";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "test-framework" = callPackage
    ({ mkDerivation, ansi-terminal, ansi-wl-pprint, base, containers
     , hostname, old-locale, random, regex-posix, time, xml
     }:
     mkDerivation {
       pname = "test-framework";
       version = "0.8.1.1";
       sha256 = "0wxjgdvb1c4ykazw774zlx86550848wbsvgjgcrdzcgbb9m650vq";
       revision = "1";
       editedCabalFile = "17nxdg9xrqq6ycxlg6xrm40pbn1mz6lzjpkfbkl72hjppgnxpnd6";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         ansi-terminal ansi-wl-pprint base containers hostname old-locale
         random regex-posix time xml
       ];
       homepage = "https://batterseapower.github.io/test-framework/";
       description = "Framework for running and organising tests, with HUnit and QuickCheck support";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "test-framework-hunit" = callPackage
    ({ mkDerivation, base, extensible-exceptions, HUnit, test-framework
     }:
     mkDerivation {
       pname = "test-framework-hunit";
       version = "0.3.0.2";
       sha256 = "1y0b6vg8nfm43v90lxxcydhi6qlxhfy4vpxbzm5ic2w55bh8xjwm";
       revision = "2";
       editedCabalFile = "0qnc9xv81n8dwl5h831b9g39k94hbip800qsg3g8hsr4pyrd9dzk";
       libraryHaskellDepends = [
         base extensible-exceptions HUnit test-framework
       ];
       homepage = "https://batterseapower.github.io/test-framework/";
       description = "HUnit support for the test-framework package";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "test-framework-quickcheck2" = callPackage
    ({ mkDerivation, base, extensible-exceptions, QuickCheck, random
     , test-framework
     }:
     mkDerivation {
       pname = "test-framework-quickcheck2";
       version = "0.3.0.3";
       sha256 = "12p1zwrsz35r3j5gzbvixz9z1h5643rhihf5gqznmc991krwd5nc";
       revision = "2";
       editedCabalFile = "1h0vv04vgbj9ncla9nssgiis1sq29n865h473pydfmj31j6ri7wq";
       libraryHaskellDepends = [
         base extensible-exceptions QuickCheck random test-framework
       ];
       homepage = "https://batterseapower.github.io/test-framework/";
       description = "QuickCheck2 support for the test-framework package";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "test-framework-smallcheck" = callPackage
    ({ mkDerivation, base, smallcheck, test-framework, transformers }:
     mkDerivation {
       pname = "test-framework-smallcheck";
       version = "0.2";
       sha256 = "1xpgpk1gp4w7w46b4rhj80fa0bcyz8asj2dcjb5x1c37b7rw90b0";
       libraryHaskellDepends = [
         base smallcheck test-framework transformers
       ];
       homepage = "https://github.com/feuerbach/smallcheck";
       description = "Support for SmallCheck tests in test-framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "test-framework-th" = callPackage
    ({ mkDerivation, base, haskell-src-exts, language-haskell-extract
     , regex-posix, template-haskell, test-framework
     }:
     mkDerivation {
       pname = "test-framework-th";
       version = "0.2.4";
       sha256 = "12lw7yj02jb9s0i7rb98jjam43j2h0gzmnbj9zi933fx7sg0sy4b";
       libraryHaskellDepends = [
         base haskell-src-exts language-haskell-extract regex-posix
         template-haskell test-framework
       ];
       homepage = "http://github.com/finnsson/test-generator";
       description = "Automagically generate the HUnit- and Quickcheck-bulk-code using Template Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "test-simple" = callPackage
    ({ mkDerivation, base, executable-path, mtl, process, QuickCheck
     , state-plus, template-haskell
     }:
     mkDerivation {
       pname = "test-simple";
       version = "0.1.9";
       sha256 = "07gmdrpvl05zvlwxdc7zx1fwlq678w1vikx0jw6gwwkjk6zpkvpa";
       libraryHaskellDepends = [
         base mtl QuickCheck state-plus template-haskell
       ];
       testHaskellDepends = [
         base executable-path mtl process QuickCheck
       ];
       description = "Simple Perl inspired testing";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "testing-feat" = callPackage
    ({ mkDerivation, base, mtl, QuickCheck, tagshare, template-haskell
     }:
     mkDerivation {
       pname = "testing-feat";
       version = "0.4.0.3";
       sha256 = "1kh7ak9qlxsr34hxccfgyz1ga90xxiaxqndk3jaln1f495w9rjil";
       libraryHaskellDepends = [
         base mtl QuickCheck tagshare template-haskell
       ];
       description = "Functional Enumeration of Algebraic Types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "texmath" = callPackage
    ({ mkDerivation, base, bytestring, containers, directory, filepath
     , mtl, network-uri, pandoc-types, parsec, process, split, syb
     , temporary, text, utf8-string, xml
     }:
     mkDerivation {
       pname = "texmath";
       version = "0.8.6.7";
       sha256 = "124c6nyldl4dsrjk10cz380ngs0ngc3xmq56rz4bsmvj39bxjpwy";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base containers mtl pandoc-types parsec syb xml
       ];
       executableHaskellDepends = [ network-uri ];
       testHaskellDepends = [
         base bytestring directory filepath process split temporary text
         utf8-string xml
       ];
       homepage = "http://github.com/jgm/texmath";
       description = "Conversion between formats used to represent mathematics";
       license = "GPL";
     }) {};
  "text" = callPackage
    ({ mkDerivation, array, base, binary, bytestring, deepseq
     , directory, ghc-prim, HUnit, integer-gmp, QuickCheck
     , quickcheck-unicode, random, test-framework, test-framework-hunit
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "text";
       version = "1.2.2.1";
       sha256 = "0nrrzx0ws7pv4dx9jbc6jm2734al1cr0m6iwcnbck4v2yfyv3p8s";
       configureFlags = [ "-f-integer-simple" ];
       libraryHaskellDepends = [
         array base binary bytestring deepseq ghc-prim integer-gmp
       ];
       testHaskellDepends = [
         array base binary bytestring deepseq directory ghc-prim HUnit
         integer-gmp QuickCheck quickcheck-unicode random test-framework
         test-framework-hunit test-framework-quickcheck2
       ];
       doCheck = false;
       homepage = "https://github.com/bos/text";
       description = "An efficient packed Unicode text type";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "text-all" = callPackage
    ({ mkDerivation, base, text, text-format, text-show }:
     mkDerivation {
       pname = "text-all";
       version = "0.3.0.2";
       sha256 = "119zl5zz552739in6c27zs3bqkgnngfdmmz69dsy6cafdbavcx0q";
       libraryHaskellDepends = [ base text text-format text-show ];
       homepage = "http://github.com/aelve/text-all";
       description = "Everything Data.Text related in one package";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "text-binary" = callPackage
    ({ mkDerivation, base, binary, text }:
     mkDerivation {
       pname = "text-binary";
       version = "0.2.1.1";
       sha256 = "18gl10pwg3qwsk0za3c70j4n6a9129wwf1b7d3a461h816yv55xn";
       libraryHaskellDepends = [ base binary text ];
       homepage = "https://github.com/kawu/text-binary";
       description = "Binary instances for text types";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "text-conversions" = callPackage
    ({ mkDerivation, base, base16-bytestring, base64-bytestring
     , bytestring, errors, hspec, hspec-discover, text
     }:
     mkDerivation {
       pname = "text-conversions";
       version = "0.3.0";
       sha256 = "089c56vdj9xysqfr1hnvbnrghlg83q6w10xk02gflpsidcpvwmhp";
       libraryHaskellDepends = [
         base base16-bytestring base64-bytestring bytestring errors text
       ];
       testHaskellDepends = [ base bytestring hspec hspec-discover text ];
       homepage = "https://github.com/cjdev/text-conversions#readme";
       description = "Safe conversions between textual types";
       license = stdenv.lib.licenses.isc;
     }) {};
  "text-format" = callPackage
    ({ mkDerivation, array, base, double-conversion, ghc-prim
     , integer-gmp, old-locale, text, time, transformers
     }:
     mkDerivation {
       pname = "text-format";
       version = "0.3.1.1";
       sha256 = "02zfgzfjvkaxbma1h2gr95h10c8q9gyaadag41q579j68iv15qbd";
       libraryHaskellDepends = [
         array base double-conversion ghc-prim integer-gmp old-locale text
         time transformers
       ];
       homepage = "https://github.com/bos/text-format";
       description = "Text formatting";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "text-icu" = callPackage
    ({ mkDerivation, array, base, bytestring, deepseq, directory
     , ghc-prim, HUnit, icu, QuickCheck, random, test-framework
     , test-framework-hunit, test-framework-quickcheck2, text
     }:
     mkDerivation {
       pname = "text-icu";
       version = "0.7.0.1";
       sha256 = "0y3z5jda7v2iyll2148ivxfd2yhp27d3ryxrspp0cdq394klqxp2";
       libraryHaskellDepends = [ base bytestring deepseq text ];
       librarySystemDepends = [ icu ];
       testHaskellDepends = [
         array base bytestring deepseq directory ghc-prim HUnit QuickCheck
         random test-framework test-framework-hunit
         test-framework-quickcheck2 text
       ];
       homepage = "https://github.com/bos/text-icu";
       description = "Bindings to the ICU library";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) icu;};
  "text-ldap" = callPackage
    ({ mkDerivation, attoparsec, base, base64-bytestring, bytestring
     , containers, dlist, QuickCheck, quickcheck-simple, random
     , semigroups, transformers
     }:
     mkDerivation {
       pname = "text-ldap";
       version = "0.1.1.8";
       sha256 = "0ff057nr4v6hvwsa7avkz14nw63542l0zfsjb91q9nr60kvnsipj";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         attoparsec base base64-bytestring bytestring containers dlist
         semigroups transformers
       ];
       executableHaskellDepends = [ base bytestring ];
       testHaskellDepends = [
         base bytestring QuickCheck quickcheck-simple random semigroups
       ];
       description = "Parser and Printer for LDAP text data stream";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "text-manipulate" = callPackage
    ({ mkDerivation, base, criterion, tasty, tasty-hunit, text }:
     mkDerivation {
       pname = "text-manipulate";
       version = "0.2.0.1";
       sha256 = "0bwxyjj3ll45srxhsp2ihikgqglvjc6m02ixr8xpvyqwkcfwgsg0";
       libraryHaskellDepends = [ base text ];
       testHaskellDepends = [ base tasty tasty-hunit text ];
       benchmarkHaskellDepends = [ base criterion text ];
       homepage = "https://github.com/brendanhay/text-manipulate";
       description = "Case conversion, word boundary manipulation, and textual subjugation";
       license = "unknown";
     }) {};
  "text-metrics" = callPackage
    ({ mkDerivation, base, criterion, deepseq, hspec, QuickCheck, text
     }:
     mkDerivation {
       pname = "text-metrics";
       version = "0.1.0";
       sha256 = "0kwvcwyifnxgz16z3x85jy9v941fmfp56nzq5vxbxpnra0r0ibxp";
       libraryHaskellDepends = [ base text ];
       testHaskellDepends = [ base hspec QuickCheck text ];
       benchmarkHaskellDepends = [ base criterion deepseq text ];
       homepage = "https://github.com/mrkkrp/text-metrics";
       description = "Calculate various string metrics efficiently";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "text-postgresql" = callPackage
    ({ mkDerivation, base, dlist, QuickCheck, quickcheck-simple
     , transformers, transformers-compat
     }:
     mkDerivation {
       pname = "text-postgresql";
       version = "0.0.2.2";
       sha256 = "0390ca2482i6v311rb2cjqd21gr87996cwcpfaiprvl3b94lwd4i";
       libraryHaskellDepends = [
         base dlist transformers transformers-compat
       ];
       testHaskellDepends = [ base QuickCheck quickcheck-simple ];
       homepage = "http://khibino.github.io/haskell-relational-record/";
       description = "Parser and Printer of PostgreSQL extended types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "text-region" = callPackage
    ({ mkDerivation, aeson, base, base-unicode-symbols, bytestring
     , containers, groups, hspec, lens, mtl, text
     }:
     mkDerivation {
       pname = "text-region";
       version = "0.1.0.1";
       sha256 = "1w8vyr8m312kp8sfpi68rfjxc57jjd1bli2lbrhwm61qydxgy5sj";
       libraryHaskellDepends = [
         aeson base base-unicode-symbols bytestring containers groups lens
         mtl text
       ];
       testHaskellDepends = [
         base base-unicode-symbols containers hspec lens mtl text
       ];
       homepage = "https://github.com/mvoidex/text-region";
       description = "Marking text regions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "text-show" = callPackage
    ({ mkDerivation, array, base, base-compat, base-orphans, bifunctors
     , bytestring, bytestring-builder, containers, contravariant
     , criterion, deepseq, deriving-compat, generic-deriving
     , ghc-boot-th, ghc-prim, hspec, integer-gmp, nats, QuickCheck
     , quickcheck-instances, semigroups, tagged, template-haskell, text
     , th-lift, transformers, transformers-compat, void
     }:
     mkDerivation {
       pname = "text-show";
       version = "3.4";
       sha256 = "1iypapn5r31xdwnl9iaar2i21vhzyj7q1269lik7fqc7rbf7m2nf";
       libraryHaskellDepends = [
         array base base-compat bifunctors bytestring bytestring-builder
         containers contravariant generic-deriving ghc-boot-th ghc-prim
         integer-gmp nats semigroups tagged template-haskell text th-lift
         transformers transformers-compat void
       ];
       testHaskellDepends = [
         array base base-compat base-orphans bifunctors bytestring
         bytestring-builder containers contravariant deriving-compat
         generic-deriving ghc-boot-th ghc-prim hspec integer-gmp nats
         QuickCheck quickcheck-instances semigroups tagged template-haskell
         text th-lift transformers transformers-compat void
       ];
       benchmarkHaskellDepends = [
         array base base-compat bifunctors bytestring bytestring-builder
         containers contravariant criterion deepseq generic-deriving
         ghc-boot-th ghc-prim integer-gmp nats semigroups tagged
         template-haskell text th-lift transformers transformers-compat void
       ];
       homepage = "https://github.com/RyanGlScott/text-show";
       description = "Efficient conversion of values into Text";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "text-show-instances" = callPackage
    ({ mkDerivation, base, base-compat, bifunctors, binary, bytestring
     , containers, directory, generic-deriving, ghc-boot, ghc-prim
     , haskeline, hoopl, hpc, hspec, old-locale, old-time, pretty
     , QuickCheck, quickcheck-instances, random, semigroups, tagged
     , template-haskell, terminfo, text, text-show, th-orphans, time
     , transformers, transformers-compat, unix, unordered-containers
     , vector, xhtml
     }:
     mkDerivation {
       pname = "text-show-instances";
       version = "3.4";
       sha256 = "08k3rsdgfv2p5bpv5kp24wsp6bgmv88sccyf9h18256hir59wbmz";
       libraryHaskellDepends = [
         base base-compat bifunctors binary bytestring containers directory
         ghc-boot haskeline hoopl hpc old-locale old-time pretty random
         semigroups tagged template-haskell terminfo text text-show time
         transformers transformers-compat unix unordered-containers vector
         xhtml
       ];
       testHaskellDepends = [
         base base-compat bifunctors binary bytestring containers directory
         generic-deriving ghc-boot ghc-prim haskeline hoopl hpc hspec
         old-locale old-time pretty QuickCheck quickcheck-instances random
         semigroups tagged template-haskell terminfo text text-show
         th-orphans time transformers transformers-compat unix
         unordered-containers vector xhtml
       ];
       homepage = "https://github.com/RyanGlScott/text-show-instances";
       description = "Additional instances for text-show";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tf-random" = callPackage
    ({ mkDerivation, base, primitive, random, time }:
     mkDerivation {
       pname = "tf-random";
       version = "0.5";
       sha256 = "0445r2nns6009fmq0xbfpyv7jpzwv0snccjdg7hwj4xk4z0cwc1f";
       libraryHaskellDepends = [ base primitive random time ];
       description = "High-quality splittable pseudorandom number generator";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "th-data-compat" = callPackage
    ({ mkDerivation, base, template-haskell }:
     mkDerivation {
       pname = "th-data-compat";
       version = "0.0.2.2";
       sha256 = "0f6fcazfjb5iravmflx1s023hp2swzzkwk296l4jv64xjpxqvdd1";
       configureFlags = [ "-f-template-haskell-210" ];
       libraryHaskellDepends = [ base template-haskell ];
       description = "Compatibility for data definition template of TH";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "th-desugar" = callPackage
    ({ mkDerivation, base, containers, hspec, HUnit, mtl, syb
     , template-haskell, th-expand-syns, th-lift, th-orphans
     }:
     mkDerivation {
       pname = "th-desugar";
       version = "1.6";
       sha256 = "0kv3gxvr7izvg1s86p92b5318bv7pjghig2hx9q21cg9ppifry68";
       revision = "1";
       editedCabalFile = "0b9igl05bmhwymvqxigif4zsn7xa5xm1mnrgv3wnr6cfk8b44nms";
       libraryHaskellDepends = [
         base containers mtl syb template-haskell th-expand-syns th-lift
         th-orphans
       ];
       testHaskellDepends = [
         base containers hspec HUnit mtl syb template-haskell th-expand-syns
         th-lift th-orphans
       ];
       homepage = "https://github.com/goldfirere/th-desugar";
       description = "Functions to desugar Template Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "th-expand-syns" = callPackage
    ({ mkDerivation, base, containers, syb, template-haskell }:
     mkDerivation {
       pname = "th-expand-syns";
       version = "0.4.2.0";
       sha256 = "1fadcpqry88rk7hr3b98f9k8ccbnqgnga0gqy1sk78g952cdgzk6";
       libraryHaskellDepends = [ base containers syb template-haskell ];
       testHaskellDepends = [ base template-haskell ];
       homepage = "https://github.com/DanielSchuessler/th-expand-syns";
       description = "Expands type synonyms in Template Haskell ASTs";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "th-extras" = callPackage
    ({ mkDerivation, base, syb, template-haskell }:
     mkDerivation {
       pname = "th-extras";
       version = "0.0.0.4";
       sha256 = "1vgvqgfm2lvx6v5r2mglwyl63647c9n6b9a5ikqc93pjm98g9vwg";
       libraryHaskellDepends = [ base syb template-haskell ];
       homepage = "https://github.com/mokus0/th-extras";
       description = "A grab bag of functions for use with Template Haskell";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "th-lift" = callPackage
    ({ mkDerivation, base, ghc-prim, template-haskell }:
     mkDerivation {
       pname = "th-lift";
       version = "0.7.6";
       sha256 = "1lgc0cla7rcdzddp9r2n49hkm8z7q0s357sxgrdnsl1jmjfjqsij";
       libraryHaskellDepends = [ base ghc-prim template-haskell ];
       testHaskellDepends = [ base ghc-prim template-haskell ];
       homepage = "http://github.com/mboes/th-lift";
       description = "Derive Template Haskell's Lift class for datatypes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "th-lift-instances" = callPackage
    ({ mkDerivation, base, bytestring, containers, QuickCheck
     , template-haskell, text, th-lift, vector
     }:
     mkDerivation {
       pname = "th-lift-instances";
       version = "0.1.11";
       sha256 = "1f56cp6ckcalld5jchv0kxpjkwcsixd7smd0g7r8cg67ppx6m90x";
       libraryHaskellDepends = [
         base bytestring containers template-haskell text th-lift vector
       ];
       testHaskellDepends = [
         base bytestring containers QuickCheck template-haskell text vector
       ];
       homepage = "http://github.com/bennofs/th-lift-instances/";
       description = "Lift instances for template-haskell for common data types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "th-orphans" = callPackage
    ({ mkDerivation, base, hspec, mtl, template-haskell, th-lift
     , th-lift-instances, th-reify-many
     }:
     mkDerivation {
       pname = "th-orphans";
       version = "0.13.3";
       sha256 = "0vf4g2pwhgh242512cssbzsgbpfrnn1fj5kv7qw4wx8cdnvdb03k";
       libraryHaskellDepends = [
         base mtl template-haskell th-lift th-lift-instances th-reify-many
       ];
       testHaskellDepends = [ base hspec template-haskell ];
       description = "Orphan instances for TH datatypes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "th-printf" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, hspec, HUnit
     , QuickCheck, template-haskell, text, transformers
     }:
     mkDerivation {
       pname = "th-printf";
       version = "0.3.1";
       sha256 = "089grlpavvqv90graa9rdwg9x1ph484g5bj7sfjklqy8mgwwqg7a";
       libraryHaskellDepends = [
         attoparsec base bytestring template-haskell text transformers
       ];
       testHaskellDepends = [
         base bytestring hspec HUnit QuickCheck template-haskell text
       ];
       doCheck = false;
       homepage = "https://github.com/joelteon/th-printf";
       description = "Compile-time printf";
       license = stdenv.lib.licenses.mit;
     }) {};
  "th-reify-compat" = callPackage
    ({ mkDerivation, base, template-haskell }:
     mkDerivation {
       pname = "th-reify-compat";
       version = "0.0.1.1";
       sha256 = "04y539y3ajm92rxnc149qrvw02bk0m8sac1swn0q6763wahsa73j";
       configureFlags = [ "-f-template-haskell-210" ];
       libraryHaskellDepends = [ base template-haskell ];
       homepage = "http://github.com/khibino/haskell-th-reify-compat/";
       description = "Compatibility for the result type of TH reify";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "th-reify-many" = callPackage
    ({ mkDerivation, base, containers, mtl, safe, template-haskell
     , th-expand-syns
     }:
     mkDerivation {
       pname = "th-reify-many";
       version = "0.1.6";
       sha256 = "1b76zjxkj0v0n8zj9l0nwav2irm0c43rx6qjihfw8klmmxvx59df";
       libraryHaskellDepends = [
         base containers mtl safe template-haskell th-expand-syns
       ];
       testHaskellDepends = [ base template-haskell ];
       homepage = "http://github.com/mgsloan/th-reify-many";
       description = "Recurseively reify template haskell datatype info";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "th-to-exp" = callPackage
    ({ mkDerivation, base, hspec, template-haskell }:
     mkDerivation {
       pname = "th-to-exp";
       version = "0.0.1.0";
       sha256 = "0mmz37jlkzpw47gsjzfr182kiwwdwxdl19bpiw28m944m75ksa1h";
       libraryHaskellDepends = [ base template-haskell ];
       testHaskellDepends = [ base hspec template-haskell ];
       homepage = "https://github.com/lexi-lambda/th-to-exp#readme";
       description = "Provides a way to persist data from compile-time to runtime";
       license = stdenv.lib.licenses.isc;
     }) {};
  "th-utilities" = callPackage
    ({ mkDerivation, base, bytestring, containers, directory, filepath
     , hspec, primitive, syb, template-haskell, text, th-orphans, vector
     }:
     mkDerivation {
       pname = "th-utilities";
       version = "0.2.0.1";
       sha256 = "1mki2s821b1zpdn5463qz5vl3kvxxam90iax1n6vznf0d7p4rik5";
       libraryHaskellDepends = [
         base bytestring containers directory filepath primitive syb
         template-haskell text th-orphans
       ];
       testHaskellDepends = [
         base bytestring containers directory filepath hspec primitive syb
         template-haskell text th-orphans vector
       ];
       homepage = "https://github.com/fpco/th-utilities#readme";
       description = "Collection of useful functions for use with Template Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};
  "these" = callPackage
    ({ mkDerivation, aeson, base, bifunctors, binary, containers
     , data-default-class, deepseq, hashable, keys, mtl, profunctors
     , QuickCheck, quickcheck-instances, semigroupoids, tasty
     , tasty-quickcheck, transformers, transformers-compat
     , unordered-containers, vector, vector-instances
     }:
     mkDerivation {
       pname = "these";
       version = "0.7.3";
       sha256 = "16rx5929skbpn7f5v4hnnyps01y3bm51cr4z5b5zzjn23q8rqcql";
       revision = "2";
       editedCabalFile = "0avfr6p992191asxb03l13l5jzs6dmw3lxsfaddxn2jkqsgr9v0j";
       libraryHaskellDepends = [
         aeson base bifunctors binary containers data-default-class deepseq
         hashable keys mtl profunctors QuickCheck semigroupoids transformers
         transformers-compat unordered-containers vector vector-instances
       ];
       testHaskellDepends = [
         aeson base bifunctors binary containers hashable QuickCheck
         quickcheck-instances tasty tasty-quickcheck transformers
         unordered-containers vector
       ];
       homepage = "https://github.com/isomorphism/these";
       description = "An either-or-both data type & a generalized 'zip with padding' typeclass";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "threads" = callPackage
    ({ mkDerivation, base, concurrent-extra, HUnit, stm, test-framework
     , test-framework-hunit
     }:
     mkDerivation {
       pname = "threads";
       version = "0.5.1.4";
       sha256 = "1ggyfrr00b24zjjrggf2srxpxl0spd2jy54v5b70nz6c8fvhbf6k";
       libraryHaskellDepends = [ base stm ];
       testHaskellDepends = [
         base concurrent-extra HUnit stm test-framework test-framework-hunit
       ];
       homepage = "https://github.com/basvandijk/threads";
       description = "Fork threads and wait for their result";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "through-text" = callPackage
    ({ mkDerivation, base, bytestring, case-insensitive, text }:
     mkDerivation {
       pname = "through-text";
       version = "0.1.0.0";
       sha256 = "1kdl36n98kajaa7v7js2sy8bi09p8rrxmlfcclcfc1l92bd2aclk";
       revision = "1";
       editedCabalFile = "0rd88blvc7dz6j64868dkgz1l7zpy5gfzx2m5kp3wjbbfmjrzh7h";
       libraryHaskellDepends = [ base bytestring case-insensitive text ];
       homepage = "https://www.github.com/bergmark/through-text";
       description = "Convert textual types through Text without needing O(n^2) instances";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "thumbnail-plus" = callPackage
    ({ mkDerivation, base, bytestring, conduit, conduit-extra
     , data-default, directory, either, gd, hspec, imagesize-conduit
     , resourcet, temporary, transformers
     }:
     mkDerivation {
       pname = "thumbnail-plus";
       version = "1.0.5";
       sha256 = "0320yfgnsazl7bxm9zf077mi4dgfmlcfnzy1qpdl9w3jl5i7z441";
       libraryHaskellDepends = [
         base bytestring conduit conduit-extra data-default directory either
         gd imagesize-conduit resourcet temporary transformers
       ];
       testHaskellDepends = [
         base conduit conduit-extra data-default directory hspec resourcet
         transformers
       ];
       homepage = "https://github.com/prowdsponsor/thumbnail-plus";
       description = "Generate thumbnails easily and safely";
       license = stdenv.lib.licenses.mit;
     }) {};
  "thyme" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, bytestring, Cabal
     , containers, cpphs, criterion, deepseq, directory, filepath, mtl
     , old-locale, profunctors, QuickCheck, random
     , system-posix-redirect, text, time, vector, vector-space
     , vector-th-unbox
     }:
     mkDerivation {
       pname = "thyme";
       version = "0.3.5.5";
       sha256 = "0v3rbjl92bqggsdra72zdq6rxzb2qf1268424p94225lnwgp1il4";
       libraryHaskellDepends = [
         aeson attoparsec base bytestring containers deepseq mtl old-locale
         profunctors QuickCheck random text time vector vector-space
         vector-th-unbox
       ];
       libraryToolDepends = [ cpphs ];
       testHaskellDepends = [
         attoparsec base bytestring Cabal containers directory filepath mtl
         old-locale profunctors QuickCheck random system-posix-redirect text
         time vector-space
       ];
       benchmarkHaskellDepends = [
         base criterion mtl old-locale profunctors QuickCheck random time
         vector vector-space
       ];
       doCheck = false;
       homepage = "https://github.com/liyang/thyme";
       description = "A faster time library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tidal" = callPackage
    ({ mkDerivation, base, binary, bytestring, colour, containers
     , hashable, hmt, hosc, mersenne-random-pure64, mtl, parsec, process
     , text, time, transformers, websockets
     }:
     mkDerivation {
       pname = "tidal";
       version = "0.8.2";
       sha256 = "12rs8i44cx8hnik3q52l43zd5j3qfv1ljznjam0c4gmq83dm967p";
       libraryHaskellDepends = [
         base binary bytestring colour containers hashable hmt hosc
         mersenne-random-pure64 mtl parsec process text time transformers
         websockets
       ];
       homepage = "http://tidal.lurk.org/";
       description = "Pattern language for improvised music";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "time-compat" = callPackage
    ({ mkDerivation, base, old-time, time }:
     mkDerivation {
       pname = "time-compat";
       version = "0.1.0.3";
       sha256 = "0zqgzr8yjn36rn6gflwh5s0c92vl44xzxiw0jz8d5h0h8lhi21sr";
       libraryHaskellDepends = [ base old-time time ];
       homepage = "http://hub.darcs.net/dag/time-compat";
       description = "Compatibility with old-time for the time package";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "time-lens" = callPackage
    ({ mkDerivation, base, data-lens-light, time }:
     mkDerivation {
       pname = "time-lens";
       version = "0.4.0.1";
       sha256 = "0916qfan93aq91icf87ifvskrq6s6s75rhkajvl8pxp74j28hlwz";
       libraryHaskellDepends = [ base data-lens-light time ];
       description = "Lens-based interface to Data.Time data structures";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "time-locale-compat" = callPackage
    ({ mkDerivation, base, time }:
     mkDerivation {
       pname = "time-locale-compat";
       version = "0.1.1.3";
       sha256 = "1vdcfr2hp9qh3ag90x6ikbdf42wiqpdylnplffna54bpnilbyi4i";
       configureFlags = [ "-f-old-locale" ];
       libraryHaskellDepends = [ base time ];
       homepage = "https://github.com/khibino/haskell-time-locale-compat";
       description = "Compatibility of TimeLocale between old-locale and time-1.5";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "time-parsers" = callPackage
    ({ mkDerivation, attoparsec, base, bifunctors, parsec, parsers
     , tasty, tasty-hunit, template-haskell, text, time
     }:
     mkDerivation {
       pname = "time-parsers";
       version = "0.1.2.0";
       sha256 = "091wpcqj1kjvyjgj1y1invn0g5lhdxc92az2bcbwbrpq2c7x8l2f";
       libraryHaskellDepends = [ base parsers template-haskell time ];
       testHaskellDepends = [
         attoparsec base bifunctors parsec parsers tasty tasty-hunit
         template-haskell text time
       ];
       homepage = "https://github.com/phadej/time-parsers#readme";
       description = "Parsers for types in `time`";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "timeit" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "timeit";
       version = "1.0.0.0";
       sha256 = "0dkjbp636dp882zlbwvvz76k4g7ga28wksd41w6mh0k8z45xjj5x";
       libraryHaskellDepends = [ base ];
       description = "Time a computation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "timelens" = callPackage
    ({ mkDerivation, base, lens, time }:
     mkDerivation {
       pname = "timelens";
       version = "0.2.0.2";
       sha256 = "0r57fib5nzvrk8gsn26364l1a14zj9sg3kv2db4pjzy3dq0zmrpl";
       libraryHaskellDepends = [ base lens time ];
       homepage = "http://www.github.com/massysett/timelens";
       description = "Lenses for the time package";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "timemap" = callPackage
    ({ mkDerivation, base, containers, criterion, focus, hashable
     , list-t, QuickCheck, quickcheck-instances, stm, stm-containers
     , tasty, tasty-hunit, tasty-quickcheck, time, unordered-containers
     }:
     mkDerivation {
       pname = "timemap";
       version = "0.0.4";
       sha256 = "1qyrs6yg30rqcp5izm20wadclpdb5jvxscswcgdm54gx4z3qaz3f";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base containers focus hashable list-t stm stm-containers time
         unordered-containers
       ];
       executableHaskellDepends = [
         base containers focus hashable list-t stm stm-containers time
         unordered-containers
       ];
       testHaskellDepends = [
         base containers focus hashable list-t QuickCheck
         quickcheck-instances stm stm-containers tasty tasty-hunit
         tasty-quickcheck time unordered-containers
       ];
       benchmarkHaskellDepends = [
         base containers criterion focus hashable list-t stm stm-containers
         time unordered-containers
       ];
       description = "A mutable hashmap, implicitly indexed by UTCTime";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "timerep" = callPackage
    ({ mkDerivation, attoparsec, base, monoid-subclasses, QuickCheck
     , tasty, tasty-hunit, tasty-quickcheck, text, time
     }:
     mkDerivation {
       pname = "timerep";
       version = "2.0.0.2";
       sha256 = "0fakjs6fgva6i035jiyr8hcgnrivw601cy8n3ja232d07izl2khx";
       libraryHaskellDepends = [
         attoparsec base monoid-subclasses text time
       ];
       testHaskellDepends = [
         base QuickCheck tasty tasty-hunit tasty-quickcheck text time
       ];
       homepage = "https://github.com/HugoDaniel/timerep";
       description = "Parse and display time according to some RFCs (RFC3339, RFC2822, RFC822)";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "timezone-olson" = callPackage
    ({ mkDerivation, base, binary, bytestring, extensible-exceptions
     , time, timezone-series
     }:
     mkDerivation {
       pname = "timezone-olson";
       version = "0.1.7";
       sha256 = "1am6vqq3zxrnb444waqfajk3s1wpynw9fszqnk9ww7akf2v5abr3";
       revision = "2";
       editedCabalFile = "1ss4ipn11m6y8bq9pw9i7cs3yciqacf7y281749xc77a1w2nw19b";
       libraryHaskellDepends = [
         base binary bytestring extensible-exceptions time timezone-series
       ];
       homepage = "http://projects.haskell.org/time-ng/";
       description = "A pure Haskell parser and renderer for binary Olson timezone files";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "timezone-series" = callPackage
    ({ mkDerivation, base, time }:
     mkDerivation {
       pname = "timezone-series";
       version = "0.1.6.1";
       sha256 = "1hrcbh146lq3pl4jprdmqwpbnlqv6743m52ls7qs0hqi7f69msk5";
       libraryHaskellDepends = [ base time ];
       homepage = "http://projects.haskell.org/time-ng/";
       description = "Enhanced timezone handling for Data.Time";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tinylog" = callPackage
    ({ mkDerivation, base, bytestring, containers, criterion
     , double-conversion, fast-logger, text, transformers, unix-time
     }:
     mkDerivation {
       pname = "tinylog";
       version = "0.14.0";
       sha256 = "1skk59sxz2n96nv8vbc9yxla8m2jkj3ll8z5m0v78w0ih0bmcbrj";
       libraryHaskellDepends = [
         base bytestring containers double-conversion fast-logger text
         transformers unix-time
       ];
       benchmarkHaskellDepends = [ base bytestring criterion ];
       homepage = "https://gitlab.com/twittner/tinylog/";
       description = "Simplistic logging using fast-logger";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "tinytemplate" = callPackage
    ({ mkDerivation, base, QuickCheck, text }:
     mkDerivation {
       pname = "tinytemplate";
       version = "0.1.2.0";
       sha256 = "02kxs4qkrqribqx4sk4hs4qc76x9r8ii2jr1rff17gbmymj3kirh";
       libraryHaskellDepends = [ base text ];
       testHaskellDepends = [ base QuickCheck text ];
       homepage = "http://github.com/dicomgrid/tinytemplate";
       description = "A tiny text templating library";
       license = stdenv.lib.licenses.mit;
     }) {};
  "tls" = callPackage
    ({ mkDerivation, asn1-encoding, asn1-types, async, base, bytestring
     , cereal, criterion, cryptonite, data-default-class, hourglass
     , memory, mtl, network, QuickCheck, tasty, tasty-quickcheck
     , transformers, x509, x509-store, x509-validation
     }:
     mkDerivation {
       pname = "tls";
       version = "1.3.9";
       sha256 = "0yr60a7an6vkjlcnv4h6xpd51blc3xzlzrqrfw4x75l7a8b5wdc1";
       libraryHaskellDepends = [
         asn1-encoding asn1-types async base bytestring cereal cryptonite
         data-default-class memory mtl network transformers x509 x509-store
         x509-validation
       ];
       testHaskellDepends = [
         base bytestring cereal cryptonite data-default-class hourglass mtl
         QuickCheck tasty tasty-quickcheck x509 x509-validation
       ];
       benchmarkHaskellDepends = [
         base bytestring criterion cryptonite data-default-class hourglass
         mtl QuickCheck tasty-quickcheck x509 x509-validation
       ];
       homepage = "http://github.com/vincenthz/hs-tls";
       description = "TLS/SSL protocol native implementation (Server and Client)";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tls-debug" = callPackage
    ({ mkDerivation, base, bytestring, cryptonite, data-default-class
     , network, pem, time, tls, x509, x509-store, x509-system
     , x509-validation
     }:
     mkDerivation {
       pname = "tls-debug";
       version = "0.4.4";
       sha256 = "07amgj4hyxxrdadk1dpncqznygc49n87m8acpbjivwiqvqbf9rz5";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         base bytestring cryptonite data-default-class network pem time tls
         x509 x509-store x509-system x509-validation
       ];
       doHaddock = false;
       homepage = "http://github.com/vincenthz/hs-tls";
       description = "Set of programs for TLS testing and debugging";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "token-bucket" = callPackage
    ({ mkDerivation, base, time }:
     mkDerivation {
       pname = "token-bucket";
       version = "0.1.0.1";
       sha256 = "1l3axqdkrjf28pxhrvdvlpf9wi79czsfvhi33w4v2wbj0g00j9ii";
       revision = "1";
       editedCabalFile = "0ximaddnjb5sqn29lp2jrxb5f92sgn4hz3xps8by5a2bppx2q8s1";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base time ];
       homepage = "https://github.com/hvr/token-bucket";
       description = "Rate limiter using lazy bucket algorithm";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "tostring" = callPackage
    ({ mkDerivation, base, case-insensitive, text, utf8-string }:
     mkDerivation {
       pname = "tostring";
       version = "0.2.1.1";
       sha256 = "0c95a1vjnnn3bwdz8v5hv7q2sbzn23ban3hcwqmwhmzc9ba019zg";
       libraryHaskellDepends = [ base case-insensitive text utf8-string ];
       description = "The ToString class";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "transformers-base" = callPackage
    ({ mkDerivation, base, stm, transformers, transformers-compat }:
     mkDerivation {
       pname = "transformers-base";
       version = "0.4.4";
       sha256 = "11r3slgpgpra6zi2kjg3g60gvv17b1fh6qxipcpk8n86qx7lk8va";
       revision = "1";
       editedCabalFile = "196pr3a4lhgklyw6nq6rv1j9djwzmvx7xrpp58carxnb55gk06pv";
       libraryHaskellDepends = [
         base stm transformers transformers-compat
       ];
       homepage = "https://github.com/mvv/transformers-base";
       description = "Lift computations from the bottom of a transformer stack";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "transformers-compat" = callPackage
    ({ mkDerivation, base, ghc-prim, transformers }:
     mkDerivation {
       pname = "transformers-compat";
       version = "0.5.1.4";
       sha256 = "17yam0199fh9ndsn9n69jx9nvbsmymzzwbi23dck3dk4q57fz0fq";
       libraryHaskellDepends = [ base ghc-prim transformers ];
       homepage = "http://github.com/ekmett/transformers-compat/";
       description = "A small compatibility shim exposing the new types from transformers 0.3 and 0.4 to older Haskell platforms.";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "transformers-lift" = callPackage
    ({ mkDerivation, base, transformers }:
     mkDerivation {
       pname = "transformers-lift";
       version = "0.1.0.1";
       sha256 = "0x5a80c8inc89h7z85qkr892s3ybk2gqybqn3h0w3cmrizsi37f2";
       libraryHaskellDepends = [ base transformers ];
       description = "Ad-hoc type classes for lifting";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "transient" = callPackage
    ({ mkDerivation, base, containers, directory, mtl, random, stm
     , time, transformers
     }:
     mkDerivation {
       pname = "transient";
       version = "0.4.4.1";
       sha256 = "1vfhd25bp6hvivjvdsji11qlnxpvbvrkfjxz98lls16lqfv39bgi";
       libraryHaskellDepends = [
         base containers directory mtl random stm time transformers
       ];
       homepage = "http://www.fpcomplete.com/user/agocorona";
       description = "Making composable programs with multithreading, events and distributed computing";
       license = stdenv.lib.licenses.mit;
     }) {};
  "transient-universe" = callPackage
    ({ mkDerivation, base, bytestring, case-insensitive, containers
     , directory, filepath, hashable, HTTP, iproute, mtl, network
     , network-info, network-uri, process, random, stm, TCache, text
     , time, transformers, transient, vector, websockets
     }:
     mkDerivation {
       pname = "transient-universe";
       version = "0.3.5.1";
       sha256 = "11grgp63wy8nld3802l4i4dj909bg9xnhgvr94v444dik6dby4vn";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring case-insensitive containers directory filepath
         hashable HTTP iproute mtl network network-info network-uri process
         random stm TCache text time transformers transient vector
         websockets
       ];
       executableHaskellDepends = [ base transformers transient ];
       testHaskellDepends = [
         base bytestring case-insensitive containers directory filepath
         hashable HTTP mtl network network-info network-uri process random
         stm TCache text time transformers transient vector websockets
       ];
       homepage = "http://www.fpcomplete.com/user/agocorona";
       description = "Remote execution and map-reduce: distributed computing for Transient";
       license = stdenv.lib.licenses.mit;
     }) {};
  "traverse-with-class" = callPackage
    ({ mkDerivation, base, template-haskell, transformers }:
     mkDerivation {
       pname = "traverse-with-class";
       version = "0.2.0.4";
       sha256 = "0wl741z4vnvl7ghbn66nnnrw62k3v4wl280nyqx2bw9pmk7fjm4x";
       libraryHaskellDepends = [ base template-haskell transformers ];
       description = "Generic applicative traversals";
       license = stdenv.lib.licenses.mit;
     }) {};
  "tree-fun" = callPackage
    ({ mkDerivation, base, containers, mtl }:
     mkDerivation {
       pname = "tree-fun";
       version = "0.8.1.0";
       sha256 = "07vgsps4kjld75ndnjjaigsk5vvg11vjp740pznhsw79k3qjbs9a";
       libraryHaskellDepends = [ base containers mtl ];
       description = "Library for functions pertaining to tree exploration and manipulation";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "tree-view" = callPackage
    ({ mkDerivation, base, containers, mtl }:
     mkDerivation {
       pname = "tree-view";
       version = "0.4";
       sha256 = "0mzywp6nipc6zs98dy4ny2s3r9d745lqpjazfnj5y4hx8swyckgn";
       libraryHaskellDepends = [ base containers mtl ];
       description = "Render trees as foldable HTML and Unicode art";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tries" = callPackage
    ({ mkDerivation, base, bytestring, bytestring-trie, composition
     , composition-extra, containers, criterion, deepseq, hashable, keys
     , mtl, QuickCheck, quickcheck-instances, rose-trees, semigroups
     , sets, tasty, tasty-quickcheck, unordered-containers
     }:
     mkDerivation {
       pname = "tries";
       version = "0.0.4";
       sha256 = "0jprcvr0rrvix3g86nwl25i1b4py00xw7gwvkkkgypmk0f567sbb";
       libraryHaskellDepends = [
         base bytestring bytestring-trie composition composition-extra
         containers deepseq hashable keys QuickCheck quickcheck-instances
         rose-trees semigroups sets unordered-containers
       ];
       testHaskellDepends = [
         base bytestring bytestring-trie composition composition-extra
         containers deepseq hashable keys mtl QuickCheck
         quickcheck-instances rose-trees semigroups sets tasty
         tasty-quickcheck unordered-containers
       ];
       benchmarkHaskellDepends = [
         base bytestring bytestring-trie composition composition-extra
         containers criterion deepseq hashable keys mtl QuickCheck
         quickcheck-instances rose-trees semigroups sets
         unordered-containers
       ];
       description = "Various trie implementations in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "trifecta" = callPackage
    ({ mkDerivation, ansi-terminal, ansi-wl-pprint, array, base
     , blaze-builder, blaze-html, blaze-markup, bytestring, charset
     , comonad, containers, deepseq, directory, doctest, filepath
     , fingertree, ghc-prim, hashable, lens, mtl, parsers, profunctors
     , QuickCheck, reducers, semigroups, transformers
     , unordered-containers, utf8-string
     }:
     mkDerivation {
       pname = "trifecta";
       version = "1.6.1";
       sha256 = "1xwcl9rdxz89msvzbb4nqhrpjl8l915zj7va40am7ynxzy92hk45";
       libraryHaskellDepends = [
         ansi-terminal ansi-wl-pprint array base blaze-builder blaze-html
         blaze-markup bytestring charset comonad containers deepseq
         fingertree ghc-prim hashable lens mtl parsers profunctors reducers
         semigroups transformers unordered-containers utf8-string
       ];
       testHaskellDepends = [
         base directory doctest filepath parsers QuickCheck
       ];
       homepage = "http://github.com/ekmett/trifecta/";
       description = "A modern parser combinator library with convenient diagnostics";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "true-name" = callPackage
    ({ mkDerivation, base, containers, template-haskell, time }:
     mkDerivation {
       pname = "true-name";
       version = "0.1.0.2";
       sha256 = "1c0wdqpdrannmsgf5qp9l8igmwmj8kgf1mvb3cj5mzk90n4jfxh6";
       libraryHaskellDepends = [ base template-haskell ];
       testHaskellDepends = [ base containers template-haskell time ];
       homepage = "https://github.com/liyang/true-name";
       description = "Template Haskell hack to violate module abstractions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ttrie" = callPackage
    ({ mkDerivation, atomic-primops, base, containers, hashable
     , primitive, QuickCheck, stm, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "ttrie";
       version = "0.1.2.1";
       sha256 = "0s2a3zr99n0k8l847jcpzpi9vz8z69jjgxqd28b0p6jmi7llyi2h";
       libraryHaskellDepends = [
         atomic-primops base hashable primitive stm
       ];
       testHaskellDepends = [
         base containers hashable QuickCheck stm test-framework
         test-framework-quickcheck2
       ];
       homepage = "http://github.com/mcschroeder/ttrie";
       description = "Contention-free STM hash map";
       license = stdenv.lib.licenses.mit;
     }) {};
  "tttool" = callPackage
    ({ mkDerivation, aeson, base, binary, bytestring, containers
     , directory, executable-path, filepath, hashable, haskeline, HPDF
     , JuicyPixels, mtl, natural-sort, optparse-applicative, parsec
     , process, random, split, spool, template-haskell, time, vector
     , yaml, zlib
     }:
     mkDerivation {
       pname = "tttool";
       version = "1.6.1.2";
       sha256 = "114314r90pg0y0d8rp9yr2fn9q06g07hj626j91hxxd43v4hapwg";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         aeson base binary bytestring containers directory executable-path
         filepath hashable haskeline HPDF JuicyPixels mtl natural-sort
         optparse-applicative parsec process random split spool
         template-haskell time vector yaml zlib
       ];
       doHaddock = false;
       homepage = "https://github.com/entropia/tip-toi-reveng";
       description = "Working with files for the Tiptoi® pen";
       license = stdenv.lib.licenses.mit;
     }) {};
  "tuple" = callPackage
    ({ mkDerivation, base, OneTuple }:
     mkDerivation {
       pname = "tuple";
       version = "0.3.0.2";
       sha256 = "094nx29aahyrvbcn7yca9zs2a5rxz1is7510w1q43rpvza7hdjrg";
       libraryHaskellDepends = [ base OneTuple ];
       description = "Various functions on tuples";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tuple-th" = callPackage
    ({ mkDerivation, base, containers, template-haskell }:
     mkDerivation {
       pname = "tuple-th";
       version = "0.2.5";
       sha256 = "1mrl4vvxmby7sf1paf7hklzidnr6wq55822i73smqyz0xpf3gsjn";
       libraryHaskellDepends = [ base containers template-haskell ];
       description = "Generate (non-recursive) utility functions for tuples of statically known size";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tuples-homogenous-h98" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "tuples-homogenous-h98";
       version = "0.1.1.0";
       sha256 = "0fhz246wh6x0s0sjkmd3qcylsx2gfrmgmvgb7js2zjg91y7zqnh2";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/ppetr/tuples-homogenous-h98";
       description = "Wrappers for n-ary tuples with Traversable and Applicative/Monad instances";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "turtle" = callPackage
    ({ mkDerivation, async, base, clock, criterion, directory, doctest
     , foldl, hostname, managed, optional-args, optparse-applicative
     , process, stm, system-fileio, system-filepath, temporary, text
     , time, transformers, unix
     }:
     mkDerivation {
       pname = "turtle";
       version = "1.2.8";
       sha256 = "00dvdwm915vaczzm5xizj798025pkmq0wqayncz34xrqfx3l13kr";
       libraryHaskellDepends = [
         async base clock directory foldl hostname managed optional-args
         optparse-applicative process stm system-fileio system-filepath
         temporary text time transformers unix
       ];
       testHaskellDepends = [ base doctest ];
       benchmarkHaskellDepends = [ base criterion text ];
       description = "Shell programming, Haskell-style";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "turtle-options" = callPackage
    ({ mkDerivation, base, HUnit, optional-args, parsec, text, turtle
     }:
     mkDerivation {
       pname = "turtle-options";
       version = "0.1.0.4";
       sha256 = "1khsslhy5s0q10djlrlz5xqgwak8kq26yay14xw3k4xwq05npiy2";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base optional-args parsec text turtle ];
       executableHaskellDepends = [ base turtle ];
       testHaskellDepends = [ base HUnit parsec ];
       homepage = "https://github.com/elaye/turtle-options#readme";
       description = "Collection of command line options and parsers for these options";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "twitter-conduit" = callPackage
    ({ mkDerivation, aeson, attoparsec, authenticate-oauth, base
     , bytestring, case-insensitive, conduit, conduit-extra, containers
     , data-default, doctest, exceptions, hlint, hspec, http-client
     , http-conduit, http-types, lens, lens-aeson, network-uri
     , resourcet, template-haskell, text, time, transformers
     , transformers-base, twitter-types, twitter-types-lens
     }:
     mkDerivation {
       pname = "twitter-conduit";
       version = "0.2.1";
       sha256 = "1zzkzwnc7vqrk7lji307hbvijpv5iqp4wf3yapvl6p3garj1s9sn";
       libraryHaskellDepends = [
         aeson attoparsec authenticate-oauth base bytestring conduit
         conduit-extra containers data-default exceptions http-client
         http-conduit http-types lens lens-aeson resourcet template-haskell
         text time transformers transformers-base twitter-types
         twitter-types-lens
       ];
       testHaskellDepends = [
         aeson attoparsec authenticate-oauth base bytestring
         case-insensitive conduit conduit-extra containers data-default
         doctest hlint hspec http-client http-conduit http-types lens
         lens-aeson network-uri resourcet template-haskell text time
         twitter-types twitter-types-lens
       ];
       homepage = "https://github.com/himura/twitter-conduit";
       description = "Twitter API package with conduit interface and Streaming API support";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "twitter-feed" = callPackage
    ({ mkDerivation, aeson, authenticate-oauth, base, bytestring
     , containers, http-conduit, HUnit, test-framework
     , test-framework-hunit
     }:
     mkDerivation {
       pname = "twitter-feed";
       version = "0.2.0.11";
       sha256 = "12f8ak2f9nxqx4bhgfa45nll2yaf9i5dffxlir7w3x48zgfv964b";
       revision = "1";
       editedCabalFile = "17mpl29hrhqmjrhz1mmkgzbx0z59a8h82w9m000v90n4fs4ms2ix";
       libraryHaskellDepends = [
         aeson authenticate-oauth base bytestring http-conduit
       ];
       testHaskellDepends = [
         base containers HUnit test-framework test-framework-hunit
       ];
       homepage = "https://github.com/stackbuilders/twitter-feed";
       description = "Client for fetching Twitter timeline via Oauth";
       license = stdenv.lib.licenses.mit;
     }) {};
  "twitter-types" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, bytestring, derive
     , directory, filepath, HUnit, old-locale, QuickCheck
     , template-haskell, test-framework, test-framework-hunit
     , test-framework-quickcheck2, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "twitter-types";
       version = "0.7.2.2";
       sha256 = "0n3d3j24kk2rdc61sl9lfanwcv8f0ri7ihiy0zs5rjaxzilyi3kn";
       libraryHaskellDepends = [
         aeson base text time unordered-containers
       ];
       testHaskellDepends = [
         aeson attoparsec base bytestring derive directory filepath HUnit
         old-locale QuickCheck template-haskell test-framework
         test-framework-hunit test-framework-quickcheck2 text time
         unordered-containers
       ];
       homepage = "https://github.com/himura/twitter-types";
       description = "Twitter JSON parser and types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "twitter-types-lens" = callPackage
    ({ mkDerivation, base, lens, template-haskell, text, time
     , twitter-types
     }:
     mkDerivation {
       pname = "twitter-types-lens";
       version = "0.7.2";
       sha256 = "04mjrwd5f960kd7v5xq4wlyzksw06d3qj52ql1lhjki3f3papzjg";
       libraryHaskellDepends = [
         base lens template-haskell text time twitter-types
       ];
       homepage = "https://github.com/himura/twitter-types-lens";
       description = "Twitter JSON types (lens powered)";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "type-aligned" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "type-aligned";
       version = "0.9.6";
       sha256 = "0mfyd9w13kd3ha43220p9qabw828xv19sxywy9imadpwrdqp51qv";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/atzeus/type-aligned";
       description = "Various type-aligned sequence data structures";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "type-eq" = callPackage
    ({ mkDerivation, base, cpphs }:
     mkDerivation {
       pname = "type-eq";
       version = "0.5";
       sha256 = "007srln0xxi27wca8dk72xp3cdwnk8iqmlqgbxi17c9l2x7lrkwz";
       revision = "1";
       editedCabalFile = "1g8m6f73pbz8mqvqbrvxhp2klj7lf624jgqdn1gchd56z4pcnryw";
       libraryHaskellDepends = [ base ];
       libraryToolDepends = [ cpphs ];
       homepage = "http://github.com/glaebhoerl/type-eq";
       description = "Type equality evidence you can carry around";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "type-fun" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "type-fun";
       version = "0.1.1";
       sha256 = "18axaln9ahrn6023pk4ig79d2qimmflikf608vgka4hhi91cfpnz";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base ];
       homepage = "https://github.com/s9gf4ult/type-fun";
       description = "Collection of widely reimplemented type families";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "type-level-numbers" = callPackage
    ({ mkDerivation, base, template-haskell }:
     mkDerivation {
       pname = "type-level-numbers";
       version = "0.1.1.1";
       sha256 = "12iiyaqi60fpds7fv1qvphy84rwyj71maq54mfwpcr0bdrgyymjv";
       libraryHaskellDepends = [ base template-haskell ];
       testHaskellDepends = [ base template-haskell ];
       description = "Type level numbers implemented using type families";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "type-list" = callPackage
    ({ mkDerivation, base, singletons }:
     mkDerivation {
       pname = "type-list";
       version = "0.5.0.0";
       sha256 = "03395ivxda6mihjzn89rzvf0nkk0g16n207wvz4f61ky8r5mzfpz";
       libraryHaskellDepends = [ base singletons ];
       description = "Operations on type-level lists and tuples";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "type-spec" = callPackage
    ({ mkDerivation, base, pretty, show-type }:
     mkDerivation {
       pname = "type-spec";
       version = "0.2.0.0";
       sha256 = "1ykjs66dgp9sif6za8gfsbx49lfm9v3y7ri0kvd37mfraf6gj0w2";
       libraryHaskellDepends = [ base pretty show-type ];
       testHaskellDepends = [ base ];
       homepage = "https://github.com/sheyll/type-spec#readme";
       description = "Type Level Specification by Example";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "typelits-witnesses" = callPackage
    ({ mkDerivation, base, base-compat, constraints, reflection
     , transformers
     }:
     mkDerivation {
       pname = "typelits-witnesses";
       version = "0.2.3.0";
       sha256 = "0311zz3anvngjgrgry2zij5jkb8mjxfcb8rvmrik06myq7wr4vm5";
       libraryHaskellDepends = [
         base base-compat constraints reflection transformers
       ];
       homepage = "https://github.com/mstksg/typelits-witnesses";
       description = "Existential witnesses, singletons, and classes for operations on GHC TypeLits";
       license = stdenv.lib.licenses.mit;
     }) {};
  "typography-geometry" = callPackage
    ({ mkDerivation, base, containers, parallel, polynomials-bernstein
     , vector
     }:
     mkDerivation {
       pname = "typography-geometry";
       version = "1.0.0.1";
       sha256 = "1mrack0n940idy5rv7mm0gfif8xri6z59npxwkq1kgi606vazbpd";
       libraryHaskellDepends = [
         base containers parallel polynomials-bernstein vector
       ];
       description = "Drawings for printed text documents";
       license = "GPL";
     }) {};
  "tzdata" = callPackage
    ({ mkDerivation, base, bytestring, containers, deepseq, HUnit
     , test-framework, test-framework-hunit, test-framework-th, unix
     , vector
     }:
     mkDerivation {
       pname = "tzdata";
       version = "0.1.20160614.0";
       sha256 = "0zd2dy5ahdx3isz4l9cslgipfvfjzl8wixw26235vw36icwi76zv";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base bytestring containers deepseq vector
       ];
       testHaskellDepends = [
         base bytestring HUnit test-framework test-framework-hunit
         test-framework-th unix
       ];
       homepage = "https://github.com/nilcons/haskell-tzdata";
       description = "Time zone database (as files and as a module)";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "ua-parser" = callPackage
    ({ mkDerivation, aeson, base, bytestring, criterion, data-default
     , deepseq, file-embed, filepath, HUnit, pcre-light, tasty
     , tasty-hunit, tasty-quickcheck, text, yaml
     }:
     mkDerivation {
       pname = "ua-parser";
       version = "0.7.3";
       sha256 = "043srsyff22vfhs2nwqmzp6w7vlqqlg3sl7acnbl4vical0k7cmx";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson base bytestring data-default file-embed pcre-light text yaml
       ];
       testHaskellDepends = [
         aeson base bytestring data-default file-embed filepath HUnit
         pcre-light tasty tasty-hunit tasty-quickcheck text yaml
       ];
       benchmarkHaskellDepends = [
         aeson base bytestring criterion data-default deepseq file-embed
         filepath pcre-light text yaml
       ];
       description = "A library for parsing User-Agent strings, official Haskell port of ua-parser";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "uglymemo" = callPackage
    ({ mkDerivation, base, containers }:
     mkDerivation {
       pname = "uglymemo";
       version = "0.1.0.1";
       sha256 = "0ixqg5d0ly1r18jbgaa89i6kjzgi6c5hanw1b1y8c5fbq14yz2gy";
       libraryHaskellDepends = [ base containers ];
       description = "A simple (but internally ugly) memoization function";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "unbound" = callPackage
    ({ mkDerivation, base, binary, containers, mtl, parsec, pretty
     , QuickCheck, RepLib, template-haskell, transformers
     }:
     mkDerivation {
       pname = "unbound";
       version = "0.5.1";
       sha256 = "0cjfd6fdxpi94dac5aslgfggm81fdspbywfyl5m20ah5drgpsr12";
       libraryHaskellDepends = [
         base binary containers mtl RepLib transformers
       ];
       testHaskellDepends = [
         base binary containers mtl parsec pretty QuickCheck RepLib
         template-haskell transformers
       ];
       homepage = "https://github.com/sweirich/replib";
       description = "Generic support for programming with names and binders";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "unbound-generics" = callPackage
    ({ mkDerivation, base, containers, contravariant, criterion
     , deepseq, deepseq-generics, mtl, profunctors, QuickCheck, tasty
     , tasty-hunit, tasty-quickcheck, template-haskell, transformers
     , transformers-compat
     }:
     mkDerivation {
       pname = "unbound-generics";
       version = "0.3.1";
       sha256 = "0h34gaxzk86vwrcwnxq18xwlv4q4kpig3jwbcgmcpj6ziqn6g18z";
       libraryHaskellDepends = [
         base containers contravariant deepseq mtl profunctors
         template-haskell transformers transformers-compat
       ];
       testHaskellDepends = [
         base mtl QuickCheck tasty tasty-hunit tasty-quickcheck
       ];
       benchmarkHaskellDepends = [
         base criterion deepseq deepseq-generics
       ];
       homepage = "http://github.com/lambdageek/unbound-generics";
       description = "Support for programming with names and binders using GHC Generics";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "unbounded-delays" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "unbounded-delays";
       version = "0.1.0.9";
       sha256 = "1f4h87503m3smhip432q027wj3zih18pmz2rnafh60589ifcl420";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/basvandijk/unbounded-delays";
       description = "Unbounded thread delays and timeouts";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "uncertain" = callPackage
    ({ mkDerivation, ad, base, base-compat, containers, free
     , mwc-random, primitive, transformers
     }:
     mkDerivation {
       pname = "uncertain";
       version = "0.3.1.0";
       sha256 = "1wkgk6504qyirr2bq3m4pqgwdvrpnrig1bnzcls0r7krsig8arvg";
       libraryHaskellDepends = [
         ad base base-compat containers free mwc-random primitive
         transformers
       ];
       homepage = "https://github.com/mstksg/uncertain";
       description = "Manipulating numbers with inherent experimental/measurement uncertainty";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "unexceptionalio" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "unexceptionalio";
       version = "0.3.0";
       sha256 = "1f7h7zwky4scdcyjspg4ksfh7x6yra0wjybxq70p7vcwpgk2nzlj";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/singpolyma/unexceptionalio";
       description = "IO without any non-error, synchronous exceptions";
       license = "unknown";
     }) {};
  "unfoldable" = callPackage
    ({ mkDerivation, base, ghc-prim, QuickCheck, random, transformers
     }:
     mkDerivation {
       pname = "unfoldable";
       version = "0.8.4";
       sha256 = "10qnrhchm7c5203b4pg29r6rwm80vr4jm56i41cf8jjxc9iyi1mg";
       libraryHaskellDepends = [
         base ghc-prim QuickCheck random transformers
       ];
       homepage = "https://github.com/sjoerdvisscher/unfoldable";
       description = "Class of data structures that can be unfolded";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "unfoldable-restricted" = callPackage
    ({ mkDerivation, base, constraints, containers, hashable
     , transformers, unfoldable, unit-constraint, unordered-containers
     }:
     mkDerivation {
       pname = "unfoldable-restricted";
       version = "0.0.2";
       sha256 = "0argcapc1k9263n4yh1c0gk8l0gy1502mq6jivwx603bqjzlz5f6";
       libraryHaskellDepends = [
         base constraints containers hashable transformers unfoldable
         unit-constraint unordered-containers
       ];
       description = "An alternative to the Unfoldable typeclass";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "unicode-show" = callPackage
    ({ mkDerivation, base, HUnit, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "unicode-show";
       version = "0.1.0.2";
       sha256 = "0hrrymjylzysms0yq77wrdcrvmwcc9ca0z7qmsby6pilkf3r9qvy";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [
         base HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       homepage = "http://github.com/nushio3/unicode-show#readme";
       description = "print and show in unicode";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "unicode-transforms" = callPackage
    ({ mkDerivation, base, bytestring, criterion, deepseq, filepath
     , path, path-io, split, text
     }:
     mkDerivation {
       pname = "unicode-transforms";
       version = "0.1.0.1";
       sha256 = "02ybfln5pchd05p897j055lbpqfh9sfl1rs233djbkz1j7n0grjz";
       libraryHaskellDepends = [ base bytestring text ];
       testHaskellDepends = [ base split text ];
       benchmarkHaskellDepends = [
         base criterion deepseq filepath path path-io text
       ];
       homepage = "http://github.com/harendra-kumar/unicode-transforms";
       description = "Unicode transforms (normalization NFC/NFD/NFKC/NFKD)";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "unification-fd" = callPackage
    ({ mkDerivation, base, containers, logict, mtl }:
     mkDerivation {
       pname = "unification-fd";
       version = "0.10.0.1";
       sha256 = "15hrnmgr0pqq43fwgxc168r08xjgfhr2nchmz5blq46vwrh6gx2v";
       libraryHaskellDepends = [ base containers logict mtl ];
       homepage = "http://code.haskell.org/~wren/";
       description = "Simple generic unification algorithms";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "union" = callPackage
    ({ mkDerivation, base, criterion, deepseq, lens, profunctors
     , tagged, vinyl
     }:
     mkDerivation {
       pname = "union";
       version = "0.1.1.1";
       sha256 = "1x24raarjj62z3afmf443kkcdslskz554sky8rcfkkb1j11mg7l1";
       libraryHaskellDepends = [ base deepseq profunctors tagged vinyl ];
       benchmarkHaskellDepends = [ base criterion deepseq lens ];
       description = "Extensible type-safe unions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "union-find" = callPackage
    ({ mkDerivation, base, containers, transformers }:
     mkDerivation {
       pname = "union-find";
       version = "0.2";
       sha256 = "1v7hj42j9w6jlzi56jg8rh4p58gfs1c5dx30wd1qqvn0p0mnihp6";
       revision = "1";
       editedCabalFile = "13cwjh03n82sgshbk4fdlvhc0pb3v979sdcdrpvnpjdqmvcprs92";
       libraryHaskellDepends = [ base containers transformers ];
       homepage = "http://github.com/nominolo/union-find";
       description = "Efficient union and equivalence testing of sets";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "uniplate" = callPackage
    ({ mkDerivation, base, containers, hashable, syb
     , unordered-containers
     }:
     mkDerivation {
       pname = "uniplate";
       version = "1.6.12";
       sha256 = "1dx8f9aw27fz8kw0ad1nm6355w5rdl7bjvb427v2bsgnng30pipw";
       libraryHaskellDepends = [
         base containers hashable syb unordered-containers
       ];
       homepage = "http://community.haskell.org/~ndm/uniplate/";
       description = "Help writing simple, concise and fast generic operations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "unit-constraint" = callPackage
    ({ mkDerivation, base, constraints }:
     mkDerivation {
       pname = "unit-constraint";
       version = "0.0.0";
       sha256 = "0nayhjyprph6bg2hhrvd91nmrzz1bixlfib4cxsxpj8n014fhva4";
       libraryHaskellDepends = [ base constraints ];
       description = "Extremely simple typeclass";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "units" = callPackage
    ({ mkDerivation, base, containers, deepseq, HUnit-approx, lens
     , linear, mtl, multimap, singletons, syb, tasty, tasty-hunit
     , template-haskell, th-desugar, units-parser, vector-space
     }:
     mkDerivation {
       pname = "units";
       version = "2.4";
       sha256 = "0hd6d8nxyr5x3mlywjv3hyqx1r4dq5bpn18bnq5n4aw3b8lyyq2h";
       libraryHaskellDepends = [
         base containers deepseq lens linear mtl multimap singletons syb
         template-haskell th-desugar units-parser vector-space
       ];
       testHaskellDepends = [
         base containers deepseq HUnit-approx lens linear mtl multimap
         singletons syb tasty tasty-hunit template-haskell th-desugar
         units-parser vector-space
       ];
       homepage = "https://github.com/goldfirere/units";
       description = "A domain-specific type system for dimensional analysis";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "units-defs" = callPackage
    ({ mkDerivation, base, template-haskell, units }:
     mkDerivation {
       pname = "units-defs";
       version = "2.0.1.1";
       sha256 = "0p99gchk3m4ibmhr6jws57sv083q142rhxjavq9laz97gjm2r9w2";
       libraryHaskellDepends = [ base template-haskell units ];
       homepage = "http://github.com/goldfirere/units-defs";
       description = "Definitions for use with the units package";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "units-parser" = callPackage
    ({ mkDerivation, base, containers, mtl, multimap, parsec, syb
     , tasty, tasty-hunit, template-haskell
     }:
     mkDerivation {
       pname = "units-parser";
       version = "0.1.0.0";
       sha256 = "0ha1saapphk15xk10a36k5qmn01nqpz10f8gi35ra9zqlhv8amfq";
       libraryHaskellDepends = [ base containers mtl multimap parsec ];
       testHaskellDepends = [
         base containers mtl multimap parsec syb tasty tasty-hunit
         template-haskell
       ];
       description = "A parser for units of measure";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "universe" = callPackage
    ({ mkDerivation, universe-instances-base
     , universe-instances-extended, universe-instances-trans
     , universe-reverse-instances
     }:
     mkDerivation {
       pname = "universe";
       version = "1.0";
       sha256 = "19zr9zcqc5sfp5qfn8slkk2732j1814m3j1jkbim739limwf900z";
       libraryHaskellDepends = [
         universe-instances-base universe-instances-extended
         universe-instances-trans universe-reverse-instances
       ];
       homepage = "https://github.com/dmwit/universe";
       description = "Classes for types where we know all the values";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "universe-base" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "universe-base";
       version = "1.0.2.1";
       sha256 = "0ldvk0bj16hl1v824vvsich3rzx84xm3sbppd5ahpp5cmx887i07";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/dmwit/universe";
       description = "A class for finite and recursively enumerable types and some helper functions for enumerating them";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "universe-instances-base" = callPackage
    ({ mkDerivation, base, containers, universe-base }:
     mkDerivation {
       pname = "universe-instances-base";
       version = "1.0";
       sha256 = "04njgl32lk5a0masjdjkm4l2wsyrr29g0fsp599864mp7gp504d2";
       libraryHaskellDepends = [ base containers universe-base ];
       homepage = "https://github.com/dmwit/universe";
       description = "Universe instances for types from the base package";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "universe-instances-extended" = callPackage
    ({ mkDerivation, adjunctions, base, comonad
     , universe-instances-base, void
     }:
     mkDerivation {
       pname = "universe-instances-extended";
       version = "1.0.0.1";
       sha256 = "15y9f0hbxqsksclxrssj4h08y0yb3nm9clqasjw6nsmi04kjfnv6";
       revision = "1";
       editedCabalFile = "1nsi34kjpyski2vip436m19m41as7zf1h8npd50sh8xa6cjhl98r";
       libraryHaskellDepends = [
         adjunctions base comonad universe-instances-base void
       ];
       homepage = "https://github.com/dmwit/universe";
       description = "Universe instances for types from select extra packages";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "universe-instances-trans" = callPackage
    ({ mkDerivation, base, mtl, transformers, universe-base
     , universe-instances-base
     }:
     mkDerivation {
       pname = "universe-instances-trans";
       version = "1.0.0.1";
       sha256 = "03iix0bdhfi4qlgwr8sl3gsqck6lsbkqgx245w2z5yaaxgqpq10d";
       revision = "1";
       editedCabalFile = "0dcwgbgmbkjwzbxlncpl1b5hgjrmkl73djknjkhbnh02pysbwv69";
       libraryHaskellDepends = [
         base mtl transformers universe-base universe-instances-base
       ];
       homepage = "https://github.com/dmwit/universe";
       description = "Universe instances for types from the transformers and mtl packages";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "universe-reverse-instances" = callPackage
    ({ mkDerivation, base, containers, universe-instances-base }:
     mkDerivation {
       pname = "universe-reverse-instances";
       version = "1.0";
       sha256 = "0jcd7qyvzq8xxv9d3hfi0f1h48xdsy9r9xnxgxc7ggga4szirm79";
       libraryHaskellDepends = [
         base containers universe-instances-base
       ];
       homepage = "https://github.com/dmwit/universe";
       description = "instances of standard classes that are made possible by enumerations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "unix-bytestring" = callPackage
    ({ mkDerivation, base, bytestring }:
     mkDerivation {
       pname = "unix-bytestring";
       version = "0.3.7.3";
       sha256 = "1340zxy9w8nmmhhwgg9rznvz8iyfhinpycdpkryqp60ilhyjgv53";
       libraryHaskellDepends = [ base bytestring ];
       homepage = "http://code.haskell.org/~wren/";
       description = "Unix/Posix-specific functions for ByteStrings";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "unix-compat" = callPackage
    ({ mkDerivation, base, unix }:
     mkDerivation {
       pname = "unix-compat";
       version = "0.4.3.1";
       sha256 = "09vykw89x981fywy0w1pci2v8zy3ajyjwh9z2n610vjacmd1v03j";
       revision = "1";
       editedCabalFile = "02li6r77ingmhd2887qkrj4rrkl7w86bz5kjqix875ib6aji86bc";
       libraryHaskellDepends = [ base unix ];
       homepage = "http://github.com/jystic/unix-compat";
       description = "Portable POSIX-compatibility layer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "unix-time" = callPackage
    ({ mkDerivation, base, binary, bytestring, doctest, hspec
     , old-locale, old-time, QuickCheck, time
     }:
     mkDerivation {
       pname = "unix-time";
       version = "0.3.7";
       sha256 = "1qdlc9raih8s0m3x8x3n7q3ngh4faw2alv9l78sp6gnx648k0c8i";
       libraryHaskellDepends = [ base binary bytestring old-time ];
       testHaskellDepends = [
         base bytestring doctest hspec old-locale old-time QuickCheck time
       ];
       description = "Unix time parser/formatter and utilities";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "unordered-containers" = callPackage
    ({ mkDerivation, base, bytestring, ChasingBottoms, containers
     , criterion, deepseq, deepseq-generics, hashable, hashmap, HUnit
     , mtl, QuickCheck, random, test-framework, test-framework-hunit
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "unordered-containers";
       version = "0.2.7.2";
       sha256 = "0vp5nfnvmnjbl9c8h6kcgx0rxmnzy0i4bikqcc2gc0dbzi246p3z";
       libraryHaskellDepends = [ base deepseq hashable ];
       testHaskellDepends = [
         base ChasingBottoms containers hashable HUnit QuickCheck
         test-framework test-framework-hunit test-framework-quickcheck2
       ];
       benchmarkHaskellDepends = [
         base bytestring containers criterion deepseq deepseq-generics
         hashable hashmap mtl random
       ];
       homepage = "https://github.com/tibbe/unordered-containers";
       description = "Efficient hashing-based container types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "uri-bytestring" = callPackage
    ({ mkDerivation, attoparsec, base, blaze-builder, bytestring
     , containers, criterion, deepseq, deepseq-generics, generics-sop
     , HUnit, lens-simple, network-uri, QuickCheck, quickcheck-instances
     , semigroups, tasty, tasty-hunit, tasty-quickcheck
     }:
     mkDerivation {
       pname = "uri-bytestring";
       version = "0.2.2.1";
       sha256 = "0zn6f57gbclmv7gfpg9z2l4nvflj5ggx0mqdihs58lawbpqfi1ci";
       libraryHaskellDepends = [
         attoparsec base blaze-builder bytestring containers
       ];
       testHaskellDepends = [
         attoparsec base blaze-builder bytestring containers generics-sop
         HUnit lens-simple QuickCheck quickcheck-instances semigroups tasty
         tasty-hunit tasty-quickcheck
       ];
       benchmarkHaskellDepends = [
         base blaze-builder bytestring criterion deepseq deepseq-generics
         network-uri
       ];
       homepage = "https://github.com/Soostone/uri-bytestring";
       description = "Haskell URI parsing as ByteStrings";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "uri-encode" = callPackage
    ({ mkDerivation, base, bytestring, network-uri, text, utf8-string
     }:
     mkDerivation {
       pname = "uri-encode";
       version = "1.5.0.5";
       sha256 = "11miwb5vvnn17m92ykz1pzg9x6s8fbpz3mmsyqs2s4b3mn55haz8";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring network-uri text utf8-string
       ];
       description = "Unicode aware uri-encoding";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "url" = callPackage
    ({ mkDerivation, base, utf8-string }:
     mkDerivation {
       pname = "url";
       version = "2.1.3";
       sha256 = "0qag18wbrq9jjk1444mjigz1xl7xl03fz66b1lnya9qaihzpxwjs";
       libraryHaskellDepends = [ base utf8-string ];
       homepage = "http://www.haskell.org/haskellwiki/Url";
       description = "A library for working with URLs";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "urlpath" = callPackage
    ({ mkDerivation, base, exceptions, mmorph, monad-control
     , monad-logger, mtl, path-extra, resourcet, transformers
     , transformers-base
     }:
     mkDerivation {
       pname = "urlpath";
       version = "5.0.0.1";
       sha256 = "1qvwb2yjzz3nkm5vb6vgnhav8fqw13n7h4pr5nw9nq1n9ijq1vh3";
       libraryHaskellDepends = [
         base exceptions mmorph monad-control monad-logger mtl path-extra
         resourcet transformers transformers-base
       ];
       description = "Painfully simple URL deployment";
       license = stdenv.lib.licenses.mit;
     }) {};
  "userid" = callPackage
    ({ mkDerivation, aeson, base, boomerang, safecopy, web-routes
     , web-routes-th
     }:
     mkDerivation {
       pname = "userid";
       version = "0.1.2.8";
       sha256 = "0911217jymfmdh5j0f66bqgaa5nhs7yf907dgnyyzkysh2473cmh";
       libraryHaskellDepends = [
         aeson base boomerang safecopy web-routes web-routes-th
       ];
       homepage = "http://www.github.com/Happstack/userid";
       description = "The UserId type and useful instances for web development";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "users" = callPackage
    ({ mkDerivation, aeson, base, bcrypt, path-pieces, text, time }:
     mkDerivation {
       pname = "users";
       version = "0.5.0.0";
       sha256 = "1m2k3vq938whv9577k3jrgx99hwr272s0fc22p2i6k0dgf9sqqb7";
       libraryHaskellDepends = [
         aeson base bcrypt path-pieces text time
       ];
       homepage = "https://github.com/agrafix/users";
       description = "A library simplifying user management for web applications";
       license = stdenv.lib.licenses.mit;
     }) {};
  "users-postgresql-simple" = callPackage
    ({ mkDerivation, base, bytestring, hspec, mtl, postgresql-simple
     , text, time, users, users-test, uuid
     }:
     mkDerivation {
       pname = "users-postgresql-simple";
       version = "0.5.0.2";
       sha256 = "0061dvlj706rqrfq4wyqx0ylghac13j0x9bicb5smpkckhn5s6q5";
       libraryHaskellDepends = [
         base bytestring mtl postgresql-simple text time users uuid
       ];
       testHaskellDepends = [ base hspec postgresql-simple users-test ];
       doCheck = false;
       homepage = "https://github.com/agrafix/users";
       description = "A PostgreSQL backend for the users package";
       license = stdenv.lib.licenses.mit;
     }) {};
  "users-test" = callPackage
    ({ mkDerivation, base, hspec, text, users }:
     mkDerivation {
       pname = "users-test";
       version = "0.5.0.1";
       sha256 = "0gmcbimbp8sj282c915m9bka4fj238xsf8szqmnv20n01kx4k1gn";
       libraryHaskellDepends = [ base hspec text users ];
       homepage = "https://github.com/agrafix/users";
       description = "Library to test backends for the users library";
       license = stdenv.lib.licenses.mit;
     }) {};
  "utf8-light" = callPackage
    ({ mkDerivation, base, bytestring, ghc-prim }:
     mkDerivation {
       pname = "utf8-light";
       version = "0.4.2";
       sha256 = "0rwyc5z331yfnm4hpx0sph6i1zvkd1z10vvglhnp0vc9wy644k0q";
       libraryHaskellDepends = [ base bytestring ghc-prim ];
       description = "Unicode";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "utf8-string" = callPackage
    ({ mkDerivation, base, bytestring }:
     mkDerivation {
       pname = "utf8-string";
       version = "1.0.1.1";
       sha256 = "0h7imvxkahiy8pzr8cpsimifdfvv18lizrb33k6mnq70rcx9w2zv";
       revision = "1";
       editedCabalFile = "15l3xs8nxj4zlbjpf7q7gsqsaaqb7d6qv4rw25v3lzfxcl912ld3";
       libraryHaskellDepends = [ base bytestring ];
       homepage = "http://github.com/glguy/utf8-string/";
       description = "Support for reading and writing UTF8 Strings";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "utility-ht" = callPackage
    ({ mkDerivation, base, QuickCheck }:
     mkDerivation {
       pname = "utility-ht";
       version = "0.0.12";
       sha256 = "1vq5bd51rl9l5lgfmaqxgiggddk38hzgngcj7qgrqnalcd1myi54";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base QuickCheck ];
       description = "Various small helper functions for Lists, Maybes, Tuples, Functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "uu-interleaved" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "uu-interleaved";
       version = "0.2.0.0";
       sha256 = "1rysap86jrq43b99ay52nrmbdpcba7cl0ac85nsb7gll1rbyr59i";
       libraryHaskellDepends = [ base ];
       homepage = "http://www.cs.uu.nl/wiki/bin/view/HUT/ParserCombinators";
       description = "Providing an interleaving combinator for use with applicative/alternative style implementations";
       license = stdenv.lib.licenses.mit;
     }) {};
  "uu-parsinglib" = callPackage
    ({ mkDerivation, base, ListLike, time, uu-interleaved }:
     mkDerivation {
       pname = "uu-parsinglib";
       version = "2.9.1.1";
       sha256 = "0v5vcxfix04hmwc7ajni4xrv0g099pr2j79bqx1n24s1cvimlpyj";
       libraryHaskellDepends = [ base ListLike time uu-interleaved ];
       homepage = "http://www.cs.uu.nl/wiki/bin/view/HUT/ParserCombinators";
       description = "Fast, online, error-correcting, monadic, applicative, merging, permuting, interleaving, idiomatic parser combinators";
       license = stdenv.lib.licenses.mit;
     }) {};
  "uuid" = callPackage
    ({ mkDerivation, base, binary, bytestring, criterion
     , cryptohash-md5, cryptohash-sha1, entropy, HUnit
     , mersenne-random-pure64, network-info, QuickCheck, random, tasty
     , tasty-hunit, tasty-quickcheck, text, time, uuid-types
     }:
     mkDerivation {
       pname = "uuid";
       version = "1.3.13";
       sha256 = "09xhk42yhxvqmka0iqrv3338asncz8cap3j0ic0ps896f2581b6z";
       libraryHaskellDepends = [
         base binary bytestring cryptohash-md5 cryptohash-sha1 entropy
         network-info random text time uuid-types
       ];
       testHaskellDepends = [
         base bytestring HUnit QuickCheck random tasty tasty-hunit
         tasty-quickcheck
       ];
       benchmarkHaskellDepends = [
         base criterion mersenne-random-pure64 random
       ];
       homepage = "https://github.com/hvr/uuid";
       description = "For creating, comparing, parsing and printing Universally Unique Identifiers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "uuid-orphans" = callPackage
    ({ mkDerivation, base, safecopy, text, th-lift, uuid-types
     , web-routes
     }:
     mkDerivation {
       pname = "uuid-orphans";
       version = "1.4.1";
       sha256 = "19hxgi6rn5pg51jd8v64b96a2j0vh016xcbja8vdhkbdpiizyq9j";
       libraryHaskellDepends = [
         base safecopy text th-lift uuid-types web-routes
       ];
       description = "Orphan instances for the UUID datatype";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "uuid-types" = callPackage
    ({ mkDerivation, base, binary, bytestring, containers, criterion
     , deepseq, hashable, HUnit, QuickCheck, random, tasty, tasty-hunit
     , tasty-quickcheck, text
     }:
     mkDerivation {
       pname = "uuid-types";
       version = "1.0.3";
       sha256 = "1zdka5jnm1h6k36w3nr647yf3b5lqb336g3fkprhd6san9x52xlj";
       revision = "1";
       editedCabalFile = "0iwwj07gp28g357hv76k4h8pvlzamvchnw003cv3qk778pcpx201";
       libraryHaskellDepends = [
         base binary bytestring deepseq hashable random text
       ];
       testHaskellDepends = [
         base bytestring HUnit QuickCheck tasty tasty-hunit tasty-quickcheck
       ];
       benchmarkHaskellDepends = [
         base bytestring containers criterion deepseq random
       ];
       homepage = "https://github.com/aslatter/uuid";
       description = "Type definitions for Universally Unique Identifiers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "vado" = callPackage
    ({ mkDerivation, attoparsec, base, directory, filepath, process
     , QuickCheck, text
     }:
     mkDerivation {
       pname = "vado";
       version = "0.0.8";
       sha256 = "0mn2mhjnwkmzpb9d7qc5bb8qp22gdmrhwb7d7gf8mh07p1i5025v";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         attoparsec base directory filepath process text
       ];
       executableHaskellDepends = [
         attoparsec base directory filepath process text
       ];
       testHaskellDepends = [
         attoparsec base directory filepath process QuickCheck text
       ];
       homepage = "https://github.com/hamishmack/vado";
       description = "Runs commands on remote machines using ssh";
       license = stdenv.lib.licenses.mit;
     }) {};
  "validate-input" = callPackage
    ({ mkDerivation, base, bytestring, either, hspec, mtl, pcre-heavy
     , QuickCheck, semigroups, string-conversions, text
     }:
     mkDerivation {
       pname = "validate-input";
       version = "0.4.0.0";
       sha256 = "1yd187xa762b6zwjsyh3qp11sn3cnwh8g5imp0izk7a22x5y5yi0";
       libraryHaskellDepends = [
         base bytestring either mtl pcre-heavy semigroups string-conversions
         text
       ];
       testHaskellDepends = [ base hspec QuickCheck ];
       homepage = "https://github.com/agrafix/validate-input";
       description = "Input validation combinator library";
       license = stdenv.lib.licenses.mit;
     }) {};
  "validation" = callPackage
    ({ mkDerivation, base, bifunctors, directory, doctest, filepath
     , lens, mtl, QuickCheck, semigroupoids, semigroups
     , template-haskell, transformers
     }:
     mkDerivation {
       pname = "validation";
       version = "0.5.4";
       sha256 = "18vliywmqj3kwlrc4dcp2z3skwqb86crf0rmphpmna1mkrfmyy4b";
       libraryHaskellDepends = [
         base bifunctors lens mtl semigroupoids semigroups transformers
       ];
       testHaskellDepends = [
         base directory doctest filepath QuickCheck template-haskell
       ];
       homepage = "https://github.com/NICTA/validation";
       description = "A data-type like Either but with an accumulating Applicative";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "validity" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "validity";
       version = "0.3.1.1";
       sha256 = "033vcbg7igxxrg04f3gbmamnhcqzyyfns0dzcxa2fppk1arkkfn5";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/NorfairKing/validity#readme";
       description = "Validity typeclass";
       license = stdenv.lib.licenses.mit;
     }) {};
  "varying" = callPackage
    ({ mkDerivation, base, criterion, hspec, QuickCheck, time
     , transformers
     }:
     mkDerivation {
       pname = "varying";
       version = "0.5.0.3";
       sha256 = "0f9hqz12zq4hzcnh6i3xxkg292iw3xi90i2gyrm6njkcnx5zgvx1";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base transformers ];
       executableHaskellDepends = [ base time transformers ];
       testHaskellDepends = [ base hspec QuickCheck time transformers ];
       benchmarkHaskellDepends = [ base criterion time transformers ];
       homepage = "https://github.com/schell/varying";
       description = "FRP through value streams and monadic splines";
       license = stdenv.lib.licenses.mit;
     }) {};
  "vault" = callPackage
    ({ mkDerivation, base, containers, hashable, unordered-containers
     }:
     mkDerivation {
       pname = "vault";
       version = "0.3.0.6";
       sha256 = "0j7gcs440q7qlgzi2hn36crgp2c0w69k40g6vj9hxlm31zk3shqb";
       libraryHaskellDepends = [
         base containers hashable unordered-containers
       ];
       homepage = "https://github.com/HeinrichApfelmus/vault";
       description = "a persistent store for values of arbitrary types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "vcswrapper" = callPackage
    ({ mkDerivation, base, containers, directory, filepath, hxt, mtl
     , parsec, process, split, text
     }:
     mkDerivation {
       pname = "vcswrapper";
       version = "0.1.5";
       sha256 = "0yzin613nzvnklkb3j29vzy4rfladb3cy3sy6ic0mi6lxhilan2n";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base containers directory filepath hxt mtl parsec process split
         text
       ];
       executableHaskellDepends = [
         base containers directory filepath hxt mtl parsec process split
         text
       ];
       homepage = "https://github.com/forste/haskellVCSWrapper";
       description = "Wrapper for source code management systems";
       license = "GPL";
     }) {};
  "vector" = callPackage
    ({ mkDerivation, base, deepseq, ghc-prim, primitive }:
     mkDerivation {
       pname = "vector";
       version = "0.11.0.0";
       sha256 = "1r1jlksy7b0kb0fy00g64isk6nyd9wzzdq31gx5v1wn38knj0lqa";
       revision = "2";
       editedCabalFile = "1kjafhgsyjqlvrpfv2vj17hipyv0zw56a2kbl6khzn5li9szvyib";
       libraryHaskellDepends = [ base deepseq ghc-prim primitive ];
       doCheck = false;
       homepage = "https://github.com/haskell/vector";
       description = "Efficient Arrays";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "vector-algorithms" = callPackage
    ({ mkDerivation, base, bytestring, containers, mtl, mwc-random
     , primitive, QuickCheck, vector
     }:
     mkDerivation {
       pname = "vector-algorithms";
       version = "0.7.0.1";
       sha256 = "0w4hf598lpxfg58rnimcqxrbnpqq2jmpjx82qa5md3q6r90hlipd";
       revision = "1";
       editedCabalFile = "1996aj239vasr4hd5c0pi9i0bd08r6clzr76nqvf3hc5kjs7vml2";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base bytestring primitive vector ];
       executableHaskellDepends = [ base mtl mwc-random vector ];
       testHaskellDepends = [
         base bytestring containers QuickCheck vector
       ];
       homepage = "http://code.haskell.org/~dolio/";
       description = "Efficient algorithms for vector arrays";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "vector-binary-instances" = callPackage
    ({ mkDerivation, base, binary, bytestring, criterion, deepseq
     , tasty, tasty-quickcheck, vector
     }:
     mkDerivation {
       pname = "vector-binary-instances";
       version = "0.2.3.4";
       sha256 = "003xwpqaps9b9iliwbk0cgz4pr0k1hyw7h62k18z5fs5yr7z1kpk";
       libraryHaskellDepends = [ base binary vector ];
       testHaskellDepends = [ base binary tasty tasty-quickcheck vector ];
       benchmarkHaskellDepends = [
         base binary bytestring criterion deepseq vector
       ];
       homepage = "https://github.com/bos/vector-binary-instances";
       description = "Instances of Data.Binary and Data.Serialize for vector";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "vector-buffer" = callPackage
    ({ mkDerivation, base, deepseq, vector }:
     mkDerivation {
       pname = "vector-buffer";
       version = "0.4.1";
       sha256 = "16zxc2d25qd15nankhc974ax7q3y72mg5a77v5jsfrw291brnnlv";
       libraryHaskellDepends = [ base deepseq vector ];
       description = "A buffer compatible with Data.Vector.*";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "vector-fftw" = callPackage
    ({ mkDerivation, base, fftw, primitive, storable-complex, vector }:
     mkDerivation {
       pname = "vector-fftw";
       version = "0.1.3.7";
       sha256 = "0xl1gymdl20j4n4z7rn9ngm4yfzkc2q75af5ls15rd5zsqk1ihp3";
       libraryHaskellDepends = [ base primitive storable-complex vector ];
       librarySystemDepends = [ fftw ];
       homepage = "http://hackage.haskell.org/package/vector-fftw";
       description = "A binding to the fftw library for one-dimensional vectors";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) fftw;};
  "vector-instances" = callPackage
    ({ mkDerivation, base, comonad, keys, pointed, semigroupoids
     , semigroups, vector
     }:
     mkDerivation {
       pname = "vector-instances";
       version = "3.3.1";
       sha256 = "0ncchs1zy3wli6ppjnn4yi64prxh323hq59y8clkxmaazrag3iv8";
       libraryHaskellDepends = [
         base comonad keys pointed semigroupoids semigroups vector
       ];
       homepage = "http://github.com/ekmett/vector-instances";
       description = "Orphan Instances for 'Data.Vector'";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "vector-space" = callPackage
    ({ mkDerivation, base, Boolean, MemoTrie, NumInstances }:
     mkDerivation {
       pname = "vector-space";
       version = "0.10.4";
       sha256 = "18pxpvf6rx0qbx5whshxq61pgj1njs5d0vpmjbjxkcbmqsgwq4mp";
       libraryHaskellDepends = [ base Boolean MemoTrie NumInstances ];
       description = "Vector & affine spaces, linear maps, and derivatives";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "vector-th-unbox" = callPackage
    ({ mkDerivation, base, data-default, template-haskell, vector }:
     mkDerivation {
       pname = "vector-th-unbox";
       version = "0.2.1.6";
       sha256 = "0d82x55f5vvr1jvaia382m23rs690lg55pvavv8f4ph0y6kd91xy";
       libraryHaskellDepends = [ base template-haskell vector ];
       testHaskellDepends = [ base data-default vector ];
       description = "Deriver for Data.Vector.Unboxed using Template Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "vectortiles" = callPackage
    ({ mkDerivation, base, bytestring, cereal, containers, criterion
     , deepseq, hex, microlens, microlens-platform, protobuf, tasty
     , tasty-hunit, text, transformers, vector
     }:
     mkDerivation {
       pname = "vectortiles";
       version = "1.2.0.2";
       sha256 = "11m869g5s92j7v9wlgifd07bspqay6j69qp2ly2r3bk3bjsz0h4m";
       libraryHaskellDepends = [
         base bytestring cereal containers deepseq protobuf text
         transformers vector
       ];
       testHaskellDepends = [
         base bytestring cereal hex protobuf tasty tasty-hunit text vector
       ];
       benchmarkHaskellDepends = [
         base bytestring cereal containers criterion microlens
         microlens-platform protobuf text
       ];
       homepage = "https://github.com/fosskers/vectortiles";
       description = "GIS Vector Tiles, as defined by Mapbox";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "versions" = callPackage
    ({ mkDerivation, base, either, megaparsec, microlens, semigroups
     , tasty, tasty-hunit, text
     }:
     mkDerivation {
       pname = "versions";
       version = "3.0.0";
       sha256 = "0f7wvsjavv9hkrm5pgwg99w78apsqbrw4hk559cww83k3bbbg3j6";
       libraryHaskellDepends = [ base megaparsec semigroups text ];
       testHaskellDepends = [
         base either microlens tasty tasty-hunit text
       ];
       description = "Types and parsers for software version numbers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "vhd" = callPackage
    ({ mkDerivation, base, byteable, bytestring, cereal, cipher-aes
     , cryptohash, directory, filepath, mmap, QuickCheck, random
     , storable-endian, test-framework, test-framework-quickcheck2, text
     , time
     }:
     mkDerivation {
       pname = "vhd";
       version = "0.2.2";
       sha256 = "0z7a17j0rd06kvn3v4qr0fhxg0xw6n3579477y2lvx4mcc3qyrvw";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base byteable bytestring cereal cipher-aes cryptohash directory
         filepath mmap random storable-endian text time
       ];
       testHaskellDepends = [
         base byteable bytestring cereal cryptohash filepath mmap QuickCheck
         random test-framework test-framework-quickcheck2 text time
       ];
       homepage = "https://github.com/vincenthz/hs-vhd";
       description = "Provides functions to inspect and manipulate virtual hard disk (VHD) files";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "vinyl" = callPackage
    ({ mkDerivation, base, criterion, doctest, ghc-prim, lens, linear
     , mwc-random, singletons, vector
     }:
     mkDerivation {
       pname = "vinyl";
       version = "0.5.3";
       sha256 = "19h8fssvykx18dzhjfrz87xwarqa2cmy9akd49jcacplvr1nmy00";
       libraryHaskellDepends = [ base ghc-prim ];
       testHaskellDepends = [ base doctest lens singletons ];
       benchmarkHaskellDepends = [
         base criterion lens linear mwc-random vector
       ];
       description = "Extensible Records";
       license = stdenv.lib.licenses.mit;
     }) {};
  "vinyl-utils" = callPackage
    ({ mkDerivation, base, contravariant, transformers, vinyl }:
     mkDerivation {
       pname = "vinyl-utils";
       version = "0.3.0.0";
       sha256 = "0gqlqh0apymn3zydxklqjfp4sr9h170n2r9rai5z2phxv666dmz6";
       libraryHaskellDepends = [ base contravariant transformers vinyl ];
       homepage = "https://github.com/marcinmrotek/vinyl-utils";
       description = "Utilities for vinyl";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "void" = callPackage
    ({ mkDerivation, base, deepseq, ghc-prim, hashable, semigroups }:
     mkDerivation {
       pname = "void";
       version = "0.7.1";
       sha256 = "1x15x2axz84ndw2bf60vjqljhrb0w95lddaljsxrl0hcd29zvw69";
       libraryHaskellDepends = [
         base deepseq ghc-prim hashable semigroups
       ];
       homepage = "http://github.com/ekmett/void";
       description = "A Haskell 98 logically uninhabited data type";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "vty" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring, Cabal, containers
     , data-default, deepseq, directory, filepath, hashable, HUnit
     , microlens, microlens-mtl, microlens-th, mtl, parallel, parsec
     , QuickCheck, quickcheck-assertions, random, smallcheck, stm
     , string-qq, terminfo, test-framework, test-framework-hunit
     , test-framework-smallcheck, text, transformers, unix, utf8-string
     , vector
     }:
     mkDerivation {
       pname = "vty";
       version = "5.11.3";
       sha256 = "0ch272szm1xcwv1aq3a852q3hbilx4wfw9pw3darn8g5x0wzrqqf";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base blaze-builder bytestring containers data-default deepseq
         directory filepath hashable microlens microlens-mtl microlens-th
         mtl parallel parsec stm terminfo text transformers unix utf8-string
         vector
       ];
       executableHaskellDepends = [
         base containers data-default microlens microlens-mtl mtl
       ];
       testHaskellDepends = [
         base blaze-builder bytestring Cabal containers data-default deepseq
         HUnit microlens microlens-mtl mtl QuickCheck quickcheck-assertions
         random smallcheck stm string-qq terminfo test-framework
         test-framework-hunit test-framework-smallcheck text unix
         utf8-string vector
       ];
       homepage = "https://github.com/coreyoconnor/vty";
       description = "A simple terminal UI library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wai" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring
     , bytestring-builder, hspec, http-types, network, text
     , transformers, vault
     }:
     mkDerivation {
       pname = "wai";
       version = "3.2.1.1";
       sha256 = "08afasnirja21vr0bmzcywz4w29x736dmdv7h8nnh1l8bn7sd02x";
       libraryHaskellDepends = [
         base blaze-builder bytestring bytestring-builder http-types network
         text transformers vault
       ];
       testHaskellDepends = [ base blaze-builder bytestring hspec ];
       homepage = "https://github.com/yesodweb/wai";
       description = "Web Application Interface";
       license = stdenv.lib.licenses.mit;
     }) {};
  "wai-app-static" = callPackage
    ({ mkDerivation, base, blaze-builder, blaze-html, blaze-markup
     , bytestring, containers, cryptonite, directory, file-embed
     , filepath, hspec, http-date, http-types, memory, mime-types
     , mockery, network, old-locale, optparse-applicative
     , template-haskell, temporary, text, time, transformers
     , unix-compat, unordered-containers, wai, wai-extra, warp, zlib
     }:
     mkDerivation {
       pname = "wai-app-static";
       version = "3.1.6.1";
       sha256 = "0s36i0ca440l78d35isaam98z9x0dc0llx0ry48r901f3vrsq65k";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base blaze-builder blaze-html blaze-markup bytestring containers
         cryptonite directory file-embed filepath http-date http-types
         memory mime-types old-locale optparse-applicative template-haskell
         text time transformers unix-compat unordered-containers wai
         wai-extra warp zlib
       ];
       executableHaskellDepends = [
         base bytestring containers directory mime-types text
       ];
       testHaskellDepends = [
         base bytestring filepath hspec http-date http-types mime-types
         mockery network old-locale temporary text time transformers
         unix-compat wai wai-extra zlib
       ];
       homepage = "http://www.yesodweb.com/book/web-application-interface";
       description = "WAI application for static serving";
       license = stdenv.lib.licenses.mit;
     }) {};
  "wai-conduit" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring, conduit
     , http-types, transformers, wai
     }:
     mkDerivation {
       pname = "wai-conduit";
       version = "3.0.0.3";
       sha256 = "1zvsiwjq2mvkb9sjgp3ly9m968m7a2jjzr4id6jpi3mmqykj15z4";
       libraryHaskellDepends = [
         base blaze-builder bytestring conduit http-types transformers wai
       ];
       homepage = "https://github.com/yesodweb/wai";
       description = "conduit wrappers for WAI";
       license = stdenv.lib.licenses.mit;
     }) {};
  "wai-cors" = callPackage
    ({ mkDerivation, attoparsec, base, base-unicode-symbols, bytestring
     , case-insensitive, directory, filepath, http-types, mtl, network
     , process, tasty, tasty-hunit, text, transformers, wai, wai-extra
     , wai-websockets, warp, websockets
     }:
     mkDerivation {
       pname = "wai-cors";
       version = "0.2.5";
       sha256 = "0vkn5nws9vcjn809qv2jfhf9ckfcgvfhs1v3xx1b03iy0j59n215";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         attoparsec base base-unicode-symbols bytestring case-insensitive
         http-types mtl transformers wai
       ];
       testHaskellDepends = [
         base base-unicode-symbols directory filepath http-types network
         process tasty tasty-hunit text wai wai-extra wai-websockets warp
         websockets
       ];
       doCheck = false;
       homepage = "https://github.com/larskuhtz/wai-cors";
       description = "CORS for WAI";
       license = stdenv.lib.licenses.mit;
     }) {};
  "wai-eventsource" = callPackage
    ({ mkDerivation, wai }:
     mkDerivation {
       pname = "wai-eventsource";
       version = "3.0.0";
       sha256 = "1h5zlqky7ldqbmiaixizhk1s8ghf5i3ha1xfz8flxgzr7gr0al3q";
       libraryHaskellDepends = [ wai ];
       doHaddock = false;
       homepage = "http://www.yesodweb.com/book/web-application-interface";
       description = "WAI support for server-sent events (deprecated)";
       license = stdenv.lib.licenses.mit;
     }) {};
  "wai-extra" = callPackage
    ({ mkDerivation, aeson, ansi-terminal, base, base64-bytestring
     , blaze-builder, bytestring, case-insensitive, containers, cookie
     , data-default-class, deepseq, directory, fast-logger, hspec
     , http-types, HUnit, iproute, lifted-base, network, old-locale
     , resourcet, streaming-commons, stringsearch, text, time
     , transformers, unix, unix-compat, vault, void, wai, wai-logger
     , word8, zlib
     }:
     mkDerivation {
       pname = "wai-extra";
       version = "3.0.19.1";
       sha256 = "1xm744dmdajmvswr9wgzpkhb9jil2mkz4vzi96sqp1px692cmrzp";
       libraryHaskellDepends = [
         aeson ansi-terminal base base64-bytestring blaze-builder bytestring
         case-insensitive containers cookie data-default-class deepseq
         directory fast-logger http-types iproute lifted-base network
         old-locale resourcet streaming-commons stringsearch text time
         transformers unix unix-compat vault void wai wai-logger word8 zlib
       ];
       testHaskellDepends = [
         base blaze-builder bytestring case-insensitive cookie fast-logger
         hspec http-types HUnit resourcet text time transformers wai zlib
       ];
       homepage = "http://github.com/yesodweb/wai";
       description = "Provides some basic WAI handlers and middleware";
       license = stdenv.lib.licenses.mit;
     }) {};
  "wai-logger" = callPackage
    ({ mkDerivation, base, blaze-builder, byteorder, bytestring
     , case-insensitive, doctest, fast-logger, http-types, network, unix
     , unix-time, wai
     }:
     mkDerivation {
       pname = "wai-logger";
       version = "2.3.0";
       sha256 = "1w0b0vinsyqr37wciljkz8g5dcmfi2r210lq194a0wkycly9kkch";
       libraryHaskellDepends = [
         base blaze-builder byteorder bytestring case-insensitive
         fast-logger http-types network unix unix-time wai
       ];
       testHaskellDepends = [ base doctest ];
       doCheck = false;
       description = "A logging system for WAI";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wai-middleware-caching" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring, http-types, wai
     }:
     mkDerivation {
       pname = "wai-middleware-caching";
       version = "0.1.0.2";
       sha256 = "13fp08ba46wn7gianfbirag8yj14s2x41fkhdb5mx7arjafgpd8m";
       libraryHaskellDepends = [
         base blaze-builder bytestring http-types wai
       ];
       testHaskellDepends = [ base ];
       homepage = "http://github.com/yogsototh/wai-middleware-caching/tree/master/wai-middleware-caching#readme";
       description = "WAI Middleware to cache things";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wai-middleware-caching-lru" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring, http-types
     , lrucache, text, wai, wai-middleware-caching
     }:
     mkDerivation {
       pname = "wai-middleware-caching-lru";
       version = "0.1.0.0";
       sha256 = "1lr8vaail00g72dgdfcgjzdd1kqwi4n0jzl1ia7bjxxdym1chz9p";
       libraryHaskellDepends = [
         base blaze-builder bytestring http-types lrucache text wai
         wai-middleware-caching
       ];
       testHaskellDepends = [ base ];
       homepage = "http://github.com/yogsototh/wai-middleware-caching/tree/master/wai-middleware-caching-lru#readme";
       description = "Initial project template from stack";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wai-middleware-caching-redis" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring, hedis, http-types
     , text, wai, wai-middleware-caching
     }:
     mkDerivation {
       pname = "wai-middleware-caching-redis";
       version = "0.2.0.0";
       sha256 = "0k3wpw9prhcac8iavzr0xdcwl8khkxks4kji03zz1n10vf1kgxbg";
       libraryHaskellDepends = [
         base blaze-builder bytestring hedis http-types text wai
         wai-middleware-caching
       ];
       testHaskellDepends = [ base ];
       homepage = "http://github.com/yogsototh/wai-middleware-caching/tree/master/wai-middleware-caching-redis#readme";
       description = "Cache Wai Middleware using Redis backend";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wai-middleware-consul" = callPackage
    ({ mkDerivation, async, base, base-prelude, bytestring, conduit
     , conduit-extra, consul-haskell, enclosed-exceptions, http-client
     , http-types, monad-control, monad-logger, network, process
     , resourcet, text, transformers, void, wai, wai-app-static
     , wai-conduit, wai-extra, warp
     }:
     mkDerivation {
       pname = "wai-middleware-consul";
       version = "0.1.0.2";
       sha256 = "0qq7kilp9a4qjja337saqccn250s6mnf3n80sgyg935hy1dmm7fq";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         async base base-prelude bytestring conduit conduit-extra
         consul-haskell enclosed-exceptions http-client http-types
         monad-control monad-logger network process resourcet text
         transformers void wai wai-conduit
       ];
       executableHaskellDepends = [
         async base base-prelude monad-logger transformers wai
         wai-app-static wai-extra warp
       ];
       homepage = "https://github.com/fpco/wai-middleware-consul";
       description = "Wai Middleware for Consul";
       license = stdenv.lib.licenses.mit;
     }) {};
  "wai-middleware-content-type" = callPackage
    ({ mkDerivation, aeson, base, blaze-builder, blaze-html, bytestring
     , clay, exceptions, hashable, hspec, hspec-wai, http-media
     , http-types, lucid, mmorph, monad-control, monad-logger, mtl
     , pandoc, pandoc-types, resourcet, shakespeare, tasty, tasty-hspec
     , text, transformers, transformers-base, unordered-containers
     , urlpath, wai, wai-transformers, warp
     }:
     mkDerivation {
       pname = "wai-middleware-content-type";
       version = "0.4.1";
       sha256 = "0gkl55145c9clcz7m56qgil1h6iwv51ivn8w3b9m0xm7bnpdip4r";
       libraryHaskellDepends = [
         aeson base blaze-builder blaze-html bytestring clay exceptions
         hashable http-media http-types lucid mmorph monad-control
         monad-logger mtl pandoc resourcet shakespeare text transformers
         transformers-base unordered-containers urlpath wai wai-transformers
       ];
       testHaskellDepends = [
         aeson base blaze-builder blaze-html bytestring clay exceptions
         hashable hspec hspec-wai http-media http-types lucid mmorph
         monad-control monad-logger mtl pandoc pandoc-types resourcet
         shakespeare tasty tasty-hspec text transformers transformers-base
         unordered-containers urlpath wai wai-transformers warp
       ];
       doCheck = false;
       description = "Route to different middlewares based on the incoming Accept header";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wai-middleware-crowd" = callPackage
    ({ mkDerivation, authenticate, base, base64-bytestring, binary
     , blaze-builder, bytestring, case-insensitive, clientsession
     , containers, cookie, gitrev, http-client, http-client-tls
     , http-reverse-proxy, http-types, optparse-applicative, resourcet
     , template-haskell, text, time, transformers, unix-compat, vault
     , wai, wai-app-static, wai-extra, warp
     }:
     mkDerivation {
       pname = "wai-middleware-crowd";
       version = "0.1.4.2";
       sha256 = "0n5h4s3b2fdn2j0pl32bsdbf6wyyf2ms8qsbcs9r0wp7dhdbcdhi";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         authenticate base base64-bytestring binary blaze-builder bytestring
         case-insensitive clientsession containers cookie http-client
         http-client-tls http-types resourcet text time unix-compat vault
         wai
       ];
       executableHaskellDepends = [
         base bytestring clientsession gitrev http-client http-client-tls
         http-reverse-proxy http-types optparse-applicative template-haskell
         text transformers wai wai-app-static wai-extra warp
       ];
       description = "Middleware and utilities for using Atlassian Crowd authentication";
       license = stdenv.lib.licenses.mit;
     }) {};
  "wai-middleware-metrics" = callPackage
    ({ mkDerivation, base, bytestring, criterion, ekg-core, http-types
     , QuickCheck, scotty, tasty, tasty-hunit, tasty-quickcheck, text
     , time, transformers, wai, wai-extra
     }:
     mkDerivation {
       pname = "wai-middleware-metrics";
       version = "0.2.3";
       sha256 = "0aifx988h96p8bqcy94s5gn62bnyjxqam7y3w0y2439d1jhkq4n9";
       libraryHaskellDepends = [ base ekg-core http-types text time wai ];
       testHaskellDepends = [
         base bytestring ekg-core http-types QuickCheck scotty tasty
         tasty-hunit tasty-quickcheck text time transformers wai wai-extra
       ];
       benchmarkHaskellDepends = [
         base bytestring criterion ekg-core http-types scotty text time wai
         wai-extra
       ];
       homepage = "https://github.com/Helkafen/wai-middleware-metrics";
       description = "A WAI middleware to collect EKG request metrics";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wai-middleware-prometheus" = callPackage
    ({ mkDerivation, base, bytestring, data-default, doctest
     , http-types, prometheus-client, text, time, wai
     }:
     mkDerivation {
       pname = "wai-middleware-prometheus";
       version = "0.1.0.1";
       sha256 = "0drhprxja1pp0mibs2f4asl4mycy91pvyanxa0h364k9v6fwp93d";
       libraryHaskellDepends = [
         base bytestring data-default http-types prometheus-client text time
         wai
       ];
       testHaskellDepends = [ base doctest prometheus-client ];
       homepage = "https://github.com/fimad/prometheus-haskell";
       description = "WAI middlware for exposing http://prometheus.io metrics.";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "wai-middleware-static" = callPackage
    ({ mkDerivation, base, bytestring, containers, cryptonite
     , directory, expiring-cache-map, filepath, hpc-coveralls
     , http-types, memory, mime-types, mtl, old-locale, semigroups, text
     , time, wai
     }:
     mkDerivation {
       pname = "wai-middleware-static";
       version = "0.8.1";
       sha256 = "0xaksnb1lzbw6rj62l4x9jpx40c1l2c33x5cb5vqk08g84zz3dg0";
       revision = "1";
       editedCabalFile = "0lkp7mbjlzsab47lfz4hc59w8wi44pj4bl3xmfl93p2bb6fyp118";
       libraryHaskellDepends = [
         base bytestring containers cryptonite directory expiring-cache-map
         filepath http-types memory mime-types mtl old-locale semigroups
         text time wai
       ];
       testHaskellDepends = [ base hpc-coveralls ];
       homepage = "https://github.com/scotty-web/wai-middleware-static";
       description = "WAI middleware that serves requests to static files";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wai-middleware-throttle" = callPackage
    ({ mkDerivation, base, bytestring, containers, hashable, hspec
     , http-types, HUnit, network, stm, token-bucket, transformers, wai
     , wai-extra
     }:
     mkDerivation {
       pname = "wai-middleware-throttle";
       version = "0.2.1.0";
       sha256 = "0z7qziy3y0lxzaaf72hr598zkgg6w9288fd6ar7ipqn8p1xw0al6";
       libraryHaskellDepends = [
         base containers hashable http-types network stm token-bucket
         transformers wai
       ];
       testHaskellDepends = [
         base bytestring hspec http-types HUnit stm transformers wai
         wai-extra
       ];
       description = "WAI Middleware for Request Throttling";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wai-middleware-verbs" = callPackage
    ({ mkDerivation, base, errors, exceptions, hashable, http-types
     , mmorph, monad-logger, mtl, resourcet, text, transformers
     , transformers-base, unordered-containers, wai
     , wai-middleware-content-type, wai-transformers, warp
     }:
     mkDerivation {
       pname = "wai-middleware-verbs";
       version = "0.3.2";
       sha256 = "0rma394hfpycaqfyr9bpal2v27559hrm7yd83x7dh13jv9zsj7v9";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base errors exceptions hashable http-types mmorph monad-logger mtl
         resourcet transformers transformers-base unordered-containers wai
       ];
       executableHaskellDepends = [
         base errors exceptions hashable http-types mmorph monad-logger mtl
         resourcet text transformers transformers-base unordered-containers
         wai wai-middleware-content-type wai-transformers warp
       ];
       description = "Route different middleware responses based on the incoming HTTP verb";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wai-predicates" = callPackage
    ({ mkDerivation, attoparsec, base, blaze-builder, bytestring
     , bytestring-conversion, case-insensitive, cookie, http-types
     , singletons, tasty, tasty-hunit, tasty-quickcheck, transformers
     , vault, vector, wai
     }:
     mkDerivation {
       pname = "wai-predicates";
       version = "0.9.0";
       sha256 = "0l0v9qfnz63j39g39l3rw9k6hgm80ijic5f1kh2f077cijmd60hq";
       libraryHaskellDepends = [
         attoparsec base bytestring bytestring-conversion case-insensitive
         cookie http-types singletons transformers vault vector wai
       ];
       testHaskellDepends = [
         base blaze-builder bytestring case-insensitive http-types tasty
         tasty-hunit tasty-quickcheck wai
       ];
       homepage = "https://gitlab.com/twittner/wai-predicates/";
       description = "WAI request predicates";
       license = "unknown";
     }) {};
  "wai-request-spec" = callPackage
    ({ mkDerivation, base, bytestring, case-insensitive, containers
     , criterion, http-types, text, wai
     }:
     mkDerivation {
       pname = "wai-request-spec";
       version = "0.10.2.4";
       sha256 = "046nxqqlv4wv1kgc634f691jcq6rbs1ld7324hz059s1xw9fvq8y";
       libraryHaskellDepends = [
         base bytestring case-insensitive containers http-types text wai
       ];
       benchmarkHaskellDepends = [
         base bytestring criterion http-types text wai
       ];
       homepage = "https://gitlab.com/queertypes/wai-request-spec";
       description = "Declarative request parsing";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wai-session" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring, containers
     , cookie, http-types, StateVar, time, transformers, vault, wai
     }:
     mkDerivation {
       pname = "wai-session";
       version = "0.3.2";
       sha256 = "09l3gj8l127iybr8h4xcjxxcgz5b1mcy5iyyaidixnzi7jlrqww3";
       libraryHaskellDepends = [
         base blaze-builder bytestring containers cookie http-types StateVar
         time transformers vault wai
       ];
       homepage = "https://github.com/singpolyma/wai-session";
       description = "Flexible session middleware for WAI";
       license = "unknown";
     }) {};
  "wai-session-postgresql" = callPackage
    ({ mkDerivation, base, bytestring, cereal, cookie, data-default
     , entropy, postgresql-simple, resource-pool, text, time
     , transformers, wai, wai-session
     }:
     mkDerivation {
       pname = "wai-session-postgresql";
       version = "0.2.1.0";
       sha256 = "16myzcxas9nwhd54bc5pi1biym39vrz707rfmmc1mar6ia7a1xil";
       libraryHaskellDepends = [
         base bytestring cereal cookie data-default entropy
         postgresql-simple resource-pool text time transformers wai
         wai-session
       ];
       testHaskellDepends = [
         base bytestring data-default postgresql-simple text wai-session
       ];
       doCheck = false;
       homepage = "https://github.com/hce/postgresql-session#readme";
       description = "PostgreSQL backed Wai session store";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wai-transformers" = callPackage
    ({ mkDerivation, base, exceptions, transformers, wai
     , wai-websockets, websockets
     }:
     mkDerivation {
       pname = "wai-transformers";
       version = "0.0.7";
       sha256 = "0b735xdfl4p30nhfxvhrhsa8kikckn4wni4yl044if4f0ji0260s";
       libraryHaskellDepends = [
         base exceptions transformers wai wai-websockets websockets
       ];
       description = "Simple parameterization of Wai's Application type";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wai-websockets" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring, case-insensitive
     , file-embed, http-types, network, text, transformers, wai
     , wai-app-static, warp, websockets
     }:
     mkDerivation {
       pname = "wai-websockets";
       version = "3.0.1.1";
       sha256 = "0ccasczm9x8sx6bpywd8ga3qji2rqkz1l2fy856qz7jdazmazgka";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base blaze-builder bytestring case-insensitive http-types network
         transformers wai websockets
       ];
       executableHaskellDepends = [
         base blaze-builder bytestring case-insensitive file-embed
         http-types network text transformers wai wai-app-static warp
         websockets
       ];
       homepage = "http://github.com/yesodweb/wai";
       description = "Provide a bridge between WAI and the websockets package";
       license = stdenv.lib.licenses.mit;
     }) {};
  "waitra" = callPackage
    ({ mkDerivation, aeson, base, bytestring, directory, filepath
     , http-types, regex-applicative, tasty, tasty-hunit
     , template-haskell, text, wai, wai-app-static, wai-extra, warp
     }:
     mkDerivation {
       pname = "waitra";
       version = "0.0.4.0";
       sha256 = "04kcn70ydls484gzpblhd0snw4byzxzz8b2h7r673qkpnfgcc42n";
       revision = "2";
       editedCabalFile = "13xxz3dvmdnhzb61zr5y3q1g818mbjq36clrqc1v73imw17rsbvv";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base bytestring directory filepath http-types
         regex-applicative template-haskell text wai
       ];
       executableHaskellDepends = [ aeson base wai wai-app-static warp ];
       testHaskellDepends = [
         aeson base http-types tasty tasty-hunit wai wai-extra
       ];
       homepage = "https://github.com/futurice/waitra";
       description = "A very simple Wai router";
       license = stdenv.lib.licenses.mit;
     }) {};
  "warp" = callPackage
    ({ mkDerivation, array, async, auto-update, base, blaze-builder
     , bytestring, bytestring-builder, case-insensitive, containers
     , criterion, directory, doctest, ghc-prim, hashable, hspec, HTTP
     , http-date, http-types, http2, HUnit, iproute, lifted-base
     , network, process, QuickCheck, silently, simple-sendfile, stm
     , streaming-commons, text, time, transformers, unix, unix-compat
     , vault, wai, word8
     }:
     mkDerivation {
       pname = "warp";
       version = "3.2.9";
       sha256 = "1jpbanywryqq8xkgjqc722pdl6syfjza1da586mygp82nd8rly72";
       libraryHaskellDepends = [
         array async auto-update base blaze-builder bytestring
         bytestring-builder case-insensitive containers ghc-prim hashable
         http-date http-types http2 iproute network simple-sendfile stm
         streaming-commons text unix unix-compat vault wai word8
       ];
       testHaskellDepends = [
         array async auto-update base blaze-builder bytestring
         bytestring-builder case-insensitive containers directory doctest
         ghc-prim hashable hspec HTTP http-date http-types http2 HUnit
         iproute lifted-base network process QuickCheck silently
         simple-sendfile stm streaming-commons text time transformers unix
         unix-compat vault wai word8
       ];
       benchmarkHaskellDepends = [
         auto-update base bytestring containers criterion hashable http-date
         http-types network unix unix-compat
       ];
       doCheck = false;
       homepage = "http://github.com/yesodweb/wai";
       description = "A fast, light-weight web server for WAI applications";
       license = stdenv.lib.licenses.mit;
     }) {};
  "warp-tls" = callPackage
    ({ mkDerivation, base, bytestring, cryptonite, data-default-class
     , network, streaming-commons, tls, wai, warp
     }:
     mkDerivation {
       pname = "warp-tls";
       version = "3.2.2";
       sha256 = "06q9vzvz8f99y17zxv590zvq1przs2g8chwp8xiprlazxlqs1hlz";
       libraryHaskellDepends = [
         base bytestring cryptonite data-default-class network
         streaming-commons tls wai warp
       ];
       homepage = "http://github.com/yesodweb/wai";
       description = "HTTP over TLS support for Warp via the TLS package";
       license = stdenv.lib.licenses.mit;
     }) {};
  "web-plugins" = callPackage
    ({ mkDerivation, base, containers, mtl, stm, text }:
     mkDerivation {
       pname = "web-plugins";
       version = "0.2.9";
       sha256 = "0l3s98l69yg8gvx4bxqa95f4mvsvvij0q1rajvzwfh3bcrzzsfz6";
       libraryHaskellDepends = [ base containers mtl stm text ];
       homepage = "https://github.com/clckwrks/web-plugins";
       description = "dynamic plugin system for web applications";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "web-routes" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring, exceptions
     , ghc-prim, hspec, http-types, HUnit, mtl, parsec, QuickCheck
     , split, text, utf8-string
     }:
     mkDerivation {
       pname = "web-routes";
       version = "0.27.11";
       sha256 = "1n4cvqbbnjhliy9080fff7nfn9x073vnp8vj7mh0ja4ii96lsqj5";
       libraryHaskellDepends = [
         base blaze-builder bytestring exceptions ghc-prim http-types mtl
         parsec split text utf8-string
       ];
       testHaskellDepends = [ base hspec HUnit QuickCheck text ];
       homepage = "http://www.happstack.com/docs/crashcourse/index.html#web-routes";
       description = "portable, type-safe URL routing";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "web-routes-boomerang" = callPackage
    ({ mkDerivation, base, boomerang, mtl, parsec, text, web-routes }:
     mkDerivation {
       pname = "web-routes-boomerang";
       version = "0.28.4.2";
       sha256 = "09vq5gfxibrbh65a4y94crcb99s848rx56grmfny89ccdv6r5a3y";
       libraryHaskellDepends = [
         base boomerang mtl parsec text web-routes
       ];
       description = "Use boomerang for type-safe URL parsers/printers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "web-routes-happstack" = callPackage
    ({ mkDerivation, base, bytestring, happstack-server, text
     , web-routes
     }:
     mkDerivation {
       pname = "web-routes-happstack";
       version = "0.23.10";
       sha256 = "1vgvbbrnvqwh7caxsr4fszks2f7jvr75ly6i86zks6x9rqvz7fx7";
       libraryHaskellDepends = [
         base bytestring happstack-server text web-routes
       ];
       description = "Adds support for using web-routes with Happstack";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "web-routes-hsp" = callPackage
    ({ mkDerivation, base, hsp, text, web-routes }:
     mkDerivation {
       pname = "web-routes-hsp";
       version = "0.24.6.1";
       sha256 = "1arc22l7xk49fp80i1fkvj8xj71lqxrs2g5gnvjzwlkc0azzaz6a";
       libraryHaskellDepends = [ base hsp text web-routes ];
       description = "Adds XMLGenerator instance for RouteT monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "web-routes-th" = callPackage
    ({ mkDerivation, base, hspec, HUnit, parsec, QuickCheck, split
     , template-haskell, text, web-routes
     }:
     mkDerivation {
       pname = "web-routes-th";
       version = "0.22.6";
       sha256 = "1yxr7sjgrlcv4z84s74xgyj01nhi2c1f22f967nsdw9q6abp4x76";
       libraryHaskellDepends = [
         base parsec split template-haskell text web-routes
       ];
       testHaskellDepends = [ base hspec HUnit QuickCheck web-routes ];
       homepage = "https://github.com/happstack/web-routes-th";
       description = "Support for deriving PathInfo using Template Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "web-routes-wai" = callPackage
    ({ mkDerivation, base, bytestring, http-types, text, wai
     , web-routes
     }:
     mkDerivation {
       pname = "web-routes-wai";
       version = "0.24.3";
       sha256 = "070gldklv52gpvas676nw9igr4d3cd1f23prlmd2qjrjn3qvhdq7";
       libraryHaskellDepends = [
         base bytestring http-types text wai web-routes
       ];
       description = "Library for maintaining correctness of URLs within an application";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "webdriver" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, base64-bytestring
     , bytestring, data-default-class, directory, directory-tree
     , exceptions, filepath, http-client, http-types, lifted-base
     , monad-control, network, network-uri, scientific, temporary, text
     , time, transformers, transformers-base, unordered-containers
     , vector, zip-archive
     }:
     mkDerivation {
       pname = "webdriver";
       version = "0.8.4";
       sha256 = "08sg2sjgs0hqp33hmsm3365zm5g28yrjkyci0cd8sjdrwwsjjzrl";
       libraryHaskellDepends = [
         aeson attoparsec base base64-bytestring bytestring
         data-default-class directory directory-tree exceptions filepath
         http-client http-types lifted-base monad-control network
         network-uri scientific temporary text time transformers
         transformers-base unordered-containers vector zip-archive
       ];
       homepage = "https://github.com/kallisti-dev/hs-webdriver";
       description = "a Haskell client for the Selenium WebDriver protocol";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "webdriver-angular" = callPackage
    ({ mkDerivation, aeson, base, hspec, hspec-webdriver
     , language-javascript, template-haskell, text, transformers
     , unordered-containers, wai-app-static, warp, webdriver
     }:
     mkDerivation {
       pname = "webdriver-angular";
       version = "0.1.11";
       sha256 = "1xj9zz91yvhdyfdhx0cg7qi3vydp1b5p4jbvi7n1a24xvl66bfsy";
       libraryHaskellDepends = [
         aeson base language-javascript template-haskell text transformers
         unordered-containers webdriver
       ];
       testHaskellDepends = [
         base hspec hspec-webdriver transformers wai-app-static warp
         webdriver
       ];
       doCheck = false;
       homepage = "https://bitbucket.org/wuzzeb/webdriver-utils";
       description = "Webdriver actions to assist with testing a webpage which uses Angular.Js";
       license = stdenv.lib.licenses.mit;
     }) {};
  "webkitgtk3" = callPackage
    ({ mkDerivation, base, bytestring, Cabal, cairo, glib
     , gtk2hs-buildtools, gtk3, mtl, pango, text, transformers
     , webkitgtk24x-gtk3
     }:
     mkDerivation {
       pname = "webkitgtk3";
       version = "0.14.2.1";
       sha256 = "1xml39120yng7pgdpaz114zc2vcq7kxi5v1gdlfarzdvxxsw8wba";
       enableSeparateDataOutput = true;
       setupHaskellDepends = [ base Cabal gtk2hs-buildtools ];
       libraryHaskellDepends = [
         base bytestring cairo glib gtk3 mtl pango text transformers
       ];
       libraryPkgconfigDepends = [ webkitgtk24x-gtk3 ];
       homepage = "http://projects.haskell.org/gtk2hs/";
       description = "Binding to the Webkit library";
       license = stdenv.lib.licenses.lgpl21;
     }) {inherit (pkgs) webkitgtk24x-gtk3;};
  "webkitgtk3-javascriptcore" = callPackage
    ({ mkDerivation, base, Cabal, gtk2hs-buildtools, webkitgtk24x-gtk3
     }:
     mkDerivation {
       pname = "webkitgtk3-javascriptcore";
       version = "0.14.2.1";
       sha256 = "0kcjrka0c9ifq3zfhmkv05wy3xb7v0cyznfxldp2gjcn1haq084j";
       setupHaskellDepends = [ base Cabal gtk2hs-buildtools ];
       libraryHaskellDepends = [ base ];
       libraryPkgconfigDepends = [ webkitgtk24x-gtk3 ];
       description = "JavaScriptCore FFI from webkitgtk";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) webkitgtk24x-gtk3;};
  "webpage" = callPackage
    ({ mkDerivation, base, blaze-html, data-default, lucid, text }:
     mkDerivation {
       pname = "webpage";
       version = "0.0.4";
       sha256 = "0j66f07sk0p94vf29dfa0bgx010hdnhf4l0s5m3d3x3v6nas7yqp";
       libraryHaskellDepends = [
         base blaze-html data-default lucid text
       ];
       description = "Organized and simple web page scaffold for blaze and lucid";
       license = stdenv.lib.licenses.mit;
     }) {};
  "webrtc-vad" = callPackage
    ({ mkDerivation, base, primitive, vector }:
     mkDerivation {
       pname = "webrtc-vad";
       version = "0.1.0.3";
       sha256 = "0lylc3axcamrmjaarx3aacbjc9d0rkhmdgq1g2pc5j0lsf8ndk49";
       libraryHaskellDepends = [ base primitive vector ];
       description = "Easy voice activity detection";
       license = stdenv.lib.licenses.mit;
     }) {};
  "websockets" = callPackage
    ({ mkDerivation, attoparsec, base, base64-bytestring, binary
     , blaze-builder, bytestring, case-insensitive, containers, entropy
     , HUnit, network, QuickCheck, random, SHA, test-framework
     , test-framework-hunit, test-framework-quickcheck2, text
     }:
     mkDerivation {
       pname = "websockets";
       version = "0.9.8.2";
       sha256 = "18pc2m3fbi74ggr73cn2b7cpmn401hxqbrswawkxl1wzpzgigv09";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         attoparsec base base64-bytestring binary blaze-builder bytestring
         case-insensitive containers entropy network random SHA text
       ];
       executableHaskellDepends = [
         attoparsec base base64-bytestring binary blaze-builder bytestring
         case-insensitive containers entropy network random SHA text
       ];
       testHaskellDepends = [
         attoparsec base base64-bytestring binary blaze-builder bytestring
         case-insensitive containers entropy HUnit network QuickCheck random
         SHA test-framework test-framework-hunit test-framework-quickcheck2
         text
       ];
       homepage = "http://jaspervdj.be/websockets";
       description = "A sensible and clean way to write WebSocket-capable servers in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "weigh" = callPackage
    ({ mkDerivation, base, bytestring-trie, containers, deepseq, mtl
     , process, random, split, template-haskell, unordered-containers
     }:
     mkDerivation {
       pname = "weigh";
       version = "0.0.3";
       sha256 = "0spq18fz9255kyygirzklcx6d49c5bf5jch1xh9pqz1lx3056s1r";
       libraryHaskellDepends = [
         base deepseq mtl process split template-haskell
       ];
       testHaskellDepends = [
         base bytestring-trie containers deepseq random unordered-containers
       ];
       homepage = "https://github.com/fpco/weigh#readme";
       description = "Measure allocations of a Haskell functions/values";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "werewolf" = callPackage
    ({ mkDerivation, aeson, base, containers, directory, extra
     , filepath, interpolate, lens, MonadRandom, mtl
     , optparse-applicative, random-shuffle, template-haskell, text
     , transformers
     }:
     mkDerivation {
       pname = "werewolf";
       version = "1.5.1.1";
       sha256 = "0s2b8dqbmcx6yc9z68n2s7yb2iyvg9azw1pb5da15lkdhalnd0bh";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base containers extra interpolate lens mtl template-haskell
         text transformers
       ];
       executableHaskellDepends = [
         aeson base containers directory extra filepath lens MonadRandom mtl
         optparse-applicative random-shuffle text transformers
       ];
       homepage = "https://github.com/hjwylde/werewolf";
       description = "A game engine for playing werewolf within an arbitrary chat client";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "werewolf-slack" = callPackage
    ({ mkDerivation, aeson, base, bytestring, extra, http-client
     , http-client-tls, http-types, mtl, optparse-applicative, process
     , text, wai, warp, werewolf
     }:
     mkDerivation {
       pname = "werewolf-slack";
       version = "1.0.2.0";
       sha256 = "15d467ab3la8bwfrp9468ssq0b768x2j1w6f72xl1rfzcr31kl4l";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         aeson base bytestring extra http-client http-client-tls http-types
         mtl optparse-applicative process text wai warp werewolf
       ];
       doHaddock = false;
       homepage = "https://github.com/hjwylde/werewolf-slack";
       description = "A chat interface for playing werewolf in Slack";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wikicfp-scraper" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, filepath, hspec
     , scalpel, text, time
     }:
     mkDerivation {
       pname = "wikicfp-scraper";
       version = "0.1.0.7";
       sha256 = "10n5clpjkhh9xvk6kgbsj82v8i31wgqrkh79vdl4yjy5c4isnxhy";
       libraryHaskellDepends = [
         attoparsec base bytestring scalpel text time
       ];
       testHaskellDepends = [ base bytestring filepath hspec time ];
       homepage = "https://github.com/debug-ito/wikicfp-scraper";
       description = "Scrape WikiCFP web site";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "with-location" = callPackage
    ({ mkDerivation, base, hspec }:
     mkDerivation {
       pname = "with-location";
       version = "0.1.0";
       sha256 = "1rzxvsyh8x3ql3zh7gyw9hjx9bl4v73h0y5kzgaxcfcdn86dg49c";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base hspec ];
       homepage = "https://github.com/sol/with-location#readme";
       description = "Use ImplicitParams-based source locations in a backward compatible way";
       license = stdenv.lib.licenses.mit;
     }) {};
  "withdependencies" = callPackage
    ({ mkDerivation, base, conduit, containers, hspec, HUnit, mtl
     , profunctors
     }:
     mkDerivation {
       pname = "withdependencies";
       version = "0.2.4";
       sha256 = "0zr6zqkhflgynfhsc6wqly35psxw97nrna7pmc2141p5zk4dsgm1";
       libraryHaskellDepends = [
         base conduit containers mtl profunctors
       ];
       testHaskellDepends = [ base conduit hspec HUnit mtl ];
       homepage = "https://github.com/bartavelle/withdependencies";
       description = "Run computations that depend on one or more elements in a stream";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "witherable" = callPackage
    ({ mkDerivation, base, base-orphans, containers, hashable
     , transformers, unordered-containers, vector
     }:
     mkDerivation {
       pname = "witherable";
       version = "0.1.3.3";
       sha256 = "0v6g44sai7fl056i6hghkk1s5pfqwc7y1dwanhbjsi0vww3xdpvg";
       libraryHaskellDepends = [
         base base-orphans containers hashable transformers
         unordered-containers vector
       ];
       homepage = "https://github.com/fumieval/witherable";
       description = "Generalization of filter and catMaybes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wizards" = callPackage
    ({ mkDerivation, base, containers, control-monad-free, haskeline
     , mtl, transformers
     }:
     mkDerivation {
       pname = "wizards";
       version = "1.0.2";
       sha256 = "02yk9d01d39c3hpvlh2c6v35fzyf3nm92f6vff0qns30dmr2r8ab";
       revision = "1";
       editedCabalFile = "15vwynd5v6xm92dxkxf125grd8sv599n5bnj92qqmhlc89psxhxk";
       libraryHaskellDepends = [
         base containers control-monad-free haskeline mtl transformers
       ];
       description = "High level, generic library for interrogative user interfaces";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wl-pprint" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "wl-pprint";
       version = "1.2";
       sha256 = "166zvk4zwn2zaa9kx66m1av38m34qp6h4i65bri2sfnxgvx0700r";
       libraryHaskellDepends = [ base ];
       description = "The Wadler/Leijen Pretty Printer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wl-pprint-extras" = callPackage
    ({ mkDerivation, base, containers, HUnit, nats, semigroupoids
     , semigroups, test-framework, test-framework-hunit, text
     , utf8-string
     }:
     mkDerivation {
       pname = "wl-pprint-extras";
       version = "3.5.0.5";
       sha256 = "13wdx7l236yyv9wqsgcjlbrm5gk1bmw1z2lk4b21y699ly2imhm9";
       libraryHaskellDepends = [
         base containers nats semigroupoids semigroups text utf8-string
       ];
       testHaskellDepends = [
         base HUnit test-framework test-framework-hunit
       ];
       homepage = "http://github.com/ekmett/wl-pprint-extras/";
       description = "A free monad based on the Wadler/Leijen pretty printer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wl-pprint-terminfo" = callPackage
    ({ mkDerivation, base, bytestring, containers, nats, semigroups
     , terminfo, text, transformers, wl-pprint-extras
     }:
     mkDerivation {
       pname = "wl-pprint-terminfo";
       version = "3.7.1.4";
       sha256 = "084d70plp3d9629aznrk5nxkg0hg7yr76iyi74gcby633xbvmniw";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base bytestring containers nats semigroups terminfo text
         transformers wl-pprint-extras
       ];
       homepage = "http://github.com/ekmett/wl-pprint-terminfo/";
       description = "A color pretty printer with terminfo support";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wl-pprint-text" = callPackage
    ({ mkDerivation, base, text }:
     mkDerivation {
       pname = "wl-pprint-text";
       version = "1.1.0.4";
       sha256 = "1xgizzimfw17mpmw2afvmnvyag976j8ggn7k5r564rkw9f0m6bgz";
       libraryHaskellDepends = [ base text ];
       description = "A Wadler/Leijen Pretty Printer for Text values";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "word-trie" = callPackage
    ({ mkDerivation, base, binary, containers, hspec, QuickCheck }:
     mkDerivation {
       pname = "word-trie";
       version = "0.3.0";
       sha256 = "10ljyb1hl4awg2c3wq5shdqj2s53q5fklf7p6np1jhn6i30c5wx3";
       revision = "1";
       editedCabalFile = "01aanzslm69z94lqy43hgyxj1ys7sqfqwn72l0snw3h2n3pjwn45";
       libraryHaskellDepends = [ base binary containers ];
       testHaskellDepends = [ base binary containers hspec QuickCheck ];
       homepage = "https://github.com/yi-editor/word-trie";
       description = "Implementation of a finite trie over words";
       license = stdenv.lib.licenses.gpl2;
     }) {};
  "word8" = callPackage
    ({ mkDerivation, base, bytestring, criterion, hspec }:
     mkDerivation {
       pname = "word8";
       version = "0.1.2";
       sha256 = "1pbn8ra3qhwvw07p375cdmp7jzlg07hgdcr4cpscz3h7b9sy7fiw";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base hspec ];
       benchmarkHaskellDepends = [ base bytestring criterion ];
       description = "Word8 library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wordpass" = callPackage
    ({ mkDerivation, base, containers, deepseq, directory, filepath
     , hflags, random-fu, random-source, text, unix-compat, vector
     }:
     mkDerivation {
       pname = "wordpass";
       version = "1.0.0.7";
       sha256 = "1n6r47ki83xzvms90sxnyqfyqzrs7j705ji2832mf5160xld30r2";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base containers deepseq directory filepath random-fu random-source
         text unix-compat vector
       ];
       executableHaskellDepends = [
         base containers deepseq directory filepath hflags random-fu
         random-source text unix-compat vector
       ];
       homepage = "https://github.com/mgajda/wordpass";
       description = "Dictionary-based password generator";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wrap" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "wrap";
       version = "0.0.0";
       sha256 = "03pmfwwx2ykjglzrc4k09q2lv8piq107j32dg0r1aadj2ysc9fzq";
       libraryHaskellDepends = [ base ];
       description = "Wrap a function's return value with another function";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wreq" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, attoparsec
     , authenticate-oauth, base, base16-bytestring, base64-bytestring
     , byteable, bytestring, case-insensitive, containers, cryptohash
     , directory, doctest, exceptions, filepath, ghc-prim, hashable
     , http-client, http-client-tls, http-types, HUnit, lens, lens-aeson
     , mime-types, network-info, psqueues, QuickCheck, snap-core
     , snap-server, template-haskell, temporary, test-framework
     , test-framework-hunit, test-framework-quickcheck2, text, time
     , time-locale-compat, transformers, unix-compat
     , unordered-containers, uuid, vector
     }:
     mkDerivation {
       pname = "wreq";
       version = "0.4.1.0";
       sha256 = "0vcfrgjjd38dd7cvknjvnvlhijzfiq0819ys1w3dfw3nzgi0k11v";
       revision = "1";
       editedCabalFile = "0dpsz8jrak4rzf51qdrx0mffbsqhysdvs63wmrfkpv3d4m1fwpa1";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson attoparsec authenticate-oauth base base16-bytestring byteable
         bytestring case-insensitive containers cryptohash exceptions
         ghc-prim hashable http-client http-client-tls http-types lens
         lens-aeson mime-types psqueues template-haskell text time
         time-locale-compat unordered-containers
       ];
       testHaskellDepends = [
         aeson aeson-pretty base base64-bytestring bytestring
         case-insensitive containers directory doctest filepath hashable
         http-client http-types HUnit lens lens-aeson network-info
         QuickCheck snap-core snap-server temporary test-framework
         test-framework-hunit test-framework-quickcheck2 text time
         transformers unix-compat uuid vector
       ];
       doCheck = false;
       homepage = "http://www.serpentine.com/wreq";
       description = "An easy-to-use HTTP client library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "writer-cps-mtl" = callPackage
    ({ mkDerivation, base, mtl, transformers, writer-cps-transformers
     }:
     mkDerivation {
       pname = "writer-cps-mtl";
       version = "0.1.1.2";
       sha256 = "0qazgjzqsyccwcjb1gr1m10xfi01yfrvb261ai19pmys47z4plam";
       libraryHaskellDepends = [
         base mtl transformers writer-cps-transformers
       ];
       homepage = "https://github.com/minad/writer-cps-mtl#readme";
       description = "MonadWriter orphan instances for writer-cps-transformers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "writer-cps-transformers" = callPackage
    ({ mkDerivation, base, transformers }:
     mkDerivation {
       pname = "writer-cps-transformers";
       version = "0.1.1.2";
       sha256 = "12ilvaj7zq03qspyivqh74pwxsbcs9va9sppp4lj593x2nidk0iw";
       libraryHaskellDepends = [ base transformers ];
       homepage = "https://github.com/minad/writer-cps-transformers#readme";
       description = "WriteT and RWST monad transformers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wuss" = callPackage
    ({ mkDerivation, base, bytestring, connection, network, websockets
     }:
     mkDerivation {
       pname = "wuss";
       version = "1.1.3";
       sha256 = "1c68pq8vzyp1m67dapnnyaz2il7331rmj9qgfscazfgk7lbh67v9";
       libraryHaskellDepends = [
         base bytestring connection network websockets
       ];
       homepage = "https://github.com/tfausak/wuss#readme";
       description = "Secure WebSocket (WSS) clients";
       license = stdenv.lib.licenses.mit;
     }) {};
  "x509" = callPackage
    ({ mkDerivation, asn1-encoding, asn1-parse, asn1-types, base
     , bytestring, containers, cryptonite, hourglass, memory, mtl, pem
     , tasty, tasty-quickcheck
     }:
     mkDerivation {
       pname = "x509";
       version = "1.6.5";
       sha256 = "10s77746vq3w06q66dy0pcis4dbvwf2wix59yaajgar39qhr8f5m";
       libraryHaskellDepends = [
         asn1-encoding asn1-parse asn1-types base bytestring containers
         cryptonite hourglass memory mtl pem
       ];
       testHaskellDepends = [
         asn1-types base bytestring cryptonite hourglass mtl tasty
         tasty-quickcheck
       ];
       homepage = "http://github.com/vincenthz/hs-certificate";
       description = "X509 reader and writer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "x509-store" = callPackage
    ({ mkDerivation, asn1-encoding, asn1-types, base, bytestring
     , containers, cryptonite, directory, filepath, mtl, pem, x509
     }:
     mkDerivation {
       pname = "x509-store";
       version = "1.6.2";
       sha256 = "0yw09nwkvr324qz4sc27c0p28bz2h6gns6lkaz9mz92mgqf2dza9";
       libraryHaskellDepends = [
         asn1-encoding asn1-types base bytestring containers cryptonite
         directory filepath mtl pem x509
       ];
       homepage = "http://github.com/vincenthz/hs-certificate";
       description = "X.509 collection accessing and storing methods";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "x509-system" = callPackage
    ({ mkDerivation, base, bytestring, containers, directory, filepath
     , mtl, pem, process, x509, x509-store
     }:
     mkDerivation {
       pname = "x509-system";
       version = "1.6.4";
       sha256 = "0k7zc0xp7r6kqmi39rpiicvq78xb0pr2cq6q5s3kmmsshllg13nr";
       libraryHaskellDepends = [
         base bytestring containers directory filepath mtl pem process x509
         x509-store
       ];
       homepage = "http://github.com/vincenthz/hs-certificate";
       description = "Handle per-operating-system X.509 accessors and storage";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "x509-validation" = callPackage
    ({ mkDerivation, asn1-encoding, asn1-types, base, byteable
     , bytestring, containers, cryptonite, data-default-class, hourglass
     , memory, mtl, pem, x509, x509-store
     }:
     mkDerivation {
       pname = "x509-validation";
       version = "1.6.5";
       sha256 = "190w1sr3w6w49v3yvqz4grb0v09ym4gll3n8bxwijvbvcybk3xyi";
       libraryHaskellDepends = [
         asn1-encoding asn1-types base byteable bytestring containers
         cryptonite data-default-class hourglass memory mtl pem x509
         x509-store
       ];
       homepage = "http://github.com/vincenthz/hs-certificate";
       description = "X.509 Certificate and CRL validation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "xdcc" = callPackage
    ({ mkDerivation, ascii-progress, async, base, bytestring
     , case-insensitive, concurrent-output, errors, iproute, irc-client
     , irc-dcc, monad-control, network, optparse-applicative, path
     , random, safe-exceptions, signal, stm, text, transformers
     , transformers-base, unix-compat
     }:
     mkDerivation {
       pname = "xdcc";
       version = "1.1.3";
       sha256 = "17mldl0iwa8wa3c89lkxzn20jidpxg8v5d8k0xxk94pwr081njxk";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         ascii-progress async base bytestring case-insensitive
         concurrent-output errors iproute irc-client irc-dcc monad-control
         network optparse-applicative path random safe-exceptions signal stm
         text transformers transformers-base unix-compat
       ];
       doHaddock = false;
       homepage = "https://github.com/JanGe/xdcc";
       description = "A wget-like utility for retrieving files from XDCC bots on IRC";
       license = stdenv.lib.licenses.mit;
     }) {};
  "xdg-basedir" = callPackage
    ({ mkDerivation, base, directory, filepath }:
     mkDerivation {
       pname = "xdg-basedir";
       version = "0.2.2";
       sha256 = "0azlzaxp2dn4l1nr7shsxah2magk1szf6fx0mv75az00qsjw6qg4";
       libraryHaskellDepends = [ base directory filepath ];
       homepage = "http://github.com/willdonnelly/xdg-basedir";
       description = "A basic implementation of the XDG Base Directory specification";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "xenstore" = callPackage
    ({ mkDerivation, base, bytestring, cereal, mtl, network }:
     mkDerivation {
       pname = "xenstore";
       version = "0.1.1";
       sha256 = "0x788lpkkxg7ds1bgnw0kvkf6pkfbknn7jy0njhz85k7rv4kidf2";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base bytestring cereal mtl network ];
       description = "Xenstore client access";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "xhtml" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "xhtml";
       version = "3000.2.1";
       sha256 = "1n6wgzxbj8xf0wf1il827qidphnffb5vzhwzqlxhh70c2y10f0ik";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/haskell/xhtml";
       description = "An XHTML combinator library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "xlsior" = callPackage
    ({ mkDerivation, attoparsec, base, blaze-markup, bytestring
     , conduit, conduit-extra, data-default, exceptions, mtl, resourcet
     , scientific, text, time, time-locale-compat, vector, xml-conduit
     , xml-types, zip-archive
     }:
     mkDerivation {
       pname = "xlsior";
       version = "0.1.0.1";
       sha256 = "0dkb3dkc2srvc1951hv6m69z3d7xprsaj7lsdkj9npykqpv6nkgk";
       libraryHaskellDepends = [
         attoparsec base blaze-markup bytestring conduit conduit-extra
         data-default exceptions mtl resourcet scientific text time
         time-locale-compat vector xml-conduit xml-types zip-archive
       ];
       testHaskellDepends = [
         base blaze-markup bytestring text time time-locale-compat
         zip-archive
       ];
       doCheck = false;
       description = "Streaming Excel file generation and parsing";
       license = stdenv.lib.licenses.mit;
     }) {};
  "xlsx" = callPackage
    ({ mkDerivation, base, base64-bytestring, binary-search, bytestring
     , conduit, containers, data-default, Diff, errors, extra, filepath
     , groom, lens, mtl, mtl-compat, network-uri, old-locale
     , raw-strings-qq, safe, smallcheck, tasty, tasty-hunit
     , tasty-smallcheck, text, time, transformers, vector, xml-conduit
     , zip-archive, zlib
     }:
     mkDerivation {
       pname = "xlsx";
       version = "0.2.4";
       sha256 = "0h1xyai1bz11ygnvn2sb31cvwa5x216ykkgcg1dqhkdhgx0j9d70";
       libraryHaskellDepends = [
         base base64-bytestring binary-search bytestring conduit containers
         data-default errors extra filepath lens mtl mtl-compat network-uri
         old-locale safe text time transformers vector xml-conduit
         zip-archive zlib
       ];
       testHaskellDepends = [
         base bytestring containers Diff groom lens mtl raw-strings-qq
         smallcheck tasty tasty-hunit tasty-smallcheck time vector
         xml-conduit
       ];
       homepage = "https://github.com/qrilka/xlsx";
       description = "Simple and incomplete Excel file parser/writer";
       license = stdenv.lib.licenses.mit;
     }) {};
  "xlsx-tabular" = callPackage
    ({ mkDerivation, aeson, base, bytestring, containers, data-default
     , lens, text, xlsx
     }:
     mkDerivation {
       pname = "xlsx-tabular";
       version = "0.1.0.1";
       sha256 = "16jkrw2jzfsigwq4nmsk8ajgzfal2fjmc66szzjazl4vm51bkvr9";
       libraryHaskellDepends = [
         aeson base bytestring containers data-default lens text xlsx
       ];
       testHaskellDepends = [ base ];
       homepage = "http://github.com/kkazuo/xlsx-tabular#readme";
       description = "Xlsx table decode utility";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "xml" = callPackage
    ({ mkDerivation, base, bytestring, text }:
     mkDerivation {
       pname = "xml";
       version = "1.3.14";
       sha256 = "0g814lj7vaxvib2g3r734221k80k7ap9czv9hinifn8syals3l9j";
       libraryHaskellDepends = [ base bytestring text ];
       homepage = "http://code.galois.com";
       description = "A simple XML library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "xml-conduit" = callPackage
    ({ mkDerivation, attoparsec, base, blaze-builder, blaze-html
     , blaze-markup, bytestring, conduit, conduit-extra, containers
     , data-default, deepseq, hspec, HUnit, monad-control, resourcet
     , text, transformers, xml-types
     }:
     mkDerivation {
       pname = "xml-conduit";
       version = "1.3.5";
       sha256 = "10yw8jiksw21jgwqjjd1ixflavcblisgkp9qq3ba05vadc35lqr5";
       libraryHaskellDepends = [
         attoparsec base blaze-builder blaze-html blaze-markup bytestring
         conduit conduit-extra containers data-default deepseq monad-control
         resourcet text transformers xml-types
       ];
       testHaskellDepends = [
         base blaze-markup bytestring conduit containers hspec HUnit
         resourcet text transformers xml-types
       ];
       homepage = "http://github.com/snoyberg/xml";
       description = "Pure-Haskell utilities for dealing with XML with the conduit package";
       license = stdenv.lib.licenses.mit;
     }) {};
  "xml-conduit-parse" = callPackage
    ({ mkDerivation, base, conduit, conduit-parse, containers
     , data-default, exceptions, hlint, parsers, resourcet, tasty
     , tasty-hunit, text, xml-conduit, xml-types
     }:
     mkDerivation {
       pname = "xml-conduit-parse";
       version = "0.3.1.0";
       sha256 = "1mbjqmp9bib6m49y3lrfpspc05ihjddj10lqz30nq89ys36sma32";
       libraryHaskellDepends = [
         base conduit conduit-parse containers exceptions parsers text
         xml-conduit xml-types
       ];
       testHaskellDepends = [
         base conduit conduit-parse data-default hlint parsers resourcet
         tasty tasty-hunit
       ];
       homepage = "https://github.com/k0ral/xml-conduit-parse";
       description = "Streaming XML parser based on conduits";
       license = "unknown";
     }) {};
  "xml-conduit-writer" = callPackage
    ({ mkDerivation, base, containers, dlist, mtl, text, xml-conduit
     , xml-types
     }:
     mkDerivation {
       pname = "xml-conduit-writer";
       version = "0.1.1.1";
       sha256 = "1ibiqxjr63gb3v0h9fdfzm205sqjixb5vm5y6413yn4scbf7qm2b";
       libraryHaskellDepends = [
         base containers dlist mtl text xml-conduit xml-types
       ];
       testHaskellDepends = [ base text ];
       homepage = "https://bitbucket.org/dpwiz/xml-conduit-writer";
       description = "Warm and fuzzy creation of XML documents";
       license = stdenv.lib.licenses.mit;
     }) {};
  "xml-hamlet" = callPackage
    ({ mkDerivation, base, containers, hspec, HUnit, parsec
     , shakespeare, template-haskell, text, xml-conduit
     }:
     mkDerivation {
       pname = "xml-hamlet";
       version = "0.4.1";
       sha256 = "1fy29sxby4z6dby518x4za9bpgnh7aqwpwn365lb384rjpsr1wvx";
       libraryHaskellDepends = [
         base containers parsec shakespeare template-haskell text
         xml-conduit
       ];
       testHaskellDepends = [
         base containers hspec HUnit parsec shakespeare template-haskell
         text xml-conduit
       ];
       homepage = "http://www.yesodweb.com/";
       description = "Hamlet-style quasiquoter for XML content";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "xml-lens" = callPackage
    ({ mkDerivation, base, case-insensitive, containers, lens, text
     , xml-conduit
     }:
     mkDerivation {
       pname = "xml-lens";
       version = "0.1.6.3";
       sha256 = "1s5ivi3caz56g5yyg3pharshs3wcygcssjx1sm9aw4mv3ylz3msd";
       revision = "1";
       editedCabalFile = "1fbk4wv7zr10wsh8a0svd799im64fybnlb09rjpfl2pvb6i6h1qs";
       libraryHaskellDepends = [
         base case-insensitive containers lens text xml-conduit
       ];
       homepage = "https://github.com/fumieval/xml-lens";
       description = "Lenses, traversals, and prisms for xml-conduit";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "xml-to-json-fast" = callPackage
    ({ mkDerivation, base, directory, process, tagsoup, text }:
     mkDerivation {
       pname = "xml-to-json-fast";
       version = "2.0.0";
       sha256 = "0gsn8wdiwmvr7nvxbfj9vpzlxwdh8m9lprx2hxnkrnslmbhjz1fx";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base tagsoup text ];
       executableHaskellDepends = [ base directory process ];
       homepage = "https://github.com/sinelaw/xml-to-json-fast";
       description = "Fast, light converter of xml to json capable of handling huge xml files";
       license = stdenv.lib.licenses.mit;
     }) {};
  "xml-types" = callPackage
    ({ mkDerivation, base, deepseq, text }:
     mkDerivation {
       pname = "xml-types";
       version = "0.3.6";
       sha256 = "1jgqxsa9p2q3h6nymbfmvhldqrqlwrhrzmwadlyc0li50x0d8dwr";
       libraryHaskellDepends = [ base deepseq text ];
       homepage = "https://john-millikin.com/software/haskell-xml/";
       description = "Basic types for representing XML";
       license = stdenv.lib.licenses.mit;
     }) {};
  "xmlgen" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring, containers
     , criterion, filepath, HUnit, hxt, mtl, process, QuickCheck, text
     , unix
     }:
     mkDerivation {
       pname = "xmlgen";
       version = "0.6.2.1";
       sha256 = "1rmsg9wxs0bsj0xpagxrm3fmlqd63b0dfyc21rx9jj76g9za29wh";
       libraryHaskellDepends = [
         base blaze-builder bytestring containers mtl text
       ];
       testHaskellDepends = [
         base bytestring containers filepath HUnit hxt process QuickCheck
         text unix
       ];
       benchmarkHaskellDepends = [ base bytestring criterion text ];
       doCheck = false;
       description = "Fast XML generation library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "xmlhtml" = callPackage
    ({ mkDerivation, base, blaze-builder, blaze-html, blaze-markup
     , bytestring, containers, directory, HUnit, parsec, QuickCheck
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , text, unordered-containers
     }:
     mkDerivation {
       pname = "xmlhtml";
       version = "0.2.3.5";
       sha256 = "0vdhfh1fnhmkymasrcv5rh4498r5fgm7yia3n5h8n1nmmz3s2cz3";
       revision = "3";
       editedCabalFile = "100qk6i2pgzyq3736rv1786njlr3ba0gm9aw16aapp3g9qrjqpjb";
       libraryHaskellDepends = [
         base blaze-builder blaze-html blaze-markup bytestring containers
         parsec text unordered-containers
       ];
       testHaskellDepends = [
         base blaze-builder blaze-html blaze-markup bytestring containers
         directory HUnit parsec QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2 text
         unordered-containers
       ];
       homepage = "https://github.com/snapframework/xmlhtml";
       description = "XML parser and renderer with HTML 5 quirks mode";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "xmonad" = callPackage
    ({ mkDerivation, base, containers, data-default, directory
     , extensible-exceptions, filepath, mtl, process, QuickCheck
     , setlocale, unix, utf8-string, X11
     }:
     mkDerivation {
       pname = "xmonad";
       version = "0.12";
       sha256 = "1mzx3p17ppgmi30q3phaj58x6kxn73pbbkn9v9gzgmd8skdlkxp8";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base containers data-default directory extensible-exceptions
         filepath mtl process setlocale unix utf8-string X11
       ];
       executableHaskellDepends = [ base mtl unix X11 ];
       testHaskellDepends = [
         base containers extensible-exceptions QuickCheck X11
       ];
       doCheck = false;
       postInstall = ''
         shopt -s globstar
         mkdir -p $doc/share/man/man1
         mv "$data/"**"/man/"*[0-9] $doc/share/man/man1/
         rm "$data/"**"/man/"*
       '';
       homepage = "http://xmonad.org";
       description = "A tiling window manager";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "xss-sanitize" = callPackage
    ({ mkDerivation, attoparsec, base, containers, css-text, hspec
     , HUnit, network-uri, tagsoup, text, utf8-string
     }:
     mkDerivation {
       pname = "xss-sanitize";
       version = "0.3.5.7";
       sha256 = "005cmhaw9xbzkcn42jmhvcvk63bzmg4lml368xwmqdvh7r0mcn4m";
       libraryHaskellDepends = [
         attoparsec base containers css-text network-uri tagsoup text
         utf8-string
       ];
       testHaskellDepends = [
         attoparsec base containers css-text hspec HUnit network-uri tagsoup
         text utf8-string
       ];
       homepage = "http://github.com/yesodweb/haskell-xss-sanitize";
       description = "sanitize untrusted HTML to prevent XSS attacks";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "yackage" = callPackage
    ({ mkDerivation, aeson, base, blaze-builder, blaze-html, bytestring
     , Cabal, cmdargs, conduit, containers, directory, http-conduit
     , http-types, shakespeare, tar, text, transformers
     , unordered-containers, vector, wai, warp, yaml, yesod-core
     , yesod-form, zlib
     }:
     mkDerivation {
       pname = "yackage";
       version = "0.8.1";
       sha256 = "1rfa6rhj4fmfsyfhm19x0sgx9j71xz4qjqissd7izifjpx60cj0x";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         aeson base blaze-builder blaze-html bytestring Cabal cmdargs
         conduit containers directory http-conduit http-types shakespeare
         tar text transformers unordered-containers vector wai warp yaml
         yesod-core yesod-form zlib
       ];
       doHaddock = false;
       homepage = "http://github.com/snoyberg/yackage";
       description = "Personal Hackage replacement for testing new packages";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "yahoo-finance-api" = callPackage
    ({ mkDerivation, aeson, base, doctest, Glob, http-api-data
     , http-client, lens, lens-aeson, mtl, servant, servant-client, text
     , time, transformers
     }:
     mkDerivation {
       pname = "yahoo-finance-api";
       version = "0.1.0.0";
       sha256 = "10jivhpm4rys7cyscp6aq8bij7k82z5hsllad6221z29hlnzbs6p";
       libraryHaskellDepends = [
         aeson base http-api-data http-client lens lens-aeson mtl servant
         servant-client text time transformers
       ];
       testHaskellDepends = [ base doctest Glob ];
       homepage = "https://github.com/cdepillabout/yahoo-finance-api";
       description = "Read quotes from Yahoo Finance API";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "yaml" = callPackage
    ({ mkDerivation, aeson, aeson-qq, attoparsec, base, base-compat
     , bytestring, conduit, containers, directory, enclosed-exceptions
     , filepath, hspec, HUnit, mockery, resourcet, scientific
     , semigroups, template-haskell, temporary, text, transformers
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "yaml";
       version = "0.8.21.1";
       sha256 = "1chdg9kz0fsp2dfljc0na8r05rk080wamqznxzsmrihml80yiy7r";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson attoparsec base bytestring conduit containers directory
         enclosed-exceptions filepath resourcet scientific semigroups
         template-haskell text transformers unordered-containers vector
       ];
       executableHaskellDepends = [ aeson base bytestring ];
       testHaskellDepends = [
         aeson aeson-qq base base-compat bytestring conduit directory hspec
         HUnit mockery resourcet temporary text transformers
         unordered-containers vector
       ];
       doCheck = false;
       homepage = "http://github.com/snoyberg/yaml/";
       description = "Support for parsing and rendering YAML documents";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "yarr" = callPackage
    ({ mkDerivation, base, deepseq, fixed-vector, ghc-prim
     , missing-foreign, primitive, template-haskell
     }:
     mkDerivation {
       pname = "yarr";
       version = "1.4.0.2";
       sha256 = "1vr4xw77p7jlpmyb2dzgv8lfmljl2p5g6pfia56cln4hxg57kyfa";
       libraryHaskellDepends = [
         base deepseq fixed-vector ghc-prim missing-foreign primitive
         template-haskell
       ];
       description = "Yet another array library";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yes-precure5-command" = callPackage
    ({ mkDerivation, base, Cabal, containers, hspec, mtl, parsec
     , QuickCheck, random
     }:
     mkDerivation {
       pname = "yes-precure5-command";
       version = "5.5.3";
       sha256 = "0zmgl3qdpdvwcs842l6ymy3kh3axb0qim8nda22a28qrv3fg5wi7";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base Cabal containers mtl parsec random
       ];
       executableHaskellDepends = [
         base Cabal containers mtl parsec random
       ];
       testHaskellDepends = [ base containers hspec QuickCheck ];
       homepage = "https://github.com/igrep/yes-precure5-command/";
       description = "Extended yes command to reproduce phrases in Yes! Precure 5";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod" = callPackage
    ({ mkDerivation, aeson, base, blaze-html, blaze-markup, bytestring
     , conduit, conduit-extra, data-default-class, directory
     , fast-logger, monad-control, monad-logger, resourcet, semigroups
     , shakespeare, streaming-commons, template-haskell, text
     , transformers, unix, unordered-containers, wai, wai-extra
     , wai-logger, warp, yaml, yesod-core, yesod-form, yesod-persistent
     }:
     mkDerivation {
       pname = "yesod";
       version = "1.4.4";
       sha256 = "0b7aggm80gh1z1jkms3mp587dn0a75caxhv0a3rlyx9m4kgalb2z";
       libraryHaskellDepends = [
         aeson base blaze-html blaze-markup bytestring conduit conduit-extra
         data-default-class directory fast-logger monad-control monad-logger
         resourcet semigroups shakespeare streaming-commons template-haskell
         text transformers unix unordered-containers wai wai-extra
         wai-logger warp yaml yesod-core yesod-form yesod-persistent
       ];
       homepage = "http://www.yesodweb.com/";
       description = "Creation of type-safe, RESTful web applications";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod-auth" = callPackage
    ({ mkDerivation, aeson, authenticate, base, base16-bytestring
     , base64-bytestring, binary, blaze-builder, blaze-html
     , blaze-markup, byteable, bytestring, conduit, conduit-extra
     , containers, cryptohash, data-default, email-validate, file-embed
     , http-client, http-conduit, http-types, lifted-base, mime-mail
     , network-uri, nonce, persistent, persistent-template, random
     , resourcet, safe, shakespeare, template-haskell, text, time
     , transformers, unordered-containers, wai, yesod-core, yesod-form
     , yesod-persistent
     }:
     mkDerivation {
       pname = "yesod-auth";
       version = "1.4.15";
       sha256 = "1zawp0dg3adyp4sx91psmy8923zaw0rgngk7ihylpaj8qc1v05x9";
       libraryHaskellDepends = [
         aeson authenticate base base16-bytestring base64-bytestring binary
         blaze-builder blaze-html blaze-markup byteable bytestring conduit
         conduit-extra containers cryptohash data-default email-validate
         file-embed http-client http-conduit http-types lifted-base
         mime-mail network-uri nonce persistent persistent-template random
         resourcet safe shakespeare template-haskell text time transformers
         unordered-containers wai yesod-core yesod-form yesod-persistent
       ];
       homepage = "http://www.yesodweb.com/";
       description = "Authentication for Yesod";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod-auth-account" = callPackage
    ({ mkDerivation, base, blaze-html, bytestring, hspec, monad-logger
     , mtl, nonce, persistent, persistent-sqlite, pwstore-fast
     , resourcet, text, xml-conduit, yesod, yesod-auth, yesod-core
     , yesod-form, yesod-persistent, yesod-test
     }:
     mkDerivation {
       pname = "yesod-auth-account";
       version = "1.4.3";
       sha256 = "1bv4hs8xrp94677apgdgjln87inzx0rjjl7zss03n0k4ipapgw79";
       libraryHaskellDepends = [
         base blaze-html bytestring mtl nonce persistent pwstore-fast text
         yesod-auth yesod-core yesod-form yesod-persistent
       ];
       testHaskellDepends = [
         base bytestring hspec monad-logger mtl persistent-sqlite resourcet
         text xml-conduit yesod yesod-auth yesod-test
       ];
       homepage = "https://bitbucket.org/wuzzeb/yesod-auth-account";
       description = "An account authentication plugin for Yesod";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod-auth-basic" = callPackage
    ({ mkDerivation, base, base64-bytestring, bytestring, exceptions
     , hlint, hspec, text, wai, word8, yesod, yesod-test
     }:
     mkDerivation {
       pname = "yesod-auth-basic";
       version = "0.1.0.2";
       sha256 = "0b4vyf731wb7idmbqz7n8zm4p7i7y66x94ph7kaxv1jvq05k7bxa";
       libraryHaskellDepends = [
         base base64-bytestring bytestring exceptions text wai word8 yesod
       ];
       testHaskellDepends = [ base hlint hspec text yesod yesod-test ];
       description = "Yesod Middleware for HTTP Basic Authentication";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "yesod-auth-hashdb" = callPackage
    ({ mkDerivation, base, basic-prelude, bytestring, containers
     , cryptohash, hspec, http-conduit, http-types, monad-logger
     , network-uri, persistent, persistent-sqlite, pwstore-fast
     , resourcet, text, wai-extra, yesod, yesod-auth, yesod-core
     , yesod-form, yesod-persistent, yesod-test
     }:
     mkDerivation {
       pname = "yesod-auth-hashdb";
       version = "1.5.1.3";
       sha256 = "06h5idr0y2f0pzny5csdq9a33rzq566ipvb090jyc3f6n9n5qiga";
       libraryHaskellDepends = [
         base bytestring cryptohash persistent pwstore-fast text yesod-auth
         yesod-core yesod-form yesod-persistent
       ];
       testHaskellDepends = [
         base basic-prelude bytestring containers hspec http-conduit
         http-types monad-logger network-uri persistent-sqlite resourcet
         text wai-extra yesod yesod-auth yesod-core yesod-test
       ];
       doCheck = false;
       homepage = "https://github.com/paul-rouse/yesod-auth-hashdb";
       description = "Authentication plugin for Yesod";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod-auth-oauth2" = callPackage
    ({ mkDerivation, aeson, authenticate, base, bytestring, containers
     , hoauth2, hspec, http-client, http-conduit, http-types
     , lifted-base, load-env, network-uri, random, text, transformers
     , vector, warp, yesod, yesod-auth, yesod-core, yesod-form
     }:
     mkDerivation {
       pname = "yesod-auth-oauth2";
       version = "0.2.2";
       sha256 = "0cswp2kkw14g64axbzncnckrlfxnvdjgppjwwm60i4n9y2zg6xk2";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson authenticate base bytestring hoauth2 http-client http-conduit
         http-types lifted-base network-uri random text transformers vector
         yesod-auth yesod-core yesod-form
       ];
       executableHaskellDepends = [
         base containers http-conduit load-env text warp yesod yesod-auth
       ];
       testHaskellDepends = [ base hspec ];
       homepage = "http://github.com/thoughtbot/yesod-auth-oauth2";
       description = "OAuth 2.0 authentication plugins";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "yesod-bin" = callPackage
    ({ mkDerivation, async, attoparsec, base, base64-bytestring
     , blaze-builder, bytestring, Cabal, conduit, conduit-extra
     , containers, data-default-class, deepseq, directory, file-embed
     , filepath, fsnotify, ghc, ghc-paths, http-client, http-conduit
     , http-reverse-proxy, http-types, lifted-base, network
     , optparse-applicative, parsec, process, project-template
     , resourcet, shakespeare, split, streaming-commons, tar
     , template-haskell, text, time, transformers, transformers-compat
     , unix-compat, unordered-containers, wai, wai-extra, warp, warp-tls
     , yaml, zlib
     }:
     mkDerivation {
       pname = "yesod-bin";
       version = "1.4.18.7";
       sha256 = "15pd07fyzj4i6yr2al9g17ap5hbvd6blmavd8dh6jzdkqy5zqxgz";
       isLibrary = false;
       isExecutable = true;
       enableSeparateDataOutput = true;
       executableHaskellDepends = [
         async attoparsec base base64-bytestring blaze-builder bytestring
         Cabal conduit conduit-extra containers data-default-class deepseq
         directory file-embed filepath fsnotify ghc ghc-paths http-client
         http-conduit http-reverse-proxy http-types lifted-base network
         optparse-applicative parsec process project-template resourcet
         shakespeare split streaming-commons tar template-haskell text time
         transformers transformers-compat unix-compat unordered-containers
         wai wai-extra warp warp-tls yaml zlib
       ];
       doHaddock = false;
       homepage = "http://www.yesodweb.com/";
       description = "The yesod helper executable";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod-core" = callPackage
    ({ mkDerivation, aeson, async, auto-update, base, blaze-builder
     , blaze-html, blaze-markup, byteable, bytestring, case-insensitive
     , cereal, clientsession, conduit, conduit-extra, containers, cookie
     , criterion, data-default, deepseq, deepseq-generics, directory
     , exceptions, fast-logger, hspec, hspec-expectations, http-types
     , HUnit, lifted-base, monad-control, monad-logger, mtl, mwc-random
     , network, old-locale, parsec, path-pieces, primitive, QuickCheck
     , random, resourcet, safe, semigroups, shakespeare
     , streaming-commons, template-haskell, text, time, transformers
     , transformers-base, unix-compat, unordered-containers, vector, wai
     , wai-extra, wai-logger, warp, word8
     }:
     mkDerivation {
       pname = "yesod-core";
       version = "1.4.30";
       sha256 = "0m7nhnv8xb7kgy7fijhfpzxwapm8k82nwqbkifhpxfxcpvqdndhi";
       revision = "1";
       editedCabalFile = "10fi5d3f0dz1hisnpqs76cwdrhvv4547y0gs1xr0bcdkx9rimw9l";
       libraryHaskellDepends = [
         aeson auto-update base blaze-builder blaze-html blaze-markup
         byteable bytestring case-insensitive cereal clientsession conduit
         conduit-extra containers cookie data-default deepseq
         deepseq-generics directory exceptions fast-logger http-types
         lifted-base monad-control monad-logger mtl mwc-random old-locale
         parsec path-pieces primitive random resourcet safe semigroups
         shakespeare template-haskell text time transformers
         transformers-base unix-compat unordered-containers vector wai
         wai-extra wai-logger warp word8
       ];
       testHaskellDepends = [
         async base blaze-builder bytestring clientsession conduit
         conduit-extra containers cookie hspec hspec-expectations http-types
         HUnit lifted-base mwc-random network path-pieces QuickCheck random
         resourcet shakespeare streaming-commons template-haskell text
         transformers wai wai-extra
       ];
       benchmarkHaskellDepends = [
         base blaze-html bytestring criterion shakespeare text transformers
       ];
       homepage = "http://www.yesodweb.com/";
       description = "Creation of type-safe, RESTful web applications";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod-eventsource" = callPackage
    ({ mkDerivation, base, blaze-builder, conduit, transformers, wai
     , wai-eventsource, wai-extra, yesod-core
     }:
     mkDerivation {
       pname = "yesod-eventsource";
       version = "1.4.0.1";
       sha256 = "0j2x2zfr1s5a8m22kf27r6bdw041vmgf9b4v2ylc89n4m0f0dv55";
       libraryHaskellDepends = [
         base blaze-builder conduit transformers wai wai-eventsource
         wai-extra yesod-core
       ];
       homepage = "http://www.yesodweb.com/";
       description = "Server-sent events support for Yesod apps";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod-fay" = callPackage
    ({ mkDerivation, aeson, base, bytestring, data-default, directory
     , fay, fay-dom, filepath, monad-loops, process, pureMD5
     , shakespeare, template-haskell, text, transformers, utf8-string
     , yesod-core, yesod-form, yesod-static
     }:
     mkDerivation {
       pname = "yesod-fay";
       version = "0.8.0";
       sha256 = "0inx11w4wdgnbxqghm9738qs19519dcdgyjmm3aah12wzv4i68gf";
       libraryHaskellDepends = [
         aeson base bytestring data-default directory fay fay-dom filepath
         monad-loops process pureMD5 shakespeare template-haskell text
         transformers utf8-string yesod-core yesod-form yesod-static
       ];
       homepage = "https://github.com/fpco/yesod-fay";
       description = "Utilities for using the Fay Haskell-to-JS compiler with Yesod";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod-fb" = callPackage
    ({ mkDerivation, aeson, base, bytestring, conduit, crypto-api, fb
     , http-conduit, text, wai, yesod-core
     }:
     mkDerivation {
       pname = "yesod-fb";
       version = "0.3.4";
       sha256 = "09cymp9y21vawbgr6gcj41s5xkq6j22mvk0vgl3pnyq382j33rmp";
       libraryHaskellDepends = [
         aeson base bytestring conduit crypto-api fb http-conduit text wai
         yesod-core
       ];
       homepage = "https://github.com/prowdsponsor/yesod-fb";
       description = "Useful glue functions between the fb library and Yesod";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "yesod-form" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, blaze-builder, blaze-html
     , blaze-markup, byteable, bytestring, containers, data-default
     , email-validate, hspec, network-uri, persistent, resourcet
     , semigroups, shakespeare, template-haskell, text, time
     , transformers, wai, xss-sanitize, yesod-core, yesod-persistent
     }:
     mkDerivation {
       pname = "yesod-form";
       version = "1.4.9";
       sha256 = "038ifjd38vsr0cr973sh6lb30hg0zdinxc66byqr77m8jwnz2lxx";
       libraryHaskellDepends = [
         aeson attoparsec base blaze-builder blaze-html blaze-markup
         byteable bytestring containers data-default email-validate
         network-uri persistent resourcet semigroups shakespeare
         template-haskell text time transformers wai xss-sanitize yesod-core
         yesod-persistent
       ];
       testHaskellDepends = [ base hspec text time ];
       homepage = "http://www.yesodweb.com/";
       description = "Form handling support for Yesod Web Framework";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod-form-richtext" = callPackage
    ({ mkDerivation, base, blaze-builder, blaze-html, shakespeare, text
     , xss-sanitize, yesod-core, yesod-form
     }:
     mkDerivation {
       pname = "yesod-form-richtext";
       version = "0.1.0.0";
       sha256 = "1l8idjn0ib0y6gjsgzkvnznm69mhy49cb9ppw99w3ajndp8zw15l";
       libraryHaskellDepends = [
         base blaze-builder blaze-html shakespeare text xss-sanitize
         yesod-core yesod-form
       ];
       homepage = "http://github.com/geraldus/yesod-form-richtext#readme";
       description = "Various rich-text WYSIWYG editors for Yesod forms";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod-gitrepo" = callPackage
    ({ mkDerivation, base, directory, enclosed-exceptions, http-types
     , lifted-base, process, temporary, text, wai, yesod-core
     }:
     mkDerivation {
       pname = "yesod-gitrepo";
       version = "0.2.1.0";
       sha256 = "1v47d6gvw3d19mqip36y54c4d84f48jgybdwgdl8r20zfwvhyvkf";
       libraryHaskellDepends = [
         base directory enclosed-exceptions http-types lifted-base process
         temporary text wai yesod-core
       ];
       homepage = "https://github.com/snoyberg/yesod-gitrepo";
       description = "Host content provided by a Git repo";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod-gitrev" = callPackage
    ({ mkDerivation, aeson, base, gitrev, template-haskell, yesod-core
     }:
     mkDerivation {
       pname = "yesod-gitrev";
       version = "0.1.0.0";
       sha256 = "0jcgc8l2gh6ahxwddra0jyf78bi4rzff9nfi1knjxixfll73rrih";
       libraryHaskellDepends = [
         aeson base gitrev template-haskell yesod-core
       ];
       description = "A subsite for displaying git information";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "yesod-job-queue" = callPackage
    ({ mkDerivation, aeson, api-field-json-th, base, bytestring
     , classy-prelude-yesod, cron, file-embed, hedis, lens
     , monad-control, monad-logger, persistent-sqlite, resourcet, stm
     , text, time, transformers, uuid, yesod, yesod-core
     , yesod-persistent
     }:
     mkDerivation {
       pname = "yesod-job-queue";
       version = "0.3.0.1";
       sha256 = "0kvkidhmdnknshq2wjvz6lmdf1209037yi554g3fdc7533i0b255";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson api-field-json-th base bytestring cron file-embed hedis lens
         monad-control monad-logger stm text time transformers uuid yesod
         yesod-core yesod-persistent
       ];
       executableHaskellDepends = [
         base classy-prelude-yesod hedis monad-logger persistent-sqlite
         resourcet yesod yesod-core
       ];
       testHaskellDepends = [ base ];
       doHaddock = false;
       homepage = "https://github.com/nakaji-dayo/yesod-job-queue#readme";
       description = "Background jobs library for Yesod";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "yesod-newsfeed" = callPackage
    ({ mkDerivation, base, blaze-html, blaze-markup, bytestring
     , containers, shakespeare, text, time, xml-conduit, yesod-core
     }:
     mkDerivation {
       pname = "yesod-newsfeed";
       version = "1.6";
       sha256 = "05kmnv0by94la3np715j6my41y8wqlvc0h8rf09zvrrg003bqvaf";
       libraryHaskellDepends = [
         base blaze-html blaze-markup bytestring containers shakespeare text
         time xml-conduit yesod-core
       ];
       homepage = "http://www.yesodweb.com/";
       description = "Helper functions and data types for producing News feeds";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod-persistent" = callPackage
    ({ mkDerivation, base, blaze-builder, conduit, hspec, persistent
     , persistent-sqlite, persistent-template, resource-pool, resourcet
     , text, transformers, wai-extra, yesod-core
     }:
     mkDerivation {
       pname = "yesod-persistent";
       version = "1.4.1.1";
       sha256 = "0lbmks3g17zzzgl4ska87dg8k5nzb50c94b3q0cbb9ipzh22dzfz";
       libraryHaskellDepends = [
         base blaze-builder conduit persistent persistent-template
         resource-pool resourcet transformers yesod-core
       ];
       testHaskellDepends = [
         base blaze-builder conduit hspec persistent persistent-sqlite text
         wai-extra yesod-core
       ];
       homepage = "http://www.yesodweb.com/";
       description = "Some helpers for using Persistent from Yesod";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod-sitemap" = callPackage
    ({ mkDerivation, base, conduit, containers, data-default, text
     , time, xml-conduit, xml-types, yesod-core
     }:
     mkDerivation {
       pname = "yesod-sitemap";
       version = "1.4.0.1";
       sha256 = "0ri67r3yjngn4m2lj071n2v3r9w7pvsl24rayf41k7w9j3ylk100";
       libraryHaskellDepends = [
         base conduit containers data-default text time xml-conduit
         xml-types yesod-core
       ];
       homepage = "http://www.yesodweb.com/";
       description = "Generate XML sitemaps";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod-static" = callPackage
    ({ mkDerivation, async, attoparsec, base, base64-bytestring
     , blaze-builder, byteable, bytestring, conduit, conduit-extra
     , containers, cryptohash, cryptohash-conduit, css-text
     , data-default, directory, exceptions, file-embed, filepath
     , hashable, hjsmin, hspec, http-types, HUnit, mime-types, old-time
     , process, resourcet, template-haskell, text, transformers
     , unix-compat, unordered-containers, wai, wai-app-static, wai-extra
     , yesod-core, yesod-test
     }:
     mkDerivation {
       pname = "yesod-static";
       version = "1.5.1.1";
       sha256 = "14ia345ghnhndpyrpm329i2q53k44qjjz7rbvgybilnbqiihgdfd";
       libraryHaskellDepends = [
         async attoparsec base base64-bytestring blaze-builder byteable
         bytestring conduit conduit-extra containers cryptohash
         cryptohash-conduit css-text data-default directory exceptions
         file-embed filepath hashable hjsmin http-types mime-types old-time
         process resourcet template-haskell text transformers unix-compat
         unordered-containers wai wai-app-static yesod-core
       ];
       testHaskellDepends = [
         async base base64-bytestring byteable bytestring conduit
         conduit-extra containers cryptohash cryptohash-conduit data-default
         directory exceptions file-embed filepath hjsmin hspec http-types
         HUnit mime-types old-time process resourcet template-haskell text
         transformers unix-compat unordered-containers wai wai-app-static
         wai-extra yesod-core yesod-test
       ];
       homepage = "http://www.yesodweb.com/";
       description = "Static file serving subsite for Yesod Web Framework";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod-static-angular" = callPackage
    ({ mkDerivation, aeson, base, blaze-builder, blaze-markup
     , bytestring, data-default, directory, filepath, hamlet, hspec
     , HUnit, language-javascript, mime-types, shakespeare
     , template-haskell, text, yesod, yesod-core, yesod-static
     , yesod-test
     }:
     mkDerivation {
       pname = "yesod-static-angular";
       version = "0.1.8";
       sha256 = "1srvw1fd8jy15zshssmx5183q01aafrv5wyb26w70v3y18kfzcwp";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base blaze-builder blaze-markup bytestring data-default
         directory filepath hamlet language-javascript mime-types
         shakespeare template-haskell text yesod-core yesod-static
       ];
       executableHaskellDepends = [
         base data-default shakespeare yesod yesod-static
       ];
       testHaskellDepends = [
         base bytestring hamlet hspec HUnit shakespeare template-haskell
         text yesod-core yesod-static yesod-test
       ];
       homepage = "https://bitbucket.org/wuzzeb/yesod-static-angular";
       description = "Yesod generators for embedding AngularJs code into yesod-static at compile time";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod-table" = callPackage
    ({ mkDerivation, base, bytestring, containers, contravariant
     , semigroups, text, yesod-core
     }:
     mkDerivation {
       pname = "yesod-table";
       version = "2.0.3";
       sha256 = "16qqh2zf2aigdaam7s4m9ng89r363ijpgrz0w5v0fxzgdpz70fin";
       libraryHaskellDepends = [
         base bytestring containers contravariant semigroups text yesod-core
       ];
       homepage = "https://github.com/andrewthad/yesod-table";
       description = "HTML tables for Yesod";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod-test" = callPackage
    ({ mkDerivation, attoparsec, base, blaze-builder, blaze-html
     , blaze-markup, bytestring, case-insensitive, containers, cookie
     , hspec, hspec-core, html-conduit, http-types, HUnit, lifted-base
     , monad-control, network, persistent, pretty-show, text, time
     , transformers, wai, wai-extra, xml-conduit, xml-types, yesod-core
     , yesod-form
     }:
     mkDerivation {
       pname = "yesod-test";
       version = "1.5.4.1";
       sha256 = "17b5v6lz821bzmnhzbr087dn0b40n1vln6b96jxmdxpysls8rh1n";
       libraryHaskellDepends = [
         attoparsec base blaze-builder blaze-html blaze-markup bytestring
         case-insensitive containers cookie hspec-core html-conduit
         http-types HUnit monad-control network persistent pretty-show text
         time transformers wai wai-extra xml-conduit xml-types yesod-core
       ];
       testHaskellDepends = [
         base bytestring containers hspec html-conduit http-types HUnit
         lifted-base text wai xml-conduit yesod-core yesod-form
       ];
       homepage = "http://www.yesodweb.com";
       description = "integration testing for WAI/Yesod Applications";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod-websockets" = callPackage
    ({ mkDerivation, async, base, conduit, enclosed-exceptions
     , monad-control, transformers, wai, wai-websockets, websockets
     , yesod-core
     }:
     mkDerivation {
       pname = "yesod-websockets";
       version = "0.2.5";
       sha256 = "0i69fmlp19s4vjgxrbqd4rr7ym685yxjk3wr8fyshd90m2p0kxn5";
       libraryHaskellDepends = [
         async base conduit enclosed-exceptions monad-control transformers
         wai wai-websockets websockets yesod-core
       ];
       homepage = "https://github.com/yesodweb/yesod";
       description = "WebSockets support for Yesod";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yi" = callPackage
    ({ mkDerivation, array, base, binary, bytestring, Cabal, containers
     , data-default, directory, dlist, dynamic-state, dyre, exceptions
     , filepath, hashable, Hclip, hint, HUnit, lens, mtl, old-locale
     , oo-prototypes, parsec, pointedlist, process, QuickCheck, random
     , safe, semigroups, split, stm, tasty, tasty-hunit
     , tasty-quickcheck, template-haskell, text, text-icu, time
     , transformers-base, unix, unix-compat, unordered-containers, vty
     , word-trie, xdg-basedir, yi-language, yi-rope
     }:
     mkDerivation {
       pname = "yi";
       version = "0.12.6";
       sha256 = "1n0589hr47hsim0bfb74h7w4rs7k1lslgk7vfac1s9aacg4blsw8";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         array base binary bytestring Cabal containers data-default
         directory dlist dynamic-state dyre exceptions filepath hashable
         Hclip hint lens mtl old-locale oo-prototypes parsec pointedlist
         process QuickCheck random safe semigroups split stm
         template-haskell text text-icu time transformers-base unix
         unix-compat unordered-containers vty word-trie xdg-basedir
         yi-language yi-rope
       ];
       executableHaskellDepends = [ base ];
       testHaskellDepends = [
         base directory filepath HUnit lens QuickCheck semigroups tasty
         tasty-hunit tasty-quickcheck text yi-language yi-rope
       ];
       homepage = "https://yi-editor.github.io";
       description = "The Haskell-Scriptable Editor";
       license = stdenv.lib.licenses.gpl2;
     }) {};
  "yi-fuzzy-open" = callPackage
    ({ mkDerivation, base, binary, containers, data-default, directory
     , filepath, mtl, text, transformers-base, vector, yi, yi-language
     , yi-rope
     }:
     mkDerivation {
       pname = "yi-fuzzy-open";
       version = "0.1.0.1";
       sha256 = "0amhg04sf2jx39yb44rp5zjinsx4sr0chww4dxqhjxgmc2na7vcj";
       libraryHaskellDepends = [
         base binary containers data-default directory filepath mtl text
         transformers-base vector yi yi-language yi-rope
       ];
       homepage = "https://github.com/yi-editor/yi-fuzzy-open";
       description = "Fuzzy open plugin for Yi";
       license = stdenv.lib.licenses.gpl2;
     }) {};
  "yi-language" = callPackage
    ({ mkDerivation, alex, array, base, binary, containers
     , data-default, filepath, hashable, hspec, microlens-platform
     , oo-prototypes, pointedlist, QuickCheck, regex-base, regex-tdfa
     , template-haskell, transformers-base, unordered-containers
     }:
     mkDerivation {
       pname = "yi-language";
       version = "0.2.1";
       sha256 = "1kgsrw0xkmhvksr26z9m6axvv7hvn8xyfxl37a3hrbczz88325aq";
       libraryHaskellDepends = [
         array base binary containers data-default hashable
         microlens-platform oo-prototypes pointedlist regex-base regex-tdfa
         template-haskell transformers-base unordered-containers
       ];
       libraryToolDepends = [ alex ];
       testHaskellDepends = [
         array base binary containers data-default filepath hashable hspec
         microlens-platform pointedlist QuickCheck regex-base regex-tdfa
         template-haskell transformers-base unordered-containers
       ];
       homepage = "https://github.com/yi-editor/yi-language";
       description = "Collection of language-related Yi libraries";
       license = stdenv.lib.licenses.gpl2;
     }) {};
  "yi-rope" = callPackage
    ({ mkDerivation, base, binary, bytestring, charsetdetect-ae
     , criterion, data-default, deepseq, fingertree, hspec, QuickCheck
     , quickcheck-instances, text, text-icu
     }:
     mkDerivation {
       pname = "yi-rope";
       version = "0.7.0.2";
       sha256 = "17fa107xqy0k3jqrvnxk2j1by125jq0m4vxs5p3261s60pcz4pg0";
       libraryHaskellDepends = [
         base binary bytestring charsetdetect-ae data-default deepseq
         fingertree text text-icu
       ];
       testHaskellDepends = [
         base hspec QuickCheck quickcheck-instances text
       ];
       benchmarkHaskellDepends = [ base criterion deepseq text ];
       description = "A rope data structure used by Yi";
       license = stdenv.lib.licenses.gpl2;
     }) {};
  "yjtools" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "yjtools";
       version = "0.9.18";
       sha256 = "13zbq37p2prbyxq1wply7qqpc2wwsic78wzcgbc430nfrrpiq4lv";
       libraryHaskellDepends = [ base ];
       homepage = "http://homepage3.nifty.com/salamander/second/projects/yjtools/index.xhtml";
       description = "some tools for Monad, List, Tuple and so on";
       license = "LGPL";
     }) {};
  "zero" = callPackage
    ({ mkDerivation, base, semigroups }:
     mkDerivation {
       pname = "zero";
       version = "0.1.4";
       sha256 = "1mfmc7na5q2lrlz168hwzdjpmaqdqqpdlsfyk44v9f3kjqnwdk9q";
       libraryHaskellDepends = [ base semigroups ];
       homepage = "https://github.com/phaazon/zero";
       description = "Semigroups with absorption";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "zeromq4-haskell" = callPackage
    ({ mkDerivation, async, base, bytestring, containers, exceptions
     , monad-control, QuickCheck, semigroups, tasty, tasty-hunit
     , tasty-quickcheck, transformers, transformers-base, zeromq
     }:
     mkDerivation {
       pname = "zeromq4-haskell";
       version = "0.6.5";
       sha256 = "1hp7k5kzj6fbv0jkvcgxx6pg0nd200dsa4ynwd658s92i37vd6bf";
       libraryHaskellDepends = [
         async base bytestring containers exceptions monad-control
         semigroups transformers transformers-base
       ];
       libraryPkgconfigDepends = [ zeromq ];
       testHaskellDepends = [
         async base bytestring QuickCheck tasty tasty-hunit tasty-quickcheck
       ];
       homepage = "https://gitlab.com/twittner/zeromq-haskell/";
       description = "Bindings to ZeroMQ 4.x";
       license = stdenv.lib.licenses.mit;
     }) {inherit (pkgs) zeromq;};
  "zip" = callPackage
    ({ mkDerivation, base, bytestring, bzlib-conduit, case-insensitive
     , cereal, conduit, conduit-extra, containers, criterion, digest
     , exceptions, filepath, hspec, mtl, path, path-io, plan-b
     , QuickCheck, resourcet, text, time, transformers
     }:
     mkDerivation {
       pname = "zip";
       version = "0.1.5";
       sha256 = "0x39amlar6z09vqd9k02ykgdmzn1szq9aq04cph7g7zq515izslj";
       libraryHaskellDepends = [
         base bytestring bzlib-conduit case-insensitive cereal conduit
         conduit-extra containers digest exceptions filepath mtl path
         path-io plan-b resourcet text time transformers
       ];
       testHaskellDepends = [
         base bytestring conduit containers exceptions filepath hspec path
         path-io QuickCheck text time transformers
       ];
       benchmarkHaskellDepends = [ base criterion ];
       doCheck = false;
       homepage = "https://github.com/mrkkrp/zip";
       description = "Operations on zip archives";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "zip-archive" = callPackage
    ({ mkDerivation, array, base, binary, bytestring, Cabal, containers
     , digest, directory, filepath, HUnit, mtl, old-time, pretty
     , process, temporary, text, time, unix, zip, zlib
     }:
     mkDerivation {
       pname = "zip-archive";
       version = "0.3.0.5";
       sha256 = "1iwpzjck4jg9bz1yqky051i2wljsqc14q5zbi10dydfp8ip3d0yw";
       revision = "1";
       editedCabalFile = "11nsyfa1jqcsk4fm6a36mibdiylxw6m2yq0w162ryv0yvxmlqa7r";
       isLibrary = true;
       isExecutable = true;
       setupHaskellDepends = [ base Cabal ];
       libraryHaskellDepends = [
         array base binary bytestring containers digest directory filepath
         mtl old-time pretty text time unix zlib
       ];
       executableHaskellDepends = [ base bytestring directory ];
       testHaskellDepends = [
         base bytestring directory HUnit old-time process temporary time
         unix
       ];
       testToolDepends = [ zip ];
       homepage = "http://github.com/jgm/zip-archive";
       description = "Library for creating and modifying zip archives";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) zip;};
  "zippers" = callPackage
    ({ mkDerivation, base, criterion, directory, doctest, filepath
     , lens, profunctors, semigroupoids
     }:
     mkDerivation {
       pname = "zippers";
       version = "0.2.2";
       sha256 = "1rzd38x1vf8i1lh9d8r6n8ia1c01p3rjnkc7p5b0a3pnqv79ki6r";
       libraryHaskellDepends = [ base lens profunctors semigroupoids ];
       testHaskellDepends = [ base directory doctest filepath ];
       benchmarkHaskellDepends = [ base criterion lens ];
       homepage = "http://github.com/ekmett/zippers/";
       description = "Traversal based zippers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "zlib" = callPackage
    ({ mkDerivation, base, bytestring, zlib }:
     mkDerivation {
       pname = "zlib";
       version = "0.6.1.2";
       sha256 = "1fx2k2qmgm2dj3fkxx2ry945fpdn02d4dkihjxma21xgdiilxsz4";
       libraryHaskellDepends = [ base bytestring ];
       librarySystemDepends = [ zlib ];
       doCheck = false;
       description = "Compression and decompression in the gzip and zlib formats";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) zlib;};
  "zlib-bindings" = callPackage
    ({ mkDerivation, base, bytestring, hspec, QuickCheck, zlib }:
     mkDerivation {
       pname = "zlib-bindings";
       version = "0.1.1.5";
       sha256 = "02ciywlz4wdlymgc3jsnicz9kzvymjw1www2163gxidnz4wb8fy8";
       revision = "2";
       editedCabalFile = "0fq49694gqkab8m0vq4i879blswczwd66n7xh4r4gwiahf0ryvqc";
       libraryHaskellDepends = [ base bytestring zlib ];
       testHaskellDepends = [ base bytestring hspec QuickCheck zlib ];
       homepage = "http://github.com/snapframework/zlib-bindings";
       description = "Low-level bindings to the zlib package";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "zlib-lens" = callPackage
    ({ mkDerivation, base, bytestring, profunctors, zlib }:
     mkDerivation {
       pname = "zlib-lens";
       version = "0.1.2.1";
       sha256 = "1sv6yx7p06zk653d3rmcj0lh2rzwzfi25v9sz9n8kq4r712n79g5";
       libraryHaskellDepends = [ base bytestring profunctors zlib ];
       homepage = "http://lens.github.io/";
       description = "Lenses for zlib";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "zoom-refs" = callPackage
    ({ mkDerivation, base, lens, stm }:
     mkDerivation {
       pname = "zoom-refs";
       version = "0.0.0.1";
       sha256 = "0axkg2cp0gdlf82w0lfff740cd1d5zq4s9rqg0hg9v9vx7ahwg3l";
       libraryHaskellDepends = [ base lens stm ];
       description = "Zoom (~ Functor) and pairing (~ Applicative) for mutable references";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "zot" = callPackage
    ({ mkDerivation, base, monads-tf }:
     mkDerivation {
       pname = "zot";
       version = "0.0.3";
       sha256 = "0cibi8zm9v8vi4i2xdm4kpk1v2kc0sh0fc5ylsn78gwyjcdhkaf8";
       revision = "1";
       editedCabalFile = "04gsbs6fvwpjjg1f6g1j17dxlfzsci9vmirk7mwqwmm9ha0a4hxm";
       isLibrary = false;
       isExecutable = true;
       enableSeparateDataOutput = true;
       executableHaskellDepends = [ base monads-tf ];
       doHaddock = false;
       description = "Zot language";
       license = stdenv.lib.licenses.bsd3;
     }) {};

}
