# Generated by stackage2nix 0.6.0 from "/nix/store/hjyi9jjczpnkmjskxpdrx1bcjrxzm15a-stackage-lts/lts-2.5.yaml"
{ pkgs, stdenv, callPackage }:

self: {
  "AC-Vector" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "AC-Vector";
       version = "2.3.2";
       sha256 = "04ahf6ldfhvzbml9xd6yplygn8ih7b8zz7cw03hkr053g5kzylay";
       libraryHaskellDepends = [ base ];
       description = "Efficient geometric vectors and transformations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "BlastHTTP" = callPackage
    ({ mkDerivation, base, biocore, blastxml, bytestring, conduit, HTTP
     , http-conduit, hxt, mtl, network, transformers
     }:
     mkDerivation {
       pname = "BlastHTTP";
       version = "1.0.1";
       sha256 = "1qxf2lqsbwmfqkzabx8qpavf3da4lq3j1v1rdsv42gl27lqhbayi";
       revision = "2";
       editedCabalFile = "025kaax8mdva3833h9rxbb2qmybiyd33xfnqbhzzzp0zig5yi0p1";
       libraryHaskellDepends = [
         base biocore blastxml bytestring conduit HTTP http-conduit hxt mtl
         network transformers
       ];
       homepage = "https://github.com/eggzilla/BlastHTTP";
       description = "Libary to interface with the NCBI blast REST interface";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "Boolean" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "Boolean";
       version = "0.2.3";
       sha256 = "1lsm06y7hgjp9qmlr6csf24x3wgna7sbf8dgh6sfl2rhs7fn8kgn";
       libraryHaskellDepends = [ base ];
       description = "Generalized booleans and numbers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "BoundedChan" = callPackage
    ({ mkDerivation, array, base }:
     mkDerivation {
       pname = "BoundedChan";
       version = "1.0.3.0";
       sha256 = "0vf4mlw08n056g5256cf46m5xsijng5gvjx7ccm4r132gznyl72k";
       libraryHaskellDepends = [ array base ];
       description = "Implementation of bounded channels";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Cabal-ide-backend" = callPackage
    ({ mkDerivation, array, base, binary, bytestring, Cabal, containers
     , deepseq, directory, extensible-exceptions, filepath, HUnit
     , old-time, pretty, process, QuickCheck, regex-posix
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , time, unix
     }:
     mkDerivation {
       pname = "Cabal-ide-backend";
       version = "1.23.0.0";
       sha256 = "07s9gkq2d4sz8nrjayrnb3gbjm58sp7gfl3hnl8n1gsxsfbl2cgw";
       libraryHaskellDepends = [
         array base binary bytestring containers deepseq directory filepath
         pretty process time unix
       ];
       testHaskellDepends = [
         base bytestring Cabal containers directory extensible-exceptions
         filepath HUnit old-time process QuickCheck regex-posix
         test-framework test-framework-hunit test-framework-quickcheck2 unix
       ];
       doCheck = false;
       homepage = "http://www.haskell.org/cabal/";
       description = "A framework for packaging Haskell software";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Chart" = callPackage
    ({ mkDerivation, array, base, colour, data-default-class, lens, mtl
     , old-locale, operational, time
     }:
     mkDerivation {
       pname = "Chart";
       version = "1.3.3";
       sha256 = "1shq0320mc47kjbfw3vqrmjshb8fd3afd009kqxd8nn9g7m48019";
       libraryHaskellDepends = [
         array base colour data-default-class lens mtl old-locale
         operational time
       ];
       homepage = "https://github.com/timbod7/haskell-chart/wiki";
       description = "A library for generating 2D Charts and Plots";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Chart-diagrams" = callPackage
    ({ mkDerivation, base, blaze-svg, bytestring, Chart, colour
     , containers, data-default-class, diagrams-core, diagrams-lib
     , diagrams-postscript, diagrams-svg, lens, mtl, old-locale
     , operational, SVGFonts, text, time
     }:
     mkDerivation {
       pname = "Chart-diagrams";
       version = "1.3.3";
       sha256 = "1bvlfy2gmv0w99jr32srdvrh7g0fzgvwhmzw8sf2iii12a7xwf56";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base blaze-svg bytestring Chart colour containers
         data-default-class diagrams-core diagrams-lib diagrams-postscript
         diagrams-svg lens mtl old-locale operational SVGFonts text time
       ];
       homepage = "https://github.com/timbod7/haskell-chart/wiki";
       description = "Diagrams backend for Charts";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ChasingBottoms" = callPackage
    ({ mkDerivation, array, base, containers, mtl, QuickCheck, random
     , syb
     }:
     mkDerivation {
       pname = "ChasingBottoms";
       version = "1.3.0.11";
       sha256 = "00z3h4qpy7n9khygwjzn5dziv4fgvgj72fkan3m7f27d2y3cbw4w";
       libraryHaskellDepends = [
         base containers mtl QuickCheck random syb
       ];
       testHaskellDepends = [
         array base containers mtl QuickCheck random syb
       ];
       description = "For testing partial and infinite values";
       license = stdenv.lib.licenses.mit;
     }) {};
  "DAV" = callPackage
    ({ mkDerivation, base, bytestring, case-insensitive, containers
     , data-default, either, errors, exceptions, http-client
     , http-client-tls, http-types, lens, mtl, network, network-uri
     , optparse-applicative, transformers, transformers-base
     , utf8-string, xml-conduit, xml-hamlet
     }:
     mkDerivation {
       pname = "DAV";
       version = "1.0.5";
       sha256 = "0kfbvrkhj7dfk45q3nhpgif2glnf4ng9s5w3ljf0kijh11m39b21";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring case-insensitive containers data-default either
         errors exceptions http-client http-client-tls http-types lens mtl
         transformers transformers-base utf8-string xml-conduit xml-hamlet
       ];
       executableHaskellDepends = [
         base bytestring case-insensitive containers data-default either
         errors exceptions http-client http-client-tls http-types lens mtl
         network network-uri optparse-applicative transformers
         transformers-base utf8-string xml-conduit xml-hamlet
       ];
       homepage = "http://floss.scru.org/hDAV";
       description = "RFC 4918 WebDAV support";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "DRBG" = callPackage
    ({ mkDerivation, base, binary, bytestring, cereal, cipher-aes128
     , crypto-api, crypto-api-tests, cryptohash-cryptoapi, entropy
     , HUnit, mtl, parallel, prettyclass, QuickCheck, tagged
     , test-framework, test-framework-hunit
     }:
     mkDerivation {
       pname = "DRBG";
       version = "0.5.4";
       sha256 = "03nkcrjkaj36bs4sasf1286ca3wam1ndahq3y88bib2q0h5psqdx";
       revision = "1";
       editedCabalFile = "1hbclqgw9bij2h42y6fn312nwvy403ccjrd9gcmghf5514w5fcf3";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base bytestring cereal cipher-aes128 crypto-api
         cryptohash-cryptoapi entropy mtl parallel prettyclass tagged
       ];
       testHaskellDepends = [
         base binary bytestring cereal cipher-aes128 crypto-api
         crypto-api-tests cryptohash-cryptoapi entropy HUnit mtl parallel
         prettyclass QuickCheck tagged test-framework test-framework-hunit
       ];
       doCheck = false;
       description = "Deterministic random bit generator (aka RNG, PRNG) based HMACs, Hashes, and Ciphers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Decimal" = callPackage
    ({ mkDerivation, base, deepseq, HUnit, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "Decimal";
       version = "0.4.2";
       sha256 = "0qa2z2lq1hrvakhyhj624mg8sd05ikhb66zwpa6x9vcyji93dxf5";
       libraryHaskellDepends = [ base deepseq ];
       testHaskellDepends = [
         base deepseq HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       homepage = "https://github.com/PaulJohnson/Haskell-Decimal";
       description = "Decimal numbers with variable precision";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Diff" = callPackage
    ({ mkDerivation, array, base, pretty }:
     mkDerivation {
       pname = "Diff";
       version = "0.3.1";
       sha256 = "10saybbmd3qa4k11g0nqjfja7c87vi540y53j59778y0hhvykfif";
       revision = "1";
       editedCabalFile = "1p1kf8iq4j9v8aihw89ln02q92ipv4pqvdw3lvj939k3m60xs9yl";
       libraryHaskellDepends = [ array base pretty ];
       description = "O(ND) diff algorithm in haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "FenwickTree" = callPackage
    ({ mkDerivation, base, QuickCheck, template-haskell }:
     mkDerivation {
       pname = "FenwickTree";
       version = "0.1.2.1";
       sha256 = "0g7hhkim16wsjf8l79hqkiv1lain6jm8wpiml1iycra3n9i2s5ww";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base QuickCheck template-haskell ];
       testHaskellDepends = [ base QuickCheck template-haskell ];
       homepage = "https://github.com/mgajda/FenwickTree";
       description = "Data structure for fast query and update of cumulative sums";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "FontyFruity" = callPackage
    ({ mkDerivation, base, binary, bytestring, containers, deepseq
     , directory, filepath, text, vector
     }:
     mkDerivation {
       pname = "FontyFruity";
       version = "0.5.1.1";
       sha256 = "064c9qq82r2kmsabciigyzp04hjqmpnc52xfshgiy77jq7k0jk2y";
       libraryHaskellDepends = [
         base binary bytestring containers deepseq directory filepath text
         vector
       ];
       description = "A true type file format loader";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "GLURaw" = callPackage
    ({ mkDerivation, base, freeglut, mesa, OpenGLRaw, transformers }:
     mkDerivation {
       pname = "GLURaw";
       version = "1.5.0.0";
       sha256 = "1y3qbq1qaxnylrb86all96xdja1d62adilyyky0glsbl9dqnzr4j";
       libraryHaskellDepends = [ base OpenGLRaw transformers ];
       librarySystemDepends = [ freeglut mesa ];
       homepage = "http://www.haskell.org/haskellwiki/Opengl";
       description = "A raw binding for the OpenGL graphics system";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) freeglut; inherit (pkgs) mesa;};
  "GLUT" = callPackage
    ({ mkDerivation, array, base, containers, freeglut, mesa, OpenGL
     , OpenGLRaw, StateVar, transformers
     }:
     mkDerivation {
       pname = "GLUT";
       version = "2.7.0.0";
       sha256 = "02y565fdfsl7pwl1wmyk5dma9ipc3l0yz7kwcgkvbzvqajhdg13d";
       libraryHaskellDepends = [
         array base containers OpenGL OpenGLRaw StateVar transformers
       ];
       librarySystemDepends = [ freeglut mesa ];
       homepage = "http://www.haskell.org/haskellwiki/Opengl";
       description = "A binding for the OpenGL Utility Toolkit";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) freeglut; inherit (pkgs) mesa;};
  "GenericPretty" = callPackage
    ({ mkDerivation, base, ghc-prim, pretty }:
     mkDerivation {
       pname = "GenericPretty";
       version = "1.2.1";
       sha256 = "0bb70mic7srr7x8k83d1i0m0a32gm72zr78ccdf3ckchj9136php";
       libraryHaskellDepends = [ base ghc-prim pretty ];
       homepage = "https://github.com/RazvanRanca/GenericPretty";
       description = "A generic, derivable, haskell pretty printer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Glob" = callPackage
    ({ mkDerivation, base, containers, directory, dlist, filepath
     , transformers
     }:
     mkDerivation {
       pname = "Glob";
       version = "0.7.5";
       sha256 = "0hdyi49zp2yr4h4wgngl8ajrss1p309c3pn0alj543yrh33bnqq0";
       revision = "1";
       editedCabalFile = "16whzn47hxs8miihs3iplc2dh33z07v44ln7kav2m75g3aprr6r1";
       libraryHaskellDepends = [
         base containers directory dlist filepath transformers
       ];
       homepage = "http://iki.fi/matti.niemenmaa/glob/";
       description = "Globbing library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "GraphSCC" = callPackage
    ({ mkDerivation, array, base, containers }:
     mkDerivation {
       pname = "GraphSCC";
       version = "1.0.4";
       sha256 = "1wbcx3wb02adb7l4nchxla3laliz0h5q074vfw4z0ic833k977bq";
       libraryHaskellDepends = [ array base containers ];
       description = "Tarjan's algorithm for computing the strongly connected components of a graph";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "HCodecs" = callPackage
    ({ mkDerivation, array, base, bytestring, QuickCheck, random }:
     mkDerivation {
       pname = "HCodecs";
       version = "0.5";
       sha256 = "0mhp1alx0p9lzq3vm0k802f8ndm2386sshprn9zb8xq8bsd11gxi";
       libraryHaskellDepends = [
         array base bytestring QuickCheck random
       ];
       testHaskellDepends = [ array base bytestring QuickCheck random ];
       homepage = "http://www-db.informatik.uni-tuebingen.de/team/giorgidze";
       description = "A library to read, write and manipulate MIDI, WAVE, and SoundFont2 files";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "HStringTemplate" = callPackage
    ({ mkDerivation, array, base, blaze-builder, bytestring, containers
     , deepseq, directory, filepath, mtl, old-locale, parsec, pretty
     , syb, template-haskell, text, time, void
     }:
     mkDerivation {
       pname = "HStringTemplate";
       version = "0.8.3";
       sha256 = "064x4d9vhzln1c8ka3saqdz6a8skn3xbhaxrf3rjwqgmjg4v3mk3";
       revision = "1";
       editedCabalFile = "0243s4vxzc7z9n21f1dxgb2scra5mbl8p1pligd1yl3vvq0z4cz3";
       libraryHaskellDepends = [
         array base blaze-builder bytestring containers deepseq directory
         filepath mtl old-locale parsec pretty syb template-haskell text
         time void
       ];
       description = "StringTemplate implementation in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "HTF" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, array, base
     , base64-bytestring, bytestring, containers, cpphs, Diff, directory
     , filepath, haskell-lexer, haskell-src, HUnit, lifted-base
     , monad-control, mtl, old-time, pretty, process, QuickCheck, random
     , regex-compat, temporary, text, time, unix, unordered-containers
     , vector, xmlgen
     }:
     mkDerivation {
       pname = "HTF";
       version = "0.12.2.4";
       sha256 = "0f538wqihj8i1ys3aciz7n1asxvg73bm9zg0p8qazzx9ghpcgy6m";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson array base base64-bytestring bytestring containers cpphs Diff
         directory haskell-lexer haskell-src HUnit lifted-base monad-control
         mtl old-time pretty process QuickCheck random regex-compat text
         time unix vector xmlgen
       ];
       executableHaskellDepends = [
         array base cpphs directory haskell-lexer HUnit mtl old-time random
         text
       ];
       testHaskellDepends = [
         aeson aeson-pretty base bytestring directory filepath HUnit mtl
         process random regex-compat temporary text unordered-containers
       ];
       doCheck = false;
       homepage = "https://github.com/skogsbaer/HTF/";
       description = "The Haskell Test Framework";
       license = "LGPL";
     }) {};
  "HTTP" = callPackage
    ({ mkDerivation, array, base, bytestring, mtl, network, network-uri
     , old-time, parsec
     }:
     mkDerivation {
       pname = "HTTP";
       version = "4000.2.19";
       sha256 = "1yzm8gimh8g0wwbixcbxg60v4l3vgi63w9v55ms0x9qnm6vrgysz";
       libraryHaskellDepends = [
         array base bytestring mtl network network-uri old-time parsec
       ];
       doCheck = false;
       homepage = "https://github.com/haskell/HTTP";
       description = "A library for client-side HTTP";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "HUnit" = callPackage
    ({ mkDerivation, base, deepseq }:
     mkDerivation {
       pname = "HUnit";
       version = "1.2.5.2";
       sha256 = "0hcs6qh8bqhip1kkjjnw7ccgcsmawdz5yvffjj5y8zd2vcsavx8a";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base deepseq ];
       homepage = "http://hunit.sourceforge.net/";
       description = "A unit testing framework for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "HaTeX" = callPackage
    ({ mkDerivation, base, bytestring, containers, matrix, parsec
     , QuickCheck, tasty, tasty-quickcheck, text, transformers
     , wl-pprint-extras
     }:
     mkDerivation {
       pname = "HaTeX";
       version = "3.16.1.1";
       sha256 = "0xi89wclnkrl17jl3ymvsvg802aj201m4lp0rg9adgmrrdgz042p";
       libraryHaskellDepends = [
         base bytestring containers matrix parsec QuickCheck text
         transformers wl-pprint-extras
       ];
       testHaskellDepends = [
         base QuickCheck tasty tasty-quickcheck text
       ];
       homepage = "http://wrongurl.net/haskell/HaTeX";
       description = "The Haskell LaTeX library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "HaXml" = callPackage
    ({ mkDerivation, base, bytestring, containers, directory, filepath
     , polyparse, pretty, random
     }:
     mkDerivation {
       pname = "HaXml";
       version = "1.25.3";
       sha256 = "1iq74dnxvannx9x1whqc3ixn93r4v5z7b4yv21n9q5963kpafj34";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring containers filepath polyparse pretty random
       ];
       executableHaskellDepends = [ base directory polyparse pretty ];
       homepage = "http://projects.haskell.org/HaXml/";
       description = "Utilities for manipulating XML documents";
       license = "LGPL";
     }) {};
  "HandsomeSoup" = callPackage
    ({ mkDerivation, base, containers, hspec, HTTP, hxt, hxt-http
     , MaybeT, mtl, network, network-uri, parsec, transformers
     }:
     mkDerivation {
       pname = "HandsomeSoup";
       version = "0.3.5";
       sha256 = "1d1zanlr1mdxjc69xvbxg5kn5bc08gd960j6lb1x3grhcgmj9krm";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base containers HTTP hxt hxt-http MaybeT mtl network network-uri
         parsec transformers
       ];
       executableHaskellDepends = [ base hxt ];
       testHaskellDepends = [ base hspec hxt ];
       homepage = "https://github.com/egonSchiele/HandsomeSoup";
       description = "Work with HTML more easily in HXT";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "HaskellNet" = callPackage
    ({ mkDerivation, array, base, base64-string, bytestring, cryptohash
     , mime-mail, mtl, network, old-time, pretty, text
     }:
     mkDerivation {
       pname = "HaskellNet";
       version = "0.4.4";
       sha256 = "0df5q28y1x5irnzm5ma65b6ny6dds0375bzj6xczsw6xrlxaj3br";
       libraryHaskellDepends = [
         array base base64-string bytestring cryptohash mime-mail mtl
         network old-time pretty text
       ];
       homepage = "https://github.com/jtdaugherty/HaskellNet";
       description = "Client support for POP3, SMTP, and IMAP";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "HsOpenSSL" = callPackage
    ({ mkDerivation, base, bytestring, HUnit, integer-gmp, network
     , old-locale, openssl, test-framework, test-framework-hunit, time
     }:
     mkDerivation {
       pname = "HsOpenSSL";
       version = "0.11.1.1";
       sha256 = "1hf4xgc2488hm0y9isrl7mxlacf1iazb6h1l1wz8dab8x5sf0qaa";
       revision = "1";
       editedCabalFile = "0pwsvgw7jnqmv3cjsm8a028nns0ziw5x3clgrqpbrpdpglkiqddy";
       libraryHaskellDepends = [
         base bytestring integer-gmp network old-locale time
       ];
       librarySystemDepends = [ openssl ];
       testHaskellDepends = [
         base bytestring HUnit test-framework test-framework-hunit
       ];
       homepage = "https://github.com/phonohawk/HsOpenSSL";
       description = "Partial OpenSSL binding for Haskell";
       license = stdenv.lib.licenses.publicDomain;
     }) {inherit (pkgs) openssl;};
  "IfElse" = callPackage
    ({ mkDerivation, base, mtl }:
     mkDerivation {
       pname = "IfElse";
       version = "0.85";
       sha256 = "1kfx1bwfjczj93a8yqz1n8snqiq5655qgzwv1lrycry8wb1vzlwa";
       libraryHaskellDepends = [ base mtl ];
       description = "Anaphoric and miscellaneous useful control-flow";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "JuicyPixels" = callPackage
    ({ mkDerivation, base, binary, bytestring, containers, deepseq, mtl
     , primitive, transformers, vector, zlib
     }:
     mkDerivation {
       pname = "JuicyPixels";
       version = "3.2.4";
       sha256 = "113w66rd6h04x0zbkqh34x33pf15hmrn3l9yy8kirs55kbg266w0";
       revision = "1";
       editedCabalFile = "0ayw34wjw3vslwzwsd1vinzlyrd9nfawk3zrw0dmzv7g5mmxx9hf";
       libraryHaskellDepends = [
         base binary bytestring containers deepseq mtl primitive
         transformers vector zlib
       ];
       homepage = "https://github.com/Twinside/Juicy.Pixels";
       description = "Picture loading/serialization (in png, jpeg, bitmap, gif, tga, tiff and radiance)";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "JuicyPixels-repa" = callPackage
    ({ mkDerivation, base, bytestring, JuicyPixels, repa, vector }:
     mkDerivation {
       pname = "JuicyPixels-repa";
       version = "0.7";
       sha256 = "0fn9i3w8s2ifyg0zsdryyw1nm0c5ybaq0c6jxcggs79x0ngi0mm5";
       revision = "1";
       editedCabalFile = "1a4879p2wnb4parg8zax1cwcxrpcpfp349qxf9bn0l0bwvdddp5h";
       libraryHaskellDepends = [
         base bytestring JuicyPixels repa vector
       ];
       description = "Convenience functions to obtain array representations of images";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "List" = callPackage
    ({ mkDerivation, base, transformers }:
     mkDerivation {
       pname = "List";
       version = "0.5.2";
       sha256 = "1b7ar17d2sq6ibgbiqbsrhk2zlxcxiwfv2xsfbya5hs8nflzkp97";
       libraryHaskellDepends = [ base transformers ];
       homepage = "http://github.com/yairchu/generator/tree";
       description = "List monad transformer and class";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ListLike" = callPackage
    ({ mkDerivation, array, base, bytestring, containers, dlist, fmlist
     , HUnit, QuickCheck, random, text, vector
     }:
     mkDerivation {
       pname = "ListLike";
       version = "4.2.0";
       sha256 = "1ih0kjr3n576l6abasa8pnjajml27rj8h7nx3kqv2fdm7l6lk6zg";
       libraryHaskellDepends = [
         array base bytestring containers dlist fmlist text vector
       ];
       testHaskellDepends = [
         array base bytestring containers dlist fmlist HUnit QuickCheck
         random text vector
       ];
       homepage = "http://software.complete.org/listlike";
       description = "Generic support for list-like structures";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "MFlow" = callPackage
    ({ mkDerivation, base, blaze-html, blaze-markup, bytestring
     , case-insensitive, clientsession, conduit, conduit-extra
     , containers, cpphs, directory, extensible-exceptions, http-types
     , monadloc, mtl, old-time, parsec, pwstore-fast, random
     , RefSerialize, resourcet, stm, TCache, text, time, transformers
     , utf8-string, vector, wai, wai-extra, warp, warp-tls, Workflow
     }:
     mkDerivation {
       pname = "MFlow";
       version = "0.4.5.9";
       sha256 = "0mqsyx7wkfgvpppqgpjpvzwx79vj7lh4c8afzzj1hgh8z0ilb4ik";
       libraryHaskellDepends = [
         base blaze-html blaze-markup bytestring case-insensitive
         clientsession conduit conduit-extra containers directory
         extensible-exceptions http-types monadloc mtl old-time parsec
         pwstore-fast random RefSerialize resourcet stm TCache text time
         transformers utf8-string vector wai wai-extra warp warp-tls
         Workflow
       ];
       libraryToolDepends = [ cpphs ];
       description = "stateful, RESTful web framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "MaybeT" = callPackage
    ({ mkDerivation, base, mtl }:
     mkDerivation {
       pname = "MaybeT";
       version = "0.1.2";
       sha256 = "0cmnfs22ldai0z172rdsvryzsh33a70yax21v03nhr92a4b62plr";
       revision = "1";
       editedCabalFile = "1045p10l7smabidysk52m16sgqgfpa70ny8nwyn56238i02cd7ir";
       libraryHaskellDepends = [ base mtl ];
       description = "MaybeT monad transformer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "MemoTrie" = callPackage
    ({ mkDerivation, base, void }:
     mkDerivation {
       pname = "MemoTrie";
       version = "0.6.2";
       sha256 = "1g4b82s30bqkfids3iywf873nyn8h7l8rp8l3xl58smj5lbi3p4x";
       revision = "1";
       editedCabalFile = "0n0k85vvn423nkbjq3q23lzxbam9pvqj9fgby1n8bnp386v4gb2a";
       libraryHaskellDepends = [ base void ];
       homepage = "http://haskell.org/haskellwiki/MemoTrie";
       description = "Trie-based memo functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "MissingH" = callPackage
    ({ mkDerivation, array, base, containers, directory
     , errorcall-eq-instance, filepath, hslogger, HUnit, mtl, network
     , old-locale, old-time, parsec, process, QuickCheck, random
     , regex-compat, testpack, time, unix
     }:
     mkDerivation {
       pname = "MissingH";
       version = "1.3.0.1";
       sha256 = "1cwdhgqqv2riqwhsgyrpmqyzvg19lx6zp1g7xdp4rikh7rkn03ds";
       revision = "1";
       editedCabalFile = "181ql081aw6j27c2192hb56clsp60gfa0gn4km58qvps3v7gjysx";
       libraryHaskellDepends = [
         array base containers directory filepath hslogger HUnit mtl network
         old-locale old-time parsec process random regex-compat time unix
       ];
       testHaskellDepends = [
         array base containers directory errorcall-eq-instance filepath
         hslogger HUnit mtl network old-locale old-time parsec process
         QuickCheck random regex-compat testpack time unix
       ];
       homepage = "http://software.complete.org/missingh";
       description = "Large utility library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "MonadCatchIO-transformers" = callPackage
    ({ mkDerivation, base, extensible-exceptions, monads-tf
     , transformers
     }:
     mkDerivation {
       pname = "MonadCatchIO-transformers";
       version = "0.3.1.3";
       sha256 = "1g840h7whsvgyrh4v58mdmsb7hinq785irbz6x9y08r1q8r9r90h";
       libraryHaskellDepends = [
         base extensible-exceptions monads-tf transformers
       ];
       description = "Monad-transformer compatible version of the Control.Exception module";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "MonadPrompt" = callPackage
    ({ mkDerivation, base, mtl }:
     mkDerivation {
       pname = "MonadPrompt";
       version = "1.0.0.5";
       sha256 = "1nmy7dfzrkd8yfv5i9vlmjq9khnyi76ayvkzgcf783v5hfzcn4mh";
       libraryHaskellDepends = [ base mtl ];
       description = "MonadPrompt, implementation & examples";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "MonadRandom" = callPackage
    ({ mkDerivation, base, mtl, random, transformers
     , transformers-compat
     }:
     mkDerivation {
       pname = "MonadRandom";
       version = "0.3.0.2";
       sha256 = "18gajibgypy8hl0slh3lyjjwqqkayxrk7vwwk26nfdkq9yixxbvi";
       revision = "2";
       editedCabalFile = "1wnawbg1fbcc6y10swd5adbn4qyir15bsjcd5sj8kgqg06psklrm";
       libraryHaskellDepends = [
         base mtl random transformers transformers-compat
       ];
       description = "Random-number generation monad";
       license = "unknown";
     }) {};
  "MusicBrainz" = callPackage
    ({ mkDerivation, aeson, base, bytestring, conduit, conduit-extra
     , HTTP, http-conduit, http-types, monad-control, old-locale
     , resourcet, text, time, transformers, vector, xml-conduit
     , xml-types
     }:
     mkDerivation {
       pname = "MusicBrainz";
       version = "0.2.3";
       sha256 = "0xwyrjxrff38ijyppfbxsr2nbhg6zd7k0i2avch10dn15xfxapk8";
       revision = "1";
       editedCabalFile = "1ja0ms3vf3vnh67sli2hmp7saz0627zd8bc5zwr1vgm31kls6r7k";
       libraryHaskellDepends = [
         aeson base bytestring conduit conduit-extra HTTP http-conduit
         http-types monad-control old-locale resourcet text time
         transformers vector xml-conduit xml-types
       ];
       homepage = "http://floss.scru.org/hMusicBrainz";
       description = "interface to MusicBrainz XML2 web service";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "NumInstances" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "NumInstances";
       version = "1.4";
       sha256 = "0ycnwn09izajv330l7a31mc0alifqmxjsn9qmfswwnbg6i4jmnyb";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/conal/NumInstances";
       description = "Instances of numeric classes for functions and tuples";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ObjectName" = callPackage
    ({ mkDerivation, base, transformers }:
     mkDerivation {
       pname = "ObjectName";
       version = "1.1.0.0";
       sha256 = "0kh5fb9ykag6rfsm3f0bx3w323s18w2cyry34w5xgli5ncqimadg";
       libraryHaskellDepends = [ base transformers ];
       homepage = "https://github.com/svenpanne/ObjectName";
       description = "Explicitly handled object names";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Octree" = callPackage
    ({ mkDerivation, AC-Vector, base, QuickCheck }:
     mkDerivation {
       pname = "Octree";
       version = "0.5.4.2";
       sha256 = "0q07jylv5ggvnp32h3b63pk1rcvvxh7bzi3dyx4ga2s0zwfaq1q2";
       libraryHaskellDepends = [ AC-Vector base QuickCheck ];
       doCheck = false;
       homepage = "https://github.com/mgajda/octree";
       description = "Simple unbalanced Octree for storing data about 3D points";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "OneTuple" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "OneTuple";
       version = "0.2.1";
       sha256 = "1x52b68zh3k9lnps5s87kzan7dzvqp6mrwgayjq15w9dv6v78vsb";
       libraryHaskellDepends = [ base ];
       description = "Singleton Tuple";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "OpenGL" = callPackage
    ({ mkDerivation, base, bytestring, GLURaw, ObjectName, OpenGLRaw
     , StateVar, text, transformers
     }:
     mkDerivation {
       pname = "OpenGL";
       version = "2.12.0.0";
       sha256 = "0f5s6b1mv3hm6xnansv0jsxahn8acc8nmr9754fx5b44bn1s6iqy";
       libraryHaskellDepends = [
         base bytestring GLURaw ObjectName OpenGLRaw StateVar text
         transformers
       ];
       homepage = "http://www.haskell.org/haskellwiki/Opengl";
       description = "A binding for the OpenGL graphics system";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "OpenGLRaw" = callPackage
    ({ mkDerivation, base, mesa, transformers }:
     mkDerivation {
       pname = "OpenGLRaw";
       version = "2.4.1.0";
       sha256 = "0xikg3jvmh1q514r2vnabw6d481h4qj93zpkp157wd155c7b0vjl";
       libraryHaskellDepends = [ base transformers ];
       librarySystemDepends = [ mesa ];
       homepage = "http://www.haskell.org/haskellwiki/Opengl";
       description = "A raw binding for the OpenGL graphics system";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) mesa;};
  "PSQueue" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "PSQueue";
       version = "1.1";
       sha256 = "1k291bh8j5vpcrn6vycww2blwg7jxx9yrfmrqdanz48gs4d8gq58";
       libraryHaskellDepends = [ base ];
       description = "Priority Search Queue";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "QuasiText" = callPackage
    ({ mkDerivation, attoparsec, base, haskell-src-meta
     , template-haskell, text
     }:
     mkDerivation {
       pname = "QuasiText";
       version = "0.1.2.5";
       sha256 = "10y2lirprxyh9m47qxq0plihc22xvmkhq6lfbx3i19vfvkbhnbwx";
       libraryHaskellDepends = [
         attoparsec base haskell-src-meta template-haskell text
       ];
       homepage = "https://github.com/mikeplus64/QuasiText";
       description = "A QuasiQuoter for Text";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "QuickCheck" = callPackage
    ({ mkDerivation, base, random, template-haskell, test-framework
     , tf-random, transformers
     }:
     mkDerivation {
       pname = "QuickCheck";
       version = "2.7.6";
       sha256 = "09y5l0062l9i5jp9v6811kvkk4zpy0mizwaw44abgz0x1h59gn40";
       revision = "1";
       editedCabalFile = "0d9hr7kwpg9akdhzypds22l3wslxnkb2ipns3821c1nailrldzs5";
       libraryHaskellDepends = [
         base random template-haskell tf-random transformers
       ];
       testHaskellDepends = [ base template-haskell test-framework ];
       homepage = "https://github.com/nick8325/quickcheck";
       description = "Automatic testing of Haskell programs";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "RSA" = callPackage
    ({ mkDerivation, base, binary, bytestring, crypto-api
     , crypto-pubkey-types, DRBG, pureMD5, QuickCheck, SHA, tagged
     , test-framework, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "RSA";
       version = "2.1.0.1";
       sha256 = "0m74683bm34zd5r46ndb1h8jx1xp8wypfqm0gi3zmrv1rmm0j0hv";
       libraryHaskellDepends = [
         base binary bytestring crypto-api crypto-pubkey-types pureMD5 SHA
       ];
       testHaskellDepends = [
         base binary bytestring crypto-api crypto-pubkey-types DRBG pureMD5
         QuickCheck SHA tagged test-framework test-framework-quickcheck2
       ];
       description = "Implementation of RSA, using the padding schemes of PKCS#1 v2.1.";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Rasterific" = callPackage
    ({ mkDerivation, base, dlist, FontyFruity, free, JuicyPixels, mtl
     , primitive, vector, vector-algorithms
     }:
     mkDerivation {
       pname = "Rasterific";
       version = "0.5.2.1";
       sha256 = "1wd12l4vpav3jsjf2mib5yrblys5aifwq6xniqm4l92qs5vjh4a2";
       libraryHaskellDepends = [
         base dlist FontyFruity free JuicyPixels mtl primitive vector
         vector-algorithms
       ];
       doCheck = false;
       description = "A pure haskell drawing engine";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ReadArgs" = callPackage
    ({ mkDerivation, base, system-filepath, text }:
     mkDerivation {
       pname = "ReadArgs";
       version = "1.2.2";
       sha256 = "1v6yr5zzrrj31prfzxxh1n27sfnkqpkw34v3a47rcnm444ba58a7";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base system-filepath text ];
       executableHaskellDepends = [ base system-filepath text ];
       doCheck = false;
       homepage = "http://github.com/rampion/ReadArgs";
       description = "Simple command line argument parsing";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "RefSerialize" = callPackage
    ({ mkDerivation, base, binary, bytestring, containers, hashtables
     , stringsearch
     }:
     mkDerivation {
       pname = "RefSerialize";
       version = "0.3.1.4";
       sha256 = "1hl1jxdarqp59fs1sjvxpyhcazrnlm4iywysgkf3iqm56jfp2f6w";
       libraryHaskellDepends = [
         base binary bytestring containers hashtables stringsearch
       ];
       description = "Write to and read from ByteStrings maintaining internal memory references";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "SHA" = callPackage
    ({ mkDerivation, array, base, binary, bytestring, directory
     , QuickCheck, test-framework, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "SHA";
       version = "1.6.4.2";
       sha256 = "134ajm87fm4lpsw86m9q8apv20dw4bpk46raa389zr6bcdpifw64";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ array base binary bytestring ];
       executableHaskellDepends = [ base bytestring directory ];
       testHaskellDepends = [
         array base binary bytestring QuickCheck test-framework
         test-framework-quickcheck2
       ];
       description = "Implementations of the SHA suite of message digest functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "SVGFonts" = callPackage
    ({ mkDerivation, attoparsec, base, blaze-markup, blaze-svg
     , containers, data-default-class, diagrams-lib, directory, parsec
     , split, text, tuple, vector, vector-space, xml
     }:
     mkDerivation {
       pname = "SVGFonts";
       version = "1.4.0.3";
       sha256 = "0jkjcf27xqjzv9lny7j181kcma26wngrq3vzw2sp2hwkdcjryyin";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         attoparsec base blaze-markup blaze-svg containers
         data-default-class diagrams-lib directory parsec split text tuple
         vector vector-space xml
       ];
       description = "Fonts from the SVG-Font format";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Spock" = callPackage
    ({ mkDerivation, aeson, base, base64-bytestring, bytestring
     , case-insensitive, containers, directory, hashable, hspec
     , hspec-wai, http-types, monad-control, mtl, old-locale
     , path-pieces, random, reroute, resource-pool, resourcet, stm, text
     , time, transformers, transformers-base, unordered-containers
     , vault, wai, wai-extra, warp
     }:
     mkDerivation {
       pname = "Spock";
       version = "0.7.9.0";
       sha256 = "1dlpirivgiqihj9fxvm8yry7d3yiprjn85fbl1w6dqvq4fdsjv9x";
       libraryHaskellDepends = [
         aeson base base64-bytestring bytestring case-insensitive containers
         directory hashable http-types monad-control mtl old-locale
         path-pieces random reroute resource-pool resourcet stm text time
         transformers transformers-base unordered-containers vault wai
         wai-extra warp
       ];
       testHaskellDepends = [
         base hspec hspec-wai http-types reroute text wai
       ];
       benchmarkHaskellDepends = [ base ];
       homepage = "http://www.spock.li";
       description = "Another Haskell web framework for rapid development";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Spock-digestive" = callPackage
    ({ mkDerivation, base, digestive-functors, http-types, mtl, Spock
     , text, unordered-containers, wai
     }:
     mkDerivation {
       pname = "Spock-digestive";
       version = "0.1.0.0";
       sha256 = "044cw2hfgwa21kjbmby5asfmdjahhadk8iyqk221pixddw7z6s67";
       libraryHaskellDepends = [
         base digestive-functors http-types mtl Spock text
         unordered-containers wai
       ];
       homepage = "https://github.com/agrafix/Spock-digestive";
       description = "Digestive functors support for Spock";
       license = stdenv.lib.licenses.mit;
     }) {};
  "Spock-worker" = callPackage
    ({ mkDerivation, base, containers, HTF, lifted-base, mtl, Spock
     , stm, text, time, transformers, vector
     }:
     mkDerivation {
       pname = "Spock-worker";
       version = "0.2.1.3";
       sha256 = "0pxh7ccqb6xpab0807vsfb65lk4bafa44fram1f4d84slggyn1a1";
       libraryHaskellDepends = [
         base containers lifted-base mtl Spock stm text time transformers
         vector
       ];
       testHaskellDepends = [ base containers HTF stm vector ];
       homepage = "http://github.com/agrafix/Spock-worker";
       description = "Background workers for Spock";
       license = stdenv.lib.licenses.mit;
     }) {};
  "StateVar" = callPackage
    ({ mkDerivation, base, stm, transformers }:
     mkDerivation {
       pname = "StateVar";
       version = "1.1.0.0";
       sha256 = "0zixg7wzqvllxrlxhlqfchxfbpridckfam1wb81n6lfl2kq676d1";
       libraryHaskellDepends = [ base stm transformers ];
       homepage = "https://github.com/haskell-opengl/StateVar";
       description = "State variables";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "TCache" = callPackage
    ({ mkDerivation, base, bytestring, containers, directory
     , hashtables, mtl, old-time, RefSerialize, stm, text
     }:
     mkDerivation {
       pname = "TCache";
       version = "0.12.0";
       sha256 = "0marslz5jg66r3i2d0yjjrj11bpywpadcxs5k4j6782iczxybd7s";
       libraryHaskellDepends = [
         base bytestring containers directory hashtables mtl old-time
         RefSerialize stm text
       ];
       description = "A Transactional cache with user-defined persistence";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Workflow" = callPackage
    ({ mkDerivation, base, binary, bytestring, containers, directory
     , exceptions, extensible-exceptions, mtl, old-time, RefSerialize
     , stm, TCache, vector
     }:
     mkDerivation {
       pname = "Workflow";
       version = "0.8.1";
       sha256 = "0z23g68gcbbn43i78cql4is9js3m4z16rm2x8s57f73n0hx7f00l";
       libraryHaskellDepends = [
         base binary bytestring containers directory exceptions
         extensible-exceptions mtl old-time RefSerialize stm TCache vector
       ];
       description = "Workflow patterns over a monad for thread state logging & recovery";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "X11" = callPackage
    ({ mkDerivation, base, data-default, libX11, libXext, libXinerama
     , libXrandr, libXrender
     }:
     mkDerivation {
       pname = "X11";
       version = "1.6.1.2";
       sha256 = "1kzjcynm3rr83ihqx2y2d852jc49da4p18gv6jzm7g87z22x85jj";
       libraryHaskellDepends = [ base data-default ];
       librarySystemDepends = [
         libX11 libXext libXinerama libXrandr libXrender
       ];
       homepage = "https://github.com/haskell-pkg-janitors/X11";
       description = "A binding to the X11 graphics library";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs.xorg) libX11; inherit (pkgs.xorg) libXext;
         inherit (pkgs.xorg) libXinerama; inherit (pkgs.xorg) libXrandr;
         inherit (pkgs.xorg) libXrender;};
  "Yampa" = callPackage
    ({ mkDerivation, base, random }:
     mkDerivation {
       pname = "Yampa";
       version = "0.9.6.1";
       sha256 = "14nssljqgpirdjl6rxb1x4xxl6rpq2rhldhcvsvc0qx31mb01df1";
       libraryHaskellDepends = [ base random ];
       homepage = "http://www.haskell.org/haskellwiki/Yampa";
       description = "Library for programming hybrid systems";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "YampaSynth" = callPackage
    ({ mkDerivation, array, base, bytestring, containers, HCodecs
     , Yampa
     }:
     mkDerivation {
       pname = "YampaSynth";
       version = "0.2";
       sha256 = "028a7lrfyikvky52s19kffssnry1grnip3sm7z55bs5fazma1im1";
       isLibrary = false;
       isExecutable = true;
       enableSeparateDataOutput = true;
       executableHaskellDepends = [
         array base bytestring containers HCodecs Yampa
       ];
       doHaddock = false;
       homepage = "http://www-db.informatik.uni-tuebingen.de/team/giorgidze";
       description = "Software synthesizer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "abstract-deque" = callPackage
    ({ mkDerivation, array, base, containers, random, time }:
     mkDerivation {
       pname = "abstract-deque";
       version = "0.3";
       sha256 = "18jwswjxwzc9bjiy4ds6hw2a74ki797jmfcifxd2ga4kh7ri1ah9";
       libraryHaskellDepends = [ array base containers random time ];
       homepage = "https://github.com/rrnewton/haskell-lockfree/wiki";
       description = "Abstract, parameterized interface to mutable Deques";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "abstract-par" = callPackage
    ({ mkDerivation, base, deepseq }:
     mkDerivation {
       pname = "abstract-par";
       version = "0.3.3";
       sha256 = "0q6qsniw4wks2pw6wzncb1p1j3k6al5njnvm2v5n494hplwqg2i4";
       libraryHaskellDepends = [ base deepseq ];
       homepage = "https://github.com/simonmar/monad-par";
       description = "Type classes generalizing the functionality of the 'monad-par' library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "accelerate" = callPackage
    ({ mkDerivation, array, base, containers, fclabels, ghc-prim
     , hashable, hashtables, pretty, template-haskell
     , unordered-containers
     }:
     mkDerivation {
       pname = "accelerate";
       version = "0.15.0.0";
       sha256 = "1hi3zm1swm9fank9w98009pwcgccw6w2j2ilb970sbxyb0xf8nps";
       revision = "2";
       editedCabalFile = "0k6damdq8kjxlscrc7rbbag0a05q9vjiyx86rda5lnfvgxya9klq";
       libraryHaskellDepends = [
         array base containers fclabels ghc-prim hashable hashtables pretty
         template-haskell unordered-containers
       ];
       homepage = "https://github.com/AccelerateHS/accelerate/";
       description = "An embedded language for accelerated array processing";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ace" = callPackage
    ({ mkDerivation, attoparsec, base, bifunctors, blaze-html
     , blaze-markup, data-default, hspec, HUnit, mtl, parsec, text
     }:
     mkDerivation {
       pname = "ace";
       version = "0.6";
       sha256 = "0f07j2rj9ylvdrijwwlpx66mj503mhjfq1x2mylpxkr6kmjjniyk";
       libraryHaskellDepends = [
         attoparsec base blaze-html blaze-markup data-default parsec text
       ];
       testHaskellDepends = [
         base bifunctors hspec HUnit mtl parsec text
       ];
       description = "Attempto Controlled English parser and printer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "action-permutations" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "action-permutations";
       version = "0.0.0.1";
       sha256 = "0rhlzpwshixpnqma7sk28f22dkwz39b6lcwnzmd31rcnz5cyw6d4";
       libraryHaskellDepends = [ base ];
       description = "Execute a set of actions (e.g. parsers) in each possible order";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "active" = callPackage
    ({ mkDerivation, array, base, newtype, QuickCheck, semigroupoids
     , semigroups, vector-space
     }:
     mkDerivation {
       pname = "active";
       version = "0.1.0.19";
       sha256 = "1zzzrjpfwxzf0zbz8vcnpfqi7djvrfxglhkvw1s6yj5gcblg2rcw";
       libraryHaskellDepends = [
         array base newtype semigroupoids semigroups vector-space
       ];
       testHaskellDepends = [
         array base newtype QuickCheck semigroupoids semigroups vector-space
       ];
       description = "Abstractions for animation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ad" = callPackage
    ({ mkDerivation, array, base, comonad, containers, criterion
     , data-reify, directory, doctest, erf, filepath, free, nats
     , reflection, transformers
     }:
     mkDerivation {
       pname = "ad";
       version = "4.2.1.1";
       sha256 = "1zdpfh4k93ygrm91m7lw1la6n4yvaq3k2sqswgia04naf2wcmjka";
       libraryHaskellDepends = [
         array base comonad containers data-reify erf free nats reflection
         transformers
       ];
       testHaskellDepends = [ base directory doctest filepath ];
       benchmarkHaskellDepends = [ base criterion erf ];
       homepage = "http://github.com/ekmett/ad";
       description = "Automatic Differentiation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "adjunctions" = callPackage
    ({ mkDerivation, array, base, comonad, containers, contravariant
     , distributive, free, mtl, profunctors, semigroupoids, semigroups
     , tagged, transformers, void
     }:
     mkDerivation {
       pname = "adjunctions";
       version = "4.2";
       sha256 = "07r56r6kyd6wlcxxnsnnyv59pyc8s1gsy54kzwmk9yknks5rij9i";
       libraryHaskellDepends = [
         array base comonad containers contravariant distributive free mtl
         profunctors semigroupoids semigroups tagged transformers void
       ];
       homepage = "http://github.com/ekmett/adjunctions/";
       description = "Adjunctions and representable functors";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "aeson" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, containers, deepseq
     , dlist, ghc-prim, hashable, HUnit, mtl, old-locale, QuickCheck
     , scientific, syb, template-haskell, test-framework
     , test-framework-hunit, test-framework-quickcheck2, text, time
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "aeson";
       version = "0.8.0.2";
       sha256 = "1mc8cwmswx69r77wv7dfim525jqajnlxbcx5xf3ygpszzf6mh1q7";
       revision = "1";
       editedCabalFile = "0g4l7iq24klbmfprj4j31jcskzg0igwq6abp30vi6vlmr9rfcql0";
       configureFlags = [ "-fold-locale" ];
       libraryHaskellDepends = [
         attoparsec base bytestring containers deepseq dlist ghc-prim
         hashable mtl old-locale scientific syb template-haskell text time
         unordered-containers vector
       ];
       testHaskellDepends = [
         attoparsec base bytestring containers ghc-prim HUnit QuickCheck
         template-haskell test-framework test-framework-hunit
         test-framework-quickcheck2 text time unordered-containers vector
       ];
       homepage = "https://github.com/bos/aeson";
       description = "Fast JSON parsing and encoding";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "aeson-pretty" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, bytestring, cmdargs, text
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "aeson-pretty";
       version = "0.7.2";
       sha256 = "03ap81853qi8yd9kdgczllrrni23a6glsfxrwj8zab6ipjrbh234";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base bytestring text unordered-containers vector
       ];
       executableHaskellDepends = [
         aeson attoparsec base bytestring cmdargs
       ];
       homepage = "http://github.com/informatikr/aeson-pretty";
       description = "JSON pretty-printing library and command-line tool";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "aeson-qq" = callPackage
    ({ mkDerivation, aeson, base, ghc-prim, haskell-src-meta, hspec
     , parsec, template-haskell, text, vector
     }:
     mkDerivation {
       pname = "aeson-qq";
       version = "0.7.4";
       sha256 = "0wnc9pdjvd15gfkdxzf084393vwmxv2xaxdchzgal1qhwa1mak4v";
       libraryHaskellDepends = [
         aeson base haskell-src-meta parsec template-haskell text vector
       ];
       testHaskellDepends = [
         aeson base ghc-prim haskell-src-meta hspec parsec template-haskell
         text vector
       ];
       homepage = "http://github.com/zalora/aeson-qq";
       description = "JSON quasiquoter for Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};
  "aeson-utils" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, bytestring, scientific
     , text
     }:
     mkDerivation {
       pname = "aeson-utils";
       version = "0.3";
       sha256 = "12rb5dfhcr5rahk14nxc5ac416sxpzsihyciwk551kyyvahmrp3v";
       libraryHaskellDepends = [
         aeson attoparsec base bytestring scientific text
       ];
       description = "Utilities for working with Aeson";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "alarmclock" = callPackage
    ({ mkDerivation, base, stm, time, unbounded-delays }:
     mkDerivation {
       pname = "alarmclock";
       version = "0.2.0.5";
       sha256 = "1j0g4xff6i69wx5m45xmx6dsdb5sdl85id967mflnrczgj36d1fd";
       libraryHaskellDepends = [ base stm time unbounded-delays ];
       testHaskellDepends = [ base time ];
       homepage = "https://bitbucket.org/davecturner/alarmclock";
       description = "Wake up and perform an action at a certain time";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "alex" = callPackage
    ({ mkDerivation, array, base, containers, directory, happy, perl
     , process, QuickCheck
     }:
     mkDerivation {
       pname = "alex";
       version = "3.1.4";
       sha256 = "17x13nbbr79xgdlzywjqw19vcl6iygjnssjnxnajgijkv764wknn";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         array base containers directory QuickCheck
       ];
       executableToolDepends = [ happy ];
       testHaskellDepends = [ base process ];
       testToolDepends = [ perl ];
       doHaddock = false;
       homepage = "http://www.haskell.org/alex/";
       description = "Alex is a tool for generating lexical analysers in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) perl;};
  "amazonka" = callPackage
    ({ mkDerivation, amazonka-core, base, bytestring, conduit
     , conduit-extra, cryptohash, cryptohash-conduit, exceptions
     , http-conduit, lens, mmorph, monad-control, mtl, resourcet, retry
     , text, time, transformers, transformers-base, transformers-compat
     }:
     mkDerivation {
       pname = "amazonka";
       version = "0.3.4";
       sha256 = "19fzhsrlsqrncngcmdl8wr0rbv8ff0k8y91dn6j1hacz0dv1whhk";
       libraryHaskellDepends = [
         amazonka-core base bytestring conduit conduit-extra cryptohash
         cryptohash-conduit exceptions http-conduit lens mmorph
         monad-control mtl resourcet retry text time transformers
         transformers-base transformers-compat
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Comprehensive Amazon Web Services SDK";
       license = "unknown";
     }) {};
  "amazonka-autoscaling" = callPackage
    ({ mkDerivation, amazonka-core, base }:
     mkDerivation {
       pname = "amazonka-autoscaling";
       version = "0.3.4";
       sha256 = "0kndkj4x7wmmxpsr3a42ck2zq7amm33axxlhwzlgi1gnv8v2v4y4";
       libraryHaskellDepends = [ amazonka-core base ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Auto Scaling SDK";
       license = "unknown";
     }) {};
  "amazonka-cloudformation" = callPackage
    ({ mkDerivation, amazonka-core, base }:
     mkDerivation {
       pname = "amazonka-cloudformation";
       version = "0.3.4";
       sha256 = "0nhy1qn8abhnmr85n1ddshwjwns0gc0l1syznfg6g6cmazwq7809";
       libraryHaskellDepends = [ amazonka-core base ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon CloudFormation SDK";
       license = "unknown";
     }) {};
  "amazonka-cloudfront" = callPackage
    ({ mkDerivation, amazonka-core, base }:
     mkDerivation {
       pname = "amazonka-cloudfront";
       version = "0.3.4";
       sha256 = "1yp59hdxnnvjsdpaw4c311p30bg9xyj231hn2r1zis3awck8jlkk";
       libraryHaskellDepends = [ amazonka-core base ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon CloudFront SDK";
       license = "unknown";
     }) {};
  "amazonka-cloudhsm" = callPackage
    ({ mkDerivation, amazonka-core, base }:
     mkDerivation {
       pname = "amazonka-cloudhsm";
       version = "0.3.4";
       sha256 = "1f26vpfxqkkm1yli42xhbhhzya07gvg9kjhq5p51p32500aax4my";
       libraryHaskellDepends = [ amazonka-core base ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon CloudHSM SDK";
       license = "unknown";
     }) {};
  "amazonka-cloudsearch" = callPackage
    ({ mkDerivation, amazonka-core, base }:
     mkDerivation {
       pname = "amazonka-cloudsearch";
       version = "0.3.4";
       sha256 = "0lp09i3h527g8l7xcxqk6n1pjlbdhxncpgdsrd8bv91an39cnj12";
       libraryHaskellDepends = [ amazonka-core base ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon CloudSearch SDK";
       license = "unknown";
     }) {};
  "amazonka-cloudsearch-domains" = callPackage
    ({ mkDerivation, amazonka-core, base }:
     mkDerivation {
       pname = "amazonka-cloudsearch-domains";
       version = "0.3.4";
       sha256 = "06sb1zmgvsbshndix9gdx8vq4378p8sgwnnkwhzm1sr92yzfv4is";
       libraryHaskellDepends = [ amazonka-core base ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon CloudSearch Domain SDK";
       license = "unknown";
     }) {};
  "amazonka-cloudtrail" = callPackage
    ({ mkDerivation, amazonka-core, base }:
     mkDerivation {
       pname = "amazonka-cloudtrail";
       version = "0.3.4";
       sha256 = "125vn9vk4mk61r4r5c3parhrqdxkmlvqprly1x0chd044nx5ai80";
       libraryHaskellDepends = [ amazonka-core base ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon CloudTrail SDK";
       license = "unknown";
     }) {};
  "amazonka-cloudwatch" = callPackage
    ({ mkDerivation, amazonka-core, base }:
     mkDerivation {
       pname = "amazonka-cloudwatch";
       version = "0.3.4";
       sha256 = "1lsdy65cg3wrhpzsaiir0mq510dilia1m0lqwg1fnrcl62xlcsd9";
       libraryHaskellDepends = [ amazonka-core base ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon CloudWatch SDK";
       license = "unknown";
     }) {};
  "amazonka-cloudwatch-logs" = callPackage
    ({ mkDerivation, amazonka-core, base }:
     mkDerivation {
       pname = "amazonka-cloudwatch-logs";
       version = "0.3.4";
       sha256 = "1wxrxak7l8drba6hckhx0idqj26fbppnxw5hj4cnmjrg4pvjpnmn";
       libraryHaskellDepends = [ amazonka-core base ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon CloudWatch Logs SDK";
       license = "unknown";
     }) {};
  "amazonka-codedeploy" = callPackage
    ({ mkDerivation, amazonka-core, base }:
     mkDerivation {
       pname = "amazonka-codedeploy";
       version = "0.3.4";
       sha256 = "1sws6d2a21r7wwd2dyf4k7g2n2f0r5azydj7pg6g5a2sjfazimi0";
       libraryHaskellDepends = [ amazonka-core base ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon CodeDeploy SDK";
       license = "unknown";
     }) {};
  "amazonka-cognito-identity" = callPackage
    ({ mkDerivation, amazonka-core, base }:
     mkDerivation {
       pname = "amazonka-cognito-identity";
       version = "0.3.4";
       sha256 = "0vp1r171myahkx8n5mndjabggy219mzbzxyfz93mwpnyf1z7cdvm";
       libraryHaskellDepends = [ amazonka-core base ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Cognito Identity SDK";
       license = "unknown";
     }) {};
  "amazonka-cognito-sync" = callPackage
    ({ mkDerivation, amazonka-core, base }:
     mkDerivation {
       pname = "amazonka-cognito-sync";
       version = "0.3.4";
       sha256 = "04mc8cjn1hdprki0hvbbyb7gzsdxdr7lci41vnmhw6ic3gcy2mhv";
       libraryHaskellDepends = [ amazonka-core base ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Cognito Sync SDK";
       license = "unknown";
     }) {};
  "amazonka-config" = callPackage
    ({ mkDerivation, amazonka-core, base }:
     mkDerivation {
       pname = "amazonka-config";
       version = "0.3.4";
       sha256 = "1qxkzqvfid2g7hcc427zhy8llfa25wpimi7cfdzl9dqmmkqlxinm";
       libraryHaskellDepends = [ amazonka-core base ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Config SDK";
       license = "unknown";
     }) {};
  "amazonka-core" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, base16-bytestring
     , base64-bytestring, bifunctors, bytestring, case-insensitive
     , conduit, conduit-extra, cryptohash, data-default-class, hashable
     , http-client, http-types, lens, mmorph, mtl, nats, old-locale
     , resourcet, scientific, semigroups, tagged, tasty, tasty-hunit
     , template-haskell, text, time, transformers, transformers-compat
     , unordered-containers, vector, xml-conduit
     }:
     mkDerivation {
       pname = "amazonka-core";
       version = "0.3.4";
       sha256 = "0sih0wvncrz6v4xcn34ckhxc7b15bx87qbr7icwk1w6zs08809jz";
       revision = "2";
       editedCabalFile = "03l81s1n09niy49jp4dpfsggy9i8nz6wdhr5lcjfhj4vy8dga9ff";
       configureFlags = [ "-fold-locale" ];
       libraryHaskellDepends = [
         aeson attoparsec base base16-bytestring base64-bytestring
         bifunctors bytestring case-insensitive conduit conduit-extra
         cryptohash data-default-class hashable http-client http-types lens
         mmorph mtl nats old-locale resourcet scientific semigroups tagged
         text time transformers transformers-compat unordered-containers
         vector xml-conduit
       ];
       testHaskellDepends = [
         aeson base tasty tasty-hunit template-haskell text
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Core functionality and data types for Amazonka libraries";
       license = "unknown";
     }) {};
  "amazonka-datapipeline" = callPackage
    ({ mkDerivation, amazonka-core, base }:
     mkDerivation {
       pname = "amazonka-datapipeline";
       version = "0.3.4";
       sha256 = "0f7y3wb9ijd8hjxbzav63zdwrjhzh000xqc4n2cnx0lrcrssvs2i";
       libraryHaskellDepends = [ amazonka-core base ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Data Pipeline SDK";
       license = "unknown";
     }) {};
  "amazonka-directconnect" = callPackage
    ({ mkDerivation, amazonka-core, base }:
     mkDerivation {
       pname = "amazonka-directconnect";
       version = "0.3.4";
       sha256 = "1y6nyjf8m2py5wnk3cbypi0ckqv7nyr2la3h8nm1wj8njwh359jn";
       libraryHaskellDepends = [ amazonka-core base ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Direct Connect SDK";
       license = "unknown";
     }) {};
  "amazonka-dynamodb" = callPackage
    ({ mkDerivation, amazonka-core, base }:
     mkDerivation {
       pname = "amazonka-dynamodb";
       version = "0.3.4";
       sha256 = "160nk75112sdnf834gpc0y1fzsbb0lrp98g9zim38rd4v7pz2ax9";
       libraryHaskellDepends = [ amazonka-core base ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon DynamoDB SDK";
       license = "unknown";
     }) {};
  "amazonka-ec2" = callPackage
    ({ mkDerivation, amazonka-core, base }:
     mkDerivation {
       pname = "amazonka-ec2";
       version = "0.3.4";
       sha256 = "0chfyyryyk8vd1783021awvwwla5fdm04x3w500157xvazhk286m";
       libraryHaskellDepends = [ amazonka-core base ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Elastic Compute Cloud SDK";
       license = "unknown";
     }) {};
  "amazonka-ecs" = callPackage
    ({ mkDerivation, amazonka-core, base }:
     mkDerivation {
       pname = "amazonka-ecs";
       version = "0.3.4";
       sha256 = "1pv79b0865gqpf89abjjk4y24d6nr2lk45xpn0n7ckri0b54dga4";
       libraryHaskellDepends = [ amazonka-core base ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon EC2 Container Service SDK";
       license = "unknown";
     }) {};
  "amazonka-elasticache" = callPackage
    ({ mkDerivation, amazonka-core, base }:
     mkDerivation {
       pname = "amazonka-elasticache";
       version = "0.3.4";
       sha256 = "01mg116sqxa4z7ss0fwzvsgkmxrqs52ac9z6mrsfymjspyd9fbli";
       libraryHaskellDepends = [ amazonka-core base ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon ElastiCache SDK";
       license = "unknown";
     }) {};
  "amazonka-elasticbeanstalk" = callPackage
    ({ mkDerivation, amazonka-core, base }:
     mkDerivation {
       pname = "amazonka-elasticbeanstalk";
       version = "0.3.4";
       sha256 = "13lzdnwg9x2jrhk251b0vrg4y2avg77ppq4wdgjzmbb2myp618ll";
       libraryHaskellDepends = [ amazonka-core base ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Elastic Beanstalk SDK";
       license = "unknown";
     }) {};
  "amazonka-elastictranscoder" = callPackage
    ({ mkDerivation, amazonka-core, base }:
     mkDerivation {
       pname = "amazonka-elastictranscoder";
       version = "0.3.4";
       sha256 = "1wi1h07pp8n45ynn9lqvjfz265k0bp7qqxk5qmqlg93yajgjfkcl";
       libraryHaskellDepends = [ amazonka-core base ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Elastic Transcoder SDK";
       license = "unknown";
     }) {};
  "amazonka-elb" = callPackage
    ({ mkDerivation, amazonka-core, base }:
     mkDerivation {
       pname = "amazonka-elb";
       version = "0.3.4";
       sha256 = "11ky0g8cgnd6lcjdc6a9087ka5f6hc3x08xnvjjfwipmdhps4k9r";
       libraryHaskellDepends = [ amazonka-core base ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Elastic Load Balancing SDK";
       license = "unknown";
     }) {};
  "amazonka-emr" = callPackage
    ({ mkDerivation, amazonka-core, base }:
     mkDerivation {
       pname = "amazonka-emr";
       version = "0.3.4";
       sha256 = "1dq1xs7simxcag3c2bcr22k1595avl69jz6zv3nrsn1rvzj9milv";
       libraryHaskellDepends = [ amazonka-core base ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Elastic MapReduce SDK";
       license = "unknown";
     }) {};
  "amazonka-glacier" = callPackage
    ({ mkDerivation, amazonka-core, base }:
     mkDerivation {
       pname = "amazonka-glacier";
       version = "0.3.4";
       sha256 = "1dd635s0i9imj62dg9rqvfrx2aqw6593z61ckqixlb247jii82i6";
       libraryHaskellDepends = [ amazonka-core base ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Glacier SDK";
       license = "unknown";
     }) {};
  "amazonka-iam" = callPackage
    ({ mkDerivation, amazonka-core, base }:
     mkDerivation {
       pname = "amazonka-iam";
       version = "0.3.4";
       sha256 = "1snh7xs2f2mjr3ln24xj73y5idmb45in1ykaz3v5wbqdb19m4w94";
       libraryHaskellDepends = [ amazonka-core base ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Identity and Access Management SDK";
       license = "unknown";
     }) {};
  "amazonka-importexport" = callPackage
    ({ mkDerivation, amazonka-core, base }:
     mkDerivation {
       pname = "amazonka-importexport";
       version = "0.3.4";
       sha256 = "15xgfxlrjhn8inl5a0rfsyyy8sp0rinlwll9snpdl7nrnqvmn00s";
       libraryHaskellDepends = [ amazonka-core base ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Import/Export SDK";
       license = "unknown";
     }) {};
  "amazonka-kinesis" = callPackage
    ({ mkDerivation, amazonka-core, base }:
     mkDerivation {
       pname = "amazonka-kinesis";
       version = "0.3.4";
       sha256 = "0fag3xr9w2gi038hh9kiqmqgbsn53x48h9jwj49cr1r9qrrs86wa";
       libraryHaskellDepends = [ amazonka-core base ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Kinesis SDK";
       license = "unknown";
     }) {};
  "amazonka-kms" = callPackage
    ({ mkDerivation, amazonka-core, base }:
     mkDerivation {
       pname = "amazonka-kms";
       version = "0.3.4";
       sha256 = "0ds97lk5ifc529199lmvijs5gif4bzh8lwczpz1xspin37bjiz62";
       libraryHaskellDepends = [ amazonka-core base ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Key Management Service SDK";
       license = "unknown";
     }) {};
  "amazonka-lambda" = callPackage
    ({ mkDerivation, amazonka-core, base }:
     mkDerivation {
       pname = "amazonka-lambda";
       version = "0.3.4";
       sha256 = "1njdwml6mp8phd323cgyfw7v2iv8l4k7r6pi4vq4mygpa2gx0dn1";
       libraryHaskellDepends = [ amazonka-core base ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Lambda SDK";
       license = "unknown";
     }) {};
  "amazonka-opsworks" = callPackage
    ({ mkDerivation, amazonka-core, base }:
     mkDerivation {
       pname = "amazonka-opsworks";
       version = "0.3.4";
       sha256 = "07l7a4v7s380vj8348bgv1m1hk1ldc41aphl67f17v2cndys3ml0";
       libraryHaskellDepends = [ amazonka-core base ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon OpsWorks SDK";
       license = "unknown";
     }) {};
  "amazonka-rds" = callPackage
    ({ mkDerivation, amazonka-core, base }:
     mkDerivation {
       pname = "amazonka-rds";
       version = "0.3.4";
       sha256 = "1ji80nn9k10l9w5k5dqwhc0i2aaxa4l6bl995im5lrihilmazqgw";
       libraryHaskellDepends = [ amazonka-core base ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Relational Database Service SDK";
       license = "unknown";
     }) {};
  "amazonka-redshift" = callPackage
    ({ mkDerivation, amazonka-core, base }:
     mkDerivation {
       pname = "amazonka-redshift";
       version = "0.3.4";
       sha256 = "18sd3abhpifwb4ylz35bnxzappgslpvzkrv9wh3hxqzs4mvxdj1n";
       libraryHaskellDepends = [ amazonka-core base ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Redshift SDK";
       license = "unknown";
     }) {};
  "amazonka-route53" = callPackage
    ({ mkDerivation, amazonka-core, base }:
     mkDerivation {
       pname = "amazonka-route53";
       version = "0.3.4";
       sha256 = "05a77qcjlkjk0mv2ry25dlci43h5b9hh50f32ngqccjqmg4128ky";
       libraryHaskellDepends = [ amazonka-core base ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Route 53 SDK";
       license = "unknown";
     }) {};
  "amazonka-route53-domains" = callPackage
    ({ mkDerivation, amazonka-core, base }:
     mkDerivation {
       pname = "amazonka-route53-domains";
       version = "0.3.4";
       sha256 = "15qvmw6fgfcqgkqafywpai5i1in9iibl1r8m8pfxfdckmrbzaxz2";
       libraryHaskellDepends = [ amazonka-core base ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Route 53 Domains SDK";
       license = "unknown";
     }) {};
  "amazonka-s3" = callPackage
    ({ mkDerivation, amazonka-core, base }:
     mkDerivation {
       pname = "amazonka-s3";
       version = "0.3.4";
       sha256 = "0miyf7nnkxwybps3yg5fyqpxq5hkz4kllks5w4r7c62hd7sjq9dn";
       libraryHaskellDepends = [ amazonka-core base ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Simple Storage Service SDK";
       license = "unknown";
     }) {};
  "amazonka-sdb" = callPackage
    ({ mkDerivation, amazonka-core, base }:
     mkDerivation {
       pname = "amazonka-sdb";
       version = "0.3.4";
       sha256 = "0jsg4g911qm3r8saxwax4rhdmg1kgfmagnnyzjv4rb02jkdfr7i1";
       libraryHaskellDepends = [ amazonka-core base ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon SimpleDB SDK";
       license = "unknown";
     }) {};
  "amazonka-ses" = callPackage
    ({ mkDerivation, amazonka-core, base }:
     mkDerivation {
       pname = "amazonka-ses";
       version = "0.3.4";
       sha256 = "0s0aa3fryvqwmp0zzmlzd0mk591i1c63qds0si3svf85zgl3slr4";
       libraryHaskellDepends = [ amazonka-core base ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Simple Email Service SDK";
       license = "unknown";
     }) {};
  "amazonka-sns" = callPackage
    ({ mkDerivation, amazonka-core, base }:
     mkDerivation {
       pname = "amazonka-sns";
       version = "0.3.4";
       sha256 = "1plrzqlvfn2aa0c4l2dh4nlygnv0biykz414yblcrj53w03yhqs2";
       libraryHaskellDepends = [ amazonka-core base ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Simple Notification Service SDK";
       license = "unknown";
     }) {};
  "amazonka-sqs" = callPackage
    ({ mkDerivation, amazonka-core, base }:
     mkDerivation {
       pname = "amazonka-sqs";
       version = "0.3.4";
       sha256 = "0bc0n71vhmcirij5agxy7h0zvqvm4psw5h3kzrnbib9wa2hkq8m4";
       libraryHaskellDepends = [ amazonka-core base ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Simple Queue Service SDK";
       license = "unknown";
     }) {};
  "amazonka-ssm" = callPackage
    ({ mkDerivation, amazonka-core, base }:
     mkDerivation {
       pname = "amazonka-ssm";
       version = "0.3.4";
       sha256 = "03p76rska5gl2ic7vjyhhdb89ikl17n8xkiwcb4184jzsvnscqzi";
       libraryHaskellDepends = [ amazonka-core base ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Simple Systems Management Service SDK";
       license = "unknown";
     }) {};
  "amazonka-storagegateway" = callPackage
    ({ mkDerivation, amazonka-core, base }:
     mkDerivation {
       pname = "amazonka-storagegateway";
       version = "0.3.4";
       sha256 = "016wi9cq86z0giv68kzfdg2ia0m4kvlcsl6dj9d3cnvbcsg7s6xy";
       libraryHaskellDepends = [ amazonka-core base ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Storage Gateway SDK";
       license = "unknown";
     }) {};
  "amazonka-sts" = callPackage
    ({ mkDerivation, amazonka-core, base }:
     mkDerivation {
       pname = "amazonka-sts";
       version = "0.3.4";
       sha256 = "1fmjsvcxjrls98jd3vcldjy9wvsdkyi614rzs1d5bi11b6db202z";
       libraryHaskellDepends = [ amazonka-core base ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Security Token Service SDK";
       license = "unknown";
     }) {};
  "amazonka-support" = callPackage
    ({ mkDerivation, amazonka-core, base }:
     mkDerivation {
       pname = "amazonka-support";
       version = "0.3.4";
       sha256 = "1kzy3nbc17dbbhi2k60da7rl6k2zbahzd9rjshvmn1fdsb61piq5";
       libraryHaskellDepends = [ amazonka-core base ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Support SDK";
       license = "unknown";
     }) {};
  "amazonka-swf" = callPackage
    ({ mkDerivation, amazonka-core, base }:
     mkDerivation {
       pname = "amazonka-swf";
       version = "0.3.4";
       sha256 = "1w7ac4d7gj53hjvlk0sldww67gkgsbi8vmqhbcbqrbg2mrqr6l9d";
       libraryHaskellDepends = [ amazonka-core base ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Simple Workflow Service SDK";
       license = "unknown";
     }) {};
  "amqp" = callPackage
    ({ mkDerivation, base, binary, bytestring, clock, connection
     , containers, data-binary-ieee754, hspec, hspec-expectations
     , monad-control, network, network-uri, split, text, vector, xml
     }:
     mkDerivation {
       pname = "amqp";
       version = "0.12.2";
       sha256 = "07nk8xxpkdh9w19rwwc87h2vbhfam339czkvyrmx7jh2dp51pnag";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base binary bytestring clock connection containers
         data-binary-ieee754 monad-control network network-uri split text
         vector
       ];
       executableHaskellDepends = [ base containers xml ];
       testHaskellDepends = [
         base binary bytestring clock connection containers
         data-binary-ieee754 hspec hspec-expectations network network-uri
         split text vector
       ];
       doCheck = false;
       homepage = "https://github.com/hreinhardt/amqp";
       description = "Client library for AMQP servers (currently only RabbitMQ)";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ansi-terminal" = callPackage
    ({ mkDerivation, base, unix }:
     mkDerivation {
       pname = "ansi-terminal";
       version = "0.6.2.1";
       sha256 = "1xmp8wpcyvqys777qpyfx99bhlnvmr7jil7r78j5n6fx3mkkhnln";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base unix ];
       executableHaskellDepends = [ base unix ];
       homepage = "https://github.com/feuerbach/ansi-terminal";
       description = "Simple ANSI terminal support, with Windows compatibility";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ansi-wl-pprint" = callPackage
    ({ mkDerivation, ansi-terminal, base }:
     mkDerivation {
       pname = "ansi-wl-pprint";
       version = "0.6.7.2";
       sha256 = "0x0pv7hq4q2n103pzzxghmgzmd3b5cwpnmkdbpzry222890w8ph1";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ ansi-terminal base ];
       executableHaskellDepends = [ ansi-terminal base ];
       homepage = "http://github.com/batterseapower/ansi-wl-pprint";
       description = "The Wadler/Leijen Pretty Printer for colored ANSI terminal output";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "appar" = callPackage
    ({ mkDerivation, base, bytestring }:
     mkDerivation {
       pname = "appar";
       version = "0.1.4";
       sha256 = "09jb9ij78fdkz2qk66rw99q19qnm504dpv0yq0pjsl6xwjmndsjq";
       libraryHaskellDepends = [ base bytestring ];
       description = "A simple applicative parser";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "applicative-quoters" = callPackage
    ({ mkDerivation, base, haskell-src-meta, template-haskell }:
     mkDerivation {
       pname = "applicative-quoters";
       version = "0.1.0.8";
       sha256 = "10m29d0938khjdazsmsvvncr5xndnpzpm1b7ymzb3b4b81xmcpgl";
       revision = "1";
       editedCabalFile = "0ccdnkl3pxkwcg7m3xalqwax1gzaj3hg85zb219y7cfva2pvz1jp";
       libraryHaskellDepends = [ base haskell-src-meta template-haskell ];
       description = "Quasiquoters for idiom brackets and an applicative do-notation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "approximate" = callPackage
    ({ mkDerivation, base, binary, bytes, cereal, comonad, deepseq
     , directory, distributive, doctest, filepath, generic-deriving
     , ghc-prim, hashable, hashable-extras, lens, log-domain, pointed
     , safecopy, semigroupoids, semigroups, simple-reflect, vector
     }:
     mkDerivation {
       pname = "approximate";
       version = "0.2.1.1";
       sha256 = "18ac2z1yqqksqmq9ch36ja3qjn9v6cgyzxs64lnnp98mgcwsmhwr";
       libraryHaskellDepends = [
         base binary bytes cereal comonad deepseq distributive
         generic-deriving ghc-prim hashable hashable-extras lens log-domain
         pointed safecopy semigroupoids semigroups vector
       ];
       testHaskellDepends = [
         base directory doctest filepath generic-deriving semigroups
         simple-reflect
       ];
       homepage = "http://github.com/analytics/approximate/";
       description = "Approximate discrete values and numbers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "arbtt" = callPackage
    ({ mkDerivation, aeson, array, base, binary, bytestring
     , bytestring-progress, containers, deepseq, directory, filepath
     , HUnit, libXScrnSaver, old-locale, parsec, pcre-light
     , process-extras, strict, tasty, tasty-golden, tasty-hunit
     , terminal-progress-bar, time, transformers, unix, utf8-string, X11
     }:
     mkDerivation {
       pname = "arbtt";
       version = "0.9.0.2";
       sha256 = "0ab5qrsrp6fcc2p1a4idbqazs7yrh957bfagdmw6b7rrydpig1lc";
       configureFlags = [ "-fold-locale" ];
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         aeson array base binary bytestring bytestring-progress containers
         deepseq directory filepath old-locale parsec pcre-light strict
         terminal-progress-bar time transformers unix utf8-string X11
       ];
       executableSystemDepends = [ libXScrnSaver ];
       testHaskellDepends = [
         base binary bytestring containers deepseq directory HUnit
         old-locale parsec pcre-light process-extras tasty tasty-golden
         tasty-hunit time transformers unix utf8-string
       ];
       doHaddock = false;
       homepage = "http://arbtt.nomeata.de/";
       description = "Automatic Rule-Based Time Tracker";
       license = "GPL";
     }) {inherit (pkgs.xorg) libXScrnSaver;};
  "arithmoi" = callPackage
    ({ mkDerivation, array, base, containers, ghc-prim, integer-gmp
     , mtl, random
     }:
     mkDerivation {
       pname = "arithmoi";
       version = "0.4.1.2";
       sha256 = "0i0cndldf426cc8dv6swqfnljv9lgba9vp1ac4xk0vdbmbwqan9m";
       libraryHaskellDepends = [
         array base containers ghc-prim integer-gmp mtl random
       ];
       homepage = "https://github.com/cartazio/arithmoi";
       description = "Efficient basic number-theoretic functions. Primes, powers, integer logarithms.";
       license = stdenv.lib.licenses.mit;
     }) {};
  "arrow-list" = callPackage
    ({ mkDerivation, base, containers, mtl }:
     mkDerivation {
       pname = "arrow-list";
       version = "0.7";
       sha256 = "1n6m77hdkpjd12r0b8fwxiz3jz0j86cplgsk27m2raj86vr3dy1k";
       libraryHaskellDepends = [ base containers mtl ];
       homepage = "https://github.com/silkapp/arrow-list";
       description = "List arrows for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "asn1-data" = callPackage
    ({ mkDerivation, base, bytestring, cereal, mtl, text }:
     mkDerivation {
       pname = "asn1-data";
       version = "0.7.1";
       sha256 = "10s7mxygw6w8a8mx090msvbl8pji8m68lsxxyr5bp7p887naia7r";
       revision = "1";
       editedCabalFile = "07zdlmgf5yp7sv4gpvadplr86rfw14mzmdg95h7ymfc8d83h33vc";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base bytestring cereal mtl text ];
       homepage = "http://github.com/vincenthz/hs-asn1-data";
       description = "ASN1 data reader and writer in RAW, BER and DER forms";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "asn1-encoding" = callPackage
    ({ mkDerivation, asn1-types, base, bytestring, hourglass, mtl
     , tasty, tasty-quickcheck, text
     }:
     mkDerivation {
       pname = "asn1-encoding";
       version = "0.9.0";
       sha256 = "02x3lzyl4gavl3lc2lrg8rknyvs6r2hf8kmm7xrmma5m857iks8p";
       libraryHaskellDepends = [
         asn1-types base bytestring hourglass mtl
       ];
       testHaskellDepends = [
         asn1-types base bytestring hourglass mtl tasty tasty-quickcheck
         text
       ];
       homepage = "http://github.com/vincenthz/hs-asn1";
       description = "ASN1 data reader and writer in RAW, BER and DER forms";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "asn1-parse" = callPackage
    ({ mkDerivation, asn1-encoding, asn1-types, base, bytestring, mtl
     , text
     }:
     mkDerivation {
       pname = "asn1-parse";
       version = "0.9.0";
       sha256 = "0m093wwndyxvy72qlnb70bp8w5ahimrlv1dp972l9s9l5jc4pjg3";
       revision = "1";
       editedCabalFile = "134wf7szi4zg88wvi4awhkndbzawgprz3059jxpp4jhmd0hxs97n";
       libraryHaskellDepends = [
         asn1-encoding asn1-types base bytestring mtl text
       ];
       homepage = "http://github.com/vincenthz/hs-asn1";
       description = "Simple monadic parser for ASN1 stream types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "asn1-types" = callPackage
    ({ mkDerivation, base, bytestring, hourglass }:
     mkDerivation {
       pname = "asn1-types";
       version = "0.3.0";
       sha256 = "1am8nmfarv7ymy3rqm0js2i82v6n6qwz0lnzb1qdmy4ligcdm65r";
       libraryHaskellDepends = [ base bytestring hourglass ];
       homepage = "http://github.com/vincenthz/hs-asn1-types";
       description = "ASN.1 types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "async" = callPackage
    ({ mkDerivation, base, HUnit, stm, test-framework
     , test-framework-hunit
     }:
     mkDerivation {
       pname = "async";
       version = "2.0.2";
       sha256 = "0azx4qk65a9a2gvqsfmz3w89m6shzr2iz0i5lly2zvly4n2d6m6v";
       libraryHaskellDepends = [ base stm ];
       testHaskellDepends = [
         base HUnit test-framework test-framework-hunit
       ];
       homepage = "https://github.com/simonmar/async";
       description = "Run IO operations asynchronously and wait for their results";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "atto-lisp" = callPackage
    ({ mkDerivation, attoparsec, base, blaze-builder, blaze-textual
     , bytestring, containers, deepseq, HUnit, test-framework
     , test-framework-hunit, text
     }:
     mkDerivation {
       pname = "atto-lisp";
       version = "0.2.2";
       sha256 = "13lhdalam4gn9faa58c3c7nssdwp2y0jsfl1lnnvr3dx6wzp0jhc";
       revision = "1";
       editedCabalFile = "1ypjd6cknbr8dfrgfs9wv0amv2s28ibgxlvyfsnann4wv19rgczy";
       libraryHaskellDepends = [
         attoparsec base blaze-builder blaze-textual bytestring containers
         deepseq text
       ];
       testHaskellDepends = [
         attoparsec base bytestring HUnit test-framework
         test-framework-hunit text
       ];
       homepage = "http://github.com/nominolo/atto-lisp";
       description = "Efficient parsing and serialisation of S-Expressions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "attoparsec" = callPackage
    ({ mkDerivation, array, base, bytestring, case-insensitive
     , containers, criterion, deepseq, directory, filepath, ghc-prim
     , http-types, parsec, QuickCheck, quickcheck-unicode, scientific
     , test-framework, test-framework-quickcheck2, text
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "attoparsec";
       version = "0.12.1.6";
       sha256 = "1a06vhg0ykix94q7qxvmh30v017fjl9j2i1b860wjb937a6bc2yf";
       libraryHaskellDepends = [
         array base bytestring containers deepseq scientific text
       ];
       testHaskellDepends = [
         array base bytestring deepseq QuickCheck quickcheck-unicode
         scientific test-framework test-framework-quickcheck2 text vector
       ];
       benchmarkHaskellDepends = [
         array base bytestring case-insensitive criterion deepseq directory
         filepath ghc-prim http-types parsec scientific text
         unordered-containers vector
       ];
       homepage = "https://github.com/bos/attoparsec";
       description = "Fast combinator parsing for bytestrings and text";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "attoparsec-enumerator" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, enumerator, text }:
     mkDerivation {
       pname = "attoparsec-enumerator";
       version = "0.3.3";
       sha256 = "0z57bbw97v92dkjp57zj9nfzsdas2n1qfw472k1aa84iqb6hbw9w";
       libraryHaskellDepends = [
         attoparsec base bytestring enumerator text
       ];
       homepage = "https://john-millikin.com/software/attoparsec-enumerator/";
       description = "Pass input from an enumerator to an Attoparsec parser";
       license = stdenv.lib.licenses.mit;
     }) {};
  "attoparsec-expr" = callPackage
    ({ mkDerivation, attoparsec, base }:
     mkDerivation {
       pname = "attoparsec-expr";
       version = "0.1.1.1";
       sha256 = "09305lp9q3cgvpv4d878c34dk07g7p13hc07hrp2xlwl7rc3nac3";
       libraryHaskellDepends = [ attoparsec base ];
       description = "Port of parsec's expression parser to attoparsec";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "authenticate" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, blaze-builder, bytestring
     , case-insensitive, conduit, containers, http-conduit, http-types
     , monad-control, network-uri, resourcet, tagstream-conduit, text
     , transformers, unordered-containers, xml-conduit
     }:
     mkDerivation {
       pname = "authenticate";
       version = "1.3.2.11";
       sha256 = "1xkzaw9a338yclbm10cfa9cnjdjpmzif2qj4hprig45z5szqi4q4";
       libraryHaskellDepends = [
         aeson attoparsec base blaze-builder bytestring case-insensitive
         conduit containers http-conduit http-types monad-control
         network-uri resourcet tagstream-conduit text transformers
         unordered-containers xml-conduit
       ];
       homepage = "http://github.com/yesodweb/authenticate";
       description = "Authentication methods for Haskell web applications";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "authenticate-oauth" = callPackage
    ({ mkDerivation, base, base64-bytestring, blaze-builder, bytestring
     , crypto-pubkey-types, data-default, http-client, http-types
     , random, RSA, SHA, time, transformers
     }:
     mkDerivation {
       pname = "authenticate-oauth";
       version = "1.5.1.1";
       sha256 = "02y35yd4zmpy36yba2nzbvijhfw0wvijkiqmh7h9qjpbqvmib7zb";
       revision = "1";
       editedCabalFile = "0vj72469lndmw5rqn8c06zxmvpv3li767ipvpl4d50qywisw5q5f";
       libraryHaskellDepends = [
         base base64-bytestring blaze-builder bytestring crypto-pubkey-types
         data-default http-client http-types random RSA SHA time
         transformers
       ];
       homepage = "http://github.com/yesodweb/authenticate";
       description = "Library to authenticate with OAuth for Haskell web applications";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "auto-update" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "auto-update";
       version = "0.1.2.1";
       sha256 = "0cj1pjf22x02h3d1ln1p69g90kz2dfsiq04ahfq29jj4ny525lwp";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/yesodweb/wai";
       description = "Efficiently run periodic, on-demand actions";
       license = stdenv.lib.licenses.mit;
     }) {};
  "aws" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, base16-bytestring
     , base64-bytestring, blaze-builder, byteable, bytestring
     , case-insensitive, cereal, conduit, conduit-extra, containers
     , cryptohash, data-default, directory, errors, filepath
     , http-client, http-conduit, http-types, lifted-base, monad-control
     , mtl, network, old-locale, QuickCheck, quickcheck-instances
     , resourcet, safe, scientific, tagged, tasty, tasty-quickcheck
     , text, time, transformers, transformers-base, unordered-containers
     , utf8-string, vector, xml-conduit
     }:
     mkDerivation {
       pname = "aws";
       version = "0.11.4";
       sha256 = "1mjpk17c2grlbxkwskplzqwn0icxpmv5pjc27xgwah5g97cm9hik";
       revision = "1";
       editedCabalFile = "0by0brr3hpa4dxhkd9vvd8h0p16fa7my9psp078q1xqhbqq3qr6f";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson attoparsec base base16-bytestring base64-bytestring
         blaze-builder byteable bytestring case-insensitive cereal conduit
         conduit-extra containers cryptohash data-default directory filepath
         http-conduit http-types lifted-base monad-control mtl network
         old-locale resourcet safe scientific tagged text time transformers
         unordered-containers utf8-string vector xml-conduit
       ];
       testHaskellDepends = [
         aeson base bytestring errors http-client lifted-base monad-control
         mtl QuickCheck quickcheck-instances resourcet tagged tasty
         tasty-quickcheck text time transformers transformers-base
       ];
       doCheck = false;
       homepage = "http://github.com/aristidb/aws";
       description = "Amazon Web Services (AWS) for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bake" = callPackage
    ({ mkDerivation, aeson, base, bytestring, cmdargs, deepseq
     , directory, extra, filepath, hashable, HTTP, http-types, process
     , random, shake, text, time, wai, warp
     }:
     mkDerivation {
       pname = "bake";
       version = "0.2";
       sha256 = "1j7m9q5vk35sqs6if9rzb72avi7xbjhbcv0hpg9qvn9nvs38dgiw";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson base bytestring cmdargs deepseq directory extra filepath
         hashable HTTP http-types random shake text time wai warp
       ];
       executableHaskellDepends = [
         aeson base bytestring cmdargs deepseq directory extra filepath
         hashable HTTP http-types process random shake text time wai warp
       ];
       homepage = "https://github.com/ndmitchell/bake#readme";
       description = "Continuous integration system";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bank-holidays-england" = callPackage
    ({ mkDerivation, base, containers, hspec, QuickCheck, time }:
     mkDerivation {
       pname = "bank-holidays-england";
       version = "0.1.0.2";
       sha256 = "0kjn5f76w9ff73blg8apxkhfsk1clv2i52gr4frgqn7l6f32yp22";
       libraryHaskellDepends = [ base containers time ];
       testHaskellDepends = [ base containers hspec QuickCheck time ];
       homepage = "https://bitbucket.org/davecturner/bank-holidays-england";
       description = "Calculation of bank holidays in England and Wales";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "base-compat" = callPackage
    ({ mkDerivation, base, hspec, QuickCheck, setenv }:
     mkDerivation {
       pname = "base-compat";
       version = "0.6.0";
       sha256 = "1ry85ymd0m99z2g45x7nlvpda699xa6zzn8l51im5bda6zsczlyv";
       libraryHaskellDepends = [ base setenv ];
       testHaskellDepends = [ base hspec QuickCheck ];
       description = "A compatibility layer for base";
       license = stdenv.lib.licenses.mit;
     }) {};
  "base-prelude" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "base-prelude";
       version = "0.1.19";
       sha256 = "00mk7zpm3yb804h0gngvpjxhb2a6nds8qb8mwpn80s20x72083wb";
       libraryHaskellDepends = [ base ];
       doCheck = false;
       homepage = "https://github.com/nikita-volkov/base-prelude";
       description = "The most complete prelude formed from only the \"base\" package";
       license = stdenv.lib.licenses.mit;
     }) {};
  "base-unicode-symbols" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "base-unicode-symbols";
       version = "0.2.2.4";
       sha256 = "1afc5pchd3vw33bmjbjygkd0l5zh7glbsx4bfyxfscpc1x1l3y52";
       libraryHaskellDepends = [ base ];
       homepage = "http://haskell.org/haskellwiki/Unicode-symbols";
       description = "Unicode alternatives for common functions and operators";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "base16-bytestring" = callPackage
    ({ mkDerivation, base, bytestring, ghc-prim }:
     mkDerivation {
       pname = "base16-bytestring";
       version = "0.1.1.6";
       sha256 = "0jf40m3yijqw6wd1rwwvviww46fasphaay9m9rgqyhf5aahnbzjs";
       libraryHaskellDepends = [ base bytestring ghc-prim ];
       homepage = "http://github.com/bos/base16-bytestring";
       description = "Fast base16 (hex) encoding and decoding for ByteStrings";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "base64-bytestring" = callPackage
    ({ mkDerivation, base, bytestring, containers, HUnit, QuickCheck
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "base64-bytestring";
       version = "1.0.0.1";
       sha256 = "0l1v4ddjdsgi9nqzyzcxxj76rwar3lzx8gmwf2r54bqan3san9db";
       libraryHaskellDepends = [ base bytestring ];
       testHaskellDepends = [
         base bytestring containers HUnit QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2
       ];
       homepage = "https://github.com/bos/base64-bytestring";
       description = "Fast base64 encoding and decoding for ByteStrings";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "base64-string" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "base64-string";
       version = "0.2";
       sha256 = "0pkhrimabacsjalzq0y3a197fqfbspsbv8xszzg4vbb1fb59dj1y";
       libraryHaskellDepends = [ base ];
       homepage = "http://urchin.earth.li/~ian/cabal/base64-string/";
       description = "Base64 implementation for String's";
       license = "unknown";
     }) {};
  "basic-prelude" = callPackage
    ({ mkDerivation, base, bytestring, containers, hashable
     , lifted-base, ReadArgs, safe, system-filepath, text, transformers
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "basic-prelude";
       version = "0.3.12";
       sha256 = "1qmwxd8wfszawhfncqhcnbc2h1a47jcqa4zj4pfwybhy3xnn0yns";
       libraryHaskellDepends = [
         base bytestring containers hashable lifted-base ReadArgs safe
         system-filepath text transformers unordered-containers vector
       ];
       homepage = "https://github.com/snoyberg/basic-prelude";
       description = "An enhanced core prelude; a common foundation for alternate preludes";
       license = stdenv.lib.licenses.mit;
     }) {};
  "bcrypt" = callPackage
    ({ mkDerivation, base, bytestring, entropy }:
     mkDerivation {
       pname = "bcrypt";
       version = "0.0.6";
       sha256 = "032la7v7kp0k26s3lj006hgc7a99ylqpp5qi27jxnac10yjl5bi5";
       libraryHaskellDepends = [ base bytestring entropy ];
       description = "Haskell bindings to the bcrypt password hash";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bifunctors" = callPackage
    ({ mkDerivation, base, semigroupoids, semigroups, tagged }:
     mkDerivation {
       pname = "bifunctors";
       version = "4.2.1";
       sha256 = "0zy4lz08r60h8lgrf67zqqrcslrnbmdi254ydv5mw69z57nnx3ng";
       revision = "2";
       editedCabalFile = "0kbfz317qax7si4wxnkxdp58b3w880aflwgjx6kcvg32p5wcjpbd";
       libraryHaskellDepends = [ base semigroupoids semigroups tagged ];
       homepage = "http://github.com/ekmett/bifunctors/";
       description = "Bifunctors";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "binary-conduit" = callPackage
    ({ mkDerivation, base, binary, bytestring, conduit, hspec
     , QuickCheck, quickcheck-assertions, resourcet, vector
     }:
     mkDerivation {
       pname = "binary-conduit";
       version = "1.2.3";
       sha256 = "0ymhxyf754j1pki7ap2vay8f9j49rzsjzp5yr253sn5wpw3qg8fr";
       revision = "2";
       editedCabalFile = "0agymrfvf7vvnqgn7xi0zsj4yglr9yjp5iwszv6988y6vfwkk228";
       libraryHaskellDepends = [
         base binary bytestring conduit resourcet vector
       ];
       testHaskellDepends = [
         base binary bytestring conduit hspec QuickCheck
         quickcheck-assertions resourcet
       ];
       homepage = "http://github.com/qnikst/binary-conduit/";
       description = "data serialization/deserialization conduit library";
       license = stdenv.lib.licenses.mit;
     }) {};
  "binary-list" = callPackage
    ({ mkDerivation, base, binary, bytestring, criterion, deepseq
     , phantom-state, transformers
     }:
     mkDerivation {
       pname = "binary-list";
       version = "1.1.1.0";
       sha256 = "03fh5ipmmjzdyywm28m2kkbxn11yb4ygrs1q2igll1mbmpm2km6x";
       libraryHaskellDepends = [
         base binary bytestring deepseq phantom-state transformers
       ];
       benchmarkHaskellDepends = [ base criterion ];
       description = "Lists of length a power of two";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bindings-DSL" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "bindings-DSL";
       version = "1.0.22";
       sha256 = "0xkr1x3klpfwbh1yimah1dqmqcilifyblnf3kr6ay4gsvw74zkwr";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/jwiegley/bindings-dsl/wiki";
       description = "FFI domain specific language, on top of hsc2hs";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bioace" = callPackage
    ({ mkDerivation, base, bioalign, biocore, bytestring, parsec }:
     mkDerivation {
       pname = "bioace";
       version = "0.0.1";
       sha256 = "08k2w66gpysjk038pi50lc21gbn2dyp5z8ls0qhcmjqc59dn8hvg";
       libraryHaskellDepends = [
         base bioalign biocore bytestring parsec
       ];
       homepage = "https://patch-tag.com/r/dfornika/bioace/home";
       description = "Library for reading ace assembly files";
       license = "GPL";
     }) {};
  "bioalign" = callPackage
    ({ mkDerivation, base, biocore, bytestring }:
     mkDerivation {
       pname = "bioalign";
       version = "0.0.5";
       sha256 = "006gg8ds6klrl9rc1csi247rf8gzlgn9mdi0jl4pjz5xmf0jw5dr";
       libraryHaskellDepends = [ base biocore bytestring ];
       homepage = "https://patch-tag.com/r/dfornika/biophd/home";
       description = "Data structures and helper functions for calculating alignments";
       license = "GPL";
     }) {};
  "biocore" = callPackage
    ({ mkDerivation, base, bytestring, stringable }:
     mkDerivation {
       pname = "biocore";
       version = "0.3.1";
       sha256 = "06ml9p144bv0c9hv6pkcvhdgc0vw0jxzbqb834ilr38kjmrpsar1";
       libraryHaskellDepends = [ base bytestring stringable ];
       description = "A bioinformatics library";
       license = "LGPL";
     }) {};
  "biofasta" = callPackage
    ({ mkDerivation, base, biocore, bytestring }:
     mkDerivation {
       pname = "biofasta";
       version = "0.0.3";
       sha256 = "1l770sg2gcg7wl5yfrrk9nr7hgd5m0q158ad5nd8z7i5vsfah8b2";
       libraryHaskellDepends = [ base biocore bytestring ];
       homepage = "https://patch-tag.com/r/dfornika/biofasta/home";
       description = "Library for reading fasta sequence files";
       license = "GPL";
     }) {};
  "biofastq" = callPackage
    ({ mkDerivation, base, biocore, bytestring }:
     mkDerivation {
       pname = "biofastq";
       version = "0.1";
       sha256 = "0453cb2sw6x9hx3z7w3fvymwi0l0s86wlvi6vvsh0jcwas3iirbl";
       libraryHaskellDepends = [ base biocore bytestring ];
       homepage = "http://biohaskell.org/";
       description = "A library for reading FASTQ files";
       license = "LGPL";
     }) {};
  "biophd" = callPackage
    ({ mkDerivation, base, binary, biocore, bytestring, parsec, text }:
     mkDerivation {
       pname = "biophd";
       version = "0.0.5";
       sha256 = "15bsrhwhgmdhl6l6xad1di4p1hslnlydawhqkf3z8y3pih1sasy7";
       libraryHaskellDepends = [
         base binary biocore bytestring parsec text
       ];
       homepage = "https://patch-tag.com/r/dfornika/biophd/home";
       description = "Library for reading phd sequence files";
       license = "GPL";
     }) {};
  "biopsl" = callPackage
    ({ mkDerivation, base, biocore, bytestring, cmdargs
     , unordered-containers
     }:
     mkDerivation {
       pname = "biopsl";
       version = "0.4";
       sha256 = "1v9vg9gnrf606raqlzcd15irg60v3cf5m0yy5qsdyxm24102bgmj";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base biocore bytestring ];
       executableHaskellDepends = [ cmdargs unordered-containers ];
       homepage = "http://biohaskell.org/";
       description = "Library and executables for working with PSL files";
       license = "LGPL";
     }) {};
  "biosff" = callPackage
    ({ mkDerivation, array, base, binary, biocore, bytestring, cmdargs
     , mtl
     }:
     mkDerivation {
       pname = "biosff";
       version = "0.3.7.1";
       sha256 = "1mxsqxcf5sh37gpfqil499i9n8wi3sk5sl2cx6x6agbc0n726bwq";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ array base binary biocore bytestring ];
       executableHaskellDepends = [ array base cmdargs mtl ];
       homepage = "http://biohaskell.org/";
       description = "Library and executables for working with SFF files";
       license = stdenv.lib.licenses.lgpl21;
     }) {};
  "bits" = callPackage
    ({ mkDerivation, base, bytes, directory, doctest, filepath, mtl
     , transformers
     }:
     mkDerivation {
       pname = "bits";
       version = "0.4";
       sha256 = "12s5yk47y0zqzqiyaw9jchyl3crf1id9dk67m638b070d46k29p6";
       libraryHaskellDepends = [ base bytes mtl transformers ];
       testHaskellDepends = [ base directory doctest filepath ];
       doCheck = false;
       homepage = "http://github.com/analytics/bits";
       description = "Various bit twiddling and bitwise serialization primitives";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "blank-canvas" = callPackage
    ({ mkDerivation, aeson, base, base64-bytestring, bytestring, colour
     , containers, data-default-class, http-types, kansas-comet, scotty
     , stm, text, transformers, vector, wai, wai-extra, warp
     }:
     mkDerivation {
       pname = "blank-canvas";
       version = "0.5";
       sha256 = "05kfyjp9vncyzsvq018ilb8vh7fyzbc06nlx35jk3dzj6i6x5bgs";
       revision = "1";
       editedCabalFile = "112h1nanp2jk7i99wxbcc7f8kailacxgnvg9hidjwjhlaqhc7nd9";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson base base64-bytestring bytestring colour containers
         data-default-class http-types kansas-comet scotty stm text
         transformers vector wai wai-extra warp
       ];
       homepage = "https://github.com/ku-fpg/blank-canvas/wiki";
       description = "HTML5 Canvas Graphics Library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "blastxml" = callPackage
    ({ mkDerivation, base, biocore, bytestring, parallel, tagsoup }:
     mkDerivation {
       pname = "blastxml";
       version = "0.3.2";
       sha256 = "0slqvv8729vlniwswwipw3yss9id6xvmd416kad1ij064g28j00c";
       libraryHaskellDepends = [
         base biocore bytestring parallel tagsoup
       ];
       homepage = "http://biohaskell.org/";
       description = "Library for reading Blast XML output";
       license = "LGPL";
     }) {};
  "blaze-builder" = callPackage
    ({ mkDerivation, base, bytestring, deepseq, HUnit, QuickCheck
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , text, utf8-string
     }:
     mkDerivation {
       pname = "blaze-builder";
       version = "0.4.0.1";
       sha256 = "1id3w33x9f7q5m3xpggmvzw03bkp94bpfyz81625bldqgf3yqdn1";
       libraryHaskellDepends = [ base bytestring deepseq text ];
       testHaskellDepends = [
         base bytestring HUnit QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2 text utf8-string
       ];
       homepage = "http://github.com/lpsmith/blaze-builder";
       description = "Efficient buffered output";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "blaze-builder-enumerator" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring
     , bytestring-builder, enumerator, streaming-commons, transformers
     }:
     mkDerivation {
       pname = "blaze-builder-enumerator";
       version = "0.2.1.0";
       sha256 = "15mz4dfnngll61b1xv3hfazvzjfd8g9ym0hps1qiks1hl4c2kxah";
       revision = "1";
       editedCabalFile = "1bjgki6c3glllf49qpmw08c75mzgv6cldxc8c75cy8hx60rnsy98";
       libraryHaskellDepends = [
         base blaze-builder bytestring bytestring-builder enumerator
         streaming-commons transformers
       ];
       homepage = "https://github.com/meiersi/blaze-builder-enumerator";
       description = "Enumeratees for the incremental conversion of builders to bytestrings";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "blaze-html" = callPackage
    ({ mkDerivation, base, blaze-builder, blaze-markup, bytestring
     , containers, HUnit, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2, text
     }:
     mkDerivation {
       pname = "blaze-html";
       version = "0.8.0.2";
       sha256 = "1h3z857kqj9h87zyi84pck2rnykfk7i4amlh0vkv5wws5zn9xs74";
       libraryHaskellDepends = [
         base blaze-builder blaze-markup bytestring text
       ];
       testHaskellDepends = [
         base blaze-builder blaze-markup bytestring containers HUnit
         QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2 text
       ];
       homepage = "http://jaspervdj.be/blaze";
       description = "A blazingly fast HTML combinator library for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "blaze-markup" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring, containers, HUnit
     , QuickCheck, test-framework, test-framework-hunit
     , test-framework-quickcheck2, text
     }:
     mkDerivation {
       pname = "blaze-markup";
       version = "0.7.0.2";
       sha256 = "0p3jsl7ng3fapvbp431cm1bckdwjgc1kmijyvxlgxn1l90l8l1p4";
       libraryHaskellDepends = [ base blaze-builder bytestring text ];
       testHaskellDepends = [
         base blaze-builder bytestring containers HUnit QuickCheck
         test-framework test-framework-hunit test-framework-quickcheck2 text
       ];
       homepage = "http://jaspervdj.be/blaze";
       description = "A blazingly fast markup combinator library for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "blaze-svg" = callPackage
    ({ mkDerivation, base, blaze-markup, mtl }:
     mkDerivation {
       pname = "blaze-svg";
       version = "0.3.4.1";
       sha256 = "1bfxl2jwr622kgf4gz4gqpdrvscciqpfyzy6qad8j7w633xg8vrp";
       libraryHaskellDepends = [ base blaze-markup mtl ];
       homepage = "https://github.com/deepakjois/blaze-svg";
       description = "SVG combinator library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "blaze-textual" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring, double-conversion
     , ghc-prim, integer-gmp, old-locale, QuickCheck, test-framework
     , test-framework-quickcheck2, text, time, vector
     }:
     mkDerivation {
       pname = "blaze-textual";
       version = "0.2.0.9";
       sha256 = "1gwy1pjnc2ikxfxn9c751rnydry1hmlfk13k29xnns9vwglf81f0";
       libraryHaskellDepends = [
         base blaze-builder bytestring ghc-prim integer-gmp old-locale text
         time vector
       ];
       testHaskellDepends = [
         base blaze-builder bytestring double-conversion QuickCheck
         test-framework test-framework-quickcheck2
       ];
       homepage = "http://github.com/bos/blaze-textual";
       description = "Fast rendering of common datatypes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bloodhound" = callPackage
    ({ mkDerivation, aeson, base, bytestring, conduit, containers
     , http-client, http-types, semigroups, text, time, vector
     }:
     mkDerivation {
       pname = "bloodhound";
       version = "0.5.0.1";
       sha256 = "1wvqj8fz3b6jvhmmi3calx6fsqjyvcpznks67bd0iiz9z0igh0ha";
       libraryHaskellDepends = [
         aeson base bytestring conduit containers http-client http-types
         semigroups text time vector
       ];
       doCheck = false;
       homepage = "https://github.com/bitemyapp/bloodhound";
       description = "ElasticSearch client library for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bmp" = callPackage
    ({ mkDerivation, base, binary, bytestring }:
     mkDerivation {
       pname = "bmp";
       version = "1.2.5.2";
       sha256 = "0f88f2ynm1fpzbjijy5fa8blfrdv42h5h28hfjlpd4fp0h96in5x";
       libraryHaskellDepends = [ base binary bytestring ];
       homepage = "http://code.ouroborus.net/bmp";
       description = "Read and write uncompressed BMP image files";
       license = stdenv.lib.licenses.mit;
     }) {};
  "boolsimplifier" = callPackage
    ({ mkDerivation, base, containers }:
     mkDerivation {
       pname = "boolsimplifier";
       version = "0.1.8";
       sha256 = "13w2i7b2g9w5kzqnbjjdzf3r2dm7a4xxags02khhwlj1f8vsjvq9";
       revision = "1";
       editedCabalFile = "0xqm0vn9i49b75fnvnvcnr9m4zwvhqynrkcjdxghrsxayg420lnh";
       libraryHaskellDepends = [ base containers ];
       description = "Simplification tools for simple propositional formulas";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bound" = callPackage
    ({ mkDerivation, base, bifunctors, binary, bytes, cereal, comonad
     , directory, doctest, filepath, hashable, hashable-extras
     , prelude-extras, profunctors, transformers, vector
     }:
     mkDerivation {
       pname = "bound";
       version = "1.0.4";
       sha256 = "17qnrjmqhx07cpzwd1z4lp2d42jx1lfxl6b86d65g4fd79miipky";
       libraryHaskellDepends = [
         base bifunctors binary bytes cereal comonad hashable
         hashable-extras prelude-extras profunctors transformers
       ];
       testHaskellDepends = [
         base directory doctest filepath prelude-extras transformers vector
       ];
       homepage = "http://github.com/ekmett/bound/";
       description = "Making de Bruijn Succ Less";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "broadcast-chan" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "broadcast-chan";
       version = "0.1.0";
       sha256 = "1dympzv8gwh31hd0x6ap29rm83rf2klkj34as2xjrayfs9kbp87s";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/merijn/broadcast-chan";
       description = "Broadcast channel type that avoids 0 reader space leaks";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bson" = callPackage
    ({ mkDerivation, base, binary, bytestring, cryptohash
     , data-binary-ieee754, mtl, network, QuickCheck, test-framework
     , test-framework-quickcheck2, text, time
     }:
     mkDerivation {
       pname = "bson";
       version = "0.3.1";
       sha256 = "1kihsjws8sqb44gvilh1zxrqn2bml8gxq2bbanxqb7nr4ymwfkiv";
       libraryHaskellDepends = [
         base binary bytestring cryptohash data-binary-ieee754 mtl network
         text time
       ];
       testHaskellDepends = [
         base binary bytestring cryptohash data-binary-ieee754 mtl network
         QuickCheck test-framework test-framework-quickcheck2 text time
       ];
       homepage = "http://github.com/mongodb-haskell/bson";
       description = "BSON documents are JSON-like objects with a standard binary encoding";
       license = "unknown";
     }) {};
  "bumper" = callPackage
    ({ mkDerivation, base, Cabal, containers, fclabels, process
     , regex-compat, split, strict
     }:
     mkDerivation {
       pname = "bumper";
       version = "0.6.0.3";
       sha256 = "1a6sqkdzq05az6yj3zmlcbx6bmhw4zjx2aijxfi481z3ifiy7z3w";
       revision = "3";
       editedCabalFile = "0r4fj5mxl452786jw6pr2nwhs5sszlxb9nwcrakr44jysm181lhw";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         base Cabal containers fclabels process regex-compat split strict
       ];
       doHaddock = false;
       homepage = "http://github.com/silkapp/bumper";
       description = "Automatically bump package versions, also transitively";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "byteable" = callPackage
    ({ mkDerivation, base, bytestring }:
     mkDerivation {
       pname = "byteable";
       version = "0.1.1";
       sha256 = "1qizg0kxxjqnd3cbrjhhidk5pbbciz0pb3z5kzikjjxnnnhk8fr4";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base bytestring ];
       homepage = "http://github.com/vincenthz/hs-byteable";
       description = "Type class for sequence of bytes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bytedump" = callPackage
    ({ mkDerivation, base, bytestring }:
     mkDerivation {
       pname = "bytedump";
       version = "1.0";
       sha256 = "1pf01mna3isx3i7m50yz3pw5ygz5sg8i8pshjb3yw8q41w2ba5xf";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base bytestring ];
       homepage = "http://github.com/vincenthz/hs-bytedump";
       description = "Flexible byte dump helpers for human readers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "byteorder" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "byteorder";
       version = "1.0.4";
       sha256 = "06995paxbxk8lldvarqpb3ygcjbg4v8dk4scib1rjzwlhssvn85x";
       libraryHaskellDepends = [ base ];
       homepage = "http://community.haskell.org/~aslatter/code/byteorder";
       description = "Exposes the native endianness or byte ordering of the system";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bytes" = callPackage
    ({ mkDerivation, base, binary, bytestring, cereal, containers
     , directory, doctest, filepath, mtl, text, time, transformers
     , transformers-compat, void
     }:
     mkDerivation {
       pname = "bytes";
       version = "0.15";
       sha256 = "0898qlpf74ax33hm6hbla9kcjrldk26sc5yj3gdp99yb3qb5swz6";
       revision = "1";
       editedCabalFile = "11l3wnsc67wkgd9kh9q1jvrs01s3pz4y18kprz3p1zgvjzb3mp4l";
       libraryHaskellDepends = [
         base binary bytestring cereal containers mtl text time transformers
         transformers-compat void
       ];
       testHaskellDepends = [ base directory doctest filepath ];
       homepage = "http://github.com/analytics/bytes";
       description = "Sharing code for serialization between binary and cereal";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bytestring-builder" = callPackage
    ({ mkDerivation, base, bytestring, deepseq }:
     mkDerivation {
       pname = "bytestring-builder";
       version = "0.10.6.0.0";
       sha256 = "1mkg24zl0rapb3gqzkyj5ibp07wx3yzd72hmfczssl0is63rjhww";
       libraryHaskellDepends = [ base bytestring deepseq ];
       doHaddock = false;
       description = "The new bytestring builder, packaged outside of GHC";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bytestring-conversion" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, case-insensitive
     , criterion, double-conversion, QuickCheck, tasty, tasty-quickcheck
     , text, transformers
     }:
     mkDerivation {
       pname = "bytestring-conversion";
       version = "0.3.0";
       sha256 = "0wc5k0cis3hkd5hq875sbj39bf9c0gayyjmg638pnbc8x6v44fqm";
       libraryHaskellDepends = [
         attoparsec base bytestring case-insensitive double-conversion text
       ];
       testHaskellDepends = [
         base bytestring QuickCheck tasty tasty-quickcheck
       ];
       benchmarkHaskellDepends = [
         base bytestring criterion text transformers
       ];
       homepage = "https://github.com/twittner/bytestring-conversion/";
       description = "Type-classes to convert values to and from ByteString";
       license = "unknown";
     }) {};
  "bytestring-lexing" = callPackage
    ({ mkDerivation, alex, array, base, bytestring }:
     mkDerivation {
       pname = "bytestring-lexing";
       version = "0.4.3.2";
       sha256 = "09ymg1n21668wn4harxg0cqlz98fz990bangpy99w2z7d6cwbc05";
       revision = "1";
       editedCabalFile = "0w9ybkvafgxiiq9sazppxb4pjyqpyv3abzy8isyp3vhxpmc4jzfc";
       libraryHaskellDepends = [ array base bytestring ];
       libraryToolDepends = [ alex ];
       homepage = "http://code.haskell.org/~wren/";
       description = "Parse and produce literals efficiently from strict or lazy bytestrings";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bytestring-mmap" = callPackage
    ({ mkDerivation, base, bytestring, unix }:
     mkDerivation {
       pname = "bytestring-mmap";
       version = "0.2.2";
       sha256 = "1bv9xf4cpph1cbdwv6rbmq8ppi5wjpgd97lwln5l9ky5rvnaxg3v";
       libraryHaskellDepends = [ base bytestring unix ];
       homepage = "http://code.haskell.org/~dons/code/bytestring-mmap/";
       description = "mmap support for strict ByteStrings";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bytestring-progress" = callPackage
    ({ mkDerivation, base, bytestring, terminal-progress-bar, time }:
     mkDerivation {
       pname = "bytestring-progress";
       version = "1.0.5";
       sha256 = "02j9gmvncap4xzvvmj0s84bkhf4xh8plw5saakiljxf6zi7hpdwq";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base bytestring terminal-progress-bar time
       ];
       doHaddock = false;
       homepage = "http://github.com/acw/bytestring-progress";
       description = "A library for tracking the consumption of a lazy ByteString";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bytestring-trie" = callPackage
    ({ mkDerivation, base, binary, bytestring }:
     mkDerivation {
       pname = "bytestring-trie";
       version = "0.2.4.1";
       sha256 = "0qqklrvdcprchnl4bxr6w7zf6k5gncincl3kysm34gd04sszxr1g";
       libraryHaskellDepends = [ base binary bytestring ];
       homepage = "http://code.haskell.org/~wren/";
       description = "An efficient finite map from (byte)strings to values";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bzlib" = callPackage
    ({ mkDerivation, base, bytestring, bzip2 }:
     mkDerivation {
       pname = "bzlib";
       version = "0.5.0.5";
       sha256 = "0zh130vw719a8d11q5qzc3ilzgv8cqyc2a7r1a131cv1fjnd1rwy";
       libraryHaskellDepends = [ base bytestring ];
       librarySystemDepends = [ bzip2 ];
       description = "Compression and decompression in the bzip2 format";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) bzip2;};
  "bzlib-conduit" = callPackage
    ({ mkDerivation, base, bindings-DSL, bytestring, bzip2, conduit
     , conduit-extra, data-default, hspec, mtl, QuickCheck, random
     , resourcet
     }:
     mkDerivation {
       pname = "bzlib-conduit";
       version = "0.2.1.3";
       sha256 = "0jqg38zvxc0fpp74az0vm8klb88zwy076ncwzgq2zr0nrmr5cghm";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base bindings-DSL bytestring conduit conduit-extra data-default mtl
         resourcet
       ];
       librarySystemDepends = [ bzip2 ];
       testHaskellDepends = [
         base bytestring conduit conduit-extra hspec QuickCheck random
         resourcet
       ];
       benchmarkHaskellDepends = [ base conduit conduit-extra ];
       homepage = "https://github.com/snoyberg/bzlib-conduit";
       description = "Streaming compression/decompression via conduits";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) bzip2;};
  "c2hs" = callPackage
    ({ mkDerivation, array, base, containers, directory, dlist
     , filepath, HUnit, language-c, pretty, process, shelly
     , test-framework, test-framework-hunit, text, transformers
     }:
     mkDerivation {
       pname = "c2hs";
       version = "0.25.2";
       sha256 = "0d1rgcwvz49v3h511dibiv6m06v8s179pg4sw386z17pz3a2hghm";
       isLibrary = false;
       isExecutable = true;
       enableSeparateDataOutput = true;
       executableHaskellDepends = [
         array base containers directory dlist filepath language-c pretty
         process
       ];
       testHaskellDepends = [
         base filepath HUnit shelly test-framework test-framework-hunit text
         transformers
       ];
       doHaddock = false;
       homepage = "https://github.com/haskell/c2hs";
       description = "C->Haskell FFI tool that gives some cross-language type safety";
       license = stdenv.lib.licenses.gpl2;
     }) {};
  "cabal-file-th" = callPackage
    ({ mkDerivation, base, Cabal, directory, template-haskell }:
     mkDerivation {
       pname = "cabal-file-th";
       version = "0.2.3";
       sha256 = "0kawvb5n56rkq4453l6pia3wrr6jvvdwkghi6i176n1gm2zf2ri8";
       revision = "1";
       editedCabalFile = "0zp3w7rnyh81jwcfr7zlj66z9lw4y5rrprg5n65618imlgsnrg2h";
       libraryHaskellDepends = [ base Cabal directory template-haskell ];
       testHaskellDepends = [ base ];
       homepage = "http://github.com/nkpart/cabal-file-th";
       description = "Template Haskell expressions for reading fields from a project's cabal file";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cabal-install" = callPackage
    ({ mkDerivation, array, base, bytestring, Cabal, containers
     , directory, filepath, HTTP, HUnit, mtl, network, network-uri
     , pretty, process, QuickCheck, random, stm, test-framework
     , test-framework-hunit, test-framework-quickcheck2, time, unix
     , zlib
     }:
     mkDerivation {
       pname = "cabal-install";
       version = "1.18.0.8";
       sha256 = "1yx7vgyi2hs934z4ln7d8m2yrsakidb551ib01l9hxnmc3jbskwi";
       revision = "1";
       editedCabalFile = "1r875z5nrj80wzqya9qp1ypk9rjli35p49ihrir4jn6nc09njk1h";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         array base bytestring Cabal containers directory filepath HTTP mtl
         network network-uri pretty process random stm time unix zlib
       ];
       testHaskellDepends = [
         array base bytestring Cabal containers directory filepath HTTP
         HUnit mtl network network-uri pretty process QuickCheck stm
         test-framework test-framework-hunit test-framework-quickcheck2 time
         unix zlib
       ];
       doHaddock = false;
       doCheck = false;
       postInstall = ''
         mkdir $out/etc
         mv bash-completion $out/etc/bash_completion.d
       '';
       homepage = "http://www.haskell.org/cabal/";
       description = "The command-line interface for Cabal and Hackage";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cabal-rpm" = callPackage
    ({ mkDerivation, base, Cabal, directory, filepath, old-locale
     , process, time, unix
     }:
     mkDerivation {
       pname = "cabal-rpm";
       version = "0.9.5";
       sha256 = "0a2j9py1dafkscs9lz70zxl54vahba62zb8r6rv3rbhnv0d3llf3";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         base Cabal directory filepath old-locale process time unix
       ];
       doHaddock = false;
       homepage = "https://github.com/juhp/cabal-rpm";
       description = "RPM packaging tool for Haskell Cabal-based packages";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "cabal-src" = callPackage
    ({ mkDerivation, base, bytestring, Cabal, classy-prelude-conduit
     , conduit, conduit-extra, containers, directory, filepath
     , http-client, http-client-tls, http-conduit, http-types, network
     , process, resourcet, shelly, system-fileio, system-filepath, tar
     , temporary, text, transformers
     }:
     mkDerivation {
       pname = "cabal-src";
       version = "0.2.5";
       sha256 = "07nxnr011i50lpmahvj6q113zd6jmmxv83y4rby2rjnimjvgj3z7";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         base bytestring Cabal classy-prelude-conduit conduit conduit-extra
         containers directory filepath http-client http-client-tls
         http-conduit http-types network process resourcet shelly
         system-fileio system-filepath tar temporary text transformers
       ];
       doHaddock = false;
       homepage = "https://github.com/yesodweb/cabal-src";
       description = "Alternative install procedure to avoid the diamond dependency issue";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cabal-test-quickcheck" = callPackage
    ({ mkDerivation, base, Cabal, QuickCheck }:
     mkDerivation {
       pname = "cabal-test-quickcheck";
       version = "0.1.4";
       sha256 = "012pl06x5jjiyhc98x5245zj1lcgkr9wcyv3rjc6z59y8mynv7ri";
       libraryHaskellDepends = [ base Cabal QuickCheck ];
       homepage = "https://github.com/zmthy/cabal-test-quickcheck";
       description = "QuickCheck for Cabal";
       license = stdenv.lib.licenses.mit;
     }) {};
  "cairo" = callPackage
    ({ mkDerivation, array, base, bytestring, cairo, gtk2hs-buildtools
     , mtl, text, utf8-string
     }:
     mkDerivation {
       pname = "cairo";
       version = "0.13.1.0";
       sha256 = "0vi7glzizi2nvv0p5wsdxlpkx3f1875jpij26k2j4h0h6z53z3kb";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         array base bytestring mtl text utf8-string
       ];
       libraryPkgconfigDepends = [ cairo ];
       libraryToolDepends = [ gtk2hs-buildtools ];
       homepage = "http://projects.haskell.org/gtk2hs/";
       description = "Binding to the Cairo library";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) cairo;};
  "cartel" = callPackage
    ({ mkDerivation, base, directory, filepath, multiarg, QuickCheck
     , random, tasty, tasty-quickcheck, tasty-th, time, transformers
     }:
     mkDerivation {
       pname = "cartel";
       version = "0.14.2.6";
       sha256 = "05m4b8gi5ysx73yzlhl27fx9i8fnlihxwsyh6a0702kzwgn40icc";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base directory filepath time transformers
       ];
       testHaskellDepends = [
         base directory filepath multiarg QuickCheck random tasty
         tasty-quickcheck tasty-th time transformers
       ];
       homepage = "http://www.github.com/massysett/cartel";
       description = "Specify Cabal files in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "case-insensitive" = callPackage
    ({ mkDerivation, base, bytestring, deepseq, hashable, HUnit
     , test-framework, test-framework-hunit, text
     }:
     mkDerivation {
       pname = "case-insensitive";
       version = "1.2.0.4";
       sha256 = "07nm40r9yw2p9qsfp3pjbsmyn4dabrxw34p48171zmccdd5hv0v3";
       libraryHaskellDepends = [ base bytestring deepseq hashable text ];
       testHaskellDepends = [
         base bytestring HUnit test-framework test-framework-hunit text
       ];
       homepage = "https://github.com/basvandijk/case-insensitive";
       description = "Case insensitive string comparison";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cases" = callPackage
    ({ mkDerivation, attoparsec, base-prelude, loch-th, text }:
     mkDerivation {
       pname = "cases";
       version = "0.1.2";
       sha256 = "02m4dlp0l4jd53j1ziq9hkxsj61m74b886ch7vx74n6caz90qnph";
       libraryHaskellDepends = [ attoparsec base-prelude loch-th text ];
       doCheck = false;
       homepage = "https://github.com/nikita-volkov/cases";
       description = "A converter for spinal, snake and camel cases";
       license = stdenv.lib.licenses.mit;
     }) {};
  "cassava" = callPackage
    ({ mkDerivation, array, attoparsec, base, blaze-builder, bytestring
     , containers, criterion, deepseq, HUnit, lazy-csv, QuickCheck
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , text, unordered-containers, vector
     }:
     mkDerivation {
       pname = "cassava";
       version = "0.4.2.3";
       sha256 = "13fhim3ylxhkr7wy5dss3m1k3cqlhrvknzbqsi1yclfkvp4wzc2f";
       revision = "1";
       editedCabalFile = "01r8cphj19g31dyim8743l4qbyax7x1nz7rcfn7vwl2g0qpp2w9b";
       libraryHaskellDepends = [
         array attoparsec base blaze-builder bytestring containers deepseq
         text unordered-containers vector
       ];
       testHaskellDepends = [
         attoparsec base bytestring HUnit QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2 text
         unordered-containers vector
       ];
       benchmarkHaskellDepends = [
         array attoparsec base blaze-builder bytestring containers criterion
         deepseq lazy-csv text unordered-containers vector
       ];
       homepage = "https://github.com/tibbe/cassava";
       description = "A CSV parsing and encoding library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cereal" = callPackage
    ({ mkDerivation, array, base, bytestring, containers, ghc-prim }:
     mkDerivation {
       pname = "cereal";
       version = "0.4.1.1";
       sha256 = "15rhfn9hrjm01ksh9xpz9syxsp9vkvpp6b736iqq38wv2wb7416z";
       libraryHaskellDepends = [
         array base bytestring containers ghc-prim
       ];
       description = "A binary serialization library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cereal-conduit" = callPackage
    ({ mkDerivation, base, bytestring, cereal, conduit, HUnit, mtl
     , resourcet, transformers
     }:
     mkDerivation {
       pname = "cereal-conduit";
       version = "0.7.2.3";
       sha256 = "0s1s8jm25wxj44x44vjz4kz5qblkyjaz7f8rw5i81bzam32afj9s";
       libraryHaskellDepends = [
         base bytestring cereal conduit resourcet transformers
       ];
       testHaskellDepends = [
         base bytestring cereal conduit HUnit mtl resourcet transformers
       ];
       homepage = "https://github.com/snoyberg/conduit";
       description = "Turn Data.Serialize Gets and Puts into Sources, Sinks, and Conduits";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "certificate" = callPackage
    ({ mkDerivation, asn1-data, base, bytestring, containers
     , crypto-pubkey-types, cryptohash, directory, filepath, mtl, pem
     , process, time
     }:
     mkDerivation {
       pname = "certificate";
       version = "1.3.9";
       sha256 = "18g5rq7lpxmvmlnz610537w6mix6z6kxjrfj2ylbhkc81r5pn9g6";
       revision = "1";
       editedCabalFile = "1fipx0vmc8kq8k9imnjiffdpng0qjqkzzwr308zgma9l3hx70jvb";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         asn1-data base bytestring containers crypto-pubkey-types cryptohash
         directory filepath mtl pem process time
       ];
       homepage = "http://github.com/vincenthz/hs-certificate";
       description = "Certificates and Key Reader/Writer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "charset" = callPackage
    ({ mkDerivation, array, base, bytestring, containers, semigroups
     , unordered-containers
     }:
     mkDerivation {
       pname = "charset";
       version = "0.3.7.1";
       sha256 = "1gn0m96qpjww8hpp2g1as5yy0wcwy4iq73h3kz6g0yxxhcl5sh9x";
       libraryHaskellDepends = [
         array base bytestring containers semigroups unordered-containers
       ];
       homepage = "http://github.com/ekmett/charset";
       description = "Fast unicode character sets based on complemented PATRICIA tries";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "check-email" = callPackage
    ({ mkDerivation, base, bytestring, email-validate, resolv }:
     mkDerivation {
       pname = "check-email";
       version = "1.0";
       sha256 = "1drw8rspdc4a7jw2ql3fi1dcmw56ah5csf2bil6ii8ccq5vsbfyz";
       revision = "1";
       editedCabalFile = "0x8dq8ja9di728b2fcqji655xrp9ckw58ryd02286rg7xrp63y1r";
       libraryHaskellDepends = [ base bytestring email-validate ];
       librarySystemDepends = [ resolv ];
       description = "Confirm whether an email is valid and probably existant";
       license = stdenv.lib.licenses.bsd3;
     }) {resolv = null;};
  "checkers" = callPackage
    ({ mkDerivation, array, base, QuickCheck, random }:
     mkDerivation {
       pname = "checkers";
       version = "0.4.2";
       sha256 = "0v2qvd0g0k2j3h07003wc2vkrknq6y3ld1qgh69j4r6049x9qhaj";
       libraryHaskellDepends = [ array base QuickCheck random ];
       description = "Check properties on standard classes and data structures";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "chell" = callPackage
    ({ mkDerivation, ansi-terminal, base, bytestring, options, patience
     , random, template-haskell, text, transformers
     }:
     mkDerivation {
       pname = "chell";
       version = "0.4.0.1";
       sha256 = "0lb95abzxl4a87nfqxsxpb3a39pd52cci43hcvj8615hyhqvs2jz";
       libraryHaskellDepends = [
         ansi-terminal base bytestring options patience random
         template-haskell text transformers
       ];
       homepage = "https://john-millikin.com/software/chell/";
       description = "A simple and intuitive library for automated testing";
       license = stdenv.lib.licenses.mit;
     }) {};
  "chell-quickcheck" = callPackage
    ({ mkDerivation, base, chell, QuickCheck, random }:
     mkDerivation {
       pname = "chell-quickcheck";
       version = "0.2.5";
       sha256 = "02bkcnx5k6r5csdnnkvk4wfd0l36nxb87i1463ynw17n7ym9s4cs";
       libraryHaskellDepends = [ base chell QuickCheck random ];
       homepage = "https://john-millikin.com/software/chell/";
       description = "QuickCheck support for the Chell testing library";
       license = stdenv.lib.licenses.mit;
     }) {};
  "chunked-data" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring, containers
     , mono-traversable, semigroups, system-filepath, text, transformers
     , vector
     }:
     mkDerivation {
       pname = "chunked-data";
       version = "0.1.0.1";
       sha256 = "0kdq79mxi9nhy3dqw283f5ffx4rxwfrdq9cfw46ql5wmqrg2qw7r";
       revision = "1";
       editedCabalFile = "179m2da2b8q08cqnryrsviawc7d5ml67rah0pa9wmnbpwdpq0ynj";
       libraryHaskellDepends = [
         base blaze-builder bytestring containers mono-traversable
         semigroups system-filepath text transformers vector
       ];
       homepage = "https://github.com/fpco/chunked-data";
       description = "Typeclasses for dealing with various chunked data representations";
       license = stdenv.lib.licenses.mit;
     }) {};
  "cipher-aes" = callPackage
    ({ mkDerivation, base, byteable, bytestring, crypto-cipher-tests
     , crypto-cipher-types, QuickCheck, securemem, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "cipher-aes";
       version = "0.2.10";
       sha256 = "1sglxv66byib2bcwhilcf4m4glhz02vxy2lxa0hvpwa9c0ifhcxz";
       libraryHaskellDepends = [
         base byteable bytestring crypto-cipher-types securemem
       ];
       testHaskellDepends = [
         base byteable bytestring crypto-cipher-tests crypto-cipher-types
         QuickCheck test-framework test-framework-quickcheck2
       ];
       homepage = "https://github.com/vincenthz/hs-cipher-aes";
       description = "Fast AES cipher implementation with advanced mode of operations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cipher-aes128" = callPackage
    ({ mkDerivation, base, bytestring, cereal, cipher-aes, criterion
     , crypto-api, entropy, tagged
     }:
     mkDerivation {
       pname = "cipher-aes128";
       version = "0.6.4";
       sha256 = "093zpw86wimniwmd73g3nnbfy530q52kynccssqf7jxafbsw75aa";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring cereal crypto-api tagged
       ];
       benchmarkHaskellDepends = [
         base bytestring cereal cipher-aes criterion crypto-api entropy
         tagged
       ];
       homepage = "https://github.com/TomMD/cipher-aes128";
       description = "AES and common modes using AES-NI when available";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cipher-blowfish" = callPackage
    ({ mkDerivation, base, byteable, bytestring, crypto-cipher-tests
     , crypto-cipher-types, QuickCheck, securemem, test-framework
     , test-framework-quickcheck2, vector
     }:
     mkDerivation {
       pname = "cipher-blowfish";
       version = "0.0.3";
       sha256 = "0hb67gmiyqrknynz5am8nada1b1v47rqla87dw5nvfhxhl51fhcg";
       libraryHaskellDepends = [
         base byteable bytestring crypto-cipher-types securemem vector
       ];
       testHaskellDepends = [
         base byteable bytestring crypto-cipher-tests crypto-cipher-types
         QuickCheck test-framework test-framework-quickcheck2
       ];
       homepage = "http://github.com/vincenthz/hs-crypto-cipher";
       description = "Blowfish cipher";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cipher-camellia" = callPackage
    ({ mkDerivation, base, byteable, bytestring, crypto-cipher-tests
     , crypto-cipher-types, QuickCheck, securemem, test-framework
     , test-framework-quickcheck2, vector
     }:
     mkDerivation {
       pname = "cipher-camellia";
       version = "0.0.2";
       sha256 = "19z2mi1rvp8fsqjdbmrm1hdlxmx61yr55fyknmmn945qrlvx234d";
       libraryHaskellDepends = [
         base byteable bytestring crypto-cipher-types securemem vector
       ];
       testHaskellDepends = [
         base byteable bytestring crypto-cipher-tests crypto-cipher-types
         QuickCheck test-framework test-framework-quickcheck2
       ];
       homepage = "http://github.com/vincenthz/hs-crypto-cipher";
       description = "Camellia block cipher primitives";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cipher-des" = callPackage
    ({ mkDerivation, base, byteable, bytestring, crypto-cipher-tests
     , crypto-cipher-types, QuickCheck, securemem, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "cipher-des";
       version = "0.0.6";
       sha256 = "1isazxa2nr1y13y0danfk7wghy34rfpn3f43rw714nk2xk6vrwc5";
       libraryHaskellDepends = [
         base byteable bytestring crypto-cipher-types securemem
       ];
       testHaskellDepends = [
         base byteable bytestring crypto-cipher-tests crypto-cipher-types
         QuickCheck test-framework test-framework-quickcheck2
       ];
       homepage = "http://github.com/vincenthz/hs-crypto-cipher";
       description = "DES and 3DES primitives";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cipher-rc4" = callPackage
    ({ mkDerivation, base, byteable, bytestring, crypto-cipher-tests
     , crypto-cipher-types, QuickCheck, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "cipher-rc4";
       version = "0.1.4";
       sha256 = "0k9qf0cn5yxc4qlqikcm5yyrnkkvr6g3v7306cp8iwz7r4dp6zn6";
       libraryHaskellDepends = [
         base byteable bytestring crypto-cipher-types
       ];
       testHaskellDepends = [
         base bytestring crypto-cipher-tests crypto-cipher-types QuickCheck
         test-framework test-framework-quickcheck2
       ];
       homepage = "http://github.com/vincenthz/hs-cipher-rc4";
       description = "Fast RC4 cipher implementation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "circle-packing" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "circle-packing";
       version = "0.1.0.4";
       sha256 = "1sysyzhkjb7z4mn9hgxqiq0nd7ap3rs7w22swjrpnf8l1sv09xgv";
       libraryHaskellDepends = [ base ];
       description = "Simple heuristic for packing discs of varying radii in a circle";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "classy-prelude" = callPackage
    ({ mkDerivation, base, basic-prelude, bifunctors, bytestring
     , chunked-data, containers, dlist, enclosed-exceptions, exceptions
     , ghc-prim, hashable, hspec, lifted-base, mono-traversable, mtl
     , mutable-containers, primitive, QuickCheck, semigroups, stm
     , system-filepath, text, time, time-locale-compat, transformers
     , unordered-containers, vector, vector-instances
     }:
     mkDerivation {
       pname = "classy-prelude";
       version = "0.11.1.1";
       sha256 = "1aincib2rpxbc7nyk8sbxhcdy0l4wr1005kn0h4bb4m3aa008f7a";
       revision = "2";
       editedCabalFile = "182gkba23p8vp1wyran4sailpkc2ayv4m6m16wfhki9kb5k2q5xh";
       libraryHaskellDepends = [
         base basic-prelude bifunctors bytestring chunked-data containers
         dlist enclosed-exceptions exceptions ghc-prim hashable lifted-base
         mono-traversable mtl mutable-containers primitive semigroups stm
         system-filepath text time time-locale-compat transformers
         unordered-containers vector vector-instances
       ];
       testHaskellDepends = [
         base containers hspec QuickCheck transformers unordered-containers
       ];
       homepage = "https://github.com/snoyberg/classy-prelude";
       description = "A typeclass-based Prelude";
       license = stdenv.lib.licenses.mit;
     }) {};
  "classy-prelude-conduit" = callPackage
    ({ mkDerivation, base, bytestring, classy-prelude, conduit
     , conduit-combinators, hspec, monad-control, QuickCheck, resourcet
     , system-fileio, transformers, void
     }:
     mkDerivation {
       pname = "classy-prelude-conduit";
       version = "0.11.1";
       sha256 = "0rjm8kzx34m1x3yndm9i2ybvw9lfddgaab1n51n8psml3yxckqic";
       revision = "1";
       editedCabalFile = "1x2jv839ahcdm0wx2gbl1i4bx64kkhc129b1zgzrxd8fynqyqwws";
       libraryHaskellDepends = [
         base bytestring classy-prelude conduit conduit-combinators
         monad-control resourcet system-fileio transformers void
       ];
       testHaskellDepends = [
         base bytestring conduit hspec QuickCheck transformers
       ];
       homepage = "https://github.com/snoyberg/classy-prelude";
       description = "conduit instances for classy-prelude";
       license = stdenv.lib.licenses.mit;
     }) {};
  "classy-prelude-yesod" = callPackage
    ({ mkDerivation, aeson, base, classy-prelude
     , classy-prelude-conduit, data-default, http-conduit, http-types
     , persistent, yesod, yesod-newsfeed, yesod-static
     }:
     mkDerivation {
       pname = "classy-prelude-yesod";
       version = "0.11.1";
       sha256 = "1481cs7l0bf4jy9q2rg35aw0pfzdhnj7kc22ll2n7jb2wg1xvcv3";
       libraryHaskellDepends = [
         aeson base classy-prelude classy-prelude-conduit data-default
         http-conduit http-types persistent yesod yesod-newsfeed
         yesod-static
       ];
       homepage = "https://github.com/snoyberg/classy-prelude";
       description = "Provide a classy prelude including common Yesod functionality";
       license = stdenv.lib.licenses.mit;
     }) {};
  "clay" = callPackage
    ({ mkDerivation, base, HUnit, mtl, test-framework
     , test-framework-hunit, text
     }:
     mkDerivation {
       pname = "clay";
       version = "0.10.1";
       sha256 = "0m0ajbgypn9ki741x2bmcmpmpkccazv76wh8b9gha9483cl21f1v";
       revision = "1";
       editedCabalFile = "0qq21aac9l9236qr13lfsa80sliqqzxdflh54nzz4w4l1hr3rjwf";
       libraryHaskellDepends = [ base mtl text ];
       testHaskellDepends = [
         base HUnit mtl test-framework test-framework-hunit text
       ];
       homepage = "http://fvisser.nl/clay";
       description = "CSS preprocessor as embedded Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "clientsession" = callPackage
    ({ mkDerivation, base, base64-bytestring, bytestring, cereal
     , cipher-aes, containers, cprng-aes, crypto-api, crypto-random
     , directory, entropy, hspec, HUnit, QuickCheck, setenv, skein
     , tagged, transformers
     }:
     mkDerivation {
       pname = "clientsession";
       version = "0.9.1.1";
       sha256 = "08h0461ydhfymw2pya472n81kx5rqp7awfgxlbz2r851rl5kqmn9";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base base64-bytestring bytestring cereal cipher-aes cprng-aes
         crypto-api crypto-random directory entropy setenv skein tagged
       ];
       executableHaskellDepends = [ base ];
       testHaskellDepends = [
         base bytestring cereal containers hspec HUnit QuickCheck
         transformers
       ];
       homepage = "http://github.com/yesodweb/clientsession/tree/master";
       description = "Securely store session data in a client-side cookie";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "clock" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "clock";
       version = "0.4.5.0";
       sha256 = "0qa59yj4qr9hah1mljfmjv511p0nh7m67dgdz1zh9lnwwgky7biw";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/corsis/clock";
       description = "High-resolution clock functions: monotonic, realtime, cputime";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cmdargs" = callPackage
    ({ mkDerivation, base, filepath, process, template-haskell
     , transformers
     }:
     mkDerivation {
       pname = "cmdargs";
       version = "0.10.12";
       sha256 = "0axn3ycw4rijh1ka5f73gz9w330s851cpxbv39ia4xnb0l95hrjy";
       revision = "1";
       editedCabalFile = "1p74npr3qy8hcslj1jai3bdjrxar0hfqm4vpbzcsrjvw6gk94z73";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base filepath process template-haskell transformers
       ];
       homepage = "http://community.haskell.org/~ndm/cmdargs/";
       description = "Command line argument processing";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "code-builder" = callPackage
    ({ mkDerivation, base, containers }:
     mkDerivation {
       pname = "code-builder";
       version = "0.1.3";
       sha256 = "1ax4c19xkszahcxvwc1wa1hrgk6ajck5sbprbplsi1gc9jj4g7jm";
       libraryHaskellDepends = [ base containers ];
       description = "Simple system for generating code";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "colour" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "colour";
       version = "2.3.3";
       sha256 = "1qmn1778xzg07jg9nx4k1spdz2llivpblf6wwrps1qpqjhsac5cd";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base ];
       homepage = "http://www.haskell.org/haskellwiki/Colour";
       description = "A model for human colour/color perception";
       license = stdenv.lib.licenses.mit;
     }) {};
  "comonad" = callPackage
    ({ mkDerivation, base, containers, contravariant, directory
     , distributive, doctest, filepath, semigroups, tagged, transformers
     , transformers-compat
     }:
     mkDerivation {
       pname = "comonad";
       version = "4.2.5";
       sha256 = "07ilryqgvnkr4vmifg0dncgzmx87i2fbfbgrgc3jn1yz808s7wqf";
       revision = "2";
       editedCabalFile = "16wg9qi92122cyilng08fw1099m7n920g1z7vrafxsmsy0qvfcks";
       libraryHaskellDepends = [
         base containers contravariant distributive semigroups tagged
         transformers transformers-compat
       ];
       testHaskellDepends = [ base directory doctest filepath ];
       homepage = "http://github.com/ekmett/comonad/";
       description = "Comonads";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "comonad-transformers" = callPackage
    ({ mkDerivation, base, comonad }:
     mkDerivation {
       pname = "comonad-transformers";
       version = "4.0";
       sha256 = "13zzp6r6s6c80skniphwvzxhpazbyal5854m53139kgcw560rv6z";
       libraryHaskellDepends = [ base comonad ];
       doHaddock = false;
       homepage = "http://github.com/ekmett/comonad-transformers/";
       description = "This package has been merged into comonad 4.0";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "comonads-fd" = callPackage
    ({ mkDerivation, base, comonad }:
     mkDerivation {
       pname = "comonads-fd";
       version = "4.0";
       sha256 = "19xpv0dsz7w3a1sq1gdxwzglfal45vj2s22zb12g9mpk5rp3hw1s";
       libraryHaskellDepends = [ base comonad ];
       doHaddock = false;
       homepage = "http://github.com/ekmett/comonads-fd/";
       description = "This package has been merged into comonad 4.0";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "compdata" = callPackage
    ({ mkDerivation, base, containers, criterion, deepseq, derive, mtl
     , QuickCheck, random, template-haskell, th-expand-syns
     , transformers, tree-view, uniplate
     }:
     mkDerivation {
       pname = "compdata";
       version = "0.9";
       sha256 = "1wk9vj834l3fc64fcsrgc9hz5f2z7461hs8lv1ldkfsixx4mxyqc";
       libraryHaskellDepends = [
         base containers deepseq derive mtl QuickCheck template-haskell
         th-expand-syns transformers tree-view
       ];
       benchmarkHaskellDepends = [
         base containers criterion deepseq derive mtl QuickCheck random
         template-haskell th-expand-syns transformers uniplate
       ];
       doCheck = false;
       description = "Compositional Data Types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "compensated" = callPackage
    ({ mkDerivation, base, bifunctors, binary, bytes, cereal, comonad
     , deepseq, directory, distributive, doctest, filepath
     , generic-deriving, hashable, lens, log-domain, safecopy
     , semigroupoids, semigroups, simple-reflect, vector
     }:
     mkDerivation {
       pname = "compensated";
       version = "0.6.1";
       sha256 = "026gq3ppk3id4bvkn3pdg6ljbl14gd8p4hg6i0rc13138b0mlxnh";
       libraryHaskellDepends = [
         base bifunctors binary bytes cereal comonad deepseq distributive
         generic-deriving hashable lens log-domain safecopy semigroupoids
         semigroups vector
       ];
       testHaskellDepends = [
         base directory doctest filepath generic-deriving semigroups
         simple-reflect
       ];
       homepage = "http://github.com/analytics/compensated/";
       description = "Compensated floating-point arithmetic";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "composition" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "composition";
       version = "1.0.1.0";
       sha256 = "1gx27vz2djiiwygcjaygjmiwjnls084b5v9km3jpimlz312qh5hc";
       homepage = "http://patch-tag.com/r/DanBurton/composition/home";
       description = "Combinators for unorthodox function composition";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "compressed" = callPackage
    ({ mkDerivation, base, comonad, containers, fingertree, hashable
     , keys, pointed, reducers, semigroupoids, semigroups
     , unordered-containers
     }:
     mkDerivation {
       pname = "compressed";
       version = "3.10";
       sha256 = "1y290n421knfh8k8zbcabhw24hb13xj9pkxx4h4v15yji97p5mcw";
       revision = "1";
       editedCabalFile = "1fv1ix8bsqbsrzp44i7nz0wp1dwi3l2wdvqvp46a8vbakp5nif8a";
       libraryHaskellDepends = [
         base comonad containers fingertree hashable keys pointed reducers
         semigroupoids semigroups unordered-containers
       ];
       homepage = "http://github.com/ekmett/compressed/";
       description = "Compressed containers and reducers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "concatenative" = callPackage
    ({ mkDerivation, base, template-haskell }:
     mkDerivation {
       pname = "concatenative";
       version = "1.0.1";
       sha256 = "05xwqvcdnk8bsyj698ab9jxpa1nk23pf3m7wi9mwmw0q8n99fngd";
       libraryHaskellDepends = [ base template-haskell ];
       homepage = "https://patch-tag.com/r/salazar/concatenative/snapshot/current/content/pretty";
       description = "A library for postfix control flow";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "concurrent-extra" = callPackage
    ({ mkDerivation, async, base, HUnit, random, stm, test-framework
     , test-framework-hunit, unbounded-delays
     }:
     mkDerivation {
       pname = "concurrent-extra";
       version = "0.7.0.9";
       sha256 = "19bqm0brnbhhmp5nypi995p27mna7kd33xzw0kf7yx2w2p2kb1aw";
       libraryHaskellDepends = [ base stm unbounded-delays ];
       testHaskellDepends = [
         async base HUnit random stm test-framework test-framework-hunit
         unbounded-delays
       ];
       doCheck = false;
       homepage = "https://github.com/basvandijk/concurrent-extra";
       description = "Extra concurrency primitives";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "concurrent-supply" = callPackage
    ({ mkDerivation, base, containers, ghc-prim, hashable }:
     mkDerivation {
       pname = "concurrent-supply";
       version = "0.1.7.1";
       sha256 = "050d1k4hvjjyap3w8spcx57lagnh77z131jbgsndpc9mjx8r4l5y";
       libraryHaskellDepends = [ base ghc-prim hashable ];
       testHaskellDepends = [ base containers ];
       homepage = "http://github.com/ekmett/concurrent-supply/";
       description = "A fast concurrent unique identifier supply with a pure API";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cond" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "cond";
       version = "0.4.1.1";
       sha256 = "12xcjxli1scd4asr4zc77i5q9qka2100gx97hv3vv12l7gj7d703";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/kallisti-dev/cond";
       description = "Basic conditional and boolean operators with monadic variants";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "conduit" = callPackage
    ({ mkDerivation, base, containers, criterion, deepseq, exceptions
     , hspec, kan-extensions, lifted-base, mmorph, mtl, mwc-random
     , QuickCheck, resourcet, safe, transformers, transformers-base
     , vector, void
     }:
     mkDerivation {
       pname = "conduit";
       version = "1.2.4";
       sha256 = "1vqajj5mwnknqcjc5pj883jz4iwjj6is4jr701bzr0n6ngvn7qvh";
       libraryHaskellDepends = [
         base exceptions lifted-base mmorph mtl resourcet transformers
         transformers-base void
       ];
       testHaskellDepends = [
         base containers exceptions hspec mtl QuickCheck resourcet safe
         transformers void
       ];
       benchmarkHaskellDepends = [
         base containers criterion deepseq hspec kan-extensions mwc-random
         transformers vector
       ];
       homepage = "http://github.com/snoyberg/conduit";
       description = "Streaming data processing library";
       license = stdenv.lib.licenses.mit;
     }) {};
  "conduit-combinators" = callPackage
    ({ mkDerivation, base, base16-bytestring, base64-bytestring
     , bytestring, chunked-data, conduit, conduit-extra, containers
     , directory, hspec, monad-control, mono-traversable, mtl
     , mwc-random, primitive, QuickCheck, resourcet, safe, silently
     , system-fileio, system-filepath, text, transformers
     , transformers-base, unix, unix-compat, vector, void
     }:
     mkDerivation {
       pname = "conduit-combinators";
       version = "0.3.1";
       sha256 = "14cvd9vs31gbgggy3v6rsg7wckr08msw1s0fwqbyal73krm79f2r";
       libraryHaskellDepends = [
         base base16-bytestring base64-bytestring bytestring chunked-data
         conduit conduit-extra monad-control mono-traversable mwc-random
         primitive resourcet system-fileio system-filepath text transformers
         transformers-base unix unix-compat vector void
       ];
       testHaskellDepends = [
         base base16-bytestring base64-bytestring bytestring chunked-data
         conduit containers directory hspec mono-traversable mtl mwc-random
         QuickCheck safe silently system-filepath text transformers vector
       ];
       homepage = "https://github.com/fpco/conduit-combinators";
       description = "Commonly used conduit functions, for both chunked and unchunked data";
       license = stdenv.lib.licenses.mit;
     }) {};
  "conduit-extra" = callPackage
    ({ mkDerivation, async, attoparsec, base, blaze-builder, bytestring
     , bytestring-builder, conduit, criterion, directory, exceptions
     , filepath, hspec, monad-control, network, primitive, process
     , resourcet, stm, streaming-commons, text, transformers
     , transformers-base
     }:
     mkDerivation {
       pname = "conduit-extra";
       version = "1.1.7.2";
       sha256 = "0nb7sd8a5lbl9frypz9clr808ircln356244nzm7kl5qd53752iw";
       revision = "1";
       editedCabalFile = "1fxwb081pnh88llxlmasz6qjymridr2n9ql4i96a3fzrpalzmdh2";
       libraryHaskellDepends = [
         attoparsec base blaze-builder bytestring conduit directory filepath
         monad-control network primitive process resourcet stm
         streaming-commons text transformers transformers-base
       ];
       testHaskellDepends = [
         async attoparsec base blaze-builder bytestring bytestring-builder
         conduit exceptions hspec process resourcet stm streaming-commons
         text transformers transformers-base
       ];
       benchmarkHaskellDepends = [
         base blaze-builder bytestring bytestring-builder conduit criterion
         transformers
       ];
       homepage = "http://github.com/snoyberg/conduit";
       description = "Batteries included conduit: adapters for common libraries";
       license = stdenv.lib.licenses.mit;
     }) {};
  "configurator" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, directory, filepath
     , hashable, HUnit, test-framework, test-framework-hunit, text
     , unix-compat, unordered-containers
     }:
     mkDerivation {
       pname = "configurator";
       version = "0.3.0.0";
       sha256 = "1d1iq1knwiq6ia5g64rw5hqm6dakz912qj13r89737rfcxmrkfbf";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         attoparsec base bytestring directory hashable text unix-compat
         unordered-containers
       ];
       testHaskellDepends = [
         base bytestring directory filepath HUnit test-framework
         test-framework-hunit text
       ];
       homepage = "http://github.com/bos/configurator";
       description = "Configuration management";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "connection" = callPackage
    ({ mkDerivation, base, byteable, bytestring, containers
     , crypto-random, data-default-class, network, securemem, socks, tls
     , x509, x509-store, x509-system, x509-validation
     }:
     mkDerivation {
       pname = "connection";
       version = "0.2.4";
       sha256 = "0sl0vxn02bbyk7lcclr7ml93wpap2f042da3c9v9ppvbvs8jmf7j";
       revision = "1";
       editedCabalFile = "0p47frbczm75ycim2qiygkx9dmfx5pvc4jsdh1qfgyvpv24syf8h";
       libraryHaskellDepends = [
         base byteable bytestring containers crypto-random
         data-default-class network securemem socks tls x509 x509-store
         x509-system x509-validation
       ];
       homepage = "http://github.com/vincenthz/hs-connection";
       description = "Simple and easy network connections API";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "constraints" = callPackage
    ({ mkDerivation, base, ghc-prim, newtype }:
     mkDerivation {
       pname = "constraints";
       version = "0.4.1.3";
       sha256 = "1w3ssvg30rfkp1y20vx0fbq1c0md2wys2rh50mih7645djv56hyx";
       revision = "1";
       editedCabalFile = "0n9l48c6dwm8yfcya9vxqgrdxzvv20jnccg0dp9kfvxmqgpsq147";
       libraryHaskellDepends = [ base ghc-prim newtype ];
       homepage = "http://github.com/ekmett/constraints/";
       description = "Constraint manipulation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "consul-haskell" = callPackage
    ({ mkDerivation, aeson, base, base64-bytestring, bytestring
     , http-client, HUnit, network, tasty, tasty-hunit, text
     , transformers
     }:
     mkDerivation {
       pname = "consul-haskell";
       version = "0.1";
       sha256 = "0i6xq7xd4bikb46mrcabiwwfga25wqcg7z45bh2hbqhf7yq8xjm6";
       libraryHaskellDepends = [
         aeson base base64-bytestring bytestring http-client network text
         transformers
       ];
       testHaskellDepends = [
         base http-client HUnit network tasty tasty-hunit
       ];
       doCheck = false;
       homepage = "https://github.com/alphaHeavy/consul-haskell";
       description = "A consul client for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "containers-unicode-symbols" = callPackage
    ({ mkDerivation, base, base-unicode-symbols, containers }:
     mkDerivation {
       pname = "containers-unicode-symbols";
       version = "0.3.1.1";
       sha256 = "0ccv7rqkykfk5wmr73mc0kwrnwyzakgp5x495dgwn5nila3g4ma6";
       libraryHaskellDepends = [ base base-unicode-symbols containers ];
       homepage = "http://haskell.org/haskellwiki/Unicode-symbols";
       description = "Unicode alternatives for common functions and operators";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "contravariant" = callPackage
    ({ mkDerivation, base, semigroups, StateVar, transformers
     , transformers-compat, void
     }:
     mkDerivation {
       pname = "contravariant";
       version = "1.3.1";
       sha256 = "18zmjn2d4ig0sfbbdajjzmqd9fjcyb6gjf4xywimdjg6wv053cxw";
       revision = "1";
       editedCabalFile = "0my8fxfiwy01zl4zn6raxpqqjsmzjk3jhm8fdb82204r8g6pdk2s";
       libraryHaskellDepends = [
         base semigroups StateVar transformers transformers-compat void
       ];
       homepage = "http://github.com/ekmett/contravariant/";
       description = "Contravariant functors";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "control-monad-free" = callPackage
    ({ mkDerivation, base, prelude-extras, transformers }:
     mkDerivation {
       pname = "control-monad-free";
       version = "0.6.1";
       sha256 = "11i297ngwb5ck23vsr84fh5qx4hn7fzm9ml90y79lwi97hyigagy";
       revision = "1";
       editedCabalFile = "1901lm2md7flri4ms745lgla18x2k7v0xh51jbjbx6202ppcx3fh";
       libraryHaskellDepends = [ base prelude-extras transformers ];
       homepage = "http://github.com/pepeiborra/control-monad-free";
       description = "Free monads and monad transformers";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "control-monad-loop" = callPackage
    ({ mkDerivation, base, transformers, transformers-base }:
     mkDerivation {
       pname = "control-monad-loop";
       version = "0.1";
       sha256 = "003k4pp6wgn30m9ksbh8680f0klzsvd90wsl9jpqs9lpg14hi6zj";
       libraryHaskellDepends = [ base transformers transformers-base ];
       homepage = "https://github.com/joeyadams/haskell-control-monad-loop";
       description = "Simple monad transformer for imperative-style loops";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "convertible" = callPackage
    ({ mkDerivation, base, bytestring, containers, mtl, old-locale
     , old-time, text, time
     }:
     mkDerivation {
       pname = "convertible";
       version = "1.1.1.0";
       sha256 = "0v18ap1mccnndgxmbfgyjdicg8jlss01bd5fq8a576dr0h4sgyg9";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring containers mtl old-locale old-time text time
       ];
       homepage = "http://hackage.haskell.org/package/convertible";
       description = "Typeclasses and instances for converting between types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cookie" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring, data-default
     , deepseq, HUnit, old-locale, QuickCheck, tasty, tasty-hunit
     , tasty-quickcheck, text, time
     }:
     mkDerivation {
       pname = "cookie";
       version = "0.4.1.4";
       sha256 = "0axvljw34cjw47fxwxqql8rvjsyp9gxfbaijmysy5j10kx8s931d";
       revision = "2";
       editedCabalFile = "0rfph7jfqlvkckf7xz71cf6idziwv5i664gb9cq62l9qx7qwmpc5";
       libraryHaskellDepends = [
         base blaze-builder bytestring data-default deepseq old-locale text
         time
       ];
       testHaskellDepends = [
         base blaze-builder bytestring HUnit QuickCheck tasty tasty-hunit
         tasty-quickcheck text time
       ];
       homepage = "http://github.com/snoyberg/cookie";
       description = "HTTP cookie parsing and rendering";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "courier" = callPackage
    ({ mkDerivation, async, base, bytestring, cereal, containers
     , directory, hslogger, HUnit, network, stm, test-framework
     , test-framework-hunit, text, uuid
     }:
     mkDerivation {
       pname = "courier";
       version = "0.1.0.15";
       sha256 = "1aj9anrw7jfqx8s2xkdznqs212f54g6i2lcf79bgnkmxsbax252v";
       libraryHaskellDepends = [
         async base bytestring cereal containers hslogger network stm text
         uuid
       ];
       testHaskellDepends = [
         async base cereal containers directory hslogger HUnit network stm
         test-framework test-framework-hunit
       ];
       homepage = "http://github.com/hargettp/courier";
       description = "A message-passing library for simplifying network applications";
       license = stdenv.lib.licenses.mit;
     }) {};
  "cpphs" = callPackage
    ({ mkDerivation, base, directory, old-locale, old-time, polyparse
     }:
     mkDerivation {
       pname = "cpphs";
       version = "1.19";
       sha256 = "0fiyqyy7zzzbp0jsgl3syvm5db8n42h88ps7qzayxbsycjz9fp70";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base directory old-locale old-time polyparse
       ];
       executableHaskellDepends = [
         base directory old-locale old-time polyparse
       ];
       homepage = "http://projects.haskell.org/cpphs/";
       description = "A liberalised re-implementation of cpp, the C pre-processor";
       license = "LGPL";
     }) {};
  "cprng-aes" = callPackage
    ({ mkDerivation, base, byteable, bytestring, cipher-aes, criterion
     , crypto-random, mtl
     }:
     mkDerivation {
       pname = "cprng-aes";
       version = "0.6.1";
       sha256 = "1wr15kbmk1g3l8a75n0iwbzqg24ixv78slwzwb2q6rlcvq0jlnb4";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base byteable bytestring cipher-aes crypto-random
       ];
       benchmarkHaskellDepends = [
         base bytestring criterion crypto-random mtl
       ];
       homepage = "http://github.com/vincenthz/hs-cprng-aes";
       description = "Crypto Pseudo Random Number Generator using AES in counter mode";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cpu" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "cpu";
       version = "0.1.2";
       sha256 = "0x19mlanmkg96h6h1i04w2i631z84y4rbk22ki4zhgsajysgw9sn";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base ];
       homepage = "http://github.com/vincenthz/hs-cpu";
       description = "Cpu information and properties helpers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "criterion" = callPackage
    ({ mkDerivation, aeson, ansi-wl-pprint, base, binary, bytestring
     , cassava, containers, deepseq, directory, filepath, Glob, hastache
     , HUnit, mtl, mwc-random, optparse-applicative, parsec, QuickCheck
     , statistics, test-framework, test-framework-hunit
     , test-framework-quickcheck2, text, time, transformers
     , transformers-compat, vector, vector-algorithms
     }:
     mkDerivation {
       pname = "criterion";
       version = "1.1.0.0";
       sha256 = "0f1d8lxb9jhrhcm0gbqqimmq52q36b5h1nqznmjmxa75nqdx9vaw";
       revision = "3";
       editedCabalFile = "15kzg88wp9s3hhjxk603jrsnzn6zhxp7ihsg689aamiyaym8q9nj";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson ansi-wl-pprint base binary bytestring cassava containers
         deepseq directory filepath Glob hastache mtl mwc-random
         optparse-applicative parsec statistics text time transformers
         transformers-compat vector vector-algorithms
       ];
       executableHaskellDepends = [ base ];
       testHaskellDepends = [
         base bytestring HUnit QuickCheck statistics test-framework
         test-framework-hunit test-framework-quickcheck2 vector
       ];
       homepage = "http://www.serpentine.com/criterion";
       description = "Robust, reliable performance measurement and analysis";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "crypto-api" = callPackage
    ({ mkDerivation, base, bytestring, cereal, entropy, tagged
     , transformers
     }:
     mkDerivation {
       pname = "crypto-api";
       version = "0.13.2";
       sha256 = "1vc27qcgbg7hf50rkqhlrs58zn1888ilh4b6wrrm07bnm48xacak";
       libraryHaskellDepends = [
         base bytestring cereal entropy tagged transformers
       ];
       homepage = "https://github.com/TomMD/crypto-api";
       description = "A generic interface for cryptographic operations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "crypto-api-tests" = callPackage
    ({ mkDerivation, base, bytestring, cereal, crypto-api, directory
     , filepath, HUnit, QuickCheck, test-framework, test-framework-hunit
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "crypto-api-tests";
       version = "0.3";
       sha256 = "0w3j43jdrlj28jryp18hc6q84nkl2yf4vs1hhgrsk7gb9kfyqjpl";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base bytestring cereal crypto-api directory filepath HUnit
         QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       homepage = "http://trac.haskell.org/crypto-api/wiki";
       description = "A test framework and KATs for cryptographic operations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "crypto-cipher-tests" = callPackage
    ({ mkDerivation, base, byteable, bytestring, crypto-cipher-types
     , HUnit, mtl, QuickCheck, securemem, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "crypto-cipher-tests";
       version = "0.0.11";
       sha256 = "19wqignlq90qwpam01hnmmrxaxh5lkax9l1l6rlbi4a07nvp1dnz";
       libraryHaskellDepends = [
         base byteable bytestring crypto-cipher-types HUnit mtl QuickCheck
         securemem test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       testHaskellDepends = [
         base byteable bytestring crypto-cipher-types HUnit mtl QuickCheck
         test-framework test-framework-hunit test-framework-quickcheck2
       ];
       homepage = "http://github.com/vincenthz/hs-crypto-cipher";
       description = "Generic cryptography cipher tests";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "crypto-cipher-types" = callPackage
    ({ mkDerivation, base, byteable, bytestring, securemem }:
     mkDerivation {
       pname = "crypto-cipher-types";
       version = "0.0.9";
       sha256 = "03qa1i1kj07pfrxsi7fiaqnnd0vi94jd4jfswbmnm4gp1nvzcwr0";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base byteable bytestring securemem ];
       homepage = "http://github.com/vincenthz/hs-crypto-cipher";
       description = "Generic cryptography cipher types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "crypto-numbers" = callPackage
    ({ mkDerivation, base, byteable, bytestring, criterion
     , crypto-random, ghc-prim, integer-gmp, mtl, tasty, tasty-hunit
     , tasty-quickcheck, vector
     }:
     mkDerivation {
       pname = "crypto-numbers";
       version = "0.2.7";
       sha256 = "19l9y5jzvqrqfam13xin9m9ca0s5ql86yv0cjn6dzkydx4byn2j2";
       revision = "1";
       editedCabalFile = "1jjkhid8kwrz5894nad537rqxzzyx6b687bmgyk70nv0ny336j9b";
       libraryHaskellDepends = [
         base bytestring crypto-random ghc-prim integer-gmp vector
       ];
       testHaskellDepends = [
         base byteable bytestring crypto-random tasty tasty-hunit
         tasty-quickcheck vector
       ];
       benchmarkHaskellDepends = [ base bytestring criterion mtl ];
       doCheck = false;
       homepage = "https://github.com/vincenthz/hs-crypto-numbers";
       description = "Cryptographic numbers: functions and algorithms";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "crypto-pubkey" = callPackage
    ({ mkDerivation, base, byteable, bytestring, criterion
     , crypto-numbers, crypto-pubkey-types, crypto-random, cryptohash
     , deepseq, mtl, tasty, tasty-hunit, tasty-kat, tasty-quickcheck
     }:
     mkDerivation {
       pname = "crypto-pubkey";
       version = "0.2.8";
       sha256 = "0vmmx2fqq2xc3xfavy22i2nyynpk88jhmjr62qgxw5w5qgsz5k60";
       libraryHaskellDepends = [
         base byteable bytestring crypto-numbers crypto-pubkey-types
         crypto-random cryptohash
       ];
       testHaskellDepends = [
         base byteable bytestring crypto-numbers crypto-pubkey-types
         crypto-random cryptohash tasty tasty-hunit tasty-kat
         tasty-quickcheck
       ];
       benchmarkHaskellDepends = [
         base bytestring criterion crypto-pubkey-types crypto-random
         cryptohash deepseq mtl
       ];
       doCheck = false;
       homepage = "https://github.com/vincenthz/hs-crypto-pubkey";
       description = "Public Key cryptography";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "crypto-pubkey-types" = callPackage
    ({ mkDerivation, asn1-encoding, asn1-types, base }:
     mkDerivation {
       pname = "crypto-pubkey-types";
       version = "0.4.3";
       sha256 = "0q0wlzjmpx536h1zcdzrpxjkvqw8abj8z0ci38138kpch4igbnby";
       libraryHaskellDepends = [ asn1-encoding asn1-types base ];
       homepage = "http://github.com/vincenthz/hs-crypto-pubkey-types";
       description = "Generic cryptography Public keys algorithm types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "crypto-random" = callPackage
    ({ mkDerivation, base, bytestring, securemem, unix, vector }:
     mkDerivation {
       pname = "crypto-random";
       version = "0.0.9";
       sha256 = "0139kbbb2h7vshf68y3fvjda29lhj7jjwl4vq78w4y8k8hc7l2hp";
       libraryHaskellDepends = [ base bytestring securemem unix vector ];
       homepage = "http://github.com/vincenthz/hs-crypto-random";
       description = "Simple cryptographic random related types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "crypto-random-api" = callPackage
    ({ mkDerivation, base, bytestring, entropy }:
     mkDerivation {
       pname = "crypto-random-api";
       version = "0.2.0";
       sha256 = "0z49kwgjj7rz235642q64hbkgp0zl6ipn29xd19yb75xc5q7gsan";
       libraryHaskellDepends = [ base bytestring entropy ];
       homepage = "http://github.com/vincenthz/hs-crypto-random-api";
       description = "Simple random generators API for cryptography related code";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cryptocipher" = callPackage
    ({ mkDerivation, base, cipher-aes, cipher-blowfish, cipher-camellia
     , cipher-des, cipher-rc4, crypto-cipher-types
     }:
     mkDerivation {
       pname = "cryptocipher";
       version = "0.6.2";
       sha256 = "0ip3a2as0df6drl29sryayxx22sx55v6bs60s2fh3i1nxqnydf9l";
       libraryHaskellDepends = [
         base cipher-aes cipher-blowfish cipher-camellia cipher-des
         cipher-rc4 crypto-cipher-types
       ];
       homepage = "http://github.com/vincenthz/hs-crypto-cipher";
       description = "Symmetrical block and stream ciphers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cryptohash" = callPackage
    ({ mkDerivation, base, byteable, bytestring, criterion, ghc-prim
     , HUnit, QuickCheck, tasty, tasty-hunit, tasty-quickcheck
     }:
     mkDerivation {
       pname = "cryptohash";
       version = "0.11.6";
       sha256 = "0dyzcaxr8vhzqq9hj4240rxpi87h4ps87yz09klz723shls26f6s";
       libraryHaskellDepends = [ base byteable bytestring ghc-prim ];
       testHaskellDepends = [
         base byteable bytestring HUnit QuickCheck tasty tasty-hunit
         tasty-quickcheck
       ];
       benchmarkHaskellDepends = [ base byteable bytestring criterion ];
       homepage = "http://github.com/vincenthz/hs-cryptohash";
       description = "collection of crypto hashes, fast, pure and practical";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cryptohash-conduit" = callPackage
    ({ mkDerivation, base, bytestring, conduit, conduit-extra
     , cryptohash, resourcet, transformers
     }:
     mkDerivation {
       pname = "cryptohash-conduit";
       version = "0.1.1";
       sha256 = "1kmlskgb0jx8hkzdncr24aqir9k1kyfcb2rypvkdld1yin4nslga";
       libraryHaskellDepends = [
         base bytestring conduit conduit-extra cryptohash resourcet
         transformers
       ];
       homepage = "http://github.com/vincenthz/hs-cryptohash-conduit";
       description = "cryptohash conduit";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cryptohash-cryptoapi" = callPackage
    ({ mkDerivation, base, bytestring, cereal, crypto-api, cryptohash
     , tagged
     }:
     mkDerivation {
       pname = "cryptohash-cryptoapi";
       version = "0.1.3";
       sha256 = "0wj53p32js8lfg0i8akrljpash0jdiyv2vcqpmjbd4dq2fx81w2n";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base bytestring cereal crypto-api cryptohash tagged
       ];
       homepage = "http://github.com/vincenthz/hs-cryptohash-cryptoapi";
       description = "Crypto-api interfaces for cryptohash";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cryptol" = callPackage
    ({ mkDerivation, alex, ansi-terminal, array, async, base
     , containers, deepseq, directory, filepath, gitrev, GraphSCC, happy
     , haskeline, heredoc, monadLib, old-time, presburger, pretty
     , process, QuickCheck, random, sbv, smtLib, syb, template-haskell
     , text, tf-random, transformers, utf8-string
     }:
     mkDerivation {
       pname = "cryptol";
       version = "2.2.2";
       sha256 = "1rqnrjxvkisis7m5zfhyw8717a9jnjgdmm6nnbdrnbxmsabsad20";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         array async base containers deepseq directory filepath gitrev
         GraphSCC heredoc monadLib old-time presburger pretty process
         QuickCheck random sbv smtLib syb template-haskell text tf-random
         transformers utf8-string
       ];
       libraryToolDepends = [ alex happy ];
       executableHaskellDepends = [
         ansi-terminal base containers deepseq directory filepath haskeline
         monadLib process random sbv tf-random transformers
       ];
       homepage = "http://www.cryptol.net/";
       description = "Cryptol: The Language of Cryptography";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "css-text" = callPackage
    ({ mkDerivation, attoparsec, base, hspec, QuickCheck, text }:
     mkDerivation {
       pname = "css-text";
       version = "0.1.2.1";
       sha256 = "1xi1n2f0g8y43p95lynhcg50wxbq7hqfzbfzm7fy8mn7gvd920nw";
       libraryHaskellDepends = [ attoparsec base text ];
       testHaskellDepends = [ attoparsec base hspec QuickCheck text ];
       homepage = "http://www.yesodweb.com/";
       description = "CSS parser and renderer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "csv" = callPackage
    ({ mkDerivation, base, filepath, parsec }:
     mkDerivation {
       pname = "csv";
       version = "0.1.2";
       sha256 = "00767ai09wm7f0yzmpqck3cpgxncpr9djnmmz5l17ajz69139x4c";
       libraryHaskellDepends = [ base filepath parsec ];
       description = "CSV loader and dumper";
       license = stdenv.lib.licenses.mit;
     }) {};
  "csv-conduit" = callPackage
    ({ mkDerivation, array, attoparsec, base, blaze-builder, bytestring
     , conduit, conduit-extra, containers, data-default, directory
     , ghc-prim, HUnit, mmorph, monad-control, mtl, primitive, resourcet
     , test-framework, test-framework-hunit, text, transformers
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "csv-conduit";
       version = "0.6.6";
       sha256 = "12sxxv92qblsa63zdnl80a8yk01b4cvk9k6h58w82bvcy5m0aabk";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         array attoparsec base blaze-builder bytestring conduit
         conduit-extra containers data-default ghc-prim mmorph monad-control
         mtl primitive resourcet text transformers unordered-containers
         vector
       ];
       executableHaskellDepends = [
         base bytestring containers directory mtl primitive text
         transformers vector
       ];
       testHaskellDepends = [
         base bytestring containers directory HUnit mtl primitive
         test-framework test-framework-hunit text transformers vector
       ];
       homepage = "http://github.com/ozataman/csv-conduit";
       description = "A flexible, fast, conduit-based CSV parser library for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cubicspline" = callPackage
    ({ mkDerivation, base, hmatrix, safe }:
     mkDerivation {
       pname = "cubicspline";
       version = "0.1.1";
       sha256 = "0n4c80vjf8sh5wf1n0qp9z8v8z7mj7rfygjg5a02sz0s6l7q1i8s";
       revision = "1";
       editedCabalFile = "154ksnih60zm8l4qnyrfrnkmlwj6jj91g2lsfkhi10ka0dyyahcs";
       libraryHaskellDepends = [ base hmatrix safe ];
       description = "Natural cubic spline interpolation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "curl" = callPackage
    ({ mkDerivation, base, bytestring, containers, curl }:
     mkDerivation {
       pname = "curl";
       version = "1.3.8";
       sha256 = "0vj4hpaa30jz7c702xpsfvqaqdxz28zslsqnsfx6bf6dpwvck1wh";
       revision = "1";
       editedCabalFile = "02sq2bjw5igc2k9f9ssh58k2ivii2xsvk5r00ky3cxh8j61qy86q";
       configureFlags = [ "-fnew-base" ];
       libraryHaskellDepends = [ base bytestring containers ];
       librarySystemDepends = [ curl ];
       description = "Haskell binding to libcurl";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) curl;};
  "data-accessor" = callPackage
    ({ mkDerivation, array, base, containers, transformers }:
     mkDerivation {
       pname = "data-accessor";
       version = "0.2.2.6";
       sha256 = "0668qgllmp2911ppsb0g9z95nq2x0h2cvzyyjlb6iwhnjzyyg7gf";
       libraryHaskellDepends = [ array base containers transformers ];
       homepage = "http://www.haskell.org/haskellwiki/Record_access";
       description = "Utilities for accessing and manipulating fields of records";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-accessor-mtl" = callPackage
    ({ mkDerivation, base, data-accessor, mtl }:
     mkDerivation {
       pname = "data-accessor-mtl";
       version = "0.2.0.4";
       sha256 = "1i8lk0vy04giixng5addgj740cbvwlc7g62qgrmhfip0w9k93kqh";
       libraryHaskellDepends = [ base data-accessor mtl ];
       homepage = "http://www.haskell.org/haskellwiki/Record_access";
       description = "Use Accessor to access state in mtl State monad class";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-binary-ieee754" = callPackage
    ({ mkDerivation, base, binary }:
     mkDerivation {
       pname = "data-binary-ieee754";
       version = "0.4.4";
       sha256 = "02nzg1barhqhpf4x26mpzvk7jd29nali033qy01adjplv2z5m5sr";
       libraryHaskellDepends = [ base binary ];
       homepage = "https://john-millikin.com/software/data-binary-ieee754/";
       description = "Parser/Serialiser for IEEE-754 floating-point values";
       license = stdenv.lib.licenses.mit;
     }) {};
  "data-default" = callPackage
    ({ mkDerivation, base, data-default-class
     , data-default-instances-base, data-default-instances-containers
     , data-default-instances-dlist, data-default-instances-old-locale
     }:
     mkDerivation {
       pname = "data-default";
       version = "0.5.3";
       sha256 = "0d1hm0l9kim3kszshr4msmgzizrzha48gz2kb7b61p7n3gs70m7c";
       libraryHaskellDepends = [
         base data-default-class data-default-instances-base
         data-default-instances-containers data-default-instances-dlist
         data-default-instances-old-locale
       ];
       description = "A class for types with a default value";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-default-class" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "data-default-class";
       version = "0.0.1";
       sha256 = "0ccgr3jllinchqhw3lsn73ic6axk4196if5274rr1rghls0fxj5d";
       libraryHaskellDepends = [ base ];
       description = "A class for types with a default value";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-default-instances-base" = callPackage
    ({ mkDerivation, base, data-default-class }:
     mkDerivation {
       pname = "data-default-instances-base";
       version = "0.0.1";
       sha256 = "1832nq6by91f1iw73ycvkbgn8kpra83pvf2q61hy47xffh0zy4pb";
       libraryHaskellDepends = [ base data-default-class ];
       description = "Default instances for types in base";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-default-instances-containers" = callPackage
    ({ mkDerivation, base, containers, data-default-class }:
     mkDerivation {
       pname = "data-default-instances-containers";
       version = "0.0.1";
       sha256 = "06h8xka031w752a7cjlzghvr8adqbl95xj9z5zc1b62w02phfpm5";
       libraryHaskellDepends = [ base containers data-default-class ];
       description = "Default instances for types in containers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-default-instances-dlist" = callPackage
    ({ mkDerivation, base, data-default-class, dlist }:
     mkDerivation {
       pname = "data-default-instances-dlist";
       version = "0.0.1";
       sha256 = "0narkdqiprhgayjiawrr4390h4rq4pl2pb6mvixbv2phrc8kfs3x";
       libraryHaskellDepends = [ base data-default-class dlist ];
       description = "Default instances for types in dlist";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-default-instances-old-locale" = callPackage
    ({ mkDerivation, base, data-default-class, old-locale }:
     mkDerivation {
       pname = "data-default-instances-old-locale";
       version = "0.0.1";
       sha256 = "00h81i5phib741yj517p8mbnc48myvfj8axzsw44k34m48lv1lv0";
       libraryHaskellDepends = [ base data-default-class old-locale ];
       description = "Default instances for types in old-locale";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-inttrie" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "data-inttrie";
       version = "0.1.0";
       sha256 = "00kzf3cw0y0848cprmx3i7g70rmr92hhfzn60a2x98vb8f7y3814";
       libraryHaskellDepends = [ base ];
       homepage = "http://github.com/luqui/data-inttrie";
       description = "A lazy, infinite trie of integers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-lens-light" = callPackage
    ({ mkDerivation, base, mtl, template-haskell }:
     mkDerivation {
       pname = "data-lens-light";
       version = "0.1.2.1";
       sha256 = "038vfzb4vxk1qb0246l2kgv9br37wg59wnlhzyjpn97lypwlf68w";
       libraryHaskellDepends = [ base mtl template-haskell ];
       homepage = "https://github.com/feuerbach/data-lens-light";
       description = "Simple lenses, minimum dependencies";
       license = stdenv.lib.licenses.mit;
     }) {};
  "data-memocombinators" = callPackage
    ({ mkDerivation, array, base, data-inttrie }:
     mkDerivation {
       pname = "data-memocombinators";
       version = "0.5.1";
       sha256 = "1mvfc1xri3kgkx5q7za01bqg1x3bfvbgcffw5vwl6jmq4hh1sd5l";
       libraryHaskellDepends = [ array base data-inttrie ];
       homepage = "http://github.com/luqui/data-memocombinators";
       description = "Combinators for building memo tables";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-reify" = callPackage
    ({ mkDerivation, base, containers }:
     mkDerivation {
       pname = "data-reify";
       version = "0.6";
       sha256 = "0mif89mpj5zvw8czc51mfj27jw2ipxd2awnm9q13s46k6s5pv6a7";
       revision = "1";
       editedCabalFile = "1h9kr0d9xmxf5y5hlygfnv8r7kvwibap6i7bjzr65zl7vczms630";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base containers ];
       executableHaskellDepends = [ base ];
       homepage = "http://www.ittc.ku.edu/csdl/fpg/Tools/IOReification";
       description = "Reify a recursive data structure into an explicit graph";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "deepseq-generics" = callPackage
    ({ mkDerivation, base, deepseq, ghc-prim, HUnit, test-framework
     , test-framework-hunit
     }:
     mkDerivation {
       pname = "deepseq-generics";
       version = "0.1.1.2";
       sha256 = "01pvigx8n9p8hwbzp2qiq6kzf7cxiam843jz2sjgliacmmp1v7l3";
       revision = "1";
       editedCabalFile = "1zf97hnh5djrg00ibjgq79hwcapvvivhrqlc9m87cy16x5zqcliz";
       libraryHaskellDepends = [ base deepseq ghc-prim ];
       testHaskellDepends = [
         base deepseq ghc-prim HUnit test-framework test-framework-hunit
       ];
       homepage = "https://github.com/hvr/deepseq-generics";
       description = "GHC.Generics-based Control.DeepSeq.rnf implementation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "derive" = callPackage
    ({ mkDerivation, base, bytestring, containers, directory, filepath
     , haskell-src-exts, pretty, process, syb, template-haskell
     , transformers, uniplate
     }:
     mkDerivation {
       pname = "derive";
       version = "2.5.22";
       sha256 = "0g2grz9y23n8g4wwjinx5cc70aawswl84i3njgj6l1fl29fk1yf2";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring containers directory filepath haskell-src-exts
         pretty process syb template-haskell transformers uniplate
       ];
       homepage = "https://github.com/ndmitchell/derive#readme";
       description = "A program and library to derive instances for data types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "descriptive" = callPackage
    ({ mkDerivation, aeson, base, bifunctors, containers, hspec, HUnit
     , mtl, scientific, text, transformers, vector
     }:
     mkDerivation {
       pname = "descriptive";
       version = "0.9.3";
       sha256 = "1kb6fca7fsg82ij6zlc85p9mfaxr3l5z45sjjcx6zvli1lknmqz0";
       revision = "3";
       editedCabalFile = "1p4w398fz5zhvfa1n2f2618avb59lc8b0hx6cgzy6qqqgb4zziv2";
       libraryHaskellDepends = [
         aeson base bifunctors containers mtl scientific text transformers
         vector
       ];
       testHaskellDepends = [
         aeson base bifunctors containers hspec HUnit mtl text transformers
       ];
       homepage = "https://github.com/chrisdone/descriptive";
       description = "Self-describing consumers/parsers; forms, cmd-line args, JSON, etc";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "diagrams" = callPackage
    ({ mkDerivation, diagrams-contrib, diagrams-core, diagrams-lib
     , diagrams-svg
     }:
     mkDerivation {
       pname = "diagrams";
       version = "1.2";
       sha256 = "17j7hyd86h9msc8ni19agb0yhixga76q9kh4i109iyiyqizdnfhg";
       libraryHaskellDepends = [
         diagrams-contrib diagrams-core diagrams-lib diagrams-svg
       ];
       doHaddock = false;
       homepage = "http://projects.haskell.org/diagrams";
       description = "Embedded domain-specific language for declarative vector graphics";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "diagrams-cairo" = callPackage
    ({ mkDerivation, base, bytestring, cairo, colour, containers
     , data-default-class, diagrams-core, diagrams-lib, directory
     , filepath, hashable, JuicyPixels, lens, mtl, old-time
     , optparse-applicative, pango, process, split, statestack, time
     , transformers, unix, vector
     }:
     mkDerivation {
       pname = "diagrams-cairo";
       version = "1.2.0.7";
       sha256 = "0z87qrp2z4j2x5zwwczrjw7kps7izcyb045665319kp9yp0dbzjk";
       libraryHaskellDepends = [
         base bytestring cairo colour containers data-default-class
         diagrams-core diagrams-lib directory filepath hashable JuicyPixels
         lens mtl old-time optparse-applicative pango process split
         statestack time transformers unix vector
       ];
       homepage = "http://projects.haskell.org/diagrams";
       description = "Cairo backend for diagrams drawing EDSL";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "diagrams-canvas" = callPackage
    ({ mkDerivation, base, blank-canvas, cmdargs, containers
     , data-default-class, diagrams-core, diagrams-lib, lens, mtl
     , NumInstances, optparse-applicative, statestack, text
     , vector-space
     }:
     mkDerivation {
       pname = "diagrams-canvas";
       version = "0.3.0.4";
       sha256 = "1jc47y739rg51czny0z17pspskim4ss2jraw6h5gyhnr8f50rv5w";
       libraryHaskellDepends = [
         base blank-canvas cmdargs containers data-default-class
         diagrams-core diagrams-lib lens mtl NumInstances
         optparse-applicative statestack text vector-space
       ];
       homepage = "http://projects.haskell.org/diagrams/";
       description = "HTML5 canvas backend for diagrams drawing EDSL";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "diagrams-contrib" = callPackage
    ({ mkDerivation, arithmoi, base, circle-packing, colour, containers
     , data-default, data-default-class, diagrams-core, diagrams-lib
     , force-layout, HUnit, lens, MonadRandom, mtl, parsec, QuickCheck
     , semigroups, split, test-framework, test-framework-hunit
     , test-framework-quickcheck2, text, vector-space
     , vector-space-points
     }:
     mkDerivation {
       pname = "diagrams-contrib";
       version = "1.1.2.6";
       sha256 = "0bkil4klkdx30q6hwdcag20fbgx04vcn9kl7196mccl7yhh1msi0";
       libraryHaskellDepends = [
         arithmoi base circle-packing colour containers data-default
         data-default-class diagrams-core diagrams-lib force-layout lens
         MonadRandom mtl parsec semigroups split text vector-space
         vector-space-points
       ];
       testHaskellDepends = [
         base containers diagrams-lib HUnit QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2
       ];
       homepage = "http://projects.haskell.org/diagrams/";
       description = "Collection of user contributions to diagrams EDSL";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "diagrams-core" = callPackage
    ({ mkDerivation, base, containers, dual-tree, lens, MemoTrie
     , monoid-extras, newtype, semigroups, vector-space
     , vector-space-points
     }:
     mkDerivation {
       pname = "diagrams-core";
       version = "1.2.0.6";
       sha256 = "1i8h7arzhq2qzkv9hjldz3vymcns7y1w3wn56w57k2sbx3vx0zls";
       libraryHaskellDepends = [
         base containers dual-tree lens MemoTrie monoid-extras newtype
         semigroups vector-space vector-space-points
       ];
       homepage = "http://projects.haskell.org/diagrams";
       description = "Core libraries for diagrams EDSL";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "diagrams-lib" = callPackage
    ({ mkDerivation, active, array, base, colour, containers
     , data-default-class, diagrams-core, dual-tree, filepath
     , fingertree, hashable, intervals, JuicyPixels, lens, MemoTrie
     , monoid-extras, optparse-applicative, semigroups, tagged
     , vector-space, vector-space-points
     }:
     mkDerivation {
       pname = "diagrams-lib";
       version = "1.2.0.9";
       sha256 = "1naamjx7i9k3jwbvrz5jwhsfmri3jgjxqwalckyc473pclf6y4k9";
       libraryHaskellDepends = [
         active array base colour containers data-default-class
         diagrams-core dual-tree filepath fingertree hashable intervals
         JuicyPixels lens MemoTrie monoid-extras optparse-applicative
         semigroups tagged vector-space vector-space-points
       ];
       homepage = "http://projects.haskell.org/diagrams";
       description = "Embedded domain-specific language for declarative graphics";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "diagrams-postscript" = callPackage
    ({ mkDerivation, base, containers, data-default-class
     , diagrams-core, diagrams-lib, dlist, filepath, hashable, lens
     , monoid-extras, mtl, semigroups, split, vector-space
     }:
     mkDerivation {
       pname = "diagrams-postscript";
       version = "1.1.0.5";
       sha256 = "1nriv964zmzlcyqxb3drfbxsimg786n4bsyyy1020rchf3df8rp5";
       libraryHaskellDepends = [
         base containers data-default-class diagrams-core diagrams-lib dlist
         filepath hashable lens monoid-extras mtl semigroups split
         vector-space
       ];
       homepage = "http://projects.haskell.org/diagrams/";
       description = "Postscript backend for diagrams drawing EDSL";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "diagrams-rasterific" = callPackage
    ({ mkDerivation, base, bytestring, containers, data-default-class
     , diagrams-core, diagrams-lib, directory, filepath, FontyFruity
     , JuicyPixels, lens, mtl, old-time, optparse-applicative, process
     , Rasterific, split, statestack, time, unix
     }:
     mkDerivation {
       pname = "diagrams-rasterific";
       version = "0.1.0.8";
       sha256 = "08a80w466hz89xp82n5yqqisd2vkd1876z4hw2p99bg22qr8b87k";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base bytestring containers data-default-class diagrams-core
         diagrams-lib directory filepath FontyFruity JuicyPixels lens mtl
         old-time optparse-applicative process Rasterific split statestack
         time unix
       ];
       homepage = "http://projects.haskell.org/diagrams/";
       description = "Rasterific backend for diagrams";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "diagrams-svg" = callPackage
    ({ mkDerivation, base, base64-bytestring, blaze-markup, blaze-svg
     , bytestring, colour, containers, diagrams-core, diagrams-lib
     , directory, filepath, hashable, JuicyPixels, lens, monoid-extras
     , mtl, old-time, process, split, time, unix, vector-space
     }:
     mkDerivation {
       pname = "diagrams-svg";
       version = "1.1.0.5";
       sha256 = "0n4ljdym9cbq4n7ynx5caxlr26ai5ifzv9x0yvqydhczmm0n35xf";
       libraryHaskellDepends = [
         base base64-bytestring blaze-markup blaze-svg bytestring colour
         containers diagrams-core diagrams-lib directory filepath hashable
         JuicyPixels lens monoid-extras mtl old-time process split time unix
         vector-space
       ];
       homepage = "http://projects.haskell.org/diagrams/";
       description = "SVG backend for diagrams drawing EDSL";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "digest" = callPackage
    ({ mkDerivation, base, bytestring, zlib }:
     mkDerivation {
       pname = "digest";
       version = "0.0.1.2";
       sha256 = "04gy2zp8yzvv7j9bdfvmfzcz3sqyqa6rwslqcn4vyair2vmif5v4";
       libraryHaskellDepends = [ base bytestring ];
       librarySystemDepends = [ zlib ];
       description = "Various cryptographic hashes for bytestrings; CRC32 and Adler32 for now";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) zlib;};
  "digestive-functors" = callPackage
    ({ mkDerivation, base, bytestring, containers, HUnit, mtl
     , old-locale, QuickCheck, test-framework, test-framework-hunit
     , test-framework-quickcheck2, text, time
     }:
     mkDerivation {
       pname = "digestive-functors";
       version = "0.7.1.5";
       sha256 = "1rfdxac3cnwa5r5zxic3xhj4n59f7s6l34xmja4q87ylqxfyqmls";
       revision = "1";
       editedCabalFile = "02kpdxmsc0cpgpv9l7lqy652khvm1qal6ra0rq24cwha7jfkp6m3";
       libraryHaskellDepends = [
         base bytestring containers mtl old-locale text time
       ];
       testHaskellDepends = [
         base bytestring containers HUnit mtl old-locale QuickCheck
         test-framework test-framework-hunit test-framework-quickcheck2 text
         time
       ];
       homepage = "http://github.com/jaspervdj/digestive-functors";
       description = "A practical formlet library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "dimensional" = callPackage
    ({ mkDerivation, base, numtype, time }:
     mkDerivation {
       pname = "dimensional";
       version = "0.13.0.2";
       sha256 = "1gi8948q1kxnbc76v05swj0yr58j9lljxak6lyci529ny0ac4qlp";
       libraryHaskellDepends = [ base numtype time ];
       homepage = "http://dimensional.googlecode.com/";
       description = "Statically checked physical dimensions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "direct-sqlite" = callPackage
    ({ mkDerivation, base, base16-bytestring, bytestring, directory
     , HUnit, text
     }:
     mkDerivation {
       pname = "direct-sqlite";
       version = "2.3.15";
       sha256 = "0hlpc3j4crh9hnydcpp6fmiisq9ddn916bslm46x5q1ajvcw7v12";
       libraryHaskellDepends = [ base bytestring text ];
       testHaskellDepends = [
         base base16-bytestring bytestring directory HUnit text
       ];
       homepage = "https://github.com/IreneKnapp/direct-sqlite";
       description = "Low-level binding to SQLite3. Includes UTF8 and BLOB support.";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "directory-tree" = callPackage
    ({ mkDerivation, base, directory, filepath, process }:
     mkDerivation {
       pname = "directory-tree";
       version = "0.12.0";
       sha256 = "1idknm7fwci91fkwvzl35g0qd0jk1vb00ds2x82zjf2hdbkcc2gz";
       libraryHaskellDepends = [ base directory filepath ];
       testHaskellDepends = [ base directory filepath process ];
       doCheck = false;
       homepage = "http://brandon.si/code/directory-tree-module-released/";
       description = "A simple directory-like tree datatype, with useful IO functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "distributed-process" = callPackage
    ({ mkDerivation, base, binary, bytestring, containers
     , data-accessor, deepseq, distributed-static, ghc-prim, hashable
     , mtl, network-transport, network-transport-tcp, old-locale, random
     , rank1dynamic, stm, syb, template-haskell, time, transformers
     }:
     mkDerivation {
       pname = "distributed-process";
       version = "0.5.3";
       sha256 = "1jp85dd7scizs03cslrbgmaly735l2rv9yl5hq573xj3mjwmv5nz";
       libraryHaskellDepends = [
         base binary bytestring containers data-accessor deepseq
         distributed-static ghc-prim hashable mtl network-transport
         old-locale random rank1dynamic stm syb template-haskell time
         transformers
       ];
       benchmarkHaskellDepends = [
         base binary bytestring network-transport-tcp
       ];
       doCheck = false;
       homepage = "http://haskell-distributed.github.com/";
       description = "Cloud Haskell: Erlang-style concurrency in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "distributed-process-async" = callPackage
    ({ mkDerivation, base, binary, containers, data-accessor, deepseq
     , distributed-process, distributed-process-extras, fingertree
     , hashable, mtl, stm, time, transformers, unordered-containers
     }:
     mkDerivation {
       pname = "distributed-process-async";
       version = "0.2.1";
       sha256 = "0g28f2f5b28ra1gnm99yalah6rxqps4yvmi403nb0axw295pbmib";
       libraryHaskellDepends = [
         base binary containers data-accessor deepseq distributed-process
         distributed-process-extras fingertree hashable mtl stm time
         transformers unordered-containers
       ];
       doCheck = false;
       homepage = "http://github.com/haskell-distributed/distributed-process-async";
       description = "Cloud Haskell Async API";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "distributed-process-client-server" = callPackage
    ({ mkDerivation, base, binary, containers, data-accessor, deepseq
     , distributed-process, distributed-process-async
     , distributed-process-extras, fingertree, hashable, mtl, stm, time
     , transformers, unordered-containers
     }:
     mkDerivation {
       pname = "distributed-process-client-server";
       version = "0.1.2";
       sha256 = "0wr0fxdg9114jd180p4lrjkashqcyxv69harj1ww5jc8dxdb3k2s";
       libraryHaskellDepends = [
         base binary containers data-accessor deepseq distributed-process
         distributed-process-async distributed-process-extras fingertree
         hashable mtl stm time transformers unordered-containers
       ];
       doCheck = false;
       homepage = "http://github.com/haskell-distributed/distributed-process-client-server";
       description = "The Cloud Haskell Application Platform";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "distributed-process-execution" = callPackage
    ({ mkDerivation, ansi-terminal, base, binary, bytestring
     , containers, data-accessor, deepseq, distributed-process
     , distributed-process-client-server, distributed-process-extras
     , distributed-process-supervisor, distributed-static, fingertree
     , ghc-prim, hashable, HUnit, mtl, network, network-transport
     , network-transport-tcp, QuickCheck, rematch, stm, test-framework
     , test-framework-hunit, test-framework-quickcheck2, time
     , transformers, unordered-containers
     }:
     mkDerivation {
       pname = "distributed-process-execution";
       version = "0.1.1";
       sha256 = "1zm4mcicasf59s3zzca2m7hp4ialzmsmn6arjlz2mnrhcpbkg7ja";
       libraryHaskellDepends = [
         base binary containers data-accessor deepseq distributed-process
         distributed-process-client-server distributed-process-extras
         distributed-process-supervisor fingertree hashable mtl stm time
         transformers unordered-containers
       ];
       testHaskellDepends = [
         ansi-terminal base binary bytestring containers data-accessor
         deepseq distributed-process distributed-process-extras
         distributed-static fingertree ghc-prim hashable HUnit mtl network
         network-transport network-transport-tcp QuickCheck rematch stm
         test-framework test-framework-hunit test-framework-quickcheck2 time
         transformers unordered-containers
       ];
       doCheck = false;
       homepage = "http://github.com/haskell-distributed/distributed-process-execution";
       description = "Execution Framework for The Cloud Haskell Application Platform";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "distributed-process-extras" = callPackage
    ({ mkDerivation, base, binary, containers, data-accessor, deepseq
     , distributed-process, fingertree, hashable, mtl, stm, time
     , transformers, unordered-containers
     }:
     mkDerivation {
       pname = "distributed-process-extras";
       version = "0.2.0";
       sha256 = "0l8k1h0nx2pign82ydyzsjbkc8qw3vhhbrdggzfwvr3hamnjpqly";
       libraryHaskellDepends = [
         base binary containers data-accessor deepseq distributed-process
         fingertree hashable mtl stm time transformers unordered-containers
       ];
       doCheck = false;
       homepage = "http://github.com/haskell-distributed/distributed-process-extras";
       description = "Cloud Haskell Extras";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "distributed-process-simplelocalnet" = callPackage
    ({ mkDerivation, base, binary, bytestring, containers
     , data-accessor, distributed-process, network, network-multicast
     , network-transport, network-transport-tcp, transformers
     }:
     mkDerivation {
       pname = "distributed-process-simplelocalnet";
       version = "0.2.2.0";
       sha256 = "024m5jycz257i34m2x97x3qyg76j1128ww61pql3fqy4mhvp3791";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base binary bytestring containers data-accessor distributed-process
         network network-multicast network-transport network-transport-tcp
         transformers
       ];
       homepage = "http://haskell-distributed.github.com";
       description = "Simple zero-configuration backend for Cloud Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "distributed-process-supervisor" = callPackage
    ({ mkDerivation, ansi-terminal, base, binary, bytestring
     , containers, data-accessor, deepseq, distributed-process
     , distributed-process-client-server, distributed-process-extras
     , distributed-static, fingertree, ghc-prim, hashable, HUnit, mtl
     , network, network-transport, network-transport-tcp, rematch, stm
     , test-framework, test-framework-hunit, time, transformers
     , unordered-containers
     }:
     mkDerivation {
       pname = "distributed-process-supervisor";
       version = "0.1.2";
       sha256 = "1b2rskzjimb2s8xrz4iv4q3c10njjnycxy5bcy159m6hawz1hzj1";
       libraryHaskellDepends = [
         base binary containers data-accessor deepseq distributed-process
         distributed-process-client-server distributed-process-extras
         fingertree hashable mtl stm time transformers unordered-containers
       ];
       testHaskellDepends = [
         ansi-terminal base binary bytestring containers data-accessor
         deepseq distributed-process distributed-process-client-server
         distributed-process-extras distributed-static fingertree ghc-prim
         hashable HUnit mtl network network-transport network-transport-tcp
         rematch stm test-framework test-framework-hunit time transformers
         unordered-containers
       ];
       doCheck = false;
       homepage = "http://github.com/haskell-distributed/distributed-process-supervisor";
       description = "Supervisors for The Cloud Haskell Application Platform";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "distributed-process-task" = callPackage
    ({ mkDerivation, ansi-terminal, base, binary, bytestring
     , containers, data-accessor, deepseq, distributed-process
     , distributed-process-async, distributed-process-client-server
     , distributed-process-extras, distributed-static, fingertree
     , ghc-prim, hashable, HUnit, mtl, network, network-transport
     , network-transport-tcp, QuickCheck, rematch, stm, test-framework
     , test-framework-hunit, test-framework-quickcheck2, time
     , transformers, unordered-containers
     }:
     mkDerivation {
       pname = "distributed-process-task";
       version = "0.1.1";
       sha256 = "04w1nhca59i6bzmwfi80mryf5pcsn0zmswq3s3ksqc6wy4mfzy1m";
       libraryHaskellDepends = [
         base binary containers data-accessor deepseq distributed-process
         distributed-process-async distributed-process-client-server
         distributed-process-extras fingertree hashable mtl stm time
         transformers unordered-containers
       ];
       testHaskellDepends = [
         ansi-terminal base binary bytestring containers data-accessor
         deepseq distributed-process distributed-process-async
         distributed-process-client-server distributed-process-extras
         distributed-static fingertree ghc-prim hashable HUnit mtl network
         network-transport network-transport-tcp QuickCheck rematch stm
         test-framework test-framework-hunit test-framework-quickcheck2 time
         transformers unordered-containers
       ];
       doCheck = false;
       homepage = "http://github.com/haskell-distributed/distributed-process-task";
       description = "Task Framework for The Cloud Haskell Application Platform";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "distributed-static" = callPackage
    ({ mkDerivation, base, binary, bytestring, containers, rank1dynamic
     }:
     mkDerivation {
       pname = "distributed-static";
       version = "0.3.1.0";
       sha256 = "190b6vjcipgrvnfl72c0ssw8crza02gfw9kwyvwg043jcznihj08";
       libraryHaskellDepends = [
         base binary bytestring containers rank1dynamic
       ];
       homepage = "http://haskell-distributed.github.com";
       description = "Compositional, type-safe, polymorphic static values and closures";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "distributive" = callPackage
    ({ mkDerivation, base, directory, doctest, filepath, ghc-prim
     , tagged, transformers, transformers-compat
     }:
     mkDerivation {
       pname = "distributive";
       version = "0.4.4";
       sha256 = "0s2ln9jv7bh4ri2y31178pvjl8x6nik5d0klx7j2b77yjlsgblc2";
       libraryHaskellDepends = [
         base ghc-prim tagged transformers transformers-compat
       ];
       testHaskellDepends = [ base directory doctest filepath ];
       homepage = "http://github.com/ekmett/distributive/";
       description = "Distributive functors -- Dual to Traversable";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "djinn-ghc" = callPackage
    ({ mkDerivation, async, base, containers, djinn-lib, ghc, mtl
     , transformers
     }:
     mkDerivation {
       pname = "djinn-ghc";
       version = "0.0.2.3";
       sha256 = "190llfn8dvxkdan806nybn3d4psmnr1126zg8lmk8p5wd7nnm5fb";
       libraryHaskellDepends = [
         async base containers djinn-lib ghc mtl transformers
       ];
       description = "Generate Haskell code from a type. Bridge from Djinn to GHC API.";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "djinn-lib" = callPackage
    ({ mkDerivation, base, containers, mtl, pretty }:
     mkDerivation {
       pname = "djinn-lib";
       version = "0.0.1.2";
       sha256 = "048hs27awl4j9lg04qbnpf8c51mzbgy2afckis19zcswmavi1zn0";
       libraryHaskellDepends = [ base containers mtl pretty ];
       homepage = "http://www.augustsson.net/Darcs/Djinn/";
       description = "Generate Haskell code from a type. Library extracted from djinn package.";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "dlist" = callPackage
    ({ mkDerivation, base, Cabal, deepseq, QuickCheck }:
     mkDerivation {
       pname = "dlist";
       version = "0.7.1.1";
       sha256 = "1zayvxvkan2s2ixajdr3f5rn1gzhprzv6cww4cbpwjhzw0l7zc08";
       libraryHaskellDepends = [ base deepseq ];
       testHaskellDepends = [ base Cabal QuickCheck ];
       homepage = "https://github.com/spl/dlist";
       description = "Difference lists";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "dlist-instances" = callPackage
    ({ mkDerivation, base, dlist, semigroups }:
     mkDerivation {
       pname = "dlist-instances";
       version = "0.1";
       sha256 = "0r1j7djywqd7c224wc9ixkplj3m2mbf9k3ra7n92ja2kfpksm615";
       revision = "1";
       editedCabalFile = "0b3gxbs4ny2hhwmcqgvayiwflanwwidcmwv15s4mhii43s34pfi1";
       libraryHaskellDepends = [ base dlist semigroups ];
       homepage = "https://github.com/gregwebs/dlist-instances";
       description = "Difference lists instances";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "doctest" = callPackage
    ({ mkDerivation, base, base-compat, deepseq, directory, filepath
     , ghc, ghc-paths, hspec, HUnit, process, QuickCheck, setenv
     , silently, stringbuilder, syb, transformers
     }:
     mkDerivation {
       pname = "doctest";
       version = "0.9.13";
       sha256 = "0xl570ay5bw1rpd1aw59c092rnwjbp9qykh2rhpxyvl333p8mg00";
       revision = "1";
       editedCabalFile = "0zvgpspabmava362w8xxhc4xcm1wcpxwh58gjd1hp2na5vbbcajr";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base deepseq directory filepath ghc ghc-paths process syb
         transformers
       ];
       executableHaskellDepends = [ base ];
       testHaskellDepends = [
         base base-compat deepseq directory filepath ghc ghc-paths hspec
         HUnit process QuickCheck setenv silently stringbuilder syb
         transformers
       ];
       homepage = "https://github.com/sol/doctest#readme";
       description = "Test interactive Haskell examples";
       license = stdenv.lib.licenses.mit;
     }) {};
  "double-conversion" = callPackage
    ({ mkDerivation, base, bytestring, ghc-prim, integer-gmp
     , test-framework, test-framework-quickcheck2, text
     }:
     mkDerivation {
       pname = "double-conversion";
       version = "2.0.1.0";
       sha256 = "034ji9jgf3jl0n5pp1nki3lsg173c3b9vniwnwp1q21iasqbawh0";
       libraryHaskellDepends = [
         base bytestring ghc-prim integer-gmp text
       ];
       testHaskellDepends = [
         base bytestring test-framework test-framework-quickcheck2 text
       ];
       homepage = "https://github.com/bos/double-conversion";
       description = "Fast conversion between double precision floating point and text";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "dual-tree" = callPackage
    ({ mkDerivation, base, monoid-extras, newtype, semigroups }:
     mkDerivation {
       pname = "dual-tree";
       version = "0.2.0.6";
       sha256 = "0zdmycfr7b2gf63r2w48ylhcywphz9v3z79im33q1wb7p7pjiacv";
       libraryHaskellDepends = [ base monoid-extras newtype semigroups ];
       description = "Rose trees with cached and accumulating monoidal annotations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "easy-file" = callPackage
    ({ mkDerivation, base, directory, filepath, time, unix }:
     mkDerivation {
       pname = "easy-file";
       version = "0.2.0";
       sha256 = "0v8skixq15rvyiyky1dcrfl9jrzkbi75vai8np11xy2kg7a8ym2a";
       libraryHaskellDepends = [ base directory filepath time unix ];
       homepage = "http://github.com/kazu-yamamoto/easy-file";
       description = "Cross-platform File handling";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ede" = callPackage
    ({ mkDerivation, aeson, ansi-wl-pprint, base, bifunctors
     , bytestring, comonad, directory, filepath, free, lens, mtl
     , parsers, scientific, semigroups, tasty, tasty-golden, text
     , text-format, text-manipulate, trifecta, unordered-containers
     , vector
     }:
     mkDerivation {
       pname = "ede";
       version = "0.2.8.2";
       sha256 = "0j0b0pn9apvpqxb0gnxxp51g32xc47jky4njb9jn0x59jssc1g1q";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson ansi-wl-pprint base bifunctors bytestring comonad directory
         filepath free lens mtl parsers scientific semigroups text
         text-format text-manipulate trifecta unordered-containers vector
       ];
       testHaskellDepends = [
         aeson base bifunctors bytestring directory tasty tasty-golden text
       ];
       homepage = "http://github.com/brendanhay/ede";
       description = "Templating language with similar syntax and features to Liquid or Jinja2";
       license = "unknown";
     }) {};
  "edit-distance" = callPackage
    ({ mkDerivation, array, base, containers, random }:
     mkDerivation {
       pname = "edit-distance";
       version = "0.2.1.2";
       sha256 = "08dxsp1ar8mr4xrjy37lzl0s1rjnqsdq30p09nclip5pyhcw7g44";
       revision = "1";
       editedCabalFile = "1h99izycw854mbb0h5f7hyr1vj6w2mkzskyahdca0ykhw4czpmi7";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ array base containers random ];
       homepage = "http://github.com/batterseapower/edit-distance";
       description = "Levenshtein and restricted Damerau-Levenshtein edit distances";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "effect-handlers" = callPackage
    ({ mkDerivation, base, criterion, free, hspec, hspec-discover
     , HUnit, kan-extensions, mtl, QuickCheck
     }:
     mkDerivation {
       pname = "effect-handlers";
       version = "0.1.0.6";
       sha256 = "0i7glghwh35pfyzznzabaf8fnadk00lpajmasw5h5ndjl2dmqzy9";
       libraryHaskellDepends = [ base free kan-extensions mtl ];
       testHaskellDepends = [
         base hspec hspec-discover HUnit QuickCheck
       ];
       benchmarkHaskellDepends = [ base criterion ];
       homepage = "https://github.com/edofic/effect-handlers";
       description = "A library for writing extensible algebraic effects and handlers. Similar to extensible-effects but with deep handlers.";
       license = stdenv.lib.licenses.mit;
     }) {};
  "either" = callPackage
    ({ mkDerivation, base, bifunctors, exceptions, free, monad-control
     , MonadRandom, mtl, profunctors, semigroupoids, semigroups
     , transformers, transformers-base
     }:
     mkDerivation {
       pname = "either";
       version = "4.3.3.2";
       sha256 = "05j4mk1qlp72w70cahfw4nm506sl0wmkgffi2f5xazwjgkggw595";
       libraryHaskellDepends = [
         base bifunctors exceptions free monad-control MonadRandom mtl
         profunctors semigroupoids semigroups transformers transformers-base
       ];
       homepage = "http://github.com/ekmett/either/";
       description = "An either monad transformer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "elm-core-sources" = callPackage
    ({ mkDerivation, base, bytestring, containers, file-embed
     , template-haskell
     }:
     mkDerivation {
       pname = "elm-core-sources";
       version = "1.0.0";
       sha256 = "1yr0csgz0hv25cz3jslap0adwvfcvv35bns32b9g0vyda1fm00x4";
       libraryHaskellDepends = [
         base bytestring containers file-embed template-haskell
       ];
       homepage = "http://github.com/JoeyEremondi/elm-build-lib";
       description = "Source files for the Elm runtime and standard libraries";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "email-validate" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, ghc-prim, HUnit
     , QuickCheck, test-framework, test-framework-hunit
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "email-validate";
       version = "2.0.1";
       sha256 = "1qxvcm8xiyz50ganzic8cm8nxswq361i80yi939y3n89dk067lzj";
       revision = "1";
       editedCabalFile = "1rr452gk6wq6p5kmcihr89g2xbgfz3f9758c2wn64js39lr1wymp";
       libraryHaskellDepends = [ attoparsec base bytestring ghc-prim ];
       testHaskellDepends = [
         base bytestring HUnit QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2
       ];
       homepage = "http://porg.es/blog/email-address-validation-simpler-faster-more-correct";
       description = "Validating an email address string against RFC 5322";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "enclosed-exceptions" = callPackage
    ({ mkDerivation, async, base, deepseq, hspec, lifted-base
     , monad-control, QuickCheck, transformers, transformers-base
     }:
     mkDerivation {
       pname = "enclosed-exceptions";
       version = "1.0.1.1";
       sha256 = "16ax1kqdsk4apg642qxkm2hf9vb5hzmkd14zmkxra8ssp8rn28z5";
       libraryHaskellDepends = [
         async base deepseq lifted-base monad-control transformers
         transformers-base
       ];
       testHaskellDepends = [
         async base deepseq hspec lifted-base monad-control QuickCheck
         transformers transformers-base
       ];
       doCheck = false;
       homepage = "https://github.com/jcristovao/enclosed-exceptions";
       description = "Catching all exceptions from within an enclosed computation";
       license = stdenv.lib.licenses.mit;
     }) {};
  "entropy" = callPackage
    ({ mkDerivation, base, bytestring, unix }:
     mkDerivation {
       pname = "entropy";
       version = "0.3.6";
       sha256 = "1sfv930hvdmf018ngdl15jac2bgj75941w0ndlh78n1jgmf04jhn";
       libraryHaskellDepends = [ base bytestring unix ];
       homepage = "https://github.com/TomMD/entropy";
       description = "A platform independent entropy source";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "enumerator" = callPackage
    ({ mkDerivation, base, bytestring, containers, text, transformers
     }:
     mkDerivation {
       pname = "enumerator";
       version = "0.4.20";
       sha256 = "02a75dggj295zkhgjry5cb43s6y6ydpjb5w6vgl7kd9b6ma11qik";
       libraryHaskellDepends = [
         base bytestring containers text transformers
       ];
       homepage = "https://john-millikin.com/software/enumerator/";
       description = "Reliable, high-performance processing with left-fold enumerators";
       license = stdenv.lib.licenses.mit;
     }) {};
  "eq" = callPackage
    ({ mkDerivation, base, semigroupoids }:
     mkDerivation {
       pname = "eq";
       version = "4.0.3";
       sha256 = "1n2f20dh1rghv8c43dgdlpgamq61dy8dzh86v4p62a125pgawfn3";
       libraryHaskellDepends = [ base semigroupoids ];
       homepage = "http://github.com/ekmett/eq/";
       description = "Leibnizian equality";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "erf" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "erf";
       version = "2.0.0.0";
       sha256 = "0dxk2r32ajmmc05vaxcp0yw6vgv4lkbmh8jcshncn98xgsfbgw14";
       libraryHaskellDepends = [ base ];
       description = "The error function, erf, and related functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "errorcall-eq-instance" = callPackage
    ({ mkDerivation, base, base-compat, hspec, QuickCheck }:
     mkDerivation {
       pname = "errorcall-eq-instance";
       version = "0.2.0.1";
       sha256 = "0df2w882bnm9khkwvs8f1p8svaqjz5vpsidgwx5dd01ypjqkzzq5";
       revision = "1";
       editedCabalFile = "0dwvv3xjrah5pwgmr75s681wnp979sjka6l1mi7xbbm6k3892ccs";
       libraryHaskellDepends = [ base base-compat ];
       testHaskellDepends = [ base hspec QuickCheck ];
       description = "An orphan Eq instance for ErrorCall";
       license = stdenv.lib.licenses.mit;
     }) {};
  "errors" = callPackage
    ({ mkDerivation, base, either, safe, transformers }:
     mkDerivation {
       pname = "errors";
       version = "1.4.7";
       sha256 = "09g53dylwsw1phxq5zhkbq8pnpwqzipvqclmcrdypzkpwkmfncl7";
       libraryHaskellDepends = [ base either safe transformers ];
       description = "Simplified error-handling";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ersatz" = callPackage
    ({ mkDerivation, array, base, bytestring, containers, data-default
     , lens, mtl, parsec, process, temporary, transformers
     , unordered-containers
     }:
     mkDerivation {
       pname = "ersatz";
       version = "0.3";
       sha256 = "1hq6cdw1rvwc0289saz36x2imwwnj203hqk2lsbkbhyghdvqmpbr";
       revision = "3";
       editedCabalFile = "0v2vzh1ar2z92m3jy99mf8c0bv3q0c5phaqjzj6rj3gjpj169yma";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         array base bytestring containers data-default lens mtl process
         temporary transformers unordered-containers
       ];
       executableHaskellDepends = [
         array base containers lens mtl parsec
       ];
       doCheck = false;
       homepage = "http://github.com/ekmett/ersatz";
       description = "A monad for expressing SAT or QSAT problems using observable sharing";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "esqueleto" = callPackage
    ({ mkDerivation, base, conduit, containers, hspec, HUnit
     , monad-control, monad-logger, persistent, persistent-sqlite
     , persistent-template, QuickCheck, resourcet, tagged, text
     , transformers, unordered-containers
     }:
     mkDerivation {
       pname = "esqueleto";
       version = "2.1.3";
       sha256 = "1wsq058dm849ldxn5gjayagb6ds56b80dinyrpbjw8b0fr3s6v9d";
       libraryHaskellDepends = [
         base conduit monad-logger persistent resourcet tagged text
         transformers unordered-containers
       ];
       testHaskellDepends = [
         base conduit containers hspec HUnit monad-control monad-logger
         persistent persistent-sqlite persistent-template QuickCheck
         resourcet text transformers
       ];
       homepage = "https://github.com/prowdsponsor/esqueleto";
       description = "Type-safe EDSL for SQL queries on persistent backends";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "exception-mtl" = callPackage
    ({ mkDerivation, base, exception-transformers, mtl, transformers }:
     mkDerivation {
       pname = "exception-mtl";
       version = "0.3.0.5";
       sha256 = "1rqrh1wbm67w9rbh1gg5zsavlsw9nfw0hnbs9q2djglh73pq3iqj";
       libraryHaskellDepends = [
         base exception-transformers mtl transformers
       ];
       homepage = "http://www.cs.drexel.edu/~mainland/";
       description = "Exception monad transformer instances for mtl2 classes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "exception-transformers" = callPackage
    ({ mkDerivation, base, HUnit, stm, test-framework
     , test-framework-hunit, transformers
     }:
     mkDerivation {
       pname = "exception-transformers";
       version = "0.3.0.4";
       sha256 = "1m4mwgzynymdjvrrrvl90q468pgwik07yy2lsff9spxhcd43w2ra";
       libraryHaskellDepends = [ base stm transformers ];
       testHaskellDepends = [
         base HUnit test-framework test-framework-hunit transformers
       ];
       homepage = "http://www.cs.drexel.edu/~mainland/";
       description = "Type classes and monads for unchecked extensible exceptions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "exceptions" = callPackage
    ({ mkDerivation, base, mtl, QuickCheck, stm, test-framework
     , test-framework-quickcheck2, transformers, transformers-compat
     }:
     mkDerivation {
       pname = "exceptions";
       version = "0.8.0.2";
       sha256 = "1x1bk1jf42k1gigiqqmkkh38z2ffhx8rsqiszdq3f94m2h6kw2h7";
       libraryHaskellDepends = [
         base mtl stm transformers transformers-compat
       ];
       testHaskellDepends = [
         base mtl QuickCheck stm test-framework test-framework-quickcheck2
         transformers transformers-compat
       ];
       homepage = "http://github.com/ekmett/exceptions/";
       description = "Extensible optionally-pure exceptions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "executable-hash" = callPackage
    ({ mkDerivation, base, bytestring, cryptohash, directory
     , executable-path, file-embed, template-haskell
     }:
     mkDerivation {
       pname = "executable-hash";
       version = "0.2.0.0";
       sha256 = "0g733akm65rjdl5mncfyhnqncan985n02vzn0z02689aq8dnav4p";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring cryptohash directory executable-path file-embed
         template-haskell
       ];
       executableHaskellDepends = [ base ];
       testHaskellDepends = [ base ];
       homepage = "http://github.com/fpco/executable-hash";
       description = "Provides the SHA1 hash of the program executable";
       license = stdenv.lib.licenses.mit;
     }) {};
  "executable-path" = callPackage
    ({ mkDerivation, base, directory, filepath, unix }:
     mkDerivation {
       pname = "executable-path";
       version = "0.0.3";
       sha256 = "1jg58qf19qz93c60ryglcavwdcysz4fd4qn8kpw5im9w9kniawlc";
       libraryHaskellDepends = [ base directory filepath unix ];
       homepage = "http://code.haskell.org/~bkomuves/";
       description = "Finding out the full path of the executable";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "extensible-exceptions" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "extensible-exceptions";
       version = "0.1.1.4";
       sha256 = "1273nqws9ij1rp1bsq5jc7k2jxpqa0svawdbim05lf302y0firbc";
       libraryHaskellDepends = [ base ];
       description = "Extensible exceptions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "extra" = callPackage
    ({ mkDerivation, base, directory, filepath, process, QuickCheck
     , time, unix
     }:
     mkDerivation {
       pname = "extra";
       version = "1.1";
       sha256 = "0i8vv5y7rmfbcnfkqm2ac027nw6csvjbivfywgxd93xig42rzg4y";
       revision = "1";
       editedCabalFile = "03kwy1dlg7nygcgrcg342bhwsxshj0sc4nfhwzgwcd6q5fvrx4ng";
       libraryHaskellDepends = [
         base directory filepath process time unix
       ];
       testHaskellDepends = [
         base directory filepath QuickCheck time unix
       ];
       homepage = "https://github.com/ndmitchell/extra#readme";
       description = "Extra functions I use";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fast-logger" = callPackage
    ({ mkDerivation, array, auto-update, base, bytestring
     , bytestring-builder, directory, filepath, hspec, text
     }:
     mkDerivation {
       pname = "fast-logger";
       version = "2.3.1";
       sha256 = "02smmj62jir0c4ix929xy7zsd03djp53hxps0wgqga1f123gksri";
       revision = "1";
       editedCabalFile = "1snc4shp53wqilk4qlszajs9cjgm3y3ymyc8f1ng4gzb0c5ka8wq";
       libraryHaskellDepends = [
         array auto-update base bytestring bytestring-builder directory
         filepath text
       ];
       testHaskellDepends = [ base bytestring directory hspec ];
       description = "A fast logging system";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fay" = callPackage
    ({ mkDerivation, aeson, base, bytestring, containers, data-default
     , data-lens-light, directory, filepath, ghc-paths, haskell-src-exts
     , language-ecmascript, mtl, mtl-compat, optparse-applicative
     , process, safe, sourcemap, split, spoon, syb, text, time
     , transformers, transformers-compat, traverse-with-class, type-eq
     , uniplate, unordered-containers, utf8-string, vector
     }:
     mkDerivation {
       pname = "fay";
       version = "0.23.1.4";
       sha256 = "1l8r7d4iwwkq0m9cskwfv38i89cr8sqxidrc59z62yp05ilcs5r6";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson base bytestring containers data-default data-lens-light
         directory filepath ghc-paths haskell-src-exts language-ecmascript
         mtl mtl-compat process safe sourcemap split spoon syb text time
         transformers transformers-compat traverse-with-class type-eq
         uniplate unordered-containers utf8-string vector
       ];
       executableHaskellDepends = [ base mtl optparse-applicative split ];
       homepage = "https://github.com/faylang/fay/wiki";
       description = "A compiler for Fay, a Haskell subset that compiles to JavaScript";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fay-base" = callPackage
    ({ mkDerivation, base, fay }:
     mkDerivation {
       pname = "fay-base";
       version = "0.20.0.0";
       sha256 = "07hizichy7jnlirxq3sh2gjw4k21cfnqpswihbzkcvz0fnmd9sw3";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base fay ];
       homepage = "https://github.com/faylang/fay/";
       description = "The base package for Fay";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fay-builder" = callPackage
    ({ mkDerivation, base, Cabal, data-default, directory, fay
     , filepath, safe, split, text
     }:
     mkDerivation {
       pname = "fay-builder";
       version = "0.2.0.5";
       sha256 = "18ii5dnzk866q79h43fspdz8dzg17mzfrykh3pl4p0q4qdnylv8i";
       revision = "4";
       editedCabalFile = "09ix1rqm23l2ksc9zx6qj6m2pw789rzs6b3q41m60bcxh8xik9km";
       libraryHaskellDepends = [
         base Cabal data-default directory fay filepath safe split text
       ];
       description = "Compile Fay code on cabal install, and ad-hoc recompile during development";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fay-dom" = callPackage
    ({ mkDerivation, fay-base }:
     mkDerivation {
       pname = "fay-dom";
       version = "0.5.0.1";
       sha256 = "1zm6w6nccswaksr283alhnsss6xw4k7s61yp8ff4lg5127ff9wp0";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ fay-base ];
       homepage = "https://github.com/faylang/fay-dom";
       description = "DOM FFI wrapper library for Fay";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fay-jquery" = callPackage
    ({ mkDerivation, fay-base, fay-text }:
     mkDerivation {
       pname = "fay-jquery";
       version = "0.6.0.3";
       sha256 = "1x6i8y6xbz4nyzw59j3cqkhmjvgx9l4vdyh7jr0l1vv396ssnghf";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ fay-base fay-text ];
       homepage = "https://github.com/faylang/fay-jquery";
       description = "jQuery bindings for Fay";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fay-text" = callPackage
    ({ mkDerivation, fay, fay-base, text }:
     mkDerivation {
       pname = "fay-text";
       version = "0.3.2.2";
       sha256 = "1q1v8jzkccy9arq6jkz4ynpzm1691d1dv9wzyi4i5m6n0gl7aans";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ fay fay-base text ];
       homepage = "https://github.com/faylang/fay-text";
       description = "Fay Text type represented as JavaScript strings";
       license = stdenv.lib.licenses.mit;
     }) {};
  "fay-uri" = callPackage
    ({ mkDerivation, fay-base }:
     mkDerivation {
       pname = "fay-uri";
       version = "0.2.0.0";
       sha256 = "1vv4jgkz9cx8inbn6g6sn3a0nf1ak81qlj5li21sk2isj0yws1nr";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ fay-base ];
       homepage = "https://github.com/faylang/fay-uri";
       description = "Persistent FFI bindings for using jsUri in Fay";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fb" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, base16-bytestring
     , base64-bytestring, bytestring, cereal, conduit, conduit-extra
     , crypto-api, cryptohash, cryptohash-cryptoapi, data-default
     , http-conduit, http-types, lifted-base, monad-control
     , monad-logger, old-locale, resourcet, text, time, transformers
     , transformers-base, unordered-containers
     }:
     mkDerivation {
       pname = "fb";
       version = "1.0.9";
       sha256 = "0f5zs1qnjkhrdlfvcl26l3j2xl58y97y7rh2dds12mvsyj7h446b";
       libraryHaskellDepends = [
         aeson attoparsec base base16-bytestring base64-bytestring
         bytestring cereal conduit conduit-extra crypto-api cryptohash
         cryptohash-cryptoapi data-default http-conduit http-types
         lifted-base monad-control monad-logger old-locale resourcet text
         time transformers transformers-base unordered-containers
       ];
       doCheck = false;
       homepage = "https://github.com/prowdsponsor/fb";
       description = "Bindings to Facebook's API";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fb-persistent" = callPackage
    ({ mkDerivation, base, cereal, fb, persistent, text, time }:
     mkDerivation {
       pname = "fb-persistent";
       version = "0.3.4";
       sha256 = "07hrifzwvv7fzqh70igfbxzn854yvyx7406s8byn0arhmp21ka3b";
       libraryHaskellDepends = [ base cereal fb persistent text time ];
       homepage = "https://github.com/prowdsponsor/fb-persistent";
       description = "Provides Persistent instances to Facebook types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fclabels" = callPackage
    ({ mkDerivation, base, HUnit, mtl, template-haskell, transformers
     }:
     mkDerivation {
       pname = "fclabels";
       version = "2.0.2.2";
       sha256 = "0jvmmmky2h4i6lh0zj67j8rf1r1r1plv1s9y67jbs821266ffra8";
       libraryHaskellDepends = [ base mtl template-haskell transformers ];
       testHaskellDepends = [
         base HUnit mtl template-haskell transformers
       ];
       homepage = "https://github.com/sebastiaanvisser/fclabels";
       description = "First class accessor labels implemented as lenses";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fgl" = callPackage
    ({ mkDerivation, array, base, containers, mtl }:
     mkDerivation {
       pname = "fgl";
       version = "5.5.1.0";
       sha256 = "0rcmz0xlyr1wj490ffja29z1jgl51gz19ka609da6bx39bwx7nga";
       libraryHaskellDepends = [ array base containers mtl ];
       description = "Martin Erwig's Functional Graph Library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "file-embed" = callPackage
    ({ mkDerivation, base, bytestring, directory, filepath, HUnit
     , template-haskell
     }:
     mkDerivation {
       pname = "file-embed";
       version = "0.0.8.2";
       sha256 = "1gdxz9244wjhfigpsyaan81gyx6vanb8574xxi7944sj9pcgi74y";
       libraryHaskellDepends = [
         base bytestring directory filepath template-haskell
       ];
       testHaskellDepends = [ base filepath HUnit ];
       homepage = "https://github.com/snoyberg/file-embed";
       description = "Use Template Haskell to embed file contents directly";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "file-location" = callPackage
    ({ mkDerivation, base, containers, lifted-base, process
     , template-haskell, th-orphans, transformers
     }:
     mkDerivation {
       pname = "file-location";
       version = "0.4.7.1";
       sha256 = "0p4fj7jjsssn3bdn2z984q2wyngc6cfygbgprzndcw0bxqi78jl4";
       libraryHaskellDepends = [
         base containers lifted-base template-haskell th-orphans
         transformers
       ];
       testHaskellDepends = [ base lifted-base process ];
       homepage = "https://github.com/gregwebs/FileLocation.hs";
       description = "common functions that show file location information";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "filemanip" = callPackage
    ({ mkDerivation, base, bytestring, directory, filepath, mtl
     , unix-compat
     }:
     mkDerivation {
       pname = "filemanip";
       version = "0.3.6.3";
       sha256 = "0ilqr8jv41zxcj5qyicg29m8s30b9v70x6f9h2h2rw5ap8bxldl8";
       libraryHaskellDepends = [
         base bytestring directory filepath mtl unix-compat
       ];
       homepage = "https://github.com/bos/filemanip";
       description = "Expressive file and directory manipulation for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fingertree" = callPackage
    ({ mkDerivation, base, HUnit, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "fingertree";
       version = "0.1.0.2";
       sha256 = "1krsymv66lnz30hv3j2427vl1wh7vczjb66qviq8mfxgfxf2q8z6";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [
         base HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       description = "Generic finger-tree structure, with example instances";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fixed" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "fixed";
       version = "0.2.1.1";
       sha256 = "1qhmwx8iqshns0crmr9d2f8hm65jxbcp3dvv0c39v34ra7if3a94";
       libraryHaskellDepends = [ base ];
       homepage = "http://github.com/ekmett/fixed";
       description = "Signed 15.16 precision fixed point arithmetic";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fixed-list" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "fixed-list";
       version = "0.1.5";
       sha256 = "07b1kzysf96jckx7yghb2a93l884x8fvxxd0g2ja3hwb5y403911";
       libraryHaskellDepends = [ base ];
       homepage = "http://github.com/jvranish/FixedList/tree/master";
       description = "A fixed length list type";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fixed-vector" = callPackage
    ({ mkDerivation, base, doctest, filemanip, primitive }:
     mkDerivation {
       pname = "fixed-vector";
       version = "0.7.0.3";
       sha256 = "119302bbv2v3k77kr158bp8sd6zhqzsyslcyq1vncng1ay0vzf8g";
       libraryHaskellDepends = [ base primitive ];
       testHaskellDepends = [ base doctest filemanip primitive ];
       description = "Generic vectors with statically known size";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "flexible-defaults" = callPackage
    ({ mkDerivation, base, containers, template-haskell, th-extras
     , transformers
     }:
     mkDerivation {
       pname = "flexible-defaults";
       version = "0.0.1.1";
       sha256 = "0cbp8hb7y29xz3hl780173cs6ca4df0r98fz7v3drqr46aq55ipl";
       libraryHaskellDepends = [
         base containers template-haskell th-extras transformers
       ];
       homepage = "https://github.com/mokus0/flexible-defaults";
       description = "Generate default function implementations for complex type classes";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "flock" = callPackage
    ({ mkDerivation, base, lifted-base, monad-control, transformers
     , unix
     }:
     mkDerivation {
       pname = "flock";
       version = "0.3.1.8";
       sha256 = "1g1gf7qnlqkl57h28nzxnbzj7v2h73czffp5y7s7jm9vbihcwd4n";
       revision = "3";
       editedCabalFile = "06hdirzgghlxpdymb5b5l58v20m34lmn2z8hmp9lwcskc8xfqqfn";
       libraryHaskellDepends = [
         base lifted-base monad-control transformers unix
       ];
       homepage = "http://github.com/hesselink/flock";
       description = "Wrapper for flock(2)";
       license = "unknown";
     }) {};
  "fmlist" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "fmlist";
       version = "0.9";
       sha256 = "1gzwmsrbxk22v7syf8zfvxphm23dmjzfpysz6qww3qvib8wm64aq";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/sjoerdvisscher/fmlist";
       description = "FoldMap lists";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "focus" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "focus";
       version = "0.1.4";
       sha256 = "0h6q48ybcch1p15f4x56ya4d8mn4dwzbfjx573dy6z3x12v7qi2n";
       revision = "1";
       editedCabalFile = "098z3fgkgkfh6dm41sn6wjp87gc2gjka651nslk1n5ychgpkpn1g";
       libraryHaskellDepends = [ base ];
       doCheck = false;
       homepage = "https://github.com/nikita-volkov/focus";
       description = "A general abstraction for manipulating elements of container data structures";
       license = stdenv.lib.licenses.mit;
     }) {};
  "foldl" = callPackage
    ({ mkDerivation, base, bytestring, containers, primitive, text
     , transformers, vector
     }:
     mkDerivation {
       pname = "foldl";
       version = "1.0.9";
       sha256 = "10y9r4h6a6na0gpf5sy5mm34k94swisv6wbj2k210zyfvnrx9r36";
       revision = "1";
       editedCabalFile = "1jqvaxpw3klish41bxq92753n10xl1maxzdv9394lnw94rs9kymg";
       libraryHaskellDepends = [
         base bytestring containers primitive text transformers vector
       ];
       description = "Composable, streaming, and efficient left folds";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "force-layout" = callPackage
    ({ mkDerivation, base, containers, data-default-class, lens
     , vector-space, vector-space-points
     }:
     mkDerivation {
       pname = "force-layout";
       version = "0.3.0.11";
       sha256 = "01cjj30xf34j7c8nk0pbrsy7zp1pyl9qwq3mvnvbikrjqbhdylhh";
       libraryHaskellDepends = [
         base containers data-default-class lens vector-space
         vector-space-points
       ];
       description = "Simple force-directed layout";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "foreign-store" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "foreign-store";
       version = "0.2";
       sha256 = "1p436dn6l5zjzizcsj0hn10s2n907gr7c8y89i4sm3h69lhqlw86";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/chrisdone/foreign-store";
       description = "Store a stable pointer in a foreign context to be retrieved later";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "formatting" = callPackage
    ({ mkDerivation, base, clock, old-locale, scientific, text
     , text-format, time
     }:
     mkDerivation {
       pname = "formatting";
       version = "6.2.0";
       sha256 = "13w2322djffajqdy48lwfngcrbh5pc9ivhy1w5zgxcjqc0amlv5v";
       revision = "1";
       editedCabalFile = "12bs814jy0mvx512q89qzpbm58iznqy99yv1a3lsaf7y7m447799";
       libraryHaskellDepends = [
         base clock old-locale scientific text text-format time
       ];
       description = "Combinator-based type-safe formatting (like printf() or FORMAT)";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "free" = callPackage
    ({ mkDerivation, base, bifunctors, comonad, distributive, mtl
     , prelude-extras, profunctors, semigroupoids, semigroups
     , template-haskell, transformers
     }:
     mkDerivation {
       pname = "free";
       version = "4.11";
       sha256 = "0k645n6ywy1as2lmw4gv2bmmr9y67pcnar0jhhf9kpaqvl5s2h5y";
       libraryHaskellDepends = [
         base bifunctors comonad distributive mtl prelude-extras profunctors
         semigroupoids semigroups template-haskell transformers
       ];
       homepage = "http://github.com/ekmett/free/";
       description = "Monads for free";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "freenect" = callPackage
    ({ mkDerivation, base, freenect, freenect_sync, vector }:
     mkDerivation {
       pname = "freenect";
       version = "1.2";
       sha256 = "11ggp90npdyfdmf8zhjk442zl0j0lni6hizhgc0409za9i6s1l5g";
       configureFlags = [
         "--extra-include-dirs=${pkgs.freenect}/include/libfreenect"
         "--extra-lib-dirs=${pkgs.freenect}/lib"
       ];
       libraryHaskellDepends = [ base vector ];
       librarySystemDepends = [ freenect freenect_sync ];
       homepage = "https://github.com/chrisdone/freenect";
       description = "Interface to the Kinect device";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) freenect; freenect_sync = null;};
  "frisby" = callPackage
    ({ mkDerivation, array, base, containers, mtl }:
     mkDerivation {
       pname = "frisby";
       version = "0.2";
       sha256 = "0isj9p7j33va1a4q78vnq32j9jdbjww596rxja235z4whicraf53";
       revision = "1";
       editedCabalFile = "1ip1bykcrnqzfjbsi4gfj59lc24k3kvyn949ryczpqshlpgnbnqj";
       libraryHaskellDepends = [ array base containers mtl ];
       homepage = "http://repetae.net/computer/frisby/";
       description = "Linear time composable parser for PEG grammars";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fsnotify" = callPackage
    ({ mkDerivation, async, base, containers, directory, hinotify
     , system-fileio, system-filepath, tasty, tasty-hunit, temporary-rc
     , text, time
     }:
     mkDerivation {
       pname = "fsnotify";
       version = "0.1.0.3";
       sha256 = "0m6jyg45azk377jklgwyqrx95q174cxd5znpyh9azznkh09wq58z";
       libraryHaskellDepends = [
         async base containers hinotify system-fileio system-filepath text
         time
       ];
       testHaskellDepends = [
         async base directory system-fileio system-filepath tasty
         tasty-hunit temporary-rc
       ];
       doCheck = false;
       description = "Cross platform library for file change notification";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fuzzcheck" = callPackage
    ({ mkDerivation, base, hspec, hspec-expectations, HUnit
     , lifted-base, monad-control, QuickCheck, random, transformers
     }:
     mkDerivation {
       pname = "fuzzcheck";
       version = "0.1.1";
       sha256 = "0qfr4f0b50l368b45yzwhqd4g2y1kvfrfj4hr84cdxcwdrwn9mpc";
       libraryHaskellDepends = [
         base lifted-base monad-control QuickCheck random transformers
       ];
       testHaskellDepends = [
         base hspec hspec-expectations HUnit QuickCheck
       ];
       homepage = "https://github.com/fpco/fuzzcheck";
       description = "A simple checker for stress testing monadic code";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "gd" = callPackage
    ({ mkDerivation, base, bytestring, expat, fontconfig, freetype, gd
     , libjpeg, libpng, zlib
     }:
     mkDerivation {
       pname = "gd";
       version = "3000.7.3";
       sha256 = "1dkzv6zs00qi0jmblkw05ywizc8y3baz7pnz0lcqn1cs1mhcpbhl";
       libraryHaskellDepends = [ base bytestring ];
       librarySystemDepends = [
         expat fontconfig freetype gd libjpeg libpng zlib
       ];
       description = "A Haskell binding to a subset of the GD graphics library";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) expat; inherit (pkgs) fontconfig;
         inherit (pkgs) freetype; inherit (pkgs) gd; inherit (pkgs) libjpeg;
         inherit (pkgs) libpng; inherit (pkgs) zlib;};
  "generic-aeson" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, generic-deriving, mtl
     , tagged, text, unordered-containers, vector
     }:
     mkDerivation {
       pname = "generic-aeson";
       version = "0.2.0.4";
       sha256 = "1h5vj66dx25iais9yia33ia95nr0ywxsbnrcm71v50jvj73ywhbx";
       revision = "1";
       editedCabalFile = "0hy684i1pnv116nrijq16fhxb6y7bnk9nh7rk69k8nakkwyhqs8z";
       libraryHaskellDepends = [
         aeson attoparsec base generic-deriving mtl tagged text
         unordered-containers vector
       ];
       description = "Derivation of Aeson instances using GHC generics";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "generic-deriving" = callPackage
    ({ mkDerivation, base, ghc-prim, template-haskell }:
     mkDerivation {
       pname = "generic-deriving";
       version = "1.6.3";
       sha256 = "04cjyl5aphf36qbbn75midrqj151fc77z2znpal8dk52gaab2f67";
       libraryHaskellDepends = [ base ghc-prim template-haskell ];
       description = "Generic programming library for generalised deriving";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "generic-xmlpickler" = callPackage
    ({ mkDerivation, base, generic-deriving, hxt, text }:
     mkDerivation {
       pname = "generic-xmlpickler";
       version = "0.1.0.0";
       sha256 = "0ybh3laciskf7yyhb8li4l8w758avgywfl7gy0df16im3x0cx0jy";
       revision = "1";
       editedCabalFile = "183calycnh3n5sn4xjn6gnmxbwv0cj23lgi870lv12lr84r5nhww";
       libraryHaskellDepends = [ base generic-deriving hxt text ];
       homepage = "http://github.com/silkapp/generic-xmlpickler";
       description = "Generic generation of HXT XmlPickler instances using GHC Generics";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "generics-sop" = callPackage
    ({ mkDerivation, base, ghc-prim, template-haskell }:
     mkDerivation {
       pname = "generics-sop";
       version = "0.1.1.2";
       sha256 = "1r9icxwyh4pg952yaywk4nfj4j21klzf361z9z24avd6vw89p6v7";
       libraryHaskellDepends = [ base ghc-prim template-haskell ];
       description = "Generic Programming using True Sums of Products";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ghc-heap-view" = callPackage
    ({ mkDerivation, base, binary, bytestring, containers, deepseq, ghc
     , template-haskell, transformers
     }:
     mkDerivation {
       pname = "ghc-heap-view";
       version = "0.5.3";
       sha256 = "1jcqi4gahxmhd61hl75wgb9dp99kxld68860jnd9x4hnp5cd33q0";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base binary bytestring containers ghc template-haskell transformers
       ];
       testHaskellDepends = [ base deepseq ];
       description = "Extract the heap representation of Haskell values and thunks";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ghc-mod" = callPackage
    ({ mkDerivation, async, base, Cabal, containers, data-default
     , deepseq, directory, djinn-ghc, doctest, filepath, ghc, ghc-paths
     , ghc-syb-utils, haskell-src-exts, hlint, hspec, io-choice
     , monad-control, monad-journal, mtl, old-time, pretty, process
     , split, syb, temporary, text, time, transformers
     , transformers-base
     }:
     mkDerivation {
       pname = "ghc-mod";
       version = "5.2.1.2";
       sha256 = "11wnrdb6blw169w6kd49ax9h1r9qkka5329lmdhimvki8amv8riv";
       revision = "2";
       editedCabalFile = "13fbfwjkc498s0mv6fza7b4ywdy81saqdqfmz5q1lp671hwh5m15";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base Cabal containers deepseq directory djinn-ghc filepath ghc
         ghc-paths ghc-syb-utils haskell-src-exts hlint io-choice
         monad-control monad-journal mtl old-time pretty process split syb
         temporary text time transformers transformers-base
       ];
       executableHaskellDepends = [
         async base containers data-default directory filepath ghc mtl
         old-time pretty process split time
       ];
       testHaskellDepends = [
         base Cabal containers deepseq directory djinn-ghc doctest filepath
         ghc ghc-paths ghc-syb-utils haskell-src-exts hlint hspec io-choice
         monad-control monad-journal mtl old-time pretty process split syb
         temporary text time transformers transformers-base
       ];
       doCheck = false;
       homepage = "http://www.mew.org/~kazu/proj/ghc-mod/";
       description = "Happy Haskell Programming";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ghc-mtl" = callPackage
    ({ mkDerivation, base, exceptions, extensible-exceptions, ghc, mtl
     }:
     mkDerivation {
       pname = "ghc-mtl";
       version = "1.2.1.0";
       sha256 = "0h6r6gip9nsjlsq88wj105hhqliy7ac2dmmndsfzbjz07b03cklk";
       libraryHaskellDepends = [
         base exceptions extensible-exceptions ghc mtl
       ];
       homepage = "http://hub.darcs.net/jcpetruzza/ghc-mtl";
       description = "An mtl compatible version of the Ghc-Api monads and monad-transformers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ghc-paths" = callPackage
    ({ mkDerivation, base, Cabal, directory }:
     mkDerivation {
       pname = "ghc-paths";
       version = "0.1.0.9";
       sha256 = "0ibrr1dxa35xx20cpp8jzgfak1rdmy344dfwq4vlq013c6w8z9mg";
       revision = "2";
       editedCabalFile = "1gs6biqbcabgmrwhc1bq1bdaxdwwh26v4mpvj5c7cfyigc64gwyk";
       setupHaskellDepends = [ base Cabal directory ];
       libraryHaskellDepends = [ base ];
       description = "Knowledge of GHC's installation directories";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ghc-syb-utils" = callPackage
    ({ mkDerivation, base, ghc, syb }:
     mkDerivation {
       pname = "ghc-syb-utils";
       version = "0.2.3";
       sha256 = "0rxwdivpcppwzbqglbrz8rm9f4g1gmba9ij7p7aj3di9x37kzxky";
       libraryHaskellDepends = [ base ghc syb ];
       homepage = "http://github.com/nominolo/ghc-syb";
       description = "Scrap Your Boilerplate utilities for the GHC API";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ghcid" = callPackage
    ({ mkDerivation, ansi-terminal, base, cmdargs, directory, extra
     , filepath, process, tasty, tasty-hunit, terminal-size, time
     }:
     mkDerivation {
       pname = "ghcid";
       version = "0.3.6";
       sha256 = "15aasq3f8h5nimgd5zz0mhkflslmcadl2f0srbw4q0462flvmjm8";
       revision = "1";
       editedCabalFile = "028zw1djfcr1sm243g1a5ganp84976br51hk403w1ghc2xpklh1s";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base cmdargs directory extra filepath process terminal-size time
       ];
       executableHaskellDepends = [
         ansi-terminal base cmdargs directory extra filepath process
         terminal-size time
       ];
       testHaskellDepends = [
         ansi-terminal base cmdargs directory extra filepath process tasty
         tasty-hunit terminal-size time
       ];
       doCheck = false;
       homepage = "https://github.com/ndmitchell/ghcid#readme";
       description = "GHCi based bare bones IDE";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "gio" = callPackage
    ({ mkDerivation, array, base, bytestring, containers, glib
     , gtk2hs-buildtools, mtl, system-glib
     }:
     mkDerivation {
       pname = "gio";
       version = "0.13.1.0";
       sha256 = "1qxbdjznxz56jw108cc78lzwh1r4g8l2jcaz2bh2akc1nwhv2x5j";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         array base bytestring containers glib mtl
       ];
       libraryPkgconfigDepends = [ system-glib ];
       libraryToolDepends = [ gtk2hs-buildtools ];
       homepage = "http://projects.haskell.org/gtk2hs/";
       description = "Binding to the GIO";
       license = stdenv.lib.licenses.lgpl21;
     }) {system-glib = pkgs.glib;};
  "gipeda" = callPackage
    ({ mkDerivation, aeson, base, bytestring, cassava, containers
     , directory, filepath, shake, split, text, unordered-containers
     , vector, yaml
     }:
     mkDerivation {
       pname = "gipeda";
       version = "0.1.0.2";
       sha256 = "0d3pbssndmlzmhk88214mz77jmgqh3ca2l8si9fr5v9wi0v5d8yz";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         aeson base bytestring cassava containers directory filepath shake
         split text unordered-containers vector yaml
       ];
       doHaddock = false;
       homepage = "https://github.com/nomeata/gipeda";
       description = "Git Performance Dashboard";
       license = stdenv.lib.licenses.mit;
     }) {};
  "git-embed" = callPackage
    ({ mkDerivation, base, directory, filepath, process
     , template-haskell
     }:
     mkDerivation {
       pname = "git-embed";
       version = "0.1.0";
       sha256 = "0yrx06ay25zsk90djr4mrqnn80xp3w6cmkciqavrmijf25fc5jvn";
       libraryHaskellDepends = [
         base directory filepath process template-haskell
       ];
       homepage = "https://github.com/borsboom/git-embed";
       description = "Use TH to embed Git repo information";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "gitlib" = callPackage
    ({ mkDerivation, base, base16-bytestring, bytestring, conduit
     , conduit-combinators, containers, directory, exceptions, filepath
     , hashable, lifted-async, lifted-base, monad-control, monad-logger
     , mtl, resourcet, semigroups, system-filepath, tagged, text, time
     , transformers, unix, unordered-containers
     }:
     mkDerivation {
       pname = "gitlib";
       version = "3.1.0.1";
       sha256 = "0h6drwxb8nc3nsw9b5w6xaqpwnila0i546w4xykxb61lybjdmw2g";
       libraryHaskellDepends = [
         base base16-bytestring bytestring conduit conduit-combinators
         containers directory exceptions filepath hashable lifted-async
         lifted-base monad-control monad-logger mtl resourcet semigroups
         system-filepath tagged text time transformers unix
         unordered-containers
       ];
       description = "API library for working with Git repositories";
       license = stdenv.lib.licenses.mit;
     }) {};
  "gitlib-libgit2" = callPackage
    ({ mkDerivation, base, bytestring, conduit, conduit-combinators
     , containers, directory, exceptions, fast-logger, filepath, gitlib
     , gitlib-test, hlibgit2, hspec, hspec-expectations, HUnit
     , lifted-async, lifted-base, missing-foreign, mmorph, monad-control
     , monad-logger, monad-loops, mtl, resourcet, stm, stm-conduit
     , tagged, template-haskell, text, text-icu, time, transformers
     , transformers-base
     }:
     mkDerivation {
       pname = "gitlib-libgit2";
       version = "3.1.0.3";
       sha256 = "19lly5nrxa05gj6mv887d419mm65ha40rggv2a8y1jd6s7z6drfi";
       libraryHaskellDepends = [
         base bytestring conduit conduit-combinators containers directory
         exceptions fast-logger filepath gitlib hlibgit2 lifted-async
         lifted-base missing-foreign mmorph monad-control monad-logger
         monad-loops mtl resourcet stm stm-conduit tagged template-haskell
         text text-icu time transformers transformers-base
       ];
       testHaskellDepends = [
         base exceptions gitlib gitlib-test hspec hspec-expectations HUnit
         monad-logger transformers
       ];
       description = "Libgit2 backend for gitlib";
       license = stdenv.lib.licenses.mit;
     }) {};
  "gitlib-test" = callPackage
    ({ mkDerivation, base, bytestring, conduit, conduit-combinators
     , exceptions, gitlib, hspec, hspec-expectations, HUnit
     , monad-control, tagged, text, time, transformers
     }:
     mkDerivation {
       pname = "gitlib-test";
       version = "3.1.0.2";
       sha256 = "0nny0fp1j3g5fsxskqnlwcqrrxn74yjxkg9avfqdgai8b585yka2";
       libraryHaskellDepends = [
         base bytestring conduit conduit-combinators exceptions gitlib hspec
         hspec-expectations HUnit monad-control tagged text time
         transformers
       ];
       description = "Test library for confirming gitlib backend compliance";
       license = stdenv.lib.licenses.mit;
     }) {};
  "gitrev" = callPackage
    ({ mkDerivation, base, directory, filepath, process
     , template-haskell
     }:
     mkDerivation {
       pname = "gitrev";
       version = "1.0.0";
       sha256 = "05jxzhpjzd9n5sdaa8d9y2zczs2v5w4n9718wl411ghvx54jhnfd";
       libraryHaskellDepends = [
         base directory filepath process template-haskell
       ];
       homepage = "https://github.com/acfoltzer/gitrev";
       description = "Compile git revision info into Haskell projects";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "gitson" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, base, bytestring, criterion
     , directory, doctest, errors, filepath, flock, Glob, hspec
     , monad-control, process, random, transformers
     }:
     mkDerivation {
       pname = "gitson";
       version = "0.5.1";
       sha256 = "175j2pkc3cb37h3vilb99i782as9yg68nacs2ysnp1m7hrxvvyjy";
       libraryHaskellDepends = [
         aeson aeson-pretty base bytestring directory errors filepath flock
         monad-control process transformers
       ];
       testHaskellDepends = [
         aeson base directory doctest Glob hspec process transformers
       ];
       benchmarkHaskellDepends = [
         aeson base criterion directory random transformers
       ];
       doCheck = false;
       homepage = "https://github.com/myfreeweb/gitson";
       description = "A document store library for Git + JSON";
       license = "unknown";
     }) {};
  "gl" = callPackage
    ({ mkDerivation, base, containers, directory, filepath, fixed, half
     , hxt, mesa, split, transformers
     }:
     mkDerivation {
       pname = "gl";
       version = "0.7.5";
       sha256 = "0ffc9lks1fd4ch7pygdl8yfmy425aazykrn2niakb876kzzm5axi";
       libraryHaskellDepends = [
         base containers directory filepath fixed half hxt split
         transformers
       ];
       librarySystemDepends = [ mesa ];
       description = "Complete OpenGL raw bindings";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) mesa;};
  "glib" = callPackage
    ({ mkDerivation, base, bytestring, containers, glib
     , gtk2hs-buildtools, text, utf8-string
     }:
     mkDerivation {
       pname = "glib";
       version = "0.13.1.0";
       sha256 = "11scv2imljnr6ng7692jdagr7fc924hgfwfbnw4a5sra3w7ja7fz";
       libraryHaskellDepends = [
         base bytestring containers text utf8-string
       ];
       libraryPkgconfigDepends = [ glib ];
       libraryToolDepends = [ gtk2hs-buildtools ];
       homepage = "http://projects.haskell.org/gtk2hs/";
       description = "Binding to the GLIB library for Gtk2Hs";
       license = stdenv.lib.licenses.lgpl21;
     }) {inherit (pkgs) glib;};
  "graph-core" = callPackage
    ({ mkDerivation, base, containers, deepseq, hashable, HTF, mtl
     , QuickCheck, safe, unordered-containers, vector
     }:
     mkDerivation {
       pname = "graph-core";
       version = "0.2.2.0";
       sha256 = "0czqcdg7w7al7gl339b9l15kn5n79zmdjbic3gn9mblnjb1666r9";
       revision = "1";
       editedCabalFile = "1lymjy5cslc6xcwxv6lmvbi0fi12nba45vn6z576gc7cbw3lycfr";
       libraryHaskellDepends = [
         base containers deepseq hashable mtl QuickCheck safe
         unordered-containers vector
       ];
       testHaskellDepends = [
         base containers deepseq hashable HTF mtl QuickCheck safe
         unordered-containers vector
       ];
       homepage = "https://github.com/factisresearch/graph-core";
       description = "Fast, memory efficient and persistent graph implementation";
       license = stdenv.lib.licenses.mit;
     }) {};
  "graphs" = callPackage
    ({ mkDerivation, array, base, containers, transformers, void }:
     mkDerivation {
       pname = "graphs";
       version = "0.6.0.1";
       sha256 = "061n1k5v6izpa77wyxch3ym4hzs1k64a902x2250gi724mj3mjsk";
       libraryHaskellDepends = [
         array base containers transformers void
       ];
       homepage = "http://github.com/ekmett/graphs";
       description = "A simple monadic graph library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "graphviz" = callPackage
    ({ mkDerivation, base, bytestring, colour, containers, directory
     , dlist, fgl, filepath, polyparse, process, QuickCheck, temporary
     , text, transformers, wl-pprint-text
     }:
     mkDerivation {
       pname = "graphviz";
       version = "2999.17.0.2";
       sha256 = "1zfndf5mpwx3nrgybxg5hy8n30zwsfx6jgp9468b0pp8c5h65j13";
       revision = "1";
       editedCabalFile = "0grk18x93xxjj85mccz9fg1zp8ymqm2dbzqzvrdb0vy1mlppb6b0";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring colour containers directory dlist fgl filepath
         polyparse process temporary text transformers wl-pprint-text
       ];
       executableHaskellDepends = [
         base bytestring directory filepath text
       ];
       testHaskellDepends = [
         base containers fgl filepath QuickCheck text
       ];
       doCheck = false;
       homepage = "http://projects.haskell.org/graphviz/";
       description = "Bindings to Graphviz for graph visualisation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "gravatar" = callPackage
    ({ mkDerivation, base, bytestring, data-default, hspec, HTTP
     , pureMD5, text
     }:
     mkDerivation {
       pname = "gravatar";
       version = "0.8.0";
       sha256 = "1mzl08qzwzzhz6bvkz4qnrdnzsgvsmi2lnhzf743yzx4msn00q3g";
       libraryHaskellDepends = [
         base bytestring data-default HTTP pureMD5 text
       ];
       testHaskellDepends = [ base hspec text ];
       description = "Generate Gravatar image URLs";
       license = stdenv.lib.licenses.mit;
     }) {};
  "groundhog" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, base64-bytestring
     , blaze-builder, bytestring, containers, monad-control
     , monad-logger, mtl, scientific, text, time, transformers
     , transformers-base
     }:
     mkDerivation {
       pname = "groundhog";
       version = "0.7.0.3";
       sha256 = "0n5c501wfyqcl1iy4017yyxp95kz7mb4lgc0mjjk9si36ixkww9r";
       revision = "2";
       editedCabalFile = "1zzk6q800yl20hdg1wy0224lclj45n88k6aqskc6mbzady3zg8ml";
       libraryHaskellDepends = [
         aeson attoparsec base base64-bytestring blaze-builder bytestring
         containers monad-control monad-logger mtl scientific text time
         transformers transformers-base
       ];
       homepage = "http://github.com/lykahb/groundhog";
       description = "Type-safe datatype-database mapping library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "groundhog-mysql" = callPackage
    ({ mkDerivation, base, bytestring, containers, groundhog
     , monad-control, monad-logger, mysql, mysql-simple, resource-pool
     , text, time, transformers
     }:
     mkDerivation {
       pname = "groundhog-mysql";
       version = "0.7.0.1";
       sha256 = "01pnninva0va0pl9k7mjk2l7fm42978j9x82sj8z7cscshvl327f";
       libraryHaskellDepends = [
         base bytestring containers groundhog monad-control monad-logger
         mysql mysql-simple resource-pool text time transformers
       ];
       description = "MySQL backend for the groundhog library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "groundhog-postgresql" = callPackage
    ({ mkDerivation, attoparsec, base, blaze-builder, bytestring
     , containers, groundhog, monad-control, monad-logger
     , postgresql-libpq, postgresql-simple, resource-pool, text, time
     , transformers
     }:
     mkDerivation {
       pname = "groundhog-postgresql";
       version = "0.7.0.2";
       sha256 = "18wdj51v6qqyqx10lvknr3irhs5qddvh301bx7l9cdcpkk1la81i";
       revision = "1";
       editedCabalFile = "1jlr0vf0rvg3kb39qh0swx2p37r1xqkzqr30j2fxjw6q4ycz8k01";
       libraryHaskellDepends = [
         attoparsec base blaze-builder bytestring containers groundhog
         monad-control monad-logger postgresql-libpq postgresql-simple
         resource-pool text time transformers
       ];
       description = "PostgreSQL backend for the groundhog library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "groundhog-sqlite" = callPackage
    ({ mkDerivation, base, bytestring, containers, direct-sqlite
     , groundhog, monad-control, monad-logger, resource-pool, text
     , transformers, unordered-containers
     }:
     mkDerivation {
       pname = "groundhog-sqlite";
       version = "0.7.0.1";
       sha256 = "0lsm9yfapdpy4nf5bxrbjkvw9nwc82qfmyw1h9l3mc4b8nfp12dy";
       libraryHaskellDepends = [
         base bytestring containers direct-sqlite groundhog monad-control
         monad-logger resource-pool text transformers unordered-containers
       ];
       description = "Sqlite3 backend for the groundhog library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "groundhog-th" = callPackage
    ({ mkDerivation, aeson, base, bytestring, containers, groundhog
     , template-haskell, text, time, unordered-containers, yaml
     }:
     mkDerivation {
       pname = "groundhog-th";
       version = "0.7.0";
       sha256 = "14g4665wrr3226m2v63p4j8g9bcyi5la7nk2vh509xyz3z17aq67";
       revision = "1";
       editedCabalFile = "1zsiahvfgqxq9kgig46l9hyarg8kwzp1j2hr4671bxs1c1ah1na1";
       libraryHaskellDepends = [
         aeson base bytestring containers groundhog template-haskell text
         time unordered-containers yaml
       ];
       description = "Type-safe datatype-database mapping library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "groupoids" = callPackage
    ({ mkDerivation, base, semigroupoids }:
     mkDerivation {
       pname = "groupoids";
       version = "4.0";
       sha256 = "08la44c19pz2clws5mb939zc1d17cb6qy9qlh2n1634pl0zrawb6";
       libraryHaskellDepends = [ base semigroupoids ];
       doHaddock = false;
       homepage = "http://github.com/ekmett/groupoids/";
       description = "This package has been absorbed into semigroupoids 4.0";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "groups" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "groups";
       version = "0.4.0.0";
       sha256 = "1kp8h3617cimya8nnadljyy4vk66dzl5nzfm900k2gh3ci8kja6k";
       libraryHaskellDepends = [ base ];
       description = "Haskell 98 groups";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "gtk" = callPackage
    ({ mkDerivation, array, base, bytestring, cairo, containers, gio
     , glib, gtk2, gtk2hs-buildtools, mtl, pango, text
     }:
     mkDerivation {
       pname = "gtk";
       version = "0.13.6";
       sha256 = "1xj3vafk6rhy5nifixsp72n88i0idlknggcq1w626jfszx5anx2c";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         array base bytestring cairo containers gio glib mtl pango text
       ];
       libraryPkgconfigDepends = [ gtk2 ];
       libraryToolDepends = [ gtk2hs-buildtools ];
       doHaddock = false;
       homepage = "http://projects.haskell.org/gtk2hs/";
       description = "Binding to the Gtk+ graphical user interface library";
       license = stdenv.lib.licenses.lgpl21;
     }) {gtk2 = pkgs.gnome2.gtk;};
  "gtk2hs-buildtools" = callPackage
    ({ mkDerivation, alex, array, base, containers, directory, filepath
     , happy, hashtables, pretty, process, random
     }:
     mkDerivation {
       pname = "gtk2hs-buildtools";
       version = "0.13.0.3";
       sha256 = "1ijcmcjp8mralpzl1gvh24bzq8njlzkvck1r07b010rrklv04arp";
       isLibrary = false;
       isExecutable = true;
       enableSeparateDataOutput = true;
       executableHaskellDepends = [
         array base containers directory filepath hashtables pretty process
         random
       ];
       executableToolDepends = [ alex happy ];
       doHaddock = false;
       homepage = "http://projects.haskell.org/gtk2hs/";
       description = "Tools to build the Gtk2Hs suite of User Interface libraries";
       license = stdenv.lib.licenses.gpl2;
     }) {};
  "gtk3" = callPackage
    ({ mkDerivation, array, base, bytestring, cairo, containers, gio
     , glib, gtk2hs-buildtools, gtk3, mtl, pango, text, time
     , transformers
     }:
     mkDerivation {
       pname = "gtk3";
       version = "0.13.6";
       sha256 = "12fsbl56gf8inxvg7jqad2j689gpwp4bwznyz153y6xzgqs7vaq0";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         array base bytestring cairo containers gio glib mtl pango text
       ];
       libraryPkgconfigDepends = [ gtk3 ];
       libraryToolDepends = [ gtk2hs-buildtools ];
       executableHaskellDepends = [
         array base cairo text time transformers
       ];
       homepage = "http://projects.haskell.org/gtk2hs/";
       description = "Binding to the Gtk+ graphical user interface library";
       license = stdenv.lib.licenses.lgpl21;
     }) {inherit (pkgs) gtk3;};
  "hOpenPGP" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, base64-bytestring
     , bifunctors, binary, binary-conduit, byteable, bytestring, bzlib
     , conduit, conduit-extra, containers, criterion
     , crypto-cipher-types, crypto-pubkey, crypto-random, cryptocipher
     , cryptohash, data-default-class, errors, hashable
     , incremental-parser, ixset, lens, monad-loops, nettle, network
     , network-uri, newtype, old-locale, openpgp-asciiarmor, QuickCheck
     , quickcheck-instances, resourcet, securemem, semigroups, split
     , tasty, tasty-hunit, tasty-quickcheck, text, time, transformers
     , unordered-containers, wl-pprint-extras, zlib
     }:
     mkDerivation {
       pname = "hOpenPGP";
       version = "2.0";
       sha256 = "1krk1019d0ix4ix0qh55l4pzgbggl151vqgd0jbhdcbkmvhfi4xv";
       revision = "4";
       editedCabalFile = "02nlbbmjnw7ksx9pbapzi9nbv6s6qxa2bmsrhbajzmfv5mpjwraw";
       libraryHaskellDepends = [
         aeson attoparsec base base64-bytestring bifunctors binary
         binary-conduit byteable bytestring bzlib conduit conduit-extra
         containers crypto-cipher-types crypto-pubkey crypto-random
         cryptocipher cryptohash data-default-class errors hashable
         incremental-parser ixset lens monad-loops nettle network
         network-uri newtype old-locale openpgp-asciiarmor resourcet
         securemem semigroups split text time transformers
         unordered-containers wl-pprint-extras zlib
       ];
       testHaskellDepends = [
         aeson attoparsec base bifunctors binary binary-conduit byteable
         bytestring bzlib conduit conduit-extra containers
         crypto-cipher-types crypto-pubkey crypto-random cryptocipher
         cryptohash data-default-class errors hashable incremental-parser
         ixset lens monad-loops nettle network network-uri newtype
         old-locale QuickCheck quickcheck-instances resourcet securemem
         semigroups split tasty tasty-hunit tasty-quickcheck text time
         transformers unordered-containers wl-pprint-extras zlib
       ];
       benchmarkHaskellDepends = [
         aeson base base64-bytestring bifunctors binary binary-conduit
         byteable bytestring bzlib conduit conduit-extra containers
         criterion crypto-cipher-types crypto-pubkey crypto-random
         cryptocipher cryptohash data-default-class errors hashable
         incremental-parser ixset lens monad-loops nettle network
         network-uri newtype old-locale openpgp-asciiarmor resourcet
         securemem semigroups split text time transformers
         unordered-containers wl-pprint-extras zlib
       ];
       homepage = "http://floss.scru.org/hOpenPGP/";
       description = "native Haskell implementation of OpenPGP (RFC4880)";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hPDB" = callPackage
    ({ mkDerivation, AC-Vector, base, bytestring, containers, deepseq
     , directory, ghc-prim, iterable, mmap, mtl, Octree, parallel
     , QuickCheck, tagged, template-haskell, text, vector, zlib
     }:
     mkDerivation {
       pname = "hPDB";
       version = "1.2.0.2";
       sha256 = "0mymyvd9p63sf3801bn2pyihj47fymp8wwfbllhbvw2l92hy79vk";
       libraryHaskellDepends = [
         AC-Vector base bytestring containers deepseq directory ghc-prim
         iterable mmap mtl Octree parallel QuickCheck tagged
         template-haskell text vector zlib
       ];
       homepage = "https://github.com/BioHaskell/hPDB";
       description = "Protein Databank file format library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hPDB-examples" = callPackage
    ({ mkDerivation, AC-Vector, base, bytestring, containers, deepseq
     , directory, ghc-prim, GLUT, hPDB, IfElse, iterable, mtl, Octree
     , OpenGL, process, QuickCheck, template-haskell, text, text-format
     , time, vector
     }:
     mkDerivation {
       pname = "hPDB-examples";
       version = "1.2.0.1";
       sha256 = "0ppwbm0ag9dd5rzpvzk89c4ykwkgvwz9fg6d3lr9vwfid15a116s";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         AC-Vector base bytestring containers deepseq directory ghc-prim
         GLUT hPDB iterable mtl Octree OpenGL QuickCheck template-haskell
         text text-format vector
       ];
       testHaskellDepends = [
         AC-Vector base bytestring containers deepseq directory ghc-prim
         hPDB IfElse iterable mtl process template-haskell text time vector
       ];
       doHaddock = false;
       homepage = "https://github.com/BioHaskell/hPDB-examples";
       description = "Examples for hPDB library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hackage-mirror" = callPackage
    ({ mkDerivation, aws, base, bytestring, cereal, conduit
     , conduit-extra, cryptohash, data-default, directory, exceptions
     , fast-logger, filepath, http-conduit, lifted-async, lifted-base
     , mmorph, monad-control, monad-logger, old-locale
     , optparse-applicative, resourcet, retry, shakespeare, stm, tar
     , template-haskell, temporary, text, thyme, transformers
     , unordered-containers
     }:
     mkDerivation {
       pname = "hackage-mirror";
       version = "0.1.0.0";
       sha256 = "1iaaxdn4lsfrjksax8c9pawrjwj4sb6irqd4sfkdm3k9l2f8nqvg";
       revision = "2";
       editedCabalFile = "03g9zf6nqwlfsszw32jmv1sqnl58nxqz3wryd5gs2rahmx9fr1fp";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aws base bytestring cereal conduit conduit-extra cryptohash
         data-default directory exceptions fast-logger filepath http-conduit
         lifted-async lifted-base mmorph monad-control monad-logger
         old-locale resourcet retry shakespeare stm tar template-haskell
         temporary text thyme transformers unordered-containers
       ];
       executableHaskellDepends = [
         base monad-logger optparse-applicative
       ];
       homepage = "http://fpcomplete.com";
       description = "Simple mirroring utility for Hackage";
       license = stdenv.lib.licenses.mit;
     }) {};
  "haddock-api" = callPackage
    ({ mkDerivation, array, base, bytestring, Cabal, containers
     , deepseq, directory, filepath, ghc, ghc-paths, haddock-library
     , xhtml
     }:
     mkDerivation {
       pname = "haddock-api";
       version = "2.15.0.2";
       sha256 = "1gdmwid3qg86ql0828bp8g121psvmz11s0xivrzhiv8knxbqj8l7";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         array base bytestring Cabal containers deepseq directory filepath
         ghc ghc-paths haddock-library xhtml
       ];
       homepage = "http://www.haskell.org/haddock/";
       description = "A documentation-generation tool for Haskell libraries";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "haddock-library" = callPackage
    ({ mkDerivation, base, base-compat, bytestring, deepseq, hspec
     , QuickCheck
     }:
     mkDerivation {
       pname = "haddock-library";
       version = "1.1.1";
       sha256 = "0sjnmbmq1pss9ikcqnhvpf57rv78lzi1r99ywpmmvj1gyva2s31m";
       libraryHaskellDepends = [ base bytestring deepseq ];
       testHaskellDepends = [
         base base-compat bytestring deepseq hspec QuickCheck
       ];
       homepage = "http://www.haskell.org/haddock/";
       description = "Library exposing some functionality of Haddock";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hakyll" = callPackage
    ({ mkDerivation, base, binary, blaze-html, blaze-markup, bytestring
     , cmdargs, containers, cryptohash, data-default, deepseq, directory
     , filepath, fsnotify, http-conduit, http-types, HUnit, lrucache
     , mtl, network, network-uri, old-locale, old-time, pandoc
     , pandoc-citeproc, parsec, process, QuickCheck, random, regex-base
     , regex-tdfa, snap-core, snap-server, system-filepath, tagsoup
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , text, time, time-locale-compat, utillinux
     }:
     mkDerivation {
       pname = "hakyll";
       version = "4.6.8.1";
       sha256 = "0f8c2b9zy55pscmkmwjb72qqsm2kmrjlwfhkl6igpj631r804iyr";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base binary blaze-html blaze-markup bytestring cmdargs containers
         cryptohash data-default deepseq directory filepath fsnotify
         http-conduit http-types lrucache mtl network network-uri old-locale
         old-time pandoc pandoc-citeproc parsec process random regex-base
         regex-tdfa snap-core snap-server system-filepath tagsoup text time
         time-locale-compat
       ];
       executableHaskellDepends = [ base directory filepath ];
       testHaskellDepends = [
         base binary blaze-html blaze-markup bytestring cmdargs containers
         cryptohash data-default deepseq directory filepath fsnotify
         http-conduit http-types HUnit lrucache mtl network network-uri
         old-locale old-time pandoc pandoc-citeproc parsec process
         QuickCheck random regex-base regex-tdfa snap-core snap-server
         system-filepath tagsoup test-framework test-framework-hunit
         test-framework-quickcheck2 text time time-locale-compat
       ];
       testToolDepends = [ utillinux ];
       doCheck = false;
       homepage = "http://jaspervdj.be/hakyll";
       description = "A static website compiler library";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) utillinux;};
  "half" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "half";
       version = "0.2.0.1";
       sha256 = "0lwh5bv8pnp9fzq64z1fg1i4fv8h2lcchs1298agq881hcay19qw";
       revision = "1";
       editedCabalFile = "1knc268v79zb3fs2x09gjs7fh6i24iaplpdblg4lr72xgawc1bfg";
       libraryHaskellDepends = [ base ];
       homepage = "http://github.com/ekmett/half";
       description = "Half-precision floating-point";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "happstack-server" = callPackage
    ({ mkDerivation, base, base64-bytestring, blaze-html, bytestring
     , containers, directory, exceptions, extensible-exceptions
     , filepath, hslogger, html, HUnit, monad-control, mtl, network
     , network-uri, old-locale, parsec, process, sendfile, syb
     , system-filepath, template-haskell, text, threads, time
     , time-compat, transformers, transformers-base, transformers-compat
     , unix, utf8-string, xhtml, zlib
     }:
     mkDerivation {
       pname = "happstack-server";
       version = "7.4.2";
       sha256 = "0fwxc3i0ghv0acasrpzvvbji679wg614kmpdka8p0g3cmhlrpfrg";
       revision = "1";
       editedCabalFile = "0bxv4ciw5k6ywj2zsxyv606n9hgb209y7bpc87bb5q59r056zq9y";
       libraryHaskellDepends = [
         base base64-bytestring blaze-html bytestring containers directory
         exceptions extensible-exceptions filepath hslogger html
         monad-control mtl network network-uri old-locale parsec process
         sendfile syb system-filepath template-haskell text threads time
         time-compat transformers transformers-base transformers-compat unix
         utf8-string xhtml zlib
       ];
       testHaskellDepends = [
         base bytestring containers HUnit parsec zlib
       ];
       homepage = "http://happstack.com";
       description = "Web related tools and services";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "happy" = callPackage
    ({ mkDerivation, array, base, Cabal, containers, directory
     , filepath, mtl, process
     }:
     mkDerivation {
       pname = "happy";
       version = "1.19.5";
       sha256 = "1nj353q4z1g186fpjzf0dnsg71qhxqpamx8jy89rjjvv3p0kmw32";
       revision = "2";
       editedCabalFile = "1dvhv94lzmya938i5crshg9qbx7dxvkyxkhfbqimxkydxn7l2w7w";
       isLibrary = false;
       isExecutable = true;
       setupHaskellDepends = [ base Cabal directory filepath ];
       executableHaskellDepends = [ array base containers mtl ];
       testHaskellDepends = [ base process ];
       doHaddock = false;
       doCheck = false;
       homepage = "http://www.haskell.org/happy/";
       description = "Happy is a parser generator for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hashable" = callPackage
    ({ mkDerivation, base, bytestring, criterion, ghc-prim, HUnit
     , integer-gmp, QuickCheck, random, siphash, test-framework
     , test-framework-hunit, test-framework-quickcheck2, text, unix
     }:
     mkDerivation {
       pname = "hashable";
       version = "1.2.3.2";
       sha256 = "0h9295pv2sgbaqlwpwbx2bap6nngm0jcdhkqham1wpjwyxqgqrlc";
       libraryHaskellDepends = [
         base bytestring ghc-prim integer-gmp text
       ];
       testHaskellDepends = [
         base bytestring ghc-prim HUnit QuickCheck random test-framework
         test-framework-hunit test-framework-quickcheck2 text unix
       ];
       benchmarkHaskellDepends = [
         base bytestring criterion ghc-prim integer-gmp siphash text
       ];
       homepage = "http://github.com/tibbe/hashable";
       description = "A class for types that can be converted to a hash value";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hashable-extras" = callPackage
    ({ mkDerivation, base, bifunctors, bytestring, directory, doctest
     , filepath, generic-deriving, hashable, transformers
     }:
     mkDerivation {
       pname = "hashable-extras";
       version = "0.2.0.1";
       sha256 = "09y2m0wpim7sl7n9qnkr0miwfsbvb1q8lm6shpcq0jxzxknbag7s";
       revision = "2";
       editedCabalFile = "1k4f8acpd2w0mywffwpn6jipfvj3wy68jqf2ndfkcxi688lwawsg";
       libraryHaskellDepends = [
         base bifunctors bytestring generic-deriving hashable transformers
       ];
       testHaskellDepends = [ base directory doctest filepath ];
       homepage = "http://github.com/analytics/hashable-extras/";
       description = "Higher-rank Hashable";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hashmap" = callPackage
    ({ mkDerivation, base, containers, deepseq, hashable }:
     mkDerivation {
       pname = "hashmap";
       version = "1.3.0.1";
       sha256 = "16scl1rbq0f18mggrj4lbhgkz7kzshsw9a523rjd8cjkdjz1ijwr";
       libraryHaskellDepends = [ base containers deepseq hashable ];
       homepage = "http://git.auryn.cz/haskell/hashmap/";
       description = "Persistent containers Map and Set based on hashing";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hashtables" = callPackage
    ({ mkDerivation, base, ghc-prim, hashable, primitive, vector }:
     mkDerivation {
       pname = "hashtables";
       version = "1.2.0.2";
       sha256 = "0dqq5ssgkqzplqf5dmc4l8cj28j5py7i6n6a069qn4cibvxfjaq1";
       libraryHaskellDepends = [
         base ghc-prim hashable primitive vector
       ];
       homepage = "http://github.com/gregorycollins/hashtables";
       description = "Mutable hash tables in the ST monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "haskell-lexer" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "haskell-lexer";
       version = "1.0";
       sha256 = "11jv30msg4rym73lk6j21ky2510c3av8qxk5p4z63j4m283w9l46";
       libraryHaskellDepends = [ base ];
       description = "A fully compliant Haskell 98 lexer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "haskell-names" = callPackage
    ({ mkDerivation, aeson, base, bytestring, Cabal, containers
     , data-lens-light, filemanip, filepath, haskell-packages
     , haskell-src-exts, hse-cpp, mtl, pretty-show, tagged, tasty
     , tasty-golden, transformers, traverse-with-class, type-eq
     , uniplate, utf8-string
     }:
     mkDerivation {
       pname = "haskell-names";
       version = "0.5.2";
       sha256 = "0dxv33facklxyy6x9a3xxwv5avfzn6jbigl7zdd2zkvrr6rnz9zf";
       revision = "1";
       editedCabalFile = "00bwfc8ih296mggx08r9a7bddg6xawnhfwl1s3ly6ar6krnshiag";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson base bytestring Cabal containers data-lens-light filepath
         haskell-packages haskell-src-exts hse-cpp mtl tagged transformers
         traverse-with-class type-eq uniplate
       ];
       testHaskellDepends = [
         aeson base bytestring Cabal containers filemanip filepath
         haskell-packages haskell-src-exts hse-cpp mtl pretty-show tagged
         tasty tasty-golden traverse-with-class uniplate utf8-string
       ];
       homepage = "http://documentup.com/haskell-suite/haskell-names";
       description = "Name resolution library for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "haskell-packages" = callPackage
    ({ mkDerivation, aeson, base, bytestring, Cabal, containers
     , deepseq, directory, filepath, haskell-src-exts, hse-cpp, mtl
     , optparse-applicative, tagged, transformers, transformers-compat
     }:
     mkDerivation {
       pname = "haskell-packages";
       version = "0.2.4.4";
       sha256 = "1n4il9vkszr48n0zg3kccyqa744p0cc6idamdk6xb6hj0flpqzzc";
       revision = "1";
       editedCabalFile = "16f34nxp74wx8lmpjcqzk16xjajw7m92xhavmim4rk02s46mx2qd";
       libraryHaskellDepends = [
         aeson base bytestring Cabal containers deepseq directory filepath
         haskell-src-exts hse-cpp mtl optparse-applicative tagged
         transformers transformers-compat
       ];
       homepage = "http://documentup.com/haskell-suite/haskell-packages";
       description = "Haskell suite library for package management and integration with Cabal";
       license = stdenv.lib.licenses.mit;
     }) {};
  "haskell-src" = callPackage
    ({ mkDerivation, array, base, happy, pretty, syb }:
     mkDerivation {
       pname = "haskell-src";
       version = "1.0.2.0";
       sha256 = "19lilhpwnjb7cks9fq1ipnc8f7dwxy0ri3dgjkdxs3i355byw99a";
       libraryHaskellDepends = [ array base pretty syb ];
       libraryToolDepends = [ happy ];
       description = "Support for manipulating Haskell source code";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "haskell-src-exts" = callPackage
    ({ mkDerivation, array, base, containers, cpphs, directory
     , filepath, ghc-prim, happy, mtl, pretty, smallcheck, syb, tasty
     , tasty-golden, tasty-smallcheck
     }:
     mkDerivation {
       pname = "haskell-src-exts";
       version = "1.16.0.1";
       sha256 = "1h8gjw5g92rvvzadqzpscg73x7ajvs1wlphrh27afim3scdd8frz";
       libraryHaskellDepends = [ array base cpphs ghc-prim pretty ];
       libraryToolDepends = [ happy ];
       testHaskellDepends = [
         base containers directory filepath mtl smallcheck syb tasty
         tasty-golden tasty-smallcheck
       ];
       homepage = "https://github.com/haskell-suite/haskell-src-exts";
       description = "Manipulating Haskell source: abstract syntax, lexer, parser, and pretty-printer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "haskell-src-meta" = callPackage
    ({ mkDerivation, base, haskell-src-exts, pretty, syb
     , template-haskell, th-orphans
     }:
     mkDerivation {
       pname = "haskell-src-meta";
       version = "0.6.0.9";
       sha256 = "18dhgfaski58lxgfga9dy1kcmb049758z2r55y0yyw855rdi1rxf";
       libraryHaskellDepends = [
         base haskell-src-exts pretty syb template-haskell th-orphans
       ];
       description = "Parse source to template-haskell abstract syntax";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "haskintex" = callPackage
    ({ mkDerivation, base, binary, bytestring, containers, directory
     , filepath, haskell-src-exts, HaTeX, hint, parsec, process, text
     , transformers
     }:
     mkDerivation {
       pname = "haskintex";
       version = "0.5.0.3";
       sha256 = "0gbsr3b832rb3gk6gx3s1lrjpv4kqcf62cz3wgjj5riscq1vg73k";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base binary bytestring containers directory filepath
         haskell-src-exts HaTeX hint parsec process text transformers
       ];
       executableHaskellDepends = [ base ];
       homepage = "http://daniel-diaz.github.io/projects/haskintex";
       description = "Haskell Evaluation inside of LaTeX code";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hasql" = callPackage
    ({ mkDerivation, attoparsec, base, base-prelude, either
     , hasql-backend, list-t, mmorph, monad-control, mtl, resource-pool
     , template-haskell, text, transformers, transformers-base, vector
     }:
     mkDerivation {
       pname = "hasql";
       version = "0.7.3";
       sha256 = "0a8wcncqz2k1lj2cad96rg9xi9116q0x209jfbpkcp8sbi3n3rb8";
       libraryHaskellDepends = [
         attoparsec base base-prelude either hasql-backend list-t mmorph
         monad-control mtl resource-pool template-haskell text transformers
         transformers-base vector
       ];
       doCheck = false;
       homepage = "https://github.com/nikita-volkov/hasql";
       description = "A minimalistic general high level API for relational databases";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hasql-backend" = callPackage
    ({ mkDerivation, base-prelude, bytestring, either, free, list-t
     , text, transformers, vector
     }:
     mkDerivation {
       pname = "hasql-backend";
       version = "0.4.1";
       sha256 = "037ibla582gwsi17fsfrwlc0azh54iyyfawvy0nlabzg6lc38snm";
       libraryHaskellDepends = [
         base-prelude bytestring either free list-t text transformers vector
       ];
       doCheck = false;
       homepage = "https://github.com/nikita-volkov/hasql-backend";
       description = "API for backends of \"hasql\"";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hasql-postgres" = callPackage
    ({ mkDerivation, aeson, attoparsec, base-prelude, bytestring
     , either, free, hashable, hashtables, hasql-backend, list-t
     , loch-th, mmorph, placeholders, postgresql-binary
     , postgresql-libpq, scientific, template-haskell, text, time
     , transformers, uuid, vector
     }:
     mkDerivation {
       pname = "hasql-postgres";
       version = "0.10.3";
       sha256 = "12452z4li3b30zw1ar4x2r14q93vx06165g3rdj9s1wxjzsnsr4w";
       libraryHaskellDepends = [
         aeson attoparsec base-prelude bytestring either free hashable
         hashtables hasql-backend list-t loch-th mmorph placeholders
         postgresql-binary postgresql-libpq scientific template-haskell text
         time transformers uuid vector
       ];
       doCheck = false;
       homepage = "https://github.com/nikita-volkov/hasql-postgres";
       description = "A \"PostgreSQL\" backend for the \"hasql\" library";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hastache" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring, containers
     , directory, filepath, HUnit, ieee754, mtl, process, syb, text
     , transformers
     }:
     mkDerivation {
       pname = "hastache";
       version = "0.6.1";
       sha256 = "0r5l8k157pgvz1ck4lfid5x05f2s0nlmwf33f4fj09b1kmk8k3wc";
       revision = "5";
       editedCabalFile = "0fwd1jd6sqkscmy2yq1w3dcl4va4w9n8mhs6ldrilh1cj6b54r3f";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base blaze-builder bytestring containers directory filepath ieee754
         mtl syb text transformers
       ];
       executableHaskellDepends = [
         base blaze-builder bytestring containers directory filepath ieee754
         mtl process syb text transformers
       ];
       testHaskellDepends = [
         base bytestring directory HUnit mtl syb text
       ];
       homepage = "http://github.com/lymar/hastache";
       description = "Haskell implementation of Mustache templates";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "haxr" = callPackage
    ({ mkDerivation, array, base, base64-bytestring, blaze-builder
     , bytestring, HaXml, HTTP, mtl, mtl-compat, network, network-uri
     , old-locale, old-time, template-haskell, time, utf8-string
     }:
     mkDerivation {
       pname = "haxr";
       version = "3000.10.4.2";
       sha256 = "1v9sx73lwnamynsjf51pjr84v6qli9jcql5kf8d7af27bm54j0ry";
       libraryHaskellDepends = [
         array base base64-bytestring blaze-builder bytestring HaXml HTTP
         mtl mtl-compat network network-uri old-locale old-time
         template-haskell time utf8-string
       ];
       homepage = "http://www.haskell.org/haskellwiki/HaXR";
       description = "XML-RPC client and server library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hdaemonize" = callPackage
    ({ mkDerivation, base, extensible-exceptions, filepath, hsyslog
     , mtl, unix
     }:
     mkDerivation {
       pname = "hdaemonize";
       version = "0.5.0.0";
       sha256 = "15dyaa9rbmsjp3sg9yxg1i90kfy9rvlzmwg5kl8kwal69ajzjjgv";
       libraryHaskellDepends = [
         base extensible-exceptions filepath hsyslog mtl unix
       ];
       homepage = "http://github.com/madhadron/hdaemonize";
       description = "Library to handle the details of writing daemons for UNIX";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hdevtools" = callPackage
    ({ mkDerivation, base, Cabal, cmdargs, directory, filepath, ghc
     , ghc-paths, network, syb, time, unix
     }:
     mkDerivation {
       pname = "hdevtools";
       version = "0.1.0.8";
       sha256 = "1a84in8ip037p1f10199g2mk87ymjchyraic8zmxn7vxm1b88217";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         base Cabal cmdargs directory filepath ghc ghc-paths network syb
         time unix
       ];
       doHaddock = false;
       homepage = "https://github.com/schell/hdevtools/";
       description = "Persistent GHC powered background server for FAST haskell development tools";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hdocs" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, base, bytestring, containers
     , filepath, ghc, ghc-paths, haddock-api, MonadCatchIO-transformers
     , mtl, network, process, text, transformers
     }:
     mkDerivation {
       pname = "hdocs";
       version = "0.4.1.3";
       sha256 = "1zac44cy5x23xwvzmgi9c9fnknwwyhcs2s0w2vwglvdi58pyd0xi";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base bytestring containers filepath ghc ghc-paths haddock-api
         MonadCatchIO-transformers mtl network process text transformers
       ];
       executableHaskellDepends = [
         aeson aeson-pretty base bytestring containers filepath mtl network
         text
       ];
       testHaskellDepends = [ base containers mtl ];
       homepage = "https://github.com/mvoidex/hdocs";
       description = "Haskell docs tool";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "heap" = callPackage
    ({ mkDerivation, base, QuickCheck }:
     mkDerivation {
       pname = "heap";
       version = "1.0.2";
       sha256 = "1xwgdx4m558m2xqmqnskkbja9s1lqm131xphjgk0yclsk0sv8was";
       revision = "1";
       editedCabalFile = "0chkmbp92y2izcdllwh1xph1q0vpa40qm4ww068j9w0r4n0fqdx8";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base ];
       executableHaskellDepends = [ base QuickCheck ];
       description = "Heaps in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "heaps" = callPackage
    ({ mkDerivation, base, directory, doctest, filepath }:
     mkDerivation {
       pname = "heaps";
       version = "0.3.2.1";
       sha256 = "1g4nf361qfjyymwpyiiq0qk5brrsr4wz1pncij69pwda919b3j6b";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base directory doctest filepath ];
       homepage = "http://github.com/ekmett/heaps/";
       description = "Asymptotically optimal Brodal/Okasaki heaps";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hebrew-time" = callPackage
    ({ mkDerivation, base, HUnit, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2, time
     }:
     mkDerivation {
       pname = "hebrew-time";
       version = "0.1.1";
       sha256 = "0ckridxf4rvhhp0k1mckbbbpzfs32l4mwg7n9mrmsggldpl7x6f7";
       libraryHaskellDepends = [ base time ];
       testHaskellDepends = [
         base HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2 time
       ];
       homepage = "https://github.com/snoyberg/hebrew-time";
       description = "Hebrew dates and prayer times";
       license = stdenv.lib.licenses.mit;
     }) {};
  "heist" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, blaze-builder, blaze-html
     , bytestring, containers, directory, directory-tree, dlist, errors
     , filepath, hashable, map-syntax, MonadCatchIO-transformers, mtl
     , process, random, text, time, transformers, unordered-containers
     , vector, xmlhtml
     }:
     mkDerivation {
       pname = "heist";
       version = "0.14.1";
       sha256 = "11g6nrg9xn9ypwrz7mj3hqjhg45ia1miihh1ydls7vfdm2fqlagy";
       revision = "4";
       editedCabalFile = "0xl84i16lir9r6422dl94hc26yh3c7khy03rc6s1431n9d7mn7fn";
       libraryHaskellDepends = [
         aeson attoparsec base blaze-builder blaze-html bytestring
         containers directory directory-tree dlist errors filepath hashable
         map-syntax MonadCatchIO-transformers mtl process random text time
         transformers unordered-containers vector xmlhtml
       ];
       homepage = "http://snapframework.com/";
       description = "An Haskell template system supporting both HTML5 and XML";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "here" = callPackage
    ({ mkDerivation, base, haskell-src-meta, mtl, parsec
     , template-haskell
     }:
     mkDerivation {
       pname = "here";
       version = "1.2.7";
       sha256 = "1fqjqzfg3fif67ic75pavsnfjb9lxk5cf82chxs2hrkx41gm4gr6";
       libraryHaskellDepends = [
         base haskell-src-meta mtl parsec template-haskell
       ];
       homepage = "https://github.com/tmhedberg/here";
       description = "Here docs & interpolated strings via quasiquotation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "heredoc" = callPackage
    ({ mkDerivation, base, template-haskell }:
     mkDerivation {
       pname = "heredoc";
       version = "0.2.0.0";
       sha256 = "0h0g2f7yscwl1ba1yn3jnz2drvd6ns9m910hwlmq3kdq3k39y3f9";
       libraryHaskellDepends = [ base template-haskell ];
       homepage = "http://hackage.haskell.org/package/heredoc";
       description = "multi-line string / here document using QuasiQuotes";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "hexpat" = callPackage
    ({ mkDerivation, base, bytestring, containers, deepseq, List, text
     , transformers, utf8-string
     }:
     mkDerivation {
       pname = "hexpat";
       version = "0.20.9";
       sha256 = "17cx8iafb07f2c8wmfmrfgpz9cjilciba6001klf42z039ghf72x";
       libraryHaskellDepends = [
         base bytestring containers deepseq List text transformers
         utf8-string
       ];
       homepage = "http://haskell.org/haskellwiki/Hexpat/";
       description = "XML parser/formatter based on expat";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hflags" = callPackage
    ({ mkDerivation, base, containers, template-haskell, text }:
     mkDerivation {
       pname = "hflags";
       version = "0.4";
       sha256 = "17zzx273kmnwwazmmns78cllz3l7wad1gi7hizgcxi68j04blhd4";
       revision = "1";
       editedCabalFile = "0n3cyff2gwvbz9xd9iyz75jwdd4asd6n52s7w8sf9hcl78vkdycj";
       libraryHaskellDepends = [ base containers template-haskell text ];
       homepage = "http://github.com/errge/hflags";
       description = "Command line flag parser, very similar to Google's gflags";
       license = "unknown";
     }) {};
  "highlighting-kate" = callPackage
    ({ mkDerivation, base, blaze-html, containers, Diff, directory
     , filepath, mtl, parsec, process, regex-pcre-builtin, utf8-string
     }:
     mkDerivation {
       pname = "highlighting-kate";
       version = "0.5.12";
       sha256 = "0igcph3icmskf2g861fmxwgjdgrm52r5zazviiv82wck8nvmkh0i";
       revision = "1";
       editedCabalFile = "0dd326v816zhb7cmrpm7ag5jdlz5g611lsh3d6m64lslvwk1s8dx";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base blaze-html containers mtl parsec regex-pcre-builtin
         utf8-string
       ];
       executableHaskellDepends = [ base blaze-html containers filepath ];
       testHaskellDepends = [
         base blaze-html containers Diff directory filepath process
       ];
       homepage = "http://github.com/jgm/highlighting-kate";
       description = "Syntax highlighting";
       license = "GPL";
     }) {};
  "hindent" = callPackage
    ({ mkDerivation, applicative-quoters, base, data-default
     , descriptive, directory, ghc-prim, haskell-src-exts, hspec
     , monad-loops, mtl, text, transformers
     }:
     mkDerivation {
       pname = "hindent";
       version = "4.4.2";
       sha256 = "14g3sqkps2bg8fc8vp5f632hj7msbl4kj0baasykxvf0iylgj7ii";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base data-default haskell-src-exts monad-loops mtl text
         transformers
       ];
       executableHaskellDepends = [
         applicative-quoters base descriptive directory ghc-prim
         haskell-src-exts text
       ];
       testHaskellDepends = [
         base data-default directory haskell-src-exts hspec monad-loops mtl
         text
       ];
       homepage = "http://www.github.com/chrisdone/hindent";
       description = "Extensible Haskell pretty printer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hinotify" = callPackage
    ({ mkDerivation, base, containers, directory, unix }:
     mkDerivation {
       pname = "hinotify";
       version = "0.3.7";
       sha256 = "0i7mxg9ilzcgijda6j3ya5xnpbxa3wm9xswdfif95jim9w82sw0b";
       libraryHaskellDepends = [ base containers directory unix ];
       homepage = "https://github.com/kolmodin/hinotify.git";
       description = "Haskell binding to inotify";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hint" = callPackage
    ({ mkDerivation, base, directory, exceptions, extensible-exceptions
     , filepath, ghc, ghc-mtl, ghc-paths, HUnit, mtl, random, unix
     }:
     mkDerivation {
       pname = "hint";
       version = "0.4.2.2";
       sha256 = "1gv4nmwqp8xxvz90g9k48bixpc3cabx8591vj1zv6aah8fbng06w";
       revision = "1";
       editedCabalFile = "1s1pvw3n5dgx6z5w9lwq7jr9r1c4wk0c4yn4j7b968c5q0j28dvi";
       libraryHaskellDepends = [
         base directory exceptions extensible-exceptions filepath ghc
         ghc-mtl ghc-paths mtl random unix
       ];
       testHaskellDepends = [
         base directory exceptions extensible-exceptions filepath HUnit mtl
       ];
       homepage = "http://hub.darcs.net/jcpetruzza/hint";
       description = "Runtime Haskell interpreter (GHC API wrapper)";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "histogram-fill" = callPackage
    ({ mkDerivation, base, criterion, deepseq, ghc-prim
     , monad-primitive, mwc-random, primitive, vector
     }:
     mkDerivation {
       pname = "histogram-fill";
       version = "0.8.4.1";
       sha256 = "0zamqza4ky90l27sjgv55rp7s1g4hs0k0qn2qza7lfwk991ijn9q";
       libraryHaskellDepends = [
         base deepseq ghc-prim monad-primitive primitive vector
       ];
       benchmarkHaskellDepends = [ base criterion mwc-random vector ];
       homepage = "https://github.com/Shimuuar/histogram-fill/";
       description = "Library for histograms creation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hit" = callPackage
    ({ mkDerivation, attoparsec, base, byteable, bytedump, bytestring
     , containers, cryptohash, hourglass, mtl, parsec, patience, random
     , system-fileio, system-filepath, tasty, tasty-quickcheck
     , unix-compat, utf8-string, vector, zlib, zlib-bindings
     }:
     mkDerivation {
       pname = "hit";
       version = "0.6.3";
       sha256 = "0wg44vgd5jzi0r0vg8k5zrvlr7rcrb4nrp862c6y991941qv71nv";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         attoparsec base byteable bytestring containers cryptohash hourglass
         mtl parsec patience random system-fileio system-filepath
         unix-compat utf8-string vector zlib zlib-bindings
       ];
       testHaskellDepends = [
         base bytedump bytestring hourglass tasty tasty-quickcheck
       ];
       homepage = "http://github.com/vincenthz/hit";
       description = "Git operations in haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hjsmin" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring, Cabal, containers
     , HUnit, language-javascript, optparse-applicative, QuickCheck
     , test-framework, test-framework-hunit, text
     }:
     mkDerivation {
       pname = "hjsmin";
       version = "0.1.4.7";
       sha256 = "1gw9is6piqrqxnrwp8v3vij90icmym58rxqnnklrcjfi3ai7y58f";
       revision = "1";
       editedCabalFile = "0895ki6x963h6x1vq4r91rgfig952rryy0qz88vkhgd19wgza94b";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base blaze-builder bytestring containers language-javascript text
       ];
       executableHaskellDepends = [
         base blaze-builder bytestring containers language-javascript
         optparse-applicative text
       ];
       testHaskellDepends = [
         base blaze-builder bytestring Cabal containers HUnit
         language-javascript QuickCheck test-framework test-framework-hunit
         text
       ];
       homepage = "http://github.com/alanz/hjsmin";
       description = "Haskell implementation of a javascript minifier";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hledger" = callPackage
    ({ mkDerivation, base, cmdargs, containers, csv, directory
     , filepath, haskeline, hledger-lib, html, HUnit, mtl, old-locale
     , old-time, parsec, pretty-show, process, regex-tdfa, regexpr, safe
     , shakespeare, shakespeare-text, split, tabular, test-framework
     , test-framework-hunit, text, time, transformers, utf8-string
     , wizards
     }:
     mkDerivation {
       pname = "hledger";
       version = "0.24.1";
       sha256 = "0k09bdr3y975581mpqpmg4jynghl8v4j2386nzqprh0k6a602nv8";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base cmdargs containers csv directory filepath haskeline
         hledger-lib HUnit mtl old-locale old-time parsec pretty-show
         process regex-tdfa regexpr safe shakespeare shakespeare-text split
         tabular text time utf8-string wizards
       ];
       executableHaskellDepends = [
         base cmdargs containers csv directory filepath haskeline
         hledger-lib HUnit mtl old-locale old-time parsec pretty-show
         process regex-tdfa regexpr safe shakespeare shakespeare-text split
         tabular text time utf8-string wizards
       ];
       testHaskellDepends = [
         base cmdargs containers csv directory filepath haskeline
         hledger-lib HUnit mtl old-locale old-time parsec pretty-show
         process regex-tdfa regexpr safe shakespeare shakespeare-text split
         tabular test-framework test-framework-hunit text time transformers
         wizards
       ];
       benchmarkHaskellDepends = [
         base directory filepath hledger-lib html old-locale process tabular
         time
       ];
       homepage = "http://hledger.org";
       description = "The main command-line interface for the hledger accounting tool";
       license = "GPL";
     }) {};
  "hledger-lib" = callPackage
    ({ mkDerivation, array, base, blaze-markup, bytestring, cmdargs
     , containers, csv, Decimal, directory, filepath, HUnit, mtl
     , old-locale, old-time, parsec, pretty-show, regex-tdfa, regexpr
     , safe, split, test-framework, test-framework-hunit, time
     , transformers, utf8-string
     }:
     mkDerivation {
       pname = "hledger-lib";
       version = "0.24.1";
       sha256 = "1clzy72f34b497hsjkfjpgkhmn0dl19an9j4r11mn2q8z06106nc";
       libraryHaskellDepends = [
         array base blaze-markup bytestring cmdargs containers csv Decimal
         directory filepath HUnit mtl old-locale old-time parsec pretty-show
         regex-tdfa regexpr safe split time transformers utf8-string
       ];
       testHaskellDepends = [
         array base blaze-markup cmdargs containers csv Decimal directory
         filepath HUnit mtl old-locale old-time parsec pretty-show
         regex-tdfa regexpr safe split test-framework test-framework-hunit
         time transformers
       ];
       homepage = "http://hledger.org";
       description = "Core data types, parsers and utilities for the hledger accounting tool";
       license = "GPL";
     }) {};
  "hledger-web" = callPackage
    ({ mkDerivation, base, blaze-html, blaze-markup, bytestring
     , clientsession, cmdargs, conduit-extra, data-default, directory
     , filepath, hjsmin, hledger, hledger-lib, hspec, http-client
     , http-conduit, HUnit, json, network-conduit, old-locale, parsec
     , regexpr, safe, shakespeare, template-haskell, text, time
     , transformers, wai, wai-extra, wai-handler-launch, warp, yaml
     , yesod, yesod-core, yesod-static, yesod-test
     }:
     mkDerivation {
       pname = "hledger-web";
       version = "0.24.1";
       sha256 = "1fyb1r97kngxj293hfh23zh33dhajkdrf5s7sbp5zvg49dc65210";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base blaze-html blaze-markup bytestring clientsession cmdargs
         conduit-extra data-default directory filepath hjsmin hledger
         hledger-lib http-client http-conduit HUnit json network-conduit
         old-locale parsec regexpr safe shakespeare template-haskell text
         time transformers wai wai-extra wai-handler-launch warp yaml yesod
         yesod-core yesod-static
       ];
       executableHaskellDepends = [
         base blaze-html blaze-markup bytestring clientsession cmdargs
         conduit-extra data-default directory filepath hjsmin hledger
         hledger-lib http-client http-conduit HUnit json network-conduit
         old-locale parsec regexpr safe shakespeare template-haskell text
         time transformers wai wai-extra wai-handler-launch warp yaml yesod
         yesod-core yesod-static
       ];
       testHaskellDepends = [ base hspec yesod yesod-test ];
       homepage = "http://hledger.org";
       description = "A web interface for the hledger accounting tool";
       license = "GPL";
     }) {};
  "hlibgit2" = callPackage
    ({ mkDerivation, base, bindings-DSL, git, openssl, process, zlib }:
     mkDerivation {
       pname = "hlibgit2";
       version = "0.18.0.14";
       sha256 = "0fxglcgi0iwj9xqgx1f3dixia9pqfzz0yq9iq7flaggpr9pvn3n0";
       libraryHaskellDepends = [ base bindings-DSL zlib ];
       librarySystemDepends = [ openssl ];
       testHaskellDepends = [ base process ];
       testToolDepends = [ git ];
       description = "Low-level bindings to libgit2";
       license = stdenv.lib.licenses.mit;
     }) {inherit (pkgs) git; inherit (pkgs) openssl;};
  "hlint" = callPackage
    ({ mkDerivation, ansi-terminal, base, cmdargs, containers, cpphs
     , directory, extra, filepath, haskell-src-exts, hscolour, process
     , transformers, uniplate
     }:
     mkDerivation {
       pname = "hlint";
       version = "1.9.20";
       sha256 = "1nm6z0v040ma5wkzfv8nhplpq7dnaf645bax2r3q5fj6j4cv1hzh";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         ansi-terminal base cmdargs containers cpphs directory extra
         filepath haskell-src-exts hscolour process transformers uniplate
       ];
       executableHaskellDepends = [ base ];
       homepage = "http://community.haskell.org/~ndm/hlint/";
       description = "Source code suggestions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hmatrix" = callPackage
    ({ mkDerivation, array, base, binary, blas, bytestring, deepseq
     , liblapack, random, split, storable-complex, vector
     }:
     mkDerivation {
       pname = "hmatrix";
       version = "0.16.1.5";
       sha256 = "1da1iy2rzz51l69nixacsl7gqhkzld1w8z5h0klkha3mcnf1kkkq";
       revision = "1";
       editedCabalFile = "0im6bsyssw4fmb177j2jpprhn1g2hmanlrb7df5vkzp5mgpplgzf";
       libraryHaskellDepends = [
         array base binary bytestring deepseq random split storable-complex
         vector
       ];
       librarySystemDepends = [ blas liblapack ];
       preConfigure = "sed -i hmatrix.cabal -e '/\\/usr\\//D'";
       homepage = "https://github.com/albertoruiz/hmatrix";
       description = "Numeric Linear Algebra";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) blas; inherit (pkgs) liblapack;};
  "hmatrix-gsl" = callPackage
    ({ mkDerivation, array, base, gsl, hmatrix, process, random, vector
     }:
     mkDerivation {
       pname = "hmatrix-gsl";
       version = "0.16.0.3";
       sha256 = "07hg9rfrr1029n9q8xyicyh4rr9x4c02cqn1xxnks9p9qyccf4kg";
       libraryHaskellDepends = [
         array base hmatrix process random vector
       ];
       libraryPkgconfigDepends = [ gsl ];
       homepage = "https://github.com/albertoruiz/hmatrix";
       description = "Numerical computation";
       license = "GPL";
     }) {inherit (pkgs) gsl;};
  "hmatrix-gsl-stats" = callPackage
    ({ mkDerivation, base, binary, blas, hmatrix, liblapack
     , storable-complex
     }:
     mkDerivation {
       pname = "hmatrix-gsl-stats";
       version = "0.2.1";
       sha256 = "1sfyvp5dlxcfqwpfwzqly9h8g26lm8470xaqcw6nj15dya1zl1fj";
       libraryHaskellDepends = [ base binary hmatrix storable-complex ];
       librarySystemDepends = [ blas liblapack ];
       homepage = "http://code.haskell.org/hmatrix-gsl-stats";
       description = "GSL Statistics interface";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) blas; inherit (pkgs) liblapack;};
  "hmatrix-repa" = callPackage
    ({ mkDerivation, base, hmatrix, repa, vector }:
     mkDerivation {
       pname = "hmatrix-repa";
       version = "0.1.2.1";
       sha256 = "0xx02kll13c2zw5x13p9746av2yhgpybfxi508qgi84drfa8caa8";
       libraryHaskellDepends = [ base hmatrix repa vector ];
       homepage = "http://code.haskell.org/hmatrix-repa";
       description = "Adaptors for interoperability between hmatrix and repa";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hoauth2" = callPackage
    ({ mkDerivation, aeson, base, bytestring, http-conduit, http-types
     , text
     }:
     mkDerivation {
       pname = "hoauth2";
       version = "0.4.7";
       sha256 = "1y4bp6b7jxm4cx0xx27kff835jzxdnxiivf9kky2f2q65aj3q9xq";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base bytestring http-conduit http-types text
       ];
       executableHaskellDepends = [
         aeson base bytestring http-conduit http-types text
       ];
       homepage = "https://github.com/freizl/hoauth2";
       description = "hoauth2";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "holy-project" = callPackage
    ({ mkDerivation, aeson, ansi-terminal, base, bytestring, Cabal
     , directory, filepath, hastache, http-conduit, HUnit, lens
     , lens-aeson, process, QuickCheck, random, smallcheck, split, syb
     , tasty, tasty-hunit, tasty-quickcheck, tasty-smallcheck, text
     , time, unix
     }:
     mkDerivation {
       pname = "holy-project";
       version = "0.1.1.1";
       sha256 = "0vb4mlz6gb01aadm2b8kgvgnrwwvl6q4ndx6xldi0xi3rm22xkwj";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson ansi-terminal base bytestring directory filepath hastache
         http-conduit lens lens-aeson process random split syb text time
         unix
       ];
       executableHaskellDepends = [
         aeson ansi-terminal base bytestring Cabal directory filepath
         hastache http-conduit HUnit lens lens-aeson process QuickCheck
         random smallcheck split syb tasty tasty-hunit tasty-quickcheck
         tasty-smallcheck text time unix
       ];
       testHaskellDepends = [
         base bytestring Cabal HUnit QuickCheck smallcheck tasty tasty-hunit
         tasty-quickcheck tasty-smallcheck
       ];
       homepage = "http://github.com/yogsototh/holy-project";
       description = "Start your Haskell project with cabal, git and tests";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hoogle" = callPackage
    ({ mkDerivation, aeson, array, base, binary, blaze-builder
     , bytestring, Cabal, case-insensitive, cmdargs, conduit, containers
     , deepseq, directory, filepath, haskell-src-exts, http-types
     , old-locale, parsec, process, QuickCheck, random, resourcet, safe
     , shake, tagsoup, temporary, text, time, transformers, uniplate
     , unix, vector, vector-algorithms, wai, warp
     }:
     mkDerivation {
       pname = "hoogle";
       version = "4.2.40";
       sha256 = "11clwdqgsg38lw0jc382xkazlgm8lpa7d8sydgi14wkgwy4v9zqv";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         array base binary blaze-builder bytestring case-insensitive conduit
         containers deepseq directory filepath haskell-src-exts http-types
         parsec process QuickCheck random resourcet safe text transformers
         uniplate unix vector vector-algorithms wai
       ];
       executableHaskellDepends = [
         aeson array base binary blaze-builder bytestring Cabal
         case-insensitive cmdargs conduit containers deepseq directory
         filepath haskell-src-exts http-types old-locale parsec process
         QuickCheck random resourcet safe shake tagsoup text time
         transformers uniplate unix vector vector-algorithms wai warp
       ];
       testHaskellDepends = [ base directory filepath process temporary ];
       doCheck = false;
       testTarget = "--test-option=--no-net";
       homepage = "http://www.haskell.org/hoogle/";
       description = "Haskell API Search";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hopenpgp-tools" = callPackage
    ({ mkDerivation, aeson, alex, ansi-wl-pprint, array, attoparsec
     , base, base16-bytestring, binary, binary-conduit, bytestring
     , conduit, conduit-extra, containers, crypto-pubkey, cryptohash
     , directory, errors, fgl, graphviz, happy, hOpenPGP, ixset, lens
     , monad-loops, old-locale, openpgp-asciiarmor, optparse-applicative
     , resourcet, text, time, transformers, unordered-containers
     , wl-pprint-extras, yaml
     }:
     mkDerivation {
       pname = "hopenpgp-tools";
       version = "0.14.1";
       sha256 = "0ckmz6v6y8lwbpx0aw4a5japxgx1m664p7pgrblsbw9pn5yjrkcw";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         aeson ansi-wl-pprint array attoparsec base base16-bytestring binary
         binary-conduit bytestring conduit conduit-extra containers
         crypto-pubkey cryptohash directory errors fgl graphviz hOpenPGP
         ixset lens monad-loops old-locale openpgp-asciiarmor
         optparse-applicative resourcet text time transformers
         unordered-containers wl-pprint-extras yaml
       ];
       executableToolDepends = [ alex happy ];
       doHaddock = false;
       homepage = "http://floss.scru.org/hopenpgp-tools";
       description = "hOpenPGP-based command-line tools";
       license = "unknown";
     }) {};
  "hostname" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "hostname";
       version = "1.0";
       sha256 = "0p6gm4328946qxc295zb6vhwhf07l1fma82vd0siylnsnsqxlhwv";
       libraryHaskellDepends = [ base ];
       description = "A very simple package providing a cross-platform means of determining the hostname";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hostname-validate" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring }:
     mkDerivation {
       pname = "hostname-validate";
       version = "1.0.0";
       sha256 = "0my8g4kqf9mz7ii79ff53rwkx3yv9kkn4jbm60q4b7g1rzhb3bvz";
       libraryHaskellDepends = [ attoparsec base bytestring ];
       description = "Validate hostnames e.g. localhost or foo.co.uk.";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hourglass" = callPackage
    ({ mkDerivation, base, bytestring, criterion, deepseq, mtl
     , old-locale, tasty, tasty-hunit, tasty-quickcheck, time
     }:
     mkDerivation {
       pname = "hourglass";
       version = "0.2.9";
       sha256 = "1xha17nwzxdjizbcp63d2142c6q051y77facs7xribgcl5iz2m4v";
       libraryHaskellDepends = [ base deepseq ];
       testHaskellDepends = [
         base deepseq mtl old-locale tasty tasty-hunit tasty-quickcheck time
       ];
       benchmarkHaskellDepends = [
         base bytestring criterion deepseq mtl old-locale time
       ];
       homepage = "https://github.com/vincenthz/hs-hourglass";
       description = "simple performant time related library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hpc-coveralls" = callPackage
    ({ mkDerivation, aeson, async, base, bytestring, cmdargs
     , containers, curl, directory, directory-tree, hpc, HUnit, process
     , pureMD5, regex-posix, retry, safe, split
     }:
     mkDerivation {
       pname = "hpc-coveralls";
       version = "0.9.0";
       sha256 = "0ika073kkm8kivd0m2dhb7ysk5h7q9vsj02xf4azh3c4xpvw4086";
       revision = "2";
       editedCabalFile = "17f55amnci138pjgbqqa637bn29kqhxz2fwb55i9dwn8yxnczvx4";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base bytestring cmdargs containers curl directory
         directory-tree hpc process pureMD5 retry safe split
       ];
       executableHaskellDepends = [
         aeson async base bytestring cmdargs containers curl directory
         directory-tree hpc process pureMD5 regex-posix retry safe split
       ];
       testHaskellDepends = [ base HUnit ];
       homepage = "https://github.com/guillaume-nargeot/hpc-coveralls";
       description = "Coveralls.io support for Haskell.";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hs-bibutils" = callPackage
    ({ mkDerivation, base, syb }:
     mkDerivation {
       pname = "hs-bibutils";
       version = "5.5";
       sha256 = "0pf5lh179rw9jkmw16ss3kiwydlj6zgfk868mjl5s57kx55z7ycm";
       libraryHaskellDepends = [ base syb ];
       homepage = "http://istitutocolli.org/repos/hs-bibutils/";
       description = "Haskell bindings to bibutils, the bibliography conversion utilities";
       license = "GPL";
     }) {};
  "hscolour" = callPackage
    ({ mkDerivation, base, containers }:
     mkDerivation {
       pname = "hscolour";
       version = "1.22";
       sha256 = "1iqmxvpvj3icg7mhx4450p2wqjsfx1xh3lwgrrmxvm339hksx3rw";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base containers ];
       executableHaskellDepends = [ base containers ];
       homepage = "http://code.haskell.org/~malcolm/hscolour/";
       description = "Colourise Haskell code";
       license = "GPL";
     }) {};
  "hsdev" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, array, attoparsec, base
     , bytestring, Cabal, containers, deepseq, directory, exceptions
     , filepath, ghc, ghc-mod, ghc-paths, haddock-api, haskell-src-exts
     , hdocs, HTTP, lens, monad-loops, mtl, network, process
     , regex-pcre-builtin, scientific, template-haskell, text, time
     , transformers, uniplate, unix, unordered-containers, vector
     }:
     mkDerivation {
       pname = "hsdev";
       version = "0.1.3.4";
       sha256 = "1m21wwl93sba113qr733a9qpxc0ljrn6mpd17760gzxpa5vhfjqd";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson aeson-pretty array attoparsec base bytestring Cabal
         containers deepseq directory exceptions filepath ghc ghc-mod
         ghc-paths haddock-api haskell-src-exts hdocs HTTP lens monad-loops
         mtl network process regex-pcre-builtin scientific template-haskell
         text time transformers uniplate unix unordered-containers vector
       ];
       executableHaskellDepends = [
         aeson aeson-pretty base bytestring containers deepseq directory
         exceptions filepath ghc haskell-src-exts monad-loops mtl network
         process text transformers unordered-containers vector
       ];
       testHaskellDepends = [ base ];
       homepage = "https://github.com/mvoidex/hsdev";
       description = "Haskell development library and tool with support of autocompletion, symbol info, go to declaration, find references etc";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hse-cpp" = callPackage
    ({ mkDerivation, base, cpphs, haskell-src-exts }:
     mkDerivation {
       pname = "hse-cpp";
       version = "0.1";
       sha256 = "0f1bgi1hnpnry1pm7jhi626afdvymzy7k0a70n07n41js46pjxd0";
       revision = "1";
       editedCabalFile = "0jrav7kl7a3a421xhaqh03jvj7qsgscpi93fpxss0q4pgq98gmcy";
       libraryHaskellDepends = [ base cpphs haskell-src-exts ];
       description = "Preprocess+parse haskell code";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hsignal" = callPackage
    ({ mkDerivation, array, base, binary, blas, bytestring, hmatrix
     , hmatrix-gsl, hmatrix-gsl-stats, hstatistics, liblapack, mtl
     , storable-complex
     }:
     mkDerivation {
       pname = "hsignal";
       version = "0.2.7";
       sha256 = "1a75n22rk5lpzf1fnwdpw61azibavy9x45wz1cp0l1c49477fxs0";
       libraryHaskellDepends = [
         array base binary bytestring hmatrix hmatrix-gsl hmatrix-gsl-stats
         hstatistics mtl storable-complex
       ];
       librarySystemDepends = [ blas liblapack ];
       prePatch = "rm -v Setup.lhs";
       homepage = "http://code.haskell.org/hsignal";
       description = "Signal processing and EEG data analysis";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) blas; inherit (pkgs) liblapack;};
  "hslogger" = callPackage
    ({ mkDerivation, base, containers, directory, mtl, network
     , old-locale, process, time, unix
     }:
     mkDerivation {
       pname = "hslogger";
       version = "1.2.8";
       sha256 = "0i7cji7d23kv8m0vr32ws8zm4ah5vxzb1ykv833m7i6m2g1p4dfy";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base containers directory mtl network old-locale process time unix
       ];
       homepage = "http://software.complete.org/hslogger";
       description = "Versatile logging framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hslua" = callPackage
    ({ mkDerivation, base, mtl }:
     mkDerivation {
       pname = "hslua";
       version = "0.3.13";
       sha256 = "02j3hrzq3dgcv4bvf4xz14qxvzlb0vlxrf7lk9wqwdy43b978mz9";
       libraryHaskellDepends = [ base mtl ];
       testHaskellDepends = [ base ];
       description = "A Lua language interpreter embedding in Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hspec" = callPackage
    ({ mkDerivation, base, directory, hspec-core, hspec-discover
     , hspec-expectations, hspec-meta, HUnit, QuickCheck, stringbuilder
     , transformers
     }:
     mkDerivation {
       pname = "hspec";
       version = "2.1.6";
       sha256 = "0ych09pli7v3mhfmvr6c0milvcmxf8bk1jf528z9r9halgjg18vh";
       revision = "1";
       editedCabalFile = "0j21hawvj7kwyibshvfj3cqsjiscb1bychs377imnmz7xcfk6ld7";
       libraryHaskellDepends = [
         base hspec-core hspec-discover hspec-expectations HUnit QuickCheck
         transformers
       ];
       testHaskellDepends = [
         base directory hspec-core hspec-meta stringbuilder
       ];
       homepage = "http://hspec.github.io/";
       description = "A Testing Framework for Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hspec-attoparsec" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, hspec
     , hspec-expectations, text
     }:
     mkDerivation {
       pname = "hspec-attoparsec";
       version = "0.1.0.2";
       sha256 = "0r7v6x0k5r8jxl0rnsq8h3gqhbiimsic3kiphn6dxaw954zqnypa";
       libraryHaskellDepends = [
         attoparsec base bytestring hspec-expectations text
       ];
       testHaskellDepends = [
         attoparsec base bytestring hspec hspec-expectations text
       ];
       homepage = "http://github.com/alpmestan/hspec-attoparsec";
       description = "Utility functions for testing your attoparsec parsers with hspec";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hspec-core" = callPackage
    ({ mkDerivation, ansi-terminal, async, base, deepseq
     , hspec-expectations, hspec-meta, HUnit, process, QuickCheck
     , quickcheck-io, random, setenv, silently, tf-random, time
     , transformers
     }:
     mkDerivation {
       pname = "hspec-core";
       version = "2.1.6";
       sha256 = "0ymgsvl9bq96b7ln4x3yqj5pkla7683xpgg1mp0z9nc70kdzq1w5";
       revision = "4";
       editedCabalFile = "1vdkm24x6025bnz06wia6wl6wz2xqb81l2lq0daf5qfaazicdj0x";
       libraryHaskellDepends = [
         ansi-terminal async base deepseq hspec-expectations HUnit
         QuickCheck quickcheck-io random setenv tf-random time transformers
       ];
       testHaskellDepends = [
         ansi-terminal async base deepseq hspec-expectations hspec-meta
         HUnit process QuickCheck quickcheck-io random setenv silently
         tf-random time transformers
       ];
       homepage = "http://hspec.github.io/";
       description = "A Testing Framework for Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hspec-discover" = callPackage
    ({ mkDerivation, base, directory, filepath, hspec-meta }:
     mkDerivation {
       pname = "hspec-discover";
       version = "2.1.6";
       sha256 = "0vjgnh4g4sg73n4rfgrlqn0xw2mhkpwrwkkccpwik5jfyks7l1jq";
       isLibrary = true;
       isExecutable = true;
       executableHaskellDepends = [ base directory filepath ];
       testHaskellDepends = [ base directory filepath hspec-meta ];
       doHaddock = false;
       homepage = "http://hspec.github.io/";
       description = "Automatically discover and run Hspec tests";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hspec-expectations" = callPackage
    ({ mkDerivation, base, hspec, HUnit, markdown-unlit, silently }:
     mkDerivation {
       pname = "hspec-expectations";
       version = "0.6.1.1";
       sha256 = "0f36b2cp2ipbqz9g6lp43nvx8dykkw196wg97kgb07mmnq6gakix";
       libraryHaskellDepends = [ base HUnit ];
       testHaskellDepends = [ base hspec HUnit markdown-unlit silently ];
       homepage = "https://github.com/sol/hspec-expectations#readme";
       description = "Catchy combinators for HUnit";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hspec-meta" = callPackage
    ({ mkDerivation, ansi-terminal, async, base, deepseq, directory
     , filepath, hspec-expectations, HUnit, QuickCheck, quickcheck-io
     , random, setenv, time, transformers
     }:
     mkDerivation {
       pname = "hspec-meta";
       version = "2.1.5";
       sha256 = "02v4a5hcp4bbvnjb18vpw6fwz4qxjll8k8ama0hf6y8jppp72hid";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         ansi-terminal async base deepseq hspec-expectations HUnit
         QuickCheck quickcheck-io random setenv time transformers
       ];
       executableHaskellDepends = [ base directory filepath ];
       homepage = "http://hspec.github.io/";
       description = "A version of Hspec which is used to test Hspec itself";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hspec-smallcheck" = callPackage
    ({ mkDerivation, base, hspec, QuickCheck, smallcheck }:
     mkDerivation {
       pname = "hspec-smallcheck";
       version = "0.3.0";
       sha256 = "1yybyrbbj0fv62cf8nh851rgbb8phyhpsm57mzn7s5vqz7lf7dxw";
       revision = "1";
       editedCabalFile = "00qzc3b81rh983x6wlf2j5wcif0vx9jlki346li01zvhz723q5qf";
       libraryHaskellDepends = [ base hspec smallcheck ];
       testHaskellDepends = [ base hspec QuickCheck smallcheck ];
       homepage = "http://hspec.github.io/";
       description = "SmallCheck support for the Hspec testing framework";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hspec-wai" = callPackage
    ({ mkDerivation, base, bytestring, case-insensitive, hspec
     , hspec-core, hspec-expectations, http-types, QuickCheck, text
     , transformers, wai, wai-extra
     }:
     mkDerivation {
       pname = "hspec-wai";
       version = "0.6.3";
       sha256 = "0vydfzpfwrld6wi47bk1d27hm5mz8hll3fc0ckzy7dyyzrgfnp4i";
       libraryHaskellDepends = [
         base bytestring case-insensitive hspec-core hspec-expectations
         http-types text transformers wai wai-extra
       ];
       testHaskellDepends = [
         base bytestring case-insensitive hspec hspec-core
         hspec-expectations http-types QuickCheck text transformers wai
         wai-extra
       ];
       description = "Experimental Hspec support for testing WAI applications";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hspec-wai-json" = callPackage
    ({ mkDerivation, aeson, aeson-qq, base, bytestring, hspec
     , hspec-wai, template-haskell
     }:
     mkDerivation {
       pname = "hspec-wai-json";
       version = "0.6.0";
       sha256 = "0r9p8v3cynyx5gnan86cc0l5hrmnm3mx7w2kkc1npv6zq0cj1bgq";
       libraryHaskellDepends = [
         aeson aeson-qq base bytestring hspec-wai template-haskell
       ];
       testHaskellDepends = [ base hspec hspec-wai ];
       description = "Testing JSON APIs with hspec-wai";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hstatistics" = callPackage
    ({ mkDerivation, array, base, hmatrix, hmatrix-gsl-stats, random
     , vector
     }:
     mkDerivation {
       pname = "hstatistics";
       version = "0.2.5.2";
       sha256 = "08bkffx3d87c3cb3zp0gdj10cw1cb2m55lbqkh6b6lvxjy26igvp";
       libraryHaskellDepends = [
         array base hmatrix hmatrix-gsl-stats random vector
       ];
       homepage = "http://code.haskell.org/hstatistics";
       description = "Statistics";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hsyslog" = callPackage
    ({ mkDerivation, base, doctest }:
     mkDerivation {
       pname = "hsyslog";
       version = "2.0";
       sha256 = "02v698grn43bvikqhqiz9ys8x2amngdmhvl3i0ar9203p2x8q3pq";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base doctest ];
       homepage = "http://github.com/peti/hsyslog";
       description = "FFI interface to syslog(3) from POSIX.1-2001";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "html" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "html";
       version = "1.0.1.2";
       sha256 = "0q9hmfii62kc82ijlg238fxrzxhsivn42x5wd6ffcr9xldg4jd8c";
       libraryHaskellDepends = [ base ];
       description = "HTML combinator library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "html-conduit" = callPackage
    ({ mkDerivation, base, bytestring, conduit, conduit-extra
     , containers, hspec, HUnit, resourcet, system-filepath
     , tagstream-conduit, text, transformers, xml-conduit, xml-types
     }:
     mkDerivation {
       pname = "html-conduit";
       version = "1.1.1.2";
       sha256 = "116sg4wig2irqqaha257h99ajgqdq6i3jbksvqn1ywqzq96lcx34";
       libraryHaskellDepends = [
         base bytestring conduit conduit-extra containers resourcet
         system-filepath tagstream-conduit text transformers xml-conduit
         xml-types
       ];
       testHaskellDepends = [
         base bytestring containers hspec HUnit xml-conduit
       ];
       homepage = "https://github.com/snoyberg/xml";
       description = "Parse HTML documents using xml-conduit datatypes";
       license = stdenv.lib.licenses.mit;
     }) {};
  "http-client" = callPackage
    ({ mkDerivation, array, async, base, base64-bytestring
     , blaze-builder, bytestring, case-insensitive, clock, containers
     , cookie, data-default-class, deepseq, directory, exceptions
     , filepath, ghc-prim, hspec, http-types, mime-types, monad-control
     , network, network-uri, publicsuffixlist, random, streaming-commons
     , text, time, transformers, zlib
     }:
     mkDerivation {
       pname = "http-client";
       version = "0.4.11.1";
       sha256 = "122h9g6nk17nwxrwqwni75gfbc221s1jvjjlmq6sh9ksgsyh09b4";
       libraryHaskellDepends = [
         array base base64-bytestring blaze-builder bytestring
         case-insensitive clock containers cookie data-default-class deepseq
         exceptions filepath ghc-prim http-types mime-types network
         network-uri publicsuffixlist random streaming-commons text time
         transformers
       ];
       testHaskellDepends = [
         async base base64-bytestring blaze-builder bytestring
         case-insensitive containers deepseq directory hspec http-types
         monad-control network streaming-commons text time transformers zlib
       ];
       homepage = "https://github.com/snoyberg/http-client";
       description = "An HTTP client engine, intended as a base layer for more user-friendly packages";
       license = stdenv.lib.licenses.mit;
     }) {};
  "http-client-openssl" = callPackage
    ({ mkDerivation, base, HsOpenSSL, hspec, http-client, http-types
     , network
     }:
     mkDerivation {
       pname = "http-client-openssl";
       version = "0.2.0.1";
       sha256 = "1mg2gn51ixb68wd8mm66kcj4627q6gj64810wsa1axy3jmk5qym3";
       libraryHaskellDepends = [ base HsOpenSSL http-client network ];
       testHaskellDepends = [
         base HsOpenSSL hspec http-client http-types
       ];
       homepage = "https://github.com/snoyberg/http-client";
       description = "http-client backend using the OpenSSL library";
       license = stdenv.lib.licenses.mit;
     }) {};
  "http-client-tls" = callPackage
    ({ mkDerivation, base, bytestring, connection, data-default-class
     , hspec, http-client, http-types, network, tls
     }:
     mkDerivation {
       pname = "http-client-tls";
       version = "0.2.2";
       sha256 = "0a01r05h5fxswyn6k6cgqgak4scqjan72hyy5wbdqzzhl4rmh7j5";
       revision = "1";
       editedCabalFile = "01ycp67hb0vlk4l43fv53vspw4izp9mjzapagfzamrahlcdps85b";
       libraryHaskellDepends = [
         base bytestring connection data-default-class http-client network
         tls
       ];
       testHaskellDepends = [ base hspec http-client http-types ];
       homepage = "https://github.com/snoyberg/http-client";
       description = "http-client backend using the connection package and tls library";
       license = stdenv.lib.licenses.mit;
     }) {};
  "http-conduit" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring, case-insensitive
     , conduit, conduit-extra, connection, cookie, data-default-class
     , hspec, http-client, http-client-tls, http-types, HUnit
     , lifted-base, monad-control, mtl, network, resourcet
     , streaming-commons, text, time, transformers, utf8-string, wai
     , wai-conduit, warp, warp-tls
     }:
     mkDerivation {
       pname = "http-conduit";
       version = "2.1.5";
       sha256 = "0vk2an6h3h7a5klk9xrf3apfm6xdmqm418yrr7pb56b7w5sfq003";
       revision = "1";
       editedCabalFile = "0rgdrjwkkh778d788xhrnnibygprgy718365214n38yl6jxmqlqg";
       libraryHaskellDepends = [
         base bytestring conduit http-client http-client-tls http-types
         lifted-base monad-control mtl resourcet transformers
       ];
       testHaskellDepends = [
         base blaze-builder bytestring case-insensitive conduit
         conduit-extra connection cookie data-default-class hspec
         http-client http-types HUnit lifted-base network streaming-commons
         text time transformers utf8-string wai wai-conduit warp warp-tls
       ];
       homepage = "http://www.yesodweb.com/book/http-conduit";
       description = "HTTP client package with conduit interface and HTTPS support";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "http-date" = callPackage
    ({ mkDerivation, array, attoparsec, base, bytestring, doctest
     , hspec, old-locale, time
     }:
     mkDerivation {
       pname = "http-date";
       version = "0.0.6";
       sha256 = "0f1s4bfazckl016pi2nzrmmiv0f6pnr9mgvsdj33ysvknp0md3c9";
       libraryHaskellDepends = [ array attoparsec base bytestring ];
       testHaskellDepends = [
         base bytestring doctest hspec old-locale time
       ];
       description = "HTTP Date parser/formatter";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "http-media" = callPackage
    ({ mkDerivation, base, bytestring, Cabal, cabal-test-quickcheck
     , case-insensitive, containers, QuickCheck
     }:
     mkDerivation {
       pname = "http-media";
       version = "0.6.1";
       sha256 = "0x2smkccs64ll31adwj4n7kr1qalihyj28py2k5qwl2ynyygxbxq";
       libraryHaskellDepends = [
         base bytestring case-insensitive containers
       ];
       testHaskellDepends = [
         base bytestring Cabal cabal-test-quickcheck case-insensitive
         containers QuickCheck
       ];
       doCheck = false;
       homepage = "https://github.com/zmthy/http-media";
       description = "Processing HTTP Content-Type and Accept headers";
       license = stdenv.lib.licenses.mit;
     }) {};
  "http-reverse-proxy" = callPackage
    ({ mkDerivation, async, base, blaze-builder, bytestring
     , case-insensitive, conduit, conduit-extra, containers
     , data-default-class, hspec, http-client, http-conduit, http-types
     , lifted-base, monad-control, network, resourcet, streaming-commons
     , text, transformers, wai, wai-logger, warp, word8
     }:
     mkDerivation {
       pname = "http-reverse-proxy";
       version = "0.4.1.2";
       sha256 = "1gggn5l08g7mxbka0h7h8w687y3awbm19395fi6wvis76isyz8wy";
       revision = "1";
       editedCabalFile = "0fwwb3wnmxrfvn8pvi3hpz8hrpjd8s5rajhh4j4x9355ac7cz61i";
       libraryHaskellDepends = [
         async base blaze-builder bytestring case-insensitive conduit
         conduit-extra containers data-default-class http-client http-types
         lifted-base monad-control network resourcet streaming-commons text
         transformers wai wai-logger word8
       ];
       testHaskellDepends = [
         base blaze-builder bytestring conduit conduit-extra hspec
         http-conduit http-types lifted-base network resourcet
         streaming-commons transformers wai warp
       ];
       homepage = "https://github.com/fpco/http-reverse-proxy";
       description = "Reverse proxy HTTP requests, either over raw sockets or with WAI";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "http-types" = callPackage
    ({ mkDerivation, array, base, blaze-builder, bytestring
     , case-insensitive, doctest, hspec, QuickCheck
     , quickcheck-instances, text
     }:
     mkDerivation {
       pname = "http-types";
       version = "0.8.6";
       sha256 = "1q1ni88rs8d79xnk1x2jaf3848ygxlfhpvv4gw46k08lw29ihfxh";
       libraryHaskellDepends = [
         array base blaze-builder bytestring case-insensitive text
       ];
       testHaskellDepends = [
         base blaze-builder bytestring doctest hspec QuickCheck
         quickcheck-instances text
       ];
       homepage = "https://github.com/aristidb/http-types";
       description = "Generic HTTP types for Haskell (for both client and server code)";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hweblib" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, containers
     , criterion, HUnit, mtl, text, transformers
     }:
     mkDerivation {
       pname = "hweblib";
       version = "0.6.3";
       sha256 = "03dmx5irlsyb3b9zg2r6nz947sslizkn0nlk65ldb5n4m8my33hy";
       libraryHaskellDepends = [
         attoparsec base bytestring containers mtl text transformers
       ];
       testHaskellDepends = [
         attoparsec base bytestring containers HUnit mtl transformers
       ];
       benchmarkHaskellDepends = [
         attoparsec base bytestring containers criterion HUnit mtl
         transformers
       ];
       homepage = "http://github.com/aycanirican/hweblib";
       description = "Haskell Web Library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hxt" = callPackage
    ({ mkDerivation, base, binary, bytestring, containers, deepseq
     , directory, filepath, HUnit, hxt-charproperties
     , hxt-regex-xmlschema, hxt-unicode, mtl, network-uri, parsec
     }:
     mkDerivation {
       pname = "hxt";
       version = "9.3.1.15";
       sha256 = "0q35jqi3g5qfwzp2p2hm22lkmbmk08bx2qvpgq4731zm48y7ngkj";
       configureFlags = [ "-fnetwork-uri" ];
       libraryHaskellDepends = [
         base binary bytestring containers deepseq directory filepath HUnit
         hxt-charproperties hxt-regex-xmlschema hxt-unicode mtl network-uri
         parsec
       ];
       homepage = "https://github.com/UweSchmidt/hxt";
       description = "A collection of tools for processing XML with Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hxt-charproperties" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "hxt-charproperties";
       version = "9.2.0.1";
       sha256 = "1mml8wglvagqq891rchgli6r8rnkwrqhgsxfl6kb5403pzb18rp4";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/UweSchmidt/hxt";
       description = "Character properties and classes for XML and Unicode";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hxt-curl" = callPackage
    ({ mkDerivation, base, bytestring, curl, hxt, parsec }:
     mkDerivation {
       pname = "hxt-curl";
       version = "9.1.1.1";
       sha256 = "1sn5ngzz5qszdb3anbpqbjdijz29gmrwjrg9vsmrqsdqz65wrhfd";
       libraryHaskellDepends = [ base bytestring curl hxt parsec ];
       homepage = "https://github.com/UweSchmidt/hxt";
       description = "LibCurl interface for HXT";
       license = "unknown";
     }) {};
  "hxt-expat" = callPackage
    ({ mkDerivation, base, bytestring, hexpat, hxt }:
     mkDerivation {
       pname = "hxt-expat";
       version = "9.1.1";
       sha256 = "1mi2f2i31nqjqzwl82iypm1qngrpxp7lz506pjgqfbn840yc9n8h";
       libraryHaskellDepends = [ base bytestring hexpat hxt ];
       homepage = "http://www.fh-wedel.de/~si/HXmlToolbox/index.html";
       description = "Expat parser for HXT";
       license = "unknown";
     }) {};
  "hxt-http" = callPackage
    ({ mkDerivation, base, bytestring, HTTP, hxt, network, network-uri
     , parsec
     }:
     mkDerivation {
       pname = "hxt-http";
       version = "9.1.5.2";
       sha256 = "02yxvzczv89j518b94wh8m4dsmnymzxgv9158m7w6lqxk41rv8bg";
       configureFlags = [ "-fnetwork-uri" ];
       libraryHaskellDepends = [
         base bytestring HTTP hxt network network-uri parsec
       ];
       homepage = "https://github.com/UweSchmidt/hxt";
       description = "Interface to native Haskell HTTP package HTTP";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hxt-pickle-utils" = callPackage
    ({ mkDerivation, base, hxt, mtl }:
     mkDerivation {
       pname = "hxt-pickle-utils";
       version = "0.1.0.3";
       sha256 = "1id9459yphsbxqa0z89dhsmqqcgvk2axv91d05aw3n6r4ygs3nwx";
       revision = "2";
       editedCabalFile = "109jh2iibhnllkwpqpiyfwdqjn3v06ap58fhyzikjdqzz0rzwgh5";
       libraryHaskellDepends = [ base hxt mtl ];
       homepage = "https://github.com/silkapp/hxt-pickle-utils";
       description = "Utility functions for using HXT picklers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hxt-regex-xmlschema" = callPackage
    ({ mkDerivation, base, bytestring, criterion, deepseq, HUnit
     , hxt-charproperties, parsec, text
     }:
     mkDerivation {
       pname = "hxt-regex-xmlschema";
       version = "9.2.0.2";
       sha256 = "1hkcd5p7rhv8z2vlcpd1gcdiyni28m8k8yd5fnxw8a9bvrnnfi27";
       revision = "1";
       editedCabalFile = "1skvrrl0pld3zwjxsb64g9sdrqy1z4whjm45prsqj1mcw909rcl5";
       libraryHaskellDepends = [
         base bytestring hxt-charproperties parsec text
       ];
       testHaskellDepends = [ base bytestring HUnit parsec text ];
       benchmarkHaskellDepends = [
         base bytestring criterion deepseq parsec text
       ];
       homepage = "http://www.haskell.org/haskellwiki/Regular_expressions_for_XML_Schema";
       description = "A regular expression library for W3C XML Schema regular expressions";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hxt-relaxng" = callPackage
    ({ mkDerivation, base, containers, hxt, hxt-charproperties
     , hxt-regex-xmlschema, network-uri, parsec
     }:
     mkDerivation {
       pname = "hxt-relaxng";
       version = "9.1.5.5";
       sha256 = "07s47z5xhd0pdzz8mr9vg78qxay450sm8ljycpprq7y7mgh2vzhf";
       configureFlags = [ "-fnetwork-uri" ];
       libraryHaskellDepends = [
         base containers hxt hxt-charproperties hxt-regex-xmlschema
         network-uri parsec
       ];
       homepage = "https://github.com/UweSchmidt/hxt";
       description = "The HXT RelaxNG validator";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hxt-tagsoup" = callPackage
    ({ mkDerivation, base, hxt, hxt-charproperties, hxt-unicode
     , tagsoup
     }:
     mkDerivation {
       pname = "hxt-tagsoup";
       version = "9.1.3";
       sha256 = "1rp499j6w3h9xfxqyw2fn05ffq3z0wg1r9h2c205m37mb8visq77";
       libraryHaskellDepends = [
         base hxt hxt-charproperties hxt-unicode tagsoup
       ];
       homepage = "http://www.fh-wedel.de/~si/HXmlToolbox/index.html";
       description = "TagSoup parser for HXT";
       license = "unknown";
     }) {};
  "hxt-unicode" = callPackage
    ({ mkDerivation, base, hxt-charproperties }:
     mkDerivation {
       pname = "hxt-unicode";
       version = "9.0.2.4";
       sha256 = "0rj48cy8z4fl3zpg5bpa458kqr83adav6jnqv4i71dclpprj6n3v";
       libraryHaskellDepends = [ base hxt-charproperties ];
       homepage = "https://github.com/UweSchmidt/hxt";
       description = "Unicode en-/decoding functions for utf8, iso-latin-* and other encodings";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hybrid-vectors" = callPackage
    ({ mkDerivation, base, deepseq, primitive, vector }:
     mkDerivation {
       pname = "hybrid-vectors";
       version = "0.1.2.1";
       sha256 = "0xh6yvv7jyahzrqihc13g1nlv81v0mzxvaxib5fcyr1njwbcwv59";
       revision = "2";
       editedCabalFile = "0ix4ql150fxmaywl59slk3jqy4gq6h1d4bkbajg5maixby3hh3dx";
       libraryHaskellDepends = [ base deepseq primitive vector ];
       homepage = "http://github.com/ekmett/hybrid-vectors";
       description = "Hybrid vectors e.g. Mixed Boxed/Unboxed vectors";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hyphenation" = callPackage
    ({ mkDerivation, base, containers, directory, doctest, filepath
     , unordered-containers
     }:
     mkDerivation {
       pname = "hyphenation";
       version = "0.4.2.1";
       sha256 = "069mbxdjlj36lyxr8bqkh1d05bhly64wk5lk71mz73lzcyaivcxi";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base containers unordered-containers ];
       testHaskellDepends = [
         base containers directory doctest filepath unordered-containers
       ];
       homepage = "http://github.com/ekmett/hyphenation";
       description = "Configurable Knuth-Liang hyphenation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "iconv" = callPackage
    ({ mkDerivation, base, bytestring }:
     mkDerivation {
       pname = "iconv";
       version = "0.4.1.2";
       sha256 = "0sd7by7idcnw368mdc1rs3j4xwbzdvgvkd5p1bwgw7wcd272c142";
       revision = "1";
       editedCabalFile = "0lb4jxm74ajpvfarg6wv62m32877pz0cw4w5zj9a0ycnvvn4ki6y";
       libraryHaskellDepends = [ base bytestring ];
       description = "String encoding conversion";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ide-backend" = callPackage
    ({ mkDerivation, aeson, async, attoparsec, base, binary, bytestring
     , bytestring-trie, Cabal-ide-backend, containers, crypto-api
     , data-accessor, data-accessor-mtl, deepseq, directory
     , executable-path, filemanip, filepath, fingertree, ghc-prim, HUnit
     , ide-backend-common, mtl, pretty-show, process, pureMD5, random
     , regex-compat, stm, tagged, tasty, template-haskell, temporary
     , test-framework, test-framework-hunit, text, time, transformers
     , unix, unordered-containers, utf8-string
     }:
     mkDerivation {
       pname = "ide-backend";
       version = "0.9.0.7";
       sha256 = "0z85pxf4hmk0b374y3wrxsjx7lvmqhgb3k5153yfd08rh606p0s3";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         async attoparsec base binary bytestring Cabal-ide-backend
         containers data-accessor data-accessor-mtl directory filemanip
         filepath ghc-prim ide-backend-common mtl pretty-show process
         pureMD5 template-haskell temporary text time transformers unix
         utf8-string
       ];
       executableHaskellDepends = [
         aeson async attoparsec base binary bytestring bytestring-trie
         Cabal-ide-backend containers crypto-api data-accessor
         data-accessor-mtl directory executable-path filemanip filepath
         fingertree ghc-prim ide-backend-common mtl pretty-show process
         pureMD5 random tagged template-haskell temporary text time
         transformers unix unordered-containers
       ];
       testHaskellDepends = [
         aeson async base binary bytestring Cabal-ide-backend containers
         deepseq directory executable-path filemanip filepath HUnit
         ide-backend-common process random regex-compat stm tagged tasty
         template-haskell temporary test-framework test-framework-hunit text
         unix utf8-string
       ];
       description = "An IDE backend library";
       license = stdenv.lib.licenses.mit;
     }) {};
  "ide-backend-common" = callPackage
    ({ mkDerivation, aeson, async, attoparsec, base, binary, bytestring
     , bytestring-trie, containers, crypto-api, data-accessor, directory
     , filepath, fingertree, mtl, pretty-show, pureMD5, tagged
     , template-haskell, temporary, text, transformers, unix
     }:
     mkDerivation {
       pname = "ide-backend-common";
       version = "0.9.1";
       sha256 = "1gix76gbc9ccx1hkddymk8hfx418kf1i7caajyzmdp6k8snvkc12";
       revision = "1";
       editedCabalFile = "0v1g8ybnmbm4q3j1s5h21m78q5b6xbdgjg4wz20m6ba4s6ysd7hv";
       libraryHaskellDepends = [
         aeson async attoparsec base binary bytestring bytestring-trie
         containers crypto-api data-accessor directory filepath fingertree
         mtl pretty-show pureMD5 tagged template-haskell temporary text
         transformers unix
       ];
       description = "Shared library used be ide-backend and ide-backend-server";
       license = stdenv.lib.licenses.mit;
     }) {};
  "ide-backend-rts" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "ide-backend-rts";
       version = "0.1.3.1";
       sha256 = "1zj1glpyhmgpkxy4n96aqqf3s1gl2irl8ksnx4i9y4nwvs06qzj0";
       libraryHaskellDepends = [ base ];
       description = "RTS for the IDE backend";
       license = stdenv.lib.licenses.mit;
     }) {};
  "idna" = callPackage
    ({ mkDerivation, base, punycode, stringprep, text }:
     mkDerivation {
       pname = "idna";
       version = "0.3.0";
       sha256 = "04w2mp9wa4mzdz4njx47j081jia8y000b46cw8vmx44fx8gv1zwp";
       libraryHaskellDepends = [ base punycode stringprep text ];
       description = "Implements IDNA (RFC 3490)";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ieee754" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "ieee754";
       version = "0.7.6";
       sha256 = "03s56h82n7hcwcn2dhd646prcf9wxj5jq49xqsnl7cnvi9768h2q";
       libraryHaskellDepends = [ base ];
       homepage = "http://github.com/patperry/hs-ieee754";
       description = "Utilities for dealing with IEEE floating point numbers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "imagesize-conduit" = callPackage
    ({ mkDerivation, base, bytestring, conduit, conduit-extra
     , exceptions, hspec, resourcet
     }:
     mkDerivation {
       pname = "imagesize-conduit";
       version = "1.1";
       sha256 = "06dc0453l7n3g05pg118y4smlzkl6p56zazpi4dr41dkg12pii9i";
       revision = "1";
       editedCabalFile = "1gq749v6558zkvvn8iqkd4iqv4giiysxjqb2kncarnhghkkbgbaf";
       libraryHaskellDepends = [
         base bytestring conduit conduit-extra exceptions
       ];
       testHaskellDepends = [
         base bytestring conduit conduit-extra hspec resourcet
       ];
       homepage = "http://github.com/silkapp/imagesize-conduit";
       description = "Determine the size of some common image formats";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "immortal" = callPackage
    ({ mkDerivation, base, lifted-base, monad-control, stm, tasty
     , tasty-hunit, transformers, transformers-base
     }:
     mkDerivation {
       pname = "immortal";
       version = "0.2";
       sha256 = "1si9zh309xh29qrxkhb0shwisjrsja2d9lpj17dwlzn0gv0i1672";
       libraryHaskellDepends = [
         base lifted-base monad-control transformers-base
       ];
       testHaskellDepends = [
         base lifted-base stm tasty tasty-hunit transformers
       ];
       homepage = "https://github.com/feuerbach/immortal";
       description = "Spawn threads that never die (unless told to do so)";
       license = stdenv.lib.licenses.mit;
     }) {};
  "include-file" = callPackage
    ({ mkDerivation, base, bytestring, criterion, random
     , template-haskell
     }:
     mkDerivation {
       pname = "include-file";
       version = "0.1.0.2";
       sha256 = "0yrqvdp37wjw9j7vknzyiw4954yskxh75z8r3sic6qdmz17zv8ba";
       libraryHaskellDepends = [
         base bytestring random template-haskell
       ];
       testHaskellDepends = [ base bytestring ];
       benchmarkHaskellDepends = [ base bytestring criterion ];
       description = "Inclusion of files in executables at compile-time";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "incremental-parser" = callPackage
    ({ mkDerivation, base, checkers, monoid-subclasses, QuickCheck
     , tasty, tasty-quickcheck
     }:
     mkDerivation {
       pname = "incremental-parser";
       version = "0.2.3.4";
       sha256 = "0n2318i4dzgcs9xcs80wcfbm9rc902w02nwqa30b3nrwl21cjag3";
       libraryHaskellDepends = [ base monoid-subclasses ];
       testHaskellDepends = [
         base checkers monoid-subclasses QuickCheck tasty tasty-quickcheck
       ];
       homepage = "http://patch-tag.com/r/blamario/incremental-parser/wiki/";
       description = "Generic parser library capable of providing partial results from partial input";
       license = "GPL";
     }) {};
  "indents" = callPackage
    ({ mkDerivation, base, concatenative, mtl, parsec }:
     mkDerivation {
       pname = "indents";
       version = "0.3.3";
       sha256 = "16lz21bp9j14xilnq8yym22p3saxvc9fsgfcf5awn2a6i6n527xn";
       libraryHaskellDepends = [ base concatenative mtl parsec ];
       homepage = "http://patch-tag.com/r/salazar/indents";
       description = "indentation sensitive parser-combinators for parsec";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ini" = callPackage
    ({ mkDerivation, attoparsec, base, text, unordered-containers }:
     mkDerivation {
       pname = "ini";
       version = "0.3.1";
       sha256 = "01iwf4ifdx3mrw1rybj4crip4hmjxhab250rv995dgbwldh1iyqb";
       libraryHaskellDepends = [
         attoparsec base text unordered-containers
       ];
       description = "Quick and easy configuration files in the INI format";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "integration" = callPackage
    ({ mkDerivation, base, parallel }:
     mkDerivation {
       pname = "integration";
       version = "0.2.1";
       sha256 = "0bsqad6q4kc0wykswwqykcn6nd4wj6yd9dzpg075h2n1mmg3h9qc";
       libraryHaskellDepends = [ base parallel ];
       homepage = "https://github.com/ekmett/integration";
       description = "Fast robust numeric integration via tanh-sinh quadrature";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "interpolate" = callPackage
    ({ mkDerivation, base, bytestring, haskell-src-meta, hspec
     , QuickCheck, quickcheck-instances, template-haskell, text
     }:
     mkDerivation {
       pname = "interpolate";
       version = "0.1.0";
       sha256 = "0wlc10qd1bq3xj64a3yq2gzds9kas9zyylkm9kxd46gy35fns6id";
       revision = "1";
       editedCabalFile = "0ld319k9phmp6dp8m87bdhqp5519dxggf8r2a5z8hkznyjpa131j";
       libraryHaskellDepends = [ base haskell-src-meta template-haskell ];
       testHaskellDepends = [
         base bytestring haskell-src-meta hspec QuickCheck
         quickcheck-instances template-haskell text
       ];
       description = "String interpolation done right";
       license = stdenv.lib.licenses.mit;
     }) {};
  "interpolatedstring-perl6" = callPackage
    ({ mkDerivation, base, bytestring, haskell-src-meta
     , template-haskell, text
     }:
     mkDerivation {
       pname = "interpolatedstring-perl6";
       version = "0.9.0";
       sha256 = "15hzmni3wfdgjl0vyk5mcld61ba99wdax87s7wkz2s8bsyxkbq9n";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base bytestring haskell-src-meta template-haskell text
       ];
       description = "QuasiQuoter for Perl6-style multi-line interpolated strings";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "intervals" = callPackage
    ({ mkDerivation, array, base, directory, distributive, doctest
     , filepath, ghc-prim
     }:
     mkDerivation {
       pname = "intervals";
       version = "0.7.1";
       sha256 = "03ra3jkch26x4crsq6nh2wnj51jrx7zmwafmq22xqrpsg7hpav92";
       libraryHaskellDepends = [ array base distributive ghc-prim ];
       testHaskellDepends = [ base directory doctest filepath ];
       homepage = "http://github.com/ekmett/intervals";
       description = "Interval Arithmetic";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "io-choice" = callPackage
    ({ mkDerivation, base, hspec, lifted-base, monad-control
     , template-haskell, transformers, transformers-base
     }:
     mkDerivation {
       pname = "io-choice";
       version = "0.0.5";
       sha256 = "19nr8kxcg98510cqgjn4c9sd8i9yz8fv4ryqg6lzzgpwqzkvx5ph";
       libraryHaskellDepends = [
         base lifted-base monad-control template-haskell transformers
         transformers-base
       ];
       testHaskellDepends = [
         base hspec lifted-base monad-control transformers
       ];
       description = "Choice for IO and lifted IO";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "io-manager" = callPackage
    ({ mkDerivation, base, containers }:
     mkDerivation {
       pname = "io-manager";
       version = "0.1.0.2";
       sha256 = "0f21h36z2ls0d6g31pcf4kcyfninaxws8w159zy33bwa19saf2mz";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base containers ];
       executableHaskellDepends = [ base containers ];
       description = "Skeleton library around the IO monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "io-memoize" = callPackage
    ({ mkDerivation, async, base }:
     mkDerivation {
       pname = "io-memoize";
       version = "1.1.1.0";
       sha256 = "0ga85wdvz67jjx8qh6f687kfikcrfmp7winn13v6na7vlaqs2ly7";
       libraryHaskellDepends = [ async base ];
       homepage = "https://github.com/DanBurton/io-memoize";
       description = "Memoize IO actions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "iproute" = callPackage
    ({ mkDerivation, appar, base, byteorder, containers, doctest, hspec
     , network, QuickCheck, safe
     }:
     mkDerivation {
       pname = "iproute";
       version = "1.3.2";
       sha256 = "0zdcpmxyn1acxbdgh0k201ha70yzms1w27s7n6awp67hz7v0n95m";
       libraryHaskellDepends = [
         appar base byteorder containers network
       ];
       testHaskellDepends = [
         appar base byteorder containers doctest hspec network QuickCheck
         safe
       ];
       homepage = "http://www.mew.org/~kazu/proj/iproute/";
       description = "IP Routing Table";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "iterable" = callPackage
    ({ mkDerivation, base, mtl, tagged, template-haskell, vector }:
     mkDerivation {
       pname = "iterable";
       version = "3.0";
       sha256 = "194718jpjwkv3ynlpgjlpvf0iqnj7dkd3zmci363gsa425i3vlbc";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base mtl tagged template-haskell vector
       ];
       homepage = "https://github.com/BioHaskell/iterable";
       description = "API for hierarchical multilevel collections";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ixset" = callPackage
    ({ mkDerivation, base, containers, safecopy, syb, syb-with-class
     , template-haskell
     }:
     mkDerivation {
       pname = "ixset";
       version = "1.0.6";
       sha256 = "097f9fkm9a2n67bzagr9h2v7acdn8h1ayv9c83n7nv1dh157bpyv";
       libraryHaskellDepends = [
         base containers safecopy syb syb-with-class template-haskell
       ];
       homepage = "http://happstack.com";
       description = "Efficient relational queries on Haskell sets";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "jmacro" = callPackage
    ({ mkDerivation, aeson, base, bytestring, containers
     , haskell-src-exts, haskell-src-meta, mtl, parseargs, parsec
     , regex-posix, safe, syb, template-haskell, text
     , unordered-containers, vector, wl-pprint-text
     }:
     mkDerivation {
       pname = "jmacro";
       version = "0.6.11";
       sha256 = "1b45graag0nmadaf1ssaps4g9p7xx7d2h7dy84nzmdhrpvdlw4xs";
       revision = "1";
       editedCabalFile = "0m2r37papmawc4rjhv599frxvny0hdfbdvc08ld51rq73nsm3vd9";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base bytestring containers haskell-src-exts haskell-src-meta
         mtl parsec regex-posix safe syb template-haskell text
         unordered-containers vector wl-pprint-text
       ];
       executableHaskellDepends = [ parseargs ];
       description = "QuasiQuotation library for programmatic generation of Javascript code";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "jmacro-rpc" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, blaze-html, bytestring
     , containers, contravariant, jmacro, mtl, scientific, split, text
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "jmacro-rpc";
       version = "0.3";
       sha256 = "1fkcky2f51764xcbbwnxpxyhk2mmnp364hf8njfcjsijanv938zw";
       libraryHaskellDepends = [
         aeson attoparsec base blaze-html bytestring containers
         contravariant jmacro mtl scientific split text unordered-containers
         vector
       ];
       homepage = "http://hub.darcs.net/gershomb/jmacro";
       description = "JSON-RPC clients and servers using JMacro, and evented client-server Reactive Programming";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "jmacro-rpc-happstack" = callPackage
    ({ mkDerivation, aeson, base, blaze-html, bytestring, containers
     , happstack-server, jmacro, jmacro-rpc, mtl
     }:
     mkDerivation {
       pname = "jmacro-rpc-happstack";
       version = "0.3.1";
       sha256 = "0b77nrvrh1wzsp6djji0hkgl6flyl664l7kzbf5kpi30mqh45a6a";
       libraryHaskellDepends = [
         aeson base blaze-html bytestring containers happstack-server jmacro
         jmacro-rpc mtl
       ];
       homepage = "http://hub.darcs.net/gershomb/jmacro-rpc";
       description = "Happstack backend for jmacro-rpc";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "jmacro-rpc-snap" = callPackage
    ({ mkDerivation, aeson, base, bytestring, containers, jmacro
     , jmacro-rpc, mtl, snap-core
     }:
     mkDerivation {
       pname = "jmacro-rpc-snap";
       version = "0.3";
       sha256 = "1syzx2lw4r8knsqhsvilp04wb8a718379cmn0nhjqlwhpaja9bj8";
       libraryHaskellDepends = [
         aeson base bytestring containers jmacro jmacro-rpc mtl snap-core
       ];
       homepage = "http://hub.darcs.net/gershomb/jmacro-rpc";
       description = "Snap backend for jmacro-rpc";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "jose-jwt" = callPackage
    ({ mkDerivation, aeson, aeson-qq, base, base64-bytestring, byteable
     , bytestring, cereal, cipher-aes, containers, criterion
     , crypto-cipher-types, crypto-numbers, crypto-pubkey
     , crypto-pubkey-types, crypto-random, cryptohash, either, errors
     , hspec, HUnit, mtl, QuickCheck, text, time, unordered-containers
     , vector
     }:
     mkDerivation {
       pname = "jose-jwt";
       version = "0.4.2";
       sha256 = "1vz32w4yd5yfk3wcsdicfy3qczwcf9hldx19jwf4ihsfyk4hdpzr";
       revision = "2";
       editedCabalFile = "1yymvvkjnkli8x00czrhr2gwm1zwqsmd266hsvix52lcxnbcxv37";
       configureFlags = [ "-f-doctest" ];
       libraryHaskellDepends = [
         aeson base base64-bytestring byteable bytestring cereal cipher-aes
         containers crypto-cipher-types crypto-numbers crypto-pubkey
         crypto-pubkey-types crypto-random cryptohash errors mtl text time
         unordered-containers vector
       ];
       testHaskellDepends = [
         aeson aeson-qq base base64-bytestring bytestring cipher-aes
         crypto-cipher-types crypto-pubkey crypto-pubkey-types crypto-random
         cryptohash either hspec HUnit mtl QuickCheck text
       ];
       benchmarkHaskellDepends = [
         base bytestring criterion crypto-pubkey crypto-random
       ];
       homepage = "http://github.com/tekul/jose-jwt";
       description = "JSON Object Signing and Encryption Library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "js-flot" = callPackage
    ({ mkDerivation, base, HTTP }:
     mkDerivation {
       pname = "js-flot";
       version = "0.8.3";
       sha256 = "0yjyzqh3qzhy5h3nql1fckw0gcfb0f4wj9pm85nafpfqp2kg58hv";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base HTTP ];
       homepage = "https://github.com/ndmitchell/js-flot#readme";
       description = "Obtain minified flot code";
       license = stdenv.lib.licenses.mit;
     }) {};
  "js-jquery" = callPackage
    ({ mkDerivation, base, HTTP }:
     mkDerivation {
       pname = "js-jquery";
       version = "1.11.2";
       sha256 = "0sdzgz3gfic0i6636kd2szlqczhydi8m6vjr188n1bjc1y1xh112";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base HTTP ];
       homepage = "https://github.com/ndmitchell/js-jquery#readme";
       description = "Obtain minified jQuery code";
       license = stdenv.lib.licenses.mit;
     }) {};
  "json" = callPackage
    ({ mkDerivation, array, base, bytestring, containers, mtl, parsec
     , pretty, syb, text
     }:
     mkDerivation {
       pname = "json";
       version = "0.9.1";
       sha256 = "18l5027vc68hnnxrxlnyl59vkkg95a92m1zzms0dqiby2r6pxdcn";
       libraryHaskellDepends = [
         array base bytestring containers mtl parsec pretty syb text
       ];
       description = "Support for serialising Haskell to and from JSON";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "json-autotype" = callPackage
    ({ mkDerivation, aeson, base, bytestring, containers, directory
     , filepath, GenericPretty, hashable, hflags, hint, lens, mtl
     , pretty, process, QuickCheck, scientific, text, uniplate
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "json-autotype";
       version = "0.2.5.13";
       sha256 = "01kjyj9gyw0hgw08ca3id286jbinb4gnpnikmrz5vpazkyi5y85k";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base bytestring containers filepath GenericPretty hashable
         hflags hint lens mtl pretty process scientific text uniplate
         unordered-containers vector
       ];
       executableHaskellDepends = [
         aeson base bytestring containers directory filepath GenericPretty
         hashable hflags lens mtl pretty process QuickCheck scientific text
         uniplate unordered-containers vector
       ];
       homepage = "https://github.com/mgajda/json-autotype";
       description = "Automatic type declaration for JSON input data";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "json-schema" = callPackage
    ({ mkDerivation, aeson, aeson-utils, attoparsec, base, bytestring
     , containers, generic-aeson, generic-deriving, mtl, scientific
     , tasty, tasty-hunit, tasty-th, text, time, unordered-containers
     , vector
     }:
     mkDerivation {
       pname = "json-schema";
       version = "0.7.3.4";
       sha256 = "0p9m706hl8phl12zb9inn6hkrgzxgd3k9lg2p1kav53j5mz17w0p";
       libraryHaskellDepends = [
         aeson base containers generic-aeson generic-deriving mtl scientific
         text time unordered-containers vector
       ];
       testHaskellDepends = [
         aeson aeson-utils attoparsec base bytestring generic-aeson tasty
         tasty-hunit tasty-th text vector
       ];
       description = "Types and type classes for defining JSON schemas";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "kan-extensions" = callPackage
    ({ mkDerivation, adjunctions, array, base, comonad, containers
     , contravariant, distributive, free, mtl, semigroupoids, tagged
     , transformers
     }:
     mkDerivation {
       pname = "kan-extensions";
       version = "4.2.1";
       sha256 = "0lymh1njw1zh9is6zk3bmr7jylna28632l4pylh6chlxpjvy4zwl";
       revision = "1";
       editedCabalFile = "1b9yx3dcnghp5lilypqilndip4j0n96v2nv1b0k2yiaci6yzvcf0";
       libraryHaskellDepends = [
         adjunctions array base comonad containers contravariant
         distributive free mtl semigroupoids tagged transformers
       ];
       homepage = "http://github.com/ekmett/kan-extensions/";
       description = "Kan extensions, Kan lifts, various forms of the Yoneda lemma, and (co)density (co)monads";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "kansas-comet" = callPackage
    ({ mkDerivation, aeson, base, containers, data-default, scotty, stm
     , text, time, transformers, unordered-containers
     }:
     mkDerivation {
       pname = "kansas-comet";
       version = "0.3.1";
       sha256 = "0xbapi4clmkighxh0jb12zpzgrz9sqyfpwdkvrj6cdq6i6a22qx1";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson base containers data-default scotty stm text time
         transformers unordered-containers
       ];
       homepage = "https://github.com/ku-fpg/kansas-comet/";
       description = "A JavaScript push mechanism based on the comet idiom";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "kdt" = callPackage
    ({ mkDerivation, base, criterion, deepseq, deepseq-generics, heap
     , mersenne-random-pure64, MonadRandom, QuickCheck
     }:
     mkDerivation {
       pname = "kdt";
       version = "0.2.3";
       sha256 = "0chxxl53jnnhfs02gxr2a3kzppmsnwrrfr1fjyx71lkvigwy71yk";
       libraryHaskellDepends = [ base deepseq deepseq-generics heap ];
       testHaskellDepends = [ base deepseq deepseq-generics QuickCheck ];
       benchmarkHaskellDepends = [
         base criterion deepseq deepseq-generics heap mersenne-random-pure64
         MonadRandom QuickCheck
       ];
       homepage = "https://github.com/giogadi/kdt";
       description = "Fast and flexible k-d trees for various types of point queries";
       license = stdenv.lib.licenses.mit;
     }) {};
  "keter" = callPackage
    ({ mkDerivation, aeson, array, async, attoparsec, base
     , blaze-builder, bytestring, case-insensitive, conduit
     , conduit-extra, containers, data-default, directory, filepath
     , fsnotify, hspec, http-client, http-conduit, http-reverse-proxy
     , http-types, HUnit, lifted-base, mtl, network, process, random
     , regex-tdfa, stm, system-fileio, system-filepath, tar
     , template-haskell, text, time, transformers, unix, unix-compat
     , unordered-containers, vector, wai, wai-app-static, wai-extra
     , warp, warp-tls, yaml, zlib
     }:
     mkDerivation {
       pname = "keter";
       version = "1.3.9.2";
       sha256 = "1c5hsckcdy966c5nn1cwa63sc7fqmyhanw0156cllkss8kzwzj4r";
       revision = "2";
       editedCabalFile = "0f90inhw5jixm4hk9gjhvrp9dckj48gq03ngavdmw7jm3z058p8q";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson array async attoparsec base blaze-builder bytestring
         case-insensitive conduit conduit-extra containers data-default
         directory filepath fsnotify http-client http-conduit
         http-reverse-proxy http-types lifted-base mtl network process
         random regex-tdfa stm system-fileio system-filepath tar
         template-haskell text time transformers unix unix-compat
         unordered-containers vector wai wai-app-static wai-extra warp
         warp-tls yaml zlib
       ];
       executableHaskellDepends = [ base data-default system-filepath ];
       testHaskellDepends = [
         base bytestring conduit hspec HUnit transformers unix
       ];
       homepage = "http://www.yesodweb.com/";
       description = "Web application deployment manager, focusing on Haskell web frameworks";
       license = stdenv.lib.licenses.mit;
     }) {};
  "keys" = callPackage
    ({ mkDerivation, array, base, comonad, containers, free
     , semigroupoids, semigroups, transformers
     }:
     mkDerivation {
       pname = "keys";
       version = "3.10.1";
       sha256 = "007lbpfan5n1cgswsrzc4xjv0kjmjr9vn4lpqm3gwk3lnfpg8i4n";
       libraryHaskellDepends = [
         array base comonad containers free semigroupoids semigroups
         transformers
       ];
       homepage = "http://github.com/ekmett/keys/";
       description = "Keyed functors and containers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "kmeans" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "kmeans";
       version = "0.1.3";
       sha256 = "02rc3bd2cp1fp0fxbzqiy34s5gn38j8hgviilz1584z05jhj97ix";
       libraryHaskellDepends = [ base ];
       description = "K-means clustering algorithm";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "koofr-client" = callPackage
    ({ mkDerivation, aeson, base, bytestring, filepath, http-client
     , http-client-tls, http-types, mtl
     }:
     mkDerivation {
       pname = "koofr-client";
       version = "1.0.0.3";
       sha256 = "1bz7akd7sssn1gzqfvr0y343771zk7dn1n3as0m93wg4ifpz1dia";
       revision = "1";
       editedCabalFile = "0qaipcg9n93z0za2a8jy3mv73a3q2b1dv98v2g5wwcv1qx7rvvhv";
       libraryHaskellDepends = [
         aeson base bytestring filepath http-client http-client-tls
         http-types mtl
       ];
       homepage = "https://github.com/edofic/koofr-api-hs";
       description = "Client to Koofr API";
       license = stdenv.lib.licenses.mit;
     }) {};
  "kure" = callPackage
    ({ mkDerivation, base, dlist, transformers }:
     mkDerivation {
       pname = "kure";
       version = "2.16.10";
       sha256 = "0xfnrp39w2ip9744898mfd63sbya8an72fx3nwj1s3vzdb1h3lhm";
       libraryHaskellDepends = [ base dlist transformers ];
       homepage = "http://www.ittc.ku.edu/csdl/fpg/software/kure.html";
       description = "Combinators for Strategic Programming";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "language-c" = callPackage
    ({ mkDerivation, alex, array, base, bytestring, containers
     , directory, filepath, happy, pretty, process, syb
     }:
     mkDerivation {
       pname = "language-c";
       version = "0.4.7";
       sha256 = "1r0jlncv6d6ai8kblrdq9gz8abx57b24y6hfh30xx20zdgccjvaz";
       libraryHaskellDepends = [
         array base bytestring containers directory filepath pretty process
         syb
       ];
       libraryToolDepends = [ alex happy ];
       homepage = "http://www.sivity.net/projects/language.c/";
       description = "Analysis and generation of C code";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "language-c-quote" = callPackage
    ({ mkDerivation, alex, array, base, bytestring, containers
     , exception-mtl, exception-transformers, filepath, happy
     , haskell-src-meta, HUnit, mainland-pretty, mtl, srcloc, syb
     , symbol, template-haskell, test-framework, test-framework-hunit
     }:
     mkDerivation {
       pname = "language-c-quote";
       version = "0.10.2.1";
       sha256 = "0klr7b4sdi8bsln9hw3xa56d3s1h869zkyqnm97fiyvzar91g532";
       libraryHaskellDepends = [
         array base bytestring containers exception-mtl
         exception-transformers filepath haskell-src-meta mainland-pretty
         mtl srcloc syb symbol template-haskell
       ];
       libraryToolDepends = [ alex happy ];
       testHaskellDepends = [
         base HUnit srcloc symbol test-framework test-framework-hunit
       ];
       homepage = "http://www.cs.drexel.edu/~mainland/";
       description = "C/CUDA/OpenCL/Objective-C quasiquoting library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "language-ecmascript" = callPackage
    ({ mkDerivation, base, containers, data-default-class, Diff
     , directory, filepath, HUnit, mtl, parsec, QuickCheck
     , template-haskell, test-framework, test-framework-hunit
     , test-framework-quickcheck2, testing-feat, uniplate, wl-pprint
     }:
     mkDerivation {
       pname = "language-ecmascript";
       version = "0.17";
       sha256 = "15v0nwp97058yjn0sp0hlsk7pvs6vaak3521p99f0z7a1dx4d876";
       revision = "3";
       editedCabalFile = "0avxfzpfbvnxl8k6jv037ga0h15j89hc3hniszpwnbmka7wy6n7d";
       libraryHaskellDepends = [
         base containers data-default-class Diff mtl parsec QuickCheck
         template-haskell testing-feat uniplate wl-pprint
       ];
       testHaskellDepends = [
         base containers data-default-class Diff directory filepath HUnit
         mtl parsec QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2 uniplate wl-pprint
       ];
       homepage = "http://github.com/jswebtools/language-ecmascript";
       description = "JavaScript parser and pretty-printer library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "language-glsl" = callPackage
    ({ mkDerivation, base, HUnit, parsec, pretty, prettyclass
     , test-framework, test-framework-hunit
     }:
     mkDerivation {
       pname = "language-glsl";
       version = "0.1.1";
       sha256 = "06dc339a2cddzgjda3nzprgr0v2clbhlpl8j81m04i66bbj2l15y";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base parsec prettyclass ];
       executableHaskellDepends = [ base parsec pretty prettyclass ];
       testHaskellDepends = [
         base HUnit parsec prettyclass test-framework test-framework-hunit
       ];
       description = "GLSL abstract syntax tree, parser, and pretty-printer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "language-haskell-extract" = callPackage
    ({ mkDerivation, base, regex-posix, template-haskell }:
     mkDerivation {
       pname = "language-haskell-extract";
       version = "0.2.4";
       sha256 = "1nxcs7g8a1sp91bzpy4cj6s31k5pvc3gvig04cbrggv5cvjidnhl";
       libraryHaskellDepends = [ base regex-posix template-haskell ];
       homepage = "http://github.com/finnsson/template-helper";
       description = "Module to automatically extract functions from the local code";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "language-java" = callPackage
    ({ mkDerivation, alex, array, base, cpphs, directory, filepath
     , HUnit, mtl, parsec, pretty, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "language-java";
       version = "0.2.7";
       sha256 = "1519grsjw0f4skldxs563qz07mmj1cg72ma0plmvzpas7inkikyf";
       libraryHaskellDepends = [ array base cpphs parsec pretty ];
       libraryToolDepends = [ alex ];
       testHaskellDepends = [
         base directory filepath HUnit mtl QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2
       ];
       doCheck = false;
       homepage = "http://github.com/vincenthz/language-java";
       description = "Manipulating Java source: abstract syntax, lexer, parser, and pretty-printer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "language-javascript" = callPackage
    ({ mkDerivation, alex, array, base, blaze-builder, bytestring
     , Cabal, containers, happy, HUnit, mtl, QuickCheck, test-framework
     , test-framework-hunit, utf8-light, utf8-string
     }:
     mkDerivation {
       pname = "language-javascript";
       version = "0.5.13.3";
       sha256 = "069spax169v0qq5axwccgxdmiyjlnjg1bhzqh09dp5yx9w5fk47x";
       libraryHaskellDepends = [
         array base blaze-builder bytestring containers mtl utf8-string
       ];
       libraryToolDepends = [ alex happy ];
       testHaskellDepends = [
         array base blaze-builder bytestring Cabal containers HUnit mtl
         QuickCheck test-framework test-framework-hunit utf8-light
         utf8-string
       ];
       homepage = "http://github.com/alanz/language-javascript";
       description = "Parser for JavaScript";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lattices" = callPackage
    ({ mkDerivation, base, containers }:
     mkDerivation {
       pname = "lattices";
       version = "1.2.1.1";
       sha256 = "0ppqvc3w7v56zya43b3fqwis50c8b57hlighzmk8jphv39y3ilp6";
       libraryHaskellDepends = [ base containers ];
       description = "Fine-grained library for constructing and manipulating lattices";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lazy-csv" = callPackage
    ({ mkDerivation, base, bytestring }:
     mkDerivation {
       pname = "lazy-csv";
       version = "0.5";
       sha256 = "0xm5j3why2wfajcn7r8my63ranq2mm7jlj15dj153n2izgvd1dh0";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base bytestring ];
       executableHaskellDepends = [ base bytestring ];
       homepage = "http://code.haskell.org/lazy-csv";
       description = "Efficient lazy parsers for CSV (comma-separated values)";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lca" = callPackage
    ({ mkDerivation, base, doctest }:
     mkDerivation {
       pname = "lca";
       version = "0.3";
       sha256 = "081fk0ci5vb84w4zwah6qwbr0i78v2pr6m6nn1y226vv5w3kakza";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base doctest ];
       homepage = "http://github.com/ekmett/lca/";
       description = "O(log n) persistent on-line lowest common ancestor calculation without preprocessing";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lens" = callPackage
    ({ mkDerivation, array, base, bifunctors, bytestring, comonad
     , comonads-fd, containers, contravariant, criterion, deepseq
     , directory, distributive, doctest, exceptions, filepath, free
     , generic-deriving, ghc-prim, hashable, hlint, HUnit, mtl, nats
     , parallel, primitive, profunctors, QuickCheck, reflection
     , semigroupoids, semigroups, simple-reflect, split, tagged
     , template-haskell, test-framework, test-framework-hunit
     , test-framework-quickcheck2, test-framework-th, text, transformers
     , transformers-compat, unordered-containers, vector, void
     }:
     mkDerivation {
       pname = "lens";
       version = "4.7.0.1";
       sha256 = "1j9d7g4sj38zq2r8vhy05b2kbxx1sg2k0b3yx05lbxlb79wcm1j1";
       revision = "4";
       editedCabalFile = "03r1ralnxp843bwd699lcasx0ncknl5fh6cnk2pdfxqq2g0l94c2";
       libraryHaskellDepends = [
         array base bifunctors bytestring comonad containers contravariant
         distributive exceptions filepath free ghc-prim hashable mtl
         parallel primitive profunctors reflection semigroupoids semigroups
         split tagged template-haskell text transformers transformers-compat
         unordered-containers vector void
       ];
       testHaskellDepends = [
         base bytestring containers deepseq directory doctest filepath
         generic-deriving hlint HUnit mtl nats parallel QuickCheck
         semigroups simple-reflect split test-framework test-framework-hunit
         test-framework-quickcheck2 test-framework-th text transformers
         unordered-containers vector
       ];
       benchmarkHaskellDepends = [
         base comonad comonads-fd criterion deepseq generic-deriving
         transformers
       ];
       homepage = "http://github.com/ekmett/lens/";
       description = "Lenses, Folds and Traversals";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lens-action" = callPackage
    ({ mkDerivation, base, comonad, contravariant, directory, doctest
     , filepath, lens, mtl, profunctors, semigroupoids, semigroups
     , transformers
     }:
     mkDerivation {
       pname = "lens-action";
       version = "0.1.0.1";
       sha256 = "0ycasfbwkqc3v3frjq8kfm1nzj7g1vr25ywzf0irk05gfhxfpvig";
       revision = "1";
       editedCabalFile = "10bda3k959p2bcxnqwykflmh7lh8p582yr100svr977w0h6p1rb4";
       libraryHaskellDepends = [
         base comonad contravariant lens mtl profunctors semigroupoids
         semigroups transformers
       ];
       testHaskellDepends = [ base directory doctest filepath ];
       homepage = "http://github.com/ekmett/lens-action/";
       description = "Monadic Getters and Folds";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lens-aeson" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, bytestring, directory
     , doctest, filepath, generic-deriving, lens, scientific, semigroups
     , simple-reflect, text, unordered-containers, vector
     }:
     mkDerivation {
       pname = "lens-aeson";
       version = "1.0.0.3";
       sha256 = "0wfbnazarwcza5dn3icsdvsmkyf9ki5lr5d5yidmgijhs63ak7ac";
       libraryHaskellDepends = [
         aeson attoparsec base bytestring lens scientific text
         unordered-containers vector
       ];
       testHaskellDepends = [
         base directory doctest filepath generic-deriving semigroups
         simple-reflect
       ];
       homepage = "http://github.com/lens/lens-aeson/";
       description = "Law-abiding lenses for aeson";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lens-family-core" = callPackage
    ({ mkDerivation, base, containers, transformers }:
     mkDerivation {
       pname = "lens-family-core";
       version = "1.2.0";
       sha256 = "0hxrbbc4azfafnr4ab2zxgic093wwg6gx5h1ggp4xks55d8rhraz";
       libraryHaskellDepends = [ base containers transformers ];
       description = "Haskell 98 Lens Families";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lens-family-th" = callPackage
    ({ mkDerivation, base, template-haskell }:
     mkDerivation {
       pname = "lens-family-th";
       version = "0.4.1.0";
       sha256 = "084yng26xyhw6c6hij3p70zvjpvm1dlw6klphw51car9gi6dqkvm";
       revision = "2";
       editedCabalFile = "0simbh9r9gjb375slxpbnlxfj594fm5k1gh33k4x23i5vjg1934p";
       libraryHaskellDepends = [ base template-haskell ];
       homepage = "http://github.com/DanBurton/lens-family-th#readme";
       description = "Generate lens-family style lenses";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lhs2tex" = callPackage
    ({ mkDerivation, base, directory, filepath, mtl, process
     , regex-compat
     }:
     mkDerivation {
       pname = "lhs2tex";
       version = "1.19";
       sha256 = "03mhhkrqjjqmmh18im8di1cl6wqv30lsib5hv73f0wsnv5bhbbi4";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         base directory filepath mtl process regex-compat
       ];
       doHaddock = false;
       homepage = "http://www.andres-loeh.de/lhs2tex/";
       description = "Preprocessor for typesetting Haskell sources with LaTeX";
       license = "GPL";
     }) {};
  "libgit" = callPackage
    ({ mkDerivation, base, mtl, process }:
     mkDerivation {
       pname = "libgit";
       version = "0.3.0";
       sha256 = "0k2287d84s0p73md1mfcyg1qy1l5ncgrvmkaa7607d8zlk9b8ci6";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base mtl process ];
       homepage = "http://github.com/vincenthz/hs-tls";
       description = "Simple Git Wrapper";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "libnotify" = callPackage
    ({ mkDerivation, base, bytestring, glib, gtk, libnotify }:
     mkDerivation {
       pname = "libnotify";
       version = "0.1.1.0";
       sha256 = "1wc19v14agadj7dzi81lm3qzk2x33apaj5ylmg7x232k56xzfvr0";
       libraryHaskellDepends = [ base bytestring glib gtk ];
       librarySystemDepends = [ libnotify ];
       description = "Bindings to libnotify library";
       license = stdenv.lib.licenses.mit;
     }) {inherit (pkgs) libnotify;};
  "lifted-async" = callPackage
    ({ mkDerivation, async, base, constraints, criterion, deepseq
     , HUnit, lifted-base, monad-control, mtl, tasty, tasty-hunit
     , tasty-th, transformers-base
     }:
     mkDerivation {
       pname = "lifted-async";
       version = "0.7.0";
       sha256 = "1i9wm7pz8mh0gjyp7jhf3as82yi1axskv1mp5596gq7pszgglyd6";
       libraryHaskellDepends = [
         async base constraints lifted-base monad-control transformers-base
       ];
       testHaskellDepends = [
         async base HUnit lifted-base monad-control mtl tasty tasty-hunit
         tasty-th
       ];
       benchmarkHaskellDepends = [ async base criterion deepseq ];
       homepage = "https://github.com/maoe/lifted-async";
       description = "Run lifted IO operations asynchronously and wait for their results";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lifted-base" = callPackage
    ({ mkDerivation, base, HUnit, monad-control, test-framework
     , test-framework-hunit, transformers, transformers-base
     , transformers-compat
     }:
     mkDerivation {
       pname = "lifted-base";
       version = "0.2.3.6";
       sha256 = "1yz14a1rsgknwyl08n4kxrlc26hfwmb95a3c2drbnsgmhdyq7iap";
       libraryHaskellDepends = [ base monad-control transformers-base ];
       testHaskellDepends = [
         base HUnit monad-control test-framework test-framework-hunit
         transformers transformers-base transformers-compat
       ];
       homepage = "https://github.com/basvandijk/lifted-base";
       description = "lifted IO operations from the base library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "linear" = callPackage
    ({ mkDerivation, adjunctions, base, base-orphans, binary, bytes
     , bytestring, cereal, containers, deepseq, directory, distributive
     , doctest, filepath, ghc-prim, hashable, HUnit, lens, reflection
     , semigroupoids, semigroups, simple-reflect, tagged
     , template-haskell, test-framework, test-framework-hunit
     , transformers, transformers-compat, unordered-containers, vector
     , void
     }:
     mkDerivation {
       pname = "linear";
       version = "1.18.0.1";
       sha256 = "06gbrmr7yv9s6la14g22lwqfjyfr0xrlmkrffizy4n01xknmkbig";
       revision = "3";
       editedCabalFile = "0r85xrjm58rynkdcs821k6bjblwzcjhdfagp2s6n0cg9q2h85zrz";
       libraryHaskellDepends = [
         adjunctions base base-orphans binary bytes cereal containers
         deepseq distributive ghc-prim hashable lens reflection
         semigroupoids semigroups tagged template-haskell transformers
         transformers-compat unordered-containers vector void
       ];
       testHaskellDepends = [
         base binary bytestring directory doctest filepath HUnit lens
         simple-reflect test-framework test-framework-hunit
       ];
       homepage = "http://github.com/ekmett/linear/";
       description = "Linear Algebra";
       license = stdenv.lib.licenses.bsd3;
     }) {base-orphans = null;};
  "linear-accelerate" = callPackage
    ({ mkDerivation, accelerate, base, lens, linear }:
     mkDerivation {
       pname = "linear-accelerate";
       version = "0.2";
       sha256 = "0433mzw2cswk86nmj3gnygn3d07yq0sbmv2ylxbw8ri35yddjap6";
       libraryHaskellDepends = [ accelerate base lens linear ];
       homepage = "http://github.com/ekmett/linear-accelerate/";
       description = "Instances to use linear vector spaces on accelerate backends";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "list-t" = callPackage
    ({ mkDerivation, base-prelude, mmorph, monad-control, mtl
     , transformers, transformers-base
     }:
     mkDerivation {
       pname = "list-t";
       version = "0.4.5.1";
       sha256 = "0mf1dv0pcbc2sgnimjkhmivl32ivjck7arhkq679s1ba5hc6np3a";
       libraryHaskellDepends = [
         base-prelude mmorph monad-control mtl transformers
         transformers-base
       ];
       doCheck = false;
       homepage = "https://github.com/nikita-volkov/list-t";
       description = "ListT done right";
       license = stdenv.lib.licenses.mit;
     }) {};
  "loch-th" = callPackage
    ({ mkDerivation, base, pretty, template-haskell }:
     mkDerivation {
       pname = "loch-th";
       version = "0.2.1";
       sha256 = "1kfrjsgzq6wl749n2wm1fhwwigjxcd9lww7whiwjrbmhiz5ism3p";
       libraryHaskellDepends = [ base pretty template-haskell ];
       homepage = "https://github.com/liskin/loch-th";
       description = "Support for precise error locations in source files (Template Haskell version)";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "log-domain" = callPackage
    ({ mkDerivation, base, binary, bytes, cereal, comonad, deepseq
     , directory, distributive, doctest, filepath, generic-deriving
     , hashable, hashable-extras, safecopy, semigroupoids, semigroups
     , simple-reflect, vector
     }:
     mkDerivation {
       pname = "log-domain";
       version = "0.10.0.1";
       sha256 = "04k7k8p1p8fgzyms21ry4qf1l987k3pvs673sq9rh1h6hmk9bsg2";
       libraryHaskellDepends = [
         base binary bytes cereal comonad deepseq distributive
         generic-deriving hashable hashable-extras safecopy semigroupoids
         semigroups vector
       ];
       testHaskellDepends = [
         base directory doctest filepath generic-deriving semigroups
         simple-reflect
       ];
       homepage = "http://github.com/analytics/log-domain/";
       description = "Log-domain arithmetic";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "logict" = callPackage
    ({ mkDerivation, base, mtl }:
     mkDerivation {
       pname = "logict";
       version = "0.6.0.2";
       sha256 = "07hnirv6snnym2r7iijlfz00b60jpy2856zvqxh989q0in7bd0hi";
       libraryHaskellDepends = [ base mtl ];
       homepage = "http://code.haskell.org/~dolio/";
       description = "A backtracking logic-programming monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "loop" = callPackage
    ({ mkDerivation, base, criterion, hspec, mtl, random, vector }:
     mkDerivation {
       pname = "loop";
       version = "0.2.0";
       sha256 = "11ifqahlg9ky5klid1fhsyfvfb6w8yb0dsy43s0cxcmldbw3qv5x";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base hspec mtl ];
       benchmarkHaskellDepends = [ base criterion mtl random vector ];
       homepage = "https://github.com/nh2/loop";
       description = "Fast loops (for when GHC can't optimize forM_)";
       license = stdenv.lib.licenses.mit;
     }) {};
  "lrucache" = callPackage
    ({ mkDerivation, base, containers, contravariant }:
     mkDerivation {
       pname = "lrucache";
       version = "1.2.0.0";
       sha256 = "05knlckzx261yxbz38rqq8vy86zj1np0w2l32cnib6714vhaj5sz";
       libraryHaskellDepends = [ base containers contravariant ];
       homepage = "http://github.com/chowells79/lrucache";
       description = "a simple, pure LRU cache";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lucid" = callPackage
    ({ mkDerivation, base, bifunctors, blaze-builder, bytestring
     , containers, criterion, deepseq, hashable, hspec, HUnit, mtl
     , parsec, text, transformers, unordered-containers
     }:
     mkDerivation {
       pname = "lucid";
       version = "2.9.2";
       sha256 = "0r3bzh9pmcqsac5id064jcscn9x2pyfhpazdzvz0666smf4b9jah";
       revision = "1";
       editedCabalFile = "062jabgq1ngkhmk37njwpzfvxx6jzv2r3x77fyzbqvw4smhxbpk2";
       libraryHaskellDepends = [
         base blaze-builder bytestring containers hashable mtl text
         transformers unordered-containers
       ];
       testHaskellDepends = [
         base bifunctors hspec HUnit mtl parsec text
       ];
       benchmarkHaskellDepends = [
         base blaze-builder bytestring criterion deepseq text
       ];
       homepage = "https://github.com/chrisdone/lucid";
       description = "Clear to write, read and edit DSL for HTML";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lucid-svg" = callPackage
    ({ mkDerivation, base, blaze-builder, lucid, text, transformers }:
     mkDerivation {
       pname = "lucid-svg";
       version = "0.4.0.4";
       sha256 = "16clq3dvi7s08w9ddl8k205050lx9ma69050wyhv4nc5zhmjdq12";
       libraryHaskellDepends = [
         base blaze-builder lucid text transformers
       ];
       homepage = "http://github.com/jeffreyrosenbluth/lucid-svg.git";
       description = "DSL for SVG using lucid for HTML";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lzma-conduit" = callPackage
    ({ mkDerivation, base, bindings-DSL, bytestring, conduit, HUnit
     , lzma, QuickCheck, resourcet, test-framework, test-framework-hunit
     , test-framework-quickcheck2, transformers
     }:
     mkDerivation {
       pname = "lzma-conduit";
       version = "1.1.3";
       sha256 = "01pf7q56y4m377qcbfwdv767dhlvkhd4cs01bqcg9k667iy21fr4";
       libraryHaskellDepends = [
         base bindings-DSL bytestring conduit resourcet transformers
       ];
       librarySystemDepends = [ lzma ];
       testHaskellDepends = [
         base bytestring conduit HUnit QuickCheck resourcet test-framework
         test-framework-hunit test-framework-quickcheck2
       ];
       homepage = "http://github.com/alphaHeavy/lzma-conduit";
       description = "Conduit interface for lzma/xz compression";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) lzma;};
  "machines" = callPackage
    ({ mkDerivation, base, comonad, containers, directory, doctest
     , filepath, free, mtl, pointed, profunctors, semigroups
     , transformers, void
     }:
     mkDerivation {
       pname = "machines";
       version = "0.4.1";
       sha256 = "1wripnvpzfdnf7i2aygjyh33cp7srkb5638snwyn700bjbi2j7gb";
       revision = "2";
       editedCabalFile = "0afl8xydl9n29wysznrfwbx64y12243nnji6vzqvdarfwgv5h06i";
       libraryHaskellDepends = [
         base comonad containers free mtl pointed profunctors semigroups
         transformers void
       ];
       testHaskellDepends = [ base directory doctest filepath ];
       homepage = "http://github.com/ekmett/machines/";
       description = "Networked stream transducers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "machines-directory" = callPackage
    ({ mkDerivation, base, directory, filepath, machines, machines-io
     , transformers
     }:
     mkDerivation {
       pname = "machines-directory";
       version = "0.2.0.0";
       sha256 = "1b1jv23ijhm51nggxrncjhz24k4pl4nvj6s9h3jabr0gsnsb8y2v";
       libraryHaskellDepends = [
         base directory filepath machines machines-io transformers
       ];
       homepage = "http://github.com/aloiscochard/machines-io";
       description = "Directory (system) utilities for the machines library";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "machines-io" = callPackage
    ({ mkDerivation, base, bytestring, chunked-data, machines
     , transformers
     }:
     mkDerivation {
       pname = "machines-io";
       version = "0.2.0.0";
       sha256 = "0qjbfwyhscjmjbfj709kb9xr5p3yz4v21aq2g4dv1abqwgf85x03";
       libraryHaskellDepends = [
         base bytestring chunked-data machines transformers
       ];
       homepage = "http://github.com/aloiscochard/machines-io";
       description = "IO utilities for the machines library";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "machines-process" = callPackage
    ({ mkDerivation, base, chunked-data, machines, machines-io, process
     }:
     mkDerivation {
       pname = "machines-process";
       version = "0.2.0.0";
       sha256 = "028l6hijabrgnn5klm1bv35h2z2qmm1r49bj1bvvaffhn5fdpz7y";
       libraryHaskellDepends = [
         base chunked-data machines machines-io process
       ];
       homepage = "http://github.com/aloiscochard/machines-io";
       description = "Process (system) utilities for the machines library";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "mainland-pretty" = callPackage
    ({ mkDerivation, base, containers, srcloc, text }:
     mkDerivation {
       pname = "mainland-pretty";
       version = "0.2.7.2";
       sha256 = "0spn95apa05bx2akcl13kmg0vlyyakca3jx1960ja4z9dm9lwadd";
       revision = "1";
       editedCabalFile = "1rjyhj7l0044cscd8wrxn38rd17rwlywk5998wchj98pc9vfcrp7";
       libraryHaskellDepends = [ base containers srcloc text ];
       homepage = "http://www.cs.drexel.edu/~mainland/";
       description = "Pretty printing designed for printing source code";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "managed" = callPackage
    ({ mkDerivation, base, transformers }:
     mkDerivation {
       pname = "managed";
       version = "1.0.0";
       sha256 = "06nb71pd68m5l6a48sz5kkrdif74phbg3y6bn9ydd00y515b9gn5";
       revision = "1";
       editedCabalFile = "11hr1fzhhx6gpc3zxzqv1xya2wcclq114lxlzi36593cvamxg1g7";
       libraryHaskellDepends = [ base transformers ];
       description = "A monad for managed values";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mandrill" = callPackage
    ({ mkDerivation, aeson, base, base64-bytestring, blaze-html
     , bytestring, containers, email-validate, http-client
     , http-client-tls, http-types, lens, mtl, old-locale, QuickCheck
     , raw-strings-qq, tasty, tasty-hunit, tasty-quickcheck, text, time
     }:
     mkDerivation {
       pname = "mandrill";
       version = "0.2.1.0";
       sha256 = "0gmlf50hq9dh2xh74dvsyywrbrv7i31d6j7k4pgmfinn8pih03lz";
       libraryHaskellDepends = [
         aeson base base64-bytestring blaze-html bytestring containers
         email-validate http-client http-client-tls http-types lens mtl
         old-locale QuickCheck text time
       ];
       testHaskellDepends = [
         aeson base bytestring QuickCheck raw-strings-qq tasty tasty-hunit
         tasty-quickcheck text
       ];
       description = "Library for interfacing with the Mandrill JSON API";
       license = stdenv.lib.licenses.mit;
     }) {};
  "map-syntax" = callPackage
    ({ mkDerivation, base, containers, deepseq, HUnit, mtl, QuickCheck
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , transformers
     }:
     mkDerivation {
       pname = "map-syntax";
       version = "0.2";
       sha256 = "02v1dvq86qzbfbwbza4myj3a6a6a5p059fi5m3g548hmqk3v2p1r";
       libraryHaskellDepends = [ base containers mtl ];
       testHaskellDepends = [
         base containers deepseq HUnit mtl QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2 transformers
       ];
       description = "Syntax sugar for defining maps";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "markdown" = callPackage
    ({ mkDerivation, attoparsec, base, blaze-html, blaze-markup
     , conduit, conduit-extra, containers, data-default, hspec
     , system-fileio, system-filepath, text, transformers, xss-sanitize
     }:
     mkDerivation {
       pname = "markdown";
       version = "0.1.13.1";
       sha256 = "0b10cvz5yryzrzfg2j0pikhfxcly7x4hfmjwnwycs4hy97h2rdnq";
       libraryHaskellDepends = [
         attoparsec base blaze-html blaze-markup conduit conduit-extra
         containers data-default text transformers xss-sanitize
       ];
       testHaskellDepends = [
         base blaze-html conduit conduit-extra containers hspec
         system-fileio system-filepath text transformers
       ];
       homepage = "https://github.com/snoyberg/markdown";
       description = "Convert Markdown to HTML, with XSS protection";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "markdown-unlit" = callPackage
    ({ mkDerivation, base, directory, hspec, QuickCheck, silently
     , stringbuilder
     }:
     mkDerivation {
       pname = "markdown-unlit";
       version = "0.2.0.1";
       sha256 = "1bc3vcifv2xcddh8liq380c6sxarrs5pf21pfs9i4dx9rfl3hvhq";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base ];
       executableHaskellDepends = [ base ];
       testHaskellDepends = [
         base directory hspec QuickCheck silently stringbuilder
       ];
       description = "Literate Haskell support for Markdown";
       license = stdenv.lib.licenses.mit;
     }) {};
  "math-functions" = callPackage
    ({ mkDerivation, base, deepseq, erf, HUnit, ieee754, QuickCheck
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , vector, vector-th-unbox
     }:
     mkDerivation {
       pname = "math-functions";
       version = "0.1.5.2";
       sha256 = "12cznf7gwia1ki7xhvlhk5p8d09zrdvfgn07pkp4sfrwsc4vijcy";
       revision = "1";
       editedCabalFile = "1zb582xpxpybfvxnivkf7l4mr2sbds4673h89gb1slqxgq7haary";
       libraryHaskellDepends = [
         base deepseq erf vector vector-th-unbox
       ];
       testHaskellDepends = [
         base HUnit ieee754 QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2 vector
       ];
       doCheck = false;
       homepage = "https://github.com/bos/math-functions";
       description = "Special functions and Chebyshev polynomials";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "matrix" = callPackage
    ({ mkDerivation, base, criterion, deepseq, loop, primitive
     , QuickCheck, tasty, tasty-quickcheck, vector
     }:
     mkDerivation {
       pname = "matrix";
       version = "0.3.4.3";
       sha256 = "1nshgxiza384xh7h22qgbwa75bylc1l3gh6dsm51axapr1ldi8gg";
       revision = "1";
       editedCabalFile = "1kjsri0bs8a8j1s0g8xc9i0j5g5amnkbil1n0j522ybjkkcak1pm";
       libraryHaskellDepends = [ base deepseq loop primitive vector ];
       testHaskellDepends = [ base QuickCheck tasty tasty-quickcheck ];
       benchmarkHaskellDepends = [ base criterion ];
       description = "A native implementation of matrix operations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "maximal-cliques" = callPackage
    ({ mkDerivation, base, containers, vector }:
     mkDerivation {
       pname = "maximal-cliques";
       version = "0.1.1";
       sha256 = "1sbmykgb5lrd32rih09d8d0r5isz4nh5slfyd93dgln7ag3hb7bh";
       libraryHaskellDepends = [ base containers vector ];
       description = "Enumerate all maximal cliques of a graph";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mbox" = callPackage
    ({ mkDerivation, base, safe, text, time, time-locale-compat }:
     mkDerivation {
       pname = "mbox";
       version = "0.3.1";
       sha256 = "13hq6h280wbc9xwbvdcq4qqrhbjnnzg824lk4zxkh4bvqpabjwni";
       revision = "1";
       editedCabalFile = "1cxbi3a5i3p2fw20f0gi17cag7q4h6n284hsmkgml6imc6fq379x";
       libraryHaskellDepends = [ base safe text time time-locale-compat ];
       description = "Read and write standard mailbox files";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mersenne-random-pure64" = callPackage
    ({ mkDerivation, base, old-time, random }:
     mkDerivation {
       pname = "mersenne-random-pure64";
       version = "0.2.0.4";
       sha256 = "0qh72ynfg1k4c70qxdzsa6f1x9wyxil2d9gi85c879wrc41k899h";
       configureFlags = [ "-f-small_base" ];
       libraryHaskellDepends = [ base old-time random ];
       homepage = "http://code.haskell.org/~dons/code/mersenne-random-pure64/";
       description = "Generate high quality pseudorandom numbers purely using a Mersenne Twister";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "messagepack" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, cereal, containers
     , QuickCheck, test-framework, test-framework-quickcheck2
     , test-framework-th, text
     }:
     mkDerivation {
       pname = "messagepack";
       version = "0.3.0";
       sha256 = "1icl40fh9glzr105aha3971gnbnzw528sgdia8kwlj751v3nnpa0";
       libraryHaskellDepends = [
         attoparsec base bytestring cereal containers text
       ];
       testHaskellDepends = [
         base bytestring cereal containers QuickCheck test-framework
         test-framework-quickcheck2 test-framework-th text
       ];
       homepage = "https://github.com/rodrigosetti/messagepack";
       description = "Serialize instance for Message Pack Object";
       license = stdenv.lib.licenses.mit;
     }) {};
  "messagepack-rpc" = callPackage
    ({ mkDerivation, base, bytestring, cereal, containers, messagepack
     , network-simple, text
     }:
     mkDerivation {
       pname = "messagepack-rpc";
       version = "0.1.0.3";
       sha256 = "0g9lj3fb81gng3z4kdikwa9vgz73hjdqygzhcqd8fphcynv8j6m1";
       libraryHaskellDepends = [
         base bytestring cereal containers messagepack network-simple text
       ];
       homepage = "http://github.com/rodrigosetti/messagepack-rpc";
       description = "Message Pack RPC over TCP";
       license = stdenv.lib.licenses.mit;
     }) {};
  "mime-mail" = callPackage
    ({ mkDerivation, base, base64-bytestring, blaze-builder, bytestring
     , filepath, hspec, process, random, text
     }:
     mkDerivation {
       pname = "mime-mail";
       version = "0.4.8.2";
       sha256 = "19f2q4x8b19sc7y1yyxvl3fsyggjs07yhf1zjw42a875lp4mnvia";
       libraryHaskellDepends = [
         base base64-bytestring blaze-builder bytestring filepath process
         random text
       ];
       testHaskellDepends = [ base blaze-builder bytestring hspec text ];
       homepage = "http://github.com/snoyberg/mime-mail";
       description = "Compose MIME email messages";
       license = stdenv.lib.licenses.mit;
     }) {};
  "mime-mail-ses" = callPackage
    ({ mkDerivation, base, base64-bytestring, byteable, bytestring
     , conduit, cryptohash, http-client, http-conduit, http-types
     , mime-mail, old-locale, text, time, transformers, xml-conduit
     , xml-types
     }:
     mkDerivation {
       pname = "mime-mail-ses";
       version = "0.3.2.2";
       sha256 = "1dzlfrpqw3bdqkwgp5i52azkp8lv2cgvrdvl1w39q484ra4by2y1";
       libraryHaskellDepends = [
         base base64-bytestring byteable bytestring conduit cryptohash
         http-client http-conduit http-types mime-mail old-locale text time
         transformers xml-conduit xml-types
       ];
       homepage = "http://github.com/snoyberg/mime-mail";
       description = "Send mime-mail messages via Amazon SES";
       license = stdenv.lib.licenses.mit;
     }) {};
  "mime-types" = callPackage
    ({ mkDerivation, base, bytestring, containers, text }:
     mkDerivation {
       pname = "mime-types";
       version = "0.1.0.6";
       sha256 = "090z3dp928243amnc6s8g10rk2h2bprk9y138q6wj3cpflzr72pw";
       libraryHaskellDepends = [ base bytestring containers text ];
       homepage = "https://github.com/yesodweb/wai";
       description = "Basic mime-type handling types and functions";
       license = stdenv.lib.licenses.mit;
     }) {};
  "missing-foreign" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "missing-foreign";
       version = "0.1.1";
       sha256 = "11f8pknbarlj956nmalqhd2v704z7d7xbi61hs1q8vb2p36kc6wy";
       libraryHaskellDepends = [ base ];
       description = "Convenience functions for FFI work";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mmap" = callPackage
    ({ mkDerivation, base, bytestring }:
     mkDerivation {
       pname = "mmap";
       version = "0.5.9";
       sha256 = "1y5mk3yf4b8r6rzmlx1xqn4skaigrqnv08sqq0v7r3nbw42bpz2q";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base bytestring ];
       description = "Memory mapped files for POSIX and Windows";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mmorph" = callPackage
    ({ mkDerivation, base, transformers }:
     mkDerivation {
       pname = "mmorph";
       version = "1.0.4";
       sha256 = "0k5zlzmnixfwcjrqvhgi3i6xg532b0gsjvc39v5jigw69idndqr2";
       libraryHaskellDepends = [ base transformers ];
       description = "Monad morphisms";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monad-control" = callPackage
    ({ mkDerivation, base, stm, transformers, transformers-base
     , transformers-compat
     }:
     mkDerivation {
       pname = "monad-control";
       version = "1.0.0.4";
       sha256 = "07pn1p4m80wdd7gw62s4yny8rbvm60ka1q8qx5y1plznd8sbg179";
       revision = "1";
       editedCabalFile = "0xkygk21ag34v6jjiv6ad5b5lj6mnx0w9q7gzbhdbc2l6gmgpwrd";
       libraryHaskellDepends = [
         base stm transformers transformers-base transformers-compat
       ];
       homepage = "https://github.com/basvandijk/monad-control";
       description = "Lift control operations, like exception catching, through monad transformers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monad-coroutine" = callPackage
    ({ mkDerivation, base, monad-parallel, transformers
     , transformers-compat
     }:
     mkDerivation {
       pname = "monad-coroutine";
       version = "0.9.0.1";
       sha256 = "10b98w0xr7hbnawfz93qqkbcpvklgkpljxmv9drr40bd9bv33wij";
       libraryHaskellDepends = [
         base monad-parallel transformers transformers-compat
       ];
       homepage = "http://trac.haskell.org/SCC/wiki/monad-coroutine";
       description = "Coroutine monad transformer for suspending and resuming monadic computations";
       license = "GPL";
     }) {};
  "monad-journal" = callPackage
    ({ mkDerivation, base, either, monad-control, mtl, transformers
     , transformers-base
     }:
     mkDerivation {
       pname = "monad-journal";
       version = "0.7";
       sha256 = "1bfm5p027vf8dz92m6s47z06h05j2jv4pbwkl31svrz5pi5a9lz2";
       libraryHaskellDepends = [
         base either monad-control mtl transformers transformers-base
       ];
       homepage = "http://github.com/phaazon/monad-journal";
       description = "Pure logger typeclass and monad transformer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monad-logger" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring, conduit
     , conduit-extra, exceptions, fast-logger, lifted-base
     , monad-control, monad-loops, mtl, resourcet, stm, stm-chans
     , template-haskell, text, transformers, transformers-base
     , transformers-compat
     }:
     mkDerivation {
       pname = "monad-logger";
       version = "0.3.13.1";
       sha256 = "0mwdihxly22axrjs9g741zab2yyrm6zy73di99m7lvg8jdj4m2r6";
       libraryHaskellDepends = [
         base blaze-builder bytestring conduit conduit-extra exceptions
         fast-logger lifted-base monad-control monad-loops mtl resourcet stm
         stm-chans template-haskell text transformers transformers-base
         transformers-compat
       ];
       homepage = "https://github.com/kazu-yamamoto/logger";
       description = "A class of monads which can log messages";
       license = stdenv.lib.licenses.mit;
     }) {};
  "monad-logger-json" = callPackage
    ({ mkDerivation, aeson, base, monad-logger, template-haskell, text
     }:
     mkDerivation {
       pname = "monad-logger-json";
       version = "0.1.0.0";
       sha256 = "1ap98487lwgvgrrxkjskga86ckbv6rhn2n6pzp403343xx51r1qh";
       libraryHaskellDepends = [
         aeson base monad-logger template-haskell text
       ];
       homepage = "http://github.com/fpco/monad-logger-json";
       description = "JSON-friendly Logging APIs";
       license = stdenv.lib.licenses.mit;
     }) {};
  "monad-logger-syslog" = callPackage
    ({ mkDerivation, base, bytestring, fast-logger, hsyslog
     , monad-logger, text, transformers
     }:
     mkDerivation {
       pname = "monad-logger-syslog";
       version = "0.1.1.1";
       sha256 = "0hdm495knrdrl76xlsdp0sk6n0v6qnl9b6r6x9ac6s1p7j1w66vf";
       libraryHaskellDepends = [
         base bytestring fast-logger hsyslog monad-logger text transformers
       ];
       homepage = "https://github.com/fpco/monad-logger-syslog";
       description = "syslog output for monad-logger";
       license = stdenv.lib.licenses.mit;
     }) {};
  "monad-loops" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "monad-loops";
       version = "0.4.2.1";
       sha256 = "1dprwndc0bxzpmrkj1xb9kzjrg3i06zsg43yaabn5x5gcaj8is56";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/mokus0/monad-loops";
       description = "Monadic loops";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "monad-par" = callPackage
    ({ mkDerivation, abstract-deque, abstract-par, array, base
     , containers, deepseq, HUnit, monad-par-extras, mtl, mwc-random
     , parallel, QuickCheck, test-framework, test-framework-hunit
     , test-framework-quickcheck2, test-framework-th, time
     }:
     mkDerivation {
       pname = "monad-par";
       version = "0.3.4.7";
       sha256 = "12n27hs274nrfkpa6hx0gdkrc76wxzliqf53x6689idl363sdf13";
       libraryHaskellDepends = [
         abstract-deque abstract-par array base containers deepseq
         monad-par-extras mtl mwc-random parallel
       ];
       testHaskellDepends = [
         abstract-deque abstract-par array base containers deepseq HUnit
         monad-par-extras mtl mwc-random QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2 test-framework-th
         time
       ];
       homepage = "https://github.com/simonmar/monad-par";
       description = "A library for parallel programming based on a monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monad-par-extras" = callPackage
    ({ mkDerivation, abstract-par, base, cereal, deepseq, mtl, random
     , transformers
     }:
     mkDerivation {
       pname = "monad-par-extras";
       version = "0.3.3";
       sha256 = "0bl4bd6jzdc5zm20q1g67ppkfh6j6yn8fwj6msjayj621cck67p2";
       libraryHaskellDepends = [
         abstract-par base cereal deepseq mtl random transformers
       ];
       homepage = "https://github.com/simonmar/monad-par";
       description = "Combinators and extra features for Par monads";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monad-parallel" = callPackage
    ({ mkDerivation, base, parallel, transformers, transformers-compat
     }:
     mkDerivation {
       pname = "monad-parallel";
       version = "0.7.1.4";
       sha256 = "01sadhl3kv7gsx1m90fb76n2xh7b9awjc9071gzn0ab26d67a98b";
       libraryHaskellDepends = [
         base parallel transformers transformers-compat
       ];
       homepage = "http://trac.haskell.org/SCC/wiki/monad-parallel";
       description = "Parallel execution of monadic computations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monad-primitive" = callPackage
    ({ mkDerivation, base, primitive, transformers }:
     mkDerivation {
       pname = "monad-primitive";
       version = "0.1";
       sha256 = "1vi6g65hdyq5vq78mfag0qljxgzb6vq83m82x3cpgjl7dr9k5h1x";
       libraryHaskellDepends = [ base primitive transformers ];
       homepage = "http://bitbucket.org/Shimuuar/monad-primitive";
       description = "Type class for monad transformers stack with pirimitive base monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monad-products" = callPackage
    ({ mkDerivation, base, semigroupoids }:
     mkDerivation {
       pname = "monad-products";
       version = "4.0.0.1";
       sha256 = "017cxiavxfw0f08sr0d6m3avla1lplmdj51rxpf1103ripq20r53";
       revision = "1";
       editedCabalFile = "03kif3rrx24a5xj83jk1rqz6pypsfyvrjb1558ziy26k1aphfkgv";
       libraryHaskellDepends = [ base semigroupoids ];
       homepage = "http://github.com/ekmett/monad-products";
       description = "Monad products";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monad-st" = callPackage
    ({ mkDerivation, base, transformers }:
     mkDerivation {
       pname = "monad-st";
       version = "0.2.4";
       sha256 = "1j67s07p5lsr81cjl0ch5d1q7zarmpak5kmnwckhavihg3l5m3bi";
       libraryHaskellDepends = [ base transformers ];
       homepage = "http://github.com/ekmett/monad-st";
       description = "Provides a MonadST class";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monadLib" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "monadLib";
       version = "3.7.3";
       sha256 = "17m9rj6spr5n9jlhwwvk8p40yrpwgz3j9kj3pjq7mpyrc1ssfd0q";
       libraryHaskellDepends = [ base ];
       homepage = "http://wiki.github.com/yav/monadlib";
       description = "A collection of monad transformers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monadcryptorandom" = callPackage
    ({ mkDerivation, base, bytestring, crypto-api, mtl, tagged
     , transformers
     }:
     mkDerivation {
       pname = "monadcryptorandom";
       version = "0.6.1";
       sha256 = "0j99j0f2qwhslimfgslsdlv0xihsddas3i69pfnjwnsd9zg5pgj2";
       libraryHaskellDepends = [
         base bytestring crypto-api mtl tagged transformers
       ];
       homepage = "https://github.com/TomMD/monadcryptorandom";
       description = "A monad for using CryptoRandomGen";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monadic-arrays" = callPackage
    ({ mkDerivation, array, base, stm, transformers }:
     mkDerivation {
       pname = "monadic-arrays";
       version = "0.2.1.4";
       sha256 = "1vlqh0mqfkg1f47dhl5lw49b7xawlbyjmq7xpmmf16q3idxnkahh";
       libraryHaskellDepends = [ array base stm transformers ];
       homepage = "http://github.com/ekmett/monadic-arrays/";
       description = "Boxed and unboxed arrays for monad transformers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monadloc" = callPackage
    ({ mkDerivation, base, template-haskell, transformers }:
     mkDerivation {
       pname = "monadloc";
       version = "0.7.1";
       sha256 = "1a773nysrsj61ka7bdacb0i7dxlgb1fjz3x5w9c1w1dv7rmhynmj";
       libraryHaskellDepends = [ base template-haskell transformers ];
       homepage = "http://github.com/pepeiborra/monadloc";
       description = "A class for monads which can keep a monadic call trace";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "monads-tf" = callPackage
    ({ mkDerivation, base, transformers }:
     mkDerivation {
       pname = "monads-tf";
       version = "0.1.0.2";
       sha256 = "0z07z2lfm3l93fx0qhfd98j76d1rksi5llq67l5v09pm8da4jvyb";
       libraryHaskellDepends = [ base transformers ];
       description = "Monad classes, using type families";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mongoDB" = callPackage
    ({ mkDerivation, array, base, binary, bson, bytestring, containers
     , cryptohash, hashtables, hspec, lifted-base, monad-control, mtl
     , network, old-locale, parsec, random, random-shuffle, text, time
     , transformers-base
     }:
     mkDerivation {
       pname = "mongoDB";
       version = "2.0.4";
       sha256 = "1gcv2vzmg6vllvpl8pzfkwmf4rqwldz4p0l4gl78hixbbilx0pgy";
       libraryHaskellDepends = [
         array base binary bson bytestring containers cryptohash hashtables
         lifted-base monad-control mtl network parsec random random-shuffle
         text transformers-base
       ];
       testHaskellDepends = [ base hspec mtl old-locale time ];
       homepage = "https://github.com/mongodb-haskell/mongodb";
       description = "Driver (client) for MongoDB, a free, scalable, fast, document DBMS";
       license = "unknown";
     }) {};
  "mono-traversable" = callPackage
    ({ mkDerivation, base, bytestring, comonad, containers, criterion
     , dlist, dlist-instances, foldl, hashable, hspec, HUnit, mwc-random
     , QuickCheck, semigroupoids, semigroups, text, transformers
     , unordered-containers, vector, vector-algorithms, vector-instances
     }:
     mkDerivation {
       pname = "mono-traversable";
       version = "0.9.1";
       sha256 = "0hzqlldilkkfmrq3pkymwkzpp9dn40v6fa18kahxlf4qiyih0xzc";
       revision = "2";
       editedCabalFile = "1hy0bc30jbxhnfqsacklpd5swrsvplf575ypd6va9zr9140hl8ll";
       libraryHaskellDepends = [
         base bytestring comonad containers dlist dlist-instances hashable
         semigroupoids semigroups text transformers unordered-containers
         vector vector-algorithms vector-instances
       ];
       testHaskellDepends = [
         base bytestring containers foldl hspec HUnit QuickCheck semigroups
         text transformers unordered-containers vector
       ];
       benchmarkHaskellDepends = [ base criterion mwc-random vector ];
       homepage = "https://github.com/snoyberg/mono-traversable";
       description = "Type classes for mapping, folding, and traversing monomorphic containers";
       license = stdenv.lib.licenses.mit;
     }) {};
  "monoid-extras" = callPackage
    ({ mkDerivation, base, groups, semigroupoids, semigroups }:
     mkDerivation {
       pname = "monoid-extras";
       version = "0.3.3.5";
       sha256 = "07xll4pz0ijjxj75z0s0bz1lia2f65hsm61snlx0jv3aybrnw280";
       libraryHaskellDepends = [ base groups semigroupoids semigroups ];
       description = "Various extra monoid-related definitions and utilities";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monoid-subclasses" = callPackage
    ({ mkDerivation, base, bytestring, containers, primes, QuickCheck
     , quickcheck-instances, tasty, tasty-quickcheck, text, vector
     }:
     mkDerivation {
       pname = "monoid-subclasses";
       version = "0.4.0.4";
       sha256 = "1wg5yx49gx8j9hxcr3mp3pq40wqpwhh4cccsg7m2fgdnangxd6rh";
       revision = "1";
       editedCabalFile = "1k7c6c65yckgzrmgzzjwyarq7cxqgxm33d8iqp5r5r2qx249fqaf";
       libraryHaskellDepends = [
         base bytestring containers primes text vector
       ];
       testHaskellDepends = [
         base bytestring containers primes QuickCheck quickcheck-instances
         tasty tasty-quickcheck text vector
       ];
       homepage = "https://github.com/blamario/monoid-subclasses/";
       description = "Subclasses of Monoid";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mtl" = callPackage
    ({ mkDerivation, base, transformers }:
     mkDerivation {
       pname = "mtl";
       version = "2.1.3.1";
       sha256 = "1xpn2wjmqbh2cg1yssc6749xpgcqlrrg4iilwqgkcjgvaxlpdbvp";
       libraryHaskellDepends = [ base transformers ];
       homepage = "http://github.com/ekmett/mtl";
       description = "Monad classes, using functional dependencies";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mtl-compat" = callPackage
    ({ mkDerivation, base, mtl, transformers-compat }:
     mkDerivation {
       pname = "mtl-compat";
       version = "0.2.1.3";
       sha256 = "15388p9ybdn6digk6cpdsw6havd0yva8vvwl3p7fnc9sb59wln34";
       revision = "3";
       editedCabalFile = "0igfsrc7q326ggvw47xwq1xffa4r225akla0nwgmqhd7y1n5753c";
       configureFlags = [ "-ftwo-point-one" "-f-two-point-two" ];
       libraryHaskellDepends = [ base mtl transformers-compat ];
       homepage = "https://github.com/haskell-compat/mtl-compat";
       description = "Backported Control.Monad.Except module from mtl";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mtl-prelude" = callPackage
    ({ mkDerivation, base, mtl, transformers }:
     mkDerivation {
       pname = "mtl-prelude";
       version = "1.0.3";
       sha256 = "1qr0bwcg9rlj53gbnji969s86qh8laaiibkfy2msziqnp011108x";
       libraryHaskellDepends = [ base mtl transformers ];
       doCheck = false;
       homepage = "https://github.com/nikita-volkov/mtl-prelude";
       description = "Reexports of most definitions from \"mtl\" and \"transformers\"";
       license = stdenv.lib.licenses.mit;
     }) {};
  "mtlparse" = callPackage
    ({ mkDerivation, base, mtl }:
     mkDerivation {
       pname = "mtlparse";
       version = "0.1.4.0";
       sha256 = "1fl5rvmgk37bqgjzs3c2wh80pfhr0i4yakxbsaryg7piws7j6ygc";
       libraryHaskellDepends = [ base mtl ];
       homepage = "http://homepage3.nifty.com/salamander/second/projects/mtlparse/";
       description = "parse library using mtl package";
       license = "LGPL";
     }) {};
  "multiarg" = callPackage
    ({ mkDerivation, base, QuickCheck, tasty, tasty-quickcheck
     , tasty-th
     }:
     mkDerivation {
       pname = "multiarg";
       version = "0.30.0.8";
       sha256 = "18lq0q76a4vx5r28wrxwa3cb2gdx6hv8vylkky07dqccqgxdg5ss";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [
         base QuickCheck tasty tasty-quickcheck tasty-th
       ];
       homepage = "https://github.com/massysett/multiarg";
       description = "Command lines for options that take multiple arguments";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "multimap" = callPackage
    ({ mkDerivation, base, containers }:
     mkDerivation {
       pname = "multimap";
       version = "1.2.1";
       sha256 = "0d3l5q4yvmywl6i9ip96zz0fvhjdh00mfbbniphbjxsi8wlwack3";
       libraryHaskellDepends = [ base containers ];
       homepage = "http://hub.darcs.net/scravy/multimap";
       description = "A multimap";
       license = stdenv.lib.licenses.mit;
     }) {};
  "multipart" = callPackage
    ({ mkDerivation, base, bytestring, parsec }:
     mkDerivation {
       pname = "multipart";
       version = "0.1.2";
       sha256 = "0g04jhyw1ib1s7c9bcldyyn4n90qd9x7dmvic4vgq57bgcqgnhz5";
       libraryHaskellDepends = [ base bytestring parsec ];
       homepage = "http://www.github.com/silkapp/multipart";
       description = "HTTP multipart split out of the cgi package";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mutable-containers" = callPackage
    ({ mkDerivation, base, containers, criterion, ghc-prim, hspec
     , mono-traversable, primitive, QuickCheck, vector
     }:
     mkDerivation {
       pname = "mutable-containers";
       version = "0.3.0";
       sha256 = "1xsz214z5z1qrl5xy5gyq97bsh8b1li3kaz7cp6zm955bz43rv6c";
       revision = "1";
       editedCabalFile = "10wn8dlj9ychaz8bby03z5z6phf2bb734723zwmdj6b7cl38z5x2";
       libraryHaskellDepends = [
         base containers ghc-prim mono-traversable primitive vector
       ];
       testHaskellDepends = [
         base containers hspec primitive QuickCheck vector
       ];
       benchmarkHaskellDepends = [ base containers criterion ];
       homepage = "https://github.com/fpco/mutable-containers";
       description = "Abstactions and concrete implementations of mutable containers";
       license = stdenv.lib.licenses.mit;
     }) {};
  "mwc-random" = callPackage
    ({ mkDerivation, base, HUnit, primitive, QuickCheck, statistics
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , time, vector
     }:
     mkDerivation {
       pname = "mwc-random";
       version = "0.13.3.2";
       sha256 = "01jqmq52knlwskgyx7940c81dmgdivrj0sbi2h6l0ccbxiaf7c9c";
       libraryHaskellDepends = [ base primitive time vector ];
       testHaskellDepends = [
         base HUnit QuickCheck statistics test-framework
         test-framework-hunit test-framework-quickcheck2 vector
       ];
       homepage = "https://github.com/bos/mwc-random";
       description = "Fast, high quality pseudo random number generation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mysql" = callPackage
    ({ mkDerivation, base, bytestring, containers, mysql }:
     mkDerivation {
       pname = "mysql";
       version = "0.1.1.8";
       sha256 = "115xz4khg4klrgjvv9dy83pv197b4y1zgw6fbpv8j88yr3qjmw4h";
       revision = "1";
       editedCabalFile = "02znpf0s1sjyxd3kyw52nd3702mdl907i9vnb4dbsrfsx5hz3c10";
       libraryHaskellDepends = [ base bytestring containers ];
       librarySystemDepends = [ mysql ];
       homepage = "https://github.com/paul-rouse/mysql";
       description = "A low-level MySQL client library";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) mysql;};
  "mysql-simple" = callPackage
    ({ mkDerivation, attoparsec, base, base16-bytestring, blaze-builder
     , blaze-textual, bytestring, mysql, old-locale, pcre-light, text
     , time
     }:
     mkDerivation {
       pname = "mysql-simple";
       version = "0.2.2.5";
       sha256 = "132igmgrgkpc0g9063d593ha3iv40k5dd017nlb07sz0qs9hi8w6";
       revision = "2";
       editedCabalFile = "1x0bfmf9czb3av9m16b1n024ic9j496g67hmbja7y8piah6fq3q0";
       libraryHaskellDepends = [
         attoparsec base base16-bytestring blaze-builder blaze-textual
         bytestring mysql old-locale pcre-light text time
       ];
       homepage = "https://github.com/paul-rouse/mysql-simple";
       description = "A mid-level MySQL client library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "nanospec" = callPackage
    ({ mkDerivation, base, hspec, silently }:
     mkDerivation {
       pname = "nanospec";
       version = "0.2.0";
       sha256 = "0g10l86cv33r58zxn2bprqlm80i7g86bwzhn9jqg9s81xc0aw2qv";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base hspec silently ];
       description = "A lightweight implementation of a subset of Hspec's API";
       license = stdenv.lib.licenses.mit;
     }) {};
  "nats" = callPackage
    ({ mkDerivation, base, hashable }:
     mkDerivation {
       pname = "nats";
       version = "1";
       sha256 = "0r6s8l4s0yq3x2crrkv0b8zac13magfasr9v8hnq6rn1icsfhic0";
       revision = "1";
       editedCabalFile = "0wjbskzx423pq0lv1j66913xgrp7s1i9bn7b60qvcvi9g7l96bpa";
       libraryHaskellDepends = [ base hashable ];
       homepage = "http://github.com/ekmett/nats/";
       description = "Natural numbers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "neat-interpolation" = callPackage
    ({ mkDerivation, base, base-prelude, parsec, template-haskell }:
     mkDerivation {
       pname = "neat-interpolation";
       version = "0.2.2";
       sha256 = "0hjv33gpikfiwfhzna35bxiqh62d54776d3ahfb98dxfrjijl20c";
       libraryHaskellDepends = [
         base base-prelude parsec template-haskell
       ];
       doCheck = false;
       homepage = "https://github.com/nikita-volkov/neat-interpolation";
       description = "A quasiquoter for neat and simple multiline text interpolation";
       license = stdenv.lib.licenses.mit;
     }) {};
  "nettle" = callPackage
    ({ mkDerivation, array, base, byteable, bytestring
     , crypto-cipher-tests, crypto-cipher-types, HUnit, nettle
     , QuickCheck, securemem, tagged, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "nettle";
       version = "0.1.0";
       sha256 = "1ms96laa9d2ns39ymw6mlwm0mj03vss7855cs9npymhb4fmqkcas";
       libraryHaskellDepends = [
         base byteable bytestring crypto-cipher-types securemem tagged
       ];
       libraryPkgconfigDepends = [ nettle ];
       testHaskellDepends = [
         array base bytestring crypto-cipher-tests crypto-cipher-types HUnit
         QuickCheck tagged test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       doCheck = false;
       homepage = "https://github.com/stbuehler/haskell-nettle";
       description = "safe nettle binding";
       license = stdenv.lib.licenses.mit;
     }) {inherit (pkgs) nettle;};
  "network" = callPackage
    ({ mkDerivation, base, bytestring, HUnit, test-framework
     , test-framework-hunit, unix
     }:
     mkDerivation {
       pname = "network";
       version = "2.6.0.2";
       sha256 = "12b7saam5ga6l4cplgkad49xa4vkynz2ri9jxidx1cxiqjcl0vc4";
       libraryHaskellDepends = [ base bytestring unix ];
       testHaskellDepends = [
         base bytestring HUnit test-framework test-framework-hunit
       ];
       doCheck = false;
       homepage = "https://github.com/haskell/network";
       description = "Low-level networking interface";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "network-anonymous-i2p" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, exceptions, hspec
     , hspec-attoparsec, hspec-expectations, mtl, network
     , network-attoparsec, network-simple, text, transformers, uuid
     }:
     mkDerivation {
       pname = "network-anonymous-i2p";
       version = "0.10.0";
       sha256 = "0b7z7w105l1yd3xpnnl2z779m5zknf756cslksbbpsy16rn7kxfg";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         attoparsec base bytestring exceptions mtl network
         network-attoparsec network-simple text transformers uuid
       ];
       testHaskellDepends = [
         attoparsec base bytestring exceptions hspec hspec-attoparsec
         hspec-expectations mtl network network-simple transformers uuid
       ];
       doCheck = false;
       homepage = "http://github.com/solatis/haskell-network-anonymous-i2p";
       description = "Haskell API for I2P anonymous networking";
       license = stdenv.lib.licenses.mit;
     }) {};
  "network-attoparsec" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, enclosed-exceptions
     , exceptions, hspec, lifted-base, monad-control, mtl, network
     , network-simple, transformers
     }:
     mkDerivation {
       pname = "network-attoparsec";
       version = "0.12.2";
       sha256 = "1w08py367mmwfg5lff6y9s6hdpg1nbjf7v6vv9s19aw6saxak44p";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         attoparsec base bytestring enclosed-exceptions exceptions
         lifted-base monad-control mtl network transformers
       ];
       testHaskellDepends = [
         attoparsec base bytestring exceptions hspec mtl network
         network-simple transformers
       ];
       homepage = "http://github.com/solatis/haskell-network-attoparsec";
       description = "Utility functions for running a parser against a socket";
       license = stdenv.lib.licenses.mit;
     }) {};
  "network-conduit" = callPackage
    ({ mkDerivation, base, conduit }:
     mkDerivation {
       pname = "network-conduit";
       version = "1.1.0";
       sha256 = "06amxl8rg4zfnmgc1iyq5mxy9qihcqddqgqkbfvaf25mwr43992p";
       libraryHaskellDepends = [ base conduit ];
       doHaddock = false;
       homepage = "http://github.com/snoyberg/conduit";
       description = "Stream socket data using conduits. (deprecated)";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "network-conduit-tls" = callPackage
    ({ mkDerivation, base, bytestring, conduit, conduit-extra
     , connection, cprng-aes, data-default, HUnit, monad-control, mtl
     , network, streaming-commons, system-fileio, system-filepath, tls
     , transformers
     }:
     mkDerivation {
       pname = "network-conduit-tls";
       version = "1.1.2";
       sha256 = "0y3cqvakc676xdzc1hg9afv6aqzvj2pp4pci6cgs4bmm3kc3chfs";
       revision = "1";
       editedCabalFile = "119bhrbwb41iz5wrh4bmrc9qkxgvgab5zsdq8vma6sk43pjcbi34";
       libraryHaskellDepends = [
         base bytestring conduit conduit-extra connection cprng-aes
         data-default monad-control network streaming-commons system-fileio
         system-filepath tls transformers
       ];
       testHaskellDepends = [
         base bytestring conduit conduit-extra connection HUnit mtl
       ];
       homepage = "https://github.com/snoyberg/conduit";
       description = "Create TLS-aware network code with conduits";
       license = stdenv.lib.licenses.mit;
     }) {};
  "network-info" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "network-info";
       version = "0.2.0.5";
       sha256 = "0ggxnkjkbspynma0wjrc1wwwb9ygx2dhl0n9lfaq7l8r69z7pqwf";
       libraryHaskellDepends = [ base ];
       homepage = "http://github.com/jystic/network-info";
       description = "Access the local computer's basic network configuration";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "network-multicast" = callPackage
    ({ mkDerivation, base, network }:
     mkDerivation {
       pname = "network-multicast";
       version = "0.0.11";
       sha256 = "0fgscv9crk2lx99rh234ipgl5psbrjili95inxj23drvwmsj3135";
       libraryHaskellDepends = [ base network ];
       description = "Simple multicast library";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "network-simple" = callPackage
    ({ mkDerivation, base, bytestring, exceptions, network
     , transformers
     }:
     mkDerivation {
       pname = "network-simple";
       version = "0.4.0.4";
       sha256 = "0qa3ax29ci7m01af0d2rvnx9m24q1d9zw727bzhc88k2g6k2xzah";
       libraryHaskellDepends = [
         base bytestring exceptions network transformers
       ];
       homepage = "https://github.com/k0001/network-simple";
       description = "Simple network sockets usage patterns";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "network-transport" = callPackage
    ({ mkDerivation, base, binary, bytestring, hashable, transformers
     }:
     mkDerivation {
       pname = "network-transport";
       version = "0.4.1.0";
       sha256 = "0xn879ngrbnm71i1wsbxxiih22sdb6csy6aip6fgqyafqlpc1c93";
       libraryHaskellDepends = [
         base binary bytestring hashable transformers
       ];
       homepage = "http://haskell-distributed.github.com";
       description = "Network abstraction layer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "network-transport-tcp" = callPackage
    ({ mkDerivation, base, bytestring, containers, data-accessor
     , network, network-transport, network-transport-tests
     }:
     mkDerivation {
       pname = "network-transport-tcp";
       version = "0.4.1";
       sha256 = "11fj0f2yrvdqn3sivfb4p0chs74bx26a0yc49fh160kkcmk42yaf";
       libraryHaskellDepends = [
         base bytestring containers data-accessor network network-transport
       ];
       testHaskellDepends = [
         base network network-transport network-transport-tests
       ];
       doCheck = false;
       homepage = "http://haskell-distributed.github.com";
       description = "TCP instantiation of Network.Transport";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "network-transport-tests" = callPackage
    ({ mkDerivation, ansi-terminal, base, bytestring, containers, mtl
     , network-transport, random
     }:
     mkDerivation {
       pname = "network-transport-tests";
       version = "0.2.2.0";
       sha256 = "0914sj3884sp5sxbm460x5frvl0ipn8v1jpkskhc9ajjx4v0s106";
       libraryHaskellDepends = [
         ansi-terminal base bytestring containers mtl network-transport
         random
       ];
       homepage = "http://haskell-distributed.github.com";
       description = "Unit tests for Network.Transport implementations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "network-uri" = callPackage
    ({ mkDerivation, base, HUnit, network, parsec, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "network-uri";
       version = "2.6.0.1";
       sha256 = "09ymamb128jgqghpda4nixncr73all8qc6q53976aricm6a27p37";
       libraryHaskellDepends = [ base parsec ];
       testHaskellDepends = [
         base HUnit network test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       doCheck = false;
       homepage = "https://github.com/haskell/network-uri";
       description = "URI manipulation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "newtype" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "newtype";
       version = "0.2";
       sha256 = "0ng4i5r73256gzwl6bw57h0abqixj783c3ggph1hk2wsplx0655p";
       libraryHaskellDepends = [ base ];
       description = "A typeclass and set of functions for working with newtypes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "nsis" = callPackage
    ({ mkDerivation, base, directory, process, transformers, uniplate
     }:
     mkDerivation {
       pname = "nsis";
       version = "0.2.5";
       sha256 = "1lbd1yx2yr96mv58jk3d9qpxpvc9nqkgvi62z4jahwv6wz5wap61";
       libraryHaskellDepends = [ base transformers uniplate ];
       testHaskellDepends = [
         base directory process transformers uniplate
       ];
       doCheck = false;
       homepage = "https://github.com/ndmitchell/nsis#readme";
       description = "DSL for producing Windows Installer using NSIS";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "numbers" = callPackage
    ({ mkDerivation, base, QuickCheck, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "numbers";
       version = "3000.2.0.1";
       sha256 = "10z1bi5qbc81z5xx2v1ylwcpmcfl1ci7lxrswkgi0dd1wi8havbk";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [
         base QuickCheck test-framework test-framework-quickcheck2
       ];
       homepage = "https://github.com/jwiegley/numbers#readme";
       description = "Various number types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "numeric-extras" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "numeric-extras";
       version = "0.0.3";
       sha256 = "18jyjrk6iizz3sgkwgbh1rxf6zdf166bkgs7wia8b4z7f6261nzg";
       libraryHaskellDepends = [ base ];
       homepage = "http://github.com/ekmett/numeric-extras";
       description = "Useful tools from the C standard library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "numtype" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "numtype";
       version = "1.1";
       sha256 = "1az10xcfl6qpyy9qnh8g2iqx53rxnjxzc1h8kl1gira6yv7g6857";
       libraryHaskellDepends = [ base ];
       homepage = "http://dimensional.googlecode.com/";
       description = "Type-level (low cardinality) integers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "opaleye" = callPackage
    ({ mkDerivation, attoparsec, base, base16-bytestring, bytestring
     , case-insensitive, contravariant, postgresql-simple, pretty
     , product-profunctors, profunctors, semigroups, text, time
     , time-locale-compat, transformers, uuid
     }:
     mkDerivation {
       pname = "opaleye";
       version = "0.3.1.2";
       sha256 = "01ldghza5l1qgcpvsphajfkq7g09fw0dm4vnya9wbs0hla307av9";
       revision = "3";
       editedCabalFile = "0ljqc3q84111zmbqgfjmi23d4wrkph9laj57rh0zw9mwp0ck5s4y";
       libraryHaskellDepends = [
         attoparsec base base16-bytestring bytestring case-insensitive
         contravariant postgresql-simple pretty product-profunctors
         profunctors semigroups text time time-locale-compat transformers
         uuid
       ];
       testHaskellDepends = [
         base postgresql-simple product-profunctors profunctors time
       ];
       doCheck = false;
       homepage = "https://github.com/tomjaguarpaw/haskell-opaleye";
       description = "An SQL-generating DSL targeting PostgreSQL";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "openpgp-asciiarmor" = callPackage
    ({ mkDerivation, attoparsec, base, base64-bytestring, bytestring
     , cereal, HUnit, test-framework, test-framework-hunit
     }:
     mkDerivation {
       pname = "openpgp-asciiarmor";
       version = "0.1";
       sha256 = "1xrv0n7n1n8izvxvqm8wmj6mkn5l6wcq18bxs9zd1q5riynmmm2w";
       libraryHaskellDepends = [
         attoparsec base base64-bytestring bytestring cereal
       ];
       testHaskellDepends = [
         attoparsec base base64-bytestring bytestring cereal HUnit
         test-framework test-framework-hunit
       ];
       homepage = "http://floss.scru.org/openpgp-asciiarmor";
       description = "OpenPGP (RFC4880) ASCII Armor codec";
       license = "unknown";
     }) {};
  "operational" = callPackage
    ({ mkDerivation, base, mtl, random }:
     mkDerivation {
       pname = "operational";
       version = "0.2.3.2";
       sha256 = "1aj3jhiyz4190b0qmyp684b8lbzrp8jn56s898892rvbp0hxa0pd";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base mtl ];
       executableHaskellDepends = [ random ];
       homepage = "http://haskell.org/haskellwiki/Operational";
       description = "Implementation of difficult monads made easy with operational semantics";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "options" = callPackage
    ({ mkDerivation, base, containers, monads-tf, transformers }:
     mkDerivation {
       pname = "options";
       version = "1.2.1.1";
       sha256 = "0qjs0v1ny52w51n5582d4z8wy9h6n0zw1xb5dh686ff5wadflgi8";
       libraryHaskellDepends = [ base containers monads-tf transformers ];
       doCheck = false;
       homepage = "https://john-millikin.com/software/haskell-options/";
       description = "A powerful and easy-to-use command-line option parser";
       license = stdenv.lib.licenses.mit;
     }) {};
  "optparse-applicative" = callPackage
    ({ mkDerivation, ansi-wl-pprint, base, process, transformers
     , transformers-compat
     }:
     mkDerivation {
       pname = "optparse-applicative";
       version = "0.11.0.2";
       sha256 = "0ni52ii9555jngljvzxn1ngicr6i2w647ww3rzhdrmng04y95iii";
       libraryHaskellDepends = [
         ansi-wl-pprint base process transformers transformers-compat
       ];
       homepage = "https://github.com/pcapriotti/optparse-applicative";
       description = "Utilities and combinators for parsing command line options";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "osdkeys" = callPackage
    ({ mkDerivation, base, bytestring, conduit, conduit-extra
     , containers, libnotify, process, resourcet, time, transformers
     }:
     mkDerivation {
       pname = "osdkeys";
       version = "0.0";
       sha256 = "18pc2r5acb3b6dr7niib4fn8x2la6y3f5zlj3ibrxhl5c1q35j6y";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring conduit conduit-extra containers libnotify
         resourcet time transformers
       ];
       executableHaskellDepends = [ base process ];
       description = "Show keys pressed with an on-screen display (Linux only)";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pagerduty" = callPackage
    ({ mkDerivation, aeson, base, bifunctors, bytestring
     , bytestring-conversion, conduit, data-default-class, exceptions
     , generics-sop, http-client, http-types, lens, lens-aeson, mmorph
     , monad-control, mtl, template-haskell, text, time
     , time-locale-compat, transformers, transformers-base
     , transformers-compat, unordered-containers
     }:
     mkDerivation {
       pname = "pagerduty";
       version = "0.0.3";
       sha256 = "1jqg7k0vr78fv5cv0rn74v8p5jd4wvv6l5nc5xdwh46b7rjwcpj1";
       revision = "2";
       editedCabalFile = "0granmrh28y7g0aia1iw3v6jzv825wxm3gksh4xyrsack378wj5c";
       libraryHaskellDepends = [
         aeson base bifunctors bytestring bytestring-conversion conduit
         data-default-class exceptions generics-sop http-client http-types
         lens lens-aeson mmorph monad-control mtl template-haskell text time
         time-locale-compat transformers transformers-base
         transformers-compat unordered-containers
       ];
       homepage = "http://github.com/brendanhay/pagerduty";
       description = "Client library for PagerDuty Integration and REST APIs";
       license = "unknown";
     }) {};
  "palette" = callPackage
    ({ mkDerivation, array, base, colour, containers }:
     mkDerivation {
       pname = "palette";
       version = "0.1.0.2";
       sha256 = "1snhn4mz58ax5sd77kh1m4jicwdmlrf89j612rkz5bkavvks6rrr";
       libraryHaskellDepends = [ array base colour containers ];
       homepage = "http://projects.haskell.org/diagrams";
       description = "Utilities for choosing and creating color schemes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pandoc" = callPackage
    ({ mkDerivation, aeson, ansi-terminal, array, base
     , base64-bytestring, binary, blaze-html, blaze-markup, bytestring
     , containers, data-default, deepseq-generics, Diff, directory
     , executable-path, extensible-exceptions, filepath, haddock-library
     , highlighting-kate, hslua, HTTP, http-client, http-client-tls
     , http-types, HUnit, JuicyPixels, mtl, network, network-uri
     , old-locale, old-time, pandoc-types, parsec, process, QuickCheck
     , random, scientific, SHA, syb, tagsoup, temporary, test-framework
     , test-framework-hunit, test-framework-quickcheck2, texmath, text
     , time, unordered-containers, vector, xml, yaml, zip-archive, zlib
     }:
     mkDerivation {
       pname = "pandoc";
       version = "1.13.2.1";
       sha256 = "0pvqi52sh3ldnszrvxlcq1s4v19haqb0wqh5rzn43pmqj2v6xnk6";
       configureFlags = [ "-fhttps" ];
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson array base base64-bytestring binary blaze-html blaze-markup
         bytestring containers data-default deepseq-generics directory
         extensible-exceptions filepath haddock-library highlighting-kate
         hslua HTTP http-client http-client-tls http-types JuicyPixels mtl
         network network-uri old-locale old-time pandoc-types parsec process
         random scientific SHA syb tagsoup temporary texmath text time
         unordered-containers vector xml yaml zip-archive zlib
       ];
       executableHaskellDepends = [
         aeson base bytestring containers directory extensible-exceptions
         filepath highlighting-kate HTTP network network-uri old-time
         pandoc-types text time yaml
       ];
       testHaskellDepends = [
         ansi-terminal base bytestring containers Diff directory
         executable-path filepath highlighting-kate HUnit pandoc-types
         process QuickCheck syb test-framework test-framework-hunit
         test-framework-quickcheck2 text zip-archive
       ];
       homepage = "http://johnmacfarlane.net/pandoc";
       description = "Conversion between markup formats";
       license = "GPL";
     }) {};
  "pandoc-citeproc" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, attoparsec, base, bytestring
     , Cabal, containers, data-default, directory, filepath, hs-bibutils
     , mtl, old-locale, pandoc, pandoc-types, parsec, process, rfc5051
     , split, syb, tagsoup, temporary, text, time, vector, xml-conduit
     , yaml
     }:
     mkDerivation {
       pname = "pandoc-citeproc";
       version = "0.6.0.1";
       sha256 = "05w6djrgpgf68shhbiv42gl0lvjiv8n9rrn0cd959dl3zdznssdg";
       revision = "1";
       editedCabalFile = "0pjfhkw6r3mj0kniblz2hd9kyy7x8sbpv6n3ph62dygs87h750iz";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       setupHaskellDepends = [ base Cabal directory filepath process ];
       libraryHaskellDepends = [
         aeson base bytestring containers data-default directory filepath
         hs-bibutils mtl old-locale pandoc pandoc-types parsec rfc5051 split
         syb tagsoup text time vector xml-conduit yaml
       ];
       executableHaskellDepends = [
         aeson aeson-pretty attoparsec base bytestring containers directory
         filepath pandoc pandoc-types process syb temporary text vector yaml
       ];
       testHaskellDepends = [
         aeson base bytestring directory filepath pandoc pandoc-types
         process temporary text yaml
       ];
       description = "Supports using pandoc with citeproc";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pandoc-types" = callPackage
    ({ mkDerivation, aeson, base, bytestring, containers
     , deepseq-generics, ghc-prim, syb
     }:
     mkDerivation {
       pname = "pandoc-types";
       version = "1.12.4.2";
       sha256 = "0j9zzlpwjyy8fqr91fsnzy507ylwrwk7hhl9nkxzk19iva2c42n9";
       libraryHaskellDepends = [
         aeson base bytestring containers deepseq-generics ghc-prim syb
       ];
       homepage = "http://johnmacfarlane.net/pandoc";
       description = "Types for representing a structured document";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pango" = callPackage
    ({ mkDerivation, array, base, cairo, containers, directory, glib
     , gtk2hs-buildtools, mtl, pango, pretty, process, text
     }:
     mkDerivation {
       pname = "pango";
       version = "0.13.1.0";
       sha256 = "0s69ga5gn9grdqcfxkbnvk0f3malql3fnhzh9cwvpfzqk3hxn4hn";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         array base cairo containers directory glib mtl pretty process text
       ];
       libraryPkgconfigDepends = [ pango ];
       libraryToolDepends = [ gtk2hs-buildtools ];
       homepage = "http://projects.haskell.org/gtk2hs/";
       description = "Binding to the Pango text rendering engine";
       license = stdenv.lib.licenses.lgpl21;
     }) {inherit (pkgs.gnome2) pango;};
  "parallel" = callPackage
    ({ mkDerivation, array, base, containers, deepseq }:
     mkDerivation {
       pname = "parallel";
       version = "3.2.0.6";
       sha256 = "0hp6vf4zxsw6vz6lj505xihmnfhgjp39c9q7nyzlgcmps3xx6a5r";
       revision = "1";
       editedCabalFile = "0nhnixsi85nl0m5swgk3mk56jmnif0b088rl172py2ggsrc08w4s";
       libraryHaskellDepends = [ array base containers deepseq ];
       description = "Parallel programming library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "parallel-io" = callPackage
    ({ mkDerivation, base, containers, extensible-exceptions, random }:
     mkDerivation {
       pname = "parallel-io";
       version = "0.3.3";
       sha256 = "0i86x3bf8pjlg6mdg1zg5lcrjpg75pbqs2mrgrbp4z4bkcmw051s";
       revision = "1";
       editedCabalFile = "1vlb2x1ghih4l64031rmh7h643c3knh5r5mwilf7g8izb58ypvkm";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base containers extensible-exceptions random
       ];
       homepage = "http://batterseapower.github.com/parallel-io";
       description = "Combinators for executing IO actions in parallel on a thread pool";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "parseargs" = callPackage
    ({ mkDerivation, base, containers }:
     mkDerivation {
       pname = "parseargs";
       version = "0.1.5.2";
       sha256 = "0pzw7w1kr2rv6ffqgn93rypn37wy2r5k01p3y5256laaplm575am";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base containers ];
       executableHaskellDepends = [ base ];
       homepage = "http://github.com/BartMassey/parseargs";
       description = "Command-line argument parsing library for Haskell programs";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "parsec" = callPackage
    ({ mkDerivation, base, bytestring, HUnit, mtl, test-framework
     , test-framework-hunit, text
     }:
     mkDerivation {
       pname = "parsec";
       version = "3.1.9";
       sha256 = "1ja20cmj6v336jy87c6h3jzjp00sdbakwbdwp11iln499k913xvi";
       libraryHaskellDepends = [ base bytestring mtl text ];
       testHaskellDepends = [
         base HUnit test-framework test-framework-hunit
       ];
       homepage = "https://github.com/aslatter/parsec";
       description = "Monadic parser combinators";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "parsers" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, charset, containers
     , directory, doctest, filepath, parsec, QuickCheck
     , quickcheck-instances, text, transformers, unordered-containers
     }:
     mkDerivation {
       pname = "parsers";
       version = "0.12.1.1";
       sha256 = "1yx75xbmg3lms0hj79r5w9fl81g5cbsm842lijhd9jnnbli2mzfw";
       libraryHaskellDepends = [
         attoparsec base charset containers parsec text transformers
         unordered-containers
       ];
       testHaskellDepends = [
         attoparsec base bytestring containers directory doctest filepath
         parsec QuickCheck quickcheck-instances
       ];
       homepage = "http://github.com/ekmett/parsers/";
       description = "Parsing combinators";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "partial-handler" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "partial-handler";
       version = "0.1.1";
       sha256 = "15911chlma2b8igvnp6laqf2vsj48y4bp89mxb9kaq87z56r2zpm";
       revision = "1";
       editedCabalFile = "0da1bjirjjz76vdkwwchbvk29a284r76a1gh1zqh7dlsvrkzmh03";
       libraryHaskellDepends = [ base ];
       doCheck = false;
       homepage = "https://github.com/nikita-volkov/partial-handler";
       description = "A composable exception handler";
       license = stdenv.lib.licenses.mit;
     }) {};
  "path-pieces" = callPackage
    ({ mkDerivation, base, hspec, HUnit, QuickCheck, text, time }:
     mkDerivation {
       pname = "path-pieces";
       version = "0.2.0";
       sha256 = "116zx2ryzywh2rd4q16a5vh04gw92as9vgfvraw3a66xn0m6g5y0";
       libraryHaskellDepends = [ base text time ];
       testHaskellDepends = [ base hspec HUnit QuickCheck text ];
       description = "Components of paths";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "patience" = callPackage
    ({ mkDerivation, base, containers }:
     mkDerivation {
       pname = "patience";
       version = "0.1.1";
       sha256 = "0qyv20gqy9pb1acy700ahv70lc6vprcwb26cc7fcpcs4scsc7irm";
       libraryHaskellDepends = [ base containers ];
       description = "Patience diff and longest increasing subsequence";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pcre-heavy" = callPackage
    ({ mkDerivation, base, bytestring, doctest, Glob, pcre-light
     , stringable, template-haskell
     }:
     mkDerivation {
       pname = "pcre-heavy";
       version = "0.2.2";
       sha256 = "08cv6vmf5qpjky8zfrz3c5cczn5vrf30p5masyb3m625wm2sjjw3";
       libraryHaskellDepends = [
         base bytestring pcre-light stringable template-haskell
       ];
       testHaskellDepends = [ base doctest Glob ];
       homepage = "https://github.com/myfreeweb/pcre-heavy";
       description = "A regexp library on top of pcre-light you can actually use";
       license = "unknown";
     }) {};
  "pcre-light" = callPackage
    ({ mkDerivation, base, bytestring, pcre }:
     mkDerivation {
       pname = "pcre-light";
       version = "0.4.0.3";
       sha256 = "0l1df2sk5qwf424bvb8mbdkr2xjg43fi92n5r22yd7vm1zz0jqvf";
       libraryHaskellDepends = [ base bytestring ];
       librarySystemDepends = [ pcre ];
       homepage = "https://github.com/Daniel-Diaz/pcre-light";
       description = "A small, efficient and portable regex library for Perl 5 compatible regular expressions";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) pcre;};
  "pdfinfo" = callPackage
    ({ mkDerivation, base, mtl, old-locale, process-extras, text, time
     , time-locale-compat
     }:
     mkDerivation {
       pname = "pdfinfo";
       version = "1.5.4";
       sha256 = "04894cwvcn910j2b0j95dc6i9v6xriqa0v97z3vyi9dhi9yiysls";
       libraryHaskellDepends = [
         base mtl old-locale process-extras text time time-locale-compat
       ];
       homepage = "https://github.com/chrisdone/pdfinfo";
       description = "Wrapper around the pdfinfo command";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pem" = callPackage
    ({ mkDerivation, base, base64-bytestring, bytestring, HUnit, mtl
     , QuickCheck, test-framework, test-framework-hunit
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "pem";
       version = "0.2.2";
       sha256 = "162sk5sg22w21wqz5qv8kx6ibxp99v5p20g3nknhm1kddk3hha1p";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base base64-bytestring bytestring mtl ];
       testHaskellDepends = [
         base bytestring HUnit QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2
       ];
       homepage = "http://github.com/vincenthz/hs-pem";
       description = "Privacy Enhanced Mail (PEM) format reader and writer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "persistent" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, base64-bytestring
     , blaze-html, blaze-markup, bytestring, conduit, containers
     , exceptions, fast-logger, hspec, lifted-base, monad-control
     , monad-logger, mtl, old-locale, path-pieces, resource-pool
     , resourcet, scientific, silently, tagged, template-haskell, text
     , time, transformers, transformers-base, unordered-containers
     , vector
     }:
     mkDerivation {
       pname = "persistent";
       version = "2.1.3";
       sha256 = "1rw160icdny4jrbymbck2gah3ca21f49yp6zkkjq8sv5mn83dbxy";
       libraryHaskellDepends = [
         aeson attoparsec base base64-bytestring blaze-html blaze-markup
         bytestring conduit containers exceptions fast-logger lifted-base
         monad-control monad-logger mtl old-locale path-pieces resource-pool
         resourcet scientific silently tagged template-haskell text time
         transformers transformers-base unordered-containers vector
       ];
       testHaskellDepends = [
         aeson attoparsec base base64-bytestring blaze-html bytestring
         conduit containers hspec monad-control monad-logger old-locale
         path-pieces resourcet scientific text time transformers
         unordered-containers vector
       ];
       homepage = "http://www.yesodweb.com/book/persistent";
       description = "Type-safe, multi-backend data serialization";
       license = stdenv.lib.licenses.mit;
     }) {};
  "persistent-mongoDB" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, bson, bytestring, cereal
     , conduit, containers, monad-control, mongoDB, network, path-pieces
     , persistent, resource-pool, resourcet, text, time, transformers
     }:
     mkDerivation {
       pname = "persistent-mongoDB";
       version = "2.1.2.1";
       sha256 = "130jd85h1fl5klfr369kg11w29aavl81d22w1is5dg38s0pzn76a";
       libraryHaskellDepends = [
         aeson attoparsec base bson bytestring cereal conduit containers
         monad-control mongoDB network path-pieces persistent resource-pool
         resourcet text time transformers
       ];
       homepage = "http://www.yesodweb.com/book/persistent";
       description = "Backend for the persistent library using mongoDB";
       license = stdenv.lib.licenses.mit;
     }) {};
  "persistent-mysql" = callPackage
    ({ mkDerivation, aeson, base, blaze-builder, bytestring, conduit
     , containers, monad-control, monad-logger, mysql, mysql-simple
     , persistent, resourcet, text, transformers
     }:
     mkDerivation {
       pname = "persistent-mysql";
       version = "2.1.3";
       sha256 = "1k1sjzxz96z6pgk4012v8p4w6scgm4g2j5fs4sjgsj9azp3b7gwh";
       libraryHaskellDepends = [
         aeson base blaze-builder bytestring conduit containers
         monad-control monad-logger mysql mysql-simple persistent resourcet
         text transformers
       ];
       homepage = "http://www.yesodweb.com/book/persistent";
       description = "Backend for the persistent library using MySQL database server";
       license = stdenv.lib.licenses.mit;
     }) {};
  "persistent-postgresql" = callPackage
    ({ mkDerivation, aeson, base, blaze-builder, bytestring, conduit
     , containers, monad-control, monad-logger, persistent
     , postgresql-libpq, postgresql-simple, resourcet, text, time
     , transformers
     }:
     mkDerivation {
       pname = "persistent-postgresql";
       version = "2.1.4";
       sha256 = "1x9mpvc8b4rj4pc2f3d7c0720zh2f8qrqg77x19q099ycag70pmg";
       libraryHaskellDepends = [
         aeson base blaze-builder bytestring conduit containers
         monad-control monad-logger persistent postgresql-libpq
         postgresql-simple resourcet text time transformers
       ];
       homepage = "http://www.yesodweb.com/book/persistent";
       description = "Backend for the persistent library using postgresql";
       license = stdenv.lib.licenses.mit;
     }) {};
  "persistent-sqlite" = callPackage
    ({ mkDerivation, aeson, base, bytestring, conduit, containers
     , hspec, monad-control, monad-logger, old-locale, persistent
     , persistent-template, resourcet, sqlite, text, time, transformers
     }:
     mkDerivation {
       pname = "persistent-sqlite";
       version = "2.1.4.1";
       sha256 = "0lwm1j7zz1zsfw70p7qwcsjlz0kmiliz2fdb2jgksxglw212nh2h";
       configureFlags = [ "-fsystemlib" ];
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base bytestring conduit containers monad-control monad-logger
         old-locale persistent resourcet text time transformers
       ];
       librarySystemDepends = [ sqlite ];
       executableHaskellDepends = [ base ];
       testHaskellDepends = [
         base hspec persistent persistent-template time transformers
       ];
       homepage = "http://www.yesodweb.com/book/persistent";
       description = "Backend for the persistent library using sqlite3";
       license = stdenv.lib.licenses.mit;
     }) {inherit (pkgs) sqlite;};
  "persistent-template" = callPackage
    ({ mkDerivation, aeson, base, bytestring, containers, ghc-prim
     , hspec, monad-control, monad-logger, path-pieces, persistent
     , QuickCheck, tagged, template-haskell, text, transformers
     , unordered-containers
     }:
     mkDerivation {
       pname = "persistent-template";
       version = "2.1.3";
       sha256 = "1b0li6hkir2rnya8ci1wcn77vxmg26i6blmxcvkdgc4jph23ca2p";
       libraryHaskellDepends = [
         aeson base bytestring containers ghc-prim monad-control
         monad-logger path-pieces persistent tagged template-haskell text
         transformers unordered-containers
       ];
       testHaskellDepends = [
         aeson base bytestring hspec persistent QuickCheck text transformers
       ];
       homepage = "http://www.yesodweb.com/book/persistent";
       description = "Type-safe, non-relational, multi-backend persistence";
       license = stdenv.lib.licenses.mit;
     }) {};
  "phantom-state" = callPackage
    ({ mkDerivation, base, criterion, transformers, vector }:
     mkDerivation {
       pname = "phantom-state";
       version = "0.2.0.2";
       sha256 = "04fg0j79nkajsiw8n2yy62mwiw1r4fjy2jln5ng07h64pwyncdnm";
       libraryHaskellDepends = [ base transformers ];
       benchmarkHaskellDepends = [ base criterion transformers vector ];
       description = "Phantom State Transformer. Like State Monad, but without values.";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "picoparsec" = callPackage
    ({ mkDerivation, array, attoparsec, base, bytestring
     , case-insensitive, containers, criterion, deepseq, directory
     , filepath, ghc-prim, hashable, http-types, monoid-subclasses
     , parsec, QuickCheck, quickcheck-instances, quickcheck-unicode
     , scientific, tasty, tasty-quickcheck, text, unordered-containers
     , vector
     }:
     mkDerivation {
       pname = "picoparsec";
       version = "0.1.2.1";
       sha256 = "1nlklprhnr0cgmzfp9vnyv9knn3qz5dlhpxr036fygaad67950ci";
       libraryHaskellDepends = [
         array base bytestring containers deepseq monoid-subclasses
         scientific text
       ];
       testHaskellDepends = [
         array base bytestring deepseq monoid-subclasses QuickCheck
         quickcheck-instances quickcheck-unicode scientific tasty
         tasty-quickcheck text vector
       ];
       benchmarkHaskellDepends = [
         array attoparsec base bytestring case-insensitive criterion deepseq
         directory filepath ghc-prim hashable http-types monoid-subclasses
         parsec scientific text unordered-containers vector
       ];
       homepage = "https://bitbucket.org/blamario/picoparsec";
       description = "Fast combinator parsing for bytestrings and text";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pipes" = callPackage
    ({ mkDerivation, base, criterion, deepseq, mmorph, mtl, QuickCheck
     , test-framework, test-framework-quickcheck2, transformers
     }:
     mkDerivation {
       pname = "pipes";
       version = "4.1.5";
       sha256 = "1c19am4dr6na9xpx4h7yngvbml0ghc1dbym8988hjhw84gq4lhfx";
       revision = "1";
       editedCabalFile = "1d4yzwgrfmcwsldlq3jcvhm5yyw7cdr9zz76hxfrcy0izw5jcg62";
       libraryHaskellDepends = [ base mmorph mtl transformers ];
       testHaskellDepends = [
         base mtl QuickCheck test-framework test-framework-quickcheck2
         transformers
       ];
       benchmarkHaskellDepends = [
         base criterion deepseq mtl transformers
       ];
       description = "Compositional pipelines";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pipes-aeson" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, bytestring, pipes
     , pipes-attoparsec, pipes-bytestring, pipes-parse, transformers
     }:
     mkDerivation {
       pname = "pipes-aeson";
       version = "0.4.1.2";
       sha256 = "0wacib0wf40bkm6rp2qcsrahc43g89l3icclbrshk8r54dhbazl7";
       libraryHaskellDepends = [
         aeson attoparsec base bytestring pipes pipes-attoparsec
         pipes-bytestring pipes-parse transformers
       ];
       homepage = "https://github.com/k0001/pipes-aeson";
       description = "Encode and decode JSON streams using Aeson and Pipes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pipes-attoparsec" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, HUnit, mmorph, pipes
     , pipes-parse, tasty, tasty-hunit, text, transformers
     }:
     mkDerivation {
       pname = "pipes-attoparsec";
       version = "0.5.1.1";
       sha256 = "1ns8s3p6jh4iya71z3j81cqnrfnr4n92kblwgkjlapb23dykl2qz";
       libraryHaskellDepends = [
         attoparsec base bytestring pipes pipes-parse text transformers
       ];
       testHaskellDepends = [
         attoparsec base HUnit mmorph pipes pipes-parse tasty tasty-hunit
         text transformers
       ];
       homepage = "https://github.com/k0001/pipes-attoparsec";
       description = "Attoparsec and Pipes integration";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pipes-binary" = callPackage
    ({ mkDerivation, base, binary, bytestring, ghc-prim
     , lens-family-core, pipes, pipes-bytestring, pipes-parse
     , smallcheck, tasty, tasty-hunit, tasty-smallcheck, transformers
     }:
     mkDerivation {
       pname = "pipes-binary";
       version = "0.4.0.4";
       sha256 = "1c90vvdzbrp5x73iwpdcsi701v4krmqqxj0l9kyzfygvd242i56i";
       libraryHaskellDepends = [
         base binary bytestring ghc-prim pipes pipes-bytestring pipes-parse
         transformers
       ];
       testHaskellDepends = [
         base binary bytestring ghc-prim lens-family-core pipes pipes-parse
         smallcheck tasty tasty-hunit tasty-smallcheck transformers
       ];
       homepage = "https://github.com/k0001/pipes-binary";
       description = "Encode and decode binary streams using the pipes and binary libraries";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pipes-bytestring" = callPackage
    ({ mkDerivation, base, bytestring, pipes, pipes-group, pipes-parse
     , transformers
     }:
     mkDerivation {
       pname = "pipes-bytestring";
       version = "2.1.1";
       sha256 = "1zn8vbsq214x1dswaz1sb7vjjvwxjy5sg8cv67cdmac0l1rw5dmz";
       libraryHaskellDepends = [
         base bytestring pipes pipes-group pipes-parse transformers
       ];
       description = "ByteString support for pipes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pipes-concurrency" = callPackage
    ({ mkDerivation, async, base, pipes, stm }:
     mkDerivation {
       pname = "pipes-concurrency";
       version = "2.0.3";
       sha256 = "0jsfnlzl6yvhikgn6v361ld9aypv2h2nsz1q24dxfk953zvm2sp5";
       libraryHaskellDepends = [ base pipes stm ];
       testHaskellDepends = [ async base pipes stm ];
       description = "Concurrency for the pipes ecosystem";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pipes-group" = callPackage
    ({ mkDerivation, base, free, pipes, pipes-parse, transformers }:
     mkDerivation {
       pname = "pipes-group";
       version = "1.0.2";
       sha256 = "01k1j0b7rg39lfh2zhxxnj1bclmaas69b9wiai89h5i1m6aanmp0";
       libraryHaskellDepends = [
         base free pipes pipes-parse transformers
       ];
       description = "Group streams into substreams";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pipes-network" = callPackage
    ({ mkDerivation, base, bytestring, network, network-simple, pipes
     , pipes-safe, transformers
     }:
     mkDerivation {
       pname = "pipes-network";
       version = "0.6.4";
       sha256 = "1wabyv5j4q0wxiz8ry7dq3amlvfh4r0721pd2lksx7hj3a5qzm2p";
       libraryHaskellDepends = [
         base bytestring network network-simple pipes pipes-safe
         transformers
       ];
       homepage = "https://github.com/k0001/pipes-network";
       description = "Use network sockets together with the pipes library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pipes-parse" = callPackage
    ({ mkDerivation, base, pipes, transformers }:
     mkDerivation {
       pname = "pipes-parse";
       version = "3.0.2";
       sha256 = "1d5lhh8knk0hmvd9wv2ihs5z9ybyvhd1n7qaazqkazqkyl14pd08";
       libraryHaskellDepends = [ base pipes transformers ];
       description = "Parsing infrastructure for the pipes ecosystem";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pipes-safe" = callPackage
    ({ mkDerivation, base, containers, exceptions, pipes, transformers
     }:
     mkDerivation {
       pname = "pipes-safe";
       version = "2.2.2";
       sha256 = "1sp0fw5w4kcf5llxx2qqzx8n5ps8qw1jx5asqg7al89mqr38am05";
       libraryHaskellDepends = [
         base containers exceptions pipes transformers
       ];
       description = "Safety for the pipes ecosystem";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "placeholders" = callPackage
    ({ mkDerivation, base, template-haskell }:
     mkDerivation {
       pname = "placeholders";
       version = "0.1";
       sha256 = "0ih35n2pw5gr9ggj2xz5zfcs4bdk200fdw6q9hdy3xna7maphak5";
       libraryHaskellDepends = [ base template-haskell ];
       homepage = "http://github.com/ahammar/placeholders";
       description = "Placeholders for use while developing Haskell code";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "plot" = callPackage
    ({ mkDerivation, array, base, cairo, colour, hmatrix, mtl, pango
     , transformers
     }:
     mkDerivation {
       pname = "plot";
       version = "0.2.3.4";
       sha256 = "1dclv0z94xpxmx80yzzppahq92cqjwaqr0g1ama0spywxhz6l7h3";
       libraryHaskellDepends = [
         array base cairo colour hmatrix mtl pango transformers
       ];
       homepage = "http://github.com/amcphail/plot";
       description = "A plotting library, exportable as eps/pdf/svg/png or renderable with gtk";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "plot-gtk" = callPackage
    ({ mkDerivation, base, glib, gtk, hmatrix, mtl, plot, process }:
     mkDerivation {
       pname = "plot-gtk";
       version = "0.2.0.2";
       sha256 = "18p3jjrs1asd35q3fykfsrwx22d7rqczymbyxsaqwya5y0nv3ymn";
       libraryHaskellDepends = [ base glib gtk hmatrix mtl plot process ];
       homepage = "http://code.haskell.org/plot";
       description = "GTK plots and interaction with GHCi";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "plot-gtk3" = callPackage
    ({ mkDerivation, base, glib, gtk3, hmatrix, mtl, plot, process }:
     mkDerivation {
       pname = "plot-gtk3";
       version = "0.1";
       sha256 = "0dw6ypnwr3xnjl1cvr55x3j182vchjhinc9fxsnd5z7ciraqvnv0";
       libraryHaskellDepends = [
         base glib gtk3 hmatrix mtl plot process
       ];
       homepage = "http://code.haskell.org/plot";
       description = "GTK3 plots and interaction with GHCi";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pointed" = callPackage
    ({ mkDerivation, base, comonad, containers, data-default-class
     , kan-extensions, semigroupoids, semigroups, stm, tagged
     , transformers, transformers-compat
     }:
     mkDerivation {
       pname = "pointed";
       version = "4.2";
       sha256 = "1rwavs2vycb02d04ba8ziywsxbl6k4yqk6pnmzcx5zhnkcfqvmbm";
       libraryHaskellDepends = [
         base comonad containers data-default-class kan-extensions
         semigroupoids semigroups stm tagged transformers
         transformers-compat
       ];
       homepage = "http://github.com/ekmett/pointed/";
       description = "Pointed and copointed data";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "polyparse" = callPackage
    ({ mkDerivation, base, bytestring, text }:
     mkDerivation {
       pname = "polyparse";
       version = "1.11";
       sha256 = "1z417f80b0jm4dgv25fk408p3d9mmcd1dlbya3ry0zdx4md09vrh";
       libraryHaskellDepends = [ base bytestring text ];
       homepage = "http://code.haskell.org/~malcolm/polyparse/";
       description = "A variety of alternative parser combinator libraries";
       license = "LGPL";
     }) {};
  "post-mess-age" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "post-mess-age";
       version = "0.1.0.0";
       sha256 = "1rl7i37szwnqs6slhha3wv45mw9w9x6yxcrkbdcfvdc63x8nh74w";
       libraryHaskellDepends = [ base ];
       description = "Send messages to a Handle concurrently without getting them mixed";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "postgresql-binary" = callPackage
    ({ mkDerivation, attoparsec, base-prelude, bytestring, loch-th
     , placeholders, scientific, text, time, transformers, uuid
     }:
     mkDerivation {
       pname = "postgresql-binary";
       version = "0.5.2";
       sha256 = "1fwh3r0f63wcwnw544jdirzsd0brslkqahn8d2iwr2jvpm5f0pqh";
       libraryHaskellDepends = [
         attoparsec base-prelude bytestring loch-th placeholders scientific
         text time transformers uuid
       ];
       doCheck = false;
       homepage = "https://github.com/nikita-volkov/postgresql-binary";
       description = "Encoders and decoders for the PostgreSQL's binary format";
       license = stdenv.lib.licenses.mit;
     }) {};
  "postgresql-libpq" = callPackage
    ({ mkDerivation, base, bytestring, postgresql }:
     mkDerivation {
       pname = "postgresql-libpq";
       version = "0.9.0.2";
       sha256 = "1x1nmzl1j6vc3vy746ch6ps4wy6hwqm78yl9cq9fvkpllh0a2dnw";
       libraryHaskellDepends = [ base bytestring ];
       librarySystemDepends = [ postgresql ];
       homepage = "http://github.com/lpsmith/postgresql-libpq";
       description = "low-level binding to libpq";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) postgresql;};
  "postgresql-simple" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, base16-bytestring
     , blaze-builder, blaze-textual, bytestring, case-insensitive
     , containers, cryptohash, hashable, HUnit, postgresql-libpq
     , scientific, template-haskell, text, time, transformers, uuid
     , vector
     }:
     mkDerivation {
       pname = "postgresql-simple";
       version = "0.4.10.0";
       sha256 = "0ar8rjd3fsk56ykf7ys3f14ld3771dknhvkfk08fq7054rilrir0";
       libraryHaskellDepends = [
         aeson attoparsec base blaze-builder blaze-textual bytestring
         case-insensitive containers hashable postgresql-libpq scientific
         template-haskell text time transformers uuid vector
       ];
       testHaskellDepends = [
         aeson base base16-bytestring bytestring containers cryptohash HUnit
         text time vector
       ];
       doCheck = false;
       description = "Mid-Level PostgreSQL client library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "prednote" = callPackage
    ({ mkDerivation, base, bytestring, containers, contravariant
     , QuickCheck, rainbow, split, tasty, tasty-quickcheck, tasty-th
     , text, transformers
     }:
     mkDerivation {
       pname = "prednote";
       version = "0.32.0.6";
       sha256 = "0ammlm2dfhjmgy2ackrk4gvwgxz8sph8d2n4pwk2vl17hy024dbj";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring containers contravariant rainbow split text
         transformers
       ];
       testHaskellDepends = [
         base bytestring containers contravariant QuickCheck rainbow split
         tasty tasty-quickcheck tasty-th text transformers
       ];
       homepage = "http://www.github.com/massysett/prednote";
       description = "Evaluate and display trees of predicates";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "prefix-units" = callPackage
    ({ mkDerivation, base, Cabal, HUnit, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "prefix-units";
       version = "0.1.0.2";
       sha256 = "07b5s2bsqlaad06dgr5psidfgi1nmgc5c16j6kzayw9f4najjrav";
       revision = "1";
       editedCabalFile = "02mh9m5yx7n25zl4vggjqckysphp60n2gic0m128wrsj7aannba9";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [
         base Cabal HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       homepage = "https://github.com/iustin/prefix-units";
       description = "A basic library for SI/binary prefix units";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "prelude-extras" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "prelude-extras";
       version = "0.4";
       sha256 = "0mzsc9pzcamaa7i3g9hkajy35sbpqdjrflv6r98r8hhlr0yrdjan";
       libraryHaskellDepends = [ base ];
       homepage = "http://github.com/ekmett/prelude-extras";
       description = "Haskell 98 - higher order versions of Prelude classes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "presburger" = callPackage
    ({ mkDerivation, base, containers, pretty, QuickCheck }:
     mkDerivation {
       pname = "presburger";
       version = "1.3.1";
       sha256 = "15yhqc6gk14dsqr4b0x87i1xw0sc3iscw28grg4vmcspsjxil0l6";
       revision = "1";
       editedCabalFile = "0pabxck7iyhyj7wf1bflg86xb2jip4vaspf080rfdc5s2cg0d23w";
       libraryHaskellDepends = [ base containers pretty ];
       testHaskellDepends = [ base QuickCheck ];
       homepage = "http://github.com/yav/presburger";
       description = "A decision procedure for quantifier-free linear arithmetic";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "present" = callPackage
    ({ mkDerivation, aeson, atto-lisp, base, bytestring, data-default
     , mtl, semigroups, text
     }:
     mkDerivation {
       pname = "present";
       version = "2.2";
       sha256 = "1z9zvmszda7h1h4inq4b6ig9bd205mskqq85ns3rzsffxaj471p4";
       revision = "1";
       editedCabalFile = "1hb9symzrc8f447rgni8rndnka0qpcg4p7n4khd49qipdaxm3947";
       libraryHaskellDepends = [
         aeson atto-lisp base bytestring data-default mtl semigroups text
       ];
       description = "Make presentations for data types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pretty-class" = callPackage
    ({ mkDerivation, base, pretty }:
     mkDerivation {
       pname = "pretty-class";
       version = "1.0.1.1";
       sha256 = "1qdfp2kpahzflq9a3idwmb0pqs4l7almxn5rbw5gp2pmdx81p3am";
       libraryHaskellDepends = [ base pretty ];
       homepage = "https://github.com/ddssff/pretty-class";
       description = "Pretty printing class similar to Show";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pretty-show" = callPackage
    ({ mkDerivation, array, base, filepath, ghc-prim, happy
     , haskell-lexer, pretty
     }:
     mkDerivation {
       pname = "pretty-show";
       version = "1.6.8.2";
       sha256 = "1s95nzjkmqb747s50i68c9s8p91cxgydzqkd2l5yjzdaygrvrhqv";
       revision = "1";
       editedCabalFile = "0622xpyhzybywq0ybdy0mclb5xhhs3al7jpvndgwd37i64qnfm1l";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         array base filepath ghc-prim haskell-lexer pretty
       ];
       libraryToolDepends = [ happy ];
       executableHaskellDepends = [ base ];
       homepage = "http://wiki.github.com/yav/pretty-show";
       description = "Tools for working with derived `Show` instances and generic inspection of values";
       license = stdenv.lib.licenses.mit;
     }) {};
  "prettyclass" = callPackage
    ({ mkDerivation, base, pretty }:
     mkDerivation {
       pname = "prettyclass";
       version = "1.0.0.0";
       sha256 = "11l9ajci7nh1r547hx8hgxrhq8mh5gdq30pdf845wvilg9p48dz5";
       libraryHaskellDepends = [ base pretty ];
       description = "Pretty printing class similar to Show";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "primes" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "primes";
       version = "0.2.1.0";
       sha256 = "0ny6fzr967d1fifk050k95j9snnbjjif2bxf3v9s93k3zdc6bmkl";
       libraryHaskellDepends = [ base ];
       homepage = "http://github.com/sebfisch/primes";
       description = "Efficient, purely functional generation of prime numbers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "primitive" = callPackage
    ({ mkDerivation, base, ghc-prim, transformers }:
     mkDerivation {
       pname = "primitive";
       version = "0.6";
       sha256 = "08lpsvrgdvqh8xw7f1wzkvwdnkizblbym8y2xpknk0y62f9g799l";
       libraryHaskellDepends = [ base ghc-prim transformers ];
       testHaskellDepends = [ base ghc-prim ];
       homepage = "https://github.com/haskell/primitive";
       description = "Primitive memory-related operations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "process-extras" = callPackage
    ({ mkDerivation, base, bytestring, deepseq, ListLike, process, text
     }:
     mkDerivation {
       pname = "process-extras";
       version = "0.3.3.4";
       sha256 = "1cnq7lzrwckyhd829ir8h1rbh404yw0m40lka7sl23i7mak51mbp";
       revision = "1";
       editedCabalFile = "0qg7hny5rfw3frzzzia6cfljgki8mpr1486jm1js7z9hni8gvd1a";
       libraryHaskellDepends = [
         base bytestring deepseq ListLike process text
       ];
       homepage = "https://github.com/seereason/process-extras";
       description = "Process extras";
       license = stdenv.lib.licenses.mit;
     }) {};
  "product-profunctors" = callPackage
    ({ mkDerivation, base, contravariant, profunctors, template-haskell
     }:
     mkDerivation {
       pname = "product-profunctors";
       version = "0.6.1";
       sha256 = "0phwjngndgsggw2f74k6q43cnnw5w4nvfrfrmkwyz6hgah2zv562";
       revision = "3";
       editedCabalFile = "1kbc1bxj9pard8w5bp6irclcmjs53rjp7cgvvg4rz312svmwpv81";
       libraryHaskellDepends = [
         base contravariant profunctors template-haskell
       ];
       testHaskellDepends = [ base profunctors ];
       homepage = "https://github.com/tomjaguarpaw/product-profunctors";
       description = "product-profunctors";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "profunctor-extras" = callPackage
    ({ mkDerivation, base, profunctors }:
     mkDerivation {
       pname = "profunctor-extras";
       version = "4.0";
       sha256 = "10j458liqlyz5s9gkg95c6aq7ap5fa7d8pc7hygy71nn87pm2g4a";
       libraryHaskellDepends = [ base profunctors ];
       doHaddock = false;
       homepage = "http://github.com/ekmett/profunctor-extras/";
       description = "This package has been absorbed into profunctors 4.0";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "profunctors" = callPackage
    ({ mkDerivation, base, comonad, distributive, semigroupoids, tagged
     , transformers
     }:
     mkDerivation {
       pname = "profunctors";
       version = "4.4.1";
       sha256 = "1x5q4bc18cyxajv39xxbxzgpq75xzrhx450n8rc3p8gir92hx645";
       revision = "2";
       editedCabalFile = "03bncmv6jqmhcjpxfb2gn5d2wasd2l6lija7hf95iwl6xp4ma1zb";
       libraryHaskellDepends = [
         base comonad distributive semigroupoids tagged transformers
       ];
       homepage = "http://github.com/ekmett/profunctors/";
       description = "Profunctors";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "project-template" = callPackage
    ({ mkDerivation, base, base64-bytestring, bytestring, conduit
     , conduit-extra, containers, hspec, mtl, QuickCheck, resourcet
     , system-fileio, system-filepath, text, transformers
     }:
     mkDerivation {
       pname = "project-template";
       version = "0.1.4.2";
       sha256 = "10n23s6g7fv0l42hsb804z0qqcyxqw32kwzg1f0w3c6gka844akr";
       libraryHaskellDepends = [
         base base64-bytestring bytestring conduit conduit-extra containers
         mtl resourcet system-fileio system-filepath text transformers
       ];
       testHaskellDepends = [
         base base64-bytestring bytestring conduit containers hspec
         QuickCheck resourcet system-filepath text transformers
       ];
       homepage = "https://github.com/fpco/haskell-ide";
       description = "Specify Haskell project templates and generate files";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "publicsuffixlist" = callPackage
    ({ mkDerivation, base, bytestring, cereal, containers, data-default
     , HUnit, idna, text, utf8-string
     }:
     mkDerivation {
       pname = "publicsuffixlist";
       version = "0.1";
       sha256 = "0mbrmhgyjp8jms3fd3nq4knc4j97sw8ijrmnlfjs7qj8jw4vwzxk";
       libraryHaskellDepends = [
         base bytestring cereal containers data-default text utf8-string
       ];
       testHaskellDepends = [
         base bytestring cereal containers data-default HUnit idna text
         utf8-string
       ];
       homepage = "https://github.com/litherum/publicsuffixlist";
       description = "Is a given string a domain suffix?";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "punycode" = callPackage
    ({ mkDerivation, base, bytestring, cereal, mtl, text }:
     mkDerivation {
       pname = "punycode";
       version = "2.0";
       sha256 = "192jgfixnpxdj6jiiz92kx5bi6ij3c389b76q9f4vyfmvcajj1sr";
       libraryHaskellDepends = [ base bytestring cereal mtl text ];
       doCheck = false;
       homepage = "https://github.com/litherum/punycode";
       description = "Encode unicode strings to ascii forms according to RFC 3492";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pure-io" = callPackage
    ({ mkDerivation, base, containers, mtl, safe }:
     mkDerivation {
       pname = "pure-io";
       version = "0.2.1";
       sha256 = "0pzvkd8jxw859s187n972yaq5wmwi00cxwhivgffr7z29hr0zvx9";
       libraryHaskellDepends = [ base containers mtl safe ];
       description = "Pure IO monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pureMD5" = callPackage
    ({ mkDerivation, base, binary, bytestring, cereal, crypto-api
     , tagged
     }:
     mkDerivation {
       pname = "pureMD5";
       version = "2.1.2.1";
       sha256 = "1zsn949qk95bwx1fbyv84q0lhb4k18bgixl7nivfzsnmhr31fs37";
       libraryHaskellDepends = [
         base binary bytestring cereal crypto-api tagged
       ];
       description = "A Haskell-only implementation of the MD5 digest (hash) algorithm";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pwstore-fast" = callPackage
    ({ mkDerivation, base, base64-bytestring, binary, byteable
     , bytestring, cryptohash, random
     }:
     mkDerivation {
       pname = "pwstore-fast";
       version = "2.4.4";
       sha256 = "1cpvlwzg3qznhygrr78f75p65mnljd9v5cvnagfxjqppnrkay6bj";
       libraryHaskellDepends = [
         base base64-bytestring binary byteable bytestring cryptohash random
       ];
       homepage = "https://github.com/PeterScott/pwstore";
       description = "Secure password storage";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "quandl-api" = callPackage
    ({ mkDerivation, aeson, base, blaze-builder, bytestring
     , http-conduit, http-types, old-locale, syb, text, time
     , unordered-containers
     }:
     mkDerivation {
       pname = "quandl-api";
       version = "0.2.0.0";
       sha256 = "1h6gh9wssb8dw9r5f7caanxq542d0jw9shvp7wx0i1k47f54kb3k";
       libraryHaskellDepends = [
         aeson base blaze-builder bytestring http-conduit http-types
         old-locale syb text time unordered-containers
       ];
       homepage = "https://github.com/pvdbrand/quandl-api";
       description = "Quandl.com API library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "quickcheck-assertions" = callPackage
    ({ mkDerivation, base, hspec, ieee754, QuickCheck }:
     mkDerivation {
       pname = "quickcheck-assertions";
       version = "0.2.0";
       sha256 = "0h7pa84hzy3bhv1acf1rvvw3lza0m8shd8a0vykzpx8lnkxbl3v0";
       libraryHaskellDepends = [ base ieee754 QuickCheck ];
       testHaskellDepends = [ base hspec ieee754 QuickCheck ];
       homepage = "https://github.com/s9gf4ult/quickcheck-assertions";
       description = "HUnit like assertions for QuickCheck";
       license = stdenv.lib.licenses.lgpl3;
     }) {};
  "quickcheck-instances" = callPackage
    ({ mkDerivation, array, base, bytestring, containers, hashable
     , old-time, QuickCheck, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "quickcheck-instances";
       version = "0.3.11";
       sha256 = "041s6963czs1pz0fc9cx17lgd6p83czqy2nxji7bhxqxwl2j15h2";
       revision = "1";
       editedCabalFile = "0k2gkhyy0d8ii1hyi9gfhwzdz4yd54brmw9xxcccy06jdal48xxq";
       libraryHaskellDepends = [
         array base bytestring containers hashable old-time QuickCheck text
         time unordered-containers
       ];
       homepage = "https://github.com/aslatter/qc-instances";
       description = "Common quickcheck instances";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "quickcheck-io" = callPackage
    ({ mkDerivation, base, HUnit, QuickCheck }:
     mkDerivation {
       pname = "quickcheck-io";
       version = "0.1.1";
       sha256 = "16q3sqvxnaqmbb1zbda8f61mdlmmzxhrznqxab113lmg380nwfm2";
       revision = "2";
       editedCabalFile = "02c482j3h72qyc58xgwc7iwwh7wgxi3liqbc8gk9nb9sxciikd9j";
       libraryHaskellDepends = [ base HUnit QuickCheck ];
       description = "Use HUnit assertions as QuickCheck properties";
       license = stdenv.lib.licenses.mit;
     }) {};
  "quickcheck-unicode" = callPackage
    ({ mkDerivation, base, QuickCheck }:
     mkDerivation {
       pname = "quickcheck-unicode";
       version = "1.0.0.1";
       sha256 = "1a8nl6x7l9b22yx61wm0bh2n1xzb1hd5i5zgg1w4fpaivjnrrhi4";
       libraryHaskellDepends = [ base QuickCheck ];
       homepage = "https://github.com/bos/quickcheck-unicode";
       description = "Generator and shrink functions for testing Unicode-related software";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "rainbow" = callPackage
    ({ mkDerivation, base, bytestring, process, QuickCheck, text }:
     mkDerivation {
       pname = "rainbow";
       version = "0.22.0.2";
       sha256 = "0bzjh7j0ckdzvmfb29pi1l7h28hg77rykwj4bndzi55mbqkabrs9";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base bytestring process text ];
       testHaskellDepends = [ base bytestring process QuickCheck text ];
       homepage = "https://www.github.com/massysett/rainbow";
       description = "Print text to terminal with colors and effects";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "random" = callPackage
    ({ mkDerivation, base, time }:
     mkDerivation {
       pname = "random";
       version = "1.1";
       sha256 = "0nis3lbkp8vfx8pkr6v7b7kr5m334bzb0fk9vxqklnp2aw8a865p";
       revision = "1";
       editedCabalFile = "1pv5d7bm2rgap7llp5vjsplrg048gvf0226y0v19gpvdsx7n4rvv";
       libraryHaskellDepends = [ base time ];
       testHaskellDepends = [ base ];
       description = "random number library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "random-fu" = callPackage
    ({ mkDerivation, base, erf, log-domain, math-functions, monad-loops
     , mtl, random-shuffle, random-source, rvar, syb, template-haskell
     , transformers, vector
     }:
     mkDerivation {
       pname = "random-fu";
       version = "0.2.6.2";
       sha256 = "1j7zr7h860vjwlh9d9sj319xs44ly2vyzn3s72c5qc39r0yv00ng";
       libraryHaskellDepends = [
         base erf log-domain math-functions monad-loops mtl random-shuffle
         random-source rvar syb template-haskell transformers vector
       ];
       homepage = "https://github.com/mokus0/random-fu";
       description = "Random number generation";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "random-shuffle" = callPackage
    ({ mkDerivation, base, MonadRandom, random }:
     mkDerivation {
       pname = "random-shuffle";
       version = "0.0.4";
       sha256 = "0586bnlh0g2isc44jbjvafkcl4yw6lp1db8x6vr0pza0y08l8w2j";
       libraryHaskellDepends = [ base MonadRandom random ];
       description = "Random shuffle implementation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "random-source" = callPackage
    ({ mkDerivation, base, flexible-defaults, mersenne-random-pure64
     , mtl, mwc-random, random, stateref, syb, template-haskell
     , th-extras
     }:
     mkDerivation {
       pname = "random-source";
       version = "0.3.0.6";
       sha256 = "0wsv41kpswqml04ym5bq2nan4i637f7h3fmvda2zy506xwxfrpzk";
       libraryHaskellDepends = [
         base flexible-defaults mersenne-random-pure64 mtl mwc-random random
         stateref syb template-haskell th-extras
       ];
       homepage = "https://github.com/mokus0/random-fu";
       description = "Generic basis for random number generators";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "rank1dynamic" = callPackage
    ({ mkDerivation, base, binary, constraints, ghc-prim, HUnit
     , test-framework, test-framework-hunit
     }:
     mkDerivation {
       pname = "rank1dynamic";
       version = "0.2.0.1";
       sha256 = "1np3ghp7wdn0clsyslk5j6fhs4c5cd6y0xlvdg2jj6ydaglzcchl";
       libraryHaskellDepends = [ base binary ghc-prim ];
       testHaskellDepends = [
         base constraints HUnit test-framework test-framework-hunit
       ];
       homepage = "http://haskell-distributed.github.com";
       description = "Like Data.Dynamic/Data.Typeable but with support for rank-1 polymorphic types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "rasterific-svg" = callPackage
    ({ mkDerivation, base, binary, bytestring, containers, directory
     , filepath, FontyFruity, JuicyPixels, lens, linear, mtl
     , optparse-applicative, Rasterific, scientific, svg-tree, text
     , transformers, vector
     }:
     mkDerivation {
       pname = "rasterific-svg";
       version = "0.1.0.3";
       sha256 = "1qzvqbkgj97wdiknlas57z2lfi311v0b5w68z6ni2il8hnnjrj64";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base binary bytestring containers directory filepath FontyFruity
         JuicyPixels lens linear mtl Rasterific scientific svg-tree text
         transformers vector
       ];
       executableHaskellDepends = [
         base filepath FontyFruity JuicyPixels optparse-applicative
         Rasterific svg-tree
       ];
       description = "SVG renderer based on Rasterific";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "raw-strings-qq" = callPackage
    ({ mkDerivation, base, template-haskell }:
     mkDerivation {
       pname = "raw-strings-qq";
       version = "1.0.2";
       sha256 = "0wnifa97am2s9bqixlidw3nf8w14h2qkg3sn1rxzgvc3fws57jg9";
       libraryHaskellDepends = [ base template-haskell ];
       homepage = "https://github.com/23Skidoo/raw-strings-qq";
       description = "Raw string literals for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "reducers" = callPackage
    ({ mkDerivation, array, base, bytestring, comonad, containers
     , fingertree, hashable, keys, pointed, semigroupoids, semigroups
     , text, transformers, unordered-containers
     }:
     mkDerivation {
       pname = "reducers";
       version = "3.10.3.1";
       sha256 = "0qmd93jdh0qjyc9if9hr2yjanrqx5nlbz5j0daiywzxcb0hi7ri8";
       revision = "1";
       editedCabalFile = "166gd2dmmxz7g04r23bbkn3709cqq6d9vmmy82dzp6sx0d1ryxir";
       libraryHaskellDepends = [
         array base bytestring comonad containers fingertree hashable keys
         pointed semigroupoids semigroups text transformers
         unordered-containers
       ];
       homepage = "http://github.com/ekmett/reducers/";
       description = "Semigroups, specialized containers and a general map/reduce framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "reflection" = callPackage
    ({ mkDerivation, base, template-haskell }:
     mkDerivation {
       pname = "reflection";
       version = "1.5.1.2";
       sha256 = "09fs42gmhdgfag7k4gm19l63sz5b1sxw6s3hgszpcnnsbv1g9ad4";
       libraryHaskellDepends = [ base template-haskell ];
       homepage = "http://github.com/ekmett/reflection";
       description = "Reifies arbitrary terms into types that can be reflected back into terms";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "regex-applicative" = callPackage
    ({ mkDerivation, base, containers, smallcheck, tasty, tasty-hunit
     , tasty-smallcheck, transformers
     }:
     mkDerivation {
       pname = "regex-applicative";
       version = "0.3.1";
       sha256 = "1klmi101zfpngf8c7fp2ch48kadbw6xs5lg0h00x7wi0zfrdbf0y";
       libraryHaskellDepends = [ base containers transformers ];
       testHaskellDepends = [
         base containers smallcheck tasty tasty-hunit tasty-smallcheck
         transformers
       ];
       homepage = "https://github.com/feuerbach/regex-applicative";
       description = "Regex-based parsing with applicative interface";
       license = stdenv.lib.licenses.mit;
     }) {};
  "regex-base" = callPackage
    ({ mkDerivation, array, base, bytestring, containers, mtl }:
     mkDerivation {
       pname = "regex-base";
       version = "0.93.2";
       sha256 = "0y1j4h2pg12c853nzmczs263di7xkkmlnsq5dlp5wgbgl49mgp10";
       libraryHaskellDepends = [ array base bytestring containers mtl ];
       homepage = "http://sourceforge.net/projects/lazy-regex";
       description = "Replaces/Enhances Text.Regex";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "regex-compat" = callPackage
    ({ mkDerivation, array, base, regex-base, regex-posix }:
     mkDerivation {
       pname = "regex-compat";
       version = "0.95.1";
       sha256 = "0fwmima3f04p9y4h3c23493n1xj629ia2dxaisqm6rynljjv2z6m";
       libraryHaskellDepends = [ array base regex-base regex-posix ];
       homepage = "http://sourceforge.net/projects/lazy-regex";
       description = "Replaces/Enhances Text.Regex";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "regex-pcre-builtin" = callPackage
    ({ mkDerivation, array, base, bytestring, containers, regex-base }:
     mkDerivation {
       pname = "regex-pcre-builtin";
       version = "0.94.4.8.8.35";
       sha256 = "0y7as9wqlkykpipka2cfdhmcnin345q01pp0wsva8fwmvsavdl8b";
       libraryHaskellDepends = [
         array base bytestring containers regex-base
       ];
       homepage = "http://hackage.haskell.org/package/regex-pcre";
       description = "Replaces/Enhances Text.Regex";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "regex-posix" = callPackage
    ({ mkDerivation, array, base, bytestring, containers, regex-base }:
     mkDerivation {
       pname = "regex-posix";
       version = "0.95.2";
       sha256 = "0gkhzhj8nvfn1ija31c7xnl6p0gadwii9ihyp219ck2arlhrj0an";
       libraryHaskellDepends = [
         array base bytestring containers regex-base
       ];
       homepage = "http://sourceforge.net/projects/lazy-regex";
       description = "Replaces/Enhances Text.Regex";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "regex-tdfa" = callPackage
    ({ mkDerivation, array, base, bytestring, containers, ghc-prim, mtl
     , parsec, regex-base
     }:
     mkDerivation {
       pname = "regex-tdfa";
       version = "1.2.0";
       sha256 = "00gl9sx3hzd83lp38jlcj7wvzrda8kww7njwlm1way73m8aar0pw";
       revision = "1";
       editedCabalFile = "13j7a3xkaq0qb4y25i9l8a8lyaqfpc0dakqkwlg1i3hfkydvd2al";
       libraryHaskellDepends = [
         array base bytestring containers ghc-prim mtl parsec regex-base
       ];
       homepage = "http://hackage.haskell.org/package/regex-tdfa";
       description = "Replaces/Enhances Text.Regex";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "regex-tdfa-rc" = callPackage
    ({ mkDerivation, array, base, bytestring, containers, ghc-prim, mtl
     , parsec, regex-base
     }:
     mkDerivation {
       pname = "regex-tdfa-rc";
       version = "1.1.8.3";
       sha256 = "1vi11i23gkkjg6193ak90g55akj69bhahy542frkwb68haky4pp3";
       libraryHaskellDepends = [
         array base bytestring containers ghc-prim mtl parsec regex-base
       ];
       homepage = "http://hackage.haskell.org/package/regex-tdfa";
       description = "Replaces/Enhances Text.Regex";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "regexpr" = callPackage
    ({ mkDerivation, base, HUnit, mtl, mtlparse }:
     mkDerivation {
       pname = "regexpr";
       version = "0.5.4";
       sha256 = "0136wp6hrnmj6pbdhp3a131dzz8bp1pbd92bpagpv1r6gwj16y5z";
       libraryHaskellDepends = [ base HUnit mtl mtlparse ];
       homepage = "http://homepage3.nifty.com/salamander/second/projects/regexpr/";
       description = "regular expression like Perl/Ruby in Haskell";
       license = "LGPL";
     }) {};
  "regular" = callPackage
    ({ mkDerivation, base, template-haskell }:
     mkDerivation {
       pname = "regular";
       version = "0.3.4.4";
       sha256 = "112n3j27ac9lzs0lc3q12r6wmpkmfgdalv18h1qklhd5nh4j9wl5";
       revision = "1";
       editedCabalFile = "0hrr2drpmrsb3jim2lgfx7nx2pvycdvfff51j2v3ihgdy8d8zqrw";
       libraryHaskellDepends = [ base template-haskell ];
       description = "Generic programming library for regular datatypes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "regular-xmlpickler" = callPackage
    ({ mkDerivation, base, hxt, regular, text }:
     mkDerivation {
       pname = "regular-xmlpickler";
       version = "0.2";
       sha256 = "1qjx4xsidnpr2as3m2ir97ap5vc9cw6a0z332g53ifx9gskjli9f";
       libraryHaskellDepends = [ base hxt regular text ];
       homepage = "http://github.com/silkapp/regular-xmlpickler";
       description = "Generic generation of HXT XmlPickler instances using Regular";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "rematch" = callPackage
    ({ mkDerivation, base, hspec, HUnit }:
     mkDerivation {
       pname = "rematch";
       version = "0.2.0.0";
       sha256 = "0law4al9hzn9qljfm8rwgmb15pzpcs8i44v1l6279977q0lxx5pr";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base hspec HUnit ];
       doCheck = false;
       description = "A simple api for matchers";
       license = stdenv.lib.licenses.mit;
     }) {};
  "repa" = callPackage
    ({ mkDerivation, base, bytestring, ghc-prim, QuickCheck
     , template-haskell, vector
     }:
     mkDerivation {
       pname = "repa";
       version = "3.3.1.2";
       sha256 = "0rsahd6c1mxd8hq9zfx4jqgmcfs4di4askky87y71xy5v4k1x4ai";
       libraryHaskellDepends = [
         base bytestring ghc-prim QuickCheck template-haskell vector
       ];
       homepage = "http://repa.ouroborus.net";
       description = "High performance, regular, shape polymorphic parallel arrays";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "repa-algorithms" = callPackage
    ({ mkDerivation, base, repa, vector }:
     mkDerivation {
       pname = "repa-algorithms";
       version = "3.3.1.2";
       sha256 = "12fizvma877ws3xiz3k34jg5xh5yhnl0n5aq2za005l9i5angkk9";
       libraryHaskellDepends = [ base repa vector ];
       homepage = "http://repa.ouroborus.net";
       description = "Algorithms using the Repa array library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "repa-devil" = callPackage
    ({ mkDerivation, base, libdevil, repa, transformers }:
     mkDerivation {
       pname = "repa-devil";
       version = "0.3.2.6";
       sha256 = "0f7xawg4qlfbf24lrjbpqzl3f3zf63f8g5b2gi17h0rpyw3cxhzy";
       libraryHaskellDepends = [ base repa transformers ];
       librarySystemDepends = [ libdevil ];
       homepage = "https://github.com/RaphaelJ/repa-devil";
       description = "Support for image reading and writing of Repa arrays using in-place FFI calls";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) libdevil;};
  "repa-io" = callPackage
    ({ mkDerivation, base, binary, bmp, bytestring, old-time, repa
     , vector
     }:
     mkDerivation {
       pname = "repa-io";
       version = "3.3.1.2";
       sha256 = "1i58ysk44y7s6z1jmns2fi83flqma4k5nsjh1pblqb2rgl7x0z5p";
       libraryHaskellDepends = [
         base binary bmp bytestring old-time repa vector
       ];
       homepage = "http://repa.ouroborus.net";
       description = "Read and write Repa arrays in various formats";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "reroute" = callPackage
    ({ mkDerivation, base, criterion, deepseq, graph-core, hashable
     , hspec, mtl, path-pieces, random, regex-compat, text, transformers
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "reroute";
       version = "0.2.3.0";
       sha256 = "1wyr54kllh3cfwl9i291ymmpmmk8vv8y4i3k1kwa8b0zv5kky1px";
       libraryHaskellDepends = [
         base deepseq graph-core hashable mtl path-pieces regex-compat text
         transformers unordered-containers vector
       ];
       testHaskellDepends = [
         base hspec mtl text unordered-containers vector
       ];
       benchmarkHaskellDepends = [
         base criterion deepseq graph-core hashable mtl path-pieces random
         regex-compat text unordered-containers vector
       ];
       homepage = "http://github.com/agrafix/reroute";
       description = "abstract implementation of typed and untyped web routing";
       license = stdenv.lib.licenses.mit;
     }) {};
  "resource-pool" = callPackage
    ({ mkDerivation, base, hashable, monad-control, stm, time
     , transformers, transformers-base, vector
     }:
     mkDerivation {
       pname = "resource-pool";
       version = "0.2.3.2";
       sha256 = "04mw8b9djb14zp4rdi6h7mc3zizh597ffiinfbr4m0m8psifw9w6";
       libraryHaskellDepends = [
         base hashable monad-control stm time transformers transformers-base
         vector
       ];
       homepage = "http://github.com/bos/pool";
       description = "A high-performance striped resource pooling implementation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "resourcet" = callPackage
    ({ mkDerivation, base, containers, exceptions, hspec, lifted-base
     , mmorph, monad-control, mtl, transformers, transformers-base
     , transformers-compat
     }:
     mkDerivation {
       pname = "resourcet";
       version = "1.1.4.1";
       sha256 = "1qw9bjr22g8a1fr84cmwjqpqs7cfc8iagix4s618snrg1r1gp6p2";
       revision = "1";
       editedCabalFile = "1mvan3gkx1vnxi3hswly39pyzkwp0sch6rmlvz7k4jr0wxlnf418";
       libraryHaskellDepends = [
         base containers exceptions lifted-base mmorph monad-control mtl
         transformers transformers-base transformers-compat
       ];
       testHaskellDepends = [ base hspec lifted-base transformers ];
       homepage = "http://github.com/snoyberg/conduit";
       description = "Deterministic allocation and freeing of scarce resources";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "rest-client" = callPackage
    ({ mkDerivation, aeson-utils, base, bytestring, case-insensitive
     , data-default, exceptions, http-conduit, http-types, hxt
     , hxt-pickle-utils, monad-control, mtl, resourcet, rest-types
     , tostring, transformers, transformers-base, transformers-compat
     , uri-encode, utf8-string
     }:
     mkDerivation {
       pname = "rest-client";
       version = "0.5.0.2";
       sha256 = "1sykmz3mms714sypkpbjhk6dapb0saqsvwjjxnr3cklxdhxhyvz6";
       libraryHaskellDepends = [
         aeson-utils base bytestring case-insensitive data-default
         exceptions http-conduit http-types hxt hxt-pickle-utils
         monad-control mtl resourcet rest-types tostring transformers
         transformers-base transformers-compat uri-encode utf8-string
       ];
       description = "Utility library for use in generated API client libraries";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "rest-core" = callPackage
    ({ mkDerivation, aeson, aeson-utils, base, bytestring
     , case-insensitive, either, errors, fclabels, HUnit, hxt
     , hxt-pickle-utils, json-schema, mtl, mtl-compat, multipart, random
     , rest-stringmap, rest-types, safe, semigroups, split
     , test-framework, test-framework-hunit, text, transformers
     , transformers-compat, unordered-containers, uri-encode
     , utf8-string, uuid
     }:
     mkDerivation {
       pname = "rest-core";
       version = "0.35.1";
       sha256 = "16mzvbkv69i0kabjj214166rmsqqc0ga5ad1i7yhm6202s11fx4n";
       libraryHaskellDepends = [
         aeson aeson-utils base bytestring case-insensitive either errors
         fclabels hxt hxt-pickle-utils json-schema mtl mtl-compat multipart
         random rest-stringmap rest-types safe semigroups split text
         transformers transformers-compat unordered-containers uri-encode
         utf8-string uuid
       ];
       testHaskellDepends = [
         base bytestring HUnit mtl test-framework test-framework-hunit
         transformers transformers-compat unordered-containers
       ];
       description = "Rest API library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "rest-gen" = callPackage
    ({ mkDerivation, aeson, base, blaze-html, Cabal, code-builder
     , directory, fclabels, filepath, hashable, haskell-src-exts
     , HStringTemplate, HUnit, hxt, json-schema, pretty, process
     , rest-core, safe, scientific, semigroups, split, tagged
     , test-framework, test-framework-hunit, text, uniplate
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "rest-gen";
       version = "0.17.0.3";
       sha256 = "0hydifrpyzgd2kyrxxwzh7z5iiz0x3584nlgx8gzikyqab8gbk04";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson base blaze-html Cabal code-builder directory fclabels
         filepath hashable haskell-src-exts HStringTemplate hxt json-schema
         pretty process rest-core safe scientific semigroups split tagged
         text uniplate unordered-containers vector
       ];
       testHaskellDepends = [
         base fclabels haskell-src-exts HUnit rest-core test-framework
         test-framework-hunit
       ];
       description = "Documentation and client generation from rest definition";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "rest-happstack" = callPackage
    ({ mkDerivation, base, containers, happstack-server, mtl, rest-core
     , rest-gen, utf8-string
     }:
     mkDerivation {
       pname = "rest-happstack";
       version = "0.2.10.7";
       sha256 = "17fqfax3whslip0knwr21f2h674nz5ayqk6947dryhglvwhsyn5v";
       libraryHaskellDepends = [
         base containers happstack-server mtl rest-core rest-gen utf8-string
       ];
       description = "Rest driver for Happstack";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "rest-snap" = callPackage
    ({ mkDerivation, base, bytestring, case-insensitive, rest-core
     , safe, snap-core, unordered-containers, uri-encode, utf8-string
     }:
     mkDerivation {
       pname = "rest-snap";
       version = "0.1.17.17";
       sha256 = "1q2w9p9g66fv4mq566895l15l8ywz7nl4bf0zlyf1ng64fmi9far";
       libraryHaskellDepends = [
         base bytestring case-insensitive rest-core safe snap-core
         unordered-containers uri-encode utf8-string
       ];
       description = "Rest driver for Snap";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "rest-stringmap" = callPackage
    ({ mkDerivation, aeson, base, containers, hashable, hxt
     , json-schema, tagged, text, tostring, unordered-containers
     }:
     mkDerivation {
       pname = "rest-stringmap";
       version = "0.2.0.4";
       sha256 = "0r9wmy5myysnw83000qlw547ny9lpshm09fi8hmfr14kd3mr9fb1";
       libraryHaskellDepends = [
         aeson base containers hashable hxt json-schema tagged text tostring
         unordered-containers
       ];
       description = "Maps with stringy keys that can be transcoded to JSON and XML";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "rest-types" = callPackage
    ({ mkDerivation, aeson, base, case-insensitive, generic-aeson, hxt
     , json-schema, mtl, regular, regular-xmlpickler, rest-stringmap
     , text, transformers, transformers-compat, uuid
     }:
     mkDerivation {
       pname = "rest-types";
       version = "1.13.1";
       sha256 = "09lyx0a4w1mp1ivcky3wnlhisp2a8sd3f37zcr5ckxi8sjmcvsli";
       libraryHaskellDepends = [
         aeson base case-insensitive generic-aeson hxt json-schema mtl
         regular regular-xmlpickler rest-stringmap text transformers
         transformers-compat uuid
       ];
       description = "Silk Rest Framework Types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "rest-wai" = callPackage
    ({ mkDerivation, base, bytestring, case-insensitive, containers
     , http-types, mime-types, mtl, rest-core, text
     , unordered-containers, wai
     }:
     mkDerivation {
       pname = "rest-wai";
       version = "0.1.0.7";
       sha256 = "0agvs26x26cgzls66jx7pj2qdn01snjr11rv7sd3x3h4g3ww375v";
       revision = "1";
       editedCabalFile = "108rhh4yir6rjbnnr945y029y44pavmsgdipmk1qiqq6xd3b458v";
       libraryHaskellDepends = [
         base bytestring case-insensitive containers http-types mime-types
         mtl rest-core text unordered-containers wai
       ];
       description = "Rest driver for WAI applications";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "rethinkdb-client-driver" = callPackage
    ({ mkDerivation, aeson, base, binary, bytestring, criterion
     , hashable, hspec, hspec-smallcheck, mtl, network, old-locale
     , scientific, smallcheck, template-haskell, text, time
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "rethinkdb-client-driver";
       version = "0.0.16";
       sha256 = "1x4kw64mjp4900qnmvakrd7vfqg14h35k0jzai5qh6y88rr3qaf1";
       revision = "1";
       editedCabalFile = "05iz1gc03980vix4sml5ix1cf9h471hlmz8vdfyr574w7pp3789x";
       libraryHaskellDepends = [
         aeson base binary bytestring hashable mtl network old-locale
         scientific template-haskell text time unordered-containers vector
       ];
       testHaskellDepends = [
         base hspec hspec-smallcheck smallcheck text time
         unordered-containers vector
       ];
       benchmarkHaskellDepends = [
         base criterion text time unordered-containers vector
       ];
       doHaddock = false;
       doCheck = false;
       homepage = "https://github.com/wereHamster/rethinkdb-client-driver";
       description = "Client driver for RethinkDB";
       license = stdenv.lib.licenses.mit;
     }) {};
  "retry" = callPackage
    ({ mkDerivation, base, data-default-class, exceptions, transformers
     }:
     mkDerivation {
       pname = "retry";
       version = "0.6";
       sha256 = "1ry2zqs5361mg5ibnd6awjpl3nl3a6ha18m0v2f28hs9kw6dnsgj";
       revision = "1";
       editedCabalFile = "0hkb0xrp34wamc8bapkijc1q5c5hbmcbp9p095z7hlhz3ckgzwq8";
       libraryHaskellDepends = [
         base data-default-class exceptions transformers
       ];
       doCheck = false;
       homepage = "http://github.com/Soostone/retry";
       description = "Retry combinators for monadic actions that may fail";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "rev-state" = callPackage
    ({ mkDerivation, base, mtl }:
     mkDerivation {
       pname = "rev-state";
       version = "0.1";
       sha256 = "1lsq7b225v86rwm2rnrnhn28asjh6r3zwbvdm5vl4sp46cr5i4cf";
       libraryHaskellDepends = [ base mtl ];
       homepage = "https://github.com/DanBurton/rev-state#readme";
       description = "Reverse State monad transformer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "rfc5051" = callPackage
    ({ mkDerivation, base, bytestring, containers }:
     mkDerivation {
       pname = "rfc5051";
       version = "0.1.0.3";
       sha256 = "0av4c3qvwbkbzrjrrg601ay9pds7wscqqp2lc2z78mv2lllap3g3";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base bytestring containers ];
       executableHaskellDepends = [ base bytestring containers ];
       description = "Simple unicode collation as per RFC5051";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "runmemo" = callPackage
    ({ mkDerivation, base, data-memocombinators, time }:
     mkDerivation {
       pname = "runmemo";
       version = "1.0.0.1";
       sha256 = "12fn0lsil0rj0pj0ixzppsdw2fmj0cnzci4fh11z9rcggwbz6pms";
       testHaskellDepends = [ base data-memocombinators time ];
       homepage = "https://github.com/DanBurton/runmemo";
       description = "A simple memoization helper library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "rvar" = callPackage
    ({ mkDerivation, base, MonadPrompt, mtl, random-source
     , transformers
     }:
     mkDerivation {
       pname = "rvar";
       version = "0.2.0.2";
       sha256 = "1n24fl27mrm7cndp8b646b9c5hjm3hf5m12y9ni0f850dd739jm4";
       libraryHaskellDepends = [
         base MonadPrompt mtl random-source transformers
       ];
       homepage = "https://github.com/mokus0/random-fu";
       description = "Random Variables";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "safe" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "safe";
       version = "0.3.8";
       sha256 = "0k5lk85z2y8kgk7dx7km32g8vi55vnwln8ys2gs174ljd136cjdf";
       libraryHaskellDepends = [ base ];
       homepage = "http://community.haskell.org/~ndm/safe/";
       description = "Library of safe (exception free) functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "safecopy" = callPackage
    ({ mkDerivation, array, base, bytestring, cereal, containers, lens
     , lens-action, old-time, quickcheck-instances, tasty
     , tasty-quickcheck, template-haskell, text, time, vector
     }:
     mkDerivation {
       pname = "safecopy";
       version = "0.8.5";
       sha256 = "1r0v2276hynxkysyrdmy2334gwxgaz2v6j8g0hd5jzfj2kmnnmk9";
       revision = "3";
       editedCabalFile = "13ygwpx8h0f24ddhx61viwj39j52rhzsnw7bk5z6lx2fcgzi98cf";
       libraryHaskellDepends = [
         array base bytestring cereal containers old-time template-haskell
         text time vector
       ];
       testHaskellDepends = [
         array base cereal containers lens lens-action quickcheck-instances
         tasty tasty-quickcheck template-haskell time vector
       ];
       homepage = "http://acid-state.seize.it/safecopy";
       description = "Binary serialization with version control";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "sbv" = callPackage
    ({ mkDerivation, array, async, base, containers, deepseq, directory
     , filepath, HUnit, mtl, old-time, pretty, process, QuickCheck
     , random, syb
     }:
     mkDerivation {
       pname = "sbv";
       version = "4.2";
       sha256 = "1q62fa2wi8sxkbx93qpxqr6sivs5q028kdbs35j3ym9mb3pa8y8q";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         array async base containers deepseq directory filepath mtl old-time
         pretty process QuickCheck random syb
       ];
       executableHaskellDepends = [
         base directory filepath HUnit process syb
       ];
       testHaskellDepends = [ base directory filepath HUnit syb ];
       homepage = "http://leventerkok.github.com/sbv/";
       description = "SMT Based Verification: Symbolic Haskell theorem prover using SMT solving";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "scientific" = callPackage
    ({ mkDerivation, array, base, bytestring, deepseq, ghc-prim
     , hashable, integer-gmp, QuickCheck, smallcheck, tasty
     , tasty-ant-xml, tasty-hunit, tasty-quickcheck, tasty-smallcheck
     , text
     }:
     mkDerivation {
       pname = "scientific";
       version = "0.3.3.8";
       sha256 = "0k6f9g3jpwhm52af4zayhdby8xibarn60mpxbb8xxgm78hmdw373";
       libraryHaskellDepends = [
         array base bytestring deepseq ghc-prim hashable integer-gmp text
       ];
       testHaskellDepends = [
         base bytestring QuickCheck smallcheck tasty tasty-ant-xml
         tasty-hunit tasty-quickcheck tasty-smallcheck text
       ];
       homepage = "https://github.com/basvandijk/scientific";
       description = "Numbers represented using scientific notation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "scotty" = callPackage
    ({ mkDerivation, aeson, base, blaze-builder, bytestring
     , case-insensitive, data-default, hspec, hspec-wai, http-types
     , lifted-base, monad-control, mtl, regex-compat, text, transformers
     , transformers-base, wai, wai-extra, warp
     }:
     mkDerivation {
       pname = "scotty";
       version = "0.9.1";
       sha256 = "0w07ghnd7l8ibfbl8p74lwn8gxy3z28mp0rlv5crma3yh42irsqm";
       revision = "2";
       editedCabalFile = "1rzxgd1x5jyb40x4d8wnwx1nciqkrb1saacaplh6sknsnjxx8yz3";
       libraryHaskellDepends = [
         aeson base blaze-builder bytestring case-insensitive data-default
         http-types monad-control mtl regex-compat text transformers
         transformers-base wai wai-extra warp
       ];
       testHaskellDepends = [
         base bytestring hspec hspec-wai http-types lifted-base text wai
       ];
       homepage = "https://github.com/scotty-web/scotty";
       description = "Haskell web framework inspired by Ruby's Sinatra, using WAI and Warp";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "scrobble" = callPackage
    ({ mkDerivation, base, containers, curl, MissingH, network
     , network-uri, old-locale, pureMD5, time, url
     }:
     mkDerivation {
       pname = "scrobble";
       version = "0.2.1.1";
       sha256 = "161l75bni4fxmh35dfz8r2vgllmmf0s55j9y2xpyskqfj3xc85a7";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base containers curl MissingH network network-uri old-locale
         pureMD5 time url
       ];
       executableHaskellDepends = [
         base containers curl MissingH network network-uri old-locale time
         url
       ];
       description = "Scrobbling server";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "sdl2" = callPackage
    ({ mkDerivation, base, SDL2, transformers }:
     mkDerivation {
       pname = "sdl2";
       version = "1.3.0";
       sha256 = "0fi9kjf12qlp64r2pxwc1k9241s23j6xm0dmwdsc18y8f6acvqxa";
       libraryHaskellDepends = [ base transformers ];
       librarySystemDepends = [ SDL2 ];
       libraryPkgconfigDepends = [ SDL2 ];
       description = "Low-level bindings to SDL2";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) SDL2;};
  "securemem" = callPackage
    ({ mkDerivation, base, byteable, bytestring, ghc-prim }:
     mkDerivation {
       pname = "securemem";
       version = "0.1.7";
       sha256 = "14mmis2y9xf3jzmf6s6g7g8ixgbrx99x0b422zv4ix3vpx2lj57r";
       libraryHaskellDepends = [ base byteable bytestring ghc-prim ];
       homepage = "http://github.com/vincenthz/hs-securemem";
       description = "abstraction to an auto scrubbing and const time eq, memory chunk";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "semigroupoid-extras" = callPackage
    ({ mkDerivation, base, semigroupoids }:
     mkDerivation {
       pname = "semigroupoid-extras";
       version = "4.0";
       sha256 = "07aa7z4nywcrp9msq83b1pcmryl25yxha89sn5vwlgq40cibcm3g";
       libraryHaskellDepends = [ base semigroupoids ];
       doHaddock = false;
       homepage = "http://github.com/ekmett/semigroupoid-extras";
       description = "This package has been absorbed into semigroupoids 4.0";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "semigroupoids" = callPackage
    ({ mkDerivation, base, comonad, containers, contravariant
     , distributive, doctest, Glob, semigroups, transformers
     , transformers-compat
     }:
     mkDerivation {
       pname = "semigroupoids";
       version = "4.3";
       sha256 = "1qn0rffc1zskk6f34pxrp96iarxgp36l2404rs6sz9khl1hh58sf";
       revision = "2";
       editedCabalFile = "1qlrh7zfmy391xp1lgla49r6ngq9cskqy0lcdacv58p3j329hm93";
       libraryHaskellDepends = [
         base comonad containers contravariant distributive semigroups
         transformers transformers-compat
       ];
       testHaskellDepends = [ base doctest Glob ];
       doCheck = false;
       homepage = "http://github.com/ekmett/semigroupoids";
       description = "Semigroupoids: Category sans id";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "semigroups" = callPackage
    ({ mkDerivation, base, bytestring, containers, deepseq, hashable
     , nats, text, unordered-containers
     }:
     mkDerivation {
       pname = "semigroups";
       version = "0.16.2.2";
       sha256 = "0mzdv05yhrvnib62mwfwwj66fmyzs3axm0y5sn374ig2r113wzni";
       revision = "1";
       editedCabalFile = "186lkgxp10h0rncc2fx01lw0cf9pkvrk66rlf2r591ybgiprqz3d";
       libraryHaskellDepends = [
         base bytestring containers deepseq hashable nats text
         unordered-containers
       ];
       homepage = "http://github.com/ekmett/semigroups/";
       description = "Anything that associates";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "semver" = callPackage
    ({ mkDerivation, attoparsec, base, criterion, deepseq, tasty
     , tasty-hunit, text
     }:
     mkDerivation {
       pname = "semver";
       version = "0.3.3.1";
       sha256 = "1cf8dcxq4s479f826drncqc4hd07hv330zsipkrn0vc30sbkdlrn";
       libraryHaskellDepends = [ attoparsec base deepseq text ];
       testHaskellDepends = [ base tasty tasty-hunit text ];
       benchmarkHaskellDepends = [ base criterion text ];
       homepage = "https://github.com/brendanhay/semver";
       description = "Representation, manipulation, and de/serialisation of Semantic Versions";
       license = "unknown";
     }) {};
  "sendfile" = callPackage
    ({ mkDerivation, base, bytestring, network }:
     mkDerivation {
       pname = "sendfile";
       version = "0.7.9";
       sha256 = "0hnw1ym81cff49dwww19kgbs4s0kpandbvn6h5cml3y0p1nxybqh";
       libraryHaskellDepends = [ base bytestring network ];
       homepage = "http://hub.darcs.net/stepcut/sendfile";
       description = "A portable sendfile library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "seqloc" = callPackage
    ({ mkDerivation, attoparsec, base, biocore, bytestring, hashable
     , QuickCheck, random, unordered-containers, vector
     }:
     mkDerivation {
       pname = "seqloc";
       version = "0.6.1.1";
       sha256 = "1hsm9y6q0g7ixnqj562a33lmyka4k7f778fndcmn25v4m1myfda4";
       libraryHaskellDepends = [
         attoparsec base biocore bytestring hashable unordered-containers
         vector
       ];
       testHaskellDepends = [
         attoparsec base biocore bytestring hashable QuickCheck random
         unordered-containers vector
       ];
       homepage = "http://www.ingolia-lab.org/seqloc-tutorial.html";
       description = "Handle sequence locations for bioinformatics";
       license = stdenv.lib.licenses.mit;
     }) {};
  "servant" = callPackage
    ({ mkDerivation, base, hspec, parsec, QuickCheck
     , string-conversions, template-haskell, text
     }:
     mkDerivation {
       pname = "servant";
       version = "0.2.2";
       sha256 = "1pblmnarq1939d2krwbmd9ssm68ar9ip54dl28zjv2j51vhhhzhc";
       libraryHaskellDepends = [
         base parsec string-conversions template-haskell text
       ];
       testHaskellDepends = [
         base hspec parsec QuickCheck string-conversions text
       ];
       homepage = "http://haskell-servant.github.io/";
       description = "A family of combinators for defining webservices APIs";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "servant-client" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, bytestring, deepseq
     , either, exceptions, hspec, http-client, http-client-tls
     , http-types, network, network-uri, QuickCheck, safe, servant
     , servant-server, string-conversions, text, transformers, wai, warp
     }:
     mkDerivation {
       pname = "servant-client";
       version = "0.2.2";
       sha256 = "0b96aglic4aawdcpaxyv9k807kjfrr0a9kniqgj5nfcpgwglnp5r";
       revision = "2";
       editedCabalFile = "03sw0dcv7pkyidv29r3gpd3i7hdjrjmjdv5sw4m41wc6b1vgmzfd";
       libraryHaskellDepends = [
         aeson attoparsec base bytestring either exceptions http-client
         http-client-tls http-types network-uri safe servant
         string-conversions text transformers
       ];
       testHaskellDepends = [
         aeson base bytestring deepseq either hspec http-types network
         QuickCheck servant servant-server wai warp
       ];
       homepage = "http://haskell-servant.github.io/";
       description = "automatical derivation of querying functions for servant webservices";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "servant-docs" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, base, bytestring, hashable
     , lens, servant, string-conversions, system-filepath, text
     , unordered-containers
     }:
     mkDerivation {
       pname = "servant-docs";
       version = "0.3.1";
       sha256 = "1xbwi5ix5yanrcldc97dwim7s358g7hbr5pwk3r6azknwjzf5fd4";
       revision = "1";
       editedCabalFile = "1y9sr7w2mshbmkd47i5xrk9w79g3qr4s61hiqky8j0z3b8yyf95a";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson aeson-pretty base bytestring hashable lens servant
         string-conversions system-filepath text unordered-containers
       ];
       executableHaskellDepends = [ aeson base servant text ];
       homepage = "http://haskell-servant.github.io/";
       description = "generate API docs for your servant webservice";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "servant-jquery" = callPackage
    ({ mkDerivation, aeson, base, filepath, hspec, language-ecmascript
     , lens, servant, servant-server, stm, transformers, warp
     }:
     mkDerivation {
       pname = "servant-jquery";
       version = "0.2.2.1";
       sha256 = "0s3c85jpy630bfnzq0wlzv38bkr18cpw5lffn6wh8pjwshd5y8zi";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base lens servant ];
       executableHaskellDepends = [
         aeson base filepath servant servant-server stm transformers warp
       ];
       testHaskellDepends = [ base hspec language-ecmascript servant ];
       homepage = "http://haskell-servant.github.io/";
       description = "Automatically derive (jquery) javascript functions to query servant webservices";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "servant-server" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, bytestring, directory
     , either, exceptions, hspec, hspec-wai, http-types, network
     , network-uri, parsec, QuickCheck, safe, servant, split
     , string-conversions, system-filepath, temporary, text
     , transformers, wai, wai-app-static, wai-extra, warp
     }:
     mkDerivation {
       pname = "servant-server";
       version = "0.2.4";
       sha256 = "11bds7zhkvqg9w27kb0dd792qvz8gjgkmkpbnijvwwzah5gmipi0";
       revision = "2";
       editedCabalFile = "01fmg9bfrg5ckyzlnps9148jb1829vdwbbn1hb3ngjscsn6ya2rj";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson attoparsec base bytestring either http-types network-uri safe
         servant split string-conversions system-filepath text transformers
         wai wai-app-static warp
       ];
       executableHaskellDepends = [ aeson base servant text wai warp ];
       testHaskellDepends = [
         aeson base bytestring directory either exceptions hspec hspec-wai
         http-types network parsec QuickCheck servant string-conversions
         temporary text transformers wai wai-extra warp
       ];
       homepage = "http://haskell-servant.github.io/";
       description = "A family of combinators for defining webservices APIs and serving them";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "set-monad" = callPackage
    ({ mkDerivation, base, containers, deepseq }:
     mkDerivation {
       pname = "set-monad";
       version = "0.2.0.0";
       sha256 = "1nxgn8d0qff4s66gcvfrnxjh0aq5q5jk0s453km28457qh946azb";
       libraryHaskellDepends = [ base containers deepseq ];
       description = "Set monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "setenv" = callPackage
    ({ mkDerivation, base, unix }:
     mkDerivation {
       pname = "setenv";
       version = "0.1.1.3";
       sha256 = "0cnbgrvb9byyahb37zlqrj05rj25v190crgcw8wmlgf0mwwxyn73";
       revision = "1";
       editedCabalFile = "0ny4g3kjys0hqg41mnwrsymy1bwhl8l169kis4y4fa58sb06m4f5";
       libraryHaskellDepends = [ base unix ];
       description = "A cross-platform library for setting environment variables";
       license = stdenv.lib.licenses.mit;
     }) {};
  "shake" = callPackage
    ({ mkDerivation, base, binary, bytestring, deepseq, directory
     , extra, filepath, hashable, js-flot, js-jquery, old-time, process
     , QuickCheck, random, time, transformers, unix
     , unordered-containers, utf8-string
     }:
     mkDerivation {
       pname = "shake";
       version = "0.15.1";
       sha256 = "0bdx2pclcnqbkdwv8jw6v7w21hn29dp9xbvsbfrnqjvb9f6p1my9";
       revision = "1";
       editedCabalFile = "11fm97k558h5cd8pypm2c8lnx3c3hsqz06y4mfq1fzj3rp77832h";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base binary bytestring deepseq directory extra filepath hashable
         js-flot js-jquery old-time process random time transformers unix
         unordered-containers utf8-string
       ];
       executableHaskellDepends = [
         base binary bytestring deepseq directory extra filepath hashable
         js-flot js-jquery old-time process random time transformers unix
         unordered-containers utf8-string
       ];
       testHaskellDepends = [
         base binary bytestring deepseq directory extra filepath hashable
         js-flot js-jquery old-time process QuickCheck random time
         transformers unix unordered-containers utf8-string
       ];
       doCheck = false;
       homepage = "http://shakebuild.com";
       description = "Build system library, like Make, but more accurate dependencies";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "shake-language-c" = callPackage
    ({ mkDerivation, base, data-default-class, directory, doctest
     , fclabels, hspec, process, shake, split, unordered-containers
     }:
     mkDerivation {
       pname = "shake-language-c";
       version = "0.6.4";
       sha256 = "1wn491jcx78v748dyis7wg3jlg0kff0iv605a6f2ig3j7sxka1yz";
       libraryHaskellDepends = [
         base data-default-class fclabels process shake split
         unordered-containers
       ];
       testHaskellDepends = [ base directory doctest hspec shake ];
       homepage = "https://github.com/samplecount/shake-language-c";
       description = "Utilities for cross-compiling with Shake";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "shakespeare" = callPackage
    ({ mkDerivation, aeson, base, blaze-html, blaze-markup, bytestring
     , containers, directory, exceptions, ghc-prim, hspec, HUnit, parsec
     , process, system-fileio, system-filepath, template-haskell, text
     , time, transformers
     }:
     mkDerivation {
       pname = "shakespeare";
       version = "2.0.4.1";
       sha256 = "0z3aw13kjknrb0r15jffvc4b2aj89r1zl83ighs2cv318dd89qzi";
       revision = "1";
       editedCabalFile = "1fflcfxjnb12m8r3hyhy6bhh6g97pjsqjgac0ik11nrsik7ilav6";
       libraryHaskellDepends = [
         aeson base blaze-html blaze-markup bytestring containers directory
         exceptions ghc-prim parsec process system-fileio system-filepath
         template-haskell text time transformers
       ];
       testHaskellDepends = [
         aeson base blaze-html blaze-markup bytestring containers directory
         exceptions ghc-prim hspec HUnit parsec process system-fileio
         system-filepath template-haskell text time transformers
       ];
       homepage = "http://www.yesodweb.com/book/shakespearean-templates";
       description = "A toolkit for making compile-time interpolated templates";
       license = stdenv.lib.licenses.mit;
     }) {};
  "shakespeare-text" = callPackage
    ({ mkDerivation, base, shakespeare }:
     mkDerivation {
       pname = "shakespeare-text";
       version = "1.1.0";
       sha256 = "18ixixb9aqn630s9wblxcki1gggm4i0fj9752c55p3b42q8h86rc";
       libraryHaskellDepends = [ base shakespeare ];
       doHaddock = false;
       homepage = "http://www.yesodweb.com/book/shakespearean-templates";
       description = "Interpolation with quasi-quotation: put variables strings (deprecated)";
       license = stdenv.lib.licenses.mit;
     }) {};
  "shell-conduit" = callPackage
    ({ mkDerivation, async, base, bytestring, conduit, conduit-extra
     , control-monad-loop, directory, filepath, monad-control, monads-tf
     , process, resourcet, semigroups, split, template-haskell, text
     , transformers, transformers-base, unix
     }:
     mkDerivation {
       pname = "shell-conduit";
       version = "4.5.2";
       sha256 = "04kc9gzlqbw3d2pj6qn13pnmmrlmx8nmmj5bvxn7zdmh25nw6ys2";
       libraryHaskellDepends = [
         async base bytestring conduit conduit-extra control-monad-loop
         directory filepath monad-control monads-tf process resourcet
         semigroups split template-haskell text transformers
         transformers-base unix
       ];
       homepage = "https://github.com/chrisdone/shell-conduit";
       description = "Write shell scripts with Conduit";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "shelltestrunner" = callPackage
    ({ mkDerivation, base, cmdargs, Diff, directory, filemanip
     , filepath, HUnit, parsec, pretty-show, process, regex-tdfa, safe
     , test-framework, test-framework-hunit, utf8-string
     }:
     mkDerivation {
       pname = "shelltestrunner";
       version = "1.3.5";
       sha256 = "0ad8sc4md8mp0l0s40yx7qbgaabqzd4nz8lx15ajcdbwr2ffnra2";
       revision = "2";
       editedCabalFile = "1d72n8k72w2mdi3y9s74ydlwxj407mc237albx6zx42lsjx1fw34";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         base cmdargs Diff directory filemanip filepath HUnit parsec
         pretty-show process regex-tdfa safe test-framework
         test-framework-hunit utf8-string
       ];
       doHaddock = false;
       homepage = "http://joyful.com/shelltestrunner";
       description = "A tool for testing command-line programs";
       license = "GPL";
     }) {};
  "shelly" = callPackage
    ({ mkDerivation, async, base, bytestring, containers, directory
     , enclosed-exceptions, exceptions, lifted-async, lifted-base
     , monad-control, mtl, process, system-fileio, system-filepath, text
     , time, transformers, transformers-base, unix-compat
     }:
     mkDerivation {
       pname = "shelly";
       version = "1.6.1.2";
       sha256 = "0iv0ypl6qbrcax43smqc7s5zpm5ck5a5zby59ibnahv5a6wn16ki";
       revision = "1";
       editedCabalFile = "06j9190g401jzs28ag2649cb6d9v52llcfvwysfkpy19jy03irdb";
       libraryHaskellDepends = [
         async base bytestring containers directory enclosed-exceptions
         exceptions lifted-async lifted-base monad-control mtl process
         system-fileio system-filepath text time transformers
         transformers-base unix-compat
       ];
       homepage = "https://github.com/yesodweb/Shelly.hs";
       description = "shell-like (systems) programming in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "silently" = callPackage
    ({ mkDerivation, base, deepseq, directory, nanospec }:
     mkDerivation {
       pname = "silently";
       version = "1.2.4.1";
       sha256 = "035dw3zg680ykyz5rqkkrjn51wkznbc4jb45a8l2gh3vgqzgbf52";
       libraryHaskellDepends = [ base deepseq directory ];
       testHaskellDepends = [ base deepseq directory nanospec ];
       homepage = "https://github.com/trystan/silently";
       description = "Prevent or capture writing to stdout and other handles";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "simple-reflect" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "simple-reflect";
       version = "0.3.2";
       sha256 = "1dpcf6w3cf1sfl9bnlsx04x7aghw029glj5d05qzrsnms2rlw8iq";
       libraryHaskellDepends = [ base ];
       homepage = "http://twanvl.nl/blog/haskell/simple-reflection-of-expressions";
       description = "Simple reflection of expressions containing variables";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "simple-sendfile" = callPackage
    ({ mkDerivation, base, bytestring, conduit, conduit-extra
     , directory, hspec, HUnit, network, process, resourcet, unix
     }:
     mkDerivation {
       pname = "simple-sendfile";
       version = "0.2.18";
       sha256 = "1dc7c4bkcwzfhbm982svi9j6dzxxf0z6pjkdrs23m9bc9g8aly49";
       libraryHaskellDepends = [ base bytestring network unix ];
       testHaskellDepends = [
         base bytestring conduit conduit-extra directory hspec HUnit network
         process resourcet unix
       ];
       doCheck = false;
       description = "Cross platform library for the sendfile system call";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "singletons" = callPackage
    ({ mkDerivation, base, Cabal, constraints, containers, filepath
     , mtl, process, tasty, tasty-golden, template-haskell, th-desugar
     }:
     mkDerivation {
       pname = "singletons";
       version = "1.1.1";
       sha256 = "1pbz42i2vxmw3sf3f4sqvgyp9a1b1q5my7xq64h37a9g6jd2246a";
       libraryHaskellDepends = [
         base containers mtl template-haskell th-desugar
       ];
       testHaskellDepends = [
         base Cabal constraints filepath process tasty tasty-golden
       ];
       doCheck = false;
       homepage = "http://www.cis.upenn.edu/~eir/packages/singletons";
       description = "A framework for generating singleton types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "siphash" = callPackage
    ({ mkDerivation, base, bytestring, cpu, QuickCheck, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "siphash";
       version = "1.0.3";
       sha256 = "1wq5dan30ggjgmravy92ylqjvjv1q7mxrmddr7zc8h6aqr0wx0fg";
       revision = "1";
       editedCabalFile = "1q2dy0ywngm9iv7k6d9gnf860m9hpf62q5qvdzmxw5s629gk4afn";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base bytestring cpu ];
       testHaskellDepends = [
         base bytestring QuickCheck test-framework
         test-framework-quickcheck2
       ];
       homepage = "http://github.com/vincenthz/hs-siphash";
       description = "siphash: a fast short input PRF";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "skein" = callPackage
    ({ mkDerivation, base, bytestring, cereal, crypto-api, filepath
     , hspec, tagged
     }:
     mkDerivation {
       pname = "skein";
       version = "1.0.9.3";
       sha256 = "0k7ibm4ykvypz6dm6jgqx0aj7qlg34cg841vipyjkbykp8nv3fn7";
       libraryHaskellDepends = [
         base bytestring cereal crypto-api tagged
       ];
       testHaskellDepends = [
         base bytestring cereal crypto-api filepath hspec tagged
       ];
       homepage = "https://github.com/meteficha/skein";
       description = "Skein, a family of cryptographic hash functions. Includes Skein-MAC as well.";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "slave-thread" = callPackage
    ({ mkDerivation, base, base-prelude, list-t, mmorph
     , partial-handler, stm-containers, transformers
     }:
     mkDerivation {
       pname = "slave-thread";
       version = "0.1.6";
       sha256 = "19nkxx1icngx8ynbmaz71rr66091layyq1pxji24jz4jq7rmkqsg";
       libraryHaskellDepends = [
         base base-prelude list-t mmorph partial-handler stm-containers
         transformers
       ];
       doCheck = false;
       homepage = "https://github.com/nikita-volkov/slave-thread";
       description = "A principal solution to ghost threads and silent exceptions";
       license = stdenv.lib.licenses.mit;
     }) {};
  "smallcheck" = callPackage
    ({ mkDerivation, base, ghc-prim, logict, mtl, pretty }:
     mkDerivation {
       pname = "smallcheck";
       version = "1.1.1";
       sha256 = "1ygrabxh40bym3grnzqyfqn96lirnxspb8cmwkkr213239y605sd";
       revision = "1";
       editedCabalFile = "1ykq0hqs1alw86p0ssa6dhsb1a8d4m6bqwibkhvzcd6c28dq975i";
       libraryHaskellDepends = [ base ghc-prim logict mtl pretty ];
       homepage = "https://github.com/feuerbach/smallcheck";
       description = "A property-based testing library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "smoothie" = callPackage
    ({ mkDerivation, base, linear, vector }:
     mkDerivation {
       pname = "smoothie";
       version = "0.1.3";
       sha256 = "1326hqinlfipbxcynqfsskh4bq5136b48z3kjic8qnddkgkhgg1s";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base linear vector ];
       homepage = "https://github.com/phaazon/smoothie";
       description = "Smooth curves via several splines and polynomials";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "smtLib" = callPackage
    ({ mkDerivation, base, pretty }:
     mkDerivation {
       pname = "smtLib";
       version = "1.0.7";
       sha256 = "1jn2790x7g7n6jm5cfgd692n3l6iafyv0zyz40hx8ykcs4jh2rkf";
       revision = "1";
       editedCabalFile = "13j4kp8cjx20zi6xy55bjdbr39p223s299wgad0xpgch1qz7q7bs";
       libraryHaskellDepends = [ base pretty ];
       description = "A library for working with the SMTLIB format";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "snap" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, bytestring, cereal
     , clientsession, comonad, configurator, containers, directory
     , directory-tree, dlist, errors, filepath, hashable, heist, lens
     , logict, MonadCatchIO-transformers, mtl, mwc-random, old-time
     , pwstore-fast, regex-posix, snap-core, snap-server, stm, syb
     , template-haskell, text, time, transformers, unordered-containers
     , vector, vector-algorithms, xmlhtml
     }:
     mkDerivation {
       pname = "snap";
       version = "0.14.0.2";
       sha256 = "1yv1snkibsqd7cdxyqi7c8gvnv1hzzhw5jlk19kps526n5xvay7r";
       revision = "3";
       editedCabalFile = "1xqvm7yy8bk792w4h9k5xmvmfacc9fm07wzmjgjjsfmwdr02fzgl";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson attoparsec base bytestring cereal clientsession comonad
         configurator containers directory directory-tree dlist errors
         filepath hashable heist lens logict MonadCatchIO-transformers mtl
         mwc-random pwstore-fast regex-posix snap-core snap-server stm syb
         text time transformers unordered-containers vector
         vector-algorithms xmlhtml
       ];
       executableHaskellDepends = [
         base bytestring containers directory directory-tree filepath
         hashable old-time snap-server template-haskell text
       ];
       homepage = "http://snapframework.com/";
       description = "Top-level package for the Snap Web Framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "snap-core" = callPackage
    ({ mkDerivation, attoparsec, attoparsec-enumerator, base
     , blaze-builder, blaze-builder-enumerator, bytestring
     , bytestring-mmap, case-insensitive, containers, deepseq, directory
     , enumerator, filepath, hashable, HUnit, MonadCatchIO-transformers
     , mtl, random, regex-posix, text, time, unix, unix-compat
     , unordered-containers, vector, zlib-enum
     }:
     mkDerivation {
       pname = "snap-core";
       version = "0.9.7.0";
       sha256 = "0ambk7q35v76ww62m4y6j45ga63c141zi3wxkgazybbazk5i36nw";
       revision = "1";
       editedCabalFile = "1930x1w1xlyqfpwjhr64z2y12idfaz17jdk9fn699pxvb08djb85";
       libraryHaskellDepends = [
         attoparsec attoparsec-enumerator base blaze-builder
         blaze-builder-enumerator bytestring bytestring-mmap
         case-insensitive containers deepseq directory enumerator filepath
         hashable HUnit MonadCatchIO-transformers mtl random regex-posix
         text time unix unix-compat unordered-containers vector zlib-enum
       ];
       homepage = "http://snapframework.com/";
       description = "Snap: A Haskell Web Framework (core interfaces and types)";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "snap-server" = callPackage
    ({ mkDerivation, attoparsec, attoparsec-enumerator, base
     , blaze-builder, blaze-builder-enumerator, bytestring
     , case-insensitive, containers, enumerator
     , MonadCatchIO-transformers, mtl, network, old-locale, snap-core
     , text, time, unix, unix-compat
     }:
     mkDerivation {
       pname = "snap-server";
       version = "0.9.5.0";
       sha256 = "1rsn3zxrl8cngpl47hd4js18gw90dwn0zhwv2z6hxi7ygwnx8q0i";
       libraryHaskellDepends = [
         attoparsec attoparsec-enumerator base blaze-builder
         blaze-builder-enumerator bytestring case-insensitive containers
         enumerator MonadCatchIO-transformers mtl network old-locale
         snap-core text time unix unix-compat
       ];
       homepage = "http://snapframework.com/";
       description = "A fast, iteratee-based, epoll-enabled web server for the Snap Framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "snaplet-fay" = callPackage
    ({ mkDerivation, aeson, base, bytestring, configurator, directory
     , fay, filepath, mtl, snap, snap-core, transformers
     }:
     mkDerivation {
       pname = "snaplet-fay";
       version = "0.3.3.11";
       sha256 = "18g61qivc49g37zmb4qv2piwlgs572fmngdpsjdhjmrgqn049fjr";
       revision = "2";
       editedCabalFile = "179y00d47b3rapck7bwkrsmwlw79yk505251bkayx30mmp26llvb";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson base bytestring configurator directory fay filepath mtl snap
         snap-core transformers
       ];
       homepage = "https://github.com/faylang/snaplet-fay";
       description = "Fay integration for Snap with request- and pre-compilation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "snowflake" = callPackage
    ({ mkDerivation, base, time }:
     mkDerivation {
       pname = "snowflake";
       version = "0.1.1.1";
       sha256 = "1pfd8lqwv0504hli6fhwiqckcca0x9pnfzmy3kz36w7138rclmpi";
       revision = "1";
       editedCabalFile = "1y5v3nsin8iyxvh0abfhs7ma75p5zjvha0lp41801pdiikacfzha";
       libraryHaskellDepends = [ base time ];
       description = "A loose port of Twitter Snowflake to Haskell. Generates arbitrary precision, unique, time-sortable identifiers.";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "soap" = callPackage
    ({ mkDerivation, base, bytestring, conduit, configurator
     , data-default, exceptions, hspec, http-client, http-types, HUnit
     , iconv, mtl, resourcet, text, unordered-containers, xml-conduit
     , xml-conduit-writer, xml-types
     }:
     mkDerivation {
       pname = "soap";
       version = "0.2.2.5";
       sha256 = "1imh9g2my0d981prai69yr9yf7linvaijcn80zlyaz44pasxnrw7";
       libraryHaskellDepends = [
         base bytestring conduit configurator data-default exceptions
         http-client http-types iconv mtl resourcet text
         unordered-containers xml-conduit xml-conduit-writer xml-types
       ];
       testHaskellDepends = [
         base bytestring hspec HUnit text unordered-containers xml-conduit
         xml-conduit-writer
       ];
       homepage = "https://bitbucket.org/dpwiz/haskell-soap";
       description = "SOAP client tools";
       license = stdenv.lib.licenses.mit;
     }) {};
  "soap-openssl" = callPackage
    ({ mkDerivation, base, configurator, data-default, HsOpenSSL
     , http-client, http-client-openssl, soap, text
     }:
     mkDerivation {
       pname = "soap-openssl";
       version = "0.1.0.2";
       sha256 = "03w389yhybzvc06gpxigibqga9mr7m41rkg1ki3n686j9xzm8210";
       revision = "1";
       editedCabalFile = "1b3aivn9jfaax00id7x4cqvpmd6lgynslchlry0qsmq1lj466cdf";
       libraryHaskellDepends = [
         base configurator data-default HsOpenSSL http-client
         http-client-openssl soap text
       ];
       homepage = "https://bitbucket.org/dpwiz/haskell-soap";
       description = "TLS-enabled SOAP transport (using openssl bindings)";
       license = stdenv.lib.licenses.mit;
     }) {};
  "soap-tls" = callPackage
    ({ mkDerivation, base, configurator, connection, data-default
     , http-client, http-client-tls, soap, text, tls, x509, x509-store
     , x509-validation
     }:
     mkDerivation {
       pname = "soap-tls";
       version = "0.1.1.2";
       sha256 = "0xnzwzmhh2i5nci7xbnkr28hxm376fbmgjcwz7svk46k1vxvlfp4";
       revision = "1";
       editedCabalFile = "0h6jgiifrphdphxfvgk95and4a86xp6afxi90v0b93cs2zyi0vsy";
       libraryHaskellDepends = [
         base configurator connection data-default http-client
         http-client-tls soap text tls x509 x509-store x509-validation
       ];
       homepage = "https://bitbucket.org/dpwiz/haskell-soap";
       description = "TLS-enabled SOAP transport (using tls package)";
       license = stdenv.lib.licenses.mit;
     }) {};
  "socks" = callPackage
    ({ mkDerivation, base, bytestring, cereal, network }:
     mkDerivation {
       pname = "socks";
       version = "0.5.4";
       sha256 = "1nmldlwxqasmg359i2aa3a903gi3lmnlspvf12xk49jrg3mf3dg9";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base bytestring cereal network ];
       homepage = "http://github.com/vincenthz/hs-socks";
       description = "Socks proxy (version 5) implementation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "sodium" = callPackage
    ({ mkDerivation, base, containers, mtl }:
     mkDerivation {
       pname = "sodium";
       version = "0.11.0.3";
       sha256 = "00qs1calial08a185ma5hm17lmmzig0yjf3710d5ikq1bmrgcqga";
       libraryHaskellDepends = [ base containers mtl ];
       description = "Sodium Reactive Programming (FRP) System";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "sourcemap" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, bytestring, process, text
     , unordered-containers, utf8-string
     }:
     mkDerivation {
       pname = "sourcemap";
       version = "0.1.3.0";
       sha256 = "1flfsjs2z2zjzqwvmc2vcibvxh19s89ah4s560xr2s5mhdqwbkk5";
       revision = "1";
       editedCabalFile = "0lr0rb1xln9ya1hycbnby7wl2hmlh4sav4d3l0nn8c3gvd6ng2xa";
       libraryHaskellDepends = [
         aeson attoparsec base bytestring process text unordered-containers
         utf8-string
       ];
       description = "Implementation of source maps as proposed by Google and Mozilla";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "speculation" = callPackage
    ({ mkDerivation, base, ghc-prim, stm, transformers }:
     mkDerivation {
       pname = "speculation";
       version = "1.5.0.2";
       sha256 = "11d4v3x9phayx29lxl4na0b940ax27rjd867f7l9jb284p1rvhp5";
       libraryHaskellDepends = [ base ghc-prim stm transformers ];
       homepage = "http://github.com/ekmett/speculation";
       description = "A framework for safe, programmable, speculative parallelism";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "sphinx" = callPackage
    ({ mkDerivation, base, binary, bytestring, data-binary-ieee754
     , network, text, text-icu, xml
     }:
     mkDerivation {
       pname = "sphinx";
       version = "0.6.0.1";
       sha256 = "1pcm4y9k5lc00805ddv519cx4j3qld2v1dnbckg38n9dyp96wj98";
       libraryHaskellDepends = [
         base binary bytestring data-binary-ieee754 network text text-icu
         xml
       ];
       homepage = "https://github.com/gregwebs/haskell-sphinx-client";
       description = "Haskell bindings to the Sphinx full-text searching daemon";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "split" = callPackage
    ({ mkDerivation, base, QuickCheck }:
     mkDerivation {
       pname = "split";
       version = "0.2.2";
       sha256 = "0xa3j0gwr6k5vizxybnzk5fgb3pppgspi6mysnp2gwjp2dbrxkzr";
       revision = "2";
       editedCabalFile = "1hcmy8npnn0jb3frmkc2is97v55q15vmb1y1mgrjf1l8l6238sq6";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base QuickCheck ];
       description = "Combinator library for splitting lists";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "spoon" = callPackage
    ({ mkDerivation, base, deepseq }:
     mkDerivation {
       pname = "spoon";
       version = "0.3.1";
       sha256 = "1m41k0mfy6fpfrv2ym4m5jsjaj9xdfl2iqpppd3c4d0fffv51cxr";
       revision = "1";
       editedCabalFile = "09s5jjcsg4g4qxchq9g2l4i9d5zh3rixpkbiysqcgl69kj8mwv74";
       libraryHaskellDepends = [ base deepseq ];
       description = "Catch errors thrown from pure computations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "sqlite-simple" = callPackage
    ({ mkDerivation, attoparsec, base, base16-bytestring, blaze-builder
     , blaze-textual, bytestring, containers, direct-sqlite, HUnit, text
     , time, transformers
     }:
     mkDerivation {
       pname = "sqlite-simple";
       version = "0.4.8.0";
       sha256 = "098d1s80wlvsp307422f79bm3a9knvgw5ni6jap62fl4rpa7fsmz";
       libraryHaskellDepends = [
         attoparsec base blaze-builder blaze-textual bytestring containers
         direct-sqlite text time transformers
       ];
       testHaskellDepends = [
         base base16-bytestring bytestring direct-sqlite HUnit text time
       ];
       homepage = "http://github.com/nurpax/sqlite-simple";
       description = "Mid-Level SQLite client library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "srcloc" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "srcloc";
       version = "0.4.1";
       sha256 = "0cd15d9dval7zi4li48yd6a3jk62861d4qxwvhxz4a98m63519cz";
       libraryHaskellDepends = [ base ];
       homepage = "http://www.cs.drexel.edu/~mainland/";
       description = "Data types for managing source code locations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "stackage" = callPackage
    ({ mkDerivation, aeson, async, base, bytestring, Cabal
     , classy-prelude-conduit, conduit, conduit-extra, containers
     , data-default-class, directory, filepath, hspec, http-client
     , http-client-tls, http-conduit, mono-traversable, mtl, old-locale
     , optparse-applicative, process, QuickCheck, semigroups, stm
     , streaming-commons, system-fileio, system-filepath, tar, temporary
     , text, time, transformers, unix-compat, utf8-string, xml-conduit
     , yaml, zlib
     }:
     mkDerivation {
       pname = "stackage";
       version = "0.6.0.1";
       sha256 = "0y785cc71rw5g6jlbrljabing0dpizqyid36hp97r3kwa1bc5x2m";
       revision = "1";
       editedCabalFile = "1rzri4a4cizk1xx90fhszskgxhrj7j8hq794a3gzfnw4y3gb3xbv";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson async base bytestring Cabal classy-prelude-conduit conduit
         conduit-extra containers data-default-class directory filepath
         http-client http-client-tls http-conduit mono-traversable mtl
         old-locale process semigroups stm streaming-commons system-fileio
         system-filepath tar temporary text time transformers unix-compat
         utf8-string xml-conduit yaml zlib
       ];
       executableHaskellDepends = [
         base http-client http-client-tls optparse-applicative
         system-filepath text
       ];
       testHaskellDepends = [
         base Cabal classy-prelude-conduit containers hspec http-client
         http-client-tls QuickCheck text yaml
       ];
       doCheck = false;
       homepage = "https://github.com/fpco/stackage";
       description = "\"Stable Hackage,\" tools for creating a vetted set of packages from Hackage";
       license = stdenv.lib.licenses.mit;
     }) {};
  "stackage-curator" = callPackage
    ({ mkDerivation, aeson, async, base, bytestring, Cabal
     , classy-prelude-conduit, conduit, conduit-extra, containers
     , data-default-class, directory, filepath, hspec, http-client
     , http-client-tls, http-conduit, mono-traversable, mtl, old-locale
     , optparse-applicative, process, QuickCheck, semigroups
     , stackage-types, stm, streaming-commons, system-fileio
     , system-filepath, tar, temporary, text, time, transformers
     , unix-compat, utf8-string, xml-conduit, yaml, zlib
     }:
     mkDerivation {
       pname = "stackage-curator";
       version = "0.7.4";
       sha256 = "181wdsrwr0dlgp969zkqyg231kz3xh8mzii8ikcxx5z0yharn3gk";
       revision = "1";
       editedCabalFile = "1cc6xs5i98hvdlaaxb6lg0qxqz6kbwdqkwmwhjz4w8nhg6fh43af";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson async base bytestring Cabal classy-prelude-conduit conduit
         conduit-extra containers data-default-class directory filepath
         http-client http-client-tls http-conduit mono-traversable mtl
         old-locale process semigroups stackage-types stm streaming-commons
         system-fileio system-filepath tar temporary text time transformers
         unix-compat utf8-string xml-conduit yaml zlib
       ];
       executableHaskellDepends = [
         base http-client http-client-tls optparse-applicative
         system-filepath text
       ];
       testHaskellDepends = [
         base Cabal classy-prelude-conduit containers hspec http-client
         http-client-tls QuickCheck text yaml
       ];
       homepage = "https://github.com/fpco/stackage";
       description = "Tools for curating Stackage bundles";
       license = stdenv.lib.licenses.mit;
     }) {};
  "stackage-types" = callPackage
    ({ mkDerivation, aeson, base, Cabal, containers, exceptions
     , hashable, semigroups, text, unordered-containers, vector
     }:
     mkDerivation {
       pname = "stackage-types";
       version = "1.0.0";
       sha256 = "17077awl2bfrhpdlqsl4dxb7hxq4dr5hxqcviyv1cbxlk6z38a4z";
       libraryHaskellDepends = [
         aeson base Cabal containers exceptions hashable semigroups text
         unordered-containers vector
       ];
       homepage = "https://github.com/fpco/stackage-types";
       description = "Shared data types between various Stackage packages";
       license = stdenv.lib.licenses.mit;
     }) {};
  "stateref" = callPackage
    ({ mkDerivation, base, mtl, stm }:
     mkDerivation {
       pname = "stateref";
       version = "0.3";
       sha256 = "0hdpw6g255lj7jjvgqwhjdpzmka546vda5qjvry8gjj6nfm91lvx";
       libraryHaskellDepends = [ base mtl stm ];
       homepage = "http://code.haskell.org/~mokus/stateref/";
       description = "Abstraction for things that work like IORef";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "statestack" = callPackage
    ({ mkDerivation, base, mtl, transformers, transformers-compat }:
     mkDerivation {
       pname = "statestack";
       version = "0.2.0.4";
       sha256 = "0swj3f2vc56a5y2qxp2pq8nxkwngcw2lm87dmaikymchbqb832hd";
       libraryHaskellDepends = [
         base mtl transformers transformers-compat
       ];
       description = "Simple State-like monad transformer with saveable and restorable state";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "statistics" = callPackage
    ({ mkDerivation, aeson, base, binary, deepseq, erf, HUnit, ieee754
     , math-functions, monad-par, mwc-random, primitive, QuickCheck
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , vector, vector-algorithms, vector-binary-instances
     }:
     mkDerivation {
       pname = "statistics";
       version = "0.13.2.3";
       sha256 = "1gbghzbacfrm7vn24ssx7wz9sycafxk9b306zm6cdlsr954v296n";
       libraryHaskellDepends = [
         aeson base binary deepseq erf math-functions monad-par mwc-random
         primitive vector vector-algorithms vector-binary-instances
       ];
       testHaskellDepends = [
         base binary erf HUnit ieee754 math-functions mwc-random primitive
         QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2 vector vector-algorithms
       ];
       doCheck = false;
       homepage = "https://github.com/bos/statistics";
       description = "A library of statistical types, data, and functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "statistics-linreg" = callPackage
    ({ mkDerivation, base, MonadRandom, random, random-shuffle, safe
     , statistics, vector
     }:
     mkDerivation {
       pname = "statistics-linreg";
       version = "0.3";
       sha256 = "02c9xrd3b8iy7bwgsf1r06smi88k3sgpqv2ivr782wl0dcbc4wv2";
       libraryHaskellDepends = [
         base MonadRandom random random-shuffle safe statistics vector
       ];
       homepage = "http://github.com/alpmestan/statistics-linreg";
       description = "Linear regression between two samples, based on the 'statistics' package";
       license = stdenv.lib.licenses.mit;
     }) {};
  "stm" = callPackage
    ({ mkDerivation, array, base }:
     mkDerivation {
       pname = "stm";
       version = "2.4.4";
       sha256 = "0gc8zvdijp3rwmidkpxv76b4i0dc8dw6nbd92rxl4vxl0655iysx";
       libraryHaskellDepends = [ array base ];
       description = "Software Transactional Memory";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "stm-chans" = callPackage
    ({ mkDerivation, base, stm }:
     mkDerivation {
       pname = "stm-chans";
       version = "3.0.0.3";
       sha256 = "058miz12xm21lghc4bi06grsddd8hf2x9x5qdh0dva6lk0h9y7mk";
       libraryHaskellDepends = [ base stm ];
       homepage = "http://code.haskell.org/~wren/";
       description = "Additional types of channels for STM";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "stm-conduit" = callPackage
    ({ mkDerivation, async, base, cereal, cereal-conduit, conduit
     , conduit-extra, directory, HUnit, lifted-async, lifted-base
     , monad-control, monad-loops, QuickCheck, resourcet, stm, stm-chans
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , transformers
     }:
     mkDerivation {
       pname = "stm-conduit";
       version = "2.5.4";
       sha256 = "1pwsv9724b6g80l53wwziv2sajaxc2mwl3mxldpzd0v48zaajflk";
       libraryHaskellDepends = [
         async base cereal cereal-conduit conduit conduit-extra directory
         lifted-async lifted-base monad-control monad-loops resourcet stm
         stm-chans transformers
       ];
       testHaskellDepends = [
         base conduit directory HUnit QuickCheck resourcet stm stm-chans
         test-framework test-framework-hunit test-framework-quickcheck2
         transformers
       ];
       homepage = "https://github.com/wowus/stm-conduit";
       description = "Introduces conduits to channels, and promotes using conduits concurrently";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "stm-containers" = callPackage
    ({ mkDerivation, base-prelude, focus, hashable, list-t, loch-th
     , placeholders, primitive, transformers
     }:
     mkDerivation {
       pname = "stm-containers";
       version = "0.2.9";
       sha256 = "0p2lyz1s98cxdcqfamqyx7dxxa4fzxr0a93cbm7lnmzfjvk48p52";
       libraryHaskellDepends = [
         base-prelude focus hashable list-t loch-th placeholders primitive
         transformers
       ];
       doCheck = false;
       homepage = "https://github.com/nikita-volkov/stm-containers";
       description = "Containers for STM";
       license = stdenv.lib.licenses.mit;
     }) {};
  "stm-stats" = callPackage
    ({ mkDerivation, base, containers, stm, template-haskell, time }:
     mkDerivation {
       pname = "stm-stats";
       version = "0.2.0.0";
       sha256 = "0i8ky2l8lvh7nymxglvbifp0ylbyjw20p75avzb51zpzx6qkjkqa";
       libraryHaskellDepends = [
         base containers stm template-haskell time
       ];
       description = "retry statistics for STM transactions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "storable-complex" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "storable-complex";
       version = "0.2.2";
       sha256 = "01kwwkpbfjrv26vj83cd92px5qbq1bpgxj0r45534aksqhany1xb";
       configureFlags = [ "-f-instanceinbase" ];
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/cartazio/storable-complex";
       description = "Storable instance for Complex";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "storable-endian" = callPackage
    ({ mkDerivation, base, byteorder }:
     mkDerivation {
       pname = "storable-endian";
       version = "0.2.5";
       sha256 = "04j1nk0wga4dqrqvhm8yd9h9194db1n3yrnhg8s3gsc0jk7yw1p2";
       libraryHaskellDepends = [ base byteorder ];
       description = "Storable instances with endianness";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "streaming-commons" = callPackage
    ({ mkDerivation, array, async, base, blaze-builder, bytestring
     , criterion, deepseq, directory, hspec, network, process
     , QuickCheck, random, stm, text, transformers, unix, zlib
     }:
     mkDerivation {
       pname = "streaming-commons";
       version = "0.1.12";
       sha256 = "1scqajmi3zp1088kc8nfzmzm8831idc4m0d5sck5mhav9xcmx7sy";
       libraryHaskellDepends = [
         array base blaze-builder bytestring directory network process
         random stm text transformers unix zlib
       ];
       testHaskellDepends = [
         array async base blaze-builder bytestring deepseq hspec network
         QuickCheck text unix zlib
       ];
       benchmarkHaskellDepends = [
         base blaze-builder bytestring criterion deepseq text
       ];
       homepage = "https://github.com/fpco/streaming-commons";
       description = "Common lower-level functions needed by various streaming data libraries";
       license = stdenv.lib.licenses.mit;
     }) {};
  "streams" = callPackage
    ({ mkDerivation, adjunctions, base, comonad, distributive
     , semigroupoids, semigroups
     }:
     mkDerivation {
       pname = "streams";
       version = "3.2";
       sha256 = "1pms4wiispnpzysq44fcvspdxmbwk47rfcpcyshnnhpw7c7qngni";
       revision = "1";
       editedCabalFile = "0lrdskf575kdlm7rh99g49yyj3ynkg9gzdcdfwf4pjy7gm49sj5g";
       libraryHaskellDepends = [
         adjunctions base comonad distributive semigroupoids semigroups
       ];
       homepage = "http://github.com/ekmett/streams/issues";
       description = "Various Haskell 2010 stream comonads";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "strict" = callPackage
    ({ mkDerivation, array, base }:
     mkDerivation {
       pname = "strict";
       version = "0.3.2";
       sha256 = "08cjajqz9h47fkq98mlf3rc8n5ghbmnmgn8pfsl3bdldjdkmmlrc";
       libraryHaskellDepends = [ array base ];
       homepage = "http://www.cse.unsw.edu.au/~rl/code/strict.html";
       description = "Strict data types and String IO";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "string-conversions" = callPackage
    ({ mkDerivation, base, bytestring, text, utf8-string }:
     mkDerivation {
       pname = "string-conversions";
       version = "0.3.0.3";
       sha256 = "0n2ifim9n5vm305r989lh5xlbd8qc6byip2nfavf6gd2bcscs84p";
       libraryHaskellDepends = [ base bytestring text utf8-string ];
       description = "Simplifies dealing with different types for strings";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "stringable" = callPackage
    ({ mkDerivation, base, bytestring, system-filepath, text }:
     mkDerivation {
       pname = "stringable";
       version = "0.1.3";
       sha256 = "10jsvbiqbmnbipv1566k5mqkpgfyrzbk8m7b18rqjb5m3qg9dbz7";
       libraryHaskellDepends = [ base bytestring system-filepath text ];
       description = "A Stringable type class, in the spirit of Foldable and Traversable";
       license = stdenv.lib.licenses.mit;
     }) {};
  "stringbuilder" = callPackage
    ({ mkDerivation, base, hspec, QuickCheck }:
     mkDerivation {
       pname = "stringbuilder";
       version = "0.5.0";
       sha256 = "1ap95xphqnrhv64c2a137wqslkdmb2jjd9ldb17gs1pw48k8hrl9";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base hspec QuickCheck ];
       description = "A writer monad for multi-line string literals";
       license = stdenv.lib.licenses.mit;
     }) {};
  "stringprep" = callPackage
    ({ mkDerivation, base, containers, QuickCheck, tasty
     , tasty-quickcheck, tasty-th, text, text-icu
     }:
     mkDerivation {
       pname = "stringprep";
       version = "1.0.0";
       sha256 = "0ha4cvzdppd514xh9315v3nvrn1q4xd74gifdqpszw98hj2mw0b0";
       libraryHaskellDepends = [ base containers text text-icu ];
       testHaskellDepends = [
         base containers QuickCheck tasty tasty-quickcheck tasty-th text
         text-icu
       ];
       description = "Implements the \"StringPrep\" algorithm";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "stringsearch" = callPackage
    ({ mkDerivation, array, base, bytestring, containers }:
     mkDerivation {
       pname = "stringsearch";
       version = "0.3.6.6";
       sha256 = "0jpy9xjcjdbpi3wk6mg7xwd7wfi2mma70p97v1ij5i8bj9qijpr9";
       libraryHaskellDepends = [ array base bytestring containers ];
       homepage = "https://bitbucket.org/dafis/stringsearch";
       description = "Fast searching, splitting and replacing of ByteStrings";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "stylish-haskell" = callPackage
    ({ mkDerivation, aeson, base, bytestring, cmdargs, containers
     , directory, filepath, haskell-src-exts, HUnit, mtl, strict, syb
     , test-framework, test-framework-hunit, yaml
     }:
     mkDerivation {
       pname = "stylish-haskell";
       version = "0.5.13.0";
       sha256 = "1284x4g6k24v3k2ii5jfyly6b788477qih3lq81x72x22d36d168";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson base bytestring containers directory filepath
         haskell-src-exts mtl syb yaml
       ];
       executableHaskellDepends = [
         aeson base bytestring cmdargs containers directory filepath
         haskell-src-exts mtl strict syb yaml
       ];
       testHaskellDepends = [
         aeson base bytestring cmdargs containers directory filepath
         haskell-src-exts HUnit mtl syb test-framework test-framework-hunit
         yaml
       ];
       homepage = "https://github.com/jaspervdj/stylish-haskell";
       description = "Haskell code prettifier";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "svg-tree" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, containers
     , JuicyPixels, lens, linear, mtl, scientific, text, transformers
     , vector, xml
     }:
     mkDerivation {
       pname = "svg-tree";
       version = "0.1.1";
       sha256 = "19bh640jzpw03k5vc9471qh2cf4nr3nz8s5axk0bxpss1dpz26fs";
       libraryHaskellDepends = [
         attoparsec base bytestring containers JuicyPixels lens linear mtl
         scientific text transformers vector xml
       ];
       description = "SVG file loader and serializer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "syb" = callPackage
    ({ mkDerivation, base, containers, HUnit, mtl }:
     mkDerivation {
       pname = "syb";
       version = "0.4.4";
       sha256 = "11sc9kmfvcn9bfxf227fgmny502z2h9xs3z0m9ak66lk0dw6f406";
       revision = "1";
       editedCabalFile = "11ibrl8n03gf6fhsnjk51csyd1l8qphwhr8sr73pa8qcz8zycrj0";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base containers HUnit mtl ];
       homepage = "http://www.cs.uu.nl/wiki/GenericProgramming/SYB";
       description = "Scrap Your Boilerplate";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "syb-with-class" = callPackage
    ({ mkDerivation, array, base, bytestring, containers
     , template-haskell
     }:
     mkDerivation {
       pname = "syb-with-class";
       version = "0.6.1.5";
       sha256 = "1gn4p92jabgvbk7bg1nzjimyfzznl800bi9hw4ssvc7jqqnyw5zn";
       libraryHaskellDepends = [
         array base bytestring containers template-haskell
       ];
       description = "Scrap Your Boilerplate With Class";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "symbol" = callPackage
    ({ mkDerivation, base, containers, deepseq }:
     mkDerivation {
       pname = "symbol";
       version = "0.2.4";
       sha256 = "0cc8kdm68pirb0s7n46v0yvw5b718qf7qip40jkg5q3c3xsafx6h";
       revision = "1";
       editedCabalFile = "01ab7600ja88wfvg9x8zmxksw44j9klmm71y9zmig7qxs1qslb25";
       libraryHaskellDepends = [ base containers deepseq ];
       homepage = "http://www.cs.drexel.edu/~mainland/";
       description = "A 'Symbol' type for fast symbol comparison";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "system-canonicalpath" = callPackage
    ({ mkDerivation, base, basic-prelude, chell, directory
     , system-filepath, text
     }:
     mkDerivation {
       pname = "system-canonicalpath";
       version = "0.3.2.0";
       sha256 = "031m5j7xglxdgp3rkgf2v37jya1a3hhjp3mxbfyyjl27wv7pzhjy";
       libraryHaskellDepends = [
         base basic-prelude directory system-filepath text
       ];
       testHaskellDepends = [ base basic-prelude chell system-filepath ];
       homepage = "https://github.com/d12frosted/CanonicalPath";
       description = "Abstract data type for canonical paths with some utilities";
       license = stdenv.lib.licenses.mit;
     }) {};
  "system-fileio" = callPackage
    ({ mkDerivation, base, bytestring, chell, system-filepath
     , temporary, text, time, transformers, unix
     }:
     mkDerivation {
       pname = "system-fileio";
       version = "0.3.16.2";
       sha256 = "17mk1crlgrh9c9lfng6a2fdk49m2mbkkdlq5iysl1rzwkn12mmkd";
       libraryHaskellDepends = [
         base bytestring system-filepath text time unix
       ];
       testHaskellDepends = [
         base bytestring chell system-filepath temporary text time
         transformers unix
       ];
       homepage = "https://github.com/fpco/haskell-filesystem";
       description = "Consistent filesystem interaction across GHC versions";
       license = stdenv.lib.licenses.mit;
     }) {};
  "system-filepath" = callPackage
    ({ mkDerivation, base, bytestring, chell, chell-quickcheck, deepseq
     , QuickCheck, text
     }:
     mkDerivation {
       pname = "system-filepath";
       version = "0.4.13.3";
       sha256 = "1j6fk1d3qrc2dn4kzwar9z3malrhx2mc6jjvlq9wiqyyx5gs3yyj";
       libraryHaskellDepends = [ base bytestring deepseq text ];
       testHaskellDepends = [
         base bytestring chell chell-quickcheck QuickCheck text
       ];
       doCheck = false;
       homepage = "https://github.com/fpco/haskell-filesystem";
       description = "High-level, byte-based file and directory path manipulations";
       license = stdenv.lib.licenses.mit;
     }) {};
  "system-posix-redirect" = callPackage
    ({ mkDerivation, base, bytestring, unix }:
     mkDerivation {
       pname = "system-posix-redirect";
       version = "1.1.0.1";
       sha256 = "1wkfz898d3607xnx779l1k1qc8i2k63ixg47542r45scwq8m0lsk";
       libraryHaskellDepends = [ base bytestring unix ];
       description = "A toy module to temporarily redirect a program's stdout";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tabular" = callPackage
    ({ mkDerivation, base, csv, html, mtl }:
     mkDerivation {
       pname = "tabular";
       version = "0.2.2.7";
       sha256 = "1ysgq7rrks7f98nnvxil8xz1q27hxdgz4szbjhqwzbwd209dmy0k";
       libraryHaskellDepends = [ base csv html mtl ];
       homepage = "http://hub.darcs.net/kowey/tabular";
       description = "Two-dimensional data tables with rendering functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tagged" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "tagged";
       version = "0.7.3";
       sha256 = "016bzws7w09xhyyqiz56ahlf7zhagihn370ga0083fgv172lym7b";
       libraryHaskellDepends = [ base ];
       homepage = "http://github.com/ekmett/tagged";
       description = "Haskell 98 phantom types to avoid unsafely passing dummy arguments";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tagshare" = callPackage
    ({ mkDerivation, base, containers, mtl }:
     mkDerivation {
       pname = "tagshare";
       version = "0.0";
       sha256 = "1q3chp1rmwmxa8rxv7548wsvbqbng6grrnv1587p08385sp4ncfj";
       libraryHaskellDepends = [ base containers mtl ];
       description = "TagShare - explicit sharing with tags";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tagsoup" = callPackage
    ({ mkDerivation, base, bytestring, containers, text }:
     mkDerivation {
       pname = "tagsoup";
       version = "0.13.3";
       sha256 = "13b6zy6346r3cxhaivys84fnxarg8wbv7r2znazfjdkqil8n5a1j";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base bytestring containers text ];
       homepage = "http://community.haskell.org/~ndm/tagsoup/";
       description = "Parsing and extracting information from (possibly malformed) HTML/XML documents";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tagstream-conduit" = callPackage
    ({ mkDerivation, attoparsec, base, blaze-builder, bytestring
     , case-insensitive, conduit, conduit-extra, data-default, hspec
     , HUnit, QuickCheck, resourcet, text, transformers, xml-conduit
     }:
     mkDerivation {
       pname = "tagstream-conduit";
       version = "0.5.5.3";
       sha256 = "1arlf7qil9bzcqykda8yyrnncm29jsfjvz5kbcdrbbhqpbqfi5mj";
       libraryHaskellDepends = [
         attoparsec base blaze-builder bytestring case-insensitive conduit
         conduit-extra data-default resourcet text transformers xml-conduit
       ];
       testHaskellDepends = [
         base bytestring conduit hspec HUnit QuickCheck resourcet text
       ];
       homepage = "http://github.com/yihuang/tagstream-conduit";
       description = "streamlined html tag parser";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tar" = callPackage
    ({ mkDerivation, base, bytestring, directory, filepath, time }:
     mkDerivation {
       pname = "tar";
       version = "0.4.1.0";
       sha256 = "05875pc5ns1fsbl9qgr8sqh29xl4mhvj0pwsa9z4afxv6h6328bm";
       configureFlags = [ "-f-old-time" ];
       libraryHaskellDepends = [
         base bytestring directory filepath time
       ];
       description = "Reading, writing and manipulating \".tar\" archive files.";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tardis" = callPackage
    ({ mkDerivation, base, mtl }:
     mkDerivation {
       pname = "tardis";
       version = "0.3.0.0";
       sha256 = "15f88b5qg4v1ah60y0jxkww9n6z7gvnkslx4inckh6m6c7yvj8k6";
       libraryHaskellDepends = [ base mtl ];
       homepage = "https://github.com/DanBurton/tardis";
       description = "Bidirectional state monad transformer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tasty" = callPackage
    ({ mkDerivation, ansi-terminal, async, base, containers, deepseq
     , mtl, optparse-applicative, regex-tdfa-rc, stm, tagged, time
     , unbounded-delays
     }:
     mkDerivation {
       pname = "tasty";
       version = "0.10.1.1";
       sha256 = "1gbxml5lr17x54zm44cxcjd0zgiqgdx5yj5yrrwn58wlmb9683rn";
       revision = "2";
       editedCabalFile = "1axf7iq17j3gvgvh2hb23iv5p1np891rz5fvj8afdqjd4cl1yfsg";
       libraryHaskellDepends = [
         ansi-terminal async base containers deepseq mtl
         optparse-applicative regex-tdfa-rc stm tagged time unbounded-delays
       ];
       homepage = "http://documentup.com/feuerbach/tasty";
       description = "Modern and extensible testing framework";
       license = stdenv.lib.licenses.mit;
     }) {};
  "tasty-ant-xml" = callPackage
    ({ mkDerivation, base, containers, generic-deriving, ghc-prim, mtl
     , stm, tagged, tasty, transformers, xml
     }:
     mkDerivation {
       pname = "tasty-ant-xml";
       version = "1.0.1";
       sha256 = "1wb9lm9rbk46g9cm2lpcrzh59zpcy270p824agg61bj1xb9jymsc";
       libraryHaskellDepends = [
         base containers generic-deriving ghc-prim mtl stm tagged tasty
         transformers xml
       ];
       homepage = "http://github.com/ocharles/tasty-ant-xml";
       description = "Render tasty output to XML for Jenkins";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tasty-golden" = callPackage
    ({ mkDerivation, async, base, bytestring, containers, deepseq
     , directory, filepath, mtl, optparse-applicative, process, tagged
     , tasty, tasty-hunit, temporary-rc
     }:
     mkDerivation {
       pname = "tasty-golden";
       version = "2.3.0.1";
       sha256 = "19jlfxhgrphsv7nfwsfil5ci2snlm9qsqwswnzn68pa3440zqiji";
       revision = "1";
       editedCabalFile = "0xfsz9v29bk9apgslxjy408xgy54xzb6hy7xdcwyc3nb1kk60ba7";
       libraryHaskellDepends = [
         async base bytestring containers deepseq directory filepath mtl
         optparse-applicative process tagged tasty temporary-rc
       ];
       testHaskellDepends = [
         base directory filepath process tasty tasty-hunit temporary-rc
       ];
       homepage = "https://github.com/feuerbach/tasty-golden";
       description = "Golden tests support for tasty";
       license = stdenv.lib.licenses.mit;
     }) {};
  "tasty-hunit" = callPackage
    ({ mkDerivation, base, tasty }:
     mkDerivation {
       pname = "tasty-hunit";
       version = "0.9.2";
       sha256 = "08qnxaw34wfnzi9irs1jd4d0zczqm3k5ffkd4zwhkz0dflmgq7mf";
       libraryHaskellDepends = [ base tasty ];
       homepage = "http://documentup.com/feuerbach/tasty";
       description = "HUnit support for the Tasty test framework";
       license = stdenv.lib.licenses.mit;
     }) {};
  "tasty-kat" = callPackage
    ({ mkDerivation, base, bytestring, mtl, tasty, tasty-hunit
     , tasty-quickcheck
     }:
     mkDerivation {
       pname = "tasty-kat";
       version = "0.0.3";
       sha256 = "14yvlpli6cv6bn3kh8mlfp4x1l6ns4fvmfv6hmj75cvxyzq029d7";
       libraryHaskellDepends = [ base bytestring tasty ];
       testHaskellDepends = [
         base bytestring mtl tasty tasty-hunit tasty-quickcheck
       ];
       homepage = "https://github.com/vincenthz/tasty-kat";
       description = "Known Answer Tests (KAT) framework for tasty";
       license = stdenv.lib.licenses.mit;
     }) {};
  "tasty-quickcheck" = callPackage
    ({ mkDerivation, base, pcre-light, QuickCheck, tagged, tasty
     , tasty-hunit
     }:
     mkDerivation {
       pname = "tasty-quickcheck";
       version = "0.8.3.2";
       sha256 = "1q1fghmsjrdl6jkcnajmsvw4d893m6cyhzpai9vvrhxy9vdy0l1v";
       libraryHaskellDepends = [ base QuickCheck tagged tasty ];
       testHaskellDepends = [ base pcre-light tasty tasty-hunit ];
       homepage = "http://documentup.com/feuerbach/tasty";
       description = "QuickCheck support for the Tasty test framework";
       license = stdenv.lib.licenses.mit;
     }) {};
  "tasty-smallcheck" = callPackage
    ({ mkDerivation, async, base, smallcheck, tagged, tasty }:
     mkDerivation {
       pname = "tasty-smallcheck";
       version = "0.8.0.1";
       sha256 = "0yckfbz8na8ccyw2911i3a4hd3fdncclk3ng5343hs5cylw6y4sm";
       libraryHaskellDepends = [ async base smallcheck tagged tasty ];
       homepage = "http://documentup.com/feuerbach/tasty";
       description = "SmallCheck support for the Tasty test framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tasty-th" = callPackage
    ({ mkDerivation, base, language-haskell-extract, tasty
     , template-haskell
     }:
     mkDerivation {
       pname = "tasty-th";
       version = "0.1.3";
       sha256 = "1fl5pagm9bdqvp7v54ilkr91m667rxw1jifwfdhrikr938aqrzx3";
       libraryHaskellDepends = [
         base language-haskell-extract tasty template-haskell
       ];
       homepage = "http://github.com/bennofs/tasty-th";
       description = "Automagically generate the HUnit- and Quickcheck-bulk-code using Template Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "temporary" = callPackage
    ({ mkDerivation, base, directory, exceptions, filepath
     , transformers, unix
     }:
     mkDerivation {
       pname = "temporary";
       version = "1.2.0.3";
       sha256 = "0is67bmsjmbbw6wymhis8wyq9gax3sszm573p5719fx2c9z9r24a";
       libraryHaskellDepends = [
         base directory exceptions filepath transformers unix
       ];
       homepage = "http://www.github.com/batterseapower/temporary";
       description = "Portable temporary file and directory support for Windows and Unix, based on code from Cabal";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "temporary-rc" = callPackage
    ({ mkDerivation, base, directory, exceptions, filepath
     , transformers, unix
     }:
     mkDerivation {
       pname = "temporary-rc";
       version = "1.2.0.3";
       sha256 = "1nqih0qks439k3pr5kmbbc8rjdw730slrxlflqb27fbxbzb8skqs";
       libraryHaskellDepends = [
         base directory exceptions filepath transformers unix
       ];
       homepage = "http://www.github.com/feuerbach/temporary";
       description = "Portable temporary file and directory support for Windows and Unix, based on code from Cabal";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "terminal-progress-bar" = callPackage
    ({ mkDerivation, base, base-unicode-symbols, HUnit, stm, stm-chans
     , test-framework, test-framework-hunit
     }:
     mkDerivation {
       pname = "terminal-progress-bar";
       version = "0.0.1.4";
       sha256 = "0ldvii23ks446xrd27aklh8s8pn1yi3dzhhzl05gipjqbhq3lsx3";
       libraryHaskellDepends = [
         base base-unicode-symbols stm stm-chans
       ];
       testHaskellDepends = [
         base base-unicode-symbols HUnit test-framework test-framework-hunit
       ];
       homepage = "https://github.com/roelvandijk/terminal-progress-bar";
       description = "A simple progress bar in the terminal";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "terminal-size" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "terminal-size";
       version = "0.3.0";
       sha256 = "0g8v08d20hlfsah9dlgv2v2pzj0m4dva0zp6zi4jrkxjhg6vi7bw";
       libraryHaskellDepends = [ base ];
       description = "Get terminal window height and width";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "test-framework" = callPackage
    ({ mkDerivation, ansi-terminal, ansi-wl-pprint, base, containers
     , hostname, old-locale, random, regex-posix, time, xml
     }:
     mkDerivation {
       pname = "test-framework";
       version = "0.8.1.1";
       sha256 = "0wxjgdvb1c4ykazw774zlx86550848wbsvgjgcrdzcgbb9m650vq";
       revision = "3";
       editedCabalFile = "1b6pi4j1dpcbiyx1bpfks29x293j02z7ashs2sdc8fhzbwsr9lxj";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         ansi-terminal ansi-wl-pprint base containers hostname old-locale
         random regex-posix time xml
       ];
       homepage = "https://batterseapower.github.io/test-framework/";
       description = "Framework for running and organising tests, with HUnit and QuickCheck support";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "test-framework-hunit" = callPackage
    ({ mkDerivation, base, extensible-exceptions, HUnit, test-framework
     }:
     mkDerivation {
       pname = "test-framework-hunit";
       version = "0.3.0.1";
       sha256 = "1h0h55kf6ff25nbfx1mhliwyknc0glwv3zi78wpzllbjbs7gvyfk";
       revision = "1";
       editedCabalFile = "0aabb5lksl75yc75rfscgsv2aiazkz3hyx6j9mpis8nwcykmaqgg";
       libraryHaskellDepends = [
         base extensible-exceptions HUnit test-framework
       ];
       homepage = "https://batterseapower.github.io/test-framework/";
       description = "HUnit support for the test-framework package";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "test-framework-quickcheck2" = callPackage
    ({ mkDerivation, base, extensible-exceptions, QuickCheck, random
     , test-framework
     }:
     mkDerivation {
       pname = "test-framework-quickcheck2";
       version = "0.3.0.3";
       sha256 = "12p1zwrsz35r3j5gzbvixz9z1h5643rhihf5gqznmc991krwd5nc";
       revision = "4";
       editedCabalFile = "1j1lk0xpbdfvp42h6c34yq1snhl1mk6sf393raxvakfl0l7nybqd";
       libraryHaskellDepends = [
         base extensible-exceptions QuickCheck random test-framework
       ];
       homepage = "https://batterseapower.github.io/test-framework/";
       description = "QuickCheck2 support for the test-framework package";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "test-framework-th" = callPackage
    ({ mkDerivation, base, haskell-src-exts, language-haskell-extract
     , regex-posix, template-haskell, test-framework
     }:
     mkDerivation {
       pname = "test-framework-th";
       version = "0.2.4";
       sha256 = "12lw7yj02jb9s0i7rb98jjam43j2h0gzmnbj9zi933fx7sg0sy4b";
       libraryHaskellDepends = [
         base haskell-src-exts language-haskell-extract regex-posix
         template-haskell test-framework
       ];
       homepage = "http://github.com/finnsson/test-generator";
       description = "Automagically generate the HUnit- and Quickcheck-bulk-code using Template Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "testing-feat" = callPackage
    ({ mkDerivation, base, mtl, QuickCheck, tagshare, template-haskell
     }:
     mkDerivation {
       pname = "testing-feat";
       version = "0.4.0.2";
       sha256 = "15gi6w7p4alnih9grklhhr8338y1aal07admbz4n2f724hnhyb2j";
       revision = "1";
       editedCabalFile = "0gyxqh0g30ldzc7hdkadkvjwbdyjqnk14g53h0gpl3mcx7hxss01";
       libraryHaskellDepends = [
         base mtl QuickCheck tagshare template-haskell
       ];
       description = "Functional Enumeration of Algebraic Types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "testpack" = callPackage
    ({ mkDerivation, base, containers, HUnit, mtl, QuickCheck, random
     }:
     mkDerivation {
       pname = "testpack";
       version = "2.1.3.0";
       sha256 = "1rq5d64d7j3gpgbfxmfr4xmzizjy0ricw5ghrakv8gzvxmi2bn4p";
       revision = "1";
       editedCabalFile = "0fdgxw04gx1ai31bk0cyck9qfqpn10yfgjaazc15r2ngjpbbqqy7";
       libraryHaskellDepends = [
         base containers HUnit mtl QuickCheck random
       ];
       homepage = "https://github.com/jgoerzen/testpack";
       description = "Test Utililty Pack for HUnit and QuickCheck (unmaintained)";
       license = "LGPL";
     }) {};
  "texmath" = callPackage
    ({ mkDerivation, base, bytestring, containers, directory, filepath
     , mtl, network-uri, pandoc-types, parsec, process, split, syb
     , temporary, text, utf8-string, xml
     }:
     mkDerivation {
       pname = "texmath";
       version = "0.8.1";
       sha256 = "0k30b4klbp1n59gjpwmkcd8p7rg0ihnn9n3ka5vz85lfsykl7q6q";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base containers mtl pandoc-types parsec syb xml
       ];
       executableHaskellDepends = [ network-uri ];
       testHaskellDepends = [
         base bytestring directory filepath process split temporary text
         utf8-string xml
       ];
       homepage = "http://github.com/jgm/texmath";
       description = "Conversion between formats used to represent mathematics";
       license = "GPL";
     }) {};
  "text" = callPackage
    ({ mkDerivation, array, base, bytestring, deepseq, directory
     , ghc-prim, HUnit, integer-gmp, QuickCheck, quickcheck-unicode
     , random, test-framework, test-framework-hunit
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "text";
       version = "1.2.0.4";
       sha256 = "004p1c74crs8wmjafwsmw3mmycspq1j8fpm1lvfpq6acha7bnpc6";
       revision = "1";
       editedCabalFile = "02qg44zzr1q47v9bd9hzrhdmyxism698v7hblfg0ykwqd8a5wq7f";
       configureFlags = [ "-f-integer-simple" ];
       libraryHaskellDepends = [
         array base bytestring deepseq ghc-prim integer-gmp
       ];
       testHaskellDepends = [
         array base bytestring deepseq directory ghc-prim HUnit integer-gmp
         QuickCheck quickcheck-unicode random test-framework
         test-framework-hunit test-framework-quickcheck2
       ];
       homepage = "https://github.com/bos/text";
       description = "An efficient packed Unicode text type";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "text-binary" = callPackage
    ({ mkDerivation, base, binary, text }:
     mkDerivation {
       pname = "text-binary";
       version = "0.1.0";
       sha256 = "0wc501j8hqspnhf4d1hyb18f1wgc4kl2qx1b5s4bkxv0dfbwrk6z";
       revision = "2";
       editedCabalFile = "06aig24xj1n7jvbajnk0xjdimpb1wx84nv6bdv3mbpxk4rzj091m";
       libraryHaskellDepends = [ base binary text ];
       homepage = "https://github.com/kawu/text-binary";
       description = "Binary instances for text types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "text-format" = callPackage
    ({ mkDerivation, array, base, double-conversion, ghc-prim
     , integer-gmp, old-locale, text, time, transformers
     }:
     mkDerivation {
       pname = "text-format";
       version = "0.3.1.1";
       sha256 = "02zfgzfjvkaxbma1h2gr95h10c8q9gyaadag41q579j68iv15qbd";
       libraryHaskellDepends = [
         array base double-conversion ghc-prim integer-gmp old-locale text
         time transformers
       ];
       homepage = "https://github.com/bos/text-format";
       description = "Text formatting";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "text-icu" = callPackage
    ({ mkDerivation, array, base, bytestring, deepseq, directory
     , ghc-prim, HUnit, icu, QuickCheck, random, test-framework
     , test-framework-hunit, test-framework-quickcheck2, text
     }:
     mkDerivation {
       pname = "text-icu";
       version = "0.7.0.1";
       sha256 = "0y3z5jda7v2iyll2148ivxfd2yhp27d3ryxrspp0cdq394klqxp2";
       libraryHaskellDepends = [ base bytestring deepseq text ];
       librarySystemDepends = [ icu ];
       testHaskellDepends = [
         array base bytestring deepseq directory ghc-prim HUnit QuickCheck
         random test-framework test-framework-hunit
         test-framework-quickcheck2 text
       ];
       homepage = "https://github.com/bos/text-icu";
       description = "Bindings to the ICU library";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) icu;};
  "text-manipulate" = callPackage
    ({ mkDerivation, base, criterion, tasty, tasty-hunit, text
     , text-format
     }:
     mkDerivation {
       pname = "text-manipulate";
       version = "0.1.3.1";
       sha256 = "0k7mh9p6c8yif8sbfgqclk9v9jzymhlpv66bypn0z1y3p4ywfgjc";
       libraryHaskellDepends = [ base text text-format ];
       testHaskellDepends = [ base tasty tasty-hunit text ];
       benchmarkHaskellDepends = [ base criterion text ];
       homepage = "https://github.com/brendanhay/text-manipulate";
       description = "Case conversion, word boundary manipulation, and textual subjugation";
       license = "unknown";
     }) {};
  "tf-random" = callPackage
    ({ mkDerivation, base, primitive, random, time }:
     mkDerivation {
       pname = "tf-random";
       version = "0.5";
       sha256 = "0445r2nns6009fmq0xbfpyv7jpzwv0snccjdg7hwj4xk4z0cwc1f";
       libraryHaskellDepends = [ base primitive random time ];
       description = "High-quality splittable pseudorandom number generator";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "th-desugar" = callPackage
    ({ mkDerivation, base, containers, hspec, HUnit, mtl, syb
     , template-haskell, th-lift, th-orphans
     }:
     mkDerivation {
       pname = "th-desugar";
       version = "1.5.3";
       sha256 = "1bnbx5fpdnw24q3cjq1riccing8wadhl2xa588kf1qdf1nd9g7i0";
       revision = "1";
       editedCabalFile = "12bg7ndvzc4gkgzvp626lhaa561rxbqwb8sm9lwmwd7a5bpwa82k";
       libraryHaskellDepends = [
         base containers mtl syb template-haskell th-lift th-orphans
       ];
       testHaskellDepends = [
         base containers hspec HUnit mtl syb template-haskell th-lift
         th-orphans
       ];
       homepage = "http://www.cis.upenn.edu/~eir/packages/th-desugar";
       description = "Functions to desugar Template Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "th-expand-syns" = callPackage
    ({ mkDerivation, base, containers, syb, template-haskell }:
     mkDerivation {
       pname = "th-expand-syns";
       version = "0.3.0.6";
       sha256 = "03qv93pyqk8all39knsf0mzmbfdck5x61kqnyn8rbisw5c1ymx6j";
       libraryHaskellDepends = [ base containers syb template-haskell ];
       testHaskellDepends = [ base template-haskell ];
       description = "Expands type synonyms in Template Haskell ASTs";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "th-extras" = callPackage
    ({ mkDerivation, base, syb, template-haskell }:
     mkDerivation {
       pname = "th-extras";
       version = "0.0.0.2";
       sha256 = "15sqf2jjnqcssq8hp80fk0ysgwqykjjc31gvvmzg4sypskpjs8cl";
       revision = "1";
       editedCabalFile = "0ryzvqav51wdwfagmg71kq1ljgfqs9a3zr4pzmc2fcc8vapbvpyr";
       libraryHaskellDepends = [ base syb template-haskell ];
       homepage = "https://github.com/mokus0/th-extras";
       description = "A grab bag of functions for use with Template Haskell";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "th-lift" = callPackage
    ({ mkDerivation, base, template-haskell }:
     mkDerivation {
       pname = "th-lift";
       version = "0.7.2";
       sha256 = "0jl2x09mh9frsx5bccw8m4m3h72bncjaix9ylyfpvizisivj8p3m";
       libraryHaskellDepends = [ base template-haskell ];
       testHaskellDepends = [ base template-haskell ];
       homepage = "http://github.com/mboes/th-lift";
       description = "Derive Template Haskell's Lift class for datatypes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "th-orphans" = callPackage
    ({ mkDerivation, base, hspec, mtl, nats, template-haskell, th-lift
     , th-reify-many
     }:
     mkDerivation {
       pname = "th-orphans";
       version = "0.11.1";
       sha256 = "111ckvvicr953aqnnkn7rn089dprz57h95cg95rs7f1zz318h2xy";
       revision = "1";
       editedCabalFile = "1f22a1fis5g7kvb1f77xcr9jj1511fqh4py74kbnhayi9smczv29";
       libraryHaskellDepends = [
         base mtl nats template-haskell th-lift th-reify-many
       ];
       testHaskellDepends = [ base hspec template-haskell ];
       description = "Orphan instances for TH datatypes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "th-reify-many" = callPackage
    ({ mkDerivation, base, containers, mtl, safe, template-haskell
     , th-expand-syns
     }:
     mkDerivation {
       pname = "th-reify-many";
       version = "0.1.3";
       sha256 = "00hryljcs434wcv1vaamfdbjk857f46djxv7mlwplkl3zsmfhlfx";
       libraryHaskellDepends = [
         base containers mtl safe template-haskell th-expand-syns
       ];
       testHaskellDepends = [ base template-haskell ];
       homepage = "http://github.com/mgsloan/th-reify-many";
       description = "Recurseively reify template haskell datatype info";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "threads" = callPackage
    ({ mkDerivation, base, concurrent-extra, HUnit, stm, test-framework
     , test-framework-hunit
     }:
     mkDerivation {
       pname = "threads";
       version = "0.5.1.3";
       sha256 = "04b4hjwv38iv48hdaxrw8ngrid6pgia32h6vci80szgpjxslrg82";
       libraryHaskellDepends = [ base stm ];
       testHaskellDepends = [
         base concurrent-extra HUnit stm test-framework test-framework-hunit
       ];
       doCheck = false;
       homepage = "https://github.com/basvandijk/threads";
       description = "Fork threads and wait for their result";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "thyme" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, bytestring, Cabal
     , containers, cpphs, criterion, deepseq, directory, filepath, mtl
     , old-locale, profunctors, QuickCheck, random
     , system-posix-redirect, text, time, vector, vector-space
     , vector-th-unbox
     }:
     mkDerivation {
       pname = "thyme";
       version = "0.3.5.5";
       sha256 = "0v3rbjl92bqggsdra72zdq6rxzb2qf1268424p94225lnwgp1il4";
       libraryHaskellDepends = [
         aeson attoparsec base bytestring containers deepseq mtl old-locale
         profunctors QuickCheck random text time vector vector-space
         vector-th-unbox
       ];
       libraryToolDepends = [ cpphs ];
       testHaskellDepends = [
         attoparsec base bytestring Cabal containers directory filepath mtl
         old-locale profunctors QuickCheck random system-posix-redirect text
         time vector-space
       ];
       benchmarkHaskellDepends = [
         base criterion mtl old-locale profunctors QuickCheck random time
         vector vector-space
       ];
       doCheck = false;
       homepage = "https://github.com/liyang/thyme";
       description = "A faster time library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "time-compat" = callPackage
    ({ mkDerivation, base, old-time, time }:
     mkDerivation {
       pname = "time-compat";
       version = "0.1.0.3";
       sha256 = "0zqgzr8yjn36rn6gflwh5s0c92vl44xzxiw0jz8d5h0h8lhi21sr";
       libraryHaskellDepends = [ base old-time time ];
       homepage = "http://hub.darcs.net/dag/time-compat";
       description = "Compatibility with old-time for the time package";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "time-lens" = callPackage
    ({ mkDerivation, base, data-lens-light, time }:
     mkDerivation {
       pname = "time-lens";
       version = "0.4.0.1";
       sha256 = "0916qfan93aq91icf87ifvskrq6s6s75rhkajvl8pxp74j28hlwz";
       libraryHaskellDepends = [ base data-lens-light time ];
       description = "Lens-based interface to Data.Time data structures";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "time-locale-compat" = callPackage
    ({ mkDerivation, base, old-locale, time }:
     mkDerivation {
       pname = "time-locale-compat";
       version = "0.1.0.1";
       sha256 = "0q5d134cvcy7hlr473fanqqixqnqpqvz9ka2r45m59l6kzrws95c";
       libraryHaskellDepends = [ base old-locale time ];
       homepage = "http://twitter.com/khibino/";
       description = "Compatibility of TimeLocale between old-locale and time-1.5";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "timezone-olson" = callPackage
    ({ mkDerivation, base, binary, bytestring, extensible-exceptions
     , time, timezone-series
     }:
     mkDerivation {
       pname = "timezone-olson";
       version = "0.1.6";
       sha256 = "0gg1fq85km5d48966a267q6z0wwl1dz88xq88v0l1jlkwd9jsb0z";
       libraryHaskellDepends = [
         base binary bytestring extensible-exceptions time timezone-series
       ];
       homepage = "http://projects.haskell.org/time-ng/";
       description = "A pure Haskell parser and renderer for binary Olson timezone files";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "timezone-series" = callPackage
    ({ mkDerivation, base, time }:
     mkDerivation {
       pname = "timezone-series";
       version = "0.1.4";
       sha256 = "06p5v0dimhwmra100gwkhkz3ll492i2bvafw0qx2qzcxx4yxff40";
       libraryHaskellDepends = [ base time ];
       homepage = "http://projects.haskell.org/time-ng/";
       description = "Enhanced timezone handling for Data.Time";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tls" = callPackage
    ({ mkDerivation, asn1-encoding, asn1-types, async, base, byteable
     , bytestring, cereal, cipher-aes, cipher-des, cipher-rc4, cprng-aes
     , criterion, crypto-cipher-types, crypto-numbers, crypto-pubkey
     , crypto-pubkey-types, crypto-random, cryptohash
     , data-default-class, hourglass, mtl, network, QuickCheck, tasty
     , tasty-quickcheck, transformers, x509, x509-store, x509-validation
     }:
     mkDerivation {
       pname = "tls";
       version = "1.2.17";
       sha256 = "0j0a16zwpycp0drsjar0rpcs5vd1ljymhclfjls6091ph917rzn6";
       libraryHaskellDepends = [
         asn1-encoding asn1-types async base byteable bytestring cereal
         cipher-aes cipher-des cipher-rc4 crypto-cipher-types crypto-numbers
         crypto-pubkey crypto-pubkey-types crypto-random cryptohash
         data-default-class mtl network transformers x509 x509-store
         x509-validation
       ];
       testHaskellDepends = [
         base bytestring cereal cprng-aes crypto-pubkey crypto-random
         data-default-class hourglass mtl QuickCheck tasty tasty-quickcheck
         x509 x509-validation
       ];
       benchmarkHaskellDepends = [
         base bytestring cprng-aes criterion crypto-pubkey crypto-random
         data-default-class hourglass mtl QuickCheck x509 x509-validation
       ];
       homepage = "http://github.com/vincenthz/hs-tls";
       description = "TLS/SSL protocol native implementation (Server and Client)";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tls-debug" = callPackage
    ({ mkDerivation, base, bytestring, cprng-aes, crypto-pubkey
     , data-default-class, network, pem, time, tls, x509, x509-system
     , x509-validation
     }:
     mkDerivation {
       pname = "tls-debug";
       version = "0.3.4";
       sha256 = "08bxcl0lf07fx3xfajd99090glvgnpn5s4826g2hirr75b9a5b93";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         base bytestring cprng-aes crypto-pubkey data-default-class network
         pem time tls x509 x509-system x509-validation
       ];
       doHaddock = false;
       homepage = "http://github.com/vincenthz/hs-tls";
       description = "Set of programs for TLS testing and debugging";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tostring" = callPackage
    ({ mkDerivation, base, case-insensitive, text, utf8-string }:
     mkDerivation {
       pname = "tostring";
       version = "0.2.1.1";
       sha256 = "0c95a1vjnnn3bwdz8v5hv7q2sbzn23ban3hcwqmwhmzc9ba019zg";
       libraryHaskellDepends = [ base case-insensitive text utf8-string ];
       description = "The ToString class";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "transformers-base" = callPackage
    ({ mkDerivation, base, stm, transformers, transformers-compat }:
     mkDerivation {
       pname = "transformers-base";
       version = "0.4.4";
       sha256 = "11r3slgpgpra6zi2kjg3g60gvv17b1fh6qxipcpk8n86qx7lk8va";
       revision = "1";
       editedCabalFile = "196pr3a4lhgklyw6nq6rv1j9djwzmvx7xrpp58carxnb55gk06pv";
       libraryHaskellDepends = [
         base stm transformers transformers-compat
       ];
       homepage = "https://github.com/mvv/transformers-base";
       description = "Lift computations from the bottom of a transformer stack";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "transformers-compat" = callPackage
    ({ mkDerivation, base, mtl, transformers }:
     mkDerivation {
       pname = "transformers-compat";
       version = "0.4.0.3";
       sha256 = "097y6c6srnd6k1mr0bhnxxhclj78a5yq20arcpszdwqd37q7ijjf";
       libraryHaskellDepends = [ base mtl transformers ];
       homepage = "http://github.com/ekmett/transformers-compat/";
       description = "A small compatibility shim exposing the new types from transformers 0.3 and 0.4 to older Haskell platforms.";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "traverse-with-class" = callPackage
    ({ mkDerivation, base, template-haskell, transformers }:
     mkDerivation {
       pname = "traverse-with-class";
       version = "0.2.0.3";
       sha256 = "0snms19w3n9ni1wmf4ikwpp298nc6qk6phrjxi5g023ihqqdvr6g";
       libraryHaskellDepends = [ base template-haskell transformers ];
       description = "Generic applicative traversals";
       license = stdenv.lib.licenses.mit;
     }) {};
  "tree-view" = callPackage
    ({ mkDerivation, base, containers, mtl }:
     mkDerivation {
       pname = "tree-view";
       version = "0.4";
       sha256 = "0mzywp6nipc6zs98dy4ny2s3r9d745lqpjazfnj5y4hx8swyckgn";
       libraryHaskellDepends = [ base containers mtl ];
       description = "Render trees as foldable HTML and Unicode art";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "trifecta" = callPackage
    ({ mkDerivation, ansi-terminal, ansi-wl-pprint, array, base
     , blaze-builder, blaze-html, blaze-markup, bytestring, charset
     , comonad, containers, deepseq, directory, doctest, filepath
     , fingertree, ghc-prim, hashable, lens, mtl, parsers, QuickCheck
     , reducers, semigroups, transformers, unordered-containers
     , utf8-string
     }:
     mkDerivation {
       pname = "trifecta";
       version = "1.5.1.3";
       sha256 = "1yd55bfhdn8ckkf2c5084fsnfwhib229xw9bn2a4lwpkzbbpflxw";
       revision = "4";
       editedCabalFile = "12b06igf8asqyy31ixqpqvcjn1v22rdnkq75n8qinym5yz2cnvkl";
       libraryHaskellDepends = [
         ansi-terminal ansi-wl-pprint array base blaze-builder blaze-html
         blaze-markup bytestring charset comonad containers deepseq
         fingertree ghc-prim hashable lens mtl parsers reducers semigroups
         transformers unordered-containers utf8-string
       ];
       testHaskellDepends = [
         base directory doctest filepath parsers QuickCheck
       ];
       homepage = "http://github.com/ekmett/trifecta/";
       description = "A modern parser combinator library with convenient diagnostics";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tttool" = callPackage
    ({ mkDerivation, aeson, base, binary, bytestring, containers
     , directory, filepath, ghc-prim, hashable, JuicyPixels, mtl
     , old-locale, parsec, process, template-haskell, text, time
     , unordered-containers, vector, yaml
     }:
     mkDerivation {
       pname = "tttool";
       version = "1.3";
       sha256 = "03wb7ra4zk6x40z2h2i8rdlf53abd9lnj67c2438y2vk70ljmlny";
       configureFlags = [ "-fold-locale" ];
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         aeson base binary bytestring containers directory filepath ghc-prim
         hashable JuicyPixels mtl old-locale parsec process template-haskell
         text time unordered-containers vector yaml
       ];
       doHaddock = false;
       homepage = "https://github.com/entropia/tip-toi-reveng";
       description = "Working with files for the Tiptoi® pen";
       license = stdenv.lib.licenses.mit;
     }) {};
  "tuple" = callPackage
    ({ mkDerivation, base, OneTuple }:
     mkDerivation {
       pname = "tuple";
       version = "0.3.0.2";
       sha256 = "094nx29aahyrvbcn7yca9zs2a5rxz1is7510w1q43rpvza7hdjrg";
       libraryHaskellDepends = [ base OneTuple ];
       description = "Various functions on tuples";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "turtle" = callPackage
    ({ mkDerivation, async, base, clock, directory, doctest, foldl
     , managed, process, system-fileio, system-filepath, temporary, text
     , time, transformers, unix
     }:
     mkDerivation {
       pname = "turtle";
       version = "1.0.2";
       sha256 = "1qff8qd46583d8pyh9ac11r91cnzgncpjlnpdw5kg81xxldjv1n8";
       libraryHaskellDepends = [
         async base clock directory foldl managed process system-fileio
         system-filepath temporary text time transformers unix
       ];
       testHaskellDepends = [ base doctest ];
       description = "Shell programming, Haskell-style";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "type-eq" = callPackage
    ({ mkDerivation, base, cpphs }:
     mkDerivation {
       pname = "type-eq";
       version = "0.5";
       sha256 = "007srln0xxi27wca8dk72xp3cdwnk8iqmlqgbxi17c9l2x7lrkwz";
       revision = "1";
       editedCabalFile = "1g8m6f73pbz8mqvqbrvxhp2klj7lf624jgqdn1gchd56z4pcnryw";
       libraryHaskellDepends = [ base ];
       libraryToolDepends = [ cpphs ];
       homepage = "http://github.com/glaebhoerl/type-eq";
       description = "Type equality evidence you can carry around";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "type-list" = callPackage
    ({ mkDerivation, base, singletons }:
     mkDerivation {
       pname = "type-list";
       version = "0.0.0.1";
       sha256 = "1mbgwin1rcf1fkm3cq6h2dqv157xwgjca3019fxi759cxg9j70d2";
       libraryHaskellDepends = [ base singletons ];
       description = "Operations on type-level lists and tuples";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "udbus" = callPackage
    ({ mkDerivation, base, binary, bytestring, cereal, containers
     , ghc-prim, mtl, network, unix, utf8-string
     }:
     mkDerivation {
       pname = "udbus";
       version = "0.2.1";
       sha256 = "0a7kksh99nll91q41z4xgrcwc8pnfm0p71bxw6yymcd7yb0v09fk";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base binary bytestring cereal containers ghc-prim mtl network unix
         utf8-string
       ];
       homepage = "http://github.com/vincenthz/hs-udbus";
       description = "Small DBus implementation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "unbound-generics" = callPackage
    ({ mkDerivation, base, containers, contravariant, mtl, QuickCheck
     , tasty, tasty-hunit, tasty-quickcheck, transformers
     , transformers-compat
     }:
     mkDerivation {
       pname = "unbound-generics";
       version = "0.1";
       sha256 = "10flwmkmpnkxib1v9f5qv11wnvjmnn3aiag4f2qgpdc3hadq6j0q";
       libraryHaskellDepends = [
         base containers contravariant mtl transformers transformers-compat
       ];
       testHaskellDepends = [
         base mtl QuickCheck tasty tasty-hunit tasty-quickcheck
       ];
       homepage = "http://github.com/lambdageek/unbound-generics";
       description = "Reimplementation of Unbound using GHC Generics";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "unbounded-delays" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "unbounded-delays";
       version = "0.1.0.9";
       sha256 = "1f4h87503m3smhip432q027wj3zih18pmz2rnafh60589ifcl420";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/basvandijk/unbounded-delays";
       description = "Unbounded thread delays and timeouts";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "union-find" = callPackage
    ({ mkDerivation, base, containers, transformers }:
     mkDerivation {
       pname = "union-find";
       version = "0.2";
       sha256 = "1v7hj42j9w6jlzi56jg8rh4p58gfs1c5dx30wd1qqvn0p0mnihp6";
       revision = "1";
       editedCabalFile = "13cwjh03n82sgshbk4fdlvhc0pb3v979sdcdrpvnpjdqmvcprs92";
       libraryHaskellDepends = [ base containers transformers ];
       homepage = "http://github.com/nominolo/union-find";
       description = "Efficient union and equivalence testing of sets";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "uniplate" = callPackage
    ({ mkDerivation, base, containers, hashable, syb
     , unordered-containers
     }:
     mkDerivation {
       pname = "uniplate";
       version = "1.6.12";
       sha256 = "1dx8f9aw27fz8kw0ad1nm6355w5rdl7bjvb427v2bsgnng30pipw";
       libraryHaskellDepends = [
         base containers hashable syb unordered-containers
       ];
       homepage = "http://community.haskell.org/~ndm/uniplate/";
       description = "Help writing simple, concise and fast generic operations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "unix-compat" = callPackage
    ({ mkDerivation, base, unix }:
     mkDerivation {
       pname = "unix-compat";
       version = "0.4.1.4";
       sha256 = "0jxk7j5pz2kgfpqr4hznndjg31pqj5xg2qfc5308fcn9xyg1myps";
       revision = "2";
       editedCabalFile = "170j8a6dp825iwmk4v34pgi7c6pmkcjcrip5vznkxvdsjxagp71c";
       libraryHaskellDepends = [ base unix ];
       homepage = "http://github.com/jystic/unix-compat";
       description = "Portable POSIX-compatibility layer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "unix-time" = callPackage
    ({ mkDerivation, base, binary, bytestring, doctest, hspec
     , old-locale, old-time, QuickCheck, time
     }:
     mkDerivation {
       pname = "unix-time";
       version = "0.3.5";
       sha256 = "0pk7046lmvl7dw6g7508xsixwi3gpiq5dw0a0lfwpfr80g6mh73z";
       libraryHaskellDepends = [ base binary bytestring old-time ];
       testHaskellDepends = [
         base bytestring doctest hspec old-locale old-time QuickCheck time
       ];
       doCheck = false;
       description = "Unix time parser/formatter and utilities";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "unordered-containers" = callPackage
    ({ mkDerivation, base, bytestring, ChasingBottoms, containers
     , criterion, deepseq, hashable, hashmap, HUnit, mtl, QuickCheck
     , random, test-framework, test-framework-hunit
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "unordered-containers";
       version = "0.2.5.1";
       sha256 = "06l1xv7vhpxly75saxdrbc6p2zlgz1az278arfkz4rgawfnphn3f";
       revision = "1";
       editedCabalFile = "0kbd4c2vfv10w8biqfhf4n5gljjy6y23x4qi84gnrpp6riaqhfsp";
       libraryHaskellDepends = [ base deepseq hashable ];
       testHaskellDepends = [
         base ChasingBottoms containers hashable HUnit QuickCheck
         test-framework test-framework-hunit test-framework-quickcheck2
       ];
       benchmarkHaskellDepends = [
         base bytestring containers criterion deepseq hashable hashmap mtl
         random
       ];
       homepage = "https://github.com/tibbe/unordered-containers";
       description = "Efficient hashing-based container types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "uri-encode" = callPackage
    ({ mkDerivation, base, bytestring, network-uri, text, utf8-string
     }:
     mkDerivation {
       pname = "uri-encode";
       version = "1.5.0.4";
       sha256 = "10pmg48h1az474qsr951inyvkm5y9xqwrdzyvxf83k53i07kijpp";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring network-uri text utf8-string
       ];
       description = "Unicode aware uri-encoding";
       license = "unknown";
     }) {};
  "url" = callPackage
    ({ mkDerivation, base, utf8-string }:
     mkDerivation {
       pname = "url";
       version = "2.1.3";
       sha256 = "0qag18wbrq9jjk1444mjigz1xl7xl03fz66b1lnya9qaihzpxwjs";
       libraryHaskellDepends = [ base utf8-string ];
       homepage = "http://www.haskell.org/haskellwiki/Url";
       description = "A library for working with URLs";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "users" = callPackage
    ({ mkDerivation, aeson, base, path-pieces, text, time }:
     mkDerivation {
       pname = "users";
       version = "0.1.0.0";
       sha256 = "1svybj4sdkvcf1d5hm82szrc3s1rql9fcd8xxl1873qrvj4idjqq";
       libraryHaskellDepends = [ aeson base path-pieces text time ];
       homepage = "https://github.com/agrafix/users";
       description = "A library simplifying user management for web applications";
       license = stdenv.lib.licenses.mit;
     }) {};
  "users-postgresql-simple" = callPackage
    ({ mkDerivation, aeson, base, bytestring, hspec, mtl
     , postgresql-simple, text, time, users, users-test, uuid
     }:
     mkDerivation {
       pname = "users-postgresql-simple";
       version = "0.1.0.1";
       sha256 = "1k0dmh3m7998x7rqrxiwfgvsw26cwk3fw923m2dyxrifyaqzc5lk";
       libraryHaskellDepends = [
         aeson base bytestring mtl postgresql-simple text time users uuid
       ];
       testHaskellDepends = [ base hspec postgresql-simple users-test ];
       doCheck = false;
       homepage = "https://github.com/agrafix/users";
       description = "A PostgreSQL backend for the users package";
       license = stdenv.lib.licenses.mit;
     }) {};
  "users-test" = callPackage
    ({ mkDerivation, aeson, base, hspec, text, users }:
     mkDerivation {
       pname = "users-test";
       version = "0.1.0.0";
       sha256 = "0r3k89j5ljdp24286xirkx6arcaagljvfvgi1qzc6r6imcnbgim6";
       libraryHaskellDepends = [ aeson base hspec text users ];
       homepage = "https://github.com/agrafix/users";
       description = "Library to test backends for the users library";
       license = stdenv.lib.licenses.mit;
     }) {};
  "utf8-light" = callPackage
    ({ mkDerivation, base, bytestring, ghc-prim }:
     mkDerivation {
       pname = "utf8-light";
       version = "0.4.2";
       sha256 = "0rwyc5z331yfnm4hpx0sph6i1zvkd1z10vvglhnp0vc9wy644k0q";
       libraryHaskellDepends = [ base bytestring ghc-prim ];
       description = "Unicode";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "utf8-string" = callPackage
    ({ mkDerivation, base, bytestring }:
     mkDerivation {
       pname = "utf8-string";
       version = "1";
       sha256 = "025snarzyk4kkw1dk3i8dsxilvxh4kazl6nwq61w9q49y39qiwvr";
       libraryHaskellDepends = [ base bytestring ];
       homepage = "http://github.com/glguy/utf8-string/";
       description = "Support for reading and writing UTF8 Strings";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "uuid" = callPackage
    ({ mkDerivation, base, binary, bytestring, cryptohash, HUnit
     , network-info, QuickCheck, random, tasty, tasty-hunit
     , tasty-quickcheck, time, uuid-types
     }:
     mkDerivation {
       pname = "uuid";
       version = "1.3.10";
       sha256 = "0csq2y8rzdy8cnag4piqvxa742jasxqcq07qgrp4kmdkbnbqvyvy";
       libraryHaskellDepends = [
         base binary bytestring cryptohash network-info random time
         uuid-types
       ];
       testHaskellDepends = [
         base bytestring HUnit QuickCheck random tasty tasty-hunit
         tasty-quickcheck
       ];
       homepage = "https://github.com/aslatter/uuid";
       description = "For creating, comparing, parsing and printing Universally Unique Identifiers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "uuid-types" = callPackage
    ({ mkDerivation, base, binary, bytestring, deepseq, hashable, HUnit
     , QuickCheck, random, tasty, tasty-hunit, tasty-quickcheck
     }:
     mkDerivation {
       pname = "uuid-types";
       version = "1.0.1";
       sha256 = "1brws1nq3pmd3sq786kig2raaxdcx2s8anwsn9f1jj92i5r7y7jb";
       libraryHaskellDepends = [
         base binary bytestring deepseq hashable random
       ];
       testHaskellDepends = [
         base bytestring HUnit QuickCheck tasty tasty-hunit tasty-quickcheck
       ];
       homepage = "https://github.com/aslatter/uuid";
       description = "Type definitions for Universally Unique Identifiers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "vault" = callPackage
    ({ mkDerivation, base, containers, hashable, unordered-containers
     }:
     mkDerivation {
       pname = "vault";
       version = "0.3.0.4";
       sha256 = "0ah6qrg71krc87f4vjy4b4shdd0mgyil8fikb3j6fl4kfwlg67jn";
       libraryHaskellDepends = [
         base containers hashable unordered-containers
       ];
       homepage = "https://github.com/HeinrichApfelmus/vault";
       description = "a persistent store for values of arbitrary types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "vector" = callPackage
    ({ mkDerivation, base, deepseq, ghc-prim, primitive, QuickCheck
     , random, template-haskell, test-framework
     , test-framework-quickcheck2, transformers
     }:
     mkDerivation {
       pname = "vector";
       version = "0.10.12.3";
       sha256 = "16p8i0gvc9d4n9mxlhlnvrl2s0gmgd7kcsk5czdzz2cd4gh5qxhg";
       revision = "1";
       editedCabalFile = "05lwb4zsgzfnb07bm7j1zp8y4y1wx9kapy8l5x693cgz3lsf1mnl";
       libraryHaskellDepends = [ base deepseq ghc-prim primitive ];
       testHaskellDepends = [
         base QuickCheck random template-haskell test-framework
         test-framework-quickcheck2 transformers
       ];
       homepage = "https://github.com/haskell/vector";
       description = "Efficient Arrays";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "vector-algorithms" = callPackage
    ({ mkDerivation, base, bytestring, containers, mtl, mwc-random
     , primitive, QuickCheck, vector
     }:
     mkDerivation {
       pname = "vector-algorithms";
       version = "0.6.0.4";
       sha256 = "09f0kds50xa0r2l837gqarzazvlhx2afvvykkqiwjqma9caj52av";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base bytestring primitive vector ];
       executableHaskellDepends = [ base mtl mwc-random vector ];
       testHaskellDepends = [
         base bytestring containers QuickCheck vector
       ];
       homepage = "http://code.haskell.org/~dolio/";
       description = "Efficient algorithms for vector arrays";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "vector-binary-instances" = callPackage
    ({ mkDerivation, base, binary, cereal, vector }:
     mkDerivation {
       pname = "vector-binary-instances";
       version = "0.2.1.0";
       sha256 = "028rsf2w193rhs1gic5yvvrwidw9sblczcn10aw64npfc6502l4l";
       libraryHaskellDepends = [ base binary cereal vector ];
       homepage = "https://github.com/bos/vector-binary-instances";
       description = "Instances of Data.Binary and Data.Serialize for vector";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "vector-buffer" = callPackage
    ({ mkDerivation, base, deepseq, vector }:
     mkDerivation {
       pname = "vector-buffer";
       version = "0.4.1";
       sha256 = "16zxc2d25qd15nankhc974ax7q3y72mg5a77v5jsfrw291brnnlv";
       libraryHaskellDepends = [ base deepseq vector ];
       description = "A buffer compatible with Data.Vector.*";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "vector-instances" = callPackage
    ({ mkDerivation, base, comonad, keys, pointed, semigroupoids
     , semigroups, vector
     }:
     mkDerivation {
       pname = "vector-instances";
       version = "3.3.0.1";
       sha256 = "1npgvnv8pw5xcax57cam9n5j9ra9phm4b5jj26hbpzwnlh0rkcc4";
       libraryHaskellDepends = [
         base comonad keys pointed semigroupoids semigroups vector
       ];
       homepage = "http://github.com/ekmett/vector-instances";
       description = "Orphan Instances for 'Data.Vector'";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "vector-space" = callPackage
    ({ mkDerivation, base, Boolean, MemoTrie, NumInstances }:
     mkDerivation {
       pname = "vector-space";
       version = "0.9";
       sha256 = "0rq1753rfm35x3jck4xfs8jyf6r712rp2c5lh0kzylxfib4lwkj2";
       libraryHaskellDepends = [ base Boolean MemoTrie NumInstances ];
       description = "Vector & affine spaces, linear maps, and derivatives";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "vector-space-points" = callPackage
    ({ mkDerivation, base, vector-space }:
     mkDerivation {
       pname = "vector-space-points";
       version = "0.2.1.1";
       sha256 = "0d5k7wmwhm9y2jif4fy71bnp8nwbfnkh033nzhiw36wfl35aaznp";
       libraryHaskellDepends = [ base vector-space ];
       description = "A type for points, as distinct from vectors";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "vector-th-unbox" = callPackage
    ({ mkDerivation, base, data-default, template-haskell, vector }:
     mkDerivation {
       pname = "vector-th-unbox";
       version = "0.2.1.2";
       sha256 = "01admr0akldwwmzmc465f5dbqmq03ldvma67kibanjs25m39dxhd";
       revision = "2";
       editedCabalFile = "0vglamdjyx1xlfi6glvxgy5s3vp4fl6fj5iljsv746xvqy5wf648";
       libraryHaskellDepends = [ base template-haskell vector ];
       testHaskellDepends = [ base data-default vector ];
       description = "Deriver for Data.Vector.Unboxed using Template Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "vhd" = callPackage
    ({ mkDerivation, base, byteable, bytestring, cereal, cipher-aes
     , cryptohash, directory, filepath, mmap, QuickCheck, random
     , storable-endian, test-framework, test-framework-quickcheck2, text
     , time
     }:
     mkDerivation {
       pname = "vhd";
       version = "0.2.2";
       sha256 = "0z7a17j0rd06kvn3v4qr0fhxg0xw6n3579477y2lvx4mcc3qyrvw";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base byteable bytestring cereal cipher-aes cryptohash directory
         filepath mmap random storable-endian text time
       ];
       testHaskellDepends = [
         base byteable bytestring cereal cryptohash filepath mmap QuickCheck
         random test-framework test-framework-quickcheck2 text time
       ];
       homepage = "https://github.com/vincenthz/hs-vhd";
       description = "Provides functions to inspect and manipulate virtual hard disk (VHD) files";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "void" = callPackage
    ({ mkDerivation, base, ghc-prim, hashable, semigroups }:
     mkDerivation {
       pname = "void";
       version = "0.7";
       sha256 = "0ivgr4minxb5v56v4kbd045iwqk1c2w89c830731l75mkg8qa6wq";
       revision = "1";
       editedCabalFile = "1bgll5awf4j5766w63bnj9vl00irfdiyhhv903q3vw9s90zcjrhv";
       libraryHaskellDepends = [ base ghc-prim hashable semigroups ];
       homepage = "http://github.com/ekmett/void";
       description = "A Haskell 98 logically uninhabited data type";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wai" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring, hspec, http-types
     , network, text, vault
     }:
     mkDerivation {
       pname = "wai";
       version = "3.0.2.3";
       sha256 = "1mrry121xjgd2h69m35khgsiicrwhg7ysa7mzm6bw3ac41xc08ns";
       libraryHaskellDepends = [
         base blaze-builder bytestring http-types network text vault
       ];
       testHaskellDepends = [ base blaze-builder bytestring hspec ];
       homepage = "https://github.com/yesodweb/wai";
       description = "Web Application Interface";
       license = stdenv.lib.licenses.mit;
     }) {};
  "wai-app-static" = callPackage
    ({ mkDerivation, base, base64-bytestring, blaze-builder, blaze-html
     , blaze-markup, byteable, bytestring, containers, cryptohash
     , cryptohash-conduit, directory, file-embed, filepath, hspec
     , http-date, http-types, mime-types, network, old-locale
     , optparse-applicative, system-fileio, system-filepath
     , template-haskell, text, time, transformers, unix-compat
     , unordered-containers, wai, wai-extra, warp, zlib
     }:
     mkDerivation {
       pname = "wai-app-static";
       version = "3.0.1";
       sha256 = "0c2zhkm9c9ixaj210npi5vlm4rnyj56nxakjz63kahna121qjqak";
       revision = "1";
       editedCabalFile = "1cbjq8358fl9h4mm099iwgf9m4ffxmy9lr7qqnayscfcd8w8kp7d";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base base64-bytestring blaze-builder blaze-html blaze-markup
         byteable bytestring containers cryptohash cryptohash-conduit
         directory file-embed filepath http-date http-types mime-types
         old-locale optparse-applicative system-fileio system-filepath
         template-haskell text time transformers unix-compat
         unordered-containers wai wai-extra warp zlib
       ];
       executableHaskellDepends = [
         base bytestring containers directory mime-types text
       ];
       testHaskellDepends = [
         base bytestring hspec http-date http-types mime-types network
         old-locale text time transformers unix-compat wai wai-extra zlib
       ];
       homepage = "http://www.yesodweb.com/book/web-application-interface";
       description = "WAI application for static serving";
       license = stdenv.lib.licenses.mit;
     }) {};
  "wai-conduit" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring, conduit
     , http-types, transformers, wai
     }:
     mkDerivation {
       pname = "wai-conduit";
       version = "3.0.0.2";
       sha256 = "1wqn8biq0ghz7ikmlq7x7vpdq2yc7mk9rnz9vlng7vcm7wpqilj7";
       libraryHaskellDepends = [
         base blaze-builder bytestring conduit http-types transformers wai
       ];
       homepage = "https://github.com/yesodweb/wai";
       description = "conduit wrappers for WAI";
       license = stdenv.lib.licenses.mit;
     }) {};
  "wai-eventsource" = callPackage
    ({ mkDerivation, wai }:
     mkDerivation {
       pname = "wai-eventsource";
       version = "3.0.0";
       sha256 = "1h5zlqky7ldqbmiaixizhk1s8ghf5i3ha1xfz8flxgzr7gr0al3q";
       libraryHaskellDepends = [ wai ];
       doHaddock = false;
       homepage = "http://www.yesodweb.com/book/web-application-interface";
       description = "WAI support for server-sent events (deprecated)";
       license = stdenv.lib.licenses.mit;
     }) {};
  "wai-extra" = callPackage
    ({ mkDerivation, ansi-terminal, base, base64-bytestring
     , blaze-builder, bytestring, case-insensitive, containers, cookie
     , data-default-class, deepseq, directory, fast-logger, hspec
     , http-types, HUnit, lifted-base, network, old-locale, resourcet
     , streaming-commons, stringsearch, text, time, transformers, unix
     , unix-compat, vault, void, wai, wai-logger, word8, zlib
     }:
     mkDerivation {
       pname = "wai-extra";
       version = "3.0.7.1";
       sha256 = "1jfpqqnavk2v7wn4fhpc1fish67wfyicmsl84l234v47wsbz9r13";
       libraryHaskellDepends = [
         ansi-terminal base base64-bytestring blaze-builder bytestring
         case-insensitive containers cookie data-default-class deepseq
         directory fast-logger http-types lifted-base network old-locale
         resourcet streaming-commons stringsearch text time transformers
         unix unix-compat vault void wai wai-logger word8
       ];
       testHaskellDepends = [
         base blaze-builder bytestring cookie fast-logger hspec http-types
         HUnit resourcet text time transformers wai zlib
       ];
       homepage = "http://github.com/yesodweb/wai";
       description = "Provides some basic WAI handlers and middleware";
       license = stdenv.lib.licenses.mit;
     }) {};
  "wai-handler-launch" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring, http-types
     , process, streaming-commons, transformers, wai, warp
     }:
     mkDerivation {
       pname = "wai-handler-launch";
       version = "3.0.0.3";
       sha256 = "1nx90z37f296gqh0m9rgvw7899jizpclb6fbwhp98byy9s2ssabl";
       libraryHaskellDepends = [
         base blaze-builder bytestring http-types process streaming-commons
         transformers wai warp
       ];
       description = "Launch a web app in the default browser";
       license = stdenv.lib.licenses.mit;
     }) {};
  "wai-logger" = callPackage
    ({ mkDerivation, auto-update, base, blaze-builder, byteorder
     , bytestring, case-insensitive, doctest, easy-file, fast-logger
     , http-types, network, unix, unix-time, wai
     }:
     mkDerivation {
       pname = "wai-logger";
       version = "2.2.4";
       sha256 = "0l7jd3fczn1hp5d7bbhkk0qflw320sr2yw9gb10jvsv42rs1kdbv";
       libraryHaskellDepends = [
         auto-update base blaze-builder byteorder bytestring
         case-insensitive easy-file fast-logger http-types network unix
         unix-time wai
       ];
       testHaskellDepends = [ base doctest ];
       doCheck = false;
       description = "A logging system for WAI";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wai-middleware-consul" = callPackage
    ({ mkDerivation, async, base, base-prelude, bytestring, conduit
     , conduit-extra, consul-haskell, enclosed-exceptions, http-client
     , http-types, monad-control, monad-logger, network, process
     , resourcet, text, transformers, void, wai, wai-app-static
     , wai-conduit, wai-extra, warp
     }:
     mkDerivation {
       pname = "wai-middleware-consul";
       version = "0.1.0.2";
       sha256 = "0qq7kilp9a4qjja337saqccn250s6mnf3n80sgyg935hy1dmm7fq";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         async base base-prelude bytestring conduit conduit-extra
         consul-haskell enclosed-exceptions http-client http-types
         monad-control monad-logger network process resourcet text
         transformers void wai wai-conduit
       ];
       executableHaskellDepends = [
         async base base-prelude monad-logger transformers wai
         wai-app-static wai-extra warp
       ];
       homepage = "https://github.com/fpco/wai-middleware-consul";
       description = "Wai Middleware for Consul";
       license = stdenv.lib.licenses.mit;
     }) {};
  "wai-middleware-static" = callPackage
    ({ mkDerivation, base, bytestring, containers, directory, filepath
     , http-types, mtl, text, wai
     }:
     mkDerivation {
       pname = "wai-middleware-static";
       version = "0.6.0.1";
       sha256 = "1ylf2nm535d3dw0ksa9dfz1b4b78mqzkdrpdfd5pxswcqbgs266d";
       libraryHaskellDepends = [
         base bytestring containers directory filepath http-types mtl text
         wai
       ];
       homepage = "https://github.com/scotty-web/wai-middleware-static";
       description = "WAI middleware that serves requests to static files";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wai-websockets" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring, case-insensitive
     , file-embed, http-types, network, text, transformers, wai
     , wai-app-static, warp, websockets
     }:
     mkDerivation {
       pname = "wai-websockets";
       version = "3.0.0.5";
       sha256 = "1gqivkjdvln6xpkhcr6k75gk2qvjp6mr691902w3m6xpcdv1q5z0";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base blaze-builder bytestring case-insensitive http-types network
         transformers wai websockets
       ];
       executableHaskellDepends = [
         base blaze-builder bytestring case-insensitive file-embed
         http-types network text transformers wai wai-app-static warp
         websockets
       ];
       homepage = "http://github.com/yesodweb/wai";
       description = "Provide a bridge betweeen WAI and the websockets package";
       license = stdenv.lib.licenses.mit;
     }) {};
  "waitra" = callPackage
    ({ mkDerivation, aeson, base, bytestring, directory, filepath
     , http-types, regex-applicative, tasty, tasty-hunit
     , template-haskell, text, wai, wai-extra
     }:
     mkDerivation {
       pname = "waitra";
       version = "0.0.3.0";
       sha256 = "0yismhhgwzrssla2bcg44jy0fdwwxh2szypyjn8wfjvmkfhzshvn";
       libraryHaskellDepends = [
         aeson base bytestring directory filepath http-types
         regex-applicative template-haskell text wai
       ];
       testHaskellDepends = [
         aeson base http-types regex-applicative tasty tasty-hunit wai
         wai-extra
       ];
       homepage = "https://github.com/futurice/waitra";
       description = "A very simple Wai router";
       license = stdenv.lib.licenses.mit;
     }) {};
  "warp" = callPackage
    ({ mkDerivation, array, async, auto-update, base, blaze-builder
     , bytestring, case-insensitive, criterion, doctest, ghc-prim
     , hashable, hspec, HTTP, http-date, http-types, HUnit, iproute
     , lifted-base, network, old-locale, QuickCheck, simple-sendfile
     , streaming-commons, text, time, transformers, unix, unix-compat
     , vault, void, wai
     }:
     mkDerivation {
       pname = "warp";
       version = "3.0.12.1";
       sha256 = "0dahx5g6dclpgrapwvplz4di6yjhy7i3ja089nlyn46lx15pzp6b";
       revision = "1";
       editedCabalFile = "14hqhh81yj22biqrl8c91d3bz28ikg5aibbrj1k1kk37hr8fimr0";
       libraryHaskellDepends = [
         array auto-update base blaze-builder bytestring case-insensitive
         ghc-prim hashable http-date http-types iproute network
         simple-sendfile streaming-commons text unix unix-compat vault void
         wai
       ];
       testHaskellDepends = [
         array async auto-update base blaze-builder bytestring
         case-insensitive doctest ghc-prim hashable hspec HTTP http-date
         http-types HUnit iproute lifted-base network old-locale QuickCheck
         simple-sendfile streaming-commons text time transformers unix
         unix-compat vault void wai
       ];
       benchmarkHaskellDepends = [
         base bytestring criterion http-types network
       ];
       doCheck = false;
       homepage = "http://github.com/yesodweb/wai";
       description = "A fast, light-weight web server for WAI applications";
       license = stdenv.lib.licenses.mit;
     }) {};
  "warp-tls" = callPackage
    ({ mkDerivation, base, bytestring, cprng-aes, data-default-class
     , network, streaming-commons, tls, wai, warp
     }:
     mkDerivation {
       pname = "warp-tls";
       version = "3.0.3";
       sha256 = "1ngprhmf58i80fkw2z750pxavyv05g3sr8j7hd24h47msmghq9mm";
       revision = "1";
       editedCabalFile = "19l8cixai5cds70hjqqmq41cc9wm49wgfz2gsbi9h9q9fbk1dnaz";
       libraryHaskellDepends = [
         base bytestring cprng-aes data-default-class network
         streaming-commons tls wai warp
       ];
       homepage = "http://github.com/yesodweb/wai";
       description = "HTTP over SSL/TLS support for Warp via the TLS package";
       license = stdenv.lib.licenses.mit;
     }) {};
  "web-fpco" = callPackage
    ({ mkDerivation, base, happstack-server, safe, snap, snap-core
     , snap-server
     }:
     mkDerivation {
       pname = "web-fpco";
       version = "0.1.1.0";
       sha256 = "1iizmg1syjywd5hs9swcqxxzmix04hwa86p8c246xybwcklf667n";
       libraryHaskellDepends = [
         base happstack-server safe snap snap-core snap-server
       ];
       homepage = "https://github.com/fpco/web-fpco";
       description = "Wrappers for web frameworks to ease usage with the FP Complete environment";
       license = stdenv.lib.licenses.mit;
     }) {};
  "webdriver" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, base64-bytestring
     , bytestring, cond, data-default, directory, directory-tree
     , exceptions, filepath, http-client, http-types, lifted-base
     , monad-control, mtl, network, network-uri, parallel, scientific
     , temporary, text, time, transformers, transformers-base
     , unordered-containers, vector, zip-archive
     }:
     mkDerivation {
       pname = "webdriver";
       version = "0.6.1";
       sha256 = "1464i2hzriimhykgi0sinndyz3r7vajkzpwyp80fc75piq6vr7wi";
       libraryHaskellDepends = [
         aeson attoparsec base base64-bytestring bytestring cond
         data-default directory directory-tree exceptions filepath
         http-client http-types lifted-base monad-control mtl network
         network-uri scientific temporary text time transformers
         transformers-base unordered-containers vector zip-archive
       ];
       testHaskellDepends = [ base parallel text ];
       doCheck = false;
       homepage = "https://github.com/kallisti-dev/hs-webdriver";
       description = "a Haskell client for the Selenium WebDriver protocol";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "websockets" = callPackage
    ({ mkDerivation, attoparsec, base, base64-bytestring, binary
     , blaze-builder, bytestring, case-insensitive, containers, entropy
     , HUnit, mtl, network, QuickCheck, random, SHA, test-framework
     , test-framework-hunit, test-framework-quickcheck2, text
     }:
     mkDerivation {
       pname = "websockets";
       version = "0.9.3.1";
       sha256 = "0yqq2jj22a17n0cqcd54f0a7vjwwak2zr3wybbh1iq6gz0p5qf76";
       revision = "1";
       editedCabalFile = "08h149clmqgry4pvsbmqpnm85msxvi70jil8sh138ca56anjk15h";
       libraryHaskellDepends = [
         attoparsec base base64-bytestring binary blaze-builder bytestring
         case-insensitive containers entropy mtl network random SHA text
       ];
       testHaskellDepends = [
         attoparsec base base64-bytestring binary blaze-builder bytestring
         case-insensitive containers entropy HUnit mtl network QuickCheck
         random SHA test-framework test-framework-hunit
         test-framework-quickcheck2 text
       ];
       homepage = "http://jaspervdj.be/websockets";
       description = "A sensible and clean way to write WebSocket-capable servers in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wizards" = callPackage
    ({ mkDerivation, base, containers, control-monad-free, haskeline
     , mtl, transformers
     }:
     mkDerivation {
       pname = "wizards";
       version = "1.0.2";
       sha256 = "02yk9d01d39c3hpvlh2c6v35fzyf3nm92f6vff0qns30dmr2r8ab";
       revision = "1";
       editedCabalFile = "15vwynd5v6xm92dxkxf125grd8sv599n5bnj92qqmhlc89psxhxk";
       libraryHaskellDepends = [
         base containers control-monad-free haskeline mtl transformers
       ];
       description = "High level, generic library for interrogative user interfaces";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wl-pprint" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "wl-pprint";
       version = "1.1";
       sha256 = "16kp3fkh0x9kgzk6fdqrm8m0v7b5cgbv0m3x63ybbp5vxbhand06";
       revision = "1";
       editedCabalFile = "1vbagi930lj362vjvq95jq1gc9d9vvk6p5kx1ybwyxrv98vb9wgs";
       libraryHaskellDepends = [ base ];
       description = "The Wadler/Leijen Pretty Printer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wl-pprint-extras" = callPackage
    ({ mkDerivation, base, containers, HUnit, nats, semigroupoids
     , semigroups, test-framework, test-framework-hunit, text
     , utf8-string
     }:
     mkDerivation {
       pname = "wl-pprint-extras";
       version = "3.5.0.4";
       sha256 = "0mvg5vff574xvrdbdwnyy71kxv0cp0q5vv8fb12fbgydnvsy3mbl";
       libraryHaskellDepends = [
         base containers nats semigroupoids semigroups text utf8-string
       ];
       testHaskellDepends = [
         base HUnit test-framework test-framework-hunit
       ];
       homepage = "http://github.com/ekmett/wl-pprint-extras/";
       description = "A free monad based on the Wadler/Leijen pretty printer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wl-pprint-terminfo" = callPackage
    ({ mkDerivation, base, bytestring, containers, nats, semigroups
     , terminfo, text, transformers, wl-pprint-extras
     }:
     mkDerivation {
       pname = "wl-pprint-terminfo";
       version = "3.7.1.3";
       sha256 = "19z5cr1wqc3xcy39dswx78b6fpxhb41798zkiwkmb97nnvzwbdmv";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base bytestring containers nats semigroups terminfo text
         transformers wl-pprint-extras
       ];
       homepage = "http://github.com/ekmett/wl-pprint-terminfo/";
       description = "A color pretty printer with terminfo support";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wl-pprint-text" = callPackage
    ({ mkDerivation, base, text }:
     mkDerivation {
       pname = "wl-pprint-text";
       version = "1.1.0.4";
       sha256 = "1xgizzimfw17mpmw2afvmnvyag976j8ggn7k5r564rkw9f0m6bgz";
       libraryHaskellDepends = [ base text ];
       description = "A Wadler/Leijen Pretty Printer for Text values";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "word8" = callPackage
    ({ mkDerivation, base, bytestring, criterion, hspec }:
     mkDerivation {
       pname = "word8";
       version = "0.1.2";
       sha256 = "1pbn8ra3qhwvw07p375cdmp7jzlg07hgdcr4cpscz3h7b9sy7fiw";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base hspec ];
       benchmarkHaskellDepends = [ base bytestring criterion ];
       description = "Word8 library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wordpass" = callPackage
    ({ mkDerivation, base, containers, deepseq, directory, filepath
     , hflags, random-fu, random-source, text, unix-compat, vector
     }:
     mkDerivation {
       pname = "wordpass";
       version = "1.0.0.3";
       sha256 = "1nbgzrc3g3kcc8462sqskdywk0n1m54810r0jsw8ip2xllvkxx9b";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base containers deepseq directory filepath random-fu random-source
         text unix-compat vector
       ];
       executableHaskellDepends = [
         base containers deepseq directory filepath hflags random-fu
         random-source text unix-compat vector
       ];
       homepage = "https://github.com/mgajda/wordpass";
       description = "Dictionary-based password generator";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wrap" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "wrap";
       version = "0.0.0";
       sha256 = "03pmfwwx2ykjglzrc4k09q2lv8piq107j32dg0r1aadj2ysc9fzq";
       libraryHaskellDepends = [ base ];
       description = "Wrap a function's return value with another function";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wreq" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, aeson-qq, attoparsec, base
     , base16-bytestring, base64-bytestring, byteable, bytestring
     , case-insensitive, containers, cryptohash, directory, doctest
     , exceptions, filepath, ghc-prim, hashable, http-client
     , http-client-tls, http-types, HUnit, lens, lens-aeson, mime-types
     , network-info, old-locale, PSQueue, QuickCheck, snap-core
     , snap-server, template-haskell, temporary, test-framework
     , test-framework-hunit, test-framework-quickcheck2, text, time
     , transformers, unix-compat, unordered-containers, uuid
     }:
     mkDerivation {
       pname = "wreq";
       version = "0.3.0.1";
       sha256 = "13apqr8sfx2vi794ldqprmgqch79sqli9scgyk3k41v7wcwqaal4";
       revision = "2";
       editedCabalFile = "1qvdc41r1957qaba487ym3f6w1fq2mph7n3ymhmvvcn3w60w9cc2";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson attoparsec base base16-bytestring byteable bytestring
         case-insensitive containers cryptohash exceptions ghc-prim hashable
         http-client http-client-tls http-types lens lens-aeson mime-types
         old-locale PSQueue template-haskell text time unordered-containers
       ];
       testHaskellDepends = [
         aeson aeson-pretty aeson-qq base base64-bytestring bytestring
         case-insensitive containers directory doctest filepath hashable
         http-client http-types HUnit lens lens-aeson network-info
         QuickCheck snap-core snap-server temporary test-framework
         test-framework-hunit test-framework-quickcheck2 text transformers
         unix-compat uuid
       ];
       doCheck = false;
       homepage = "http://www.serpentine.com/wreq";
       description = "An easy-to-use HTTP client library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "x509" = callPackage
    ({ mkDerivation, asn1-encoding, asn1-parse, asn1-types, base
     , bytestring, containers, crypto-pubkey-types, cryptohash
     , directory, filepath, hourglass, mtl, pem, process, tasty
     , tasty-quickcheck
     }:
     mkDerivation {
       pname = "x509";
       version = "1.5.0.1";
       sha256 = "03gj4190f0ql1ghn2mri8901xdydhhnwijyfn8lmpjyn7pgpl3ba";
       revision = "1";
       editedCabalFile = "0z8mhdvpxv71iacnry4g56wnrn7k039sn55h655z5sqalkdic6i6";
       libraryHaskellDepends = [
         asn1-encoding asn1-parse asn1-types base bytestring containers
         crypto-pubkey-types cryptohash directory filepath hourglass mtl pem
         process
       ];
       testHaskellDepends = [
         asn1-types base bytestring crypto-pubkey-types hourglass mtl tasty
         tasty-quickcheck
       ];
       homepage = "http://github.com/vincenthz/hs-certificate";
       description = "X509 reader and writer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "x509-store" = callPackage
    ({ mkDerivation, asn1-encoding, asn1-types, base, bytestring
     , containers, crypto-pubkey-types, directory, filepath, mtl, pem
     , process, x509
     }:
     mkDerivation {
       pname = "x509-store";
       version = "1.5.0";
       sha256 = "1w9sqb007s4avjzvrdwq13a4c528h7h2lg3m8cl31syrgznc9ny5";
       libraryHaskellDepends = [
         asn1-encoding asn1-types base bytestring containers
         crypto-pubkey-types directory filepath mtl pem process x509
       ];
       homepage = "http://github.com/vincenthz/hs-certificate";
       description = "X.509 collection accessing and storing methods";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "x509-system" = callPackage
    ({ mkDerivation, base, bytestring, containers, directory, filepath
     , mtl, pem, process, x509, x509-store
     }:
     mkDerivation {
       pname = "x509-system";
       version = "1.5.0";
       sha256 = "159zwg35nq42j1rl0p4x00hdf3iy48hd7kavz0rnpwd2p7ljamr3";
       libraryHaskellDepends = [
         base bytestring containers directory filepath mtl pem process x509
         x509-store
       ];
       homepage = "http://github.com/vincenthz/hs-certificate";
       description = "Handle per-operating-system X.509 accessors and storage";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "x509-validation" = callPackage
    ({ mkDerivation, asn1-encoding, asn1-types, base, byteable
     , bytestring, containers, crypto-pubkey, crypto-pubkey-types
     , cryptohash, data-default-class, directory, filepath, hourglass
     , mtl, network, pem, process, x509, x509-store
     }:
     mkDerivation {
       pname = "x509-validation";
       version = "1.5.1";
       sha256 = "19cp187id9hdlzkr7sbv2sdxqxnpjv0db09hwf3zdqqqxr30mn6x";
       libraryHaskellDepends = [
         asn1-encoding asn1-types base byteable bytestring containers
         crypto-pubkey crypto-pubkey-types cryptohash data-default-class
         directory filepath hourglass mtl network pem process x509
         x509-store
       ];
       homepage = "http://github.com/vincenthz/hs-certificate";
       description = "X.509 Certificate and CRL validation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "xenstore" = callPackage
    ({ mkDerivation, base, bytestring, cereal, mtl, network }:
     mkDerivation {
       pname = "xenstore";
       version = "0.1.1";
       sha256 = "0x788lpkkxg7ds1bgnw0kvkf6pkfbknn7jy0njhz85k7rv4kidf2";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base bytestring cereal mtl network ];
       description = "Xenstore client access";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "xml" = callPackage
    ({ mkDerivation, base, bytestring, text }:
     mkDerivation {
       pname = "xml";
       version = "1.3.14";
       sha256 = "0g814lj7vaxvib2g3r734221k80k7ap9czv9hinifn8syals3l9j";
       libraryHaskellDepends = [ base bytestring text ];
       homepage = "http://code.galois.com";
       description = "A simple XML library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "xml-conduit" = callPackage
    ({ mkDerivation, attoparsec, base, blaze-builder, blaze-html
     , blaze-markup, bytestring, conduit, conduit-extra, containers
     , data-default, deepseq, hspec, HUnit, monad-control, resourcet
     , system-filepath, text, transformers, xml-types
     }:
     mkDerivation {
       pname = "xml-conduit";
       version = "1.2.4";
       sha256 = "1pb9iy95ajy0dxw2f1jh1ymdl4fjlhyan59hbmnj09g1q1h51dpq";
       revision = "1";
       editedCabalFile = "1b29whfhk5lvq7p5hjqn68wnzpkl6dynasdsrqw2nc0im2pjhza3";
       libraryHaskellDepends = [
         attoparsec base blaze-builder blaze-html blaze-markup bytestring
         conduit conduit-extra containers data-default deepseq monad-control
         resourcet system-filepath text transformers xml-types
       ];
       testHaskellDepends = [
         base blaze-markup bytestring conduit containers hspec HUnit
         resourcet text transformers xml-types
       ];
       homepage = "http://github.com/snoyberg/xml";
       description = "Pure-Haskell utilities for dealing with XML with the conduit package";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "xml-conduit-writer" = callPackage
    ({ mkDerivation, base, containers, dlist, mtl, text, xml-conduit
     , xml-types
     }:
     mkDerivation {
       pname = "xml-conduit-writer";
       version = "0.1.1.1";
       sha256 = "1ibiqxjr63gb3v0h9fdfzm205sqjixb5vm5y6413yn4scbf7qm2b";
       libraryHaskellDepends = [
         base containers dlist mtl text xml-conduit xml-types
       ];
       testHaskellDepends = [ base text ];
       homepage = "https://bitbucket.org/dpwiz/xml-conduit-writer";
       description = "Warm and fuzzy creation of XML documents";
       license = stdenv.lib.licenses.mit;
     }) {};
  "xml-hamlet" = callPackage
    ({ mkDerivation, base, containers, hspec, HUnit, parsec
     , shakespeare, template-haskell, text, xml-conduit
     }:
     mkDerivation {
       pname = "xml-hamlet";
       version = "0.4.0.10";
       sha256 = "0bvgd3xbc25d2zdmpzq1rxhr7rkglf0zpc8wy75j2yqv6ymylb6v";
       libraryHaskellDepends = [
         base containers parsec shakespeare template-haskell text
         xml-conduit
       ];
       testHaskellDepends = [
         base containers hspec HUnit parsec shakespeare template-haskell
         text xml-conduit
       ];
       homepage = "http://www.yesodweb.com/";
       description = "Hamlet-style quasiquoter for XML content";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "xml-to-json" = callPackage
    ({ mkDerivation, aeson, base, bytestring, containers, curl
     , hashable, hxt, hxt-curl, hxt-expat, hxt-tagsoup, regex-posix
     , tagsoup, text, unordered-containers, vector
     }:
     mkDerivation {
       pname = "xml-to-json";
       version = "2.0.1";
       sha256 = "0brfdlarr4yyfsfawkfjdbk4z3lvi9ihkhvqh5ws2ll0h80ja6md";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base bytestring containers curl hashable hxt hxt-curl
         hxt-expat hxt-tagsoup regex-posix tagsoup text unordered-containers
         vector
       ];
       executableHaskellDepends = [ base ];
       homepage = "https://github.com/sinelaw/xml-to-json";
       description = "Library and command line tool for converting XML files to json";
       license = stdenv.lib.licenses.mit;
     }) {};
  "xml-to-json-fast" = callPackage
    ({ mkDerivation, base, directory, process, tagsoup, text }:
     mkDerivation {
       pname = "xml-to-json-fast";
       version = "2.0.0";
       sha256 = "0gsn8wdiwmvr7nvxbfj9vpzlxwdh8m9lprx2hxnkrnslmbhjz1fx";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base tagsoup text ];
       executableHaskellDepends = [ base directory process ];
       homepage = "https://github.com/sinelaw/xml-to-json-fast";
       description = "Fast, light converter of xml to json capable of handling huge xml files";
       license = stdenv.lib.licenses.mit;
     }) {};
  "xml-types" = callPackage
    ({ mkDerivation, base, deepseq, text }:
     mkDerivation {
       pname = "xml-types";
       version = "0.3.4";
       sha256 = "1689ijr4xxh4shxxvd51wdkpc535kzv6liqg4m1prag96aq05r8y";
       libraryHaskellDepends = [ base deepseq text ];
       homepage = "https://john-millikin.com/software/haskell-xml/";
       description = "Basic types for representing XML";
       license = stdenv.lib.licenses.mit;
     }) {};
  "xmlgen" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring, containers
     , criterion, filepath, HUnit, hxt, mtl, process, QuickCheck, text
     , unix
     }:
     mkDerivation {
       pname = "xmlgen";
       version = "0.6.2.1";
       sha256 = "1rmsg9wxs0bsj0xpagxrm3fmlqd63b0dfyc21rx9jj76g9za29wh";
       libraryHaskellDepends = [
         base blaze-builder bytestring containers mtl text
       ];
       testHaskellDepends = [
         base bytestring containers filepath HUnit hxt process QuickCheck
         text unix
       ];
       benchmarkHaskellDepends = [ base bytestring criterion text ];
       doCheck = false;
       description = "Fast XML generation library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "xmlhtml" = callPackage
    ({ mkDerivation, base, blaze-builder, blaze-html, blaze-markup
     , bytestring, containers, parsec, text, unordered-containers
     }:
     mkDerivation {
       pname = "xmlhtml";
       version = "0.2.3.4";
       sha256 = "0cv5jqzbq7mi5lcrnaxr5qaprp8biv1jlyzpjhwnwqzla6fqamfr";
       revision = "1";
       editedCabalFile = "1aa3hi46q1f9il9jyyabl33rny0fl3a5prhj9gm3xl5x3fw7xqqp";
       libraryHaskellDepends = [
         base blaze-builder blaze-html blaze-markup bytestring containers
         parsec text unordered-containers
       ];
       description = "XML parser and renderer with HTML 5 quirks mode";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "xss-sanitize" = callPackage
    ({ mkDerivation, attoparsec, base, containers, css-text, hspec
     , HUnit, network-uri, tagsoup, text, utf8-string
     }:
     mkDerivation {
       pname = "xss-sanitize";
       version = "0.3.5.5";
       sha256 = "05qmhd50bdy5z0nvqvrm25ax4i642gv6gkdn678flg6sckshr4s2";
       libraryHaskellDepends = [
         attoparsec base containers css-text network-uri tagsoup text
         utf8-string
       ];
       testHaskellDepends = [
         attoparsec base containers css-text hspec HUnit network-uri tagsoup
         text utf8-string
       ];
       homepage = "http://github.com/yesodweb/haskell-xss-sanitize";
       description = "sanitize untrusted HTML to prevent XSS attacks";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "yackage" = callPackage
    ({ mkDerivation, base, blaze-builder, blaze-html, bytestring, Cabal
     , cmdargs, conduit, containers, directory, http-conduit, http-types
     , shakespeare, tar, text, transformers, unordered-containers
     , vector, wai, warp, yaml, yesod-core, yesod-form, zlib
     }:
     mkDerivation {
       pname = "yackage";
       version = "0.7.0.7";
       sha256 = "168dcl2ham94k0wmf75lgazn6q82yfww5lpl24nhmdr3fwd4p6p1";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         base blaze-builder blaze-html bytestring Cabal cmdargs conduit
         containers directory http-conduit http-types shakespeare tar text
         transformers unordered-containers vector wai warp yaml yesod-core
         yesod-form zlib
       ];
       doHaddock = false;
       homepage = "http://github.com/snoyberg/yackage";
       description = "Personal Hackage replacement for testing new packages";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "yaml" = callPackage
    ({ mkDerivation, aeson, aeson-qq, attoparsec, base, bytestring
     , conduit, containers, directory, enclosed-exceptions, filepath
     , hspec, hspec-expectations, HUnit, libyaml, resourcet, scientific
     , text, transformers, unordered-containers, vector
     }:
     mkDerivation {
       pname = "yaml";
       version = "0.8.11";
       sha256 = "18ara96wca3gnk436i8rarb5smv80aa3ww4lnlrd5w01rp0p171v";
       configureFlags = [ "-fsystem-libyaml" ];
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson attoparsec base bytestring conduit containers directory
         enclosed-exceptions filepath resourcet scientific text transformers
         unordered-containers vector
       ];
       libraryPkgconfigDepends = [ libyaml ];
       executableHaskellDepends = [ aeson base bytestring ];
       testHaskellDepends = [
         aeson aeson-qq base bytestring conduit directory hspec
         hspec-expectations HUnit resourcet text transformers
         unordered-containers vector
       ];
       homepage = "http://github.com/snoyberg/yaml/";
       description = "Support for parsing and rendering YAML documents";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) libyaml;};
  "yarr" = callPackage
    ({ mkDerivation, base, deepseq, fixed-vector, ghc-prim
     , missing-foreign, primitive, template-haskell
     }:
     mkDerivation {
       pname = "yarr";
       version = "1.3.3.3";
       sha256 = "09nr1k0yhm1sh4g741876sf4vi0mgrh7gdq9cbw33hxn6168h547";
       revision = "1";
       editedCabalFile = "11rncsjwa6pz038mqd09n67nc0fg4r9nyyb09h3pipn1cwddw399";
       libraryHaskellDepends = [
         base deepseq fixed-vector ghc-prim missing-foreign primitive
         template-haskell
       ];
       doHaddock = false;
       description = "Yet another array library";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod" = callPackage
    ({ mkDerivation, aeson, base, blaze-html, blaze-markup, bytestring
     , conduit-extra, data-default, directory, fast-logger
     , monad-control, monad-logger, safe, semigroups, shakespeare
     , streaming-commons, template-haskell, text, transformers, unix
     , unordered-containers, wai, wai-extra, wai-logger, warp, yaml
     , yesod-auth, yesod-core, yesod-form, yesod-persistent
     }:
     mkDerivation {
       pname = "yesod";
       version = "1.4.1.5";
       sha256 = "0sr9z3lxnwn5bdfwja97jsya3j0y0i8z5j6mph11bjgjdhv0s5m1";
       libraryHaskellDepends = [
         aeson base blaze-html blaze-markup bytestring conduit-extra
         data-default directory fast-logger monad-control monad-logger safe
         semigroups shakespeare streaming-commons template-haskell text
         transformers unix unordered-containers wai wai-extra wai-logger
         warp yaml yesod-auth yesod-core yesod-form yesod-persistent
       ];
       homepage = "http://www.yesodweb.com/";
       description = "Creation of type-safe, RESTful web applications";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod-auth" = callPackage
    ({ mkDerivation, aeson, authenticate, base, base16-bytestring
     , base64-bytestring, binary, blaze-builder, blaze-html
     , blaze-markup, byteable, bytestring, conduit, conduit-extra
     , containers, cryptohash, data-default, email-validate, file-embed
     , http-client, http-conduit, http-types, lifted-base, mime-mail
     , network-uri, persistent, persistent-template, random, resourcet
     , safe, shakespeare, template-haskell, text, time, transformers
     , unordered-containers, wai, yesod-core, yesod-form
     , yesod-persistent
     }:
     mkDerivation {
       pname = "yesod-auth";
       version = "1.4.4";
       sha256 = "079ny0jdg68kxdp117y1av0d09fhpywbb8v9iyl867vswpb38b08";
       libraryHaskellDepends = [
         aeson authenticate base base16-bytestring base64-bytestring binary
         blaze-builder blaze-html blaze-markup byteable bytestring conduit
         conduit-extra containers cryptohash data-default email-validate
         file-embed http-client http-conduit http-types lifted-base
         mime-mail network-uri persistent persistent-template random
         resourcet safe shakespeare template-haskell text time transformers
         unordered-containers wai yesod-core yesod-form yesod-persistent
       ];
       homepage = "http://www.yesodweb.com/";
       description = "Authentication for Yesod";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod-auth-deskcom" = callPackage
    ({ mkDerivation, aeson, base, base64-bytestring, byteable
     , bytestring, cipher-aes, cprng-aes, crypto-api, crypto-random
     , cryptohash, data-default, http-conduit, http-types
     , template-haskell, text, time, transformers, yesod-auth
     , yesod-core
     }:
     mkDerivation {
       pname = "yesod-auth-deskcom";
       version = "1.4.0";
       sha256 = "17lpkwrfc10rdmvkjg6qmbi7gysjjhqyh7n5d1mxgxhzxzqbi06w";
       libraryHaskellDepends = [
         aeson base base64-bytestring byteable bytestring cipher-aes
         cprng-aes crypto-api crypto-random cryptohash data-default
         http-conduit http-types template-haskell text time transformers
         yesod-auth yesod-core
       ];
       homepage = "https://github.com/prowdsponsor/yesod-auth-deskcom";
       description = "Desk.com remote authentication support for Yesod apps.";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "yesod-auth-fb" = callPackage
    ({ mkDerivation, aeson, base, bytestring, conduit, fb, http-conduit
     , lifted-base, shakespeare, text, time, transformers, wai
     , yesod-auth, yesod-core, yesod-fb
     }:
     mkDerivation {
       pname = "yesod-auth-fb";
       version = "1.6.6";
       sha256 = "00pk5vridic77laydkfhrixfv50ps7f15dxvcd44cn0z8s2d3y74";
       libraryHaskellDepends = [
         aeson base bytestring conduit fb http-conduit lifted-base
         shakespeare text time transformers wai yesod-auth yesod-core
         yesod-fb
       ];
       homepage = "https://github.com/prowdsponsor/yesod-auth-fb";
       description = "Authentication backend for Yesod using Facebook";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "yesod-auth-hashdb" = callPackage
    ({ mkDerivation, base, bytestring, cryptohash, hspec, persistent
     , pwstore-fast, text, yesod-auth, yesod-core, yesod-form
     , yesod-persistent
     }:
     mkDerivation {
       pname = "yesod-auth-hashdb";
       version = "1.4.2.1";
       sha256 = "1gc8049xvzrkqb91fpdrzr54byxag6rkqvb8650q4scpr09vzdpl";
       libraryHaskellDepends = [
         base bytestring cryptohash persistent pwstore-fast text yesod-auth
         yesod-core yesod-form yesod-persistent
       ];
       testHaskellDepends = [ base hspec text ];
       homepage = "https://github.com/paul-rouse/yesod-auth-hashdb";
       description = "Authentication plugin for Yesod";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod-auth-oauth" = callPackage
    ({ mkDerivation, authenticate-oauth, base, bytestring, lifted-base
     , text, transformers, yesod-auth, yesod-core, yesod-form
     }:
     mkDerivation {
       pname = "yesod-auth-oauth";
       version = "1.4.0.1";
       sha256 = "0wy3c271jq7ssvh6fhpi0h92pin5a8f48vmr3qsw8szf4gpw1j69";
       libraryHaskellDepends = [
         authenticate-oauth base bytestring lifted-base text transformers
         yesod-auth yesod-core yesod-form
       ];
       homepage = "http://www.yesodweb.com/";
       description = "OAuth Authentication for Yesod";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "yesod-auth-oauth2" = callPackage
    ({ mkDerivation, aeson, authenticate, base, bytestring, hoauth2
     , http-conduit, http-types, lifted-base, network-uri, text
     , transformers, uuid, yesod-auth, yesod-core, yesod-form
     }:
     mkDerivation {
       pname = "yesod-auth-oauth2";
       version = "0.0.12";
       sha256 = "1n70cnab99ldx4pd9yi7v6lvc7f1psnicmvq7sm8am8p9yhf9bs0";
       libraryHaskellDepends = [
         aeson authenticate base bytestring hoauth2 http-conduit http-types
         lifted-base network-uri text transformers uuid yesod-auth
         yesod-core yesod-form
       ];
       homepage = "http://github.com/scan/yesod-auth-oauth2";
       description = "Library to authenticate with OAuth 2.0 for Yesod web applications.";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "yesod-bin" = callPackage
    ({ mkDerivation, async, attoparsec, base, base64-bytestring
     , blaze-builder, bytestring, Cabal, conduit, conduit-extra
     , containers, data-default-class, directory, file-embed, filepath
     , fsnotify, ghc, ghc-paths, http-client, http-conduit
     , http-reverse-proxy, http-types, lifted-base, network
     , optparse-applicative, parsec, process, project-template
     , resourcet, shakespeare, split, streaming-commons, system-fileio
     , system-filepath, tar, template-haskell, text, time, transformers
     , transformers-compat, unix-compat, unordered-containers, wai
     , wai-extra, warp, warp-tls, yaml, zlib
     }:
     mkDerivation {
       pname = "yesod-bin";
       version = "1.4.7.1";
       sha256 = "080jamya9scyybls3j230rv1mpmxhvskaxd72wxxm5slv8kc6p27";
       revision = "1";
       editedCabalFile = "1gm7l2w02zh40h3rsb9rpmzahlnqscivkjcgx2iq6sq4r9pl7cm4";
       isLibrary = false;
       isExecutable = true;
       enableSeparateDataOutput = true;
       executableHaskellDepends = [
         async attoparsec base base64-bytestring blaze-builder bytestring
         Cabal conduit conduit-extra containers data-default-class directory
         file-embed filepath fsnotify ghc ghc-paths http-client http-conduit
         http-reverse-proxy http-types lifted-base network
         optparse-applicative parsec process project-template resourcet
         shakespeare split streaming-commons system-fileio system-filepath
         tar template-haskell text time transformers transformers-compat
         unix-compat unordered-containers wai wai-extra warp warp-tls yaml
         zlib
       ];
       doHaddock = false;
       homepage = "http://www.yesodweb.com/";
       description = "The yesod helper executable";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod-core" = callPackage
    ({ mkDerivation, aeson, async, auto-update, base, blaze-builder
     , blaze-html, blaze-markup, bytestring, case-insensitive, cereal
     , clientsession, conduit, conduit-extra, containers, cookie
     , criterion, data-default, deepseq, directory, exceptions
     , fast-logger, hspec, hspec-expectations, http-types, HUnit
     , lifted-base, monad-control, monad-logger, mtl, mwc-random
     , network, old-locale, parsec, path-pieces, primitive, QuickCheck
     , random, resourcet, safe, semigroups, shakespeare
     , streaming-commons, template-haskell, text, time, transformers
     , transformers-base, unix-compat, unordered-containers, vector, wai
     , wai-extra, wai-logger, warp, word8
     }:
     mkDerivation {
       pname = "yesod-core";
       version = "1.4.9.1";
       sha256 = "1fqla2cahqr51jgr0l8pl2wq4rai2dq6yky75qjg5a4xrxcdq6sc";
       libraryHaskellDepends = [
         aeson auto-update base blaze-builder blaze-html blaze-markup
         bytestring case-insensitive cereal clientsession conduit
         conduit-extra containers cookie data-default deepseq directory
         exceptions fast-logger http-types lifted-base monad-control
         monad-logger mtl mwc-random old-locale parsec path-pieces primitive
         random resourcet safe semigroups shakespeare template-haskell text
         time transformers transformers-base unix-compat
         unordered-containers vector wai wai-extra wai-logger warp word8
       ];
       testHaskellDepends = [
         async base blaze-builder bytestring clientsession conduit
         conduit-extra containers cookie hspec hspec-expectations http-types
         HUnit lifted-base mwc-random network path-pieces QuickCheck random
         resourcet shakespeare streaming-commons template-haskell text
         transformers wai wai-extra
       ];
       benchmarkHaskellDepends = [
         base blaze-html bytestring criterion text transformers
       ];
       homepage = "http://www.yesodweb.com/";
       description = "Creation of type-safe, RESTful web applications";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod-eventsource" = callPackage
    ({ mkDerivation, base, blaze-builder, conduit, transformers, wai
     , wai-eventsource, wai-extra, yesod-core
     }:
     mkDerivation {
       pname = "yesod-eventsource";
       version = "1.4.0.1";
       sha256 = "0j2x2zfr1s5a8m22kf27r6bdw041vmgf9b4v2ylc89n4m0f0dv55";
       libraryHaskellDepends = [
         base blaze-builder conduit transformers wai wai-eventsource
         wai-extra yesod-core
       ];
       homepage = "http://www.yesodweb.com/";
       description = "Server-sent events support for Yesod apps";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod-fay" = callPackage
    ({ mkDerivation, aeson, base, bytestring, data-default, directory
     , fay, fay-dom, monad-loops, process, pureMD5, shakespeare
     , system-fileio, system-filepath, template-haskell, text
     , transformers, utf8-string, yesod-core, yesod-form, yesod-static
     }:
     mkDerivation {
       pname = "yesod-fay";
       version = "0.7.1";
       sha256 = "0g17n7aqr1zhlh21dkl13rhac34nq8f77mj85kll6vgcs8nfidhl";
       libraryHaskellDepends = [
         aeson base bytestring data-default directory fay fay-dom
         monad-loops process pureMD5 shakespeare system-fileio
         system-filepath template-haskell text transformers utf8-string
         yesod-core yesod-form yesod-static
       ];
       homepage = "https://github.com/fpco/yesod-fay";
       description = "Utilities for using the Fay Haskell-to-JS compiler with Yesod";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod-fb" = callPackage
    ({ mkDerivation, aeson, base, bytestring, conduit, crypto-api, fb
     , http-conduit, text, wai, yesod-core
     }:
     mkDerivation {
       pname = "yesod-fb";
       version = "0.3.4";
       sha256 = "09cymp9y21vawbgr6gcj41s5xkq6j22mvk0vgl3pnyq382j33rmp";
       libraryHaskellDepends = [
         aeson base bytestring conduit crypto-api fb http-conduit text wai
         yesod-core
       ];
       homepage = "https://github.com/prowdsponsor/yesod-fb";
       description = "Useful glue functions between the fb library and Yesod";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "yesod-form" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, blaze-builder, blaze-html
     , blaze-markup, byteable, bytestring, containers, data-default
     , email-validate, hspec, network-uri, persistent, resourcet
     , semigroups, shakespeare, template-haskell, text, time
     , transformers, wai, xss-sanitize, yesod-core, yesod-persistent
     }:
     mkDerivation {
       pname = "yesod-form";
       version = "1.4.4.1";
       sha256 = "14v4vhrbca0281im2bnvk36bm7i1r8yanxhv7lvrq5y5nqbc5bl3";
       libraryHaskellDepends = [
         aeson attoparsec base blaze-builder blaze-html blaze-markup
         byteable bytestring containers data-default email-validate
         network-uri persistent resourcet semigroups shakespeare
         template-haskell text time transformers wai xss-sanitize yesod-core
         yesod-persistent
       ];
       testHaskellDepends = [ base hspec text time ];
       homepage = "http://www.yesodweb.com/";
       description = "Form handling support for Yesod Web Framework";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod-gitrepo" = callPackage
    ({ mkDerivation, base, directory, enclosed-exceptions, http-types
     , lifted-base, process, system-filepath, temporary, text, wai
     , yesod-core
     }:
     mkDerivation {
       pname = "yesod-gitrepo";
       version = "0.1.1.0";
       sha256 = "1bf4rhf6i4cciyllkh6zil29i7yi5ph0nkpcqmhbihk4i7xm05zj";
       libraryHaskellDepends = [
         base directory enclosed-exceptions http-types lifted-base process
         system-filepath temporary text wai yesod-core
       ];
       homepage = "https://github.com/snoyberg/yesod-gitrepo";
       description = "Host content provided by a Git repo";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod-newsfeed" = callPackage
    ({ mkDerivation, base, blaze-html, blaze-markup, bytestring
     , containers, shakespeare, text, time, xml-conduit, yesod-core
     }:
     mkDerivation {
       pname = "yesod-newsfeed";
       version = "1.4.0.1";
       sha256 = "02ydkri23vrm7mak2b1ybfhkdgc2dmv9vq3ki2d7sd005sp3zdly";
       libraryHaskellDepends = [
         base blaze-html blaze-markup bytestring containers shakespeare text
         time xml-conduit yesod-core
       ];
       homepage = "http://www.yesodweb.com/";
       description = "Helper functions and data types for producing News feeds";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod-persistent" = callPackage
    ({ mkDerivation, base, blaze-builder, conduit, hspec, persistent
     , persistent-sqlite, persistent-template, resource-pool, resourcet
     , text, transformers, wai-extra, yesod-core
     }:
     mkDerivation {
       pname = "yesod-persistent";
       version = "1.4.0.2";
       sha256 = "06qzgq0mb7k0h8q6lh47l0mzx91xn4ba07nmn22vsfvjfdji6lib";
       libraryHaskellDepends = [
         base blaze-builder conduit persistent persistent-template
         resource-pool resourcet transformers yesod-core
       ];
       testHaskellDepends = [
         base blaze-builder conduit hspec persistent persistent-sqlite text
         wai-extra yesod-core
       ];
       homepage = "http://www.yesodweb.com/";
       description = "Some helpers for using Persistent from Yesod";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod-sitemap" = callPackage
    ({ mkDerivation, base, conduit, containers, data-default, text
     , time, xml-conduit, xml-types, yesod-core
     }:
     mkDerivation {
       pname = "yesod-sitemap";
       version = "1.4.0.1";
       sha256 = "0ri67r3yjngn4m2lj071n2v3r9w7pvsl24rayf41k7w9j3ylk100";
       libraryHaskellDepends = [
         base conduit containers data-default text time xml-conduit
         xml-types yesod-core
       ];
       homepage = "http://www.yesodweb.com/";
       description = "Generate XML sitemaps";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod-static" = callPackage
    ({ mkDerivation, async, attoparsec, base, base64-bytestring
     , blaze-builder, byteable, bytestring, conduit, conduit-extra
     , containers, cryptohash, cryptohash-conduit, css-text
     , data-default, directory, file-embed, filepath, hashable, hjsmin
     , hspec, http-types, HUnit, mime-types, old-time, process
     , resourcet, system-fileio, system-filepath, template-haskell, text
     , transformers, unix-compat, unordered-containers, wai
     , wai-app-static, wai-extra, yesod-core, yesod-test
     }:
     mkDerivation {
       pname = "yesod-static";
       version = "1.4.0.4";
       sha256 = "1z01m3rvar6djxqcc2hyi53yfcpqwpi45wffpjnfp8hsr1x0zaqk";
       revision = "1";
       editedCabalFile = "1iick4vkr84m2gsg2p170q2j40zihba8k82ispb2ymgdpr92cf74";
       libraryHaskellDepends = [
         async attoparsec base base64-bytestring blaze-builder byteable
         bytestring conduit conduit-extra containers cryptohash
         cryptohash-conduit css-text data-default directory file-embed
         filepath hashable hjsmin http-types mime-types old-time process
         resourcet system-fileio system-filepath template-haskell text
         transformers unix-compat unordered-containers wai wai-app-static
         yesod-core
       ];
       testHaskellDepends = [
         async base base64-bytestring byteable bytestring conduit
         conduit-extra containers cryptohash cryptohash-conduit data-default
         directory file-embed filepath hjsmin hspec http-types HUnit
         mime-types old-time process resourcet system-fileio system-filepath
         template-haskell text transformers unix-compat unordered-containers
         wai wai-app-static wai-extra yesod-core yesod-test
       ];
       homepage = "http://www.yesodweb.com/";
       description = "Static file serving subsite for Yesod Web Framework";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod-test" = callPackage
    ({ mkDerivation, attoparsec, base, blaze-builder, blaze-html
     , blaze-markup, bytestring, case-insensitive, containers, cookie
     , hspec, hspec-core, html-conduit, http-types, HUnit, monad-control
     , network, persistent, text, time, transformers, wai, wai-extra
     , xml-conduit, xml-types, yesod-core, yesod-form
     }:
     mkDerivation {
       pname = "yesod-test";
       version = "1.4.3.1";
       sha256 = "150kzp8h9wl3c1diz6h6m62qd6w0qz4drgrm095amb0sndrh37m2";
       libraryHaskellDepends = [
         attoparsec base blaze-builder blaze-html blaze-markup bytestring
         case-insensitive containers cookie hspec-core html-conduit
         http-types HUnit monad-control network persistent text time
         transformers wai wai-extra xml-conduit xml-types yesod-core
       ];
       testHaskellDepends = [
         base bytestring containers hspec html-conduit HUnit text wai
         xml-conduit yesod-core yesod-form
       ];
       homepage = "http://www.yesodweb.com";
       description = "integration testing for WAI/Yesod Applications";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod-text-markdown" = callPackage
    ({ mkDerivation, aeson, base, markdown, persistent, shakespeare
     , text, yesod-core, yesod-form, yesod-persistent
     }:
     mkDerivation {
       pname = "yesod-text-markdown";
       version = "0.1.7";
       sha256 = "133zv2f8240qbygpza39m28k4hfy2aiqmr6ds8ihwbb8dz98d5rr";
       libraryHaskellDepends = [
         aeson base markdown persistent shakespeare text yesod-core
         yesod-form yesod-persistent
       ];
       description = "Yesod support for Text.Markdown.";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "yesod-websockets" = callPackage
    ({ mkDerivation, async, base, conduit, monad-control, transformers
     , wai, wai-websockets, websockets, yesod-core
     }:
     mkDerivation {
       pname = "yesod-websockets";
       version = "0.2.1.1";
       sha256 = "0ksmyag5h5i78jb7bdvsvq0wkyb82k8i4y5d2m6czvhf3i1zw6da";
       libraryHaskellDepends = [
         async base conduit monad-control transformers wai wai-websockets
         websockets yesod-core
       ];
       homepage = "https://github.com/yesodweb/yesod";
       description = "WebSockets support for Yesod";
       license = stdenv.lib.licenses.mit;
     }) {};
  "zeromq4-haskell" = callPackage
    ({ mkDerivation, async, base, bytestring, containers, exceptions
     , QuickCheck, semigroups, tasty, tasty-hunit, tasty-quickcheck
     , transformers, zeromq
     }:
     mkDerivation {
       pname = "zeromq4-haskell";
       version = "0.6.3";
       sha256 = "0yrwqxm208n9k76i9aby5hiv55kd1p27pq6hyry5ngw95fh95p67";
       libraryHaskellDepends = [
         async base bytestring containers exceptions semigroups transformers
       ];
       libraryPkgconfigDepends = [ zeromq ];
       testHaskellDepends = [
         async base bytestring QuickCheck tasty tasty-hunit tasty-quickcheck
       ];
       homepage = "http://github.com/twittner/zeromq-haskell/";
       description = "Bindings to ZeroMQ 4.x";
       license = stdenv.lib.licenses.mit;
     }) {inherit (pkgs) zeromq;};
  "zip-archive" = callPackage
    ({ mkDerivation, array, base, binary, bytestring, containers
     , digest, directory, filepath, HUnit, mtl, old-time, pretty
     , process, text, time, unix, zip, zlib
     }:
     mkDerivation {
       pname = "zip-archive";
       version = "0.2.3.7";
       sha256 = "169nkxr5zlbymiz1ydlhlqr66vqiycmg85xh559phpkr64w3nqj1";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         array base binary bytestring containers digest directory filepath
         mtl old-time pretty text time unix zlib
       ];
       executableHaskellDepends = [ base bytestring directory ];
       testHaskellDepends = [
         base bytestring directory HUnit old-time process time
       ];
       testToolDepends = [ zip ];
       homepage = "http://github.com/jgm/zip-archive";
       description = "Library for creating and modifying zip archives";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) zip;};
  "zlib" = callPackage
    ({ mkDerivation, base, bytestring, zlib }:
     mkDerivation {
       pname = "zlib";
       version = "0.5.4.2";
       sha256 = "15hhsk7z3gvm7sz2ic2z1ca5c6rpsln2rr391mdbm1bxlzc1gmkm";
       libraryHaskellDepends = [ base bytestring ];
       librarySystemDepends = [ zlib ];
       description = "Compression and decompression in the gzip and zlib formats";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) zlib;};
  "zlib-bindings" = callPackage
    ({ mkDerivation, base, bytestring, hspec, QuickCheck, zlib }:
     mkDerivation {
       pname = "zlib-bindings";
       version = "0.1.1.5";
       sha256 = "02ciywlz4wdlymgc3jsnicz9kzvymjw1www2163gxidnz4wb8fy8";
       revision = "2";
       editedCabalFile = "0fq49694gqkab8m0vq4i879blswczwd66n7xh4r4gwiahf0ryvqc";
       libraryHaskellDepends = [ base bytestring zlib ];
       testHaskellDepends = [ base bytestring hspec QuickCheck zlib ];
       homepage = "http://github.com/snapframework/zlib-bindings";
       description = "Low-level bindings to the zlib package";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "zlib-enum" = callPackage
    ({ mkDerivation, base, bytestring, enumerator, transformers
     , zlib-bindings
     }:
     mkDerivation {
       pname = "zlib-enum";
       version = "0.2.3.1";
       sha256 = "1nfczminxafzk69ry1sqkj1ha0jlv3l9ak10yk205snfhpmcjgg4";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring enumerator transformers zlib-bindings
       ];
       homepage = "http://github.com/maltem/zlib-enum";
       description = "Enumerator interface for zlib compression";
       license = stdenv.lib.licenses.mit;
     }) {};
  "zlib-lens" = callPackage
    ({ mkDerivation, base, bytestring, profunctors, zlib }:
     mkDerivation {
       pname = "zlib-lens";
       version = "0.1.1.2";
       sha256 = "13zfh0639881nfxibl501f1b3ci9pjvhvdid2l5sf2na8kmpzr61";
       revision = "1";
       editedCabalFile = "1vdpqwjay045f1lpdcn01cn1rgbs06c9d6jizdsd6r9nbbcrdm9c";
       libraryHaskellDepends = [ base bytestring profunctors zlib ];
       homepage = "http://lens.github.io/";
       description = "Lenses for zlib";
       license = stdenv.lib.licenses.bsd3;
     }) {};

}
