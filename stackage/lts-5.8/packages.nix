# Generated by stackage2nix 0.6.1 from "/nix/store/jwic59nw202khsy06b5hy9irq3zipzb8-stackage-lts/lts-5.8.yaml"
{ pkgs, stdenv, callPackage }:

self: {
  "AC-Vector" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "AC-Vector";
       version = "2.3.2";
       sha256 = "04ahf6ldfhvzbml9xd6yplygn8ih7b8zz7cw03hkr053g5kzylay";
       libraryHaskellDepends = [ base ];
       description = "Efficient geometric vectors and transformations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Agda" = callPackage
    ({ mkDerivation, alex, array, base, binary, boxes, bytestring
     , containers, cpphs, data-hash, deepseq, directory, edit-distance
     , emacs, equivalence, filepath, geniplate-mirror, happy, hashable
     , hashtables, haskeline, haskell-src-exts, mtl, parallel, pretty
     , process, QuickCheck, strict, template-haskell, text, time
     , transformers, transformers-compat, unordered-containers, xhtml
     , zlib
     }:
     mkDerivation {
       pname = "Agda";
       version = "2.4.2.5";
       sha256 = "1vk7zdnmg2qrdpjr4kyyk1n04q8l48nkf6qrj9fp6fyrfaimi5lm";
       revision = "2";
       editedCabalFile = "059mfmi63lcg4sf42l2ly74f3f0m3ps322k5fyqdx4ldmv7qcxww";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         array base binary boxes bytestring containers data-hash deepseq
         directory edit-distance equivalence filepath geniplate-mirror
         hashable hashtables haskeline haskell-src-exts mtl parallel pretty
         process QuickCheck strict template-haskell text time transformers
         transformers-compat unordered-containers xhtml zlib
       ];
       libraryToolDepends = [ alex cpphs happy ];
       executableHaskellDepends = [ base directory filepath process ];
       executableToolDepends = [ emacs ];
       postInstall = ''
         $out/bin/agda -c --no-main $(find $data/share -name Primitive.agda)
         $out/bin/agda-mode compile
       '';
       homepage = "http://wiki.portal.chalmers.se/agda/";
       description = "A dependently typed functional programming language and proof assistant";
       license = "unknown";
     }) {inherit (pkgs) emacs;};
  "BlastHTTP" = callPackage
    ({ mkDerivation, base, biocore, biofasta, blastxml, bytestring
     , conduit, HTTP, http-conduit, hxt, mtl, network, transformers
     }:
     mkDerivation {
       pname = "BlastHTTP";
       version = "1.2.0";
       sha256 = "0vhnwjgamc1zry8w7m6jb7ambz3lqqr00j05xymzwcapgwg8v9b5";
       revision = "1";
       editedCabalFile = "1flvyvkichr69zswzi2d9lqq1rlfvgasihbfp52mjb2ds056axkh";
       libraryHaskellDepends = [
         base biocore biofasta blastxml bytestring conduit HTTP http-conduit
         hxt mtl network transformers
       ];
       homepage = "https://github.com/eggzilla/BlastHTTP";
       description = "Libary to interface with the NCBI blast REST interface";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "BlogLiterately" = callPackage
    ({ mkDerivation, base, blaze-html, bool-extras, bytestring, cmdargs
     , containers, data-default, directory, filepath, HaXml, haxr
     , highlighting-kate, hscolour, lens, mtl, pandoc, pandoc-citeproc
     , pandoc-types, parsec, process, split, strict, temporary
     , transformers
     }:
     mkDerivation {
       pname = "BlogLiterately";
       version = "0.8.1.5";
       sha256 = "1sqsn9nd128m6zsww3zwvvazrfs9v7r54vkmp4f3j7dsmxbclpfp";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base blaze-html bool-extras bytestring cmdargs containers
         data-default directory filepath HaXml haxr highlighting-kate
         hscolour lens mtl pandoc pandoc-citeproc pandoc-types parsec
         process split strict temporary transformers
       ];
       executableHaskellDepends = [ base cmdargs ];
       homepage = "http://byorgey.wordpress.com/blogliterately/";
       description = "A tool for posting Haskelly articles to blogs";
       license = "GPL";
     }) {};
  "BlogLiterately-diagrams" = callPackage
    ({ mkDerivation, base, BlogLiterately, containers, diagrams-builder
     , diagrams-lib, diagrams-rasterific, directory, filepath
     , JuicyPixels, pandoc, safe
     }:
     mkDerivation {
       pname = "BlogLiterately-diagrams";
       version = "0.2.0.2";
       sha256 = "06n1ajrg22diyq5dxjqwy66dxvfqqfh0mv0523nf29ympdng5iwy";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base BlogLiterately containers diagrams-builder diagrams-lib
         diagrams-rasterific directory filepath JuicyPixels pandoc safe
       ];
       executableHaskellDepends = [ base BlogLiterately ];
       description = "Include images in blog posts with inline diagrams code";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Boolean" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "Boolean";
       version = "0.2.3";
       sha256 = "1lsm06y7hgjp9qmlr6csf24x3wgna7sbf8dgh6sfl2rhs7fn8kgn";
       libraryHaskellDepends = [ base ];
       description = "Generalized booleans and numbers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "BoundedChan" = callPackage
    ({ mkDerivation, array, base }:
     mkDerivation {
       pname = "BoundedChan";
       version = "1.0.3.0";
       sha256 = "0vf4mlw08n056g5256cf46m5xsijng5gvjx7ccm4r132gznyl72k";
       libraryHaskellDepends = [ array base ];
       description = "Implementation of bounded channels";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Cabal" = callPackage
    ({ mkDerivation, array, base, binary, bytestring, containers
     , deepseq, directory, filepath, pretty, process, time, unix
     }:
     mkDerivation {
       pname = "Cabal";
       version = "1.22.8.0";
       sha256 = "0km3h156fy2wd5pv23cgvvgp7ifwh6pkfarsxn3hyidnxkfs4hia";
       libraryHaskellDepends = [
         array base binary bytestring containers deepseq directory filepath
         pretty process time unix
       ];
       doCheck = false;
       homepage = "http://www.haskell.org/cabal/";
       description = "A framework for packaging Haskell software";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Cabal-ide-backend" = callPackage
    ({ mkDerivation, array, base, binary, bytestring, containers
     , deepseq, directory, filepath, pretty, process, time, unix
     }:
     mkDerivation {
       pname = "Cabal-ide-backend";
       version = "1.23.0.0";
       sha256 = "07s9gkq2d4sz8nrjayrnb3gbjm58sp7gfl3hnl8n1gsxsfbl2cgw";
       libraryHaskellDepends = [
         array base binary bytestring containers deepseq directory filepath
         pretty process time unix
       ];
       doHaddock = false;
       doCheck = false;
       homepage = "http://www.haskell.org/cabal/";
       description = "A framework for packaging Haskell software";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Chart" = callPackage
    ({ mkDerivation, array, base, colour, data-default-class, lens, mtl
     , old-locale, operational, time, vector
     }:
     mkDerivation {
       pname = "Chart";
       version = "1.5.4";
       sha256 = "1vgdlpsd9q0vsppfa56vi8lcdig7gmss50apar1m6zrnqskn1i6j";
       libraryHaskellDepends = [
         array base colour data-default-class lens mtl old-locale
         operational time vector
       ];
       homepage = "https://github.com/timbod7/haskell-chart/wiki";
       description = "A library for generating 2D Charts and Plots";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Chart-cairo" = callPackage
    ({ mkDerivation, array, base, cairo, Chart, colour
     , data-default-class, lens, mtl, old-locale, operational, time
     }:
     mkDerivation {
       pname = "Chart-cairo";
       version = "1.5.4";
       sha256 = "0i5wphbnmp6j589452h44gyy82rnhyipd73d7pjq0rncxpmgph7m";
       libraryHaskellDepends = [
         array base cairo Chart colour data-default-class lens mtl
         old-locale operational time
       ];
       homepage = "https://github.com/timbod7/haskell-chart/wiki";
       description = "Cairo backend for Charts";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ChasingBottoms" = callPackage
    ({ mkDerivation, array, base, containers, mtl, QuickCheck, random
     , syb
     }:
     mkDerivation {
       pname = "ChasingBottoms";
       version = "1.3.0.14";
       sha256 = "0jkh171hca18h2yfclzp2jpy6c2z8ixg3nkgrrdd4n41knq9d8m4";
       libraryHaskellDepends = [
         base containers mtl QuickCheck random syb
       ];
       testHaskellDepends = [
         array base containers mtl QuickCheck random syb
       ];
       description = "For testing partial and infinite values";
       license = stdenv.lib.licenses.mit;
     }) {};
  "ClustalParser" = callPackage
    ({ mkDerivation, base, cmdargs, either-unwrap, hspec, parsec
     , vector
     }:
     mkDerivation {
       pname = "ClustalParser";
       version = "1.1.3";
       sha256 = "1xblyxmwbhmfkm2d2a87qnryk6mg5n1zarzr9d3xjh9qx3mbbclb";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base parsec vector ];
       executableHaskellDepends = [ base cmdargs either-unwrap ];
       testHaskellDepends = [ base hspec parsec ];
       description = "Libary for parsing Clustal tools output";
       license = "GPL";
     }) {};
  "ConfigFile" = callPackage
    ({ mkDerivation, base, containers, MissingH, mtl, parsec }:
     mkDerivation {
       pname = "ConfigFile";
       version = "1.1.4";
       sha256 = "057mw146bip9wzs7j4b5xr1x24d8w0kr4i3inri5m57jkwspn25f";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base containers MissingH mtl parsec ];
       homepage = "http://software.complete.org/configfile";
       description = "Configuration file reading & writing";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "DAV" = callPackage
    ({ mkDerivation, base, bytestring, case-insensitive, containers
     , data-default, exceptions, http-client, http-client-tls
     , http-types, lens, mtl, mtl-compat, network, network-uri
     , optparse-applicative, transformers, transformers-base
     , transformers-compat, utf8-string, xml-conduit, xml-hamlet
     }:
     mkDerivation {
       pname = "DAV";
       version = "1.2";
       sha256 = "0imp0ghizmz66hgcrnic9wvjbw6r8mffprw9z330fhnd2zpwh1qs";
       revision = "1";
       editedCabalFile = "1fv6q8dayvqg1qjc1dlvy4lzg22lrynaj6bsg75s5dk9nfal023c";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring case-insensitive containers data-default exceptions
         http-client http-client-tls http-types lens mtl mtl-compat
         transformers transformers-base transformers-compat utf8-string
         xml-conduit xml-hamlet
       ];
       executableHaskellDepends = [
         base bytestring case-insensitive containers data-default exceptions
         http-client http-client-tls http-types lens mtl mtl-compat network
         network-uri optparse-applicative transformers transformers-base
         transformers-compat utf8-string xml-conduit xml-hamlet
       ];
       homepage = "http://floss.scru.org/hDAV";
       description = "RFC 4918 WebDAV support";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "DRBG" = callPackage
    ({ mkDerivation, base, binary, bytestring, cereal, cipher-aes128
     , crypto-api, crypto-api-tests, cryptohash-cryptoapi, entropy
     , HUnit, mtl, parallel, prettyclass, QuickCheck, tagged
     , test-framework, test-framework-hunit
     }:
     mkDerivation {
       pname = "DRBG";
       version = "0.5.5";
       sha256 = "1z9vqc1nw0mf2sqgddcipmlkz6mckq9wnrzqqdy3rj3c90135pr1";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base bytestring cereal cipher-aes128 crypto-api
         cryptohash-cryptoapi entropy mtl parallel prettyclass tagged
       ];
       testHaskellDepends = [
         base binary bytestring cereal cipher-aes128 crypto-api
         crypto-api-tests cryptohash-cryptoapi entropy HUnit mtl parallel
         prettyclass QuickCheck tagged test-framework test-framework-hunit
       ];
       doCheck = false;
       description = "Deterministic random bit generator (aka RNG, PRNG) based HMACs, Hashes, and Ciphers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Decimal" = callPackage
    ({ mkDerivation, base, deepseq, HUnit, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "Decimal";
       version = "0.4.2";
       sha256 = "0qa2z2lq1hrvakhyhj624mg8sd05ikhb66zwpa6x9vcyji93dxf5";
       libraryHaskellDepends = [ base deepseq ];
       testHaskellDepends = [
         base deepseq HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       homepage = "https://github.com/PaulJohnson/Haskell-Decimal";
       description = "Decimal numbers with variable precision";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Diff" = callPackage
    ({ mkDerivation, array, base, pretty }:
     mkDerivation {
       pname = "Diff";
       version = "0.3.2";
       sha256 = "13iqqmpadcm7fvqwbfrz94w030rvjh66w2bdls1253128ac2n0vz";
       revision = "1";
       editedCabalFile = "0a0k6v2h3a17idvxz61qgjz31hd4zaapjhvk4vzsng15rdmrzaw6";
       libraryHaskellDepends = [ array base pretty ];
       description = "O(ND) diff algorithm in haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Earley" = callPackage
    ({ mkDerivation, base, criterion, deepseq, ListLike, parsec, tasty
     , tasty-hunit, tasty-quickcheck, unordered-containers
     }:
     mkDerivation {
       pname = "Earley";
       version = "0.10.1.0";
       sha256 = "0zl8sjvkq9fwnnpfqrj78li3v8raraqj1kksazdkf3ha44g5q359";
       revision = "2";
       editedCabalFile = "0nkj5bp3pfbkk7907arm9lrb4z2zlxm1yj69icryis2fj4b743ii";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base ListLike ];
       executableHaskellDepends = [ base unordered-containers ];
       testHaskellDepends = [ base tasty tasty-hunit tasty-quickcheck ];
       benchmarkHaskellDepends = [
         base criterion deepseq ListLike parsec
       ];
       description = "Parsing all context-free grammars using Earley's algorithm";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Ebnf2ps" = callPackage
    ({ mkDerivation, array, base, containers, directory, happy
     , old-time, unix
     }:
     mkDerivation {
       pname = "Ebnf2ps";
       version = "1.0.15";
       sha256 = "0jrbxanhp81n3nabdw5s1gh8a78hy4bgnv5slqzrkj6n47bygk0f";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         array base containers directory old-time unix
       ];
       executableToolDepends = [ happy ];
       doHaddock = false;
       homepage = "https://github.com/FranklinChen/Ebnf2ps";
       description = "Peter's Syntax Diagram Drawing Tool";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "EntrezHTTP" = callPackage
    ({ mkDerivation, base, biocore, bytestring, conduit, HTTP
     , http-conduit, hxt, mtl, network, Taxonomy, transformers
     }:
     mkDerivation {
       pname = "EntrezHTTP";
       version = "1.0.1";
       sha256 = "07y0rl3qv48iwl6p5hayfb3kn4vvk7b5wwjxkv62j8bppnqiqijl";
       libraryHaskellDepends = [
         base biocore bytestring conduit HTTP http-conduit hxt mtl network
         Taxonomy transformers
       ];
       homepage = "https://github.com/eggzilla/EntrezHTTP";
       description = "Libary to interface with the NCBI Entrez REST service";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "FenwickTree" = callPackage
    ({ mkDerivation, base, QuickCheck, template-haskell }:
     mkDerivation {
       pname = "FenwickTree";
       version = "0.1.2.1";
       sha256 = "0g7hhkim16wsjf8l79hqkiv1lain6jm8wpiml1iycra3n9i2s5ww";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base QuickCheck template-haskell ];
       testHaskellDepends = [ base QuickCheck template-haskell ];
       homepage = "https://github.com/mgajda/FenwickTree";
       description = "Data structure for fast query and update of cumulative sums";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "FindBin" = callPackage
    ({ mkDerivation, base, directory, filepath }:
     mkDerivation {
       pname = "FindBin";
       version = "0.0.5";
       sha256 = "197xvn05yysmibm1p5wzxfa256lvpbknr5d1l2ws6g40w1kpk717";
       libraryHaskellDepends = [ base directory filepath ];
       homepage = "https://github.com/audreyt/findbin";
       description = "Locate directory of original program";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "FontyFruity" = callPackage
    ({ mkDerivation, base, binary, bytestring, containers, deepseq
     , directory, filepath, text, vector
     }:
     mkDerivation {
       pname = "FontyFruity";
       version = "0.5.3.1";
       sha256 = "1k9fg2y2zzs6qckw2w5pyx4lsdvfr3lb03nnlgn9xrr4zzh7xir4";
       libraryHaskellDepends = [
         base binary bytestring containers deepseq directory filepath text
         vector
       ];
       description = "A true type file format loader";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Frames" = callPackage
    ({ mkDerivation, base, criterion, ghc-prim, lens-family-core, pipes
     , primitive, readable, template-haskell, text, transformers, vector
     , vinyl
     }:
     mkDerivation {
       pname = "Frames";
       version = "0.1.2.1";
       sha256 = "0vw1fh0nqk3s5p08j4cnwb95jgzxk140wvszjlmr3ms9m0xcx61y";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base ghc-prim pipes primitive readable template-haskell text
         transformers vector vinyl
       ];
       benchmarkHaskellDepends = [
         base criterion lens-family-core pipes transformers
       ];
       description = "Data frames For working with tabular data files";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "GLFW-b" = callPackage
    ({ mkDerivation, base, bindings-GLFW }:
     mkDerivation {
       pname = "GLFW-b";
       version = "1.4.7.3";
       sha256 = "04z0mda335isy3i96rhlfkvmhsqi3k453liwx1pfq5pvdrsfxipv";
       libraryHaskellDepends = [ base bindings-GLFW ];
       doCheck = false;
       description = "Bindings to GLFW OpenGL library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "GLURaw" = callPackage
    ({ mkDerivation, base, freeglut, mesa, OpenGLRaw, transformers }:
     mkDerivation {
       pname = "GLURaw";
       version = "2.0.0.1";
       sha256 = "0h5bh71gvv39y50lp4i53qlq91pjd6jpyr0q3dzqy176f3hv4qfm";
       libraryHaskellDepends = [ base OpenGLRaw transformers ];
       librarySystemDepends = [ freeglut mesa ];
       homepage = "http://www.haskell.org/haskellwiki/Opengl";
       description = "A raw binding for the OpenGL graphics system";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) freeglut; inherit (pkgs) mesa;};
  "GLUT" = callPackage
    ({ mkDerivation, array, base, bytestring, containers, freeglut
     , mesa, OpenGL, OpenGLRaw, random, StateVar, transformers
     }:
     mkDerivation {
       pname = "GLUT";
       version = "2.7.0.6";
       sha256 = "0fnlamw2w8idawg9xzlsy7lph3ghf0fmj6ikbyyph8a82fsns5n2";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         array base containers OpenGL StateVar transformers
       ];
       librarySystemDepends = [ freeglut mesa ];
       executableHaskellDepends = [
         array base bytestring OpenGLRaw random
       ];
       homepage = "http://www.haskell.org/haskellwiki/Opengl";
       description = "A binding for the OpenGL Utility Toolkit";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) freeglut; inherit (pkgs) mesa;};
  "GPipe" = callPackage
    ({ mkDerivation, base, Boolean, containers, exception-transformers
     , gl, hashtables, linear, transformers
     }:
     mkDerivation {
       pname = "GPipe";
       version = "2.1.7";
       sha256 = "0548acc4g6yh5mb3y0yn0zdh4kzkq31nhm5gci0c3fdwjjclvdgb";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base Boolean containers exception-transformers gl hashtables linear
         transformers
       ];
       homepage = "http://tobbebex.blogspot.se/";
       description = "Typesafe functional GPU graphics programming";
       license = stdenv.lib.licenses.mit;
     }) {};
  "GPipe-GLFW" = callPackage
    ({ mkDerivation, base, GLFW-b, GPipe, transformers }:
     mkDerivation {
       pname = "GPipe-GLFW";
       version = "1.2.2";
       sha256 = "0lnn24p4xmgpqbyf7gl6xdjf59hbm3dvl0vy1dajahjh252pdhmj";
       libraryHaskellDepends = [ base GLFW-b GPipe transformers ];
       homepage = "https://github.com/plredmond/GPipe-GLFW";
       description = "GLFW OpenGL context creation for GPipe";
       license = stdenv.lib.licenses.mit;
     }) {};
  "Genbank" = callPackage
    ({ mkDerivation, base, biocore, biofasta, bytestring, cmdargs
     , parsec, split
     }:
     mkDerivation {
       pname = "Genbank";
       version = "1.0.3";
       sha256 = "14rbknlc1bxrld04i7dc5dklng5sp0b1rbiilndw5cair0d67brb";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base biocore biofasta bytestring parsec split
       ];
       executableHaskellDepends = [ base cmdargs ];
       description = "Libary for processing the NCBI genbank format";
       license = "GPL";
     }) {};
  "GenericPretty" = callPackage
    ({ mkDerivation, base, ghc-prim, pretty }:
     mkDerivation {
       pname = "GenericPretty";
       version = "1.2.1";
       sha256 = "0bb70mic7srr7x8k83d1i0m0a32gm72zr78ccdf3ckchj9136php";
       libraryHaskellDepends = [ base ghc-prim pretty ];
       homepage = "https://github.com/RazvanRanca/GenericPretty";
       description = "A generic, derivable, haskell pretty printer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Glob" = callPackage
    ({ mkDerivation, base, containers, directory, dlist, filepath
     , transformers
     }:
     mkDerivation {
       pname = "Glob";
       version = "0.7.5";
       sha256 = "0hdyi49zp2yr4h4wgngl8ajrss1p309c3pn0alj543yrh33bnqq0";
       revision = "1";
       editedCabalFile = "16whzn47hxs8miihs3iplc2dh33z07v44ln7kav2m75g3aprr6r1";
       libraryHaskellDepends = [
         base containers directory dlist filepath transformers
       ];
       homepage = "http://iki.fi/matti.niemenmaa/glob/";
       description = "Globbing library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "GraphSCC" = callPackage
    ({ mkDerivation, array, base, containers }:
     mkDerivation {
       pname = "GraphSCC";
       version = "1.0.4";
       sha256 = "1wbcx3wb02adb7l4nchxla3laliz0h5q074vfw4z0ic833k977bq";
       libraryHaskellDepends = [ array base containers ];
       description = "Tarjan's algorithm for computing the strongly connected components of a graph";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "H" = callPackage
    ({ mkDerivation, base, bytestring, cmdargs, directory, file-embed
     , inline-r, pretty, process, singletons, tasty, tasty-golden
     , tasty-hunit, temporary, text, vector
     }:
     mkDerivation {
       pname = "H";
       version = "0.8.0.0";
       sha256 = "113lshslc6aj4j8xpmq4bx5xjfk03l8jvg51imczlfkq1wadqydn";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         base bytestring cmdargs file-embed inline-r pretty process
         temporary vector
       ];
       testHaskellDepends = [
         base bytestring directory inline-r process singletons tasty
         tasty-golden tasty-hunit text vector
       ];
       doHaddock = false;
       doCheck = false;
       description = "The Haskell/R mixed programming environment";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "HCodecs" = callPackage
    ({ mkDerivation, array, base, bytestring, QuickCheck, random }:
     mkDerivation {
       pname = "HCodecs";
       version = "0.5";
       sha256 = "0mhp1alx0p9lzq3vm0k802f8ndm2386sshprn9zb8xq8bsd11gxi";
       libraryHaskellDepends = [
         array base bytestring QuickCheck random
       ];
       testHaskellDepends = [ array base bytestring QuickCheck random ];
       homepage = "http://www-db.informatik.uni-tuebingen.de/team/giorgidze";
       description = "A library to read, write and manipulate MIDI, WAVE, and SoundFont2 files";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "HDBC" = callPackage
    ({ mkDerivation, base, bytestring, containers, convertible, mtl
     , old-time, text, time, utf8-string
     }:
     mkDerivation {
       pname = "HDBC";
       version = "2.4.0.1";
       sha256 = "1bfjffn44n8w0bvznjiqm4ckfs28nipachip98f125p784ff4gks";
       revision = "1";
       editedCabalFile = "1zg7l48g45wc86kqyspzg92q3vnzb6c52rn8qkrhw85wk57yy76s";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring containers convertible mtl old-time text time
         utf8-string
       ];
       homepage = "https://github.com/hdbc/hdbc";
       description = "Haskell Database Connectivity";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "HDBC-postgresql" = callPackage
    ({ mkDerivation, base, bytestring, convertible, HDBC, mtl, old-time
     , parsec, postgresql, time, utf8-string
     }:
     mkDerivation {
       pname = "HDBC-postgresql";
       version = "2.3.2.3";
       sha256 = "1jv43rv3a0x7b7q5vzp07xffaf690gijx3rqnfv19fk63a7075j3";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring convertible HDBC mtl old-time parsec time
         utf8-string
       ];
       librarySystemDepends = [ postgresql ];
       executableSystemDepends = [ postgresql ];
       homepage = "http://github.com/hdbc/hdbc-postgresql";
       description = "PostgreSQL driver for HDBC";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) postgresql;};
  "HDBC-sqlite3" = callPackage
    ({ mkDerivation, base, bytestring, HDBC, mtl, sqlite, utf8-string
     }:
     mkDerivation {
       pname = "HDBC-sqlite3";
       version = "2.3.3.1";
       sha256 = "1spbhvwwyj4q7li33kvw1bsr6m1xbnxipga67s7cdgvyf2mxk0x7";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base bytestring HDBC mtl utf8-string ];
       librarySystemDepends = [ sqlite ];
       executableSystemDepends = [ sqlite ];
       homepage = "https://github.com/hdbc/hdbc-sqlite3";
       description = "Sqlite v3 driver for HDBC";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) sqlite;};
  "HList" = callPackage
    ({ mkDerivation, array, base, base-orphans, cmdargs, directory
     , doctest, filepath, ghc-prim, hspec, lens, mtl, process
     , profunctors, QuickCheck, syb, tagged, template-haskell
     }:
     mkDerivation {
       pname = "HList";
       version = "0.4.2.0";
       sha256 = "15bpglqj33n4y68mg8l2g0rllrcisg2f94wsl3n7rpy43md596fd";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         array base base-orphans ghc-prim mtl profunctors tagged
         template-haskell
       ];
       testHaskellDepends = [
         array base cmdargs directory doctest filepath hspec lens mtl
         process QuickCheck syb template-haskell
       ];
       doCheck = false;
       description = "Heterogeneous lists";
       license = stdenv.lib.licenses.mit;
     }) {};
  "HPDF" = callPackage
    ({ mkDerivation, array, base, base64-bytestring, binary, bytestring
     , containers, errors, HTF, mtl, random, vector, zlib
     }:
     mkDerivation {
       pname = "HPDF";
       version = "1.4.10";
       sha256 = "1m072rc03yx5y4djmvj87kn6n23d9378v3ipl8lj3vzfjgfzsayy";
       libraryHaskellDepends = [
         array base base64-bytestring binary bytestring containers errors
         mtl random vector zlib
       ];
       testHaskellDepends = [ base HTF ];
       homepage = "http://www.alpheccar.org";
       description = "Generation of PDF documents";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "HStringTemplate" = callPackage
    ({ mkDerivation, array, base, blaze-builder, bytestring, containers
     , deepseq, directory, filepath, mtl, old-locale, parsec, pretty
     , syb, template-haskell, text, time, void
     }:
     mkDerivation {
       pname = "HStringTemplate";
       version = "0.8.5";
       sha256 = "1zrmbclnc0njdcppzsjlp4ln69hzcixmw1x1l6rjvxx5y51k0az0";
       revision = "1";
       editedCabalFile = "0qwz8lby7096vpmi73wryanky27aimwxpmfwpbarjm2lzbiq868i";
       libraryHaskellDepends = [
         array base blaze-builder bytestring containers deepseq directory
         filepath mtl old-locale parsec pretty syb template-haskell text
         time void
       ];
       description = "StringTemplate implementation in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "HTF" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, array, base
     , base64-bytestring, bytestring, containers, cpphs, Diff, directory
     , filepath, haskell-src, HUnit, lifted-base, monad-control, mtl
     , old-time, pretty, process, QuickCheck, random, regex-compat
     , template-haskell, temporary, text, time, unix
     , unordered-containers, vector, xmlgen
     }:
     mkDerivation {
       pname = "HTF";
       version = "0.13.1.0";
       sha256 = "0iz81pmc5prl0643jg53ywa65h7s16blchpvasnvfvvn47p6kd0w";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson array base base64-bytestring bytestring containers cpphs Diff
         directory haskell-src HUnit lifted-base monad-control mtl old-time
         pretty process QuickCheck random regex-compat text time unix vector
         xmlgen
       ];
       executableHaskellDepends = [
         array base cpphs directory HUnit mtl old-time random text
       ];
       testHaskellDepends = [
         aeson aeson-pretty base bytestring directory filepath HUnit mtl
         process random regex-compat template-haskell temporary text
         unordered-containers
       ];
       doCheck = false;
       homepage = "https://github.com/skogsbaer/HTF/";
       description = "The Haskell Test Framework";
       license = "LGPL";
     }) {};
  "HTTP" = callPackage
    ({ mkDerivation, array, base, bytestring, case-insensitive, conduit
     , conduit-extra, deepseq, http-types, httpd-shed, HUnit, mtl
     , network, network-uri, parsec, pureMD5, split, test-framework
     , test-framework-hunit, time, wai, warp
     }:
     mkDerivation {
       pname = "HTTP";
       version = "4000.3.3";
       sha256 = "1wlvvqcxsnd2is3khsla0vd8i9cy12v1pg6d6i13ihcd131a7bdv";
       libraryHaskellDepends = [
         array base bytestring mtl network network-uri parsec time
       ];
       testHaskellDepends = [
         base bytestring case-insensitive conduit conduit-extra deepseq
         http-types httpd-shed HUnit mtl network network-uri pureMD5 split
         test-framework test-framework-hunit wai warp
       ];
       doCheck = false;
       homepage = "https://github.com/haskell/HTTP";
       description = "A library for client-side HTTP";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "HUnit" = callPackage
    ({ mkDerivation, base, deepseq, filepath }:
     mkDerivation {
       pname = "HUnit";
       version = "1.3.1.1";
       sha256 = "1y4fv8r7xi302ahj6p71hvsgz3rkb2c4vw09j935ns5bj11grrck";
       libraryHaskellDepends = [ base deepseq ];
       testHaskellDepends = [ base deepseq filepath ];
       homepage = "https://github.com/hspec/HUnit#readme";
       description = "A unit testing framework for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "HaRe" = callPackage
    ({ mkDerivation, array, base, Cabal, cabal-helper, containers
     , directory, filepath, ghc, ghc-exactprint, ghc-mod, ghc-paths
     , ghc-prim, ghc-syb-utils, hslogger, monad-control, monoid-extras
     , mtl, old-time, parsec, pretty, rosezipper, semigroups
     , Strafunski-StrategyLib, syb, syz, time, transformers
     , transformers-base
     }:
     mkDerivation {
       pname = "HaRe";
       version = "0.8.2.3";
       sha256 = "010f194hnzvn3587qk60lra28ijsdb0rzbf1kb2rr4k6ss675kcc";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base Cabal cabal-helper containers directory filepath ghc
         ghc-exactprint ghc-mod ghc-paths ghc-prim ghc-syb-utils hslogger
         monad-control monoid-extras mtl old-time pretty rosezipper
         semigroups Strafunski-StrategyLib syb syz time transformers
         transformers-base
       ];
       executableHaskellDepends = [
         array base Cabal cabal-helper containers directory filepath ghc
         ghc-exactprint ghc-mod ghc-paths ghc-prim ghc-syb-utils hslogger
         monad-control monoid-extras mtl old-time parsec pretty rosezipper
         semigroups Strafunski-StrategyLib syb syz time transformers
         transformers-base
       ];
       doCheck = false;
       homepage = "https://github.com/RefactoringTools/HaRe/wiki";
       description = "the Haskell Refactorer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "HaTeX" = callPackage
    ({ mkDerivation, base, bytestring, containers, matrix, parsec
     , QuickCheck, tasty, tasty-quickcheck, text, transformers
     , wl-pprint-extras
     }:
     mkDerivation {
       pname = "HaTeX";
       version = "3.16.2.0";
       sha256 = "0nsv7an8k2gzlx88a09cy6hjgr02d2sys5ncp9172r6hahisnag8";
       libraryHaskellDepends = [
         base bytestring containers matrix parsec QuickCheck text
         transformers wl-pprint-extras
       ];
       testHaskellDepends = [
         base QuickCheck tasty tasty-quickcheck text
       ];
       homepage = "https://github.com/Daniel-Diaz/HaTeX/blob/master/README.md";
       description = "The Haskell LaTeX library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "HaXml" = callPackage
    ({ mkDerivation, base, bytestring, containers, directory, filepath
     , polyparse, pretty, random
     }:
     mkDerivation {
       pname = "HaXml";
       version = "1.25.3";
       sha256 = "1iq74dnxvannx9x1whqc3ixn93r4v5z7b4yv21n9q5963kpafj34";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring containers filepath polyparse pretty random
       ];
       executableHaskellDepends = [ base directory polyparse pretty ];
       homepage = "http://projects.haskell.org/HaXml/";
       description = "Utilities for manipulating XML documents";
       license = "LGPL";
     }) {};
  "HandsomeSoup" = callPackage
    ({ mkDerivation, base, containers, hspec, HTTP, hxt, hxt-http, mtl
     , network, network-uri, parsec, transformers
     }:
     mkDerivation {
       pname = "HandsomeSoup";
       version = "0.4.2";
       sha256 = "1yzfrvivvxwlaiqwbjx27rxwq9mmnnpb512vwklzw7nyzg9xmqha";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base containers HTTP hxt hxt-http mtl network network-uri parsec
         transformers
       ];
       executableHaskellDepends = [ base hxt ];
       testHaskellDepends = [ base hspec hxt ];
       homepage = "https://github.com/egonSchiele/HandsomeSoup";
       description = "Work with HTML more easily in HXT";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "HaskellNet" = callPackage
    ({ mkDerivation, array, base, base64-string, bytestring, cryptohash
     , mime-mail, mtl, network, old-time, pretty, text
     }:
     mkDerivation {
       pname = "HaskellNet";
       version = "0.5";
       sha256 = "1apr9rwn67wz7yf05ssnyd4i0biqj8q37i2lxsdl22rfcx1kszdr";
       libraryHaskellDepends = [
         array base base64-string bytestring cryptohash mime-mail mtl
         network old-time pretty text
       ];
       homepage = "https://github.com/jtdaugherty/HaskellNet";
       description = "Client support for POP3, SMTP, and IMAP";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "HaskellNet-SSL" = callPackage
    ({ mkDerivation, base, bytestring, connection, data-default
     , HaskellNet, network, tls
     }:
     mkDerivation {
       pname = "HaskellNet-SSL";
       version = "0.3.2.1";
       sha256 = "1ny3h82j7pdymk4ag4gavqmyny125zgsc1hs6y9msm6k4k4jd8xc";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base bytestring connection data-default HaskellNet network tls
       ];
       homepage = "https://github.com/dpwright/HaskellNet-SSL";
       description = "Helpers to connect to SSL/TLS mail servers with HaskellNet";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "HsOpenSSL" = callPackage
    ({ mkDerivation, base, bytestring, network, old-locale, openssl
     , time
     }:
     mkDerivation {
       pname = "HsOpenSSL";
       version = "0.11.1.1";
       sha256 = "1hf4xgc2488hm0y9isrl7mxlacf1iazb6h1l1wz8dab8x5sf0qaa";
       revision = "1";
       editedCabalFile = "0pwsvgw7jnqmv3cjsm8a028nns0ziw5x3clgrqpbrpdpglkiqddy";
       configureFlags = [ "-f-fast-bignum" ];
       libraryHaskellDepends = [
         base bytestring network old-locale time
       ];
       librarySystemDepends = [ openssl ];
       doCheck = false;
       homepage = "https://github.com/phonohawk/HsOpenSSL";
       description = "Partial OpenSSL binding for Haskell";
       license = stdenv.lib.licenses.publicDomain;
     }) {inherit (pkgs) openssl;};
  "HsSyck" = callPackage
    ({ mkDerivation, base, bytestring, hashtables, syb, utf8-string }:
     mkDerivation {
       pname = "HsSyck";
       version = "0.53";
       sha256 = "17r4jwnkjinmzpw9m2crjwccdyv9wmpljnv1ldgljkr9p9mb5ywf";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base bytestring hashtables syb utf8-string
       ];
       description = "Fast, lightweight YAML loader and dumper";
       license = stdenv.lib.licenses.mit;
     }) {};
  "IPv6Addr" = callPackage
    ({ mkDerivation, attoparsec, base, HUnit, iproute, network
     , network-info, random, test-framework, test-framework-hunit, text
     }:
     mkDerivation {
       pname = "IPv6Addr";
       version = "0.6.0.2";
       sha256 = "0qzrida38n92ngrrnmjpdg3vinjjscijz8fsfr7lyffaw55k6pld";
       libraryHaskellDepends = [
         attoparsec base iproute network network-info random text
       ];
       testHaskellDepends = [
         base HUnit test-framework test-framework-hunit text
       ];
       homepage = "https://github.com/MichelBoucey/IPv6Addr";
       description = "Library to deal with IPv6 address text representations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "IfElse" = callPackage
    ({ mkDerivation, base, mtl }:
     mkDerivation {
       pname = "IfElse";
       version = "0.85";
       sha256 = "1kfx1bwfjczj93a8yqz1n8snqiq5655qgzwv1lrycry8wb1vzlwa";
       libraryHaskellDepends = [ base mtl ];
       description = "Anaphoric and miscellaneous useful control-flow";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "IntervalMap" = callPackage
    ({ mkDerivation, base, Cabal, containers, criterion, deepseq
     , fingertree, QuickCheck, random, SegmentTree
     }:
     mkDerivation {
       pname = "IntervalMap";
       version = "0.5.0.1";
       sha256 = "1g30w49czh5jli87490xwab8dqixzjikgnfdg6lfgwcia3y48jjw";
       libraryHaskellDepends = [ base containers deepseq ];
       testHaskellDepends = [ base Cabal containers deepseq QuickCheck ];
       benchmarkHaskellDepends = [
         base containers criterion deepseq fingertree random SegmentTree
       ];
       homepage = "http://www.chr-breitkopf.de/comp/IntervalMap";
       description = "Containers for intervals, with efficient search";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "JuicyPixels" = callPackage
    ({ mkDerivation, base, binary, bytestring, containers, deepseq, mtl
     , primitive, transformers, vector, zlib
     }:
     mkDerivation {
       pname = "JuicyPixels";
       version = "3.2.7";
       sha256 = "0jzidzmr82hypy4pxm885x8yg26isfiy4dbawycs4ic0sw1gy9h1";
       libraryHaskellDepends = [
         base binary bytestring containers deepseq mtl primitive
         transformers vector zlib
       ];
       homepage = "https://github.com/Twinside/Juicy.Pixels";
       description = "Picture loading/serialization (in png, jpeg, bitmap, gif, tga, tiff and radiance)";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "JuicyPixels-repa" = callPackage
    ({ mkDerivation, base, bytestring, JuicyPixels, repa, vector }:
     mkDerivation {
       pname = "JuicyPixels-repa";
       version = "0.7.0.1";
       sha256 = "0drqvzglsd13clq6hzzfklqzaq20avq5m2jckq50yrlvndx5yz3n";
       libraryHaskellDepends = [
         base bytestring JuicyPixels repa vector
       ];
       description = "Convenience functions to obtain array representations of images";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "JuicyPixels-scale-dct" = callPackage
    ({ mkDerivation, base, base-compat, carray, fft, JuicyPixels
     , JuicyPixels-util, time
     }:
     mkDerivation {
       pname = "JuicyPixels-scale-dct";
       version = "0.1.1.0";
       sha256 = "1yg9pbl8k498hw1x2g01si9m7hdz1s0xbays9csb5qi85s7ycznw";
       revision = "2";
       editedCabalFile = "1sj3y97gma1kwklfpf99p5g1whhbascw0sbsnfmkpv3cfx6as3nq";
       libraryHaskellDepends = [
         base base-compat carray fft JuicyPixels
       ];
       testHaskellDepends = [
         base base-compat carray fft JuicyPixels JuicyPixels-util time
       ];
       homepage = "https://github.com/phadej/JuicyPixels-scale-dct#readme";
       description = "Scale JuicyPixels images with DCT";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "JuicyPixels-util" = callPackage
    ({ mkDerivation, base, JuicyPixels, vector }:
     mkDerivation {
       pname = "JuicyPixels-util";
       version = "0.2";
       sha256 = "1b2rx5g8kd83hl50carr02mz21gvkasnsddw1f3pfvfsyfv3yyrc";
       libraryHaskellDepends = [ base JuicyPixels vector ];
       homepage = "https://github.com/fumieval/JuicyPixels-util";
       description = "Convert JuicyPixel images into RGBA format, flip, trim and so on";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "LibZip" = callPackage
    ({ mkDerivation, base, bindings-libzip, bytestring, filepath, mtl
     , time
     }:
     mkDerivation {
       pname = "LibZip";
       version = "0.10.2";
       sha256 = "0flpmgi07qfbmsd2hplhrvzdkby065ly4a5yrvbsrx6p7gkivn2l";
       libraryHaskellDepends = [
         base bindings-libzip bytestring filepath mtl time
       ];
       homepage = "http://bitbucket.org/astanin/hs-libzip/";
       description = "Bindings to libzip, a library for manipulating zip archives";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "List" = callPackage
    ({ mkDerivation, base, transformers }:
     mkDerivation {
       pname = "List";
       version = "0.5.2";
       sha256 = "1b7ar17d2sq6ibgbiqbsrhk2zlxcxiwfv2xsfbya5hs8nflzkp97";
       libraryHaskellDepends = [ base transformers ];
       homepage = "http://github.com/yairchu/generator/tree";
       description = "List monad transformer and class";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ListLike" = callPackage
    ({ mkDerivation, array, base, bytestring, containers, dlist, fmlist
     , HUnit, QuickCheck, random, text, vector
     }:
     mkDerivation {
       pname = "ListLike";
       version = "4.2.1";
       sha256 = "0nc8y2y26s2ssgfpf9zpak4bdhnsba602syl3iby71gnpvjjlm6n";
       libraryHaskellDepends = [
         array base bytestring containers dlist fmlist text vector
       ];
       testHaskellDepends = [
         array base bytestring containers dlist fmlist HUnit QuickCheck
         random text vector
       ];
       homepage = "http://software.complete.org/listlike";
       description = "Generic support for list-like structures";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "MFlow" = callPackage
    ({ mkDerivation, base, blaze-html, blaze-markup, bytestring
     , case-insensitive, clientsession, conduit, conduit-extra
     , containers, cpphs, directory, extensible-exceptions, http-types
     , monadloc, mtl, old-time, parsec, pwstore-fast, random
     , RefSerialize, resourcet, stm, TCache, text, time, transformers
     , utf8-string, vector, wai, wai-extra, warp, warp-tls, Workflow
     }:
     mkDerivation {
       pname = "MFlow";
       version = "0.4.6.0";
       sha256 = "0hm3y606z4qdnp8kqbr69ll8hrx95qn782hhzmcq7n2jh54gg4sf";
       libraryHaskellDepends = [
         base blaze-html blaze-markup bytestring case-insensitive
         clientsession conduit conduit-extra containers directory
         extensible-exceptions http-types monadloc mtl old-time parsec
         pwstore-fast random RefSerialize resourcet stm TCache text time
         transformers utf8-string vector wai wai-extra warp warp-tls
         Workflow
       ];
       libraryToolDepends = [ cpphs ];
       description = "stateful, RESTful web framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "MemoTrie" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "MemoTrie";
       version = "0.6.4";
       sha256 = "074bss1vfr7h3s2fgdi84n5p4iywrcx4jj59s2bj9k8yxbvwhf22";
       revision = "1";
       editedCabalFile = "1rvjphg71cmr4g9pml14xv0p18if7l1v912cpc795ksn78bylp03";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base ];
       executableHaskellDepends = [ base ];
       homepage = "https://github.com/conal/MemoTrie";
       description = "Trie-based memo functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "MissingH" = callPackage
    ({ mkDerivation, array, base, containers, directory, filepath
     , hslogger, HUnit, mtl, network, old-locale, old-time, parsec
     , process, random, regex-compat, time, unix
     }:
     mkDerivation {
       pname = "MissingH";
       version = "1.3.0.1";
       sha256 = "1cwdhgqqv2riqwhsgyrpmqyzvg19lx6zp1g7xdp4rikh7rkn03ds";
       revision = "1";
       editedCabalFile = "181ql081aw6j27c2192hb56clsp60gfa0gn4km58qvps3v7gjysx";
       libraryHaskellDepends = [
         array base containers directory filepath hslogger HUnit mtl network
         old-locale old-time parsec process random regex-compat time unix
       ];
       doCheck = false;
       homepage = "http://software.complete.org/missingh";
       description = "Large utility library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "MonadCatchIO-transformers" = callPackage
    ({ mkDerivation, base, extensible-exceptions, monads-tf
     , transformers
     }:
     mkDerivation {
       pname = "MonadCatchIO-transformers";
       version = "0.3.1.3";
       sha256 = "1g840h7whsvgyrh4v58mdmsb7hinq785irbz6x9y08r1q8r9r90h";
       libraryHaskellDepends = [
         base extensible-exceptions monads-tf transformers
       ];
       description = "Monad-transformer compatible version of the Control.Exception module";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "MonadPrompt" = callPackage
    ({ mkDerivation, base, mtl }:
     mkDerivation {
       pname = "MonadPrompt";
       version = "1.0.0.5";
       sha256 = "1nmy7dfzrkd8yfv5i9vlmjq9khnyi76ayvkzgcf783v5hfzcn4mh";
       libraryHaskellDepends = [ base mtl ];
       description = "MonadPrompt, implementation & examples";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "MonadRandom" = callPackage
    ({ mkDerivation, base, mtl, random, transformers
     , transformers-compat
     }:
     mkDerivation {
       pname = "MonadRandom";
       version = "0.4.2.2";
       sha256 = "041ai76ms5r6m3afzbgpjr0d7mkqzkn2m44f564kwnp53a0g7k87";
       libraryHaskellDepends = [
         base mtl random transformers transformers-compat
       ];
       description = "Random-number generation monad";
       license = "unknown";
     }) {};
  "MusicBrainz" = callPackage
    ({ mkDerivation, aeson, base, bytestring, conduit, conduit-extra
     , HTTP, http-conduit, http-types, monad-control, resourcet, text
     , time, time-locale-compat, transformers, vector, xml-conduit
     , xml-types
     }:
     mkDerivation {
       pname = "MusicBrainz";
       version = "0.2.4";
       sha256 = "1f1x3iivxkn5d7w3xyh2q8mpn1mg24c1n6v8dvdsph745xszh8fj";
       revision = "1";
       editedCabalFile = "1bnj0wq9q6y2pxjnl1rk5ybdj16g17g7qkzrfnjrwmm7iq8xbm62";
       libraryHaskellDepends = [
         aeson base bytestring conduit conduit-extra HTTP http-conduit
         http-types monad-control resourcet text time time-locale-compat
         transformers vector xml-conduit xml-types
       ];
       homepage = "http://floss.scru.org/hMusicBrainz";
       description = "interface to MusicBrainz XML2 web service";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "Network-NineP" = callPackage
    ({ mkDerivation, base, binary, bytestring, containers, convertible
     , exceptions, monad-loops, monad-peel, mstate, mtl, network, NineP
     , regex-posix, stateref, transformers
     }:
     mkDerivation {
       pname = "Network-NineP";
       version = "0.4.0";
       sha256 = "1h6p1p16wvsi6pjpz2xdvbljd394bzpqqfiah7aq9d7f7zh7hzid";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base binary bytestring containers convertible exceptions
         monad-loops monad-peel mstate mtl network NineP regex-posix
         stateref transformers
       ];
       description = "High-level abstraction over 9P protocol";
       license = "unknown";
     }) {};
  "NineP" = callPackage
    ({ mkDerivation, base, binary, bytestring }:
     mkDerivation {
       pname = "NineP";
       version = "0.0.2.1";
       sha256 = "1k6qdp4zmqjl2f6cqy1zzzl6ncb2m9r0qgh4c24i2h5kkxmm3cab";
       configureFlags = [ "-f-bytestring-in-base" ];
       libraryHaskellDepends = [ base binary bytestring ];
       homepage = "http://9ph.googlecode.com";
       description = "9P2000 in pure Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "NumInstances" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "NumInstances";
       version = "1.4";
       sha256 = "0ycnwn09izajv330l7a31mc0alifqmxjsn9qmfswwnbg6i4jmnyb";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/conal/NumInstances";
       description = "Instances of numeric classes for functions and tuples";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ObjectName" = callPackage
    ({ mkDerivation, base, transformers }:
     mkDerivation {
       pname = "ObjectName";
       version = "1.1.0.1";
       sha256 = "046jm94rmm46cicd31pl54vdvfjvhd9ffbfycy2lxzc0fliyznvj";
       libraryHaskellDepends = [ base transformers ];
       homepage = "https://github.com/svenpanne/ObjectName";
       description = "Explicitly handled object names";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Octree" = callPackage
    ({ mkDerivation, AC-Vector, base, markdown-unlit, QuickCheck }:
     mkDerivation {
       pname = "Octree";
       version = "0.5.4.2";
       sha256 = "0q07jylv5ggvnp32h3b63pk1rcvvxh7bzi3dyx4ga2s0zwfaq1q2";
       libraryHaskellDepends = [ AC-Vector base QuickCheck ];
       testHaskellDepends = [ AC-Vector base markdown-unlit QuickCheck ];
       homepage = "https://github.com/mgajda/octree";
       description = "Simple unbalanced Octree for storing data about 3D points";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "OpenGL" = callPackage
    ({ mkDerivation, base, bytestring, containers, GLURaw, ObjectName
     , OpenGLRaw, StateVar, text, transformers
     }:
     mkDerivation {
       pname = "OpenGL";
       version = "3.0.0.1";
       sha256 = "0071b2djd2q3cdrp3f26v1zv6cd3riz7ay6pwd0cx2kzld7j8fb0";
       libraryHaskellDepends = [
         base bytestring containers GLURaw ObjectName OpenGLRaw StateVar
         text transformers
       ];
       homepage = "http://www.haskell.org/haskellwiki/Opengl";
       description = "A binding for the OpenGL graphics system";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "OpenGLRaw" = callPackage
    ({ mkDerivation, base, bytestring, containers, fixed, half, mesa
     , text, transformers
     }:
     mkDerivation {
       pname = "OpenGLRaw";
       version = "3.1.0.0";
       sha256 = "1kpkz7698nqa3pk4wxgkn3jpdp2v7jvxp25kjcf61iz1rk568hs1";
       libraryHaskellDepends = [
         base bytestring containers fixed half text transformers
       ];
       librarySystemDepends = [ mesa ];
       homepage = "http://www.haskell.org/haskellwiki/Opengl";
       description = "A raw binding for the OpenGL graphics system";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) mesa;};
  "PSQueue" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "PSQueue";
       version = "1.1";
       sha256 = "1k291bh8j5vpcrn6vycww2blwg7jxx9yrfmrqdanz48gs4d8gq58";
       libraryHaskellDepends = [ base ];
       description = "Priority Search Queue";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "QuasiText" = callPackage
    ({ mkDerivation, attoparsec, base, haskell-src-meta
     , template-haskell, text
     }:
     mkDerivation {
       pname = "QuasiText";
       version = "0.1.2.5";
       sha256 = "10y2lirprxyh9m47qxq0plihc22xvmkhq6lfbx3i19vfvkbhnbwx";
       libraryHaskellDepends = [
         attoparsec base haskell-src-meta template-haskell text
       ];
       homepage = "https://github.com/mikeplus64/QuasiText";
       description = "A QuasiQuoter for Text";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "QuickCheck" = callPackage
    ({ mkDerivation, base, containers, random, template-haskell
     , test-framework, tf-random, transformers
     }:
     mkDerivation {
       pname = "QuickCheck";
       version = "2.8.1";
       sha256 = "0fvnfl30fxmj5q920l13641ar896d53z0z6z66m7c1366lvalwvh";
       revision = "1";
       editedCabalFile = "1dxl2qg4hls375i8xw1jp05s6ryy5b6y9ryd6g8cbvx7kvp4zj7q";
       libraryHaskellDepends = [
         base containers random template-haskell tf-random transformers
       ];
       testHaskellDepends = [
         base containers template-haskell test-framework
       ];
       homepage = "https://github.com/nick8325/quickcheck";
       description = "Automatic testing of Haskell programs";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "RNAlien" = callPackage
    ({ mkDerivation, base, biocore, biofasta, BlastHTTP, blastxml
     , bytestring, cassava, ClustalParser, cmdargs, containers
     , directory, edit-distance, either-unwrap, EntrezHTTP, filepath
     , hierarchical-clustering, HTTP, matrix, parsec, process, random
     , split, Taxonomy, time, vector, ViennaRNAParser
     }:
     mkDerivation {
       pname = "RNAlien";
       version = "1.0.0";
       sha256 = "1hslg681yxvqb3r47xw7kmwn3f1ljiyyj3fql8lwq9rsrwciqqjx";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base biocore biofasta BlastHTTP blastxml bytestring cassava
         ClustalParser cmdargs containers directory edit-distance
         either-unwrap EntrezHTTP filepath hierarchical-clustering HTTP
         matrix parsec process random split Taxonomy vector ViennaRNAParser
       ];
       executableHaskellDepends = [
         base biocore biofasta bytestring cassava cmdargs containers
         directory either-unwrap filepath process random split time vector
         ViennaRNAParser
       ];
       description = "Unsupervized construction of RNA family models";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "RSA" = callPackage
    ({ mkDerivation, base, binary, bytestring, crypto-api
     , crypto-pubkey-types, DRBG, pureMD5, QuickCheck, SHA, tagged
     , test-framework, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "RSA";
       version = "2.2.0";
       sha256 = "1mzjlkw9i9r7r5a7mja01pq3ihvik2ncgah1jmznswaj6ga5cc19";
       libraryHaskellDepends = [
         base binary bytestring crypto-api crypto-pubkey-types pureMD5 SHA
       ];
       testHaskellDepends = [
         base binary bytestring crypto-api crypto-pubkey-types DRBG pureMD5
         QuickCheck SHA tagged test-framework test-framework-quickcheck2
       ];
       description = "Implementation of RSA, using the padding schemes of PKCS#1 v2.1.";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Rasterific" = callPackage
    ({ mkDerivation, base, bytestring, containers, dlist, FontyFruity
     , free, JuicyPixels, mtl, primitive, vector, vector-algorithms
     }:
     mkDerivation {
       pname = "Rasterific";
       version = "0.6.1";
       sha256 = "1y9jciiaam0dn2falhxc0nb97vy35dfvv71xzc1bhiw4gn66n4rm";
       libraryHaskellDepends = [
         base bytestring containers dlist FontyFruity free JuicyPixels mtl
         primitive vector vector-algorithms
       ];
       description = "A pure haskell drawing engine";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ReadArgs" = callPackage
    ({ mkDerivation, base, system-filepath, text }:
     mkDerivation {
       pname = "ReadArgs";
       version = "1.2.2";
       sha256 = "1v6yr5zzrrj31prfzxxh1n27sfnkqpkw34v3a47rcnm444ba58a7";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base system-filepath text ];
       executableHaskellDepends = [ base system-filepath text ];
       doCheck = false;
       homepage = "http://github.com/rampion/ReadArgs";
       description = "Simple command line argument parsing";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "RefSerialize" = callPackage
    ({ mkDerivation, base, binary, bytestring, containers, hashtables
     , stringsearch
     }:
     mkDerivation {
       pname = "RefSerialize";
       version = "0.3.1.4";
       sha256 = "1hl1jxdarqp59fs1sjvxpyhcazrnlm4iywysgkf3iqm56jfp2f6w";
       libraryHaskellDepends = [
         base binary bytestring containers hashtables stringsearch
       ];
       description = "Write to and read from ByteStrings maintaining internal memory references";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Rlang-QQ" = callPackage
    ({ mkDerivation, array, base, binary, bytestring, Cabal, containers
     , data-binary-ieee754, directory, doctest, filepath
     , haskell-src-meta, HList, hspec, lens, mtl, process, repa, SHA
     , split, syb, template-haskell, temporary, text, transformers
     , trifecta, utf8-string, vector, zlib
     }:
     mkDerivation {
       pname = "Rlang-QQ";
       version = "0.3.1.0";
       sha256 = "0rl3cmr7vfc8vk7132y40ib0l53v9yndw71bmp25zj24nkmha7hj";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         array base binary bytestring Cabal containers data-binary-ieee754
         directory filepath haskell-src-meta HList lens mtl process repa SHA
         split syb template-haskell temporary text transformers trifecta
         utf8-string vector zlib
       ];
       testHaskellDepends = [ base directory doctest hspec lens vector ];
       doCheck = false;
       homepage = "http://code.haskell.org/~aavogt/Rlang-QQ";
       description = "quasiquoter for inline-R code";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "SHA" = callPackage
    ({ mkDerivation, array, base, binary, bytestring, directory
     , QuickCheck, test-framework, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "SHA";
       version = "1.6.4.2";
       sha256 = "134ajm87fm4lpsw86m9q8apv20dw4bpk46raa389zr6bcdpifw64";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ array base binary bytestring ];
       executableHaskellDepends = [ base bytestring directory ];
       testHaskellDepends = [
         array base binary bytestring QuickCheck test-framework
         test-framework-quickcheck2
       ];
       description = "Implementations of the SHA suite of message digest functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "STMonadTrans" = callPackage
    ({ mkDerivation, array, base, mtl }:
     mkDerivation {
       pname = "STMonadTrans";
       version = "0.3.3";
       sha256 = "05d37ax0j8dp1h1w6pxkf1415mzn4gasdhn7gbsr8ay46iv1r4fr";
       libraryHaskellDepends = [ array base mtl ];
       description = "A monad transformer version of the ST monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "SafeSemaphore" = callPackage
    ({ mkDerivation, base, containers, HUnit, stm }:
     mkDerivation {
       pname = "SafeSemaphore";
       version = "0.10.1";
       sha256 = "0rpg9j6fy70i0b9dkrip9d6wim0nac0snp7qzbhykjkqlcvvgr91";
       revision = "1";
       editedCabalFile = "1k61gqgfh6n3sj8ni8sfvpcm39nqc2msjfxk2pgmhfabvv48w5hv";
       libraryHaskellDepends = [ base containers stm ];
       testHaskellDepends = [ base HUnit ];
       homepage = "https://github.com/ChrisKuklewicz/SafeSemaphore";
       description = "Much safer replacement for QSemN, QSem, and SampleVar";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "SegmentTree" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "SegmentTree";
       version = "0.3";
       sha256 = "1hagm0y9x2j1wcgk5ibxnlh2slnxfggn79cq20ws0zvd4yqw3231";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base ];
       description = "Data structure for querying the set (or count) of intervals covering given point";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Spintax" = callPackage
    ({ mkDerivation, attoparsec, base, extra, mwc-random, text }:
     mkDerivation {
       pname = "Spintax";
       version = "0.1.0.0";
       sha256 = "1v7ycw23h2m4npax3liz9ybqbwvzf924npb09bjaifgk0zqiblfr";
       libraryHaskellDepends = [ attoparsec base extra mwc-random text ];
       homepage = "https://github.com/MichelBoucey/spintax";
       description = "Random text generation based on spintax";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Spock" = callPackage
    ({ mkDerivation, aeson, base, base64-bytestring, bytestring
     , case-insensitive, containers, crypto-random, directory, focus
     , hashable, hspec, hspec-wai, http-types, hvect, list-t
     , monad-control, mtl, old-locale, path-pieces, random, reroute
     , resource-pool, resourcet, stm, stm-containers, text, time
     , transformers, transformers-base, unordered-containers, vault, wai
     , wai-extra, warp
     }:
     mkDerivation {
       pname = "Spock";
       version = "0.10.0.1";
       sha256 = "1llmcm39668c3sg8m80i16jql38rqk4qqfjcydlr7s18fyrxx07g";
       revision = "1";
       editedCabalFile = "1x5bnb3g0fvjw12p3j24s8dpxnid36xgr80lq1j4xpz3mbiw57sc";
       libraryHaskellDepends = [
         aeson base base64-bytestring bytestring case-insensitive containers
         crypto-random directory focus hashable http-types hvect list-t
         monad-control mtl old-locale path-pieces random reroute
         resource-pool resourcet stm stm-containers text time transformers
         transformers-base unordered-containers vault wai wai-extra warp
       ];
       testHaskellDepends = [
         base base64-bytestring bytestring hspec hspec-wai http-types
         reroute stm text time unordered-containers wai wai-extra
       ];
       homepage = "http://www.spock.li";
       description = "Another Haskell web framework for rapid development";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Spock-digestive" = callPackage
    ({ mkDerivation, base, digestive-functors, http-types, mtl, Spock
     , text, unordered-containers, wai
     }:
     mkDerivation {
       pname = "Spock-digestive";
       version = "0.2.0.0";
       sha256 = "0q02122qqs96bxdn3wlq2s6nk38xk94whr63yp3szp5rsy41smz5";
       revision = "1";
       editedCabalFile = "0d8cmiyrq1yya9x6v60nggac20g6jcjsm9d07zz9i9a99c19q3h4";
       libraryHaskellDepends = [
         base digestive-functors http-types mtl Spock text
         unordered-containers wai
       ];
       homepage = "https://github.com/agrafix/Spock-digestive";
       description = "Digestive functors support for Spock";
       license = stdenv.lib.licenses.mit;
     }) {};
  "Spock-worker" = callPackage
    ({ mkDerivation, base, containers, HTF, lifted-base, mtl, Spock
     , stm, text, time, transformers, vector
     }:
     mkDerivation {
       pname = "Spock-worker";
       version = "0.2.1.3";
       sha256 = "0pxh7ccqb6xpab0807vsfb65lk4bafa44fram1f4d84slggyn1a1";
       libraryHaskellDepends = [
         base containers lifted-base mtl Spock stm text time transformers
         vector
       ];
       testHaskellDepends = [ base containers HTF stm vector ];
       homepage = "http://github.com/agrafix/Spock-worker";
       description = "Background workers for Spock";
       license = stdenv.lib.licenses.mit;
     }) {};
  "StateVar" = callPackage
    ({ mkDerivation, base, stm, transformers }:
     mkDerivation {
       pname = "StateVar";
       version = "1.1.0.3";
       sha256 = "0bxc1vf5knl3grfkr5lssrmbgcmyffxm9gk7kkpnr0l5a64yd55l";
       libraryHaskellDepends = [ base stm transformers ];
       homepage = "https://github.com/haskell-opengl/StateVar";
       description = "State variables";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Strafunski-StrategyLib" = callPackage
    ({ mkDerivation, base, directory, mtl, syb, transformers }:
     mkDerivation {
       pname = "Strafunski-StrategyLib";
       version = "5.0.0.8";
       sha256 = "09k9lcrrdzj6p7ywagc6mw17g4x9i743np36p4dkdp37q48j0mac";
       libraryHaskellDepends = [ base directory mtl syb transformers ];
       description = "Library for strategic programming";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "TCache" = callPackage
    ({ mkDerivation, base, bytestring, containers, directory
     , hashtables, mtl, old-time, RefSerialize, stm, text
     }:
     mkDerivation {
       pname = "TCache";
       version = "0.12.0";
       sha256 = "0marslz5jg66r3i2d0yjjrj11bpywpadcxs5k4j6782iczxybd7s";
       libraryHaskellDepends = [
         base bytestring containers directory hashtables mtl old-time
         RefSerialize stm text
       ];
       description = "A Transactional cache with user-defined persistence";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Taxonomy" = callPackage
    ({ mkDerivation, aeson, base, bytestring, either-unwrap, fgl
     , graphviz, parsec, text, vector
     }:
     mkDerivation {
       pname = "Taxonomy";
       version = "1.0.1";
       sha256 = "12d21iblgw0qxvyjamlmknkxfbp2kml1xy3m42mw0xbwhbf39m12";
       revision = "1";
       editedCabalFile = "1wv9ngz8nfkygmkdlkymlna6r8fh4n3g5q2lhgqc936zalsfi8mq";
       libraryHaskellDepends = [
         aeson base bytestring either-unwrap fgl graphviz parsec text vector
       ];
       description = "Libary for parsing, processing and vizualization of taxonomy data";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "TaxonomyTools" = callPackage
    ({ mkDerivation, aeson, base, bytestring, cassava, cmdargs
     , directory, either-unwrap, EntrezHTTP, fgl, hxt, parsec, process
     , Taxonomy, vector
     }:
     mkDerivation {
       pname = "TaxonomyTools";
       version = "1.0.0";
       sha256 = "0spj8aldrw8l10b52wn6dshdr0078qwwk0xfmgyj1dy614q4j6b0";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         aeson base bytestring cassava cmdargs directory either-unwrap
         EntrezHTTP fgl hxt parsec process Taxonomy vector
       ];
       doHaddock = false;
       description = "Tool for parsing, processing, comparing and visualizing taxonomy data";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "Unixutils" = callPackage
    ({ mkDerivation, base, bytestring, directory, exceptions, filepath
     , mtl, process, process-extras, pureMD5, regex-tdfa, unix, zlib
     }:
     mkDerivation {
       pname = "Unixutils";
       version = "1.54.1";
       sha256 = "0i16fg24n6lwn3jlh09bxdv1ip06ympkfvwmcj1nbcjcfhlmaagr";
       libraryHaskellDepends = [
         base bytestring directory exceptions filepath mtl process
         process-extras pureMD5 regex-tdfa unix zlib
       ];
       homepage = "https://github.com/seereason/haskell-unixutils.git";
       description = "A crude interface between Haskell and Unix-like operating systems";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ViennaRNAParser" = callPackage
    ({ mkDerivation, base, hspec, parsec, process, transformers }:
     mkDerivation {
       pname = "ViennaRNAParser";
       version = "1.2.8";
       sha256 = "0ppj805zj89s2l91hg2qq41dcav0f6318gfsqd6d0h0cdw18naax";
       libraryHaskellDepends = [ base parsec process transformers ];
       testHaskellDepends = [ base hspec parsec ];
       description = "Libary for parsing ViennaRNA package output";
       license = "GPL";
     }) {};
  "Win32" = callPackage
    ({ mkDerivation, advapi32, base, bytestring, gdi32, shell32
     , shfolder, user32, winmm
     }:
     mkDerivation {
       pname = "Win32";
       version = "2.3.1.0";
       sha256 = "1y9z682gmgjkrc8lijkidrlwh5pr30zgpvx2sc3gnvn8krg6jnk8";
       libraryHaskellDepends = [ base bytestring ];
       librarySystemDepends = [
         advapi32 gdi32 shell32 shfolder user32 winmm
       ];
       homepage = "https://github.com/haskell/win32";
       description = "A binding to part of the Win32 library";
       license = stdenv.lib.licenses.bsd3;
       platforms = stdenv.lib.platforms.none;
     }) {advapi32 = null; gdi32 = null; shell32 = null; shfolder = null;
         user32 = null; winmm = null;};
  "Win32-extras" = callPackage
    ({ mkDerivation, base, imm32, msimg32, Win32 }:
     mkDerivation {
       pname = "Win32-extras";
       version = "0.2.0.1";
       sha256 = "00lrqvsa74mqv0k4yz00j2jdpmchkyhcicqv24z9a53iv1i0xp7h";
       revision = "1";
       editedCabalFile = "0gxp1a5sk9jb7x1mvz5jk68n8npvh8b9nlqcw9s2dn4wlyicm4mp";
       libraryHaskellDepends = [ base Win32 ];
       librarySystemDepends = [ imm32 msimg32 ];
       homepage = "http://hub.darcs.net/shelarcy/Win32-extras/";
       description = "Provides missing Win32 API";
       license = stdenv.lib.licenses.bsd3;
     }) {imm32 = null; msimg32 = null;};
  "Win32-notify" = callPackage
    ({ mkDerivation, base, containers, directory, Win32 }:
     mkDerivation {
       pname = "Win32-notify";
       version = "0.3.0.1";
       sha256 = "0zzbb00rykl8y1prkcm3paaamhmdrqji34070b9zg7sg2pc5k4f4";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base containers directory Win32 ];
       executableHaskellDepends = [ base directory ];
       description = "A binding to part of the Win32 library for file notification";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Workflow" = callPackage
    ({ mkDerivation, base, binary, bytestring, containers, directory
     , exceptions, extensible-exceptions, mtl, old-time, RefSerialize
     , stm, TCache, vector
     }:
     mkDerivation {
       pname = "Workflow";
       version = "0.8.3";
       sha256 = "08r1s840771z1gy44dj3xc6ary7gk3ka3zvji5pmgzi998x4p6y8";
       revision = "1";
       editedCabalFile = "0jy6hn1lx9wpq44ld96msgb6a2hb6cvryn1a39b4rq4iy3m45r8v";
       libraryHaskellDepends = [
         base binary bytestring containers directory exceptions
         extensible-exceptions mtl old-time RefSerialize stm TCache vector
       ];
       description = "Workflow patterns over a monad for thread state logging & recovery";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "X11" = callPackage
    ({ mkDerivation, base, data-default, libX11, libXext, libXinerama
     , libXrandr, libXrender
     }:
     mkDerivation {
       pname = "X11";
       version = "1.6.1.2";
       sha256 = "1kzjcynm3rr83ihqx2y2d852jc49da4p18gv6jzm7g87z22x85jj";
       libraryHaskellDepends = [ base data-default ];
       librarySystemDepends = [
         libX11 libXext libXinerama libXrandr libXrender
       ];
       homepage = "https://github.com/haskell-pkg-janitors/X11";
       description = "A binding to the X11 graphics library";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs.xorg) libX11; inherit (pkgs.xorg) libXext;
         inherit (pkgs.xorg) libXinerama; inherit (pkgs.xorg) libXrandr;
         inherit (pkgs.xorg) libXrender;};
  "Xauth" = callPackage
    ({ mkDerivation, base, libXau }:
     mkDerivation {
       pname = "Xauth";
       version = "0.1";
       sha256 = "1mvflp6y1nz9961gngbwk0b7wr8sx3p6296jfvvb6ln1kvm2scxs";
       libraryHaskellDepends = [ base ];
       libraryPkgconfigDepends = [ libXau ];
       description = "A binding to the X11 authentication library";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs.xorg) libXau;};
  "Yampa" = callPackage
    ({ mkDerivation, base, deepseq, random }:
     mkDerivation {
       pname = "Yampa";
       version = "0.10.4";
       sha256 = "146p61x9kzxp0lg3b7vpa8838hscgbhgzclgzzdbxsaqi1k6n4kf";
       libraryHaskellDepends = [ base deepseq random ];
       testHaskellDepends = [ base ];
       homepage = "http://www.haskell.org/haskellwiki/Yampa";
       description = "Library for programming hybrid systems";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "YampaSynth" = callPackage
    ({ mkDerivation, array, base, bytestring, containers, HCodecs
     , Yampa
     }:
     mkDerivation {
       pname = "YampaSynth";
       version = "0.2";
       sha256 = "028a7lrfyikvky52s19kffssnry1grnip3sm7z55bs5fazma1im1";
       isLibrary = false;
       isExecutable = true;
       enableSeparateDataOutput = true;
       executableHaskellDepends = [
         array base bytestring containers HCodecs Yampa
       ];
       doHaddock = false;
       homepage = "http://www-db.informatik.uni-tuebingen.de/team/giorgidze";
       description = "Software synthesizer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "abstract-deque" = callPackage
    ({ mkDerivation, array, base, containers, random, time }:
     mkDerivation {
       pname = "abstract-deque";
       version = "0.3";
       sha256 = "18jwswjxwzc9bjiy4ds6hw2a74ki797jmfcifxd2ga4kh7ri1ah9";
       libraryHaskellDepends = [ array base containers random time ];
       homepage = "https://github.com/rrnewton/haskell-lockfree/wiki";
       description = "Abstract, parameterized interface to mutable Deques";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "abstract-par" = callPackage
    ({ mkDerivation, base, deepseq }:
     mkDerivation {
       pname = "abstract-par";
       version = "0.3.3";
       sha256 = "0q6qsniw4wks2pw6wzncb1p1j3k6al5njnvm2v5n494hplwqg2i4";
       libraryHaskellDepends = [ base deepseq ];
       homepage = "https://github.com/simonmar/monad-par";
       description = "Type classes generalizing the functionality of the 'monad-par' library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "accelerate" = callPackage
    ({ mkDerivation, array, base, containers, fclabels, ghc-prim
     , hashable, hashtables, pretty, template-haskell
     , unordered-containers
     }:
     mkDerivation {
       pname = "accelerate";
       version = "0.15.1.0";
       sha256 = "07bbam9za0g15vm0h0p9dypblw2f709v4qmvc52jcvmsv1drl3yv";
       revision = "1";
       editedCabalFile = "0dgzfcc2yjxqq5llvm19lak16ymsqghalm33y0calgp07fwkp1hj";
       libraryHaskellDepends = [
         array base containers fclabels ghc-prim hashable hashtables pretty
         template-haskell unordered-containers
       ];
       homepage = "https://github.com/AccelerateHS/accelerate/";
       description = "An embedded language for accelerated array processing";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ace" = callPackage
    ({ mkDerivation, attoparsec, base, bifunctors, blaze-html
     , blaze-markup, data-default, hspec, HUnit, mtl, parsec, text
     }:
     mkDerivation {
       pname = "ace";
       version = "0.6";
       sha256 = "0f07j2rj9ylvdrijwwlpx66mj503mhjfq1x2mylpxkr6kmjjniyk";
       libraryHaskellDepends = [
         attoparsec base blaze-html blaze-markup data-default parsec text
       ];
       testHaskellDepends = [
         base bifunctors hspec HUnit mtl parsec text
       ];
       description = "Attempto Controlled English parser and printer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "acid-state" = callPackage
    ({ mkDerivation, array, base, bytestring, cereal, containers
     , directory, extensible-exceptions, filepath, mtl, network
     , safecopy, stm, template-haskell, unix
     }:
     mkDerivation {
       pname = "acid-state";
       version = "0.14.0";
       sha256 = "0886a4d84wk279ia3ghlw32jm3ssip488hca8izpby8azvyw0z6v";
       revision = "3";
       editedCabalFile = "0gwlhfksmd1hlskb93bjfdwfci13r9vz81lg0cdjs4sshjbiywzf";
       libraryHaskellDepends = [
         array base bytestring cereal containers directory
         extensible-exceptions filepath mtl network safecopy stm
         template-haskell unix
       ];
       homepage = "http://acid-state.seize.it/";
       description = "Add ACID guarantees to any serializable Haskell data structure";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "action-permutations" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "action-permutations";
       version = "0.0.0.1";
       sha256 = "0rhlzpwshixpnqma7sk28f22dkwz39b6lcwnzmd31rcnz5cyw6d4";
       libraryHaskellDepends = [ base ];
       description = "Execute a set of actions (e.g. parsers) in each possible order";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "active" = callPackage
    ({ mkDerivation, base, lens, linear, QuickCheck, semigroupoids
     , semigroups, vector
     }:
     mkDerivation {
       pname = "active";
       version = "0.2.0.8";
       sha256 = "1pvzi2g2zng3knjaf3s0q6g2zar0rd4zmy52fcm3masb1g8mscx8";
       libraryHaskellDepends = [
         base lens linear semigroupoids semigroups vector
       ];
       testHaskellDepends = [
         base lens linear QuickCheck semigroupoids semigroups vector
       ];
       description = "Abstractions for animation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ad" = callPackage
    ({ mkDerivation, array, base, comonad, containers, criterion
     , data-reify, directory, doctest, erf, filepath, free, nats
     , reflection, transformers
     }:
     mkDerivation {
       pname = "ad";
       version = "4.3.2";
       sha256 = "1vfmffw21w2qb374ipd18fdljk3hyccpizmbhniz0ajbs543dv84";
       libraryHaskellDepends = [
         array base comonad containers data-reify erf free nats reflection
         transformers
       ];
       testHaskellDepends = [ base directory doctest filepath ];
       benchmarkHaskellDepends = [ base criterion erf ];
       homepage = "http://github.com/ekmett/ad";
       description = "Automatic Differentiation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "adjunctions" = callPackage
    ({ mkDerivation, array, base, comonad, containers, contravariant
     , distributive, free, mtl, profunctors, semigroupoids, semigroups
     , tagged, transformers, transformers-compat, void
     }:
     mkDerivation {
       pname = "adjunctions";
       version = "4.3";
       sha256 = "1k1ykisf96i4g2zm47c45md7p42c4vsp9r73392pz1g8mx7s2j5r";
       revision = "1";
       editedCabalFile = "1079l9szyr7ybi9wcvv1vjsjfrqirkn9z3j7dann8vbk81a4z37q";
       libraryHaskellDepends = [
         array base comonad containers contravariant distributive free mtl
         profunctors semigroupoids semigroups tagged transformers
         transformers-compat void
       ];
       homepage = "http://github.com/ekmett/adjunctions/";
       description = "Adjunctions and representable functors";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "aeson" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, containers, deepseq
     , dlist, ghc-prim, hashable, mtl, scientific, syb, template-haskell
     , text, time, transformers, unordered-containers, vector
     }:
     mkDerivation {
       pname = "aeson";
       version = "0.9.0.1";
       sha256 = "1g7qdq7zpyvqwmh4sfhizqpb51cg24lrcj9vq5msz8k896y7vfcj";
       revision = "2";
       editedCabalFile = "00nbqgmgabkkc0ibv67pimxd901mm7mj5bqywfygr5jx04nf75jp";
       libraryHaskellDepends = [
         attoparsec base bytestring containers deepseq dlist ghc-prim
         hashable mtl scientific syb template-haskell text time transformers
         unordered-containers vector
       ];
       doCheck = false;
       homepage = "https://github.com/bos/aeson";
       description = "Fast JSON parsing and encoding";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "aeson-better-errors" = callPackage
    ({ mkDerivation, aeson, base, bytestring, dlist, mtl, scientific
     , text, transformers, transformers-compat, unordered-containers
     , vector, void
     }:
     mkDerivation {
       pname = "aeson-better-errors";
       version = "0.9.0";
       sha256 = "00b9mjf636pfgg50961y86qbkpix19x5pvbzlha0mr0icqqaan76";
       libraryHaskellDepends = [
         aeson base bytestring dlist mtl scientific text transformers
         transformers-compat unordered-containers vector void
       ];
       homepage = "https://github.com/hdgarrood/aeson-better-errors";
       description = "Better error messages when decoding JSON values";
       license = stdenv.lib.licenses.mit;
     }) {};
  "aeson-casing" = callPackage
    ({ mkDerivation, aeson, base, tasty, tasty-hunit, tasty-quickcheck
     , tasty-th
     }:
     mkDerivation {
       pname = "aeson-casing";
       version = "0.1.0.5";
       sha256 = "0xq587sqn68gnx1np035wl5j1341v19h26d7b1c06bw2qqymdv6g";
       libraryHaskellDepends = [ aeson base ];
       testHaskellDepends = [
         aeson base tasty tasty-hunit tasty-quickcheck tasty-th
       ];
       description = "Tools to change the formatting of field names in Aeson instances";
       license = stdenv.lib.licenses.mit;
     }) {};
  "aeson-compat" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, bytestring, containers
     , exceptions, hashable, nats, QuickCheck, quickcheck-instances
     , scientific, tasty, tasty-hunit, tasty-quickcheck, text, time
     , time-locale-compat, unordered-containers, vector
     }:
     mkDerivation {
       pname = "aeson-compat";
       version = "0.3.1.0";
       sha256 = "0dnphr11a8hbmdhpvl678zamiq1812525s5w0q0fncql0c6h8xcj";
       revision = "2";
       editedCabalFile = "0jsz6q5f6c2hyx0dxixf91n3cbcywrl62hlipp4y5286f09gkmbf";
       libraryHaskellDepends = [
         aeson attoparsec base bytestring containers exceptions hashable
         nats scientific text time time-locale-compat unordered-containers
         vector
       ];
       testHaskellDepends = [
         aeson attoparsec base bytestring containers exceptions hashable
         nats QuickCheck quickcheck-instances scientific tasty tasty-hunit
         tasty-quickcheck text time time-locale-compat unordered-containers
         vector
       ];
       homepage = "https://github.com/phadej/aeson-compat#readme";
       description = "Compatibility layer for aeson";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "aeson-extra" = callPackage
    ({ mkDerivation, aeson, aeson-compat, base, base-compat, bytestring
     , containers, exceptions, hashable, parsec, quickcheck-instances
     , recursion-schemes, scientific, tasty, tasty-hunit
     , tasty-quickcheck, template-haskell, text, these, time
     , time-parsers, transformers, unordered-containers, vector
     }:
     mkDerivation {
       pname = "aeson-extra";
       version = "0.3.1.1";
       sha256 = "1v4g4lnsfdc3fnlkp7i292vi78k59c7p6sx2appxs838p6yldrhg";
       libraryHaskellDepends = [
         aeson aeson-compat base base-compat bytestring containers
         exceptions hashable parsec recursion-schemes scientific
         template-haskell text time time-parsers transformers
         unordered-containers vector
       ];
       testHaskellDepends = [
         aeson aeson-compat base base-compat bytestring containers
         exceptions hashable parsec quickcheck-instances scientific tasty
         tasty-hunit tasty-quickcheck template-haskell text these time
         time-parsers unordered-containers vector
       ];
       homepage = "https://github.com/phadej/aeson-extra#readme";
       description = "Extra goodies for aeson";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "aeson-pretty" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, bytestring, cmdargs, text
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "aeson-pretty";
       version = "0.7.2";
       sha256 = "03ap81853qi8yd9kdgczllrrni23a6glsfxrwj8zab6ipjrbh234";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base bytestring text unordered-containers vector
       ];
       executableHaskellDepends = [
         aeson attoparsec base bytestring cmdargs
       ];
       homepage = "http://github.com/informatikr/aeson-pretty";
       description = "JSON pretty-printing library and command-line tool";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "aeson-qq" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, base-compat, ghc-prim
     , haskell-src-meta, hspec, parsec, scientific, template-haskell
     , text, vector
     }:
     mkDerivation {
       pname = "aeson-qq";
       version = "0.8.1";
       sha256 = "1z8kh3qjc4khadz1ijdqm7fbk7dh17sisqhpwd3c9aibj2927k9d";
       libraryHaskellDepends = [
         aeson attoparsec base base-compat haskell-src-meta parsec
         scientific template-haskell text vector
       ];
       testHaskellDepends = [
         aeson attoparsec base base-compat ghc-prim haskell-src-meta hspec
         parsec scientific template-haskell text vector
       ];
       homepage = "http://github.com/zalora/aeson-qq";
       description = "JSON quasiquoter for Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};
  "aeson-utils" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, bytestring, scientific
     , text
     }:
     mkDerivation {
       pname = "aeson-utils";
       version = "0.3.0.2";
       sha256 = "07sbvmm158yqmw4hri9l66ag4r6l59x230gbjm9r97w4x0dlp0bi";
       revision = "5";
       editedCabalFile = "0v6p99nb8s61lc07a93xv94lfb4ybmv8aiqjq77lncs6qgpp97xf";
       libraryHaskellDepends = [
         aeson attoparsec base bytestring scientific text
       ];
       description = "Utilities for working with Aeson";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "agentx" = callPackage
    ({ mkDerivation, base, binary, bitwise, bytestring, containers
     , data-default, Diff, fclabels, mtl, network, pipes
     , pipes-concurrency, pipes-network, safe, snmp, time, transformers
     , unix
     }:
     mkDerivation {
       pname = "agentx";
       version = "0.2.0.0";
       sha256 = "0pmnrij90xag46af4c5yws5g26pf77l5ck864f4cyw5g9acw67g6";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base binary bitwise bytestring containers data-default Diff
         fclabels mtl network pipes pipes-concurrency pipes-network safe
         snmp time transformers unix
       ];
       executableHaskellDepends = [
         base binary bitwise bytestring containers data-default Diff
         fclabels mtl network pipes pipes-concurrency pipes-network safe
         snmp time transformers unix
       ];
       description = "AgentX protocol for write SNMP subagents";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "airship" = callPackage
    ({ mkDerivation, attoparsec, base, base64-bytestring, blaze-builder
     , bytestring, bytestring-trie, case-insensitive, cryptohash
     , directory, either, filepath, http-date, http-media, http-types
     , lifted-base, microlens, mime-types, mmorph, monad-control, mtl
     , network, old-locale, random, tasty, tasty-hunit, tasty-quickcheck
     , text, time, transformers, transformers-base, unix
     , unordered-containers, wai, wai-extra
     }:
     mkDerivation {
       pname = "airship";
       version = "0.4.3.0";
       sha256 = "0i35kax9vcxwjp6jig9dw1lhvd77jb5wf26f9gcbfly8crdkwyqv";
       revision = "1";
       editedCabalFile = "0hx925h20g73s7y5l71abnbz2ancya4mkd0gmw6xggk229fc5f37";
       libraryHaskellDepends = [
         attoparsec base base64-bytestring blaze-builder bytestring
         bytestring-trie case-insensitive cryptohash directory either
         filepath http-date http-media http-types lifted-base microlens
         mime-types mmorph monad-control mtl network old-locale random text
         time transformers transformers-base unix unordered-containers wai
         wai-extra
       ];
       testHaskellDepends = [
         base bytestring tasty tasty-hunit tasty-quickcheck text
         transformers wai
       ];
       homepage = "https://github.com/helium/airship/";
       description = "A Webmachine-inspired HTTP library";
       license = stdenv.lib.licenses.mit;
     }) {};
  "alarmclock" = callPackage
    ({ mkDerivation, base, stm, time, unbounded-delays }:
     mkDerivation {
       pname = "alarmclock";
       version = "0.2.0.8";
       sha256 = "1g06bnbp0y6dcz7zgbh828klk7xc1spwzw3ff6jpqh74cm82vq6f";
       libraryHaskellDepends = [ base stm time unbounded-delays ];
       testHaskellDepends = [ base time ];
       homepage = "https://bitbucket.org/davecturner/alarmclock";
       description = "Wake up and perform an action at a certain time";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "alex" = callPackage
    ({ mkDerivation, array, base, containers, directory, happy, process
     , QuickCheck
     }:
     mkDerivation {
       pname = "alex";
       version = "3.1.7";
       sha256 = "1l98px4df5l6rhqb6lkpav0gf7495qw795cd903b1gnclqys38c9";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         array base containers directory QuickCheck
       ];
       executableToolDepends = [ happy ];
       testHaskellDepends = [ base process ];
       doHaddock = false;
       homepage = "http://www.haskell.org/alex/";
       description = "Alex is a tool for generating lexical analysers in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "amazonka" = callPackage
    ({ mkDerivation, amazonka-core, base, bytestring, conduit
     , conduit-extra, directory, exceptions, http-conduit, ini, mmorph
     , monad-control, mtl, resourcet, retry, tasty, tasty-hunit, text
     , time, transformers, transformers-base, transformers-compat
     }:
     mkDerivation {
       pname = "amazonka";
       version = "1.3.7";
       sha256 = "15spd0by3jfhap0d7hjharas16j065f915qf0p63hikzq0wvxdaf";
       libraryHaskellDepends = [
         amazonka-core base bytestring conduit conduit-extra directory
         exceptions http-conduit ini mmorph monad-control mtl resourcet
         retry text time transformers transformers-base transformers-compat
       ];
       testHaskellDepends = [ base tasty tasty-hunit ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Comprehensive Amazon Web Services SDK";
       license = "unknown";
     }) {};
  "amazonka-apigateway" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-apigateway";
       version = "1.3.7";
       sha256 = "0lrr24bxfajy8a167f214icj41fh4rd3q1954vjwx0ski4r83p39";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon API Gateway SDK";
       license = "unknown";
     }) {};
  "amazonka-autoscaling" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-autoscaling";
       version = "1.3.7";
       sha256 = "096q6vz0rgx6hxaa0ca27fhv9yd6yh3p5gy25dnwyiy10p8jg76b";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Auto Scaling SDK";
       license = "unknown";
     }) {};
  "amazonka-cloudformation" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-cloudformation";
       version = "1.3.7";
       sha256 = "03dyhb4bab47srbj34q7hgjcj7zacl4gf8h913nh62jmihs7431j";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon CloudFormation SDK";
       license = "unknown";
     }) {};
  "amazonka-cloudfront" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-cloudfront";
       version = "1.3.7";
       sha256 = "0niwdg49dj3mzy691lp8n5an9xvbh5yi7abm94i8ll564laf1psb";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon CloudFront SDK";
       license = "unknown";
     }) {};
  "amazonka-cloudhsm" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-cloudhsm";
       version = "1.3.7";
       sha256 = "1ylihxpc398wyw5lbh107shb02j2zzr8dqf8y3fn32byy36g1pqx";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon CloudHSM SDK";
       license = "unknown";
     }) {};
  "amazonka-cloudsearch" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-cloudsearch";
       version = "1.3.7";
       sha256 = "1xml1sndr6c3f7cm6gw9hz8hhbrmqfa1vb0400jjhjlnvh0zy9cd";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon CloudSearch SDK";
       license = "unknown";
     }) {};
  "amazonka-cloudsearch-domains" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-cloudsearch-domains";
       version = "1.3.7";
       sha256 = "0p9qpls2pcyj9zkqlcjz9ygn84flgl0djbiz05p7k2qb6b0v99in";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon CloudSearch Domain SDK";
       license = "unknown";
     }) {};
  "amazonka-cloudtrail" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-cloudtrail";
       version = "1.3.7";
       sha256 = "1cbsykig51g6f4hbyihv740814j1vpbncq2jrda631qx000c58pi";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon CloudTrail SDK";
       license = "unknown";
     }) {};
  "amazonka-cloudwatch" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-cloudwatch";
       version = "1.3.7";
       sha256 = "1q1m7idarqkb1x4jp823azslyh69xap4bpk0izb2qpprb3qq59vw";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon CloudWatch SDK";
       license = "unknown";
     }) {};
  "amazonka-cloudwatch-logs" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-cloudwatch-logs";
       version = "1.3.7";
       sha256 = "09c0y9dv28lb4xa2gaqls7cdg0p7ds88jlcy217xqr3349asp7a7";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon CloudWatch Logs SDK";
       license = "unknown";
     }) {};
  "amazonka-codecommit" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-codecommit";
       version = "1.3.7";
       sha256 = "1dwva53772swrv5idbw70pylrlzmvsp4371vwc27lnsx1zb2pmbi";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon CodeCommit SDK";
       license = "unknown";
     }) {};
  "amazonka-codedeploy" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-codedeploy";
       version = "1.3.7";
       sha256 = "0hn86vwcihyyb5abamgislb5d4iwjgrgdlxw4yn02hzj7n0lhjqi";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon CodeDeploy SDK";
       license = "unknown";
     }) {};
  "amazonka-codepipeline" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-codepipeline";
       version = "1.3.7";
       sha256 = "1jw6cqxvjxf1w0lz5g6yg1yhgksr3ji3fpn8h98h1b4fl7k3s4cv";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon CodePipeline SDK";
       license = "unknown";
     }) {};
  "amazonka-cognito-identity" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-cognito-identity";
       version = "1.3.7";
       sha256 = "0h9nhpbzvhmykhia64m00wra7wkv3spnn08izn10rvbs7m7czc3q";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Cognito Identity SDK";
       license = "unknown";
     }) {};
  "amazonka-cognito-sync" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-cognito-sync";
       version = "1.3.7";
       sha256 = "0xsmdy1r54ca165hk6gpj93jmjhqmlk56kl0ckikjixdid1rl2jz";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Cognito Sync SDK";
       license = "unknown";
     }) {};
  "amazonka-config" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-config";
       version = "1.3.7";
       sha256 = "1yhjafpwi4n3wnfgnr03yp68m087bwivnjvy350i6ag3b8hp9njq";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Config SDK";
       license = "unknown";
     }) {};
  "amazonka-core" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, bifunctors, bytestring
     , case-insensitive, conduit, conduit-extra, cryptonite, exceptions
     , hashable, http-conduit, http-types, lens, memory, mtl, QuickCheck
     , quickcheck-unicode, resourcet, scientific, semigroups, tagged
     , tasty, tasty-hunit, tasty-quickcheck, template-haskell, text
     , time, transformers, transformers-compat, unordered-containers
     , xml-conduit, xml-types
     }:
     mkDerivation {
       pname = "amazonka-core";
       version = "1.3.7";
       sha256 = "0p70z0l5pjcxnj4h90hgzjl8laziw81bmhj9bzx4hvyd4fzaxj19";
       revision = "2";
       editedCabalFile = "11bxwqvskhvw7qly17xzmnx2wj00kv5yp1xwyjkc8vn3gynrxvxc";
       libraryHaskellDepends = [
         aeson attoparsec base bifunctors bytestring case-insensitive
         conduit conduit-extra cryptonite exceptions hashable http-conduit
         http-types lens memory mtl resourcet scientific semigroups tagged
         text time transformers transformers-compat unordered-containers
         xml-conduit xml-types
       ];
       testHaskellDepends = [
         aeson base bytestring case-insensitive http-types QuickCheck
         quickcheck-unicode tasty tasty-hunit tasty-quickcheck
         template-haskell text time
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Core data types and functionality for Amazonka libraries";
       license = "unknown";
     }) {};
  "amazonka-datapipeline" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-datapipeline";
       version = "1.3.7";
       sha256 = "1gdmkbrj8gvhjih6rvv24638scsa6xcyq23lsdywl51dzl1cvxbx";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Data Pipeline SDK";
       license = "unknown";
     }) {};
  "amazonka-devicefarm" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-devicefarm";
       version = "1.3.7";
       sha256 = "0ysfnxz8gq6iiz0msinalgxg7138hl9dv6ir9x85layvpiazhw7k";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Device Farm SDK";
       license = "unknown";
     }) {};
  "amazonka-directconnect" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-directconnect";
       version = "1.3.7";
       sha256 = "1jwxwlclsbqfm9qry5gx8nmb1mwlxqr11snpbjz9wl2ap09r44di";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Direct Connect SDK";
       license = "unknown";
     }) {};
  "amazonka-ds" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-ds";
       version = "1.3.7";
       sha256 = "0a3nisyl082yikgrynr7jhi7z1p7abmv5bwinxnxnqdzj0kvlxgx";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Directory Service SDK";
       license = "unknown";
     }) {};
  "amazonka-dynamodb" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-dynamodb";
       version = "1.3.7";
       sha256 = "0vhpj407hwwvqavv8jdm353aar1wdxh6hxnrkpy7y6nyjvnwl040";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon DynamoDB SDK";
       license = "unknown";
     }) {};
  "amazonka-dynamodb-streams" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-dynamodb-streams";
       version = "1.3.7";
       sha256 = "0whhjy2f1ymg7iprd75hd8qx1jdxsl2z1hhkm0sq30jwvr631dd3";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon DynamoDB Streams SDK";
       license = "unknown";
     }) {};
  "amazonka-ec2" = callPackage
    ({ mkDerivation, amazonka-core, base }:
     mkDerivation {
       pname = "amazonka-ec2";
       version = "1.3.7";
       sha256 = "0rcywmqn6096vicxyygs9szkhjiaq4s07sl6j4lwhz8ai356cvnp";
       libraryHaskellDepends = [ amazonka-core base ];
       doCheck = false;
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Elastic Compute Cloud SDK";
       license = "unknown";
     }) {};
  "amazonka-ecs" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-ecs";
       version = "1.3.7";
       sha256 = "07nm04n9a4dkg4991lczak9dgfsxjwbjc6r6i7lqbw1fl1pz8921";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon EC2 Container Service SDK";
       license = "unknown";
     }) {};
  "amazonka-efs" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-efs";
       version = "1.3.7";
       sha256 = "17r6qj7rxxgwdj68wx9mnxsayqlmwwphd1rxgh1vppjj6linj6mf";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Elastic File System SDK";
       license = "unknown";
     }) {};
  "amazonka-elasticache" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-elasticache";
       version = "1.3.7";
       sha256 = "1nfhdqk4j3gh89h516grncsbvbjma0lpi1pxbpciygy74askrm92";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon ElastiCache SDK";
       license = "unknown";
     }) {};
  "amazonka-elasticbeanstalk" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-elasticbeanstalk";
       version = "1.3.7";
       sha256 = "1m3d6lz7sy5dckxv2y6yknaqslfplv1a1f514ngjqq4rsnhvzrn4";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Elastic Beanstalk SDK";
       license = "unknown";
     }) {};
  "amazonka-elasticsearch" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-elasticsearch";
       version = "1.3.7";
       sha256 = "1d3mfp1ailwk34s2ak770qafqbn19czl7880jy4a5n8fc061aybi";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Elasticsearch Service SDK";
       license = "unknown";
     }) {};
  "amazonka-elastictranscoder" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-elastictranscoder";
       version = "1.3.7";
       sha256 = "131krqa4iay7x72vbwx74rxdypi9vkyjl98s25hf5vli1ik17n2m";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Elastic Transcoder SDK";
       license = "unknown";
     }) {};
  "amazonka-elb" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-elb";
       version = "1.3.7";
       sha256 = "1v3ji1fffh67n7qpnm3zyazp965irj3hxij4lbha2bpsgw7xfwjx";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Elastic Load Balancing SDK";
       license = "unknown";
     }) {};
  "amazonka-emr" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-emr";
       version = "1.3.7";
       sha256 = "1z1m3mqh6n4rb8zx2w0qmkvfjxh20pan0pxfmq0j18qvdi0wkn6g";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Elastic MapReduce SDK";
       license = "unknown";
     }) {};
  "amazonka-glacier" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-glacier";
       version = "1.3.7";
       sha256 = "016vcwgici34qmhcwa54kzyq081k7jlgch3ff4x46nwiz7z9gvhq";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Glacier SDK";
       license = "unknown";
     }) {};
  "amazonka-iam" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-iam";
       version = "1.3.7";
       sha256 = "0i9r3c3bv3vlxlwq99vjcsyd7g9a16fvn33z61aj1y04wz3n651h";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Identity and Access Management SDK";
       license = "unknown";
     }) {};
  "amazonka-importexport" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-importexport";
       version = "1.3.7";
       sha256 = "0vdfycpkin4c4ldsrcacrnbwznxv3nm0vkqlcqfd0rgkq1ybfh7c";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Import/Export SDK";
       license = "unknown";
     }) {};
  "amazonka-inspector" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-inspector";
       version = "1.3.7";
       sha256 = "1lm7jcbmakzac1lni1h2kbb0if5rpcwbw162n71bzq4x9g4yxyga";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Inspector SDK";
       license = "unknown";
     }) {};
  "amazonka-iot" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-iot";
       version = "1.3.7";
       sha256 = "1qyfnb894kf5bwmwq8cwmgjz4gfi6ssda7y3hkpzkiqsxkr5nlby";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon IoT SDK";
       license = "unknown";
     }) {};
  "amazonka-iot-dataplane" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-iot-dataplane";
       version = "1.3.7";
       sha256 = "0f0mdzc2y55aw2zvmw04dmn52wn9xm6dbnk6xhixd92wrh58cvyy";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon IoT Data Plane SDK";
       license = "unknown";
     }) {};
  "amazonka-kinesis" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-kinesis";
       version = "1.3.7";
       sha256 = "0hsb252rgac6jlp7g22shw6f9767gv3kxlixc5zy00ma7gy8861j";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Kinesis SDK";
       license = "unknown";
     }) {};
  "amazonka-kinesis-firehose" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-kinesis-firehose";
       version = "1.3.7";
       sha256 = "06jdcdm6sjz7xr47pdxfq9xyk714ppf6sfnim8si06xj7ydpnmba";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Kinesis Firehose SDK";
       license = "unknown";
     }) {};
  "amazonka-kms" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-kms";
       version = "1.3.7";
       sha256 = "1r4xbir376dw8l08ckjasbcgxais2wsyw0iqa992ncys2vyzzbrd";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Key Management Service SDK";
       license = "unknown";
     }) {};
  "amazonka-lambda" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-lambda";
       version = "1.3.7";
       sha256 = "142zvpi10nqbyic520v3xz5307k9j79ck92z1ndkjcq2a5rlk96b";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Lambda SDK";
       license = "unknown";
     }) {};
  "amazonka-marketplace-analytics" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-marketplace-analytics";
       version = "1.3.7";
       sha256 = "13jdr9v39hmwr68mwryv0hn64lp71i7rxccgv7bw8f4ny7cq1w7a";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Marketplace Commerce Analytics SDK";
       license = "unknown";
     }) {};
  "amazonka-ml" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-ml";
       version = "1.3.7";
       sha256 = "07pkk97f5y1xdapvavx1dw64sc1z9zw1vmzanp97pndabrpdgkh5";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Machine Learning SDK";
       license = "unknown";
     }) {};
  "amazonka-opsworks" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-opsworks";
       version = "1.3.7";
       sha256 = "1ffvr9yphjsq1xws50c1awwmd4f7hq06kcc4gvr8q1h8svnpqdnh";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon OpsWorks SDK";
       license = "unknown";
     }) {};
  "amazonka-rds" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-rds";
       version = "1.3.7";
       sha256 = "0x9a2nzw7gmb1a65jh7iwal3bp1k6s5s1d7vgnfjfl7x70nv8x58";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Relational Database Service SDK";
       license = "unknown";
     }) {};
  "amazonka-redshift" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-redshift";
       version = "1.3.7";
       sha256 = "00cd4vnsasvwfrd13pj7qb8pl5pc3cfg1g5kf3aba96pky2rfryd";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Redshift SDK";
       license = "unknown";
     }) {};
  "amazonka-route53" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-route53";
       version = "1.3.7";
       sha256 = "0262zcs4d4l47n95ivnl3drsj5k1glqzwifi436x30kj7kw12s6c";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Route 53 SDK";
       license = "unknown";
     }) {};
  "amazonka-route53-domains" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-route53-domains";
       version = "1.3.7";
       sha256 = "1p1074zyfxx9hfllh0mj2fy4qh5k439aqs2p7ffyy5zmb0z199dj";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Route 53 Domains SDK";
       license = "unknown";
     }) {};
  "amazonka-s3" = callPackage
    ({ mkDerivation, amazonka-core, base, lens, text }:
     mkDerivation {
       pname = "amazonka-s3";
       version = "1.3.7";
       sha256 = "080nkgzq9b3mm46c1xg037gwxq5j0llizjwbya7prl7i69m5r1ns";
       libraryHaskellDepends = [ amazonka-core base lens text ];
       doCheck = false;
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Simple Storage Service SDK";
       license = "unknown";
     }) {};
  "amazonka-sdb" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-sdb";
       version = "1.3.7";
       sha256 = "0w8x6imnl15p6i3cfcry3jsqm723ccsbkl5ydq7zavmmwiam9xkc";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon SimpleDB SDK";
       license = "unknown";
     }) {};
  "amazonka-ses" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-ses";
       version = "1.3.7";
       sha256 = "1cr99bmsqcqp4fq6yn6k2ga1797yxvwqxv58m72rnvgad9vr7ma2";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Simple Email Service SDK";
       license = "unknown";
     }) {};
  "amazonka-sns" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-sns";
       version = "1.3.7";
       sha256 = "1r1fc4y40567gy46ws0jnmcfps047zgpnv5q9c3rx1g2fgn1lsga";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Simple Notification Service SDK";
       license = "unknown";
     }) {};
  "amazonka-sqs" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-sqs";
       version = "1.3.7";
       sha256 = "0wlijvg42yf0awf4sp7np6qfn8d2gq7a28jni2dr96iw85h3r3n1";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Simple Queue Service SDK";
       license = "unknown";
     }) {};
  "amazonka-ssm" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-ssm";
       version = "1.3.7";
       sha256 = "1ni0ky2ljhpr2nyx5vp0ywrijiv2qlz8m0y5jzhjfqq6q2phv6av";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Simple Systems Management Service SDK";
       license = "unknown";
     }) {};
  "amazonka-storagegateway" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-storagegateway";
       version = "1.3.7";
       sha256 = "0j03qbdjpczgv6zsfgr7f86llb0k48v8crp9pky4a916m5vy4gfl";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Storage Gateway SDK";
       license = "unknown";
     }) {};
  "amazonka-sts" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-sts";
       version = "1.3.7";
       sha256 = "11il02lw362s2pfzqnqihlzdz2xc6cr2v04r65dx0jgc896kl4fb";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Security Token Service SDK";
       license = "unknown";
     }) {};
  "amazonka-support" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-support";
       version = "1.3.7";
       sha256 = "1ln0sv097zs2y9w88nz6jhn3xcs0khhqnd0nrr9mn6i9vp2l12vc";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Support SDK";
       license = "unknown";
     }) {};
  "amazonka-swf" = callPackage
    ({ mkDerivation, amazonka-core, base }:
     mkDerivation {
       pname = "amazonka-swf";
       version = "1.3.7";
       sha256 = "1c0rf6fq5y4ycl0i72ccfyiy89j7amr7b37bilyr2y8dln69jnmr";
       libraryHaskellDepends = [ amazonka-core base ];
       doCheck = false;
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon Simple Workflow Service SDK";
       license = "unknown";
     }) {};
  "amazonka-test" = callPackage
    ({ mkDerivation, aeson, amazonka-core, base, bifunctors, bytestring
     , case-insensitive, conduit, conduit-extra, groom, http-client
     , http-types, process, resourcet, tasty, tasty-hunit
     , template-haskell, temporary, text, time, unordered-containers
     , yaml
     }:
     mkDerivation {
       pname = "amazonka-test";
       version = "1.3.7";
       sha256 = "1ngq89m76793msci98iwkchlax16ya68cab5wy5ip7kdnzw10x0d";
       libraryHaskellDepends = [
         aeson amazonka-core base bifunctors bytestring case-insensitive
         conduit conduit-extra groom http-client http-types process
         resourcet tasty tasty-hunit template-haskell temporary text time
         unordered-containers yaml
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Common functionality for Amazonka library test-suites";
       license = "unknown";
     }) {};
  "amazonka-waf" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-waf";
       version = "1.3.7";
       sha256 = "1jqjn1cp3n2cv72yq7bkslzwg0fghj6shf17ixmqdnh82dkk87a3";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon WAF SDK";
       license = "unknown";
     }) {};
  "amazonka-workspaces" = callPackage
    ({ mkDerivation, amazonka-core, amazonka-test, base, bytestring
     , tasty, tasty-hunit, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "amazonka-workspaces";
       version = "1.3.7";
       sha256 = "1jdrd31yrr519b7pliy8can527pmqn7lzifz8884c3rg98ybr8sj";
       libraryHaskellDepends = [ amazonka-core base ];
       testHaskellDepends = [
         amazonka-core amazonka-test base bytestring tasty tasty-hunit text
         time unordered-containers
       ];
       homepage = "https://github.com/brendanhay/amazonka";
       description = "Amazon WorkSpaces SDK";
       license = "unknown";
     }) {};
  "amqp" = callPackage
    ({ mkDerivation, base, binary, bytestring, clock, connection
     , containers, data-binary-ieee754, hspec, hspec-expectations
     , monad-control, network, network-uri, split, stm, text, vector
     , xml
     }:
     mkDerivation {
       pname = "amqp";
       version = "0.13.1";
       sha256 = "1bnl1pxgjzy012cs4zkscfpy5hp3r5rvybnm483bzhpi50r559iy";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base binary bytestring clock connection containers
         data-binary-ieee754 monad-control network network-uri split stm
         text vector
       ];
       executableHaskellDepends = [ base containers xml ];
       testHaskellDepends = [
         base binary bytestring clock connection containers
         data-binary-ieee754 hspec hspec-expectations network network-uri
         split stm text vector
       ];
       doCheck = false;
       homepage = "https://github.com/hreinhardt/amqp";
       description = "Client library for AMQP servers (currently only RabbitMQ)";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "angel" = callPackage
    ({ mkDerivation, base, configurator, containers, mtl, old-locale
     , optparse-applicative, process, stm, tasty, tasty-hunit
     , tasty-quickcheck, text, time, transformers, unix
     , unordered-containers
     }:
     mkDerivation {
       pname = "angel";
       version = "0.6.2";
       sha256 = "0n73w8lczsncagf2041lq1963mnsmw9albwy0n5qbhqx9030pzya";
       revision = "1";
       editedCabalFile = "0gx208vshdw6bm2id4a5rcacdw44n5ia0q6jmjhk1qfx4s2krp5q";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         base configurator containers mtl old-locale optparse-applicative
         process stm text time transformers unix unordered-containers
       ];
       testHaskellDepends = [
         base configurator containers mtl old-locale process stm tasty
         tasty-hunit tasty-quickcheck text time transformers unix
         unordered-containers
       ];
       doHaddock = false;
       doCheck = false;
       homepage = "http://github.com/MichaelXavier/Angel";
       description = "Process management and supervision daemon";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "annotated-wl-pprint" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "annotated-wl-pprint";
       version = "0.7.0";
       sha256 = "061xfz6qany3wf95csl8dcik2pz22cn8iv1qchhm16isw5zjs9hc";
       revision = "1";
       editedCabalFile = "138k24qxvl90l7dwdw1b3w36mpw93n0xi0nljblqg88pxg7jcvjx";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/david-christiansen/annotated-wl-pprint";
       description = "The Wadler/Leijen Pretty Printer, with annotation support";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "anonymous-sums" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "anonymous-sums";
       version = "0.4.0.0";
       sha256 = "0jb7s6m7dblnydrzh5nsczr0kpqwy9gr346pcrxsaywz2gfjcrhi";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base ];
       executableHaskellDepends = [ base ];
       homepage = "http://www.github.com/massysett/anonymous-sums";
       description = "Anonymous sum types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ansi-terminal" = callPackage
    ({ mkDerivation, base, unix }:
     mkDerivation {
       pname = "ansi-terminal";
       version = "0.6.2.3";
       sha256 = "0hpfw0k025y681m9ml1c712skrb1p4vh7z5x1f0ci9ww7ssjrh2d";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base unix ];
       executableHaskellDepends = [ base unix ];
       homepage = "https://github.com/feuerbach/ansi-terminal";
       description = "Simple ANSI terminal support, with Windows compatibility";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ansi-wl-pprint" = callPackage
    ({ mkDerivation, ansi-terminal, base }:
     mkDerivation {
       pname = "ansi-wl-pprint";
       version = "0.6.7.3";
       sha256 = "025pyphsjf0dnbrmj5nscbi6gzyigwgp3ifxb3psn7kji6mfr29p";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ ansi-terminal base ];
       executableHaskellDepends = [ ansi-terminal base ];
       homepage = "http://github.com/ekmett/ansi-wl-pprint";
       description = "The Wadler/Leijen Pretty Printer for colored ANSI terminal output";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "apiary" = callPackage
    ({ mkDerivation, base, blaze-builder, blaze-html, blaze-markup
     , bytestring, bytestring-read, case-insensitive, data-default-class
     , exceptions, hashable, http-date, http-types, HUnit, mime-types
     , monad-control, mtl, process, stringsearch, tasty, tasty-hunit
     , tasty-quickcheck, template-haskell, text, time, transformers
     , transformers-base, types-compat, unix-compat
     , unordered-containers, vault, wai, wai-extra, web-routing
     }:
     mkDerivation {
       pname = "apiary";
       version = "1.4.5";
       sha256 = "04wk890jywy5sssgza159306y5pbghn0xg41xwrry85n4j4qjvvc";
       revision = "3";
       editedCabalFile = "0alz639d6xmx626r0kzb1w7svnv23rq6xqschisg3y071j44ygpk";
       libraryHaskellDepends = [
         base blaze-builder blaze-html blaze-markup bytestring
         bytestring-read case-insensitive data-default-class exceptions
         hashable http-date http-types mime-types monad-control mtl process
         stringsearch template-haskell text time transformers
         transformers-base types-compat unix-compat unordered-containers
         vault wai wai-extra web-routing
       ];
       testHaskellDepends = [
         base bytestring http-types HUnit mtl tasty tasty-hunit
         tasty-quickcheck wai wai-extra
       ];
       homepage = "https://github.com/philopon/apiary";
       description = "Simple and type safe web framework that generate web API documentation";
       license = stdenv.lib.licenses.mit;
     }) {};
  "apiary-authenticate" = callPackage
    ({ mkDerivation, apiary, apiary-session, authenticate, base
     , blaze-builder, bytestring, cereal, data-default-class
     , http-client, http-client-tls, http-types, monad-control
     , resourcet, text, types-compat, wai, web-routing
     }:
     mkDerivation {
       pname = "apiary-authenticate";
       version = "1.4.0";
       sha256 = "01yivdslscbri4gy19mma794v9v2gnf94wlvms8p1flrcw6xpns0";
       revision = "5";
       editedCabalFile = "0jndacr6vcnh14d7bd10v9jl2qcpzfwr223j7x1f6zza70r2p5rl";
       libraryHaskellDepends = [
         apiary apiary-session authenticate base blaze-builder bytestring
         cereal data-default-class http-client http-client-tls http-types
         monad-control resourcet text types-compat wai web-routing
       ];
       homepage = "https://github.com/philopon/apiary";
       description = "authenticate support for apiary web framework";
       license = stdenv.lib.licenses.mit;
     }) {};
  "apiary-clientsession" = callPackage
    ({ mkDerivation, apiary, apiary-cookie, apiary-session, base
     , bytestring, cereal, clientsession, data-default-class, time
     , unix-compat, vault
     }:
     mkDerivation {
       pname = "apiary-clientsession";
       version = "1.4.0";
       sha256 = "1z96c4zfyyvrihr1al9zp6pwv4wxkfq02a1z63bxxrrfglrs3fx6";
       revision = "3";
       editedCabalFile = "06kcmwm1mrvqmbl510ni2j1rdsrzhs81xsjia5wlyhn4jr4192ag";
       libraryHaskellDepends = [
         apiary apiary-cookie apiary-session base bytestring cereal
         clientsession data-default-class time unix-compat vault
       ];
       homepage = "https://github.com/philopon/apiary";
       description = "clientsession support for apiary web framework";
       license = stdenv.lib.licenses.mit;
     }) {};
  "apiary-cookie" = callPackage
    ({ mkDerivation, apiary, base, blaze-builder, blaze-html
     , bytestring, cookie, time, types-compat, wai, web-routing
     }:
     mkDerivation {
       pname = "apiary-cookie";
       version = "1.4.0";
       sha256 = "017bxqavv4w5r2ghgmyhljqa4fyzl02v2sjwxi056s3phgrlrkrx";
       revision = "4";
       editedCabalFile = "0qc5nzjak8zb5i3kavz7hi1qy6ywalsrgj2wrxdb53jwac76gigc";
       libraryHaskellDepends = [
         apiary base blaze-builder blaze-html bytestring cookie time
         types-compat wai web-routing
       ];
       homepage = "https://github.com/philopon/apiary";
       description = "Cookie support for apiary web framework";
       license = stdenv.lib.licenses.mit;
     }) {};
  "apiary-eventsource" = callPackage
    ({ mkDerivation, apiary, base, blaze-builder, wai-extra }:
     mkDerivation {
       pname = "apiary-eventsource";
       version = "1.4.0";
       sha256 = "0xh1pm1l59n4c48vbk3ls42fxh4lzr6p8k8rmij1hl58zrkgbjd7";
       revision = "2";
       editedCabalFile = "15fc0hdrcic1nk62znn3dcq6dp00d0msl38kb7pdapvkpnyh1z0g";
       libraryHaskellDepends = [ apiary base blaze-builder wai-extra ];
       homepage = "https://github.com/philopon/apiary";
       description = "eventsource support for apiary web framework";
       license = stdenv.lib.licenses.mit;
     }) {};
  "apiary-logger" = callPackage
    ({ mkDerivation, apiary, base, data-default-class, fast-logger
     , lifted-base, monad-control, monad-logger, transformers
     , transformers-base, types-compat
     }:
     mkDerivation {
       pname = "apiary-logger";
       version = "1.4.0";
       sha256 = "0pf030sn4mf05avl11hs9kz6qi9667s2vavn3wsxp1anl9bghk48";
       revision = "4";
       editedCabalFile = "1qs3fxaiybyb4g9d4w393yxwsxr4b6wzg5va7qmlqpcavr9l1224";
       libraryHaskellDepends = [
         apiary base data-default-class fast-logger lifted-base
         monad-control monad-logger transformers transformers-base
         types-compat
       ];
       homepage = "https://github.com/philopon/apiary";
       description = "fast-logger support for apiary web framework";
       license = stdenv.lib.licenses.mit;
     }) {};
  "apiary-memcached" = callPackage
    ({ mkDerivation, apiary, base, bytestring, data-default-class
     , memcached-binary, monad-control, text, transformers, types-compat
     }:
     mkDerivation {
       pname = "apiary-memcached";
       version = "1.4.0";
       sha256 = "1rwkj7byc84yism5sxphs1s231910ay8w7lap2cdg0y9k9f24gby";
       revision = "2";
       editedCabalFile = "1rqxpw0rhzqf678jpn7vdircp96q86f0j2w7id2a4bpgmixhfy9s";
       libraryHaskellDepends = [
         apiary base bytestring data-default-class memcached-binary
         monad-control text transformers types-compat
       ];
       homepage = "https://github.com/philopon/apiary";
       description = "memcached client for apiary web framework";
       license = stdenv.lib.licenses.mit;
     }) {};
  "apiary-mongoDB" = callPackage
    ({ mkDerivation, apiary, base, bson, data-default-class
     , lifted-base, monad-control, mongoDB, resource-pool, text, time
     , transformers, types-compat
     }:
     mkDerivation {
       pname = "apiary-mongoDB";
       version = "1.4.0";
       sha256 = "1srnkyw1i0vjarwqg13cmnwc0x0ab5m8scax9wd4scsmblpa75wd";
       revision = "2";
       editedCabalFile = "1pk0axkr5zrlbyqskznh050ahvpnccdpa0ixfn3i5sw26nnva4ny";
       libraryHaskellDepends = [
         apiary base bson data-default-class lifted-base monad-control
         mongoDB resource-pool text time transformers types-compat
       ];
       homepage = "https://github.com/philopon/apiary";
       description = "mongoDB support for apiary web framework";
       license = stdenv.lib.licenses.mit;
     }) {};
  "apiary-persistent" = callPackage
    ({ mkDerivation, apiary, apiary-logger, base, monad-control
     , monad-logger, persistent, resource-pool, resourcet, transformers
     , transformers-base, types-compat, web-routing
     }:
     mkDerivation {
       pname = "apiary-persistent";
       version = "1.4.0";
       sha256 = "00jaiykbxj1lh8qgv4y0ma9awaj1ymrjskwr9ra5pmka1mrwbih9";
       revision = "3";
       editedCabalFile = "17i3l8aj2k1hzlmyf2h4jl5savbrdvnvz2i8riwcmwfqgnmcfdc2";
       libraryHaskellDepends = [
         apiary apiary-logger base monad-control monad-logger persistent
         resource-pool resourcet transformers transformers-base types-compat
         web-routing
       ];
       homepage = "https://github.com/philopon/apiary";
       description = "persistent support for apiary web framework";
       license = stdenv.lib.licenses.mit;
     }) {};
  "apiary-session" = callPackage
    ({ mkDerivation, apiary, base, types-compat, wai, web-routing }:
     mkDerivation {
       pname = "apiary-session";
       version = "1.4.0";
       sha256 = "0jnppjykcrzdvlsli2ycyc11874dfqhwayny5p3x8nx9hnwxhk23";
       revision = "3";
       editedCabalFile = "04yrlp26dbhhybqvviajmd85vrcdbscmbw4nmag32wfnz5xdb0qr";
       libraryHaskellDepends = [
         apiary base types-compat wai web-routing
       ];
       homepage = "https://github.com/philopon/apiary";
       description = "session support for apiary web framework";
       license = stdenv.lib.licenses.mit;
     }) {};
  "apiary-websockets" = callPackage
    ({ mkDerivation, apiary, base, wai-websockets, web-routing
     , websockets
     }:
     mkDerivation {
       pname = "apiary-websockets";
       version = "1.4.0";
       sha256 = "0nslzy0s24jn58jd1q4z2gf0h7n1y2xks7cw86i9ybdph697wpp1";
       revision = "2";
       editedCabalFile = "1s8mpk1h6a6yxmwivclawwn20s2zs094cvbphl8ymil8mm505n3j";
       libraryHaskellDepends = [
         apiary base wai-websockets web-routing websockets
       ];
       homepage = "https://github.com/philopon/apiary";
       description = "websockets support for apiary web framework";
       license = stdenv.lib.licenses.mit;
     }) {};
  "app-settings" = callPackage
    ({ mkDerivation, base, containers, directory, hspec, HUnit, mtl
     , parsec, text
     }:
     mkDerivation {
       pname = "app-settings";
       version = "0.2.0.7";
       sha256 = "1y7r0xm19k1lgrpmnl9vsk9p74k2ki3bh337b4aacqs8wrfnfsmx";
       libraryHaskellDepends = [
         base containers directory mtl parsec text
       ];
       testHaskellDepends = [
         base containers directory hspec HUnit mtl parsec text
       ];
       homepage = "https://github.com/emmanueltouzery/app-settings";
       description = "A library to manage application settings (INI file-like)";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "appar" = callPackage
    ({ mkDerivation, base, bytestring }:
     mkDerivation {
       pname = "appar";
       version = "0.1.4";
       sha256 = "09jb9ij78fdkz2qk66rw99q19qnm504dpv0yq0pjsl6xwjmndsjq";
       libraryHaskellDepends = [ base bytestring ];
       description = "A simple applicative parser";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "apply-refact" = callPackage
    ({ mkDerivation, base, containers, directory, filemanip, filepath
     , ghc, ghc-exactprint, mtl, optparse-applicative, process, refact
     , silently, syb, tasty, tasty-expected-failure, tasty-golden
     , temporary-rc, transformers, unix-compat
     }:
     mkDerivation {
       pname = "apply-refact";
       version = "0.1.0.0";
       sha256 = "1nb4bi4mlznygrjvry0g82m10l0qajgjv1wcpni82adinx30vf8f";
       revision = "2";
       editedCabalFile = "149y766pf21vzfpjs0ynkh7l2y7vc9mq2yhj9swbdqniakb9spwl";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base containers directory ghc ghc-exactprint mtl process refact syb
       ];
       executableHaskellDepends = [
         base containers directory filemanip filepath ghc ghc-exactprint mtl
         optparse-applicative process refact syb temporary-rc transformers
         unix-compat
       ];
       testHaskellDepends = [
         base containers directory filemanip filepath ghc ghc-exactprint mtl
         optparse-applicative process refact silently syb tasty
         tasty-expected-failure tasty-golden temporary-rc transformers
         unix-compat
       ];
       description = "Perform refactorings specified by the refact library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "approximate" = callPackage
    ({ mkDerivation, base, binary, bytes, cereal, comonad, deepseq
     , directory, doctest, filepath, ghc-prim, hashable, hashable-extras
     , lens, log-domain, pointed, safecopy, semigroupoids, semigroups
     , simple-reflect, vector
     }:
     mkDerivation {
       pname = "approximate";
       version = "0.2.2.3";
       sha256 = "1b1b61an77k0dxz60w8f07mw7s36i39nnnrcdqn5kg9npmnc3z90";
       libraryHaskellDepends = [
         base binary bytes cereal comonad deepseq ghc-prim hashable
         hashable-extras lens log-domain pointed safecopy semigroupoids
         semigroups vector
       ];
       testHaskellDepends = [
         base directory doctest filepath semigroups simple-reflect
       ];
       homepage = "http://github.com/analytics/approximate/";
       description = "Approximate discrete values and numbers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "arbtt" = callPackage
    ({ mkDerivation, aeson, array, base, binary, bytestring
     , bytestring-progress, containers, deepseq, directory, filepath
     , libXScrnSaver, parsec, pcre-light, process-extras, strict, tasty
     , tasty-golden, tasty-hunit, terminal-progress-bar, time
     , transformers, unix, utf8-string, X11
     }:
     mkDerivation {
       pname = "arbtt";
       version = "0.9.0.8";
       sha256 = "1fq22svw51bd0hpyi3f2jfwwavd8v3xn2h3wmh22qqgn9lnygq6d";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         aeson array base binary bytestring bytestring-progress containers
         deepseq directory filepath parsec pcre-light strict
         terminal-progress-bar time transformers unix utf8-string X11
       ];
       executableSystemDepends = [ libXScrnSaver ];
       testHaskellDepends = [
         base binary bytestring containers deepseq directory parsec
         pcre-light process-extras tasty tasty-golden tasty-hunit time
         transformers unix utf8-string
       ];
       doHaddock = false;
       homepage = "http://arbtt.nomeata.de/";
       description = "Automatic Rule-Based Time Tracker";
       license = "GPL";
     }) {inherit (pkgs.xorg) libXScrnSaver;};
  "argon" = callPackage
    ({ mkDerivation, aeson, ansi-terminal, base, bytestring, Cabal
     , containers, directory, docopt, filepath, ghc, ghc-paths
     , ghc-syb-utils, lens-simple, pathwalk, pipes, pipes-group, syb
     }:
     mkDerivation {
       pname = "argon";
       version = "0.4.0.0";
       sha256 = "1698b1pf4a2hb455bi7d305lxv8jx8q51pjv0lfsz2nw4dz3bka9";
       revision = "1";
       editedCabalFile = "0q209j4ppjahw30wcgn8gh6v3nvdhggrq8wqk74hmmsl4li6j7vb";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson ansi-terminal base bytestring Cabal containers directory
         filepath ghc ghc-paths ghc-syb-utils lens-simple pathwalk pipes
         pipes-group syb
       ];
       executableHaskellDepends = [ base docopt pipes ];
       doCheck = false;
       homepage = "http://github.com/rubik/argon";
       description = "Measure your code's complexity";
       license = stdenv.lib.licenses.isc;
     }) {};
  "arrow-list" = callPackage
    ({ mkDerivation, base, containers, mtl }:
     mkDerivation {
       pname = "arrow-list";
       version = "0.7";
       sha256 = "1n6m77hdkpjd12r0b8fwxiz3jz0j86cplgsk27m2raj86vr3dy1k";
       libraryHaskellDepends = [ base containers mtl ];
       homepage = "https://github.com/silkapp/arrow-list";
       description = "List arrows for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ascii-progress" = callPackage
    ({ mkDerivation, async, base, concurrent-output, data-default
     , hspec, QuickCheck, time
     }:
     mkDerivation {
       pname = "ascii-progress";
       version = "0.3.2.0";
       sha256 = "0wf79029a2m85xzqibymd45hypbn1h455gs3s7v3i4fk3w6hm9si";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         async base concurrent-output data-default time
       ];
       testHaskellDepends = [
         async base concurrent-output data-default hspec QuickCheck time
       ];
       homepage = "https://github.com/yamadapc/haskell-ascii-progress";
       description = "A simple progress bar for the console";
       license = stdenv.lib.licenses.mit;
     }) {};
  "asciidiagram" = callPackage
    ({ mkDerivation, base, bytestring, containers, directory, filepath
     , FontyFruity, JuicyPixels, lens, linear, mtl, optparse-applicative
     , rasterific-svg, svg-tree, text, vector
     }:
     mkDerivation {
       pname = "asciidiagram";
       version = "1.1.1.1";
       sha256 = "0nzg4m1nd41x6fyki5qva5jj80sl7jd1z1gd674v50zchkw71a9m";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring containers FontyFruity JuicyPixels lens linear mtl
         rasterific-svg svg-tree text vector
       ];
       executableHaskellDepends = [
         base bytestring directory filepath FontyFruity JuicyPixels
         optparse-applicative rasterific-svg svg-tree text
       ];
       description = "Pretty rendering of Ascii diagram into svg or png";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "asn1-encoding" = callPackage
    ({ mkDerivation, asn1-types, base, bytestring, hourglass, mtl
     , tasty, tasty-quickcheck, text
     }:
     mkDerivation {
       pname = "asn1-encoding";
       version = "0.9.3";
       sha256 = "01ki5msrpccgdbdiaaa5a9zw0icp1hki4hca8qx6hzlp0rcf1mwh";
       libraryHaskellDepends = [ asn1-types base bytestring hourglass ];
       testHaskellDepends = [
         asn1-types base bytestring hourglass mtl tasty tasty-quickcheck
         text
       ];
       homepage = "http://github.com/vincenthz/hs-asn1";
       description = "ASN1 data reader and writer in RAW, BER and DER forms";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "asn1-parse" = callPackage
    ({ mkDerivation, asn1-encoding, asn1-types, base, bytestring }:
     mkDerivation {
       pname = "asn1-parse";
       version = "0.9.4";
       sha256 = "025prsihk5g6rdv9xlfmj0zpa0wa3qjzj5i4ilzvg7f6f3sji8y6";
       libraryHaskellDepends = [
         asn1-encoding asn1-types base bytestring
       ];
       homepage = "https://github.com/vincenthz/hs-asn1";
       description = "Simple monadic parser for ASN1 stream types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "asn1-types" = callPackage
    ({ mkDerivation, base, bytestring, hourglass, memory }:
     mkDerivation {
       pname = "asn1-types";
       version = "0.3.2";
       sha256 = "05vjchyqiy9n275cygffhn0ma7fz7jx52j0dcdm9qm8h9bziymqc";
       libraryHaskellDepends = [ base bytestring hourglass memory ];
       homepage = "http://github.com/vincenthz/hs-asn1-types";
       description = "ASN.1 types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "async" = callPackage
    ({ mkDerivation, base, HUnit, stm, test-framework
     , test-framework-hunit
     }:
     mkDerivation {
       pname = "async";
       version = "2.1.0";
       sha256 = "0brcy9bxhy0kxwvh3sfahgd2bg3zgbkhm5nrikf5r2y6z48pdhwk";
       libraryHaskellDepends = [ base stm ];
       testHaskellDepends = [
         base HUnit test-framework test-framework-hunit
       ];
       homepage = "https://github.com/simonmar/async";
       description = "Run IO operations asynchronously and wait for their results";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "async-dejafu" = callPackage
    ({ mkDerivation, base, dejafu, exceptions, HUnit, hunit-dejafu }:
     mkDerivation {
       pname = "async-dejafu";
       version = "0.1.0.0";
       sha256 = "1gskimk4k094h0gdw7klmicisb5hafy54yincqh5abdpzxmc29p9";
       revision = "1";
       editedCabalFile = "0brgh1xy0m5vnshqp6cw6776rsgzvajyjpkkvbjf49qj8zjgrbxl";
       libraryHaskellDepends = [ base dejafu exceptions ];
       testHaskellDepends = [ base dejafu HUnit hunit-dejafu ];
       homepage = "https://github.com/barrucadu/dejafu";
       description = "Run MonadConc operations asynchronously and wait for their results";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "atomic-primops" = callPackage
    ({ mkDerivation, base, ghc-prim, primitive }:
     mkDerivation {
       pname = "atomic-primops";
       version = "0.8.0.3";
       sha256 = "15y970m1b1615ylmg7dg823dqm3gac1i7gi527jrxhmyh730mgqx";
       libraryHaskellDepends = [ base ghc-prim primitive ];
       homepage = "https://github.com/rrnewton/haskell-lockfree/wiki";
       description = "A safe approach to CAS and other atomic ops in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "attoparsec" = callPackage
    ({ mkDerivation, array, base, bytestring, case-insensitive
     , containers, criterion, deepseq, directory, filepath, ghc-prim
     , http-types, parsec, QuickCheck, quickcheck-unicode, scientific
     , test-framework, test-framework-quickcheck2, text, transformers
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "attoparsec";
       version = "0.13.0.1";
       sha256 = "0cprkr7bl4lrr80pz8mryb4rbfwdgpsrl7g0fbcaybhl8p5hm26f";
       libraryHaskellDepends = [
         array base bytestring containers deepseq scientific text
         transformers
       ];
       testHaskellDepends = [
         array base bytestring containers deepseq QuickCheck
         quickcheck-unicode scientific test-framework
         test-framework-quickcheck2 text transformers vector
       ];
       benchmarkHaskellDepends = [
         array base bytestring case-insensitive containers criterion deepseq
         directory filepath ghc-prim http-types parsec scientific text
         unordered-containers vector
       ];
       homepage = "https://github.com/bos/attoparsec";
       description = "Fast combinator parsing for bytestrings and text";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "attoparsec-enumerator" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, enumerator, text }:
     mkDerivation {
       pname = "attoparsec-enumerator";
       version = "0.3.4";
       sha256 = "127mj0v6342mzxnc73qki3k197vhwsff8qkf92gm5idyxdisg5dy";
       libraryHaskellDepends = [
         attoparsec base bytestring enumerator text
       ];
       homepage = "https://john-millikin.com/software/attoparsec-enumerator/";
       description = "Pass input from an enumerator to an Attoparsec parser";
       license = stdenv.lib.licenses.mit;
     }) {};
  "attoparsec-expr" = callPackage
    ({ mkDerivation, attoparsec, base }:
     mkDerivation {
       pname = "attoparsec-expr";
       version = "0.1.1.2";
       sha256 = "0z25pc3rq98ysk92jclr90n35982a566sxri51yh1s9c24vd8k4d";
       libraryHaskellDepends = [ attoparsec base ];
       description = "Port of parsec's expression parser to attoparsec";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "attoparsec-trans" = callPackage
    ({ mkDerivation, attoparsec, base, transformers }:
     mkDerivation {
       pname = "attoparsec-trans";
       version = "0.1.1.0";
       sha256 = "0lsbl7hhirr13jmn6fc4g5443j73p4rxjgxvv967n5dsp7xrjaa7";
       libraryHaskellDepends = [ attoparsec base transformers ];
       homepage = "https://github.com/srijs/haskell-attoparsec-trans";
       description = "Interleaved effects for attoparsec parsers";
       license = stdenv.lib.licenses.mit;
     }) {};
  "authenticate" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, blaze-builder, bytestring
     , case-insensitive, conduit, containers, http-conduit, http-types
     , monad-control, network-uri, resourcet, tagstream-conduit, text
     , transformers, unordered-containers, xml-conduit
     }:
     mkDerivation {
       pname = "authenticate";
       version = "1.3.3";
       sha256 = "1glvi78znv9d5zlflif61mzlm77rnxzzskqqdz6j76zzqlrcs1v8";
       libraryHaskellDepends = [
         aeson attoparsec base blaze-builder bytestring case-insensitive
         conduit containers http-conduit http-types monad-control
         network-uri resourcet tagstream-conduit text transformers
         unordered-containers xml-conduit
       ];
       homepage = "http://github.com/yesodweb/authenticate";
       description = "Authentication methods for Haskell web applications";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "authenticate-oauth" = callPackage
    ({ mkDerivation, base, base64-bytestring, blaze-builder, bytestring
     , crypto-pubkey-types, data-default, http-client, http-types
     , random, RSA, SHA, time, transformers
     }:
     mkDerivation {
       pname = "authenticate-oauth";
       version = "1.5.1.1";
       sha256 = "02y35yd4zmpy36yba2nzbvijhfw0wvijkiqmh7h9qjpbqvmib7zb";
       revision = "1";
       editedCabalFile = "0vj72469lndmw5rqn8c06zxmvpv3li767ipvpl4d50qywisw5q5f";
       libraryHaskellDepends = [
         base base64-bytestring blaze-builder bytestring crypto-pubkey-types
         data-default http-client http-types random RSA SHA time
         transformers
       ];
       homepage = "http://github.com/yesodweb/authenticate";
       description = "Library to authenticate with OAuth for Haskell web applications";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "auto" = callPackage
    ({ mkDerivation, base, base-orphans, bytestring, cereal, containers
     , deepseq, MonadRandom, profunctors, random, semigroups
     , transformers
     }:
     mkDerivation {
       pname = "auto";
       version = "0.4.3.0";
       sha256 = "13ic0sh45ixxg456yg3y47f6b3avqn2l5ds0jc933ldk0z0wsdn8";
       libraryHaskellDepends = [
         base base-orphans bytestring cereal containers deepseq MonadRandom
         profunctors random semigroups transformers
       ];
       homepage = "https://github.com/mstksg/auto";
       description = "Denotative, locally stateful programming DSL & platform";
       license = stdenv.lib.licenses.mit;
     }) {};
  "auto-update" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "auto-update";
       version = "0.1.3";
       sha256 = "028mi4b6fjz6asp2nn3h7d4df3ak1kv3l533svpsq2ww3lki33ix";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/yesodweb/wai";
       description = "Efficiently run periodic, on-demand actions";
       license = stdenv.lib.licenses.mit;
     }) {};
  "avers" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, base16-bytestring
     , bytestring, clock, containers, criterion, cryptohash, filepath
     , hspec, inflections, MonadRandom, mtl, network, network-uri
     , resource-pool, rethinkdb-client-driver, safe, scrypt, stm
     , template-haskell, text, time, unordered-containers, vector
     }:
     mkDerivation {
       pname = "avers";
       version = "0.0.14";
       sha256 = "18cawncznl9jnqgvwihwplanhw6m2x9fldr22p6898jxmxw3kss4";
       libraryHaskellDepends = [
         aeson attoparsec base base16-bytestring bytestring clock containers
         cryptohash filepath inflections MonadRandom mtl network network-uri
         resource-pool rethinkdb-client-driver safe scrypt stm
         template-haskell text time unordered-containers vector
       ];
       testHaskellDepends = [
         aeson attoparsec base base16-bytestring bytestring containers
         cryptohash hspec inflections MonadRandom mtl resource-pool
         rethinkdb-client-driver scrypt stm text time unordered-containers
         vector
       ];
       benchmarkHaskellDepends = [
         aeson base criterion mtl network-uri resource-pool
         rethinkdb-client-driver text
       ];
       description = "empty";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "avers-api" = callPackage
    ({ mkDerivation, aeson, avers, base, bytestring, cookie, servant
     , text, time
     }:
     mkDerivation {
       pname = "avers-api";
       version = "0.0.2";
       sha256 = "1y74iw7yzqrn086bbx0zn857m3cb923c0s5bhijrgi2xq731vxn2";
       libraryHaskellDepends = [
         aeson avers base bytestring cookie servant text time
       ];
       doHaddock = false;
       homepage = "http://github.com/wereHamster/avers-api";
       description = "Types describing the core and extended Avers APIs";
       license = stdenv.lib.licenses.mit;
     }) {};
  "avers-server" = callPackage
    ({ mkDerivation, aeson, avers, avers-api, base, base64-bytestring
     , bytestring, bytestring-conversion, cookie, cryptohash, either
     , http-types, mtl, resource-pool, rethinkdb-client-driver, servant
     , servant-server, text, time, transformers, wai, wai-websockets
     , websockets
     }:
     mkDerivation {
       pname = "avers-server";
       version = "0.0.2";
       sha256 = "0px5jv50hmvkwzrxkynrq4wbw7dnxisk1vrqlpizifjyvl0g20hg";
       libraryHaskellDepends = [
         aeson avers avers-api base base64-bytestring bytestring
         bytestring-conversion cookie cryptohash either http-types mtl
         resource-pool rethinkdb-client-driver servant servant-server text
         time transformers wai wai-websockets websockets
       ];
       homepage = "http://github.com/wereHamster/avers-server";
       description = "Server implementation of the Avers API";
       license = stdenv.lib.licenses.mit;
     }) {};
  "aws" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, base16-bytestring
     , base64-bytestring, blaze-builder, byteable, bytestring
     , case-insensitive, cereal, conduit, conduit-extra, containers
     , cryptohash, data-default, directory, errors, filepath
     , http-client, http-conduit, http-types, lifted-base, monad-control
     , mtl, network, old-locale, QuickCheck, quickcheck-instances
     , resourcet, safe, scientific, tagged, tasty, tasty-quickcheck
     , text, time, transformers, transformers-base, unordered-containers
     , utf8-string, vector, xml-conduit
     }:
     mkDerivation {
       pname = "aws";
       version = "0.13.0";
       sha256 = "19kmb9i7a2pprw37kv82d9bwmizflfplvaz59bza0byi01mcj11m";
       revision = "1";
       editedCabalFile = "0im4yv6psb8gcbx8a7z3a8h9g66szfnpm0chvy26fgi0nh0v3gjp";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson attoparsec base base16-bytestring base64-bytestring
         blaze-builder byteable bytestring case-insensitive cereal conduit
         conduit-extra containers cryptohash data-default directory filepath
         http-conduit http-types lifted-base monad-control mtl network
         old-locale resourcet safe scientific tagged text time transformers
         unordered-containers utf8-string vector xml-conduit
       ];
       testHaskellDepends = [
         aeson base bytestring errors http-client lifted-base monad-control
         mtl QuickCheck quickcheck-instances resourcet tagged tasty
         tasty-quickcheck text time transformers transformers-base
       ];
       doCheck = false;
       homepage = "http://github.com/aristidb/aws";
       description = "Amazon Web Services (AWS) for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "b9" = callPackage
    ({ mkDerivation, aeson, async, base, bifunctors, binary, boxes
     , bytestring, conduit, conduit-extra, ConfigFile, directory
     , filepath, free, hashable, hspec, hspec-expectations, mtl
     , optparse-applicative, parallel, parsec, pretty, pretty-show
     , process, QuickCheck, random, semigroups, syb, template, text
     , time, transformers, unordered-containers, vector, yaml
     }:
     mkDerivation {
       pname = "b9";
       version = "0.5.18";
       sha256 = "1p7ykhxn8xgdsc5kdsyyizb9mks8nammxdwmj1p720cqrd7xz3lp";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson async base bifunctors binary boxes bytestring conduit
         conduit-extra ConfigFile directory filepath free hashable mtl
         parallel parsec pretty pretty-show process QuickCheck random
         semigroups syb template text time transformers unordered-containers
         vector yaml
       ];
       executableHaskellDepends = [
         base bytestring directory optparse-applicative
       ];
       testHaskellDepends = [
         aeson base bytestring hspec hspec-expectations QuickCheck
         semigroups text unordered-containers vector yaml
       ];
       homepage = "https://github.com/sheyll/b9-vm-image-builder";
       description = "A tool and library for building virtual machine images";
       license = stdenv.lib.licenses.mit;
     }) {};
  "bake" = callPackage
    ({ mkDerivation, aeson, base, bytestring, cmdargs, containers
     , deepseq, direct-sqlite, directory, disk-free-space, extra
     , filepath, hashable, HTTP, http-types, old-locale, process, random
     , safe, shake, smtp-mail, sqlite-simple, text, time, transformers
     , unordered-containers, wai, warp
     }:
     mkDerivation {
       pname = "bake";
       version = "0.4";
       sha256 = "1xxv78i2q9hiw30vkbcx09nabqv88g3a6k872ckm9wk8isrnw2zz";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson base bytestring cmdargs containers deepseq direct-sqlite
         directory disk-free-space extra filepath hashable HTTP http-types
         old-locale random safe shake smtp-mail sqlite-simple text time
         transformers unordered-containers wai warp
       ];
       executableHaskellDepends = [
         aeson base bytestring cmdargs containers deepseq direct-sqlite
         directory disk-free-space extra filepath hashable HTTP http-types
         old-locale process random safe shake smtp-mail sqlite-simple text
         time transformers unordered-containers wai warp
       ];
       homepage = "https://github.com/ndmitchell/bake#readme";
       description = "Continuous integration system";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bank-holidays-england" = callPackage
    ({ mkDerivation, base, containers, hspec, QuickCheck, time }:
     mkDerivation {
       pname = "bank-holidays-england";
       version = "0.1.0.3";
       sha256 = "12k01aa0293izblgr7kszkilnw29716hddqfs9cq18h49gp6m7s5";
       libraryHaskellDepends = [ base containers time ];
       testHaskellDepends = [ base containers hspec QuickCheck time ];
       homepage = "https://bitbucket.org/davecturner/bank-holidays-england";
       description = "Calculation of bank holidays in England and Wales";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "barrier" = callPackage
    ({ mkDerivation, base, blaze-svg, bytestring, lens-family-core
     , tasty, tasty-golden, template-haskell, text, unordered-containers
     }:
     mkDerivation {
       pname = "barrier";
       version = "0.1.0";
       sha256 = "1flhgx323dnqhh6gxmfv4m8qj2yysckrr9pzw0g7jisvk6pmcz4z";
       revision = "2";
       editedCabalFile = "1rp9d086926n1g25qcnb2z6yx8fn6ydxypaip0h2fyaz23l15fdw";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base blaze-svg bytestring template-haskell text
         unordered-containers
       ];
       testHaskellDepends = [
         base bytestring lens-family-core tasty tasty-golden
       ];
       homepage = "https://github.com/philopon/barrier";
       description = "Shield.io style badge generator";
       license = stdenv.lib.licenses.mit;
     }) {};
  "base-compat" = callPackage
    ({ mkDerivation, base, hspec, QuickCheck, unix }:
     mkDerivation {
       pname = "base-compat";
       version = "0.9.0";
       sha256 = "1h84dhy25irxyv6bhw78cn8853clxi8dymk8whf0zkam0qpbc5w3";
       libraryHaskellDepends = [ base unix ];
       testHaskellDepends = [ base hspec QuickCheck ];
       description = "A compatibility layer for base";
       license = stdenv.lib.licenses.mit;
     }) {};
  "base-noprelude" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "base-noprelude";
       version = "4.8.2.0";
       sha256 = "1iv3syif74h5f6394hraalg41a12ivw1ljq7hrsjzn0lb9lbfjmx";
       libraryHaskellDepends = [ base ];
       doHaddock = false;
       homepage = "https://github.com/hvr/base-noprelude";
       description = "\"base\" package sans \"Prelude\" module";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "base-orphans" = callPackage
    ({ mkDerivation, base, ghc-prim, hspec, QuickCheck }:
     mkDerivation {
       pname = "base-orphans";
       version = "0.5.3";
       sha256 = "0qlhqjmnxix9xxgk9rn1y7lzggi3d4b8s9maaiadfkha47i4mvsx";
       libraryHaskellDepends = [ base ghc-prim ];
       testHaskellDepends = [ base hspec QuickCheck ];
       homepage = "https://github.com/haskell-compat/base-orphans#readme";
       description = "Backwards-compatible orphan instances for base";
       license = stdenv.lib.licenses.mit;
     }) {};
  "base-prelude" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "base-prelude";
       version = "0.1.21";
       sha256 = "19d3fhyhkcn3id0kn4aj1dxw3c13qq3jxn5y12z92lb1zmlhwrbj";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/nikita-volkov/base-prelude";
       description = "The most complete prelude formed from only the \"base\" package";
       license = stdenv.lib.licenses.mit;
     }) {};
  "base-unicode-symbols" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "base-unicode-symbols";
       version = "0.2.2.4";
       sha256 = "1afc5pchd3vw33bmjbjygkd0l5zh7glbsx4bfyxfscpc1x1l3y52";
       libraryHaskellDepends = [ base ];
       homepage = "http://haskell.org/haskellwiki/Unicode-symbols";
       description = "Unicode alternatives for common functions and operators";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "base16-bytestring" = callPackage
    ({ mkDerivation, base, bytestring, ghc-prim }:
     mkDerivation {
       pname = "base16-bytestring";
       version = "0.1.1.6";
       sha256 = "0jf40m3yijqw6wd1rwwvviww46fasphaay9m9rgqyhf5aahnbzjs";
       libraryHaskellDepends = [ base bytestring ghc-prim ];
       homepage = "http://github.com/bos/base16-bytestring";
       description = "Fast base16 (hex) encoding and decoding for ByteStrings";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "base32string" = callPackage
    ({ mkDerivation, aeson, base, binary, bytestring, hspec, text }:
     mkDerivation {
       pname = "base32string";
       version = "0.9.1";
       sha256 = "0cpa6bvam4zd2l2hb3sdngj0dx482c9rkz4jj87n6pxsmq9id4wy";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ aeson base binary bytestring text ];
       testHaskellDepends = [ base binary bytestring hspec text ];
       homepage = "http://www.leonmergen.com/opensource.html";
       description = "Fast and safe representation of a Base-32 string";
       license = stdenv.lib.licenses.mit;
     }) {};
  "base58string" = callPackage
    ({ mkDerivation, aeson, base, binary, bytestring, hspec, text }:
     mkDerivation {
       pname = "base58string";
       version = "0.10.0";
       sha256 = "1260x4bkrizvnmylm237gpi92wazh31md9nf982sac3fsxyn0wiv";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ aeson base binary bytestring text ];
       testHaskellDepends = [ base binary bytestring hspec text ];
       homepage = "http://www.leonmergen.com/opensource.html";
       description = "Fast and safe representation of a Base-58 string";
       license = stdenv.lib.licenses.mit;
     }) {};
  "base64-bytestring" = callPackage
    ({ mkDerivation, base, bytestring, containers, HUnit, QuickCheck
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "base64-bytestring";
       version = "1.0.0.1";
       sha256 = "0l1v4ddjdsgi9nqzyzcxxj76rwar3lzx8gmwf2r54bqan3san9db";
       libraryHaskellDepends = [ base bytestring ];
       testHaskellDepends = [
         base bytestring containers HUnit QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2
       ];
       homepage = "https://github.com/bos/base64-bytestring";
       description = "Fast base64 encoding and decoding for ByteStrings";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "base64-string" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "base64-string";
       version = "0.2";
       sha256 = "0pkhrimabacsjalzq0y3a197fqfbspsbv8xszzg4vbb1fb59dj1y";
       libraryHaskellDepends = [ base ];
       homepage = "http://urchin.earth.li/~ian/cabal/base64-string/";
       description = "Base64 implementation for String's";
       license = "unknown";
     }) {};
  "basic-prelude" = callPackage
    ({ mkDerivation, base, bytestring, containers, filepath, hashable
     , lifted-base, ReadArgs, safe, text, transformers
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "basic-prelude";
       version = "0.5.1";
       sha256 = "1wl5p5kfzzk941d4v9agq41yc5r9sa3478z6f8j7n6jn5xx5a58c";
       libraryHaskellDepends = [
         base bytestring containers filepath hashable lifted-base ReadArgs
         safe text transformers unordered-containers vector
       ];
       homepage = "https://github.com/snoyberg/basic-prelude";
       description = "An enhanced core prelude; a common foundation for alternate preludes";
       license = stdenv.lib.licenses.mit;
     }) {};
  "bcrypt" = callPackage
    ({ mkDerivation, base, bytestring, entropy, memory }:
     mkDerivation {
       pname = "bcrypt";
       version = "0.0.8";
       sha256 = "000iw61cbxd35mgv71nfhm1sfxr6ksflbmlf3l51jjbkbnbh1lcw";
       libraryHaskellDepends = [ base bytestring entropy memory ];
       description = "Haskell bindings to the bcrypt password hash";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "benchpress" = callPackage
    ({ mkDerivation, base, mtl, time }:
     mkDerivation {
       pname = "benchpress";
       version = "0.2.2.7";
       sha256 = "1rk2qmw1fq0jmdpnr0lhhpbizani2fq8yakp35psg2zic7yq16yh";
       libraryHaskellDepends = [ base mtl time ];
       homepage = "https://github.com/WillSewell/benchpress";
       description = "Micro-benchmarking with detailed statistics";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bencode" = callPackage
    ({ mkDerivation, base, binary, bytestring, containers, parsec }:
     mkDerivation {
       pname = "bencode";
       version = "0.6.0.0";
       sha256 = "12pnh598k30ggs54f0pic19j7ji8f4xn7fydkdnlig79rvzgv3iv";
       libraryHaskellDepends = [
         base binary bytestring containers parsec
       ];
       description = "Parser and printer for bencoded data";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bifunctors" = callPackage
    ({ mkDerivation, base, comonad, containers, hspec, QuickCheck
     , semigroups, tagged, template-haskell, transformers
     , transformers-compat
     }:
     mkDerivation {
       pname = "bifunctors";
       version = "5.2";
       sha256 = "056y923znv08zxqyabaas91yg56ysbmb2jml0j27nfl6qpd77qa6";
       revision = "2";
       editedCabalFile = "091fysjy5gs3lixaaqngbh5bckshiafavb8z2i7yx5fqbji3d5bw";
       libraryHaskellDepends = [
         base comonad containers semigroups tagged template-haskell
         transformers
       ];
       testHaskellDepends = [
         base hspec QuickCheck transformers transformers-compat
       ];
       homepage = "http://github.com/ekmett/bifunctors/";
       description = "Bifunctors";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bimap" = callPackage
    ({ mkDerivation, base, containers, exceptions, QuickCheck
     , template-haskell
     }:
     mkDerivation {
       pname = "bimap";
       version = "0.3.2";
       sha256 = "1f1xvikb92pix66glciys5q2l4044cd8hyd996prz9sag3cw53ql";
       libraryHaskellDepends = [ base containers exceptions ];
       testHaskellDepends = [
         base containers exceptions QuickCheck template-haskell
       ];
       homepage = "https://github.com/joelwilliamson/bimap";
       description = "Bidirectional mapping between two key types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bimap-server" = callPackage
    ({ mkDerivation, aeson, base, bimap, binary, directory, http-types
     , unix, wai, warp
     }:
     mkDerivation {
       pname = "bimap-server";
       version = "0.1.0.1";
       sha256 = "0dgmiv1pzzrq22778a2l46knxfk5rh2vw331gcqhxx0jb23d3pq9";
       libraryHaskellDepends = [
         aeson base bimap binary directory http-types unix wai warp
       ];
       description = "Two-column database server";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "binary-conduit" = callPackage
    ({ mkDerivation, base, binary, bytestring, conduit, hspec
     , QuickCheck, quickcheck-assertions, resourcet, vector
     }:
     mkDerivation {
       pname = "binary-conduit";
       version = "1.2.3";
       sha256 = "0ymhxyf754j1pki7ap2vay8f9j49rzsjzp5yr253sn5wpw3qg8fr";
       revision = "2";
       editedCabalFile = "0agymrfvf7vvnqgn7xi0zsj4yglr9yjp5iwszv6988y6vfwkk228";
       libraryHaskellDepends = [
         base binary bytestring conduit resourcet vector
       ];
       testHaskellDepends = [
         base binary bytestring conduit hspec QuickCheck
         quickcheck-assertions resourcet
       ];
       homepage = "http://github.com/qnikst/binary-conduit/";
       description = "data serialization/deserialization conduit library";
       license = stdenv.lib.licenses.mit;
     }) {};
  "binary-list" = callPackage
    ({ mkDerivation, base, binary, bytestring, criterion, deepseq
     , phantom-state, transformers
     }:
     mkDerivation {
       pname = "binary-list";
       version = "1.1.1.0";
       sha256 = "03fh5ipmmjzdyywm28m2kkbxn11yb4ygrs1q2igll1mbmpm2km6x";
       libraryHaskellDepends = [
         base binary bytestring deepseq phantom-state transformers
       ];
       benchmarkHaskellDepends = [ base criterion ];
       description = "Lists of length a power of two";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "binary-orphans" = callPackage
    ({ mkDerivation, aeson, base, binary, hashable
     , quickcheck-instances, scientific, semigroups, tagged, tasty
     , tasty-quickcheck, text, text-binary, time, unordered-containers
     , vector, vector-binary-instances
     }:
     mkDerivation {
       pname = "binary-orphans";
       version = "0.1.4.0";
       sha256 = "0hpp2y8d8chrgir22wfbz8p2y9ih85kkh5mayjn7lykl45sjm58a";
       revision = "6";
       editedCabalFile = "0lz25dbi48ld2gk5k1d3yzw3can2krngpmgk275qj9qka1yq4lv3";
       libraryHaskellDepends = [
         aeson base binary hashable scientific semigroups tagged text
         text-binary time unordered-containers vector
         vector-binary-instances
       ];
       testHaskellDepends = [
         aeson base binary hashable quickcheck-instances scientific
         semigroups tagged tasty tasty-quickcheck text time
         unordered-containers vector
       ];
       homepage = "https://github.com/phadej/binary-orphans#readme";
       description = "Orphan instances for binary";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "binary-parser" = callPackage
    ({ mkDerivation, base-prelude, bytestring, success, text
     , transformers
     }:
     mkDerivation {
       pname = "binary-parser";
       version = "0.5.2";
       sha256 = "0iam4j4z560rnj69wjf0pbylizygk36daaz06x2708w4dzr30bbi";
       libraryHaskellDepends = [
         base-prelude bytestring success text transformers
       ];
       homepage = "https://github.com/nikita-volkov/binary-parser";
       description = "A highly-efficient but limited parser API specialised for bytestrings";
       license = stdenv.lib.licenses.mit;
     }) {};
  "binary-search" = callPackage
    ({ mkDerivation, base, containers, transformers }:
     mkDerivation {
       pname = "binary-search";
       version = "1.0.0.3";
       sha256 = "1ypn2i2c3mxd1zhpj515zf15y9sgz10akbyngg2ymp7ddbs2vqxh";
       libraryHaskellDepends = [ base containers transformers ];
       doCheck = false;
       description = "Binary and exponential searches";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "binary-tagged" = callPackage
    ({ mkDerivation, aeson, array, base, bifunctors, binary
     , binary-orphans, bytestring, containers, criterion, deepseq
     , generics-sop, hashable, quickcheck-instances, scientific, SHA
     , tagged, tasty, tasty-quickcheck, text, time, unordered-containers
     , vector
     }:
     mkDerivation {
       pname = "binary-tagged";
       version = "0.1.3.1";
       sha256 = "0br5aapmxrg4v990jp9f4zb594paz6087hzbj9nsa5c02hh93nfd";
       revision = "1";
       editedCabalFile = "0g1yppcw7ln5jjw2ld4jasc77wx61d6f1fnvk5pcr638dl8pv01i";
       libraryHaskellDepends = [
         aeson array base binary bytestring containers generics-sop hashable
         scientific SHA tagged text time unordered-containers vector
       ];
       testHaskellDepends = [
         aeson array base bifunctors binary binary-orphans bytestring
         containers generics-sop hashable quickcheck-instances scientific
         SHA tagged tasty tasty-quickcheck text time unordered-containers
         vector
       ];
       benchmarkHaskellDepends = [
         aeson array base binary binary-orphans bytestring containers
         criterion deepseq generics-sop hashable scientific SHA tagged text
         time unordered-containers vector
       ];
       homepage = "https://github.com/phadej/binary-tagged#readme";
       description = "Tagged binary serialisation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "binary-typed" = callPackage
    ({ mkDerivation, base, binary, bytestring, criterion, deepseq
     , murmur-hash, tasty, tasty-hunit, tasty-quickcheck
     }:
     mkDerivation {
       pname = "binary-typed";
       version = "1.0";
       sha256 = "02ans3vny69qfsmwlgri7v31rpff0h3mdp2zpikclay50a471ww5";
       revision = "1";
       editedCabalFile = "1jnmdi3bnyiyvqlmgh5k8cdcbnl594yq3wrs6cjipw0ik06ar0y2";
       libraryHaskellDepends = [ base binary bytestring murmur-hash ];
       testHaskellDepends = [
         base binary bytestring tasty tasty-hunit tasty-quickcheck
       ];
       benchmarkHaskellDepends = [
         base binary bytestring criterion deepseq
       ];
       homepage = "https://github.com/quchen/binary-typed";
       description = "Type-safe binary serialization";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "bindings-DSL" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "bindings-DSL";
       version = "1.0.23";
       sha256 = "1rqhkk8hn1xjl3705dvakxx93q89vp0fw22v2cbrlapbir27cv7b";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/jwiegley/bindings-dsl/wiki";
       description = "FFI domain specific language, on top of hsc2hs";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bindings-GLFW" = callPackage
    ({ mkDerivation, base, bindings-DSL, libX11, libXcursor, libXext
     , libXfixes, libXi, libXinerama, libXrandr, libXxf86vm, mesa
     }:
     mkDerivation {
       pname = "bindings-GLFW";
       version = "3.1.1.4";
       sha256 = "1hgkf979kysn3aw6b5dfv7br3sd3glq3p39gqy5gh89qds7v3frm";
       libraryHaskellDepends = [ base bindings-DSL ];
       librarySystemDepends = [
         libX11 libXcursor libXext libXfixes libXi libXinerama libXrandr
         libXxf86vm mesa
       ];
       doCheck = false;
       description = "Low-level bindings to GLFW OpenGL library";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs.xorg) libX11; inherit (pkgs.xorg) libXcursor;
         inherit (pkgs.xorg) libXext; inherit (pkgs.xorg) libXfixes;
         inherit (pkgs.xorg) libXi; inherit (pkgs.xorg) libXinerama;
         inherit (pkgs.xorg) libXrandr; inherit (pkgs.xorg) libXxf86vm;
         inherit (pkgs) mesa;};
  "bindings-libzip" = callPackage
    ({ mkDerivation, base, bindings-DSL, libzip }:
     mkDerivation {
       pname = "bindings-libzip";
       version = "0.10.2";
       sha256 = "15s89jhl748cgay81wi8l85brn9znjc10achsf0vyrpkjgdca8p7";
       libraryHaskellDepends = [ base bindings-DSL ];
       libraryPkgconfigDepends = [ libzip ];
       homepage = "http://bitbucket.org/astanin/hs-libzip/";
       description = "Low level bindings to libzip";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) libzip;};
  "bindings-posix" = callPackage
    ({ mkDerivation, base, bindings-DSL }:
     mkDerivation {
       pname = "bindings-posix";
       version = "1.2.6";
       sha256 = "1yza3qbf0f5gfpg79pb6xfpw37zg191nmxa4r6h9x4xb5na0rzff";
       libraryHaskellDepends = [ base bindings-DSL ];
       description = "Low level bindings to posix";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bioace" = callPackage
    ({ mkDerivation, base, bioalign, biocore, bytestring, parsec }:
     mkDerivation {
       pname = "bioace";
       version = "0.0.1";
       sha256 = "08k2w66gpysjk038pi50lc21gbn2dyp5z8ls0qhcmjqc59dn8hvg";
       libraryHaskellDepends = [
         base bioalign biocore bytestring parsec
       ];
       homepage = "https://patch-tag.com/r/dfornika/bioace/home";
       description = "Library for reading ace assembly files";
       license = "GPL";
     }) {};
  "bioalign" = callPackage
    ({ mkDerivation, base, biocore, bytestring }:
     mkDerivation {
       pname = "bioalign";
       version = "0.0.5";
       sha256 = "006gg8ds6klrl9rc1csi247rf8gzlgn9mdi0jl4pjz5xmf0jw5dr";
       libraryHaskellDepends = [ base biocore bytestring ];
       homepage = "https://patch-tag.com/r/dfornika/biophd/home";
       description = "Data structures and helper functions for calculating alignments";
       license = "GPL";
     }) {};
  "biocore" = callPackage
    ({ mkDerivation, base, bytestring, stringable }:
     mkDerivation {
       pname = "biocore";
       version = "0.3.1";
       sha256 = "06ml9p144bv0c9hv6pkcvhdgc0vw0jxzbqb834ilr38kjmrpsar1";
       libraryHaskellDepends = [ base bytestring stringable ];
       description = "A bioinformatics library";
       license = "LGPL";
     }) {};
  "biofasta" = callPackage
    ({ mkDerivation, base, biocore, bytestring }:
     mkDerivation {
       pname = "biofasta";
       version = "0.0.3";
       sha256 = "1l770sg2gcg7wl5yfrrk9nr7hgd5m0q158ad5nd8z7i5vsfah8b2";
       libraryHaskellDepends = [ base biocore bytestring ];
       homepage = "https://patch-tag.com/r/dfornika/biofasta/home";
       description = "Library for reading fasta sequence files";
       license = "GPL";
     }) {};
  "biofastq" = callPackage
    ({ mkDerivation, base, biocore, bytestring }:
     mkDerivation {
       pname = "biofastq";
       version = "0.1";
       sha256 = "0453cb2sw6x9hx3z7w3fvymwi0l0s86wlvi6vvsh0jcwas3iirbl";
       libraryHaskellDepends = [ base biocore bytestring ];
       homepage = "http://biohaskell.org/";
       description = "A library for reading FASTQ files";
       license = "LGPL";
     }) {};
  "biophd" = callPackage
    ({ mkDerivation, base, binary, biocore, bytestring, parsec, text }:
     mkDerivation {
       pname = "biophd";
       version = "0.0.4";
       sha256 = "10pv3fg6msyn5c95vg773b17x37g91y1f2ny7qw3z3i196j0a453";
       libraryHaskellDepends = [
         base binary biocore bytestring parsec text
       ];
       homepage = "https://patch-tag.com/r/dfornika/biophd/home";
       description = "Library for reading phd sequence files";
       license = "GPL";
     }) {};
  "biopsl" = callPackage
    ({ mkDerivation, base, biocore, bytestring, cmdargs
     , unordered-containers
     }:
     mkDerivation {
       pname = "biopsl";
       version = "0.4";
       sha256 = "1v9vg9gnrf606raqlzcd15irg60v3cf5m0yy5qsdyxm24102bgmj";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base biocore bytestring ];
       executableHaskellDepends = [ cmdargs unordered-containers ];
       homepage = "http://biohaskell.org/";
       description = "Library and executables for working with PSL files";
       license = "LGPL";
     }) {};
  "bitcoin-api" = callPackage
    ({ mkDerivation, aeson, base, base58string, binary, bitcoin-block
     , bitcoin-script, bitcoin-tx, bitcoin-types, bytestring, hexstring
     , hspec, http-client, lens, lens-aeson, text, unordered-containers
     , wreq
     }:
     mkDerivation {
       pname = "bitcoin-api";
       version = "0.12.1";
       sha256 = "0c1ydggik4k3vj93bqk53privyblkwhd32jizw25qk5j34axwy69";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson base base58string binary bitcoin-block bitcoin-script
         bitcoin-tx bitcoin-types bytestring hexstring lens lens-aeson text
         unordered-containers wreq
       ];
       testHaskellDepends = [
         base base58string bitcoin-script bitcoin-tx bytestring hspec
         http-client lens text wreq
       ];
       doCheck = false;
       homepage = "http://www.leonmergen.com/opensource.html";
       description = "Provides access to the RPC API of Bitcoin Core";
       license = stdenv.lib.licenses.mit;
     }) {};
  "bitcoin-api-extra" = callPackage
    ({ mkDerivation, base, binary, bitcoin-api, bitcoin-block
     , bitcoin-tx, bytestring, conduit, hspec, http-client, lens, stm
     , stm-chans, stm-conduit, text, transformers, wreq
     }:
     mkDerivation {
       pname = "bitcoin-api-extra";
       version = "0.9.1";
       sha256 = "1z6pppjgq6sy4q78k176pnr6y3lq369brqf0pg90v0qggl0cc8y4";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base binary bitcoin-api bitcoin-block bitcoin-tx bytestring conduit
         lens stm stm-chans stm-conduit text transformers
       ];
       testHaskellDepends = [
         base bitcoin-api bitcoin-tx bytestring conduit hspec http-client
         lens text wreq
       ];
       doCheck = false;
       homepage = "http://www.leonmergen.com/opensource.html";
       description = "Higher level constructs on top of the bitcoin-api package";
       license = stdenv.lib.licenses.mit;
     }) {};
  "bitcoin-block" = callPackage
    ({ mkDerivation, base, binary, bitcoin-tx, bitcoin-types
     , bytestring, cryptohash, hexstring, hspec, largeword, lens
     }:
     mkDerivation {
       pname = "bitcoin-block";
       version = "0.13.1";
       sha256 = "0nkx86fwv65x9vz6ni6qgz61afnvcifw2g92bnwdli8hww7prxfp";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base binary bitcoin-tx bitcoin-types bytestring cryptohash
         hexstring largeword lens
       ];
       testHaskellDepends = [
         base bitcoin-tx bitcoin-types bytestring hexstring hspec
       ];
       homepage = "http://www.leonmergen.com/opensource.html";
       description = "Utility functions for manipulating bitcoin blocks";
       license = stdenv.lib.licenses.mit;
     }) {};
  "bitcoin-script" = callPackage
    ({ mkDerivation, base, base16-bytestring, binary, bytestring, hspec
     , text
     }:
     mkDerivation {
       pname = "bitcoin-script";
       version = "0.11.1";
       sha256 = "0k3v35p6qpgh88gc5rqpcmh202xrn2rind9641dinwqqx631v31r";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base base16-bytestring binary bytestring text
       ];
       testHaskellDepends = [ base bytestring hspec ];
       homepage = "http://www.leonmergen.com/opensource.html";
       description = "Compilation, manipulation and decompilation of Bitcoin scripts";
       license = stdenv.lib.licenses.mit;
     }) {};
  "bitcoin-tx" = callPackage
    ({ mkDerivation, base, binary, bitcoin-script, bitcoin-types
     , bytestring, cryptohash, hexstring, hspec, lens
     }:
     mkDerivation {
       pname = "bitcoin-tx";
       version = "0.13.1";
       sha256 = "006c55l6q6cknxw0k0kzr8vkv8azapfb4mkax6ac6rih6mjq5f1v";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base binary bitcoin-script bitcoin-types bytestring cryptohash
         hexstring lens
       ];
       testHaskellDepends = [
         base bitcoin-script bytestring hexstring hspec
       ];
       homepage = "http://www.leonmergen.com/opensource.html";
       description = "Utility functions for manipulating bitcoin transactions";
       license = stdenv.lib.licenses.mit;
     }) {};
  "bitcoin-types" = callPackage
    ({ mkDerivation, base, base58string, binary, bytestring, hexstring
     , hspec, text
     }:
     mkDerivation {
       pname = "bitcoin-types";
       version = "0.9.2";
       sha256 = "02y4svhcsml37p78g4cm97kyigcakgf4hds4bxnp0r4ba1498bxp";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base base58string binary bytestring hexstring text
       ];
       testHaskellDepends = [
         base base58string bytestring hexstring hspec
       ];
       homepage = "http://www.leonmergen.com/opensource.html";
       description = "Provides consistent low-level types used commonly among Bitcoin implementations";
       license = stdenv.lib.licenses.mit;
     }) {};
  "bits" = callPackage
    ({ mkDerivation, base, bytes, directory, doctest, filepath, mtl
     , transformers
     }:
     mkDerivation {
       pname = "bits";
       version = "0.4";
       sha256 = "12s5yk47y0zqzqiyaw9jchyl3crf1id9dk67m638b070d46k29p6";
       libraryHaskellDepends = [ base bytes mtl transformers ];
       testHaskellDepends = [ base directory doctest filepath ];
       doCheck = false;
       homepage = "http://github.com/analytics/bits";
       description = "Various bit twiddling and bitwise serialization primitives";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bitwise" = callPackage
    ({ mkDerivation, array, base, bytestring, criterion, QuickCheck }:
     mkDerivation {
       pname = "bitwise";
       version = "0.1.1";
       sha256 = "114a9d6xac9sd7l4nzzwzgv9inhval9l7lpx972l0njqff3avj6l";
       libraryHaskellDepends = [ array base bytestring ];
       testHaskellDepends = [ base QuickCheck ];
       benchmarkHaskellDepends = [ array base bytestring criterion ];
       homepage = "http://code.mathr.co.uk/bitwise";
       description = "fast multi-dimensional unboxed bit packed Bool arrays";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "blake2" = callPackage
    ({ mkDerivation, base, base16-bytestring, bytestring, criterion
     , hlint, QuickCheck, tasty, tasty-quickcheck
     }:
     mkDerivation {
       pname = "blake2";
       version = "0.1.0";
       sha256 = "1r8whiwbzhs6psg1qqfmvz8wbibdagn3bwqj1bcgs99ijy5v7kfl";
       libraryHaskellDepends = [ base bytestring ];
       testHaskellDepends = [
         base base16-bytestring bytestring hlint QuickCheck tasty
         tasty-quickcheck
       ];
       benchmarkHaskellDepends = [ base bytestring criterion ];
       homepage = "https://github.com/centromere/blake2";
       description = "A library providing BLAKE2";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "blank-canvas" = callPackage
    ({ mkDerivation, aeson, base, base-compat, base64-bytestring
     , bytestring, colour, containers, data-default-class, http-types
     , kansas-comet, mime-types, scotty, stm, text, text-show
     , transformers, vector, wai, wai-extra, warp
     }:
     mkDerivation {
       pname = "blank-canvas";
       version = "0.6";
       sha256 = "1cs81ykw1y2q1kwkdni5w9jxa8bc31b118diaqzf870bqm7mq3ia";
       revision = "12";
       editedCabalFile = "011gssnsg4svv0mz58cvkmy2nr994d4v6ch29yilgh6rna0qfkd9";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson base base-compat base64-bytestring bytestring colour
         containers data-default-class http-types kansas-comet mime-types
         scotty stm text text-show transformers vector wai wai-extra warp
       ];
       doCheck = false;
       homepage = "https://github.com/ku-fpg/blank-canvas/wiki";
       description = "HTML5 Canvas Graphics Library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "blastxml" = callPackage
    ({ mkDerivation, base, biocore, bytestring, parallel, tagsoup }:
     mkDerivation {
       pname = "blastxml";
       version = "0.3.2";
       sha256 = "0slqvv8729vlniwswwipw3yss9id6xvmd416kad1ij064g28j00c";
       libraryHaskellDepends = [
         base biocore bytestring parallel tagsoup
       ];
       homepage = "http://biohaskell.org/";
       description = "Library for reading Blast XML output";
       license = "LGPL";
     }) {};
  "blaze-bootstrap" = callPackage
    ({ mkDerivation, base, blaze-html, text }:
     mkDerivation {
       pname = "blaze-bootstrap";
       version = "0.1.0.1";
       sha256 = "0qsis1hwd8sqcciibxwy8p6irszwa2fy5m75qxp46ymfal5lrdak";
       libraryHaskellDepends = [ base blaze-html text ];
       homepage = "http://github.com/agrafix/blaze-bootstrap";
       description = "Blaze helper functions for bootstrap pages";
       license = stdenv.lib.licenses.mit;
     }) {};
  "blaze-builder" = callPackage
    ({ mkDerivation, base, bytestring, deepseq, HUnit, QuickCheck
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , text, utf8-string
     }:
     mkDerivation {
       pname = "blaze-builder";
       version = "0.4.0.1";
       sha256 = "1id3w33x9f7q5m3xpggmvzw03bkp94bpfyz81625bldqgf3yqdn1";
       libraryHaskellDepends = [ base bytestring deepseq text ];
       testHaskellDepends = [
         base bytestring HUnit QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2 text utf8-string
       ];
       homepage = "http://github.com/lpsmith/blaze-builder";
       description = "Efficient buffered output";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "blaze-builder-enumerator" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring
     , bytestring-builder, enumerator, streaming-commons, transformers
     }:
     mkDerivation {
       pname = "blaze-builder-enumerator";
       version = "0.2.1.0";
       sha256 = "15mz4dfnngll61b1xv3hfazvzjfd8g9ym0hps1qiks1hl4c2kxah";
       revision = "1";
       editedCabalFile = "1bjgki6c3glllf49qpmw08c75mzgv6cldxc8c75cy8hx60rnsy98";
       libraryHaskellDepends = [
         base blaze-builder bytestring bytestring-builder enumerator
         streaming-commons transformers
       ];
       homepage = "https://github.com/meiersi/blaze-builder-enumerator";
       description = "Enumeratees for the incremental conversion of builders to bytestrings";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "blaze-html" = callPackage
    ({ mkDerivation, base, blaze-builder, blaze-markup, bytestring
     , containers, HUnit, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2, text
     }:
     mkDerivation {
       pname = "blaze-html";
       version = "0.8.1.1";
       sha256 = "1dnw50kh0s405cg9i2y4a8awanhj3bqzk21jwgfza65kcjby7lpq";
       libraryHaskellDepends = [
         base blaze-builder blaze-markup bytestring text
       ];
       testHaskellDepends = [
         base blaze-builder blaze-markup bytestring containers HUnit
         QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2 text
       ];
       homepage = "http://jaspervdj.be/blaze";
       description = "A blazingly fast HTML combinator library for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "blaze-markup" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring, containers, HUnit
     , QuickCheck, test-framework, test-framework-hunit
     , test-framework-quickcheck2, text
     }:
     mkDerivation {
       pname = "blaze-markup";
       version = "0.7.0.3";
       sha256 = "080vlhd8dwjxrma4bb524lh8gxs5lm3xh122icy6lnnyipla0s9y";
       libraryHaskellDepends = [ base blaze-builder bytestring text ];
       testHaskellDepends = [
         base blaze-builder bytestring containers HUnit QuickCheck
         test-framework test-framework-hunit test-framework-quickcheck2 text
       ];
       homepage = "http://jaspervdj.be/blaze";
       description = "A blazingly fast markup combinator library for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "blaze-svg" = callPackage
    ({ mkDerivation, base, blaze-markup, mtl }:
     mkDerivation {
       pname = "blaze-svg";
       version = "0.3.6";
       sha256 = "0ybi73xvc76czndkbzh176yx3maqq60l5avvb3i5xzmzg1yz7pwh";
       libraryHaskellDepends = [ base blaze-markup mtl ];
       homepage = "https://github.com/deepakjois/blaze-svg";
       description = "SVG combinator library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "blaze-textual" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring, double-conversion
     , ghc-prim, integer-gmp, old-locale, QuickCheck, test-framework
     , test-framework-quickcheck2, text, time, vector
     }:
     mkDerivation {
       pname = "blaze-textual";
       version = "0.2.1.0";
       sha256 = "0bbcykkrlgdb6jaz72njriq9if6bzsx52jn26k093f5sn1d7jhhh";
       libraryHaskellDepends = [
         base blaze-builder bytestring ghc-prim integer-gmp old-locale text
         time vector
       ];
       testHaskellDepends = [
         base blaze-builder bytestring double-conversion QuickCheck
         test-framework test-framework-quickcheck2
       ];
       homepage = "http://github.com/bos/blaze-textual";
       description = "Fast rendering of common datatypes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bloomfilter" = callPackage
    ({ mkDerivation, array, base, bytestring, deepseq, QuickCheck
     , random, test-framework, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "bloomfilter";
       version = "2.0.1.0";
       sha256 = "03vrmncg1c10a2wcg5skq30m1yiknn7nwxz2gblyyfaxglshspkc";
       libraryHaskellDepends = [ array base bytestring deepseq ];
       testHaskellDepends = [
         base bytestring QuickCheck random test-framework
         test-framework-quickcheck2
       ];
       homepage = "https://github.com/bos/bloomfilter";
       description = "Pure and impure Bloom Filter implementations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bmp" = callPackage
    ({ mkDerivation, base, binary, bytestring }:
     mkDerivation {
       pname = "bmp";
       version = "1.2.5.2";
       sha256 = "0f88f2ynm1fpzbjijy5fa8blfrdv42h5h28hfjlpd4fp0h96in5x";
       libraryHaskellDepends = [ base binary bytestring ];
       homepage = "http://code.ouroborus.net/bmp";
       description = "Read and write uncompressed BMP image files";
       license = stdenv.lib.licenses.mit;
     }) {};
  "bool-extras" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "bool-extras";
       version = "0.4.0";
       sha256 = "008m43f04ncx2c24c241gzwjyyglw8rwpq2gsakqkw0nwz3czs61";
       libraryHaskellDepends = [ base ];
       homepage = "http://tom.lokhorst.eu/bool-extras";
       description = "A fold function for Bool";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "boomerang" = callPackage
    ({ mkDerivation, base, mtl, template-haskell, text }:
     mkDerivation {
       pname = "boomerang";
       version = "1.4.5.1";
       sha256 = "1g26iaq54h0vh97m57vglkbyz13x78nqdxm4bqc5813x4xj1ff14";
       revision = "1";
       editedCabalFile = "1xkmakg2svkwixc5zd4fn43qspcl26lz3487h8f8a5c1s0air2yj";
       libraryHaskellDepends = [ base mtl template-haskell text ];
       description = "Library for invertible parsing and printing";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "both" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "both";
       version = "0.1.0.0";
       sha256 = "1zhljf3xc7vkcv3x14a89ss48nlflpbmkqyl2mnvs0g9mmakq2zk";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/barrucadu/both";
       description = "Like Maybe, but with a different Monoid instance";
       license = stdenv.lib.licenses.mit;
     }) {};
  "bound" = callPackage
    ({ mkDerivation, base, bifunctors, binary, bytes, cereal, comonad
     , hashable, hashable-extras, prelude-extras, profunctors
     , template-haskell, transformers
     }:
     mkDerivation {
       pname = "bound";
       version = "1.0.7";
       sha256 = "03il2vsqnca3jprsib8nh4x3pa2kymiyd0mi0b7v781wx2nqh0xd";
       libraryHaskellDepends = [
         base bifunctors binary bytes cereal comonad hashable
         hashable-extras prelude-extras profunctors template-haskell
         transformers
       ];
       doCheck = false;
       homepage = "http://github.com/ekmett/bound/";
       description = "Making de Bruijn Succ Less";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bower-json" = callPackage
    ({ mkDerivation, aeson, aeson-better-errors, base, bytestring, mtl
     , scientific, tasty, tasty-hunit, text, transformers
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "bower-json";
       version = "0.7.0.0";
       sha256 = "0vz9xxw2xr27lh70mqxfgvs43sr3sq88xf5vppcn2frsk1hnb7hs";
       libraryHaskellDepends = [
         aeson aeson-better-errors base bytestring mtl scientific text
         transformers unordered-containers vector
       ];
       testHaskellDepends = [
         aeson base bytestring tasty tasty-hunit text unordered-containers
       ];
       homepage = "https://github.com/hdgarrood/bower-json";
       description = "Read bower.json from Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};
  "boxes" = callPackage
    ({ mkDerivation, base, QuickCheck, split }:
     mkDerivation {
       pname = "boxes";
       version = "0.1.4";
       sha256 = "1n7xiplzd3s1a39nizwjcgsh3wi2348mp21c3fk19v98ialfjgjf";
       libraryHaskellDepends = [ base split ];
       testHaskellDepends = [ base QuickCheck split ];
       description = "2D text pretty-printing library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "brick" = callPackage
    ({ mkDerivation, base, containers, contravariant, data-default
     , deepseq, lens, template-haskell, text, text-zipper, transformers
     , vector, vty
     }:
     mkDerivation {
       pname = "brick";
       version = "0.4.1";
       sha256 = "0parliwzc76c5lnanv73n2500ic8zdxyf0bkbyazqxmlvizxz85y";
       configureFlags = [ "-fdemos" ];
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base containers contravariant data-default deepseq lens
         template-haskell text text-zipper transformers vector vty
       ];
       executableHaskellDepends = [
         base data-default lens text vector vty
       ];
       homepage = "https://github.com/jtdaugherty/brick/";
       description = "A declarative terminal user interface library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "broadcast-chan" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "broadcast-chan";
       version = "0.1.0";
       sha256 = "1dympzv8gwh31hd0x6ap29rm83rf2klkj34as2xjrayfs9kbp87s";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/merijn/broadcast-chan";
       description = "Broadcast channel type that avoids 0 reader space leaks";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bson" = callPackage
    ({ mkDerivation, base, binary, bytestring, cryptohash
     , data-binary-ieee754, mtl, network, text, time
     }:
     mkDerivation {
       pname = "bson";
       version = "0.3.2.1";
       sha256 = "07wr83cjgnj26ifv9gcmfp0qcx511kdj5wcd53vfsfvi1bwj8k05";
       libraryHaskellDepends = [
         base binary bytestring cryptohash data-binary-ieee754 mtl network
         text time
       ];
       doCheck = false;
       homepage = "http://github.com/mongodb-haskell/bson";
       description = "BSON documents are JSON-like objects with a standard binary encoding";
       license = "unknown";
     }) {};
  "bson-lens" = callPackage
    ({ mkDerivation, base, bson, lens, text }:
     mkDerivation {
       pname = "bson-lens";
       version = "0.1.1";
       sha256 = "0q5ixrfgybf80q0x2p80qjy1kqarm2129hmzzqgcpn7jvqbv8fyp";
       libraryHaskellDepends = [ base bson lens text ];
       homepage = "https://github.com/jb55/bson-lens";
       description = "BSON lenses";
       license = stdenv.lib.licenses.mit;
     }) {};
  "btrfs" = callPackage
    ({ mkDerivation, base, bytestring, time, unix }:
     mkDerivation {
       pname = "btrfs";
       version = "0.1.2.0";
       sha256 = "037yc1x8rkgw1yn6zvk2fk6in9vszc83k7iykqlqcxjq9jsbvrx1";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base bytestring time unix ];
       homepage = "https://github.com/redneb/hs-btrfs";
       description = "Bindings to the btrfs API";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "buffer-builder" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, bytestring, criterion
     , deepseq, HTF, http-types, json-builder, mtl, quickcheck-instances
     , text, unordered-containers, vector
     }:
     mkDerivation {
       pname = "buffer-builder";
       version = "0.2.4.1";
       sha256 = "15cpa56y3a9l0adyyvpbq6rhb6db4sxpw8nkgwvrm0nzc59xgkpr";
       libraryHaskellDepends = [
         base bytestring mtl text unordered-containers vector
       ];
       testHaskellDepends = [
         aeson attoparsec base bytestring criterion deepseq HTF
         quickcheck-instances text vector
       ];
       benchmarkHaskellDepends = [
         aeson base bytestring criterion deepseq http-types json-builder
         text vector
       ];
       homepage = "https://github.com/chadaustin/buffer-builder";
       description = "Library for efficiently building up buffers, one piece at a time";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bumper" = callPackage
    ({ mkDerivation, base, Cabal, containers, fclabels, process
     , regex-compat, split, strict
     }:
     mkDerivation {
       pname = "bumper";
       version = "0.6.0.3";
       sha256 = "1a6sqkdzq05az6yj3zmlcbx6bmhw4zjx2aijxfi481z3ifiy7z3w";
       revision = "3";
       editedCabalFile = "0r4fj5mxl452786jw6pr2nwhs5sszlxb9nwcrakr44jysm181lhw";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         base Cabal containers fclabels process regex-compat split strict
       ];
       doHaddock = false;
       homepage = "http://github.com/silkapp/bumper";
       description = "Automatically bump package versions, also transitively";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bustle" = callPackage
    ({ mkDerivation, base, bytestring, cairo, containers, dbus
     , directory, filepath, gio, glib, gtk3, hgettext, HUnit, mtl, pango
     , parsec, pcap, process, QuickCheck, setlocale, system-glib
     , test-framework, test-framework-hunit, text, time
     }:
     mkDerivation {
       pname = "bustle";
       version = "0.5.4";
       sha256 = "051z39s1xb86ab1a3v4yz8vv8k2kygpixzd878nb1p2pp6xjq74j";
       isLibrary = false;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryPkgconfigDepends = [ system-glib ];
       executableHaskellDepends = [
         base bytestring cairo containers dbus directory filepath gio glib
         gtk3 hgettext mtl pango parsec pcap process setlocale text time
       ];
       testHaskellDepends = [
         base bytestring cairo containers dbus directory filepath gtk3
         hgettext HUnit mtl pango pcap QuickCheck setlocale test-framework
         test-framework-hunit text
       ];
       doHaddock = false;
       homepage = "http://www.freedesktop.org/wiki/Software/Bustle/";
       description = "Draw sequence diagrams of D-Bus traffic";
       license = "unknown";
     }) {system-glib = pkgs.glib;};
  "byteable" = callPackage
    ({ mkDerivation, base, bytestring }:
     mkDerivation {
       pname = "byteable";
       version = "0.1.1";
       sha256 = "1qizg0kxxjqnd3cbrjhhidk5pbbciz0pb3z5kzikjjxnnnhk8fr4";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base bytestring ];
       homepage = "http://github.com/vincenthz/hs-byteable";
       description = "Type class for sequence of bytes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bytedump" = callPackage
    ({ mkDerivation, base, bytestring }:
     mkDerivation {
       pname = "bytedump";
       version = "1.0";
       sha256 = "1pf01mna3isx3i7m50yz3pw5ygz5sg8i8pshjb3yw8q41w2ba5xf";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base bytestring ];
       homepage = "http://github.com/vincenthz/hs-bytedump";
       description = "Flexible byte dump helpers for human readers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "byteorder" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "byteorder";
       version = "1.0.4";
       sha256 = "06995paxbxk8lldvarqpb3ygcjbg4v8dk4scib1rjzwlhssvn85x";
       libraryHaskellDepends = [ base ];
       homepage = "http://community.haskell.org/~aslatter/code/byteorder";
       description = "Exposes the native endianness or byte ordering of the system";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bytes" = callPackage
    ({ mkDerivation, base, binary, bytestring, cereal, containers
     , directory, doctest, filepath, hashable, mtl, scientific, text
     , time, transformers, transformers-compat, unordered-containers
     , void
     }:
     mkDerivation {
       pname = "bytes";
       version = "0.15.2";
       sha256 = "0d0z4sgl608x50zxhi0mlbag8g69x5sxs8763sz24djd2mqazyhb";
       revision = "1";
       editedCabalFile = "15lwy9l91rvzqpq3q174bxljwaby049mkilica3bp78m7b5wnb0h";
       libraryHaskellDepends = [
         base binary bytestring cereal containers hashable mtl scientific
         text time transformers transformers-compat unordered-containers
         void
       ];
       testHaskellDepends = [ base directory doctest filepath ];
       homepage = "https://github.com/ekmett/bytes";
       description = "Sharing code for serialization between binary and cereal";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "byteset" = callPackage
    ({ mkDerivation, base, binary }:
     mkDerivation {
       pname = "byteset";
       version = "0.1.1.0";
       sha256 = "18dg863wbbjh95yial4gy6vi5spwygp0l7dfx6bj00lz4xdrqj8k";
       libraryHaskellDepends = [ base binary ];
       description = "Set of bytes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bytestring-builder" = callPackage
    ({ mkDerivation, base, bytestring, deepseq }:
     mkDerivation {
       pname = "bytestring-builder";
       version = "0.10.6.0.0";
       sha256 = "1mkg24zl0rapb3gqzkyj5ibp07wx3yzd72hmfczssl0is63rjhww";
       libraryHaskellDepends = [ base bytestring deepseq ];
       doHaddock = false;
       description = "The new bytestring builder, packaged outside of GHC";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bytestring-conversion" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, case-insensitive
     , criterion, double-conversion, QuickCheck, tasty, tasty-quickcheck
     , text, transformers
     }:
     mkDerivation {
       pname = "bytestring-conversion";
       version = "0.3.1";
       sha256 = "1y2fhwz632sp7n0iw87lz2g8vks4jgxz2kw99kysgivxfd4fmdqk";
       revision = "2";
       editedCabalFile = "1x8c42cfzb6fdvgkxxdxcpdf16csimlzsgahb1axnplmr6b3ba63";
       libraryHaskellDepends = [
         attoparsec base bytestring case-insensitive double-conversion text
       ];
       testHaskellDepends = [
         base bytestring QuickCheck tasty tasty-quickcheck
       ];
       benchmarkHaskellDepends = [
         base bytestring criterion text transformers
       ];
       homepage = "https://github.com/twittner/bytestring-conversion/";
       description = "Type-classes to convert values to and from ByteString";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "bytestring-handle" = callPackage
    ({ mkDerivation, base, bytestring }:
     mkDerivation {
       pname = "bytestring-handle";
       version = "0.1.0.3";
       sha256 = "0dakwnpymxj2nghqsnq09862czby8hy0xl8m74yzqdnd9ky22g0z";
       libraryHaskellDepends = [ base bytestring ];
       doCheck = false;
       homepage = "http://hub.darcs.net/ganesh/bytestring-handle";
       description = "ByteString-backed Handles";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bytestring-lexing" = callPackage
    ({ mkDerivation, base, bytestring }:
     mkDerivation {
       pname = "bytestring-lexing";
       version = "0.5.0.2";
       sha256 = "0wrzniawhgpphc6yx1v972gyqxdbv0pizaz9bafahrshyb9svy81";
       libraryHaskellDepends = [ base bytestring ];
       homepage = "http://code.haskell.org/~wren/";
       description = "Parse and produce literals efficiently from strict or lazy bytestrings";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "bytestring-mmap" = callPackage
    ({ mkDerivation, base, bytestring, unix }:
     mkDerivation {
       pname = "bytestring-mmap";
       version = "0.2.2";
       sha256 = "1bv9xf4cpph1cbdwv6rbmq8ppi5wjpgd97lwln5l9ky5rvnaxg3v";
       libraryHaskellDepends = [ base bytestring unix ];
       homepage = "http://code.haskell.org/~dons/code/bytestring-mmap/";
       description = "mmap support for strict ByteStrings";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bytestring-progress" = callPackage
    ({ mkDerivation, base, bytestring, terminal-progress-bar, time }:
     mkDerivation {
       pname = "bytestring-progress";
       version = "1.0.5";
       sha256 = "02j9gmvncap4xzvvmj0s84bkhf4xh8plw5saakiljxf6zi7hpdwq";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base bytestring terminal-progress-bar time
       ];
       doHaddock = false;
       homepage = "http://github.com/acw/bytestring-progress";
       description = "A library for tracking the consumption of a lazy ByteString";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bytestring-read" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, bytestring-lexing
     , criterion, doctest, scientific, tasty, tasty-quickcheck, text
     , types-compat
     }:
     mkDerivation {
       pname = "bytestring-read";
       version = "0.3.1";
       sha256 = "0df6mb5fhfd1kgah5gv4q4ykxvl0y8hbqrdvm17nh33cxj2csj00";
       revision = "3";
       editedCabalFile = "15cin8zaybdahryza823zrb2d5dybsjmvjcik8sl8v70jnwzyayc";
       libraryHaskellDepends = [ base bytestring types-compat ];
       testHaskellDepends = [
         base bytestring doctest tasty tasty-quickcheck
       ];
       benchmarkHaskellDepends = [
         attoparsec base bytestring bytestring-lexing criterion scientific
         text
       ];
       homepage = "https://github.com/philopon/bytestring-read";
       description = "fast ByteString to number converting library";
       license = stdenv.lib.licenses.mit;
     }) {};
  "bytestring-trie" = callPackage
    ({ mkDerivation, base, binary, bytestring }:
     mkDerivation {
       pname = "bytestring-trie";
       version = "0.2.4.1";
       sha256 = "0qqklrvdcprchnl4bxr6w7zf6k5gncincl3kysm34gd04sszxr1g";
       libraryHaskellDepends = [ base binary bytestring ];
       homepage = "http://code.haskell.org/~wren/";
       description = "An efficient finite map from (byte)strings to values";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bzlib" = callPackage
    ({ mkDerivation, base, bytestring, bzip2 }:
     mkDerivation {
       pname = "bzlib";
       version = "0.5.0.5";
       sha256 = "0zh130vw719a8d11q5qzc3ilzgv8cqyc2a7r1a131cv1fjnd1rwy";
       libraryHaskellDepends = [ base bytestring ];
       librarySystemDepends = [ bzip2 ];
       description = "Compression and decompression in the bzip2 format";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) bzip2;};
  "bzlib-conduit" = callPackage
    ({ mkDerivation, base, bindings-DSL, bytestring, bzip2, conduit
     , conduit-extra, data-default, hspec, mtl, QuickCheck, random
     , resourcet
     }:
     mkDerivation {
       pname = "bzlib-conduit";
       version = "0.2.1.3";
       sha256 = "0jqg38zvxc0fpp74az0vm8klb88zwy076ncwzgq2zr0nrmr5cghm";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base bindings-DSL bytestring conduit conduit-extra data-default mtl
         resourcet
       ];
       librarySystemDepends = [ bzip2 ];
       testHaskellDepends = [
         base bytestring conduit conduit-extra hspec QuickCheck random
         resourcet
       ];
       benchmarkHaskellDepends = [ base conduit conduit-extra ];
       homepage = "https://github.com/snoyberg/bzlib-conduit";
       description = "Streaming compression/decompression via conduits";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) bzip2;};
  "c2hs" = callPackage
    ({ mkDerivation, array, base, bytestring, containers, directory
     , dlist, filepath, HUnit, language-c, pretty, process, shelly
     , test-framework, test-framework-hunit, text, transformers
     }:
     mkDerivation {
       pname = "c2hs";
       version = "0.27.1";
       sha256 = "07z4zya8g6kg5qc2q3v76d5i3cfgf24aa6wj6wjnqz0w4rzz12k6";
       isLibrary = false;
       isExecutable = true;
       enableSeparateDataOutput = true;
       executableHaskellDepends = [
         array base bytestring containers directory dlist filepath
         language-c pretty process
       ];
       testHaskellDepends = [
         base filepath HUnit shelly test-framework test-framework-hunit text
         transformers
       ];
       doHaddock = false;
       homepage = "https://github.com/haskell/c2hs";
       description = "C->Haskell FFI tool that gives some cross-language type safety";
       license = stdenv.lib.licenses.gpl2;
     }) {};
  "cabal-debian" = callPackage
    ({ mkDerivation, ansi-wl-pprint, base, bifunctors, Cabal
     , containers, data-default, debian, deepseq, Diff, directory
     , exceptions, filepath, hsemail, HUnit, lens, memoize, mtl
     , network-uri, newtype-generics, optparse-applicative, parsec
     , pretty, process, pureMD5, regex-tdfa, set-extra, syb, text, unix
     , Unixutils, utf8-string
     }:
     mkDerivation {
       pname = "cabal-debian";
       version = "4.32.2";
       sha256 = "1ba3n47vqy2pk29wza2732g74jr3czx86m6haxlc66si2b30zy33";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         ansi-wl-pprint base bifunctors Cabal containers data-default debian
         deepseq Diff directory exceptions filepath hsemail HUnit lens
         memoize mtl network-uri newtype-generics optparse-applicative
         parsec pretty process pureMD5 regex-tdfa set-extra syb text unix
         Unixutils utf8-string
       ];
       executableHaskellDepends = [
         base Cabal debian lens mtl pretty Unixutils
       ];
       testHaskellDepends = [
         base Cabal containers debian Diff directory filepath hsemail HUnit
         lens pretty process text
       ];
       doCheck = false;
       homepage = "https://github.com/ddssff/cabal-debian";
       description = "Create a Debianization for a Cabal package";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cabal-file-th" = callPackage
    ({ mkDerivation, base, Cabal, directory, template-haskell }:
     mkDerivation {
       pname = "cabal-file-th";
       version = "0.2.3";
       sha256 = "0kawvb5n56rkq4453l6pia3wrr6jvvdwkghi6i176n1gm2zf2ri8";
       revision = "1";
       editedCabalFile = "0zp3w7rnyh81jwcfr7zlj66z9lw4y5rrprg5n65618imlgsnrg2h";
       libraryHaskellDepends = [ base Cabal directory template-haskell ];
       testHaskellDepends = [ base ];
       homepage = "http://github.com/nkpart/cabal-file-th";
       description = "Template Haskell expressions for reading fields from a project's cabal file";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cabal-helper" = callPackage
    ({ mkDerivation, base, bytestring, Cabal, cabal-install, directory
     , extra, filepath, ghc-prim, mtl, process, template-haskell
     , temporary, transformers, unix, utf8-string
     }:
     mkDerivation {
       pname = "cabal-helper";
       version = "0.6.3.1";
       sha256 = "1zks3bxng6041k087rwsbg69zzsb4iqa1cybz3h4jrjgqn3rm6n1";
       revision = "1";
       editedCabalFile = "0hc09m5s8lmnlck2pkwdyg2wi9vsf8qw11q6v67rrhqxkqyns4v3";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base Cabal directory filepath ghc-prim mtl process transformers
       ];
       executableHaskellDepends = [
         base bytestring Cabal directory filepath ghc-prim process
         template-haskell temporary transformers utf8-string
       ];
       testHaskellDepends = [
         base bytestring Cabal directory extra filepath ghc-prim mtl process
         template-haskell temporary transformers unix utf8-string
       ];
       testToolDepends = [ cabal-install ];
       doCheck = false;
       description = "Simple interface to some of Cabal's configuration state used by ghc-mod";
       license = stdenv.lib.licenses.agpl3;
     }) {};
  "cabal-install" = callPackage
    ({ mkDerivation, array, base, bytestring, Cabal, containers
     , directory, filepath, HTTP, mtl, network, network-uri, pretty
     , process, random, stm, time, unix, zlib
     }:
     mkDerivation {
       pname = "cabal-install";
       version = "1.22.9.0";
       sha256 = "0h29x4049h7b1678437ajbd0dz5zxxqg4nd4g8y6aqq2fgjkah47";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         array base bytestring Cabal containers directory filepath HTTP mtl
         network network-uri pretty process random stm time unix zlib
       ];
       doHaddock = false;
       doCheck = false;
       postInstall = ''
         mkdir $out/etc
         mv bash-completion $out/etc/bash_completion.d
       '';
       homepage = "http://www.haskell.org/cabal/";
       description = "The command-line interface for Cabal and Hackage";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cabal-rpm" = callPackage
    ({ mkDerivation, base, Cabal, directory, filepath, process, time
     , unix
     }:
     mkDerivation {
       pname = "cabal-rpm";
       version = "0.9.9";
       sha256 = "0vrsjn57fma15z83vp329al1jr2xx4zagvs0p97c6prrx5xlhp1g";
       configureFlags = [ "-f-old-locale" ];
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         base Cabal directory filepath process time unix
       ];
       doHaddock = false;
       homepage = "https://github.com/juhp/cabal-rpm";
       description = "RPM packaging tool for Haskell Cabal-based packages";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "cabal-sort" = callPackage
    ({ mkDerivation, base, bytestring, Cabal, containers, directory
     , explicit-exception, fgl, filepath, process, transformers
     , utility-ht
     }:
     mkDerivation {
       pname = "cabal-sort";
       version = "0.0.5.2";
       sha256 = "03m6jk8q3h8qinn18ywwg5v2rrabr9fsn0x91al4phy6dvdzf4ls";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         base bytestring Cabal containers directory explicit-exception fgl
         filepath process transformers utility-ht
       ];
       doHaddock = false;
       description = "Topologically sort cabal packages";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cabal-src" = callPackage
    ({ mkDerivation, base, bytestring, conduit, conduit-extra
     , containers, directory, filepath, http-conduit, http-types
     , network, process, resourcet, shelly, system-fileio
     , system-filepath, tar, text, transformers
     }:
     mkDerivation {
       pname = "cabal-src";
       version = "0.3.0.1";
       sha256 = "0k4azahag2gnbz8pah86z5vfbwxpw5j9raxnfsl6ylh0pqkgvvw0";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         base bytestring conduit conduit-extra containers directory filepath
         http-conduit http-types network process resourcet shelly
         system-fileio system-filepath tar text transformers
       ];
       doHaddock = false;
       homepage = "https://github.com/yesodweb/cabal-src";
       description = "Alternative install procedure to avoid the diamond dependency issue";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cacophony" = callPackage
    ({ mkDerivation, base, bytestring, criterion, cryptonite, deepseq
     , lens, memory, mtl
     }:
     mkDerivation {
       pname = "cacophony";
       version = "0.4.0";
       sha256 = "0276jwkbf8ly6xn91x1ll2v3r4gcjjjjbpbdigc43v5s617f5xwi";
       libraryHaskellDepends = [
         base bytestring cryptonite lens memory mtl
       ];
       benchmarkHaskellDepends = [ base bytestring criterion deepseq ];
       doCheck = false;
       homepage = "https://github.com/centromere/cacophony";
       description = "A library implementing the Noise protocol";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "cairo" = callPackage
    ({ mkDerivation, array, base, bytestring, cairo, gtk2hs-buildtools
     , mtl, text, utf8-string
     }:
     mkDerivation {
       pname = "cairo";
       version = "0.13.1.1";
       sha256 = "1xl9kvvpdg9q4jp1r3d8s147y9qc4phimyga662sh4kq3r2j5bjq";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         array base bytestring mtl text utf8-string
       ];
       libraryPkgconfigDepends = [ cairo ];
       libraryToolDepends = [ gtk2hs-buildtools ];
       homepage = "http://projects.haskell.org/gtk2hs/";
       description = "Binding to the Cairo library";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) cairo;};
  "calculator" = callPackage
    ({ mkDerivation, base, containers, gtk, haskeline, hmatrix, parsec
     , plot-gtk-ui, QuickCheck, transformers
     }:
     mkDerivation {
       pname = "calculator";
       version = "0.4.1.1";
       sha256 = "0ba4nkyr6mil35wg9nyn2y1qszwlb93wlcqdk6176b64cf6zf0cn";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         base containers gtk haskeline hmatrix parsec plot-gtk-ui
         transformers
       ];
       testHaskellDepends = [
         base containers gtk parsec plot-gtk-ui QuickCheck
       ];
       doHaddock = false;
       homepage = "https://github.com/sumitsahrawat/calculator";
       description = "A calculator repl, with variables, functions & Mathematica like dynamic plots";
       license = stdenv.lib.licenses.gpl2;
     }) {};
  "carray" = callPackage
    ({ mkDerivation, array, base, binary, bytestring, ix-shapable
     , QuickCheck, syb
     }:
     mkDerivation {
       pname = "carray";
       version = "0.1.6.3";
       sha256 = "1zvvvm5k5axfk4pzni3ycrmqksrd56sdwbs5vcp6bnc8gjpqxxwj";
       revision = "1";
       editedCabalFile = "1px60zmsd7chbz4n55gd7f2afldb2sqy2idqpxis42s2mjh75ns2";
       libraryHaskellDepends = [
         array base binary bytestring ix-shapable QuickCheck syb
       ];
       testHaskellDepends = [ array base ix-shapable QuickCheck ];
       benchmarkHaskellDepends = [ array base ];
       description = "A C-compatible array library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cartel" = callPackage
    ({ mkDerivation, base, directory, filepath, multiarg, QuickCheck
     , random, tasty, tasty-quickcheck, tasty-th, time, transformers
     }:
     mkDerivation {
       pname = "cartel";
       version = "0.14.2.8";
       sha256 = "12crw33nf20s8vx58kixncrwacjzad98j399sqi3lkshlh96gly8";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base directory filepath time transformers
       ];
       testHaskellDepends = [
         base directory filepath multiarg QuickCheck random tasty
         tasty-quickcheck tasty-th time transformers
       ];
       homepage = "http://www.github.com/massysett/cartel";
       description = "Specify Cabal files in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "case-insensitive" = callPackage
    ({ mkDerivation, base, bytestring, deepseq, hashable, HUnit
     , test-framework, test-framework-hunit, text
     }:
     mkDerivation {
       pname = "case-insensitive";
       version = "1.2.0.5";
       sha256 = "001p7mc9jgy0yba07s9qvr5k6pkjv2sdg0i4b53pf0la057d0l64";
       revision = "1";
       editedCabalFile = "19haz40dpdi1c95s9skh0nhs1w44zigalin3fqk0arjq1w6swda9";
       libraryHaskellDepends = [ base bytestring deepseq hashable text ];
       testHaskellDepends = [
         base bytestring HUnit test-framework test-framework-hunit text
       ];
       homepage = "https://github.com/basvandijk/case-insensitive";
       description = "Case insensitive string comparison";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cased" = callPackage
    ({ mkDerivation, base, text }:
     mkDerivation {
       pname = "cased";
       version = "0.1.0.0";
       sha256 = "08xdc0mpp6b6inaxh6cr6ni08sy2ahfcbq8xbs3m4cfqbrqfd543";
       libraryHaskellDepends = [ base text ];
       homepage = "https://github.com/jb55/cased";
       description = "Track string casing in its type";
       license = stdenv.lib.licenses.mit;
     }) {};
  "cases" = callPackage
    ({ mkDerivation, attoparsec, base-prelude, loch-th, text }:
     mkDerivation {
       pname = "cases";
       version = "0.1.3";
       sha256 = "0a59jpplqz7z0ychiirlvnjvlcwqqs6izr3dyw27ys58kcbkn9k7";
       libraryHaskellDepends = [ attoparsec base-prelude loch-th text ];
       doCheck = false;
       homepage = "https://github.com/nikita-volkov/cases";
       description = "A converter for spinal, snake and camel cases";
       license = stdenv.lib.licenses.mit;
     }) {};
  "cassava" = callPackage
    ({ mkDerivation, array, attoparsec, base, blaze-builder, bytestring
     , containers, criterion, deepseq, hashable, HUnit, lazy-csv
     , QuickCheck, test-framework, test-framework-hunit
     , test-framework-quickcheck2, text, unordered-containers, vector
     }:
     mkDerivation {
       pname = "cassava";
       version = "0.4.5.0";
       sha256 = "1jbingp1v3rf4hx2ikkdhw3y72j3vdzizcs4d6pbmlzgck3s283k";
       libraryHaskellDepends = [
         array attoparsec base blaze-builder bytestring containers deepseq
         hashable text unordered-containers vector
       ];
       testHaskellDepends = [
         attoparsec base bytestring hashable HUnit QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2 text
         unordered-containers vector
       ];
       benchmarkHaskellDepends = [
         array attoparsec base blaze-builder bytestring containers criterion
         deepseq hashable lazy-csv text unordered-containers vector
       ];
       homepage = "https://github.com/hvr/cassava";
       description = "A CSV parsing and encoding library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cautious-file" = callPackage
    ({ mkDerivation, base, bytestring, directory, filepath, unix }:
     mkDerivation {
       pname = "cautious-file";
       version = "1.0.2";
       sha256 = "1sw5ngwrarq1lsd4c6v2wdmgbhkkq6kpybb62r8ccm11ddgn3yiq";
       revision = "1";
       editedCabalFile = "14yqf1wljrham5k4i4189h2pdlwgj3v59ff4p346fivdzh234666";
       libraryHaskellDepends = [
         base bytestring directory filepath unix
       ];
       doCheck = false;
       description = "Ways to write a file cautiously, to reduce the chances of problems such as data loss due to crashes or power failures";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cayley-client" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, bytestring, exceptions
     , http-client, http-conduit, lens, lens-aeson, mtl, text
     , transformers, unordered-containers, vector
     }:
     mkDerivation {
       pname = "cayley-client";
       version = "0.1.5.0";
       sha256 = "1dc8naakng2lssb8kvfdidxcpkrc3n482z4pr7grhzh0v8dkdlws";
       libraryHaskellDepends = [
         aeson attoparsec base bytestring exceptions http-client
         http-conduit lens lens-aeson mtl text transformers
         unordered-containers vector
       ];
       homepage = "https://github.com/MichelBoucey/cayley-client";
       description = "A Haskell client for the Cayley graph database";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cereal" = callPackage
    ({ mkDerivation, array, base, bytestring, containers, ghc-prim
     , QuickCheck, test-framework, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "cereal";
       version = "0.5.1.0";
       sha256 = "1jq4b40v8srgv5cl4272pgql329kgqlzibhd0bcy40ml61f5my9h";
       libraryHaskellDepends = [
         array base bytestring containers ghc-prim
       ];
       testHaskellDepends = [
         base bytestring QuickCheck test-framework
         test-framework-quickcheck2
       ];
       homepage = "https://github.com/GaloisInc/cereal";
       description = "A binary serialization library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cereal-conduit" = callPackage
    ({ mkDerivation, base, bytestring, cereal, conduit, HUnit, mtl
     , resourcet, transformers
     }:
     mkDerivation {
       pname = "cereal-conduit";
       version = "0.7.3";
       sha256 = "18h09j16m4yc4fcp80x7m1p2c87q6f628z36y8bnxbcjc9m95gq5";
       libraryHaskellDepends = [
         base bytestring cereal conduit resourcet transformers
       ];
       testHaskellDepends = [
         base bytestring cereal conduit HUnit mtl resourcet transformers
       ];
       homepage = "https://github.com/snoyberg/conduit";
       description = "Turn Data.Serialize Gets and Puts into Sources, Sinks, and Conduits";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cereal-vector" = callPackage
    ({ mkDerivation, base, bytestring, cereal, QuickCheck, vector }:
     mkDerivation {
       pname = "cereal-vector";
       version = "0.2.0.1";
       sha256 = "0czrb4l1n73cfxxlzbcqfa34qa3gw0m5w5mlz0rawylyqfk8a1pz";
       libraryHaskellDepends = [ base bytestring cereal vector ];
       testHaskellDepends = [ base cereal QuickCheck vector ];
       homepage = "https://github.com/acfoltzer/cereal-vector";
       description = "Serialize instances for Data.Vector types.";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cgi" = callPackage
    ({ mkDerivation, base, bytestring, containers, exceptions, mtl
     , multipart, network, network-uri, old-locale, old-time, parsec
     , xhtml
     }:
     mkDerivation {
       pname = "cgi";
       version = "3001.2.2.3";
       sha256 = "197w7jfs04n5z24liks5cgcdfvcj0rqs156532gn6gayh1azwmyv";
       libraryHaskellDepends = [
         base bytestring containers exceptions mtl multipart network
         network-uri old-locale old-time parsec xhtml
       ];
       homepage = "https://github.com/cheecheeo/haskell-cgi";
       description = "A library for writing CGI programs";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "charset" = callPackage
    ({ mkDerivation, array, base, bytestring, containers, semigroups
     , unordered-containers
     }:
     mkDerivation {
       pname = "charset";
       version = "0.3.7.1";
       sha256 = "1gn0m96qpjww8hpp2g1as5yy0wcwy4iq73h3kz6g0yxxhcl5sh9x";
       libraryHaskellDepends = [
         array base bytestring containers semigroups unordered-containers
       ];
       homepage = "http://github.com/ekmett/charset";
       description = "Fast unicode character sets based on complemented PATRICIA tries";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "charsetdetect-ae" = callPackage
    ({ mkDerivation, base, bytestring }:
     mkDerivation {
       pname = "charsetdetect-ae";
       version = "1.1.0.1";
       sha256 = "1y6b3lxmc97228l4jabalgwakixgnjydlb2j81z3bzkc2f8nr88x";
       libraryHaskellDepends = [ base bytestring ];
       homepage = "http://github.com/aelve/charsetdetect-ae";
       description = "Character set detection using Mozilla's Universal Character Set Detector";
       license = "LGPL";
     }) {};
  "cheapskate" = callPackage
    ({ mkDerivation, aeson, base, blaze-html, bytestring, containers
     , data-default, http-types, mtl, syb, text, uniplate, wai
     , wai-extra, xss-sanitize
     }:
     mkDerivation {
       pname = "cheapskate";
       version = "0.1.0.4";
       sha256 = "0drx1hlqvdcrij4097q6bxhbfcqm73jsqv1wwhd3hsnjdmr46ch2";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base blaze-html containers data-default mtl syb text uniplate
         xss-sanitize
       ];
       executableHaskellDepends = [
         aeson base blaze-html bytestring http-types text wai wai-extra
       ];
       homepage = "http://github.com/jgm/cheapskate";
       description = "Experimental markdown processor";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "check-email" = callPackage
    ({ mkDerivation, base, bytestring, email-validate, resolv }:
     mkDerivation {
       pname = "check-email";
       version = "1.0";
       sha256 = "1drw8rspdc4a7jw2ql3fi1dcmw56ah5csf2bil6ii8ccq5vsbfyz";
       revision = "1";
       editedCabalFile = "0x8dq8ja9di728b2fcqji655xrp9ckw58ryd02286rg7xrp63y1r";
       libraryHaskellDepends = [ base bytestring email-validate ];
       librarySystemDepends = [ resolv ];
       description = "Confirm whether an email is valid and probably existant";
       license = stdenv.lib.licenses.bsd3;
     }) {resolv = null;};
  "checkers" = callPackage
    ({ mkDerivation, array, base, QuickCheck, random }:
     mkDerivation {
       pname = "checkers";
       version = "0.4.4";
       sha256 = "17cfznlxps4sd680h0ika3bsc4f69hra3c9jihc9gvs9nkfq9b8i";
       libraryHaskellDepends = [ array base QuickCheck random ];
       description = "Check properties on standard classes and data structures";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "chell" = callPackage
    ({ mkDerivation, ansi-terminal, base, bytestring, options, patience
     , random, template-haskell, text, transformers
     }:
     mkDerivation {
       pname = "chell";
       version = "0.4.0.1";
       sha256 = "0lb95abzxl4a87nfqxsxpb3a39pd52cci43hcvj8615hyhqvs2jz";
       libraryHaskellDepends = [
         ansi-terminal base bytestring options patience random
         template-haskell text transformers
       ];
       homepage = "https://john-millikin.com/software/chell/";
       description = "A simple and intuitive library for automated testing";
       license = stdenv.lib.licenses.mit;
     }) {};
  "chell-quickcheck" = callPackage
    ({ mkDerivation, base, chell, QuickCheck, random }:
     mkDerivation {
       pname = "chell-quickcheck";
       version = "0.2.5";
       sha256 = "02bkcnx5k6r5csdnnkvk4wfd0l36nxb87i1463ynw17n7ym9s4cs";
       libraryHaskellDepends = [ base chell QuickCheck random ];
       homepage = "https://john-millikin.com/software/chell/";
       description = "QuickCheck support for the Chell testing library";
       license = stdenv.lib.licenses.mit;
     }) {};
  "chunked-data" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring, containers
     , mono-traversable, semigroups, text, transformers, vector
     }:
     mkDerivation {
       pname = "chunked-data";
       version = "0.2.0";
       sha256 = "0wmjpb0vq0nqvy317gmzxqh8yqq1bx0h2r90vqfpq3cv3z4g784s";
       revision = "3";
       editedCabalFile = "0251jrg9msn04b405q2kc6wrfw9991masha7khwb951p8biz1lcg";
       libraryHaskellDepends = [
         base blaze-builder bytestring containers mono-traversable
         semigroups text transformers vector
       ];
       homepage = "https://github.com/fpco/chunked-data";
       description = "Typeclasses for dealing with various chunked data representations";
       license = stdenv.lib.licenses.mit;
     }) {};
  "cipher-aes" = callPackage
    ({ mkDerivation, base, byteable, bytestring, crypto-cipher-tests
     , crypto-cipher-types, QuickCheck, securemem, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "cipher-aes";
       version = "0.2.11";
       sha256 = "05ahz6kjq0fl1w66gpiqy0vndli5yx1pbsbw9ni3viwqas4p3cfk";
       libraryHaskellDepends = [
         base byteable bytestring crypto-cipher-types securemem
       ];
       testHaskellDepends = [
         base byteable bytestring crypto-cipher-tests crypto-cipher-types
         QuickCheck test-framework test-framework-quickcheck2
       ];
       homepage = "https://github.com/vincenthz/hs-cipher-aes";
       description = "Fast AES cipher implementation with advanced mode of operations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cipher-aes128" = callPackage
    ({ mkDerivation, base, bytestring, cereal, cipher-aes, criterion
     , crypto-api, entropy, tagged
     }:
     mkDerivation {
       pname = "cipher-aes128";
       version = "0.7.0.1";
       sha256 = "0qknpgg7dimx2nm4bzig7vvzcq3kvbxjv5rb0s4f2ina4vwczbhq";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring cereal crypto-api tagged
       ];
       benchmarkHaskellDepends = [
         base bytestring cereal cipher-aes criterion crypto-api entropy
         tagged
       ];
       homepage = "https://github.com/TomMD/cipher-aes128";
       description = "AES and common modes using AES-NI when available";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cipher-blowfish" = callPackage
    ({ mkDerivation, base, byteable, bytestring, crypto-cipher-tests
     , crypto-cipher-types, QuickCheck, securemem, test-framework
     , test-framework-quickcheck2, vector
     }:
     mkDerivation {
       pname = "cipher-blowfish";
       version = "0.0.3";
       sha256 = "0hb67gmiyqrknynz5am8nada1b1v47rqla87dw5nvfhxhl51fhcg";
       libraryHaskellDepends = [
         base byteable bytestring crypto-cipher-types securemem vector
       ];
       testHaskellDepends = [
         base byteable bytestring crypto-cipher-tests crypto-cipher-types
         QuickCheck test-framework test-framework-quickcheck2
       ];
       homepage = "http://github.com/vincenthz/hs-crypto-cipher";
       description = "Blowfish cipher";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cipher-camellia" = callPackage
    ({ mkDerivation, base, byteable, bytestring, crypto-cipher-tests
     , crypto-cipher-types, QuickCheck, securemem, test-framework
     , test-framework-quickcheck2, vector
     }:
     mkDerivation {
       pname = "cipher-camellia";
       version = "0.0.2";
       sha256 = "19z2mi1rvp8fsqjdbmrm1hdlxmx61yr55fyknmmn945qrlvx234d";
       libraryHaskellDepends = [
         base byteable bytestring crypto-cipher-types securemem vector
       ];
       testHaskellDepends = [
         base byteable bytestring crypto-cipher-tests crypto-cipher-types
         QuickCheck test-framework test-framework-quickcheck2
       ];
       homepage = "http://github.com/vincenthz/hs-crypto-cipher";
       description = "Camellia block cipher primitives";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cipher-des" = callPackage
    ({ mkDerivation, base, byteable, bytestring, crypto-cipher-tests
     , crypto-cipher-types, QuickCheck, securemem, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "cipher-des";
       version = "0.0.6";
       sha256 = "1isazxa2nr1y13y0danfk7wghy34rfpn3f43rw714nk2xk6vrwc5";
       libraryHaskellDepends = [
         base byteable bytestring crypto-cipher-types securemem
       ];
       testHaskellDepends = [
         base byteable bytestring crypto-cipher-tests crypto-cipher-types
         QuickCheck test-framework test-framework-quickcheck2
       ];
       homepage = "http://github.com/vincenthz/hs-crypto-cipher";
       description = "DES and 3DES primitives";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cipher-rc4" = callPackage
    ({ mkDerivation, base, byteable, bytestring, crypto-cipher-tests
     , crypto-cipher-types, QuickCheck, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "cipher-rc4";
       version = "0.1.4";
       sha256 = "0k9qf0cn5yxc4qlqikcm5yyrnkkvr6g3v7306cp8iwz7r4dp6zn6";
       libraryHaskellDepends = [
         base byteable bytestring crypto-cipher-types
       ];
       testHaskellDepends = [
         base bytestring crypto-cipher-tests crypto-cipher-types QuickCheck
         test-framework test-framework-quickcheck2
       ];
       homepage = "http://github.com/vincenthz/hs-cipher-rc4";
       description = "Fast RC4 cipher implementation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "circle-packing" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "circle-packing";
       version = "0.1.0.5";
       sha256 = "17sw5wy76hdk34nldcd44sqbf5fdhwii0racpd3zfrkad77d26h4";
       libraryHaskellDepends = [ base ];
       description = "Simple heuristic for packing discs of varying radii in a circle";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "clash-ghc" = callPackage
    ({ mkDerivation, array, base, bifunctors, bytestring, clash-lib
     , clash-prelude, clash-systemverilog, clash-verilog, clash-vhdl
     , containers, directory, filepath, ghc, ghc-typelits-extra
     , ghc-typelits-natnormalise, hashable, haskeline, lens, mtl
     , process, text, transformers, unbound-generics, unix
     , unordered-containers
     }:
     mkDerivation {
       pname = "clash-ghc";
       version = "0.6.11";
       sha256 = "137wm669y5dak2l70cqnmrfh5r85g0jg8yxjpm1ls667xvqdnbbi";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         array base bifunctors bytestring clash-lib clash-prelude
         clash-systemverilog clash-verilog clash-vhdl containers directory
         filepath ghc ghc-typelits-extra ghc-typelits-natnormalise hashable
         haskeline lens mtl process text transformers unbound-generics unix
         unordered-containers
       ];
       doHaddock = false;
       homepage = "http://www.clash-lang.org/";
       description = "CAES Language for Synchronous Hardware";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "clash-lib" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, bytestring, clash-prelude
     , concurrent-supply, containers, deepseq, directory, errors, fgl
     , filepath, hashable, lens, mtl, pretty, process, template-haskell
     , text, time, transformers, unbound-generics, unordered-containers
     , uu-parsinglib, wl-pprint-text
     }:
     mkDerivation {
       pname = "clash-lib";
       version = "0.6.11";
       sha256 = "1s0naak8b3a9c7fvk3cd4qcjaf74xnywi3g94cw1855dk5y92c21";
       libraryHaskellDepends = [
         aeson attoparsec base bytestring clash-prelude concurrent-supply
         containers deepseq directory errors fgl filepath hashable lens mtl
         pretty process template-haskell text time transformers
         unbound-generics unordered-containers uu-parsinglib wl-pprint-text
       ];
       homepage = "http://www.clash-lang.org/";
       description = "CAES Language for Synchronous Hardware - As a Library";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "clash-prelude" = callPackage
    ({ mkDerivation, array, base, data-default, doctest, ghc-prim
     , ghc-typelits-extra, ghc-typelits-natnormalise, integer-gmp, lens
     , QuickCheck, reflection, singletons, template-haskell, th-lift
     }:
     mkDerivation {
       pname = "clash-prelude";
       version = "0.10.6";
       sha256 = "0dwjdqzgafjakl463cs0z9jr49hakq1ars5kmffbpv1ggfnc0mkh";
       libraryHaskellDepends = [
         array base data-default ghc-prim ghc-typelits-extra
         ghc-typelits-natnormalise integer-gmp lens QuickCheck reflection
         singletons template-haskell th-lift
       ];
       testHaskellDepends = [ base doctest ];
       homepage = "http://www.clash-lang.org/";
       description = "CAES Language for Synchronous Hardware - Prelude library";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "clash-systemverilog" = callPackage
    ({ mkDerivation, base, clash-lib, clash-prelude, fgl, lens, mtl
     , text, unordered-containers, wl-pprint-text
     }:
     mkDerivation {
       pname = "clash-systemverilog";
       version = "0.6.6";
       sha256 = "02l4v3j7ldgvkqmdsxpr265z055y88bs0a7f29jcdayq1vxwbbw9";
       revision = "1";
       editedCabalFile = "02sl3p65ylcvdj14jfwj8dp52xxyz0d1wjalkgrxiszs1gdcyrk7";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base clash-lib clash-prelude fgl lens mtl text unordered-containers
         wl-pprint-text
       ];
       homepage = "http://www.clash-lang.org/";
       description = "CAES Language for Synchronous Hardware - SystemVerilog backend";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "clash-verilog" = callPackage
    ({ mkDerivation, base, clash-lib, clash-prelude, fgl, lens, mtl
     , text, unordered-containers, wl-pprint-text
     }:
     mkDerivation {
       pname = "clash-verilog";
       version = "0.6.6";
       sha256 = "0i5q3dq3hwwb7hpypwi9ip3fy8lxypy3wmigqdph2jgqf8nppnld";
       revision = "1";
       editedCabalFile = "17iwd4265hhp9fic9rn79kyi6df9j034g78r78w9fgb6ddwvb1yk";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base clash-lib clash-prelude fgl lens mtl text unordered-containers
         wl-pprint-text
       ];
       homepage = "http://www.clash-lang.org/";
       description = "CAES Language for Synchronous Hardware - Verilog backend";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "clash-vhdl" = callPackage
    ({ mkDerivation, base, clash-lib, clash-prelude, fgl, lens, mtl
     , text, unordered-containers, wl-pprint-text
     }:
     mkDerivation {
       pname = "clash-vhdl";
       version = "0.6.8";
       sha256 = "1hgk5fk88yqk6697i3kx4cc0hshgjl8z7db0hc1cf9fn05qw1s1w";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base clash-lib clash-prelude fgl lens mtl text unordered-containers
         wl-pprint-text
       ];
       homepage = "http://www.clash-lang.org/";
       description = "CAES Language for Synchronous Hardware - VHDL backend";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "classy-prelude" = callPackage
    ({ mkDerivation, base, basic-prelude, bifunctors, bytestring
     , chunked-data, containers, dlist, enclosed-exceptions, exceptions
     , ghc-prim, hashable, hspec, lifted-base, mono-traversable, mtl
     , mutable-containers, primitive, QuickCheck, semigroups, stm, text
     , time, time-locale-compat, transformers, unordered-containers
     , vector, vector-instances
     }:
     mkDerivation {
       pname = "classy-prelude";
       version = "0.12.6";
       sha256 = "0cz36ddpq0i49sbx71g7qlscf3abyv5al89lamg4c549k4hsmaw5";
       libraryHaskellDepends = [
         base basic-prelude bifunctors bytestring chunked-data containers
         dlist enclosed-exceptions exceptions ghc-prim hashable lifted-base
         mono-traversable mtl mutable-containers primitive semigroups stm
         text time time-locale-compat transformers unordered-containers
         vector vector-instances
       ];
       testHaskellDepends = [
         base containers hspec QuickCheck transformers unordered-containers
       ];
       homepage = "https://github.com/snoyberg/classy-prelude";
       description = "A typeclass-based Prelude";
       license = stdenv.lib.licenses.mit;
     }) {};
  "classy-prelude-conduit" = callPackage
    ({ mkDerivation, base, bytestring, classy-prelude, conduit
     , conduit-combinators, hspec, monad-control, QuickCheck, resourcet
     , transformers, void
     }:
     mkDerivation {
       pname = "classy-prelude-conduit";
       version = "0.12.6";
       sha256 = "1vk97nlxl4xcmmyk47asm41dfzin6pvdb0xy9s8k4mhl50cfgbmg";
       libraryHaskellDepends = [
         base bytestring classy-prelude conduit conduit-combinators
         monad-control resourcet transformers void
       ];
       testHaskellDepends = [
         base bytestring conduit hspec QuickCheck transformers
       ];
       homepage = "https://github.com/snoyberg/classy-prelude";
       description = "conduit instances for classy-prelude";
       license = stdenv.lib.licenses.mit;
     }) {};
  "classy-prelude-yesod" = callPackage
    ({ mkDerivation, aeson, base, classy-prelude
     , classy-prelude-conduit, data-default, http-conduit, http-types
     , persistent, yesod, yesod-newsfeed, yesod-static
     }:
     mkDerivation {
       pname = "classy-prelude-yesod";
       version = "0.12.6";
       sha256 = "0f88yr024ciry9ld627xgb1lvifbzwafdq5w4w6dyklsskqcfrfv";
       libraryHaskellDepends = [
         aeson base classy-prelude classy-prelude-conduit data-default
         http-conduit http-types persistent yesod yesod-newsfeed
         yesod-static
       ];
       homepage = "https://github.com/snoyberg/classy-prelude";
       description = "Provide a classy prelude including common Yesod functionality";
       license = stdenv.lib.licenses.mit;
     }) {};
  "clay" = callPackage
    ({ mkDerivation, base, mtl, text }:
     mkDerivation {
       pname = "clay";
       version = "0.10.1";
       sha256 = "0m0ajbgypn9ki741x2bmcmpmpkccazv76wh8b9gha9483cl21f1v";
       revision = "1";
       editedCabalFile = "0qq21aac9l9236qr13lfsa80sliqqzxdflh54nzz4w4l1hr3rjwf";
       libraryHaskellDepends = [ base mtl text ];
       doCheck = false;
       homepage = "http://fvisser.nl/clay";
       description = "CSS preprocessor as embedded Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "clckwrks" = callPackage
    ({ mkDerivation, acid-state, aeson, aeson-qq, attoparsec, base
     , blaze-html, bytestring, cereal, containers, directory, filepath
     , happstack-authenticate, happstack-hsp, happstack-jmacro
     , happstack-server, happstack-server-tls, hsp, hsx-jmacro, hsx2hs
     , ixset, jmacro, lens, mtl, network, network-uri, old-locale
     , openssl, process, random, reform, reform-happstack, reform-hsp
     , safecopy, stm, tagsoup, text, time, time-locale-compat
     , unordered-containers, userid, utf8-string, uuid-orphans
     , uuid-types, vector, web-plugins, web-routes, web-routes-happstack
     , web-routes-hsp, web-routes-th, xss-sanitize
     }:
     mkDerivation {
       pname = "clckwrks";
       version = "0.23.14";
       sha256 = "19vf8f8spxc0qz0zfh42an79dy34kvcpfid0mkcwvc7fbfz53hqp";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         acid-state aeson aeson-qq attoparsec base blaze-html bytestring
         cereal containers directory filepath happstack-authenticate
         happstack-hsp happstack-jmacro happstack-server
         happstack-server-tls hsp hsx-jmacro hsx2hs ixset jmacro lens mtl
         network network-uri old-locale process random reform
         reform-happstack reform-hsp safecopy stm tagsoup text time
         time-locale-compat unordered-containers userid utf8-string
         uuid-orphans uuid-types vector web-plugins web-routes
         web-routes-happstack web-routes-hsp web-routes-th xss-sanitize
       ];
       librarySystemDepends = [ openssl ];
       homepage = "http://www.clckwrks.com/";
       description = "A secure, reliable content management system (CMS) and blogging platform";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) openssl;};
  "clckwrks-cli" = callPackage
    ({ mkDerivation, acid-state, base, clckwrks, haskeline, mtl
     , network, parsec
     }:
     mkDerivation {
       pname = "clckwrks-cli";
       version = "0.2.16";
       sha256 = "1rqjkj8nkm1hiidclbkc3wh9lz5kkadkn1r7szhrpcxny6hwlks2";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         acid-state base clckwrks haskeline mtl network parsec
       ];
       doHaddock = false;
       homepage = "http://www.clckwrks.com/";
       description = "a command-line interface for adminstrating some aspects of clckwrks";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "clckwrks-plugin-media" = callPackage
    ({ mkDerivation, acid-state, attoparsec, base, blaze-html, cereal
     , clckwrks, containers, directory, filepath, gd, happstack-server
     , hsp, hsx2hs, ixset, magic, mtl, reform, reform-happstack
     , reform-hsp, safecopy, text, web-plugins, web-routes
     , web-routes-th
     }:
     mkDerivation {
       pname = "clckwrks-plugin-media";
       version = "0.6.15";
       sha256 = "11avr94xr0bj1q6f6hbmxrrcswdvvcr21ss5as3vn5w0viyih647";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         acid-state attoparsec base blaze-html cereal clckwrks containers
         directory filepath gd happstack-server hsp ixset magic mtl reform
         reform-happstack reform-hsp safecopy text web-plugins web-routes
         web-routes-th
       ];
       libraryToolDepends = [ hsx2hs ];
       homepage = "http://clckwrks.com/";
       description = "media plugin for clckwrks";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "clckwrks-plugin-page" = callPackage
    ({ mkDerivation, acid-state, aeson, attoparsec, base, clckwrks
     , containers, directory, filepath, happstack-hsp, happstack-server
     , hsp, hsx2hs, ixset, mtl, old-locale, random, reform
     , reform-happstack, reform-hsp, safecopy, tagsoup, template-haskell
     , text, time, time-locale-compat, uuid, web-plugins, web-routes
     , web-routes-happstack, web-routes-th
     }:
     mkDerivation {
       pname = "clckwrks-plugin-page";
       version = "0.4.3.1";
       sha256 = "1d4n91fd4rn4hkm59f2lsqidikjg50dby2jq8y8hdfrmf1rxi515";
       libraryHaskellDepends = [
         acid-state aeson attoparsec base clckwrks containers directory
         filepath happstack-hsp happstack-server hsp hsx2hs ixset mtl
         old-locale random reform reform-happstack reform-hsp safecopy
         tagsoup template-haskell text time time-locale-compat uuid
         web-plugins web-routes web-routes-happstack web-routes-th
       ];
       homepage = "http://www.clckwrks.com/";
       description = "support for CMS/Blogging in clckwrks";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "clckwrks-theme-bootstrap" = callPackage
    ({ mkDerivation, base, clckwrks, happstack-authenticate, hsp
     , hsx-jmacro, hsx2hs, jmacro, mtl, text, web-plugins
     }:
     mkDerivation {
       pname = "clckwrks-theme-bootstrap";
       version = "0.4.1";
       sha256 = "0lpqhll3jpj0vz6rafy04zfnl3z04g80229f6fmfja6rqm19lfar";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base clckwrks happstack-authenticate hsp hsx-jmacro hsx2hs jmacro
         mtl text web-plugins
       ];
       homepage = "http://www.clckwrks.com/";
       description = "simple bootstrap based template for clckwrks";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "clientsession" = callPackage
    ({ mkDerivation, base, base64-bytestring, bytestring, cereal
     , cipher-aes, containers, cprng-aes, crypto-api, crypto-random
     , directory, entropy, hspec, HUnit, QuickCheck, setenv, skein
     , tagged, transformers
     }:
     mkDerivation {
       pname = "clientsession";
       version = "0.9.1.1";
       sha256 = "08h0461ydhfymw2pya472n81kx5rqp7awfgxlbz2r851rl5kqmn9";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base base64-bytestring bytestring cereal cipher-aes cprng-aes
         crypto-api crypto-random directory entropy setenv skein tagged
       ];
       executableHaskellDepends = [ base ];
       testHaskellDepends = [
         base bytestring cereal containers hspec HUnit QuickCheck
         transformers
       ];
       homepage = "http://github.com/yesodweb/clientsession/tree/master";
       description = "Securely store session data in a client-side cookie";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "clock" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "clock";
       version = "0.6.0.1";
       sha256 = "0x2z5gsqvz5yzbbx5ialanscxkpqdzxfds58bxvvib7dwg7wg8l8";
       libraryHaskellDepends = [ base ];
       doCheck = false;
       homepage = "https://github.com/corsis/clock";
       description = "High-resolution clock functions: monotonic, realtime, cputime";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "clustering" = callPackage
    ({ mkDerivation, base, binary, containers, matrices, mwc-random
     , parallel, primitive, vector
     }:
     mkDerivation {
       pname = "clustering";
       version = "0.2.1";
       sha256 = "1jxrgb13zm8bqcsx39fp31lrpna3y0pn7ckcf9q6gljz327c4y2h";
       libraryHaskellDepends = [
         base binary containers matrices mwc-random parallel primitive
         vector
       ];
       doCheck = false;
       description = "High performance clustering algorithms";
       license = stdenv.lib.licenses.mit;
     }) {};
  "cmark" = callPackage
    ({ mkDerivation, base, bytestring, HUnit, text }:
     mkDerivation {
       pname = "cmark";
       version = "0.5.1";
       sha256 = "0ijlz8z8cs0aycidsdmcib4l327fyj4nnl5xgg99sv2dly4jhfp1";
       libraryHaskellDepends = [ base bytestring text ];
       testHaskellDepends = [ base HUnit text ];
       homepage = "https://github.com/jgm/commonmark-hs";
       description = "Fast, accurate CommonMark (Markdown) parser and renderer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cmdargs" = callPackage
    ({ mkDerivation, base, filepath, process, template-haskell
     , transformers
     }:
     mkDerivation {
       pname = "cmdargs";
       version = "0.10.14";
       sha256 = "0n6f9c298y147wwc36226vjajv76xh79ai17dn3s350kq59h1diq";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base filepath process template-haskell transformers
       ];
       homepage = "https://github.com/ndmitchell/cmdargs#readme";
       description = "Command line argument processing";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "code-builder" = callPackage
    ({ mkDerivation, base, containers }:
     mkDerivation {
       pname = "code-builder";
       version = "0.1.3";
       sha256 = "1ax4c19xkszahcxvwc1wa1hrgk6ajck5sbprbplsi1gc9jj4g7jm";
       libraryHaskellDepends = [ base containers ];
       description = "Simple system for generating code";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "codex" = callPackage
    ({ mkDerivation, base, bytestring, Cabal, containers, cryptohash
     , directory, either, filepath, hackage-db, http-client, lens
     , machines, machines-directory, MissingH, monad-loops, network
     , process, tar, text, transformers, wreq, yaml, zlib
     }:
     mkDerivation {
       pname = "codex";
       version = "0.4.0.8";
       sha256 = "0zqinlbdzk4096jy03fjjs1zl63kv7s17w5amqn06phfm6rfcj5n";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring Cabal containers cryptohash directory either
         filepath hackage-db http-client lens machines machines-directory
         process tar text transformers wreq yaml zlib
       ];
       executableHaskellDepends = [
         base bytestring Cabal directory either filepath hackage-db MissingH
         monad-loops network process transformers wreq yaml
       ];
       homepage = "http://github.com/aloiscochard/codex";
       description = "A ctags file generator for cabal project dependencies";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "colour" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "colour";
       version = "2.3.3";
       sha256 = "1qmn1778xzg07jg9nx4k1spdz2llivpblf6wwrps1qpqjhsac5cd";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base ];
       homepage = "http://www.haskell.org/haskellwiki/Colour";
       description = "A model for human colour/color perception";
       license = stdenv.lib.licenses.mit;
     }) {};
  "commutative" = callPackage
    ({ mkDerivation, base, QuickCheck, quickcheck-instances, random
     , semigroups, tasty, tasty-hunit, tasty-quickcheck
     }:
     mkDerivation {
       pname = "commutative";
       version = "0.0.1.4";
       sha256 = "1ky9axa5vs12w4m8wzlnw1cf3m9ndq239534rxfknm3k5h0ldrqd";
       libraryHaskellDepends = [ base random semigroups ];
       testHaskellDepends = [
         base QuickCheck quickcheck-instances random semigroups tasty
         tasty-hunit tasty-quickcheck
       ];
       description = "Commutative binary operations";
       license = stdenv.lib.licenses.mit;
     }) {};
  "comonad" = callPackage
    ({ mkDerivation, base, containers, contravariant, directory
     , distributive, doctest, filepath, semigroups, tagged, transformers
     , transformers-compat
     }:
     mkDerivation {
       pname = "comonad";
       version = "4.2.7.2";
       sha256 = "0arvbaxgkawzdp38hh53akkahjg2aa3kj2b4ns0ni8a5ylg2cqmp";
       revision = "1";
       editedCabalFile = "03yfb6x9654x5bfhgx5rfvkfjnnvip6lm6malifpacjjghwi9lnb";
       libraryHaskellDepends = [
         base containers contravariant distributive semigroups tagged
         transformers transformers-compat
       ];
       testHaskellDepends = [ base directory doctest filepath ];
       homepage = "http://github.com/ekmett/comonad/";
       description = "Comonads";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "comonad-transformers" = callPackage
    ({ mkDerivation, base, comonad }:
     mkDerivation {
       pname = "comonad-transformers";
       version = "4.0";
       sha256 = "13zzp6r6s6c80skniphwvzxhpazbyal5854m53139kgcw560rv6z";
       libraryHaskellDepends = [ base comonad ];
       doHaddock = false;
       homepage = "http://github.com/ekmett/comonad-transformers/";
       description = "This package has been merged into comonad 4.0";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "comonads-fd" = callPackage
    ({ mkDerivation, base, comonad }:
     mkDerivation {
       pname = "comonads-fd";
       version = "4.0";
       sha256 = "19xpv0dsz7w3a1sq1gdxwzglfal45vj2s22zb12g9mpk5rp3hw1s";
       libraryHaskellDepends = [ base comonad ];
       doHaddock = false;
       homepage = "http://github.com/ekmett/comonads-fd/";
       description = "This package has been merged into comonad 4.0";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "compactmap" = callPackage
    ({ mkDerivation, base, containers, hspec, QuickCheck, vector }:
     mkDerivation {
       pname = "compactmap";
       version = "0.1.3.1";
       sha256 = "1hwmc66j2qa8z31spqzmkz0jw1j7k0jw8a8y7nd4ki21kpdf59hl";
       revision = "1";
       editedCabalFile = "0767vg6cgnw7zn1wnpp9rcdf5grbcjf73zqlllhnz8bcc4hfa2k9";
       libraryHaskellDepends = [ base vector ];
       testHaskellDepends = [ base containers hspec QuickCheck ];
       description = "A read-only memory-efficient key-value store";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "compdata" = callPackage
    ({ mkDerivation, base, containers, criterion, deepseq, derive
     , HUnit, mtl, QuickCheck, random, template-haskell, test-framework
     , test-framework-hunit, test-framework-quickcheck2, th-expand-syns
     , transformers, tree-view, uniplate
     }:
     mkDerivation {
       pname = "compdata";
       version = "0.10";
       sha256 = "1538jdaww57vil32hvd6s13lfiwkczpjgym07ipwccw06cj49l8h";
       revision = "2";
       editedCabalFile = "0qbwvj3ri16gy01rhj00k95gvn8gbykm3j6qnsf46xj6yqp428k7";
       libraryHaskellDepends = [
         base containers deepseq derive mtl QuickCheck template-haskell
         th-expand-syns transformers tree-view
       ];
       testHaskellDepends = [
         base containers deepseq derive HUnit mtl QuickCheck
         template-haskell test-framework test-framework-hunit
         test-framework-quickcheck2 th-expand-syns transformers
       ];
       benchmarkHaskellDepends = [
         base containers criterion deepseq derive mtl QuickCheck random
         template-haskell th-expand-syns transformers uniplate
       ];
       description = "Compositional Data Types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "composition" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "composition";
       version = "1.0.2.1";
       sha256 = "0smdyzcnfwiab1wnazmk4szali1ckh7dqcdp9vn7qnnabq7k08vi";
       description = "Combinators for unorthodox function composition";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "composition-extra" = callPackage
    ({ mkDerivation, base, composition, contravariant }:
     mkDerivation {
       pname = "composition-extra";
       version = "2.0.0";
       sha256 = "0abipab6bx138rynpkh4daj53bv5yqbw94zfswysyq6iix529669";
       libraryHaskellDepends = [ base composition contravariant ];
       description = "Combinators for unorthodox structure composition";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "composition-tree" = callPackage
    ({ mkDerivation, base, doctest, QuickCheck }:
     mkDerivation {
       pname = "composition-tree";
       version = "0.2.0.1";
       sha256 = "00k5fka596wvnijf14c7iwy6lx7sx99sxhx2ck2mlbnz2258clk4";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base doctest QuickCheck ];
       homepage = "https://github.com/liamoc/composition-tree";
       description = "Composition trees for arbitrary monoids";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "compressed" = callPackage
    ({ mkDerivation, base, comonad, containers, fingertree, hashable
     , keys, pointed, reducers, semigroupoids, semigroups
     , unordered-containers
     }:
     mkDerivation {
       pname = "compressed";
       version = "3.10";
       sha256 = "1y290n421knfh8k8zbcabhw24hb13xj9pkxx4h4v15yji97p5mcw";
       revision = "1";
       editedCabalFile = "1fv1ix8bsqbsrzp44i7nz0wp1dwi3l2wdvqvp46a8vbakp5nif8a";
       libraryHaskellDepends = [
         base comonad containers fingertree hashable keys pointed reducers
         semigroupoids semigroups unordered-containers
       ];
       homepage = "http://github.com/ekmett/compressed/";
       description = "Compressed containers and reducers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "concatenative" = callPackage
    ({ mkDerivation, base, template-haskell }:
     mkDerivation {
       pname = "concatenative";
       version = "1.0.1";
       sha256 = "05xwqvcdnk8bsyj698ab9jxpa1nk23pf3m7wi9mwmw0q8n99fngd";
       libraryHaskellDepends = [ base template-haskell ];
       homepage = "https://patch-tag.com/r/salazar/concatenative/snapshot/current/content/pretty";
       description = "A library for postfix control flow";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "concurrent-output" = callPackage
    ({ mkDerivation, ansi-terminal, async, base, directory, exceptions
     , process, stm, terminal-size, text, transformers, unix
     }:
     mkDerivation {
       pname = "concurrent-output";
       version = "1.7.4";
       sha256 = "17jf844fdhfy7yaznqxvqrq5h602gjzfxqknzlh6hmx7a7h2fn6r";
       libraryHaskellDepends = [
         ansi-terminal async base directory exceptions process stm
         terminal-size text transformers unix
       ];
       description = "Ungarble output from several threads or commands";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "concurrent-supply" = callPackage
    ({ mkDerivation, base, containers, ghc-prim, hashable }:
     mkDerivation {
       pname = "concurrent-supply";
       version = "0.1.8";
       sha256 = "07zjczcgxwpi8imp0w86vrb78w067b322q5d7zlqla91sbf2gy6c";
       libraryHaskellDepends = [ base ghc-prim hashable ];
       testHaskellDepends = [ base containers ];
       homepage = "http://github.com/ekmett/concurrent-supply/";
       description = "A fast concurrent unique identifier supply with a pure API";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "conduit" = callPackage
    ({ mkDerivation, base, containers, criterion, deepseq, exceptions
     , hspec, kan-extensions, lifted-base, mmorph, mtl, mwc-random
     , QuickCheck, resourcet, safe, transformers, transformers-base
     , vector
     }:
     mkDerivation {
       pname = "conduit";
       version = "1.2.6.4";
       sha256 = "1wvkfnsb05swn5dbysxr2vwibqic6sjjhjbidwcsigqfb03y9i8z";
       libraryHaskellDepends = [
         base exceptions lifted-base mmorph mtl resourcet transformers
         transformers-base
       ];
       testHaskellDepends = [
         base containers exceptions hspec mtl QuickCheck resourcet safe
         transformers
       ];
       benchmarkHaskellDepends = [
         base containers criterion deepseq hspec kan-extensions mwc-random
         transformers vector
       ];
       homepage = "http://github.com/snoyberg/conduit";
       description = "Streaming data processing library";
       license = stdenv.lib.licenses.mit;
     }) {};
  "conduit-combinators" = callPackage
    ({ mkDerivation, base, base16-bytestring, base64-bytestring
     , bytestring, chunked-data, conduit, conduit-extra, containers
     , directory, filepath, hspec, monad-control, mono-traversable, mtl
     , mwc-random, primitive, QuickCheck, resourcet, safe, silently
     , text, transformers, transformers-base, unix, unix-compat, vector
     , void
     }:
     mkDerivation {
       pname = "conduit-combinators";
       version = "1.0.3.1";
       sha256 = "0j4b9zf8bi5r2d5slaxn0sx7s44vm70rdc7rdjq3ck4nrki0p936";
       libraryHaskellDepends = [
         base base16-bytestring base64-bytestring bytestring chunked-data
         conduit conduit-extra filepath monad-control mono-traversable
         mwc-random primitive resourcet text transformers transformers-base
         unix unix-compat vector void
       ];
       testHaskellDepends = [
         base base16-bytestring base64-bytestring bytestring chunked-data
         conduit containers directory filepath hspec mono-traversable mtl
         mwc-random QuickCheck safe silently text transformers vector
       ];
       homepage = "https://github.com/fpco/conduit-combinators";
       description = "Commonly used conduit functions, for both chunked and unchunked data";
       license = stdenv.lib.licenses.mit;
     }) {};
  "conduit-connection" = callPackage
    ({ mkDerivation, base, bytestring, conduit, connection, HUnit
     , network, resourcet, test-framework, test-framework-hunit
     , transformers
     }:
     mkDerivation {
       pname = "conduit-connection";
       version = "0.1.0.1";
       sha256 = "1z3i2s8xl02qb4wfnmqd92kzmbp2jb09msywnzgawyxs5aghy0n4";
       libraryHaskellDepends = [
         base bytestring conduit connection resourcet transformers
       ];
       testHaskellDepends = [
         base bytestring conduit connection HUnit network resourcet
         test-framework test-framework-hunit transformers
       ];
       homepage = "https://github.com/sdroege/conduit-connection";
       description = "Conduit source and sink for Network.Connection.";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "conduit-extra" = callPackage
    ({ mkDerivation, async, attoparsec, base, blaze-builder, bytestring
     , bytestring-builder, conduit, criterion, directory, exceptions
     , filepath, hspec, monad-control, network, primitive, process
     , resourcet, stm, streaming-commons, text, transformers
     , transformers-base
     }:
     mkDerivation {
       pname = "conduit-extra";
       version = "1.1.11";
       sha256 = "0bzac4cf24r4lgnvi06zvm63hjbjcsg7zzmmz8glvmqnbgwhj037";
       revision = "1";
       editedCabalFile = "0y7fi150gkacz7l5arnajv0h9d5n1ys2fgah71x9jsalx1mmqzk8";
       libraryHaskellDepends = [
         attoparsec base blaze-builder bytestring conduit directory
         exceptions filepath monad-control network primitive process
         resourcet stm streaming-commons text transformers transformers-base
       ];
       testHaskellDepends = [
         async attoparsec base blaze-builder bytestring bytestring-builder
         conduit exceptions hspec process resourcet stm streaming-commons
         text transformers transformers-base
       ];
       benchmarkHaskellDepends = [
         base blaze-builder bytestring bytestring-builder conduit criterion
         transformers
       ];
       homepage = "http://github.com/snoyberg/conduit";
       description = "Batteries included conduit: adapters for common libraries";
       license = stdenv.lib.licenses.mit;
     }) {};
  "conduit-iconv" = callPackage
    ({ mkDerivation, base, bytestring, conduit, criterion, mtl
     , QuickCheck, test-framework, test-framework-quickcheck2, text
     }:
     mkDerivation {
       pname = "conduit-iconv";
       version = "0.1.1.1";
       sha256 = "01dcnvs82mvp7wv5vbkwhq2sary87mss71mc6mmhlngkyis558jl";
       libraryHaskellDepends = [ base bytestring conduit ];
       testHaskellDepends = [
         base bytestring conduit mtl QuickCheck test-framework
         test-framework-quickcheck2 text
       ];
       benchmarkHaskellDepends = [
         base bytestring conduit criterion mtl text
       ];
       homepage = "https://github.com/sdroege/conduit-iconv";
       description = "Conduit for character encoding conversion";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "conduit-parse" = callPackage
    ({ mkDerivation, base, conduit, dlist, exceptions, hlint, mtl
     , parsers, resourcet, tasty, tasty-hunit, text, transformers
     }:
     mkDerivation {
       pname = "conduit-parse";
       version = "0.1.1.0";
       sha256 = "0l2r1dwj81526mldzpgnrmljq1yf2haxnkvfmpa6v6az0v2pkhll";
       libraryHaskellDepends = [
         base conduit dlist exceptions mtl parsers text transformers
       ];
       testHaskellDepends = [
         base conduit exceptions hlint mtl parsers resourcet tasty
         tasty-hunit
       ];
       homepage = "https://github.com/k0ral/conduit-parse";
       description = "Parsing framework based on conduit";
       license = "unknown";
     }) {};
  "configurator" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, directory, filepath
     , hashable, HUnit, test-framework, test-framework-hunit, text
     , unix-compat, unordered-containers
     }:
     mkDerivation {
       pname = "configurator";
       version = "0.3.0.0";
       sha256 = "1d1iq1knwiq6ia5g64rw5hqm6dakz912qj13r89737rfcxmrkfbf";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         attoparsec base bytestring directory hashable text unix-compat
         unordered-containers
       ];
       testHaskellDepends = [
         base bytestring directory filepath HUnit test-framework
         test-framework-hunit text
       ];
       homepage = "http://github.com/bos/configurator";
       description = "Configuration management";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "configurator-export" = callPackage
    ({ mkDerivation, base, configurator, pretty, semigroups, text
     , unordered-containers
     }:
     mkDerivation {
       pname = "configurator-export";
       version = "0.1.0.0";
       sha256 = "14pbgs64kydvll0dwrg76pmznq72z26pnrlr821vybli1r6dmywf";
       libraryHaskellDepends = [
         base configurator pretty semigroups text unordered-containers
       ];
       testHaskellDepends = [ base ];
       homepage = "http://github.com/mstksg/configurator-export";
       description = "Pretty printer and exporter for configurations from the \"configurator\" library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "connection" = callPackage
    ({ mkDerivation, base, byteable, bytestring, containers
     , data-default-class, network, socks, tls, x509, x509-store
     , x509-system, x509-validation
     }:
     mkDerivation {
       pname = "connection";
       version = "0.2.5";
       sha256 = "090il95jnm7ihwvcx3s9v6iwnp37nnsdx15q7722l845g51d95c8";
       libraryHaskellDepends = [
         base byteable bytestring containers data-default-class network
         socks tls x509 x509-store x509-system x509-validation
       ];
       homepage = "http://github.com/vincenthz/hs-connection";
       description = "Simple and easy network connections API";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "constraints" = callPackage
    ({ mkDerivation, base, binary, deepseq, ghc-prim, hashable, mtl
     , transformers, transformers-compat
     }:
     mkDerivation {
       pname = "constraints";
       version = "0.8";
       sha256 = "120mmv9rwbahslisc1z8zx9lw7v6hl5fzid4l0hiy5as6ijqgl2c";
       revision = "1";
       editedCabalFile = "0y0fb118m9v9dj82i8r78j0cdb0v195hgnappmbrglwcklips8zy";
       libraryHaskellDepends = [
         base binary deepseq ghc-prim hashable mtl transformers
         transformers-compat
       ];
       homepage = "http://github.com/ekmett/constraints/";
       description = "Constraint manipulation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "consul-haskell" = callPackage
    ({ mkDerivation, aeson, base, base64-bytestring, bytestring
     , connection, either, http-client, http-client-tls, http-types
     , HUnit, lifted-async, lifted-base, monad-control, network, stm
     , tasty, tasty-hunit, text, transformers
     }:
     mkDerivation {
       pname = "consul-haskell";
       version = "0.3";
       sha256 = "0d0n28w3wdg25phs6ylqxi31yah3vzjj2zj4vlx2xy8llv5zsgh7";
       libraryHaskellDepends = [
         aeson base base64-bytestring bytestring connection either
         http-client http-client-tls http-types lifted-async lifted-base
         monad-control network stm text transformers
       ];
       testHaskellDepends = [
         base http-client HUnit network tasty tasty-hunit text transformers
       ];
       doCheck = false;
       homepage = "https://github.com/alphaHeavy/consul-haskell";
       description = "A consul client for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "containers-unicode-symbols" = callPackage
    ({ mkDerivation, base, base-unicode-symbols, containers }:
     mkDerivation {
       pname = "containers-unicode-symbols";
       version = "0.3.1.1";
       sha256 = "0ccv7rqkykfk5wmr73mc0kwrnwyzakgp5x495dgwn5nila3g4ma6";
       libraryHaskellDepends = [ base base-unicode-symbols containers ];
       homepage = "http://haskell.org/haskellwiki/Unicode-symbols";
       description = "Unicode alternatives for common functions and operators";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "contravariant" = callPackage
    ({ mkDerivation, base, semigroups, StateVar, transformers
     , transformers-compat, void
     }:
     mkDerivation {
       pname = "contravariant";
       version = "1.4";
       sha256 = "117fff8kkrvlmr8cb2jpj71z7lf2pdiyks6ilyx89mry6zqnsrp1";
       libraryHaskellDepends = [
         base semigroups StateVar transformers transformers-compat void
       ];
       homepage = "http://github.com/ekmett/contravariant/";
       description = "Contravariant functors";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "contravariant-extras" = callPackage
    ({ mkDerivation, base, base-prelude, contravariant
     , template-haskell, tuple-th
     }:
     mkDerivation {
       pname = "contravariant-extras";
       version = "0.3.1";
       sha256 = "1qwxz4knpkdf4c7vrairzypkriprsbq21xcmbf17fdhn6psw7gav";
       libraryHaskellDepends = [
         base base-prelude contravariant template-haskell tuple-th
       ];
       homepage = "https://github.com/nikita-volkov/contravariant-extras";
       description = "Extras for the \"contravariant\" package";
       license = stdenv.lib.licenses.mit;
     }) {};
  "control-bool" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "control-bool";
       version = "0.2.1";
       sha256 = "10amxm1ff7xhd8g66n65wkbb8d17n77v1nmwxkbzhrask398asp4";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/fumieval/control-bool";
       description = "Useful combinators for boolean expressions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "control-monad-free" = callPackage
    ({ mkDerivation, base, prelude-extras, transformers }:
     mkDerivation {
       pname = "control-monad-free";
       version = "0.6.1";
       sha256 = "11i297ngwb5ck23vsr84fh5qx4hn7fzm9ml90y79lwi97hyigagy";
       revision = "1";
       editedCabalFile = "1901lm2md7flri4ms745lgla18x2k7v0xh51jbjbx6202ppcx3fh";
       libraryHaskellDepends = [ base prelude-extras transformers ];
       homepage = "http://github.com/pepeiborra/control-monad-free";
       description = "Free monads and monad transformers";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "control-monad-loop" = callPackage
    ({ mkDerivation, base, transformers, transformers-base }:
     mkDerivation {
       pname = "control-monad-loop";
       version = "0.1";
       sha256 = "003k4pp6wgn30m9ksbh8680f0klzsvd90wsl9jpqs9lpg14hi6zj";
       libraryHaskellDepends = [ base transformers transformers-base ];
       homepage = "https://github.com/joeyadams/haskell-control-monad-loop";
       description = "Simple monad transformer for imperative-style loops";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "convertible" = callPackage
    ({ mkDerivation, base, bytestring, containers, mtl, old-locale
     , old-time, text, time
     }:
     mkDerivation {
       pname = "convertible";
       version = "1.1.1.0";
       sha256 = "0v18ap1mccnndgxmbfgyjdicg8jlss01bd5fq8a576dr0h4sgyg9";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring containers mtl old-locale old-time text time
       ];
       homepage = "http://hackage.haskell.org/package/convertible";
       description = "Typeclasses and instances for converting between types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cookie" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring
     , data-default-class, deepseq, HUnit, old-locale, QuickCheck, tasty
     , tasty-hunit, tasty-quickcheck, text, time
     }:
     mkDerivation {
       pname = "cookie";
       version = "0.4.1.6";
       sha256 = "0b6ym6fn29p5az4dwydy036lxj131kagrmgb93w4bbkqfkds8b9s";
       libraryHaskellDepends = [
         base blaze-builder bytestring data-default-class deepseq old-locale
         text time
       ];
       testHaskellDepends = [
         base blaze-builder bytestring HUnit QuickCheck tasty tasty-hunit
         tasty-quickcheck text time
       ];
       homepage = "http://github.com/snoyberg/cookie";
       description = "HTTP cookie parsing and rendering";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "country-codes" = callPackage
    ({ mkDerivation, aeson, base, HTF, HUnit, shakespeare, tagsoup
     , text
     }:
     mkDerivation {
       pname = "country-codes";
       version = "0.1.3";
       sha256 = "1dfihvawiqmd5v75781m75lyp8h73wqmd138wh9zakfbpz746a06";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ aeson base shakespeare text ];
       executableHaskellDepends = [ base tagsoup text ];
       testHaskellDepends = [ aeson base HTF HUnit ];
       homepage = "https://github.com/prowdsponsor/country-codes";
       description = "ISO 3166 country codes and i18n names";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "courier" = callPackage
    ({ mkDerivation, async, base, bytestring, cereal, containers
     , directory, hslogger, HUnit, network, stm, test-framework
     , test-framework-hunit, text, uuid
     }:
     mkDerivation {
       pname = "courier";
       version = "0.1.1.2";
       sha256 = "0c2knybih3s6n9hp2ra31sapbvi3pqy94hamcy5gnqdbjxhnj58v";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         async base bytestring cereal containers hslogger network stm text
         uuid
       ];
       executableHaskellDepends = [ base cereal ];
       testHaskellDepends = [
         async base cereal containers directory hslogger HUnit network stm
         test-framework test-framework-hunit
       ];
       homepage = "http://github.com/hargettp/courier";
       description = "A message-passing library for simplifying network applications";
       license = stdenv.lib.licenses.mit;
     }) {};
  "cpphs" = callPackage
    ({ mkDerivation, base, directory, old-locale, old-time, polyparse
     }:
     mkDerivation {
       pname = "cpphs";
       version = "1.19.3";
       sha256 = "1njpmxgpah5pcqppcl1cxb5xicf6xlqrd162qm12khp9hainlm72";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base directory old-locale old-time polyparse
       ];
       executableHaskellDepends = [
         base directory old-locale old-time polyparse
       ];
       homepage = "http://projects.haskell.org/cpphs/";
       description = "A liberalised re-implementation of cpp, the C pre-processor";
       license = "LGPL";
     }) {};
  "cprng-aes" = callPackage
    ({ mkDerivation, base, byteable, bytestring, cipher-aes, criterion
     , crypto-random, mtl
     }:
     mkDerivation {
       pname = "cprng-aes";
       version = "0.6.1";
       sha256 = "1wr15kbmk1g3l8a75n0iwbzqg24ixv78slwzwb2q6rlcvq0jlnb4";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base byteable bytestring cipher-aes crypto-random
       ];
       benchmarkHaskellDepends = [
         base bytestring criterion crypto-random mtl
       ];
       homepage = "http://github.com/vincenthz/hs-cprng-aes";
       description = "Crypto Pseudo Random Number Generator using AES in counter mode";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cpu" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "cpu";
       version = "0.1.2";
       sha256 = "0x19mlanmkg96h6h1i04w2i631z84y4rbk22ki4zhgsajysgw9sn";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base ];
       homepage = "http://github.com/vincenthz/hs-cpu";
       description = "Cpu information and properties helpers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cql" = callPackage
    ({ mkDerivation, base, bytestring, cereal, Decimal, iproute
     , network, QuickCheck, tasty, tasty-quickcheck, template-haskell
     , text, time, transformers, uuid, vector
     }:
     mkDerivation {
       pname = "cql";
       version = "3.0.7";
       sha256 = "0xpa1yhyvq5949wypj0yzi31751mh47mdv2p2nrvwypyqdd57y2l";
       libraryHaskellDepends = [
         base bytestring cereal Decimal iproute network template-haskell
         text time transformers uuid vector
       ];
       testHaskellDepends = [
         base bytestring cereal Decimal iproute network QuickCheck tasty
         tasty-quickcheck text time uuid
       ];
       homepage = "https://github.com/twittner/cql/";
       description = "Cassandra CQL binary protocol";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "cql-io" = callPackage
    ({ mkDerivation, async, auto-update, base, bytestring, containers
     , cql, cryptohash, data-default-class, exceptions, hashable
     , HsOpenSSL, iproute, lens, monad-control, mtl, mwc-random, network
     , retry, semigroups, stm, text, time, tinylog, transformers
     , transformers-base, uuid, vector
     }:
     mkDerivation {
       pname = "cql-io";
       version = "0.15.2";
       sha256 = "0sandmdimp2dhcngsrq8z5z4lq0hxafms3kn2fj52q85x6mbvafb";
       libraryHaskellDepends = [
         async auto-update base bytestring containers cql cryptohash
         data-default-class exceptions hashable HsOpenSSL iproute lens
         monad-control mtl mwc-random network retry semigroups stm text time
         tinylog transformers transformers-base uuid vector
       ];
       homepage = "https://github.com/twittner/cql-io/";
       description = "Cassandra CQL client";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "crackNum" = callPackage
    ({ mkDerivation, base, data-binary-ieee754, ieee754 }:
     mkDerivation {
       pname = "crackNum";
       version = "1.5";
       sha256 = "01g2q4al44hy6iagxafwdxlr616p3qiyx13zn5waark8z95gwhgg";
       revision = "1";
       editedCabalFile = "04rfh3r4y38swvmyhp3r1x63zp0ki77r22frxgxmlfssv8x9gfd8";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base data-binary-ieee754 ieee754 ];
       executableHaskellDepends = [ base data-binary-ieee754 ieee754 ];
       description = "Crack various integer, floating-point data formats";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "criterion" = callPackage
    ({ mkDerivation, aeson, ansi-wl-pprint, base, binary, bytestring
     , cassava, containers, deepseq, directory, filepath, Glob, hastache
     , HUnit, mtl, mwc-random, optparse-applicative, parsec, QuickCheck
     , statistics, test-framework, test-framework-hunit
     , test-framework-quickcheck2, text, time, transformers
     , transformers-compat, vector, vector-algorithms
     }:
     mkDerivation {
       pname = "criterion";
       version = "1.1.1.0";
       sha256 = "1pa9176916a75dx6dvd22zjzcy057rh32zqkn926156dm6kma677";
       revision = "3";
       editedCabalFile = "13lp2d8db0m4paascrzw6smrm0v0p97pg62ix682psjz40awz28f";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson ansi-wl-pprint base binary bytestring cassava containers
         deepseq directory filepath Glob hastache mtl mwc-random
         optparse-applicative parsec statistics text time transformers
         transformers-compat vector vector-algorithms
       ];
       executableHaskellDepends = [ base optparse-applicative ];
       testHaskellDepends = [
         base bytestring HUnit QuickCheck statistics test-framework
         test-framework-hunit test-framework-quickcheck2 vector
       ];
       homepage = "http://www.serpentine.com/criterion";
       description = "Robust, reliable performance measurement and analysis";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cron" = callPackage
    ({ mkDerivation, attoparsec, base, derive, mtl, mtl-compat
     , old-locale, tasty, tasty-hunit, tasty-quickcheck, text, time
     , transformers-compat
     }:
     mkDerivation {
       pname = "cron";
       version = "0.3.2";
       sha256 = "11k06pcllznj00n9fkvkvk0im5gsvs9449xxxnszh6qcy2z1f2fj";
       libraryHaskellDepends = [
         attoparsec base mtl mtl-compat old-locale text time
       ];
       testHaskellDepends = [
         attoparsec base derive tasty tasty-hunit tasty-quickcheck text time
         transformers-compat
       ];
       doCheck = false;
       homepage = "http://github.com/michaelxavier/cron";
       description = "Cron datatypes and Attoparsec parser";
       license = stdenv.lib.licenses.mit;
     }) {};
  "crypto-api" = callPackage
    ({ mkDerivation, base, bytestring, cereal, entropy, tagged
     , transformers
     }:
     mkDerivation {
       pname = "crypto-api";
       version = "0.13.2";
       sha256 = "1vc27qcgbg7hf50rkqhlrs58zn1888ilh4b6wrrm07bnm48xacak";
       libraryHaskellDepends = [
         base bytestring cereal entropy tagged transformers
       ];
       homepage = "https://github.com/TomMD/crypto-api";
       description = "A generic interface for cryptographic operations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "crypto-api-tests" = callPackage
    ({ mkDerivation, base, bytestring, cereal, crypto-api, directory
     , filepath, HUnit, QuickCheck, test-framework, test-framework-hunit
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "crypto-api-tests";
       version = "0.3";
       sha256 = "0w3j43jdrlj28jryp18hc6q84nkl2yf4vs1hhgrsk7gb9kfyqjpl";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base bytestring cereal crypto-api directory filepath HUnit
         QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       homepage = "http://trac.haskell.org/crypto-api/wiki";
       description = "A test framework and KATs for cryptographic operations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "crypto-cipher-tests" = callPackage
    ({ mkDerivation, base, byteable, bytestring, crypto-cipher-types
     , HUnit, mtl, QuickCheck, securemem, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "crypto-cipher-tests";
       version = "0.0.11";
       sha256 = "19wqignlq90qwpam01hnmmrxaxh5lkax9l1l6rlbi4a07nvp1dnz";
       libraryHaskellDepends = [
         base byteable bytestring crypto-cipher-types HUnit mtl QuickCheck
         securemem test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       testHaskellDepends = [
         base byteable bytestring crypto-cipher-types HUnit mtl QuickCheck
         test-framework test-framework-hunit test-framework-quickcheck2
       ];
       homepage = "http://github.com/vincenthz/hs-crypto-cipher";
       description = "Generic cryptography cipher tests";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "crypto-cipher-types" = callPackage
    ({ mkDerivation, base, byteable, bytestring, securemem }:
     mkDerivation {
       pname = "crypto-cipher-types";
       version = "0.0.9";
       sha256 = "03qa1i1kj07pfrxsi7fiaqnnd0vi94jd4jfswbmnm4gp1nvzcwr0";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base byteable bytestring securemem ];
       homepage = "http://github.com/vincenthz/hs-crypto-cipher";
       description = "Generic cryptography cipher types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "crypto-numbers" = callPackage
    ({ mkDerivation, base, byteable, bytestring, criterion
     , crypto-random, ghc-prim, integer-gmp, mtl, tasty, tasty-hunit
     , tasty-quickcheck, vector
     }:
     mkDerivation {
       pname = "crypto-numbers";
       version = "0.2.7";
       sha256 = "19l9y5jzvqrqfam13xin9m9ca0s5ql86yv0cjn6dzkydx4byn2j2";
       revision = "1";
       editedCabalFile = "1jjkhid8kwrz5894nad537rqxzzyx6b687bmgyk70nv0ny336j9b";
       libraryHaskellDepends = [
         base bytestring crypto-random ghc-prim integer-gmp vector
       ];
       testHaskellDepends = [
         base byteable bytestring crypto-random tasty tasty-hunit
         tasty-quickcheck vector
       ];
       benchmarkHaskellDepends = [ base bytestring criterion mtl ];
       doCheck = false;
       homepage = "https://github.com/vincenthz/hs-crypto-numbers";
       description = "Cryptographic numbers: functions and algorithms";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "crypto-pubkey" = callPackage
    ({ mkDerivation, base, byteable, bytestring, criterion
     , crypto-numbers, crypto-pubkey-types, crypto-random, cryptohash
     , deepseq, mtl, tasty, tasty-hunit, tasty-kat, tasty-quickcheck
     }:
     mkDerivation {
       pname = "crypto-pubkey";
       version = "0.2.8";
       sha256 = "0vmmx2fqq2xc3xfavy22i2nyynpk88jhmjr62qgxw5w5qgsz5k60";
       libraryHaskellDepends = [
         base byteable bytestring crypto-numbers crypto-pubkey-types
         crypto-random cryptohash
       ];
       testHaskellDepends = [
         base byteable bytestring crypto-numbers crypto-pubkey-types
         crypto-random cryptohash tasty tasty-hunit tasty-kat
         tasty-quickcheck
       ];
       benchmarkHaskellDepends = [
         base bytestring criterion crypto-pubkey-types crypto-random
         cryptohash deepseq mtl
       ];
       doCheck = false;
       homepage = "https://github.com/vincenthz/hs-crypto-pubkey";
       description = "Public Key cryptography";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "crypto-pubkey-types" = callPackage
    ({ mkDerivation, asn1-encoding, asn1-types, base }:
     mkDerivation {
       pname = "crypto-pubkey-types";
       version = "0.4.3";
       sha256 = "0q0wlzjmpx536h1zcdzrpxjkvqw8abj8z0ci38138kpch4igbnby";
       libraryHaskellDepends = [ asn1-encoding asn1-types base ];
       homepage = "http://github.com/vincenthz/hs-crypto-pubkey-types";
       description = "Generic cryptography Public keys algorithm types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "crypto-random" = callPackage
    ({ mkDerivation, base, bytestring, securemem, unix, vector }:
     mkDerivation {
       pname = "crypto-random";
       version = "0.0.9";
       sha256 = "0139kbbb2h7vshf68y3fvjda29lhj7jjwl4vq78w4y8k8hc7l2hp";
       libraryHaskellDepends = [ base bytestring securemem unix vector ];
       homepage = "http://github.com/vincenthz/hs-crypto-random";
       description = "Simple cryptographic random related types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "crypto-random-api" = callPackage
    ({ mkDerivation, base, bytestring, entropy }:
     mkDerivation {
       pname = "crypto-random-api";
       version = "0.2.0";
       sha256 = "0z49kwgjj7rz235642q64hbkgp0zl6ipn29xd19yb75xc5q7gsan";
       libraryHaskellDepends = [ base bytestring entropy ];
       homepage = "http://github.com/vincenthz/hs-crypto-random-api";
       description = "Simple random generators API for cryptography related code";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cryptocipher" = callPackage
    ({ mkDerivation, base, cipher-aes, cipher-blowfish, cipher-camellia
     , cipher-des, cipher-rc4, crypto-cipher-types
     }:
     mkDerivation {
       pname = "cryptocipher";
       version = "0.6.2";
       sha256 = "0ip3a2as0df6drl29sryayxx22sx55v6bs60s2fh3i1nxqnydf9l";
       libraryHaskellDepends = [
         base cipher-aes cipher-blowfish cipher-camellia cipher-des
         cipher-rc4 crypto-cipher-types
       ];
       homepage = "http://github.com/vincenthz/hs-crypto-cipher";
       description = "Symmetrical block and stream ciphers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cryptohash" = callPackage
    ({ mkDerivation, base, byteable, bytestring, criterion, ghc-prim
     , HUnit, QuickCheck, tasty, tasty-hunit, tasty-quickcheck
     }:
     mkDerivation {
       pname = "cryptohash";
       version = "0.11.6";
       sha256 = "0dyzcaxr8vhzqq9hj4240rxpi87h4ps87yz09klz723shls26f6s";
       libraryHaskellDepends = [ base byteable bytestring ghc-prim ];
       testHaskellDepends = [
         base byteable bytestring HUnit QuickCheck tasty tasty-hunit
         tasty-quickcheck
       ];
       benchmarkHaskellDepends = [ base byteable bytestring criterion ];
       homepage = "http://github.com/vincenthz/hs-cryptohash";
       description = "collection of crypto hashes, fast, pure and practical";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cryptohash-conduit" = callPackage
    ({ mkDerivation, base, bytestring, conduit, conduit-extra
     , cryptohash, resourcet, transformers
     }:
     mkDerivation {
       pname = "cryptohash-conduit";
       version = "0.1.1";
       sha256 = "1kmlskgb0jx8hkzdncr24aqir9k1kyfcb2rypvkdld1yin4nslga";
       libraryHaskellDepends = [
         base bytestring conduit conduit-extra cryptohash resourcet
         transformers
       ];
       homepage = "http://github.com/vincenthz/hs-cryptohash-conduit";
       description = "cryptohash conduit";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cryptohash-cryptoapi" = callPackage
    ({ mkDerivation, base, bytestring, cereal, crypto-api, cryptohash
     , tagged
     }:
     mkDerivation {
       pname = "cryptohash-cryptoapi";
       version = "0.1.3";
       sha256 = "0wj53p32js8lfg0i8akrljpash0jdiyv2vcqpmjbd4dq2fx81w2n";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base bytestring cereal crypto-api cryptohash tagged
       ];
       homepage = "http://github.com/vincenthz/hs-cryptohash-cryptoapi";
       description = "Crypto-api interfaces for cryptohash";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cryptol" = callPackage
    ({ mkDerivation, alex, ansi-terminal, array, async, base
     , base-compat, bytestring, containers, criterion, deepseq
     , deepseq-generics, directory, filepath, generic-trie, gitrev
     , GraphSCC, happy, haskeline, heredoc, monad-control, monadLib
     , old-time, presburger, pretty, process, QuickCheck, random, sbv
     , simple-smt, smtLib, syb, template-haskell, text, tf-random
     , transformers, transformers-base, utf8-string
     }:
     mkDerivation {
       pname = "cryptol";
       version = "2.3.0";
       sha256 = "1kiq850h0svsyhklpdnxzblbhlzz4jsdj8927dlbbsx32jxpfda0";
       revision = "1";
       editedCabalFile = "02zbq3ghi6j2f47b3rsi8rn5hf1ll87aiblw3dpcydd62j6fcssi";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         array async base base-compat bytestring containers deepseq
         deepseq-generics directory filepath generic-trie gitrev GraphSCC
         heredoc monad-control monadLib old-time presburger pretty process
         QuickCheck random sbv simple-smt smtLib syb template-haskell text
         tf-random transformers transformers-base utf8-string
       ];
       libraryToolDepends = [ alex happy ];
       executableHaskellDepends = [
         ansi-terminal base base-compat containers deepseq directory
         filepath haskeline monad-control monadLib process random sbv
         tf-random transformers
       ];
       benchmarkHaskellDepends = [ base criterion deepseq text ];
       homepage = "http://www.cryptol.net/";
       description = "Cryptol: The Language of Cryptography";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cryptonite" = callPackage
    ({ mkDerivation, base, byteable, bytestring, deepseq, ghc-prim
     , integer-gmp, memory, tasty, tasty-hunit, tasty-kat
     , tasty-quickcheck
     }:
     mkDerivation {
       pname = "cryptonite";
       version = "0.10";
       sha256 = "0nvkr4db1mbh4d8k28z8nmg0pkh74gbrvw77l474ipkqiw0kyd2m";
       libraryHaskellDepends = [
         base bytestring deepseq ghc-prim integer-gmp memory
       ];
       testHaskellDepends = [
         base byteable bytestring memory tasty tasty-hunit tasty-kat
         tasty-quickcheck
       ];
       homepage = "https://github.com/haskell-crypto/cryptonite";
       description = "Cryptography Primitives sink";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "css-syntax" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, directory, hspec
     , scientific, text
     }:
     mkDerivation {
       pname = "css-syntax";
       version = "0.0.4";
       sha256 = "1nbbxvk3w71i0yhllwpjw0dxhf53n535ysjlz0aycyqv8zim94lv";
       libraryHaskellDepends = [
         attoparsec base bytestring scientific text
       ];
       testHaskellDepends = [
         attoparsec base bytestring directory hspec scientific text
       ];
       description = "This package implments a parser for the CSS syntax";
       license = stdenv.lib.licenses.mit;
     }) {};
  "css-text" = callPackage
    ({ mkDerivation, attoparsec, base, hspec, QuickCheck, text }:
     mkDerivation {
       pname = "css-text";
       version = "0.1.2.1";
       sha256 = "1xi1n2f0g8y43p95lynhcg50wxbq7hqfzbfzm7fy8mn7gvd920nw";
       libraryHaskellDepends = [ attoparsec base text ];
       testHaskellDepends = [ attoparsec base hspec QuickCheck text ];
       homepage = "http://www.yesodweb.com/";
       description = "CSS parser and renderer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "csv" = callPackage
    ({ mkDerivation, base, filepath, parsec }:
     mkDerivation {
       pname = "csv";
       version = "0.1.2";
       sha256 = "00767ai09wm7f0yzmpqck3cpgxncpr9djnmmz5l17ajz69139x4c";
       libraryHaskellDepends = [ base filepath parsec ];
       description = "CSV loader and dumper";
       license = stdenv.lib.licenses.mit;
     }) {};
  "csv-conduit" = callPackage
    ({ mkDerivation, array, attoparsec, base, blaze-builder, bytestring
     , conduit, conduit-extra, containers, data-default, directory
     , ghc-prim, HUnit, mmorph, monad-control, mtl, primitive, resourcet
     , test-framework, test-framework-hunit, text, transformers
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "csv-conduit";
       version = "0.6.6";
       sha256 = "12sxxv92qblsa63zdnl80a8yk01b4cvk9k6h58w82bvcy5m0aabk";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         array attoparsec base blaze-builder bytestring conduit
         conduit-extra containers data-default ghc-prim mmorph monad-control
         mtl primitive resourcet text transformers unordered-containers
         vector
       ];
       executableHaskellDepends = [
         base bytestring containers directory mtl primitive text
         transformers vector
       ];
       testHaskellDepends = [
         base bytestring containers directory HUnit mtl primitive
         test-framework test-framework-hunit text transformers vector
       ];
       homepage = "http://github.com/ozataman/csv-conduit";
       description = "A flexible, fast, conduit-based CSV parser library for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ctrie" = callPackage
    ({ mkDerivation, async, atomic-primops, base, containers, criterion
     , deepseq, hashable, primitive, QuickCheck, random, random-shuffle
     , stm, test-framework, test-framework-quickcheck2, transformers
     , unordered-containers
     }:
     mkDerivation {
       pname = "ctrie";
       version = "0.1.0.3";
       sha256 = "0z2v0ls0w2gwa3qz439jrnm7dm84wa1blp6aj0wb6v3p0zwin49r";
       libraryHaskellDepends = [ atomic-primops base hashable primitive ];
       testHaskellDepends = [
         base containers hashable QuickCheck test-framework
         test-framework-quickcheck2
       ];
       benchmarkHaskellDepends = [
         async base containers criterion deepseq hashable random
         random-shuffle stm transformers unordered-containers
       ];
       homepage = "https://github.com/mcschroeder/ctrie";
       description = "Non-blocking concurrent map";
       license = stdenv.lib.licenses.mit;
     }) {};
  "cubicspline" = callPackage
    ({ mkDerivation, base, hmatrix, safe }:
     mkDerivation {
       pname = "cubicspline";
       version = "0.1.2";
       sha256 = "0ycv395qskjw8xryzam6skc92m4iixf6065grvfh23avlsffsv2v";
       libraryHaskellDepends = [ base hmatrix safe ];
       description = "Natural cubic spline interpolation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "curl" = callPackage
    ({ mkDerivation, base, bytestring, containers, curl }:
     mkDerivation {
       pname = "curl";
       version = "1.3.8";
       sha256 = "0vj4hpaa30jz7c702xpsfvqaqdxz28zslsqnsfx6bf6dpwvck1wh";
       revision = "1";
       editedCabalFile = "02sq2bjw5igc2k9f9ssh58k2ivii2xsvk5r00ky3cxh8j61qy86q";
       configureFlags = [ "-fnew-base" ];
       libraryHaskellDepends = [ base bytestring containers ];
       librarySystemDepends = [ curl ];
       description = "Haskell binding to libcurl";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) curl;};
  "darcs" = callPackage
    ({ mkDerivation, array, attoparsec, base, base16-bytestring, binary
     , bytestring, cmdargs, containers, cryptohash, curl, data-ordlist
     , directory, filepath, FindBin, hashable, haskeline, html, HTTP
     , HUnit, mmap, mtl, network, network-uri, old-time, parsec, process
     , QuickCheck, random, regex-applicative, regex-compat-tdfa, sandi
     , shelly, split, tar, terminfo, test-framework
     , test-framework-hunit, test-framework-quickcheck2, text, time
     , transformers, transformers-compat, unix, unix-compat, utf8-string
     , vector, zip-archive, zlib
     }:
     mkDerivation {
       pname = "darcs";
       version = "2.10.3";
       sha256 = "0hpnpd6iv9da8x4w61qrbjhl2swvpmnvq6vwij398vr7106w806a";
       revision = "1";
       editedCabalFile = "07r8bamprmxngw9w8livgxcks26fr0nrmivjar79gy6dnfwcwp2g";
       configureFlags = [ "-fuse-time-1point5" ];
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         array attoparsec base base16-bytestring binary bytestring
         containers cryptohash data-ordlist directory filepath hashable
         haskeline html HTTP mmap mtl network network-uri old-time parsec
         process random regex-applicative regex-compat-tdfa sandi tar
         terminfo text time transformers transformers-compat unix
         unix-compat utf8-string vector zip-archive zlib
       ];
       librarySystemDepends = [ curl ];
       executableHaskellDepends = [ base filepath regex-compat-tdfa ];
       testHaskellDepends = [
         array base binary bytestring cmdargs containers cryptohash
         directory filepath FindBin html HUnit mmap mtl parsec process
         QuickCheck regex-compat-tdfa sandi shelly split test-framework
         test-framework-hunit test-framework-quickcheck2 text unix-compat
         zip-archive zlib
       ];
       postInstall = ''
         mkdir -p $out/etc/bash_completion.d
         mv contrib/darcs_completion $out/etc/bash_completion.d/darcs
       '';
       homepage = "http://darcs.net/";
       description = "a distributed, interactive, smart revision control system";
       license = "GPL";
     }) {inherit (pkgs) curl;};
  "data-accessor" = callPackage
    ({ mkDerivation, array, base, containers, transformers }:
     mkDerivation {
       pname = "data-accessor";
       version = "0.2.2.7";
       sha256 = "1vf2g1gac3rm32g97rl0fll51m88q7ry4m6khnl5j47qsmx24r9l";
       libraryHaskellDepends = [ array base containers transformers ];
       homepage = "http://www.haskell.org/haskellwiki/Record_access";
       description = "Utilities for accessing and manipulating fields of records";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-accessor-mtl" = callPackage
    ({ mkDerivation, base, data-accessor, mtl }:
     mkDerivation {
       pname = "data-accessor-mtl";
       version = "0.2.0.4";
       sha256 = "1i8lk0vy04giixng5addgj740cbvwlc7g62qgrmhfip0w9k93kqh";
       libraryHaskellDepends = [ base data-accessor mtl ];
       homepage = "http://www.haskell.org/haskellwiki/Record_access";
       description = "Use Accessor to access state in mtl State monad class";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-binary-ieee754" = callPackage
    ({ mkDerivation, base, binary }:
     mkDerivation {
       pname = "data-binary-ieee754";
       version = "0.4.4";
       sha256 = "02nzg1barhqhpf4x26mpzvk7jd29nali033qy01adjplv2z5m5sr";
       libraryHaskellDepends = [ base binary ];
       homepage = "https://john-millikin.com/software/data-binary-ieee754/";
       description = "Parser/Serialiser for IEEE-754 floating-point values";
       license = stdenv.lib.licenses.mit;
     }) {};
  "data-default" = callPackage
    ({ mkDerivation, base, data-default-class
     , data-default-instances-base, data-default-instances-containers
     , data-default-instances-dlist, data-default-instances-old-locale
     }:
     mkDerivation {
       pname = "data-default";
       version = "0.5.3";
       sha256 = "0d1hm0l9kim3kszshr4msmgzizrzha48gz2kb7b61p7n3gs70m7c";
       libraryHaskellDepends = [
         base data-default-class data-default-instances-base
         data-default-instances-containers data-default-instances-dlist
         data-default-instances-old-locale
       ];
       description = "A class for types with a default value";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-default-class" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "data-default-class";
       version = "0.0.1";
       sha256 = "0ccgr3jllinchqhw3lsn73ic6axk4196if5274rr1rghls0fxj5d";
       libraryHaskellDepends = [ base ];
       description = "A class for types with a default value";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-default-instances-base" = callPackage
    ({ mkDerivation, base, data-default-class }:
     mkDerivation {
       pname = "data-default-instances-base";
       version = "0.0.1";
       sha256 = "1832nq6by91f1iw73ycvkbgn8kpra83pvf2q61hy47xffh0zy4pb";
       libraryHaskellDepends = [ base data-default-class ];
       description = "Default instances for types in base";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-default-instances-containers" = callPackage
    ({ mkDerivation, base, containers, data-default-class }:
     mkDerivation {
       pname = "data-default-instances-containers";
       version = "0.0.1";
       sha256 = "06h8xka031w752a7cjlzghvr8adqbl95xj9z5zc1b62w02phfpm5";
       libraryHaskellDepends = [ base containers data-default-class ];
       description = "Default instances for types in containers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-default-instances-dlist" = callPackage
    ({ mkDerivation, base, data-default-class, dlist }:
     mkDerivation {
       pname = "data-default-instances-dlist";
       version = "0.0.1";
       sha256 = "0narkdqiprhgayjiawrr4390h4rq4pl2pb6mvixbv2phrc8kfs3x";
       libraryHaskellDepends = [ base data-default-class dlist ];
       description = "Default instances for types in dlist";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-default-instances-old-locale" = callPackage
    ({ mkDerivation, base, data-default-class, old-locale }:
     mkDerivation {
       pname = "data-default-instances-old-locale";
       version = "0.0.1";
       sha256 = "00h81i5phib741yj517p8mbnc48myvfj8axzsw44k34m48lv1lv0";
       libraryHaskellDepends = [ base data-default-class old-locale ];
       description = "Default instances for types in old-locale";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-hash" = callPackage
    ({ mkDerivation, array, base, containers, QuickCheck
     , test-framework, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "data-hash";
       version = "0.2.0.1";
       sha256 = "1ghbqvc48gf9p8wiy71hdpaj7by3b9cw6wgwi3qqz8iw054xs5wi";
       libraryHaskellDepends = [ array base containers ];
       testHaskellDepends = [
         base QuickCheck test-framework test-framework-quickcheck2
       ];
       description = "Combinators for building fast hashing functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-inttrie" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "data-inttrie";
       version = "0.1.2";
       sha256 = "1y8xbwy1cdfrswlbr029hlyj3cbsfvayxh4kklsdzbrwgnnygnld";
       libraryHaskellDepends = [ base ];
       homepage = "http://github.com/luqui/data-inttrie";
       description = "A lazy, infinite trie of integers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-lens-light" = callPackage
    ({ mkDerivation, base, mtl, template-haskell }:
     mkDerivation {
       pname = "data-lens-light";
       version = "0.1.2.1";
       sha256 = "038vfzb4vxk1qb0246l2kgv9br37wg59wnlhzyjpn97lypwlf68w";
       libraryHaskellDepends = [ base mtl template-haskell ];
       homepage = "https://github.com/feuerbach/data-lens-light";
       description = "Simple lenses, minimum dependencies";
       license = stdenv.lib.licenses.mit;
     }) {};
  "data-memocombinators" = callPackage
    ({ mkDerivation, array, base, data-inttrie }:
     mkDerivation {
       pname = "data-memocombinators";
       version = "0.5.1";
       sha256 = "1mvfc1xri3kgkx5q7za01bqg1x3bfvbgcffw5vwl6jmq4hh1sd5l";
       libraryHaskellDepends = [ array base data-inttrie ];
       homepage = "http://github.com/luqui/data-memocombinators";
       description = "Combinators for building memo tables";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-ordlist" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "data-ordlist";
       version = "0.4.7.0";
       sha256 = "03a9ix1fcx08viwv2jg5ndw1qbkydyyrmjvqr9wasmcik9x1wv3g";
       libraryHaskellDepends = [ base ];
       description = "Set and bag operations on ordered lists";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-reify" = callPackage
    ({ mkDerivation, base, containers }:
     mkDerivation {
       pname = "data-reify";
       version = "0.6.1";
       sha256 = "00mjv6dc3fwhbqzrll02qxilwpfypahkzcdqnv17c4nbjqg0ldb1";
       revision = "1";
       editedCabalFile = "0ixlibqrz7fd4bg9vnnd431a9kqvz4ajx8sbgyvpx9l2yjrabwzp";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base containers ];
       executableHaskellDepends = [ base ];
       homepage = "http://ku-fpg.github.io/software/data-reify/";
       description = "Reify a recursive data structure into an explicit graph";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "datadog" = callPackage
    ({ mkDerivation, aeson, auto-update, base, buffer-builder
     , bytestring, lens, lifted-base, monad-control, network, old-locale
     , text, time, transformers-base
     }:
     mkDerivation {
       pname = "datadog";
       version = "0.1.0.1";
       sha256 = "05hfpkaizbgqi998wa0l0hb8qph8y7gwyx05690ljr0883m5a663";
       libraryHaskellDepends = [
         aeson auto-update base buffer-builder bytestring lens lifted-base
         monad-control network old-locale text time transformers-base
       ];
       homepage = "https://github.com/iand675/datadog";
       description = "Datadog client for Haskell. Currently only StatsD supported, other support forthcoming.";
       license = stdenv.lib.licenses.mit;
     }) {};
  "dawg-ord" = callPackage
    ({ mkDerivation, base, containers, HUnit, mtl, smallcheck, tasty
     , tasty-hunit, tasty-quickcheck, tasty-smallcheck, transformers
     , vector
     }:
     mkDerivation {
       pname = "dawg-ord";
       version = "0.5.0.1";
       sha256 = "1vjxd9i34j1045ggh4rh8adcvf32r209c1ln3azk2ygncnjf7fzy";
       libraryHaskellDepends = [
         base containers mtl transformers vector
       ];
       testHaskellDepends = [
         base containers HUnit mtl smallcheck tasty tasty-hunit
         tasty-quickcheck tasty-smallcheck
       ];
       homepage = "https://github.com/kawu/dawg-ord";
       description = "Directed acyclic word graphs";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "dbmigrations" = callPackage
    ({ mkDerivation, base, bytestring, configurator, containers
     , directory, fgl, filepath, HDBC, HDBC-postgresql, HDBC-sqlite3
     , HUnit, MissingH, mtl, process, random, template-haskell, text
     , time, yaml-light
     }:
     mkDerivation {
       pname = "dbmigrations";
       version = "1.0";
       sha256 = "1xhndvjibs0r8b0l1pn6ik3fnzlkw5cyrwa1iw5hg527xclrvkax";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base bytestring configurator containers directory fgl filepath HDBC
         HDBC-postgresql HDBC-sqlite3 mtl random template-haskell text time
         yaml-light
       ];
       executableHaskellDepends = [ base configurator ];
       testHaskellDepends = [
         base bytestring configurator containers directory fgl filepath HDBC
         HDBC-postgresql HDBC-sqlite3 HUnit MissingH mtl process
         template-haskell text time yaml-light
       ];
       doCheck = false;
       description = "An implementation of relational database \"migrations\"";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "dbus" = callPackage
    ({ mkDerivation, base, bytestring, cereal, chell, chell-quickcheck
     , containers, criterion, deepseq, directory, filepath, libxml-sax
     , network, parsec, process, QuickCheck, random, text, transformers
     , unix, vector, xml-types
     }:
     mkDerivation {
       pname = "dbus";
       version = "0.10.12";
       sha256 = "0m1dp5jhjxgr52azqigqydbx7sgig8p2n6lbwfc9agmh1rjbbmzn";
       revision = "1";
       editedCabalFile = "07i70canwf2nfxbba6c7lspn4syxq0qka0glv0i109fgsdvrjvh5";
       libraryHaskellDepends = [
         base bytestring cereal containers libxml-sax network parsec random
         text transformers unix vector xml-types
       ];
       testHaskellDepends = [
         base bytestring cereal chell chell-quickcheck containers directory
         filepath libxml-sax network parsec process QuickCheck random text
         transformers unix vector xml-types
       ];
       benchmarkHaskellDepends = [ base criterion deepseq ];
       homepage = "https://john-millikin.com/software/haskell-dbus/";
       description = "A client library for the D-Bus IPC system";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "debian" = callPackage
    ({ mkDerivation, base, bytestring, bzlib, containers, directory
     , either, exceptions, filepath, HaXml, HUnit, ListLike, mtl
     , network, network-uri, old-locale, parsec, pretty, process
     , process-extras, pureMD5, regex-compat, regex-tdfa
     , template-haskell, text, time, unix, Unixutils, utf8-string, zlib
     }:
     mkDerivation {
       pname = "debian";
       version = "3.89";
       sha256 = "0720jbndbcan1gs1qr5bjv36wq7zqc90z9i9dzr3i12wcclaa3gc";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring bzlib containers directory either exceptions
         filepath HaXml HUnit ListLike mtl network network-uri old-locale
         parsec pretty process process-extras pureMD5 regex-compat
         regex-tdfa template-haskell text time unix Unixutils utf8-string
         zlib
       ];
       executableHaskellDepends = [
         base directory filepath HaXml pretty process unix
       ];
       testHaskellDepends = [ base HUnit parsec pretty regex-tdfa text ];
       homepage = "https://github.com/ddssff/debian-haskell";
       description = "Modules for working with the Debian package system";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "declarative" = callPackage
    ({ mkDerivation, base, hasty-hamiltonian, lens, mcmc-types
     , mighty-metropolis, mwc-probability, pipes, primitive
     , speedy-slice, transformers
     }:
     mkDerivation {
       pname = "declarative";
       version = "0.1.0.1";
       sha256 = "1bav6mhxm49awfgrxld86qvqb3ki8p2z69z0khl3q24bi3nppg12";
       libraryHaskellDepends = [
         base hasty-hamiltonian lens mcmc-types mighty-metropolis
         mwc-probability pipes primitive speedy-slice transformers
       ];
       testHaskellDepends = [ base mwc-probability ];
       homepage = "http://github.com/jtobin/declarative";
       description = "DIY Markov Chains";
       license = stdenv.lib.licenses.mit;
     }) {};
  "deepseq-generics" = callPackage
    ({ mkDerivation, base, deepseq, ghc-prim, HUnit, test-framework
     , test-framework-hunit
     }:
     mkDerivation {
       pname = "deepseq-generics";
       version = "0.1.1.2";
       sha256 = "01pvigx8n9p8hwbzp2qiq6kzf7cxiam843jz2sjgliacmmp1v7l3";
       revision = "1";
       editedCabalFile = "1zf97hnh5djrg00ibjgq79hwcapvvivhrqlc9m87cy16x5zqcliz";
       libraryHaskellDepends = [ base deepseq ghc-prim ];
       testHaskellDepends = [
         base deepseq ghc-prim HUnit test-framework test-framework-hunit
       ];
       homepage = "https://github.com/hvr/deepseq-generics";
       description = "GHC.Generics-based Control.DeepSeq.rnf implementation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "dejafu" = callPackage
    ({ mkDerivation, atomic-primops, base, containers, deepseq
     , exceptions, monad-loops, mtl, random, stm, transformers
     }:
     mkDerivation {
       pname = "dejafu";
       version = "0.2.0.0";
       sha256 = "15cfj8ib3hldhd23g6ngki89sb2zqvf0xrm8ww02v6s2saajc3d9";
       revision = "1";
       editedCabalFile = "0p6ip0zbcrzldw8bxb3b7w6n1m4i7s4qvr7mmxsn7fl4v6ndy711";
       libraryHaskellDepends = [
         atomic-primops base containers deepseq exceptions monad-loops mtl
         random stm transformers
       ];
       homepage = "https://github.com/barrucadu/dejafu";
       description = "Overloadable primitives for testable, potentially non-deterministic, concurrency";
       license = stdenv.lib.licenses.mit;
     }) {};
  "dependent-map" = callPackage
    ({ mkDerivation, base, containers, dependent-sum }:
     mkDerivation {
       pname = "dependent-map";
       version = "0.2.1.0";
       sha256 = "116ja69sg9m6dck4mdi9hdi9jhv8ygk0h5y0kcya9v8g16zq2zan";
       libraryHaskellDepends = [ base containers dependent-sum ];
       homepage = "https://github.com/mokus0/dependent-map";
       description = "Dependent finite maps (partial dependent products)";
       license = "unknown";
     }) {};
  "dependent-sum" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "dependent-sum";
       version = "0.3.2.1";
       sha256 = "0bx4nqlh89k0ylvcaq885gqpysjb4bf65y9y9h8pg2cbs74kh4xr";
       revision = "1";
       editedCabalFile = "0fzbyx6rkw9yj5ngpsr5avp4lqq2fyvb7rf7l9zksgn7fxr3msy2";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/mokus0/dependent-sum";
       description = "Dependent sum type";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "dependent-sum-template" = callPackage
    ({ mkDerivation, base, dependent-sum, template-haskell, th-extras
     }:
     mkDerivation {
       pname = "dependent-sum-template";
       version = "0.0.0.4";
       sha256 = "103jxzzw3drg7pkgmh39s7258zcwr8ixg8mijm6p33b87a8wdpwr";
       libraryHaskellDepends = [
         base dependent-sum template-haskell th-extras
       ];
       homepage = "/dev/null";
       description = "Template Haskell code to generate instances of classes in dependent-sum package";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "derive" = callPackage
    ({ mkDerivation, base, bytestring, containers, directory, filepath
     , haskell-src-exts, pretty, process, syb, template-haskell
     , transformers, uniplate
     }:
     mkDerivation {
       pname = "derive";
       version = "2.5.23";
       sha256 = "1fld865wskifsb22xcqjvqrjy0mgmxxxh5qpc9caiv7q7i87i0qz";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring containers directory filepath haskell-src-exts
         pretty process syb template-haskell transformers uniplate
       ];
       homepage = "https://github.com/ndmitchell/derive#readme";
       description = "A program and library to derive instances for data types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "descriptive" = callPackage
    ({ mkDerivation, aeson, base, bifunctors, containers, hspec, HUnit
     , mtl, scientific, text, transformers, vector
     }:
     mkDerivation {
       pname = "descriptive";
       version = "0.9.4";
       sha256 = "0bxskc4q6jzpvifnhh6zl77xic0fbni8abf9lipfr1xzarbwcpkr";
       libraryHaskellDepends = [
         aeson base bifunctors containers mtl scientific text transformers
         vector
       ];
       testHaskellDepends = [
         aeson base bifunctors containers hspec HUnit mtl text transformers
       ];
       homepage = "https://github.com/chrisdone/descriptive";
       description = "Self-describing consumers/parsers; forms, cmd-line args, JSON, etc";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "diagrams" = callPackage
    ({ mkDerivation, diagrams-contrib, diagrams-core, diagrams-lib
     , diagrams-svg
     }:
     mkDerivation {
       pname = "diagrams";
       version = "1.3.0.1";
       sha256 = "19z4qj712w9kjnpizxkrq5xx3k19z2yrghnx6njscm994rfbz2pf";
       libraryHaskellDepends = [
         diagrams-contrib diagrams-core diagrams-lib diagrams-svg
       ];
       doHaddock = false;
       homepage = "http://projects.haskell.org/diagrams";
       description = "Embedded domain-specific language for declarative vector graphics";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "diagrams-builder" = callPackage
    ({ mkDerivation, base, base-orphans, cmdargs, diagrams-lib
     , directory, exceptions, filepath, hashable, haskell-src-exts, hint
     , lens, mtl, split, transformers
     }:
     mkDerivation {
       pname = "diagrams-builder";
       version = "0.7.2.2";
       sha256 = "0zan6afhrffn08gf8ff351wmkq329472gw1x446p0w4sp1kbg2gl";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base base-orphans cmdargs diagrams-lib directory exceptions
         filepath hashable haskell-src-exts hint lens mtl split transformers
       ];
       homepage = "http://projects.haskell.org/diagrams";
       description = "hint-based build service for the diagrams graphics EDSL";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "diagrams-cairo" = callPackage
    ({ mkDerivation, base, bytestring, cairo, colour, containers
     , data-default-class, diagrams-core, diagrams-lib, filepath
     , hashable, JuicyPixels, lens, mtl, optparse-applicative, pango
     , split, statestack, transformers, unix, vector
     }:
     mkDerivation {
       pname = "diagrams-cairo";
       version = "1.3.0.5";
       sha256 = "1m9kd76pdws9gmqxj1mw8kyhd68ymp2hvj3zmr0r17g08gfgp0wx";
       libraryHaskellDepends = [
         base bytestring cairo colour containers data-default-class
         diagrams-core diagrams-lib filepath hashable JuicyPixels lens mtl
         optparse-applicative pango split statestack transformers unix
         vector
       ];
       homepage = "http://projects.haskell.org/diagrams";
       description = "Cairo backend for diagrams drawing EDSL";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "diagrams-canvas" = callPackage
    ({ mkDerivation, base, blank-canvas, cmdargs, containers
     , data-default-class, diagrams-core, diagrams-lib, lens, mtl
     , NumInstances, optparse-applicative, statestack, text
     }:
     mkDerivation {
       pname = "diagrams-canvas";
       version = "1.3.0.3";
       sha256 = "1h8k1sqdr1lbwp9cq9h2m2vg0mhqx974k7ndqyw6ll1ll17p4i6y";
       libraryHaskellDepends = [
         base blank-canvas cmdargs containers data-default-class
         diagrams-core diagrams-lib lens mtl NumInstances
         optparse-applicative statestack text
       ];
       homepage = "http://projects.haskell.org/diagrams/";
       description = "HTML5 canvas backend for diagrams drawing EDSL";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "diagrams-contrib" = callPackage
    ({ mkDerivation, base, circle-packing, colour, containers
     , data-default, data-default-class, diagrams-core, diagrams-lib
     , diagrams-solve, force-layout, HUnit, lens, linear, MonadRandom
     , mtl, parsec, QuickCheck, random, semigroups, split
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , text
     }:
     mkDerivation {
       pname = "diagrams-contrib";
       version = "1.3.0.8";
       sha256 = "1v4dal4lmr3q55y0ly96ynvcw2w14iivj34ip8aw6607xmm404g3";
       libraryHaskellDepends = [
         base circle-packing colour containers data-default
         data-default-class diagrams-core diagrams-lib diagrams-solve
         force-layout lens linear MonadRandom mtl parsec random semigroups
         split text
       ];
       testHaskellDepends = [
         base containers diagrams-lib HUnit QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2
       ];
       homepage = "http://projects.haskell.org/diagrams/";
       description = "Collection of user contributions to diagrams EDSL";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "diagrams-core" = callPackage
    ({ mkDerivation, adjunctions, base, containers, distributive
     , dual-tree, lens, linear, monoid-extras, mtl, semigroups
     , unordered-containers
     }:
     mkDerivation {
       pname = "diagrams-core";
       version = "1.3.0.6";
       sha256 = "1lxrjak9qfwzajf589rwsp8w3kjw6c1p3smqpkxw6df25sdhgiik";
       libraryHaskellDepends = [
         adjunctions base containers distributive dual-tree lens linear
         monoid-extras mtl semigroups unordered-containers
       ];
       homepage = "http://projects.haskell.org/diagrams";
       description = "Core libraries for diagrams EDSL";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "diagrams-gtk" = callPackage
    ({ mkDerivation, base, cairo, diagrams-cairo, diagrams-lib, gtk }:
     mkDerivation {
       pname = "diagrams-gtk";
       version = "1.3.0.1";
       sha256 = "02d3v2gvhxkqmg16mx5x4jfwqs1qj47kpvmaq0y9n4bm93jsna53";
       libraryHaskellDepends = [
         base cairo diagrams-cairo diagrams-lib gtk
       ];
       homepage = "http://projects.haskell.org/diagrams/";
       description = "Backend for rendering diagrams directly to GTK windows";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "diagrams-haddock" = callPackage
    ({ mkDerivation, ansi-terminal, base, base64-bytestring, bytestring
     , Cabal, cautious-file, cmdargs, containers, cpphs
     , diagrams-builder, diagrams-lib, diagrams-svg, directory, filepath
     , haskell-src-exts, lens, linear, lucid-svg, mtl, parsec
     , QuickCheck, split, strict, tasty, tasty-quickcheck, text
     , uniplate
     }:
     mkDerivation {
       pname = "diagrams-haddock";
       version = "0.3.0.10";
       sha256 = "1bzhsqh64bksi811y51p9aa1ir3731ljp6g9j9c0gbhskk21gva9";
       revision = "1";
       editedCabalFile = "0v9n9bfzvdsgxc6x1fg5dlpa54yksp77gya5qngvl0wdj1d5szf7";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         ansi-terminal base base64-bytestring bytestring cautious-file
         containers cpphs diagrams-builder diagrams-lib diagrams-svg
         directory filepath haskell-src-exts lens linear lucid-svg mtl
         parsec split strict text uniplate
       ];
       executableHaskellDepends = [
         base Cabal cmdargs cpphs directory filepath
       ];
       testHaskellDepends = [
         base containers haskell-src-exts lens parsec QuickCheck tasty
         tasty-quickcheck
       ];
       homepage = "http://projects.haskell.org/diagrams/";
       description = "Preprocessor for embedding diagrams in Haddock documentation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "diagrams-html5" = callPackage
    ({ mkDerivation, base, cmdargs, containers, data-default-class
     , diagrams-core, diagrams-lib, lens, mtl, NumInstances
     , optparse-applicative, split, statestack, static-canvas, text
     }:
     mkDerivation {
       pname = "diagrams-html5";
       version = "1.3.0.4";
       sha256 = "1sxz2jnglddgy2q4j4yr03jaxrc1m1npvrxg2rwcmqxrycs73k4d";
       libraryHaskellDepends = [
         base cmdargs containers data-default-class diagrams-core
         diagrams-lib lens mtl NumInstances optparse-applicative split
         statestack static-canvas text
       ];
       homepage = "http://projects.haskell.org/diagrams/";
       description = "HTML5 canvas backend for diagrams drawing EDSL";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "diagrams-lib" = callPackage
    ({ mkDerivation, active, adjunctions, array, base, colour
     , containers, data-default-class, diagrams-core, diagrams-solve
     , directory, distributive, dual-tree, exceptions, filepath
     , fingertree, fsnotify, hashable, intervals, JuicyPixels, lens
     , linear, monoid-extras, mtl, optparse-applicative, process
     , semigroups, tagged, tasty, tasty-hunit, text, transformers
     , unordered-containers
     }:
     mkDerivation {
       pname = "diagrams-lib";
       version = "1.3.1.1";
       sha256 = "0s9yf7nyj3gr2zz0p1f0rdv08464pz1gvh96lxrzndiz8457dwh2";
       revision = "1";
       editedCabalFile = "1075icgz34hc0vsr44z3ssp7wf3x4nx157fzblvg18brp63h902q";
       libraryHaskellDepends = [
         active adjunctions array base colour containers data-default-class
         diagrams-core diagrams-solve directory distributive dual-tree
         exceptions filepath fingertree fsnotify hashable intervals
         JuicyPixels lens linear monoid-extras mtl optparse-applicative
         process semigroups tagged text transformers unordered-containers
       ];
       testHaskellDepends = [ base tasty tasty-hunit ];
       homepage = "http://projects.haskell.org/diagrams";
       description = "Embedded domain-specific language for declarative graphics";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "diagrams-postscript" = callPackage
    ({ mkDerivation, base, containers, data-default-class
     , diagrams-core, diagrams-lib, dlist, filepath, hashable, lens
     , monoid-extras, mtl, semigroups, split, statestack
     }:
     mkDerivation {
       pname = "diagrams-postscript";
       version = "1.3.0.4";
       sha256 = "0d9sj4hk5sf2n42xb48z0dla9s2mk5qvpnhmyh03bdajka4jj64v";
       libraryHaskellDepends = [
         base containers data-default-class diagrams-core diagrams-lib dlist
         filepath hashable lens monoid-extras mtl semigroups split
         statestack
       ];
       homepage = "http://projects.haskell.org/diagrams/";
       description = "Postscript backend for diagrams drawing EDSL";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "diagrams-rasterific" = callPackage
    ({ mkDerivation, base, bytestring, containers, data-default-class
     , diagrams-core, diagrams-lib, filepath, FontyFruity, hashable
     , JuicyPixels, lens, mtl, optparse-applicative, Rasterific, split
     , unix
     }:
     mkDerivation {
       pname = "diagrams-rasterific";
       version = "1.3.1.5";
       sha256 = "043ccfjcyh73b0kpkf255xqs5iscyp5xjd8ax3n0l56mnjkdgqqg";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base bytestring containers data-default-class diagrams-core
         diagrams-lib filepath FontyFruity hashable JuicyPixels lens mtl
         optparse-applicative Rasterific split unix
       ];
       homepage = "http://projects.haskell.org/diagrams/";
       description = "Rasterific backend for diagrams";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "diagrams-solve" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "diagrams-solve";
       version = "0.1.0.1";
       sha256 = "1piv8mi5182b2ggr28fnr4mda4vbk4mzasvy0nfp3517ii63mrbi";
       libraryHaskellDepends = [ base ];
       homepage = "http://projects.haskell.org/diagrams";
       description = "Pure Haskell solver routines used by diagrams";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "diagrams-svg" = callPackage
    ({ mkDerivation, base, base64-bytestring, bytestring, colour
     , containers, diagrams-core, diagrams-lib, directory, filepath
     , hashable, JuicyPixels, lens, lucid-svg, monoid-extras, mtl
     , old-time, optparse-applicative, process, semigroups, split, text
     , time
     }:
     mkDerivation {
       pname = "diagrams-svg";
       version = "1.3.1.10";
       sha256 = "19rr1bz8q0qj079ix9za32mvc4ycjxfcmddhddjxkmsrydb3had8";
       libraryHaskellDepends = [
         base base64-bytestring bytestring colour containers diagrams-core
         diagrams-lib directory filepath hashable JuicyPixels lens lucid-svg
         monoid-extras mtl old-time optparse-applicative process semigroups
         split text time
       ];
       homepage = "http://projects.haskell.org/diagrams/";
       description = "SVG backend for diagrams drawing EDSL";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "dice" = callPackage
    ({ mkDerivation, base, parsec, random-fu, transformers }:
     mkDerivation {
       pname = "dice";
       version = "0.1";
       sha256 = "1rfx3vh983f3gc6si661zimhjl47ip30l3pvf7dysjirr3gffgz1";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base parsec random-fu transformers ];
       description = "Simplistic D&D style dice-rolling system";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "diff3" = callPackage
    ({ mkDerivation, base, Diff, QuickCheck, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "diff3";
       version = "0.2.0.3";
       sha256 = "0zdfn1jhsq8pd23qpkhzr8wgiwbazfbq688bjnpc406i7gq88k78";
       libraryHaskellDepends = [ base Diff ];
       testHaskellDepends = [
         base QuickCheck test-framework test-framework-quickcheck2
       ];
       homepage = "http://github.com/ocharles/diff3.git";
       description = "Perform a 3-way difference of documents";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "digest" = callPackage
    ({ mkDerivation, base, bytestring, zlib }:
     mkDerivation {
       pname = "digest";
       version = "0.0.1.2";
       sha256 = "04gy2zp8yzvv7j9bdfvmfzcz3sqyqa6rwslqcn4vyair2vmif5v4";
       libraryHaskellDepends = [ base bytestring ];
       librarySystemDepends = [ zlib ];
       description = "Various cryptographic hashes for bytestrings; CRC32 and Adler32 for now";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) zlib;};
  "digestive-bootstrap" = callPackage
    ({ mkDerivation, base, blaze-bootstrap, blaze-html
     , digestive-functors, digestive-functors-blaze, http-types, text
     }:
     mkDerivation {
       pname = "digestive-bootstrap";
       version = "0.1.0.1";
       sha256 = "1xqq0kpxj2sm9z5r8qv8iwk15sa46f965y2gki8w81rzj237azgb";
       libraryHaskellDepends = [
         base blaze-bootstrap blaze-html digestive-functors
         digestive-functors-blaze http-types text
       ];
       description = "Speed up form designing using digestive functors and bootstrap";
       license = stdenv.lib.licenses.mit;
     }) {};
  "digestive-functors" = callPackage
    ({ mkDerivation, base, bytestring, containers, HUnit, mtl
     , old-locale, QuickCheck, test-framework, test-framework-hunit
     , test-framework-quickcheck2, text, time
     }:
     mkDerivation {
       pname = "digestive-functors";
       version = "0.8.0.1";
       sha256 = "1ipkmc43fkknc0d4s89r3151s6m8yc4c891l65cml1n0fsrmqgdf";
       libraryHaskellDepends = [
         base bytestring containers mtl old-locale text time
       ];
       testHaskellDepends = [
         base bytestring containers HUnit mtl old-locale QuickCheck
         test-framework test-framework-hunit test-framework-quickcheck2 text
         time
       ];
       homepage = "http://github.com/jaspervdj/digestive-functors";
       description = "A practical formlet library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "digestive-functors-aeson" = callPackage
    ({ mkDerivation, aeson, base, bytestring, containers
     , digestive-functors, HUnit, lens, lens-aeson, mtl, safe
     , scientific, tasty, tasty-hunit, text, vector
     }:
     mkDerivation {
       pname = "digestive-functors-aeson";
       version = "1.1.19";
       sha256 = "19ysnr0m6iwsvl4xblf3qvfpayj2k1l98kl8xzk8d14ixs7scn7b";
       libraryHaskellDepends = [
         aeson base containers digestive-functors lens lens-aeson safe text
         vector
       ];
       testHaskellDepends = [
         aeson base bytestring digestive-functors HUnit mtl scientific tasty
         tasty-hunit text
       ];
       homepage = "http://github.com/ocharles/digestive-functors-aeson";
       description = "Run digestive-functors forms against JSON";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "digestive-functors-blaze" = callPackage
    ({ mkDerivation, base, blaze-html, blaze-markup, digestive-functors
     , text
     }:
     mkDerivation {
       pname = "digestive-functors-blaze";
       version = "0.6.0.6";
       sha256 = "1kx8d6w89cs9dr7fpfikv7mf0ql1lz854i492nwm64x3d016q6xi";
       libraryHaskellDepends = [
         base blaze-html blaze-markup digestive-functors text
       ];
       homepage = "http://github.com/jaspervdj/digestive-functors";
       description = "Blaze frontend for the digestive-functors library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "digestive-functors-lucid" = callPackage
    ({ mkDerivation, base, digestive-functors, lucid, text }:
     mkDerivation {
       pname = "digestive-functors-lucid";
       version = "0.0.0.3";
       sha256 = "1f9vlyh20b4qr7q324mxpkn7wbfp3h80il79rwqd5s5n1xx8ryhm";
       libraryHaskellDepends = [ base digestive-functors lucid text ];
       homepage = "http://github.com/jaspervdj/digestive-functors";
       description = "Lucid frontend for the digestive-functors library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "digits" = callPackage
    ({ mkDerivation, base, QuickCheck }:
     mkDerivation {
       pname = "digits";
       version = "0.2";
       sha256 = "18s9k7kj0qvd4297msl0k6ziwfb5bl1gwnxlrl8b4rkqda4kf17l";
       libraryHaskellDepends = [ base QuickCheck ];
       description = "Converts integers to lists of digits and back";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "dimensional" = callPackage
    ({ mkDerivation, base, criterion, deepseq, exact-pi, HUnit
     , numtype-dk, vector
     }:
     mkDerivation {
       pname = "dimensional";
       version = "1.0.1.1";
       sha256 = "0bk98ci66v2aw1c92m061hskrcnw2ww6fi1jksargda16fjfwxnq";
       libraryHaskellDepends = [
         base deepseq exact-pi numtype-dk vector
       ];
       testHaskellDepends = [ base HUnit ];
       benchmarkHaskellDepends = [ base criterion deepseq ];
       homepage = "https://github.com/bjornbm/dimensional/";
       description = "Statically checked physical dimensions, using Type Families and Data Kinds";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "direct-sqlite" = callPackage
    ({ mkDerivation, base, base16-bytestring, bytestring, directory
     , HUnit, temporary, text
     }:
     mkDerivation {
       pname = "direct-sqlite";
       version = "2.3.17";
       sha256 = "1i7zdxmmniqx1ic3vx5d9w8glqriw2i8z0d4h19i9ksps597rpps";
       libraryHaskellDepends = [ base bytestring text ];
       testHaskellDepends = [
         base base16-bytestring bytestring directory HUnit temporary text
       ];
       doCheck = false;
       homepage = "https://github.com/IreneKnapp/direct-sqlite";
       description = "Low-level binding to SQLite3. Includes UTF8 and BLOB support.";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "directory-tree" = callPackage
    ({ mkDerivation, base, directory, filepath, process }:
     mkDerivation {
       pname = "directory-tree";
       version = "0.12.0";
       sha256 = "1idknm7fwci91fkwvzl35g0qd0jk1vb00ds2x82zjf2hdbkcc2gz";
       libraryHaskellDepends = [ base directory filepath ];
       testHaskellDepends = [ base directory filepath process ];
       doCheck = false;
       homepage = "http://brandon.si/code/directory-tree-module-released/";
       description = "A simple directory-like tree datatype, with useful IO functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "disk-free-space" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "disk-free-space";
       version = "0.1.0.1";
       sha256 = "07rqj8k1vh3cykq9yidpjxhgh1f7vgmjs6y1nv5kq2217ff4yypi";
       revision = "3";
       editedCabalFile = "0x0wjycr3rhw9vcq51b4sz8cf7mcvx7whhywv72y25r9385lxb3i";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/redneb/disk-free-space";
       description = "Retrieve information about disk space usage";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "distributed-process" = callPackage
    ({ mkDerivation, base, binary, bytestring, containers
     , data-accessor, deepseq, distributed-static, ghc-prim, hashable
     , mtl, network-transport, network-transport-tcp, random
     , rank1dynamic, stm, syb, template-haskell, time, transformers
     }:
     mkDerivation {
       pname = "distributed-process";
       version = "0.5.5.1";
       sha256 = "0ma9wf6lf6i70bpr6xdi25bgimymk4h7nlsv4j69h65bb78rd8b3";
       libraryHaskellDepends = [
         base binary bytestring containers data-accessor deepseq
         distributed-static ghc-prim hashable mtl network-transport random
         rank1dynamic stm syb template-haskell time transformers
       ];
       benchmarkHaskellDepends = [
         base binary bytestring network-transport-tcp
       ];
       doCheck = false;
       homepage = "http://haskell-distributed.github.com/";
       description = "Cloud Haskell: Erlang-style concurrency in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "distributed-static" = callPackage
    ({ mkDerivation, base, binary, bytestring, containers, deepseq
     , rank1dynamic
     }:
     mkDerivation {
       pname = "distributed-static";
       version = "0.3.4.0";
       sha256 = "0lcda16g8w4mz3ywlamjmb4svrxbnxs9cm7qha9yihj6g59j5mgk";
       libraryHaskellDepends = [
         base binary bytestring containers deepseq rank1dynamic
       ];
       homepage = "http://haskell-distributed.github.com";
       description = "Compositional, type-safe, polymorphic static values and closures";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "distributive" = callPackage
    ({ mkDerivation, base, base-orphans, directory, doctest, filepath
     , tagged, transformers, transformers-compat
     }:
     mkDerivation {
       pname = "distributive";
       version = "0.5.0.2";
       sha256 = "028nrisra7i7w132a54ag3bs1kpymnywx8nxnxsv5r8z95prk17q";
       libraryHaskellDepends = [
         base base-orphans tagged transformers transformers-compat
       ];
       testHaskellDepends = [ base directory doctest filepath ];
       homepage = "http://github.com/ekmett/distributive/";
       description = "Distributive functors -- Dual to Traversable";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "diversity" = callPackage
    ({ mkDerivation, base, containers, data-ordlist, fasta
     , math-functions, MonadRandom, optparse-applicative, parsec, pipes
     , random-shuffle, scientific, split
     }:
     mkDerivation {
       pname = "diversity";
       version = "0.8.0.0";
       sha256 = "07g5fwi64ss54ma2lsyca0vqp00zgn5y2pr5akzb3hgx6nfabfqf";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base containers data-ordlist fasta math-functions MonadRandom
         parsec random-shuffle scientific split
       ];
       executableHaskellDepends = [
         base containers fasta optparse-applicative pipes
       ];
       homepage = "https://github.com/GregorySchwartz/diversity";
       description = "Quantify the diversity of a population";
       license = stdenv.lib.licenses.gpl2;
     }) {};
  "dixi" = callPackage
    ({ mkDerivation, acid-state, aeson, aeson-pretty, attoparsec, base
     , base-orphans, blaze-html, blaze-markup, bytestring
     , composition-tree, containers, data-default, directory, either
     , filepath, heredoc, lens, network-uri, pandoc, pandoc-types
     , patches-vector, safecopy, servant, servant-blaze, servant-docs
     , servant-server, shakespeare, template-haskell, text, time
     , time-locale-compat, timezone-olson, timezone-series, transformers
     , vector, warp, yaml
     }:
     mkDerivation {
       pname = "dixi";
       version = "0.6.0.5";
       sha256 = "1i92kwpwrpvgv5n2qfp2nblfqihs03l6lszwqmbk3by2q9qyf0i7";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         acid-state aeson base base-orphans blaze-html blaze-markup
         bytestring composition-tree containers data-default either heredoc
         lens network-uri pandoc pandoc-types patches-vector safecopy
         servant servant-blaze servant-server shakespeare template-haskell
         text time time-locale-compat timezone-olson timezone-series
         transformers vector
       ];
       executableHaskellDepends = [
         acid-state base base-orphans directory filepath servant-server text
         warp yaml
       ];
       testHaskellDepends = [
         aeson aeson-pretty attoparsec base base-orphans bytestring lens
         patches-vector servant servant-blaze servant-docs shakespeare text
         time vector
       ];
       homepage = "https://github.com/liamoc/dixi";
       description = "A wiki implemented with a firm theoretical foundation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "djinn-ghc" = callPackage
    ({ mkDerivation, async, base, containers, djinn-lib, ghc, mtl
     , transformers
     }:
     mkDerivation {
       pname = "djinn-ghc";
       version = "0.0.2.3";
       sha256 = "190llfn8dvxkdan806nybn3d4psmnr1126zg8lmk8p5wd7nnm5fb";
       libraryHaskellDepends = [
         async base containers djinn-lib ghc mtl transformers
       ];
       description = "Generate Haskell code from a type. Bridge from Djinn to GHC API.";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "djinn-lib" = callPackage
    ({ mkDerivation, base, containers, mtl, pretty }:
     mkDerivation {
       pname = "djinn-lib";
       version = "0.0.1.2";
       sha256 = "048hs27awl4j9lg04qbnpf8c51mzbgy2afckis19zcswmavi1zn0";
       libraryHaskellDepends = [ base containers mtl pretty ];
       homepage = "http://www.augustsson.net/Darcs/Djinn/";
       description = "Generate Haskell code from a type. Library extracted from djinn package.";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "dlist" = callPackage
    ({ mkDerivation, base, Cabal, deepseq, QuickCheck }:
     mkDerivation {
       pname = "dlist";
       version = "0.7.1.2";
       sha256 = "10rp96rryij7d8gz5kv8ygc6chm1624ck5mbnqs2a3fkdzqj2b9k";
       libraryHaskellDepends = [ base deepseq ];
       testHaskellDepends = [ base Cabal QuickCheck ];
       homepage = "https://github.com/spl/dlist";
       description = "Difference lists";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "dlist-instances" = callPackage
    ({ mkDerivation, base, dlist, semigroups }:
     mkDerivation {
       pname = "dlist-instances";
       version = "0.1";
       sha256 = "0r1j7djywqd7c224wc9ixkplj3m2mbf9k3ra7n92ja2kfpksm615";
       revision = "1";
       editedCabalFile = "0b3gxbs4ny2hhwmcqgvayiwflanwwidcmwv15s4mhii43s34pfi1";
       libraryHaskellDepends = [ base dlist semigroups ];
       homepage = "https://github.com/gregwebs/dlist-instances";
       description = "Difference lists instances";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "dns" = callPackage
    ({ mkDerivation, attoparsec, base, binary, blaze-builder
     , bytestring, conduit, conduit-extra, containers, doctest, hspec
     , iproute, mtl, network, random, resourcet, word8
     }:
     mkDerivation {
       pname = "dns";
       version = "2.0.1";
       sha256 = "1lj7brb61nn4i58fkif9dl6ikgii0ybxsxn6m6xlcyyhpx5y249x";
       libraryHaskellDepends = [
         attoparsec base binary blaze-builder bytestring conduit
         conduit-extra containers iproute mtl network random resourcet
       ];
       testHaskellDepends = [
         attoparsec base binary blaze-builder bytestring conduit
         conduit-extra containers doctest hspec iproute mtl network random
         resourcet word8
       ];
       doCheck = false;
       testTarget = "spec";
       description = "DNS library in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "dockerfile" = callPackage
    ({ mkDerivation, base, hspec }:
     mkDerivation {
       pname = "dockerfile";
       version = "0.1.0.1";
       sha256 = "0980w0fh5xb7azknnmph6rmnzswsjw360ga5ymds2valq2vc0ji9";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base hspec ];
       description = "A simple DSL for describing and generating Dockerfile containers in Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};
  "docopt" = callPackage
    ({ mkDerivation, aeson, ansi-terminal, base, bytestring, containers
     , HUnit, parsec, split, template-haskell, th-lift
     }:
     mkDerivation {
       pname = "docopt";
       version = "0.7.0.4";
       sha256 = "1074047zawhmhdvyv9gzpszczz8vxawyhgqa5h5ilwxiwyfwsw1l";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base containers parsec template-haskell th-lift
       ];
       testHaskellDepends = [
         aeson ansi-terminal base bytestring containers HUnit parsec split
         template-haskell th-lift
       ];
       homepage = "https://github.com/docopt/docopt.hs";
       description = "A command-line interface parser that will make you smile";
       license = stdenv.lib.licenses.mit;
     }) {};
  "doctest" = callPackage
    ({ mkDerivation, base, base-compat, deepseq, directory, filepath
     , ghc, ghc-paths, hspec, HUnit, process, QuickCheck, setenv
     , silently, stringbuilder, syb, transformers
     }:
     mkDerivation {
       pname = "doctest";
       version = "0.10.1";
       sha256 = "1jbyhzbi2hfrfg7vbkpj6vriaap8cn99nnmzwcfscwaijz09jyrm";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base deepseq directory filepath ghc ghc-paths process syb
         transformers
       ];
       executableHaskellDepends = [ base ];
       testHaskellDepends = [
         base base-compat deepseq directory filepath ghc ghc-paths hspec
         HUnit process QuickCheck setenv silently stringbuilder syb
         transformers
       ];
       homepage = "https://github.com/sol/doctest#readme";
       description = "Test interactive Haskell examples";
       license = stdenv.lib.licenses.mit;
     }) {};
  "dotenv" = callPackage
    ({ mkDerivation, base, base-compat, hspec, optparse-applicative
     , parsec, parseerror-eq, process
     }:
     mkDerivation {
       pname = "dotenv";
       version = "0.1.0.9";
       sha256 = "0v7drclrg5l1ff03l5qbn721jg8h7zd69s4brczhxgb937g4crby";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base base-compat parsec ];
       executableHaskellDepends = [
         base base-compat optparse-applicative parsec process
       ];
       testHaskellDepends = [
         base base-compat hspec parsec parseerror-eq
       ];
       homepage = "https://github.com/stackbuilders/dotenv-hs";
       description = "Loads environment variables from dotenv files";
       license = stdenv.lib.licenses.mit;
     }) {};
  "double-conversion" = callPackage
    ({ mkDerivation, base, bytestring, ghc-prim, integer-gmp
     , test-framework, test-framework-quickcheck2, text
     }:
     mkDerivation {
       pname = "double-conversion";
       version = "2.0.1.0";
       sha256 = "034ji9jgf3jl0n5pp1nki3lsg173c3b9vniwnwp1q21iasqbawh0";
       libraryHaskellDepends = [
         base bytestring ghc-prim integer-gmp text
       ];
       testHaskellDepends = [
         base bytestring test-framework test-framework-quickcheck2 text
       ];
       homepage = "https://github.com/bos/double-conversion";
       description = "Fast conversion between double precision floating point and text";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "drawille" = callPackage
    ({ mkDerivation, base, containers, hspec, QuickCheck }:
     mkDerivation {
       pname = "drawille";
       version = "0.1.0.6";
       sha256 = "02bccgr8xz06fk1q8jnpm9aa6mwgcrpmpn7z959zk01mg1ywm0ij";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base containers ];
       testHaskellDepends = [ base containers hspec QuickCheck ];
       homepage = "https://github.com/yamadapc/haskell-drawille";
       description = "A port of asciimoo's drawille to haskell";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "drifter" = callPackage
    ({ mkDerivation, base, containers, fgl, tasty, tasty-hunit
     , tasty-quickcheck, text
     }:
     mkDerivation {
       pname = "drifter";
       version = "0.2.2";
       sha256 = "1q8i6f6y0wzvn4nawzc47h90qbq5ycd6m73ih7336kpzyzphqzp4";
       libraryHaskellDepends = [ base containers fgl text ];
       testHaskellDepends = [
         base tasty tasty-hunit tasty-quickcheck text
       ];
       homepage = "https://github.com/AndrewRademacher/drifter";
       description = "Simple schema management for arbitrary databases";
       license = stdenv.lib.licenses.mit;
     }) {};
  "drifter-postgresql" = callPackage
    ({ mkDerivation, base, drifter, either, mtl, postgresql-simple
     , tasty, tasty-hunit, text, time
     }:
     mkDerivation {
       pname = "drifter-postgresql";
       version = "0.0.2";
       sha256 = "142i86w1ljr5nwd6hxp2mg8v3wh5g9y26mwnjgg2yzaiighd3yq7";
       revision = "2";
       editedCabalFile = "0b0cnw77h8dzd1ixlzvi3g78y3is9gf9nmppb8b2gqfgkgpyd5jp";
       libraryHaskellDepends = [
         base drifter either mtl postgresql-simple time
       ];
       testHaskellDepends = [
         base drifter either postgresql-simple tasty tasty-hunit text
       ];
       doCheck = false;
       homepage = "http://github.com/michaelxavier/drifter-postgresql";
       description = "PostgreSQL support for the drifter schema migration tool";
       license = stdenv.lib.licenses.mit;
     }) {};
  "dual-tree" = callPackage
    ({ mkDerivation, base, monoid-extras, newtype, semigroups }:
     mkDerivation {
       pname = "dual-tree";
       version = "0.2.0.9";
       sha256 = "193ncl8l186gxrfj5pszbmlwjw4gljlkziddql0dyqhr8yxhlzay";
       libraryHaskellDepends = [ base monoid-extras newtype semigroups ];
       description = "Rose trees with cached and accumulating monoidal annotations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "dynamic-state" = callPackage
    ({ mkDerivation, base, binary, bytestring, hashable
     , unordered-containers
     }:
     mkDerivation {
       pname = "dynamic-state";
       version = "0.2.1.0";
       sha256 = "01fyy6nqajjq8xj7bkhij1ypagj801h1k4a4wvfdmk90xjb4828n";
       libraryHaskellDepends = [
         base binary bytestring hashable unordered-containers
       ];
       description = "Optionally serializable dynamic state keyed by type";
       license = stdenv.lib.licenses.gpl2;
     }) {};
  "dyre" = callPackage
    ({ mkDerivation, base, binary, directory, executable-path, filepath
     , ghc-paths, io-storage, process, time, unix, xdg-basedir
     }:
     mkDerivation {
       pname = "dyre";
       version = "0.8.12";
       sha256 = "10hnlysy4bjvvznk8v902mlk4jx95qf972clyi1l32xkqrf30972";
       libraryHaskellDepends = [
         base binary directory executable-path filepath ghc-paths io-storage
         process time unix xdg-basedir
       ];
       homepage = "http://github.com/willdonnelly/dyre";
       description = "Dynamic reconfiguration in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "easy-file" = callPackage
    ({ mkDerivation, base, directory, filepath, time, unix }:
     mkDerivation {
       pname = "easy-file";
       version = "0.2.1";
       sha256 = "0v75081bx4qzlqy29hh639nzlr7dncwza3qxbzm9njc4jarf31pz";
       libraryHaskellDepends = [ base directory filepath time unix ];
       homepage = "http://github.com/kazu-yamamoto/easy-file";
       description = "Cross-platform File handling";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ede" = callPackage
    ({ mkDerivation, aeson, ansi-wl-pprint, base, bifunctors
     , bytestring, comonad, directory, filepath, free, lens, mtl
     , parsers, scientific, semigroups, tasty, tasty-golden, text
     , text-format, text-manipulate, trifecta, unordered-containers
     , vector
     }:
     mkDerivation {
       pname = "ede";
       version = "0.2.8.4";
       sha256 = "0wmfym5avlp1rafn9ba2c5a4qj7pm6gwmpra0kkpzf185nyagzgp";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson ansi-wl-pprint base bifunctors bytestring comonad directory
         filepath free lens mtl parsers scientific semigroups text
         text-format text-manipulate trifecta unordered-containers vector
       ];
       testHaskellDepends = [
         aeson base bifunctors bytestring directory tasty tasty-golden text
       ];
       homepage = "http://github.com/brendanhay/ede";
       description = "Templating language with similar syntax and features to Liquid or Jinja2";
       license = "unknown";
     }) {};
  "edit-distance" = callPackage
    ({ mkDerivation, array, base, containers, criterion, deepseq
     , process, QuickCheck, random, test-framework
     , test-framework-quickcheck2, time, unix
     }:
     mkDerivation {
       pname = "edit-distance";
       version = "0.2.2.1";
       sha256 = "0jkca97zyv23yyilp3jydcrzxqhyk27swhzh82llvban5zp8b21y";
       revision = "1";
       editedCabalFile = "1vjn4ryzdilz7l1ad7czh11nw48h5mj8if7ij3q0mmc3sffa8csd";
       libraryHaskellDepends = [ array base containers random ];
       testHaskellDepends = [
         array base containers QuickCheck random test-framework
         test-framework-quickcheck2
       ];
       benchmarkHaskellDepends = [
         array base containers criterion deepseq process random time unix
       ];
       homepage = "http://github.com/phadej/edit-distance";
       description = "Levenshtein and restricted Damerau-Levenshtein edit distances";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "edit-distance-vector" = callPackage
    ({ mkDerivation, base, QuickCheck, quickcheck-instances, vector }:
     mkDerivation {
       pname = "edit-distance-vector";
       version = "1.0.0.3";
       sha256 = "0nrpippmr0nrcy6njjwg319g2z4yp3djmp9z4i9ci73xi2v709m5";
       libraryHaskellDepends = [ base vector ];
       testHaskellDepends = [
         base QuickCheck quickcheck-instances vector
       ];
       homepage = "https://github.com/thsutton/edit-distance-vector";
       description = "Calculate edit distances and edit scripts between vectors";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "editor-open" = callPackage
    ({ mkDerivation, base, bytestring, conduit, conduit-extra
     , directory, process, resourcet, temporary, transformers, unix
     }:
     mkDerivation {
       pname = "editor-open";
       version = "0.6.0.0";
       sha256 = "0raj0s8v72kz63hqpqhf58sx0a8mcwi4ania40spjirdrsdx3i9g";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base bytestring conduit conduit-extra directory process resourcet
         temporary transformers unix
       ];
       executableHaskellDepends = [
         base bytestring conduit conduit-extra resourcet
       ];
       homepage = "https://github.com/pharpend/editor-open";
       description = "Open the user's $VISUAL or $EDITOR for text input";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "effect-handlers" = callPackage
    ({ mkDerivation, base, criterion, free, hspec, hspec-discover
     , HUnit, kan-extensions, mtl, QuickCheck
     }:
     mkDerivation {
       pname = "effect-handlers";
       version = "0.1.0.7";
       sha256 = "1xa1zag6lzhx3vmzngrsx26nnjd1d2wnxwsw8m69wx823cnrsr22";
       libraryHaskellDepends = [ base free kan-extensions mtl ];
       testHaskellDepends = [
         base hspec hspec-discover HUnit QuickCheck
       ];
       benchmarkHaskellDepends = [ base criterion ];
       homepage = "https://github.com/edofic/effect-handlers";
       description = "A library for writing extensible algebraic effects and handlers. Similar to extensible-effects but with deep handlers.";
       license = stdenv.lib.licenses.mit;
     }) {};
  "either" = callPackage
    ({ mkDerivation, base, bifunctors, exceptions, free, mmorph
     , monad-control, MonadRandom, mtl, profunctors, semigroupoids
     , semigroups, transformers, transformers-base
     }:
     mkDerivation {
       pname = "either";
       version = "4.4.1";
       sha256 = "1jq9b7mwljyqxmcs09bnqzza6710sfk2x444p3aagjlvq3mpvrci";
       libraryHaskellDepends = [
         base bifunctors exceptions free mmorph monad-control MonadRandom
         mtl profunctors semigroupoids semigroups transformers
         transformers-base
       ];
       homepage = "http://github.com/ekmett/either/";
       description = "An either monad transformer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "either-unwrap" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "either-unwrap";
       version = "1.1";
       sha256 = "0g1f5m7bcpnyg2sdvwx8x34ml6dqfrn326s8pbfciaqqf7wddayc";
       libraryHaskellDepends = [ base ];
       homepage = "http://github.com/gcross/either-unwrap";
       description = "Functions for probing and unwrapping values inside of Either";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ekg" = callPackage
    ({ mkDerivation, aeson, base, bytestring, ekg-core, ekg-json
     , filepath, network, snap-core, snap-server, text, time
     , transformers, unordered-containers
     }:
     mkDerivation {
       pname = "ekg";
       version = "0.4.0.9";
       sha256 = "1d5xn8mmr90x7nidh6xwrxwfzpnlg2vd30iixf52vj0r5gc8s0ki";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson base bytestring ekg-core ekg-json filepath network snap-core
         snap-server text time transformers unordered-containers
       ];
       homepage = "https://github.com/tibbe/ekg";
       description = "Remote monitoring of processes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ekg-core" = callPackage
    ({ mkDerivation, base, containers, ghc-prim, text
     , unordered-containers
     }:
     mkDerivation {
       pname = "ekg-core";
       version = "0.1.1.0";
       sha256 = "07h6lwig1cwb526ack1g3f6w8irmaj4kibn11ihhdffk7avix8bv";
       libraryHaskellDepends = [
         base containers ghc-prim text unordered-containers
       ];
       benchmarkHaskellDepends = [ base ];
       homepage = "https://github.com/tibbe/ekg-core";
       description = "Tracking of system metrics";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ekg-json" = callPackage
    ({ mkDerivation, aeson, base, ekg-core, text, unordered-containers
     }:
     mkDerivation {
       pname = "ekg-json";
       version = "0.1.0.1";
       sha256 = "0gqvyvwc5524719gml1il21fvls9w2x234d0i6iysf4jvn9iwh5b";
       revision = "1";
       editedCabalFile = "1jmg742hggicngb4z15c0sn6f3y7ry0bapnv30aq23gfpgxpbj0m";
       libraryHaskellDepends = [
         aeson base ekg-core text unordered-containers
       ];
       homepage = "https://github.com/tibbe/ekg-json";
       description = "JSON encoding of ekg metrics";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "elm-bridge" = callPackage
    ({ mkDerivation, aeson, base, containers, hspec, QuickCheck
     , template-haskell, text
     }:
     mkDerivation {
       pname = "elm-bridge";
       version = "0.2.1.1";
       sha256 = "0dv77d1wrahl6jj6pyii1cva9z5xv9ra9jqh90073wq8d5qa5bya";
       libraryHaskellDepends = [ aeson base template-haskell ];
       testHaskellDepends = [
         aeson base containers hspec QuickCheck text
       ];
       homepage = "http://github.com/agrafix/elm-bridge";
       description = "Derive Elm types from Haskell types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "elm-core-sources" = callPackage
    ({ mkDerivation, base, bytestring, containers, file-embed
     , template-haskell
     }:
     mkDerivation {
       pname = "elm-core-sources";
       version = "1.0.0";
       sha256 = "1yr0csgz0hv25cz3jslap0adwvfcvv35bns32b9g0vyda1fm00x4";
       libraryHaskellDepends = [
         base bytestring containers file-embed template-haskell
       ];
       homepage = "http://github.com/JoeyEremondi/elm-build-lib";
       description = "Source files for the Elm runtime and standard libraries";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "email-validate" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, ghc-prim, HUnit
     , QuickCheck, test-framework, test-framework-hunit
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "email-validate";
       version = "2.2.0";
       sha256 = "0sfbv4l5h13h9shgf2fgm1a7sxbcy633abvwwr5bqnq15kqd6zxa";
       libraryHaskellDepends = [ attoparsec base bytestring ghc-prim ];
       testHaskellDepends = [
         base bytestring HUnit QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2
       ];
       homepage = "http://porg.es/blog/email-address-validation-simpler-faster-more-correct";
       description = "Validating an email address string against RFC 5322";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "enclosed-exceptions" = callPackage
    ({ mkDerivation, async, base, deepseq, hspec, lifted-base
     , monad-control, QuickCheck, transformers, transformers-base
     }:
     mkDerivation {
       pname = "enclosed-exceptions";
       version = "1.0.1.1";
       sha256 = "16ax1kqdsk4apg642qxkm2hf9vb5hzmkd14zmkxra8ssp8rn28z5";
       libraryHaskellDepends = [
         async base deepseq lifted-base monad-control transformers
         transformers-base
       ];
       testHaskellDepends = [
         async base deepseq hspec lifted-base monad-control QuickCheck
         transformers transformers-base
       ];
       doCheck = false;
       homepage = "https://github.com/jcristovao/enclosed-exceptions";
       description = "Catching all exceptions from within an enclosed computation";
       license = stdenv.lib.licenses.mit;
     }) {};
  "engine-io" = callPackage
    ({ mkDerivation, aeson, async, attoparsec, base, base64-bytestring
     , bytestring, either, free, monad-loops, mwc-random, stm, stm-delay
     , text, transformers, unordered-containers, vector, websockets
     }:
     mkDerivation {
       pname = "engine-io";
       version = "1.2.13";
       sha256 = "0ifg86lzcrrm60xdcv66cphpqjjs8zcz6yrfb6wn798b9a53ziaz";
       libraryHaskellDepends = [
         aeson async attoparsec base base64-bytestring bytestring either
         free monad-loops mwc-random stm stm-delay text transformers
         unordered-containers vector websockets
       ];
       homepage = "http://github.com/ocharles/engine.io";
       description = "A Haskell implementation of Engine.IO";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "engine-io-wai" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, either, engine-io
     , http-types, mtl, text, transformers, transformers-compat
     , unordered-containers, wai, wai-websockets, websockets
     }:
     mkDerivation {
       pname = "engine-io-wai";
       version = "1.0.5";
       sha256 = "1cysy2xfalq8f1b08130cz34a873c74yyvd6mw5dpfmc6mw77r40";
       libraryHaskellDepends = [
         attoparsec base bytestring either engine-io http-types mtl text
         transformers transformers-compat unordered-containers wai
         wai-websockets websockets
       ];
       homepage = "http://github.com/ocharles/engine.io";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "engine-io-yesod" = callPackage
    ({ mkDerivation, base, bytestring, conduit, conduit-extra
     , engine-io, http-types, text, unordered-containers, wai
     , wai-websockets, websockets, yesod-core
     }:
     mkDerivation {
       pname = "engine-io-yesod";
       version = "1.0.4";
       sha256 = "1ifvvhv5y2fd90waj776g1wz5k1gw0kylky0livcl7il54bncsfm";
       libraryHaskellDepends = [
         base bytestring conduit conduit-extra engine-io http-types text
         unordered-containers wai wai-websockets websockets yesod-core
       ];
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "entropy" = callPackage
    ({ mkDerivation, base, bytestring, Cabal, directory, filepath
     , process, unix
     }:
     mkDerivation {
       pname = "entropy";
       version = "0.3.7";
       sha256 = "1vzg9fi597dbrcbjsr71y47rvmhiih7lg5rjnb297fzdlbmj1w0z";
       revision = "1";
       editedCabalFile = "01lyh4cbpqlcj1y8mnkw6vk4vid5rzqg1vcf9kwxwd88zj86cgjg";
       setupHaskellDepends = [ base Cabal directory filepath process ];
       libraryHaskellDepends = [ base bytestring unix ];
       homepage = "https://github.com/TomMD/entropy";
       description = "A platform independent entropy source";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "enumerator" = callPackage
    ({ mkDerivation, base, bytestring, containers, text, transformers
     }:
     mkDerivation {
       pname = "enumerator";
       version = "0.4.20";
       sha256 = "02a75dggj295zkhgjry5cb43s6y6ydpjb5w6vgl7kd9b6ma11qik";
       libraryHaskellDepends = [
         base bytestring containers text transformers
       ];
       homepage = "https://john-millikin.com/software/enumerator/";
       description = "Reliable, high-performance processing with left-fold enumerators";
       license = stdenv.lib.licenses.mit;
     }) {};
  "envy" = callPackage
    ({ mkDerivation, base, bytestring, containers, hspec, mtl
     , QuickCheck, quickcheck-instances, text, time, transformers
     }:
     mkDerivation {
       pname = "envy";
       version = "1.1.0.0";
       sha256 = "16fapq8k8z4bq7gzald8chyv5gr5yf7gx8r3bamwwx7a81k4k8i7";
       revision = "1";
       editedCabalFile = "0bicsb9sbyjkkibzrmlk1kqpqiliz6d0mg5bb4h5gpf9v8yjv4m3";
       libraryHaskellDepends = [
         base bytestring containers mtl text time transformers
       ];
       testHaskellDepends = [
         base bytestring hspec mtl QuickCheck quickcheck-instances text time
         transformers
       ];
       description = "An environmentally friendly way to deal with environment variables";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "eq" = callPackage
    ({ mkDerivation, base, semigroupoids }:
     mkDerivation {
       pname = "eq";
       version = "4.0.4";
       sha256 = "1rdxmkmlgyinpih5p708k18j7qq0rj1c8gv240naa9gbkqg4qbq4";
       libraryHaskellDepends = [ base semigroupoids ];
       homepage = "http://github.com/ekmett/eq/";
       description = "Leibnizian equality";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "equivalence" = callPackage
    ({ mkDerivation, base, containers, mtl, QuickCheck, STMonadTrans
     , template-haskell, test-framework, test-framework-quickcheck2
     , transformers, transformers-compat
     }:
     mkDerivation {
       pname = "equivalence";
       version = "0.3.1";
       sha256 = "0zi053l03r5qcnpsphnq8xqazd0cbgj9n44hn47s1hagdra3j1bs";
       libraryHaskellDepends = [
         base containers mtl STMonadTrans transformers transformers-compat
       ];
       testHaskellDepends = [
         base containers mtl QuickCheck STMonadTrans template-haskell
         test-framework test-framework-quickcheck2 transformers
         transformers-compat
       ];
       homepage = "https://bitbucket.org/paba/equivalence/";
       description = "Maintaining an equivalence relation implemented as union-find using STT";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "erf" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "erf";
       version = "2.0.0.0";
       sha256 = "0dxk2r32ajmmc05vaxcp0yw6vgv4lkbmh8jcshncn98xgsfbgw14";
       libraryHaskellDepends = [ base ];
       description = "The error function, erf, and related functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "errors" = callPackage
    ({ mkDerivation, base, safe, transformers, transformers-compat
     , unexceptionalio
     }:
     mkDerivation {
       pname = "errors";
       version = "2.1.2";
       sha256 = "11yqz769mxncl70bkh15q7bi6j8xbhwh92il2shfqxlbp1w8g0aw";
       libraryHaskellDepends = [
         base safe transformers transformers-compat unexceptionalio
       ];
       description = "Simplified error-handling";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "esqueleto" = callPackage
    ({ mkDerivation, base, blaze-html, bytestring, conduit, containers
     , hspec, HUnit, monad-control, monad-logger, persistent
     , persistent-sqlite, persistent-template, QuickCheck, resourcet
     , tagged, text, transformers, unordered-containers
     }:
     mkDerivation {
       pname = "esqueleto";
       version = "2.4.3";
       sha256 = "0d3li5pfsg8d4ci25z4kzafn7fckyrjhrfbv7xbx37ji83xmqmdz";
       revision = "1";
       editedCabalFile = "0f0y9cbvjbzgq90l36722z4diwahi7yy8m3gdpxdxbllsqly27k5";
       libraryHaskellDepends = [
         base blaze-html bytestring conduit monad-logger persistent
         resourcet tagged text transformers unordered-containers
       ];
       testHaskellDepends = [
         base conduit containers hspec HUnit monad-control monad-logger
         persistent persistent-sqlite persistent-template QuickCheck
         resourcet text transformers
       ];
       homepage = "https://github.com/prowdsponsor/esqueleto";
       description = "Type-safe EDSL for SQL queries on persistent backends";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "etcd" = callPackage
    ({ mkDerivation, aeson, async, base, bytestring, hspec
     , http-conduit, MonadRandom, mtl, text, time
     }:
     mkDerivation {
       pname = "etcd";
       version = "1.0.5";
       sha256 = "0bqz678mnpw2jpywz2m76923cyq864xn537a9zsqhm6c80gc0vwi";
       revision = "1";
       editedCabalFile = "1ylq3wsl4ghjv1ib2zzfny7wdhwhwfnczl64wy18xipd5a6vrnsw";
       libraryHaskellDepends = [
         aeson base bytestring http-conduit text time
       ];
       testHaskellDepends = [ async base hspec MonadRandom mtl text ];
       doCheck = false;
       description = "Client for etcd, a highly-available key value store";
       license = "unknown";
     }) {};
  "ether" = callPackage
    ({ mkDerivation, base, mmorph, monad-control, mtl, newtype-generics
     , QuickCheck, tasty, tasty-quickcheck, template-haskell
     , transformers, transformers-base, transformers-lift
     }:
     mkDerivation {
       pname = "ether";
       version = "0.3.1.1";
       sha256 = "1c803fnlxjsqxnjjvmxbmka75kn4lxj60kp1ny2fybzfw0vq1yms";
       libraryHaskellDepends = [
         base mmorph monad-control mtl newtype-generics template-haskell
         transformers transformers-base transformers-lift
       ];
       testHaskellDepends = [
         base mtl QuickCheck tasty tasty-quickcheck transformers
       ];
       homepage = "https://int-index.github.io/ether/";
       description = "Monad transformers and classes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "event" = callPackage
    ({ mkDerivation, base, containers, semigroups, transformers }:
     mkDerivation {
       pname = "event";
       version = "0.1.3";
       sha256 = "0njjaadlahqg2q7p91yi3xwrh4d2cl2132p1lr44nh5c5f6fns2r";
       libraryHaskellDepends = [
         base containers semigroups transformers
       ];
       description = "Monoidal, monadic and first-class events";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "eventstore" = callPackage
    ({ mkDerivation, aeson, async, base, bytestring, cereal, containers
     , network, protobuf, random, stm, tasty, tasty-hunit, text, time
     , unordered-containers, uuid
     }:
     mkDerivation {
       pname = "eventstore";
       version = "0.10.0.2";
       sha256 = "1j3msnd1nksnrp5x432d5px9q93bmm2ljbjscqv1ph2hnaq5pf6s";
       libraryHaskellDepends = [
         aeson async base bytestring cereal containers network protobuf
         random stm text time unordered-containers uuid
       ];
       testHaskellDepends = [
         aeson base stm tasty tasty-hunit text time
       ];
       doCheck = false;
       homepage = "http://github.com/YoEight/eventstore";
       description = "EventStore TCP Client";
       license = stdenv.lib.licenses.bsd3;
       platforms = [ "x86_64-darwin" "x86_64-linux" ];
     }) {};
  "exact-pi" = callPackage
    ({ mkDerivation, base, numtype-dk }:
     mkDerivation {
       pname = "exact-pi";
       version = "0.4.1.1";
       sha256 = "1n6a3b63ijcq9mr6acabxkzn1ris0ymvlv91sx7yaai0i9l2hnga";
       libraryHaskellDepends = [ base numtype-dk ];
       homepage = "https://github.com/dmcclean/exact-pi/";
       description = "Exact rational multiples of pi (and integer powers of pi)";
       license = stdenv.lib.licenses.mit;
     }) {};
  "exact-real" = callPackage
    ({ mkDerivation, base, checkers, criterion, directory, doctest
     , filepath, groups, integer-gmp, memoize, QuickCheck, random, tasty
     , tasty-hunit, tasty-quickcheck, tasty-th
     }:
     mkDerivation {
       pname = "exact-real";
       version = "0.12.0";
       sha256 = "0f6r340i9p5h8xqn1bw2plrdlzks2hmw354qqhkgqkh74gpsxzgw";
       libraryHaskellDepends = [ base integer-gmp memoize random ];
       testHaskellDepends = [
         base checkers directory doctest filepath groups QuickCheck random
         tasty tasty-hunit tasty-quickcheck tasty-th
       ];
       benchmarkHaskellDepends = [ base criterion ];
       homepage = "http://github.com/expipiplus1/exact-real";
       description = "Exact real arithmetic";
       license = stdenv.lib.licenses.mit;
     }) {};
  "exception-transformers" = callPackage
    ({ mkDerivation, base, HUnit, stm, test-framework
     , test-framework-hunit, transformers, transformers-compat
     }:
     mkDerivation {
       pname = "exception-transformers";
       version = "0.4.0.3";
       sha256 = "121ainshx253rw7w43v11h9l9zsr7qgrryngjf7lgdfn651d92qf";
       libraryHaskellDepends = [
         base stm transformers transformers-compat
       ];
       testHaskellDepends = [
         base HUnit test-framework test-framework-hunit transformers
         transformers-compat
       ];
       description = "Type classes and monads for unchecked extensible exceptions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "exceptional" = callPackage
    ({ mkDerivation, base, exceptions }:
     mkDerivation {
       pname = "exceptional";
       version = "0.3.0.0";
       sha256 = "01lzx4ihdvyivjnkvn78hcdsk83dvm6iy9v5q1f28kd1iv96x1ns";
       libraryHaskellDepends = [ base exceptions ];
       homepage = "https://github.com/";
       description = "Essentially the Maybe type with error messages";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "exceptions" = callPackage
    ({ mkDerivation, base, mtl, stm, template-haskell, transformers
     , transformers-compat
     }:
     mkDerivation {
       pname = "exceptions";
       version = "0.8.2.1";
       sha256 = "0d8hhmnryn80cnal1r1p5323v7y8z35vny0cwmaihjphy9zqfdf4";
       revision = "1";
       editedCabalFile = "04y370dqwgjwn10v6dgdsa1dxafmirfqn5qs2jwz4h9957mn8gqa";
       libraryHaskellDepends = [
         base mtl stm template-haskell transformers transformers-compat
       ];
       doCheck = false;
       homepage = "http://github.com/ekmett/exceptions/";
       description = "Extensible optionally-pure exceptions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "executable-hash" = callPackage
    ({ mkDerivation, base, bytestring, cryptohash, directory
     , executable-path, file-embed, template-haskell
     }:
     mkDerivation {
       pname = "executable-hash";
       version = "0.2.0.2";
       sha256 = "103s0095bb71wz3axhzw2w2nm5wfr01r9ypkdvbp22zhmq3xr1bj";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring cryptohash directory executable-path file-embed
         template-haskell
       ];
       executableHaskellDepends = [ base ];
       testHaskellDepends = [ base ];
       homepage = "http://github.com/fpco/executable-hash";
       description = "Provides the SHA1 hash of the program executable";
       license = stdenv.lib.licenses.mit;
     }) {};
  "executable-path" = callPackage
    ({ mkDerivation, base, directory, filepath, unix }:
     mkDerivation {
       pname = "executable-path";
       version = "0.0.3";
       sha256 = "1jg58qf19qz93c60ryglcavwdcysz4fd4qn8kpw5im9w9kniawlc";
       libraryHaskellDepends = [ base directory filepath unix ];
       homepage = "http://code.haskell.org/~bkomuves/";
       description = "Finding out the full path of the executable";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "exhaustive" = callPackage
    ({ mkDerivation, base, generics-sop, template-haskell, transformers
     }:
     mkDerivation {
       pname = "exhaustive";
       version = "1.1.2";
       sha256 = "0yqjc306z6dr3bf4fz9kxaaq0m9vjnkx99wqi25607ziv511b3k5";
       libraryHaskellDepends = [
         base generics-sop template-haskell transformers
       ];
       homepage = "http://github.com/ocharles/exhaustive";
       description = "Compile time checks that a computation considers producing data through all possible constructors";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "expiring-cache-map" = callPackage
    ({ mkDerivation, base, bytestring, containers, hashable, time
     , unordered-containers
     }:
     mkDerivation {
       pname = "expiring-cache-map";
       version = "0.0.5.4";
       sha256 = "0wbx9qp9ki9gwrc9qafpflkmyj1yiryak1di163mz0i3dv2w73h8";
       libraryHaskellDepends = [
         base containers hashable unordered-containers
       ];
       testHaskellDepends = [
         base bytestring containers hashable time unordered-containers
       ];
       homepage = "https://github.com/elblake/expiring-cache-map";
       description = "General purpose simple caching";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "explicit-exception" = callPackage
    ({ mkDerivation, base, deepseq, transformers }:
     mkDerivation {
       pname = "explicit-exception";
       version = "0.1.8";
       sha256 = "0vyi9k0rx083qs3yizcm89pvp38823akbrkr43w3ng6vh4vpmvkz";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base deepseq transformers ];
       homepage = "http://www.haskell.org/haskellwiki/Exception";
       description = "Exceptions which are explicit in the type signature";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "extensible-effects" = callPackage
    ({ mkDerivation, base, HUnit, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     , test-framework-th, transformers, transformers-base, type-aligned
     , void
     }:
     mkDerivation {
       pname = "extensible-effects";
       version = "1.11.0.3";
       sha256 = "1czbq6hhsk6lynrbmfd7dz2d83ia3qyfb2hdlafhl04gc1kbqi5f";
       revision = "1";
       editedCabalFile = "1yj6h65ncsbf1paw9mj49c45j48cdxam2dmapzqaz1i1c0q9xx6y";
       libraryHaskellDepends = [
         base transformers transformers-base type-aligned void
       ];
       testHaskellDepends = [
         base HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2 test-framework-th void
       ];
       homepage = "https://github.com/suhailshergill/extensible-effects";
       description = "An Alternative to Monad Transformers";
       license = stdenv.lib.licenses.mit;
     }) {};
  "extensible-exceptions" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "extensible-exceptions";
       version = "0.1.1.4";
       sha256 = "1273nqws9ij1rp1bsq5jc7k2jxpqa0svawdbim05lf302y0firbc";
       libraryHaskellDepends = [ base ];
       description = "Extensible exceptions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "extra" = callPackage
    ({ mkDerivation, base, directory, filepath, process, QuickCheck
     , time, unix
     }:
     mkDerivation {
       pname = "extra";
       version = "1.4.3";
       sha256 = "1y71f32wiglfg606x2rg5f9my5kmkpvrsik02vmqx5b9d1i2alwh";
       revision = "1";
       editedCabalFile = "0hi7yc14j3k4f5ahwf3q81byfabsp21s3lyp1yk1lx97y54pj8gf";
       libraryHaskellDepends = [
         base directory filepath process time unix
       ];
       testHaskellDepends = [
         base directory filepath QuickCheck time unix
       ];
       homepage = "https://github.com/ndmitchell/extra#readme";
       description = "Extra functions I use";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "extract-dependencies" = callPackage
    ({ mkDerivation, async, base, Cabal, containers
     , package-description-remote
     }:
     mkDerivation {
       pname = "extract-dependencies";
       version = "0.2.0.0";
       sha256 = "0dcbv88l1hdkzvbhvxkm2ijfzpcsdj8ag4hzpm80lwqzvbmls8ih";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         async base Cabal containers package-description-remote
       ];
       executableHaskellDepends = [
         async base Cabal containers package-description-remote
       ];
       homepage = "https://github.com/yamadapc/stack-run-auto/extract-dependencies";
       description = "Given a hackage package outputs the list of its dependencies";
       license = stdenv.lib.licenses.mit;
     }) {};
  "fail" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "fail";
       version = "4.9.0.0";
       sha256 = "18nlj6xvnggy61gwbyrpmvbdkq928wv0wx2zcsljb52kbhddnp3d";
       libraryHaskellDepends = [ base ];
       homepage = "https://prime.haskell.org/wiki/Libraries/Proposals/MonadFail";
       description = "Forward-compatible MonadFail class";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "farmhash" = callPackage
    ({ mkDerivation, base, bytestring, criterion, hspec, QuickCheck }:
     mkDerivation {
       pname = "farmhash";
       version = "0.1.0.4";
       sha256 = "1mqkw6068jjznj64fmgj4m34pjjhpllh44ainm6lbh28zqb3dr3i";
       libraryHaskellDepends = [ base bytestring ];
       testHaskellDepends = [ base bytestring hspec QuickCheck ];
       benchmarkHaskellDepends = [ base bytestring criterion ];
       homepage = "https://github.com/abhinav/farmhash";
       description = "Fast hash functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fast-builder" = callPackage
    ({ mkDerivation, aeson, base, bytestring, containers, criterion
     , deepseq, ghc-prim, process, QuickCheck, scientific, stm
     , template-haskell, text, true-name, unordered-containers, vector
     }:
     mkDerivation {
       pname = "fast-builder";
       version = "0.0.0.2";
       sha256 = "07fnn282ldfmgkfnsdnjr11hx89jhw7waz573a7nx2a329r1p4pf";
       libraryHaskellDepends = [ base bytestring ghc-prim ];
       testHaskellDepends = [ base bytestring process QuickCheck stm ];
       benchmarkHaskellDepends = [
         aeson base bytestring containers criterion deepseq ghc-prim
         scientific template-haskell text true-name unordered-containers
         vector
       ];
       homepage = "http://github.com/takano-akio/fast-builder";
       description = "Fast ByteString Builder";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "fast-logger" = callPackage
    ({ mkDerivation, array, auto-update, base, bytestring
     , bytestring-builder, directory, filepath, hspec, text
     }:
     mkDerivation {
       pname = "fast-logger";
       version = "2.4.1";
       sha256 = "0kjk1861qcls8m8y7i55msfpprws5wk6c5mxzi35g2qbl2sih4p5";
       revision = "2";
       editedCabalFile = "0h8dma6pi03k6pamfpxwrjh0dc939j3cccfzpkbq8da9jw1800bc";
       libraryHaskellDepends = [
         array auto-update base bytestring bytestring-builder directory
         filepath text
       ];
       testHaskellDepends = [ base bytestring directory hspec ];
       description = "A fast logging system";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fasta" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, containers, foldl
     , lens, parsec, pipes, pipes-attoparsec, pipes-bytestring
     , pipes-group, pipes-text, split, text
     }:
     mkDerivation {
       pname = "fasta";
       version = "0.10.2.0";
       sha256 = "0l2gzrq1jqvhs2wnk15l1zb7859z0vjxlm6k6hdk8h0qa35wv66s";
       libraryHaskellDepends = [
         attoparsec base bytestring containers foldl lens parsec pipes
         pipes-attoparsec pipes-bytestring pipes-group pipes-text split text
       ];
       homepage = "https://github.com/GregorySchwartz/fasta";
       description = "A simple, mindless parser for fasta files";
       license = stdenv.lib.licenses.gpl2;
     }) {};
  "fay" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, base-compat, bytestring
     , containers, data-default, data-lens-light, directory, filepath
     , ghc-paths, groom, haskell-src-exts, language-ecmascript, mtl
     , mtl-compat, optparse-applicative, process, random, safe
     , sourcemap, split, spoon, syb, tasty, tasty-hunit, tasty-th, text
     , time, transformers, transformers-compat, traverse-with-class
     , type-eq, uniplate, unordered-containers, utf8-string, vector
     }:
     mkDerivation {
       pname = "fay";
       version = "0.23.1.12";
       sha256 = "09zpc8a15939bg5chrk4cwf4akzslx1w09szwki262fkyrj0m71x";
       revision = "6";
       editedCabalFile = "02vy6ajjbvwh88zzdm5x54jmbxdl88fgpwpgcxpgrf039gy0il2d";
       configureFlags = [ "-ftest" ];
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson base base-compat bytestring containers data-default
         data-lens-light directory filepath ghc-paths haskell-src-exts
         language-ecmascript mtl mtl-compat process safe sourcemap split
         spoon syb text time transformers transformers-compat
         traverse-with-class type-eq uniplate unordered-containers
         utf8-string vector
       ];
       executableHaskellDepends = [
         aeson attoparsec base bytestring containers directory filepath
         groom haskell-src-exts mtl optparse-applicative random split tasty
         tasty-hunit tasty-th text utf8-string
       ];
       homepage = "https://github.com/faylang/fay/wiki";
       description = "A compiler for Fay, a Haskell subset that compiles to JavaScript";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fay-base" = callPackage
    ({ mkDerivation, base, fay }:
     mkDerivation {
       pname = "fay-base";
       version = "0.20.0.1";
       sha256 = "17mfblr40jhn93vz6vn0n0xsk4lwf5d5cavfy5zy8sg4inp6dkjr";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base fay ];
       homepage = "https://github.com/faylang/fay/";
       description = "The base package for Fay";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fay-builder" = callPackage
    ({ mkDerivation, base, Cabal, data-default, directory, fay
     , filepath, safe, split, text
     }:
     mkDerivation {
       pname = "fay-builder";
       version = "0.2.0.5";
       sha256 = "18ii5dnzk866q79h43fspdz8dzg17mzfrykh3pl4p0q4qdnylv8i";
       revision = "4";
       editedCabalFile = "09ix1rqm23l2ksc9zx6qj6m2pw789rzs6b3q41m60bcxh8xik9km";
       libraryHaskellDepends = [
         base Cabal data-default directory fay filepath safe split text
       ];
       description = "Compile Fay code on cabal install, and ad-hoc recompile during development";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fay-dom" = callPackage
    ({ mkDerivation, fay-base }:
     mkDerivation {
       pname = "fay-dom";
       version = "0.5.0.1";
       sha256 = "1zm6w6nccswaksr283alhnsss6xw4k7s61yp8ff4lg5127ff9wp0";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ fay-base ];
       homepage = "https://github.com/faylang/fay-dom";
       description = "DOM FFI wrapper library for Fay";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fay-jquery" = callPackage
    ({ mkDerivation, fay-base, fay-text }:
     mkDerivation {
       pname = "fay-jquery";
       version = "0.6.1.0";
       sha256 = "04vg018zynb5ckj7ca9a9a3lbs8kjx8a5k0l3k73yp2y27w7xx8g";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ fay-base fay-text ];
       homepage = "https://github.com/faylang/fay-jquery";
       description = "jQuery bindings for Fay";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fay-text" = callPackage
    ({ mkDerivation, fay, fay-base, text }:
     mkDerivation {
       pname = "fay-text";
       version = "0.3.2.2";
       sha256 = "1q1v8jzkccy9arq6jkz4ynpzm1691d1dv9wzyi4i5m6n0gl7aans";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ fay fay-base text ];
       homepage = "https://github.com/faylang/fay-text";
       description = "Fay Text type represented as JavaScript strings";
       license = stdenv.lib.licenses.mit;
     }) {};
  "fay-uri" = callPackage
    ({ mkDerivation, fay-base }:
     mkDerivation {
       pname = "fay-uri";
       version = "0.2.0.0";
       sha256 = "1vv4jgkz9cx8inbn6g6sn3a0nf1ak81qlj5li21sk2isj0yws1nr";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ fay-base ];
       homepage = "https://github.com/faylang/fay-uri";
       description = "Persistent FFI bindings for using jsUri in Fay";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fb" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, base16-bytestring
     , base64-bytestring, bytestring, cereal, conduit, conduit-extra
     , crypto-api, cryptohash, cryptohash-cryptoapi, data-default
     , http-conduit, http-types, lifted-base, monad-control
     , monad-logger, old-locale, resourcet, text, time, transformers
     , transformers-base, unordered-containers
     }:
     mkDerivation {
       pname = "fb";
       version = "1.0.13";
       sha256 = "0plk6w2r8bvfmyn7kjacgjcf3c38vsgiw8x9zqw5s6vjnl2kxbsj";
       revision = "1";
       editedCabalFile = "0p67dma9q6csbd6nipzjvph2bvn3pfizcz0ljhrz2nfn78q7cnpz";
       libraryHaskellDepends = [
         aeson attoparsec base base16-bytestring base64-bytestring
         bytestring cereal conduit conduit-extra crypto-api cryptohash
         cryptohash-cryptoapi data-default http-conduit http-types
         lifted-base monad-control monad-logger old-locale resourcet text
         time transformers transformers-base unordered-containers
       ];
       doCheck = false;
       homepage = "https://github.com/prowdsponsor/fb";
       description = "Bindings to Facebook's API";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fb-persistent" = callPackage
    ({ mkDerivation, base, cereal, fb, persistent, text, time }:
     mkDerivation {
       pname = "fb-persistent";
       version = "0.3.6";
       sha256 = "1il06mlvvjybfnqpdnir9nr1g0irf84fa4q8lzavrlqgny8f294s";
       libraryHaskellDepends = [ base cereal fb persistent text time ];
       homepage = "https://github.com/prowdsponsor/fb-persistent";
       description = "Provides Persistent instances to Facebook types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fclabels" = callPackage
    ({ mkDerivation, base, criterion, HUnit, mtl, template-haskell
     , transformers
     }:
     mkDerivation {
       pname = "fclabels";
       version = "2.0.3";
       sha256 = "0hyfv6bbd8pjikqzh2pcj61gphbyk7h9ffxi8m8l7gh0j364sgml";
       libraryHaskellDepends = [ base mtl template-haskell transformers ];
       testHaskellDepends = [
         base HUnit mtl template-haskell transformers
       ];
       benchmarkHaskellDepends = [ base criterion ];
       homepage = "https://github.com/sebastiaanvisser/fclabels";
       description = "First class accessor labels implemented as lenses";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fdo-notify" = callPackage
    ({ mkDerivation, base, containers, dbus }:
     mkDerivation {
       pname = "fdo-notify";
       version = "0.3.1";
       sha256 = "1n4zk1i7g34w0wk5zy8n4r63xbglxf62h8j78kv5fc2yn95l30vh";
       libraryHaskellDepends = [ base containers dbus ];
       homepage = "http://bitbucket.org/taejo/fdo-notify/";
       description = "Desktop Notifications client";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "feature-flags" = callPackage
    ({ mkDerivation, base, text }:
     mkDerivation {
       pname = "feature-flags";
       version = "0.1.0.1";
       sha256 = "1lssjgksq0k2dd7l5lmzxnr9f5zk3gbh386zfmcqgc4iczdzfk0f";
       libraryHaskellDepends = [ base text ];
       homepage = "https://github.com/iand675/feature-flags";
       description = "A simple library for dynamically enabling and disabling functionality";
       license = stdenv.lib.licenses.mit;
     }) {};
  "feed" = callPackage
    ({ mkDerivation, base, HUnit, old-locale, old-time, test-framework
     , test-framework-hunit, time, time-locale-compat, utf8-string, xml
     }:
     mkDerivation {
       pname = "feed";
       version = "0.3.11.1";
       sha256 = "10y9myj76b1q5h7qwvxw65j506dlzdd3jpb7qx3injqa2byd017d";
       revision = "4";
       editedCabalFile = "1im8bnyj1bkwis4wbnkbkjnngirkksjlxbw0xp4b35fnl0b0mkpc";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base old-locale old-time time time-locale-compat utf8-string xml
       ];
       testHaskellDepends = [
         base HUnit old-locale old-time test-framework test-framework-hunit
         time time-locale-compat utf8-string xml
       ];
       homepage = "https://github.com/bergmark/feed";
       description = "Interfacing with RSS (v 0.9x, 2.x, 1.0) + Atom feeds.";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fft" = callPackage
    ({ mkDerivation, array, base, carray, fftw, fftwFloat, ix-shapable
     , storable-complex, syb, transformers
     }:
     mkDerivation {
       pname = "fft";
       version = "0.1.8.3";
       sha256 = "15iqd81rl50bd4syjg4gpm9y3pzamqdai9csainjs7rbiybm1x3k";
       libraryHaskellDepends = [
         array base carray ix-shapable storable-complex syb transformers
       ];
       libraryPkgconfigDepends = [ fftw fftwFloat ];
       doCheck = false;
       description = "Bindings to the FFTW library";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) fftw; inherit (pkgs) fftwFloat;};
  "fgl" = callPackage
    ({ mkDerivation, array, base, containers, deepseq, hspec
     , QuickCheck, transformers
     }:
     mkDerivation {
       pname = "fgl";
       version = "5.5.2.3";
       sha256 = "084ykxa9amx24py2av1b687y07i2nsvzhjs9i5iynzwi4593n4gl";
       libraryHaskellDepends = [
         array base containers deepseq transformers
       ];
       testHaskellDepends = [ base containers hspec QuickCheck ];
       description = "Martin Erwig's Functional Graph Library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fgl-arbitrary" = callPackage
    ({ mkDerivation, base, containers, fgl, hspec, QuickCheck }:
     mkDerivation {
       pname = "fgl-arbitrary";
       version = "0.2.0.1";
       sha256 = "0131990ggnd1gwwwhkjs3bfxy5nb7hiyp4wgmh6yw0nyglm9519y";
       libraryHaskellDepends = [ base fgl QuickCheck ];
       testHaskellDepends = [ base containers fgl hspec QuickCheck ];
       description = "QuickCheck support for fgl";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "file-embed" = callPackage
    ({ mkDerivation, base, bytestring, directory, filepath
     , template-haskell
     }:
     mkDerivation {
       pname = "file-embed";
       version = "0.0.9.1";
       sha256 = "03s6krrgq503si79yrh9swkqmplaayajs1sdjihpc1h3vwnfbggx";
       libraryHaskellDepends = [
         base bytestring directory filepath template-haskell
       ];
       testHaskellDepends = [ base filepath ];
       homepage = "https://github.com/snoyberg/file-embed";
       description = "Use Template Haskell to embed file contents directly";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "file-location" = callPackage
    ({ mkDerivation, base, containers, HUnit, lifted-base, process
     , template-haskell, th-orphans, transformers
     }:
     mkDerivation {
       pname = "file-location";
       version = "0.4.9";
       sha256 = "1p0lz02pvlvq2781542ims3x5vcck35dw4g58bv16y96qarxwady";
       libraryHaskellDepends = [
         base containers HUnit lifted-base template-haskell th-orphans
         transformers
       ];
       testHaskellDepends = [ base lifted-base process ];
       homepage = "https://github.com/gregwebs/FileLocation.hs";
       description = "common functions that show file location information";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "file-modules" = callPackage
    ({ mkDerivation, async, base, directory, filepath, haskell-src-exts
     , MissingH
     }:
     mkDerivation {
       pname = "file-modules";
       version = "0.1.2.2";
       sha256 = "01mkdi577pjzjwky3dv3jw2wk99zq6ss8cpfiagvl311vl5bi5f7";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         async base directory filepath haskell-src-exts MissingH
       ];
       executableHaskellDepends = [
         async base directory filepath haskell-src-exts MissingH
       ];
       homepage = "https://github.com/yamadapc/stack-run-auto";
       description = "Takes a Haskell source-code file and outputs its modules";
       license = stdenv.lib.licenses.mit;
     }) {};
  "filecache" = callPackage
    ({ mkDerivation, base, directory, exceptions, hashable, hinotify
     , lens, mtl, stm, strict-base-types, temporary
     , unordered-containers
     }:
     mkDerivation {
       pname = "filecache";
       version = "0.2.9";
       sha256 = "10fxjphldf2mi25pmx5l9j1073zb5lrhana2ysvkiazfmmjcvrh2";
       libraryHaskellDepends = [
         base exceptions hashable hinotify lens mtl stm strict-base-types
         unordered-containers
       ];
       testHaskellDepends = [
         base directory temporary unordered-containers
       ];
       homepage = "http://lpuppet.banquise.net/";
       description = "A Linux-only cache system associating values to files";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "filelock" = callPackage
    ({ mkDerivation, base, unix }:
     mkDerivation {
       pname = "filelock";
       version = "0.1.0.1";
       sha256 = "0qypjnbkfayqyaymx8qrq4abddlrlzanf6lqhfn9cqzcgzr6735d";
       libraryHaskellDepends = [ base unix ];
       homepage = "http://github.com/takano-akio/filelock";
       description = "Portable interface to file locking (flock / LockFileEx)";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "filemanip" = callPackage
    ({ mkDerivation, base, bytestring, directory, filepath, mtl
     , unix-compat
     }:
     mkDerivation {
       pname = "filemanip";
       version = "0.3.6.3";
       sha256 = "0ilqr8jv41zxcj5qyicg29m8s30b9v70x6f9h2h2rw5ap8bxldl8";
       libraryHaskellDepends = [
         base bytestring directory filepath mtl unix-compat
       ];
       homepage = "https://github.com/bos/filemanip";
       description = "Expressive file and directory manipulation for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fingertree" = callPackage
    ({ mkDerivation, base, HUnit, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "fingertree";
       version = "0.1.1.0";
       sha256 = "1w6x3kp3by5yjmam6wlrf9vap5l5rrqaip0djbrdp0fpf2imn30n";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [
         base HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       description = "Generic finger-tree structure, with example instances";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fingertree-psqueue" = callPackage
    ({ mkDerivation, base, fingertree }:
     mkDerivation {
       pname = "fingertree-psqueue";
       version = "0.3";
       sha256 = "14kc0ijx44q7whniickjj3h9ag1pixn51dlxjs6n2ypaclcjz34z";
       libraryHaskellDepends = [ base fingertree ];
       description = "Implementation of priority search queues as finger trees";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fixed" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "fixed";
       version = "0.2.1.1";
       sha256 = "1qhmwx8iqshns0crmr9d2f8hm65jxbcp3dvv0c39v34ra7if3a94";
       libraryHaskellDepends = [ base ];
       homepage = "http://github.com/ekmett/fixed";
       description = "Signed 15.16 precision fixed point arithmetic";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fixed-list" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "fixed-list";
       version = "0.1.6";
       sha256 = "1gpv0p7xyzmrrq20irf0mpggnc0vm5hpq36j4vd1xlq6bplq1xmb";
       libraryHaskellDepends = [ base ];
       homepage = "http://github.com/jvranish/FixedList/tree/master";
       description = "A fixed length list type";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fixed-vector" = callPackage
    ({ mkDerivation, base, deepseq, doctest, filemanip, primitive }:
     mkDerivation {
       pname = "fixed-vector";
       version = "0.8.1.0";
       sha256 = "14rsprg1hyjkv7n7d03zlx65hd6j7bl2fdw494chc24c4k3jjg1w";
       libraryHaskellDepends = [ base deepseq primitive ];
       testHaskellDepends = [ base doctest filemanip primitive ];
       description = "Generic vectors with statically known size";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fixed-vector-hetero" = callPackage
    ({ mkDerivation, base, deepseq, fixed-vector, ghc-prim, primitive
     , transformers
     }:
     mkDerivation {
       pname = "fixed-vector-hetero";
       version = "0.3.1.0";
       sha256 = "0x5fjggm0licrdd442pr1968zlzfb0ah4ib8s9yxcb2p6vc39lzv";
       revision = "1";
       editedCabalFile = "1wh1gzq2qdhfb2nr7b4wl7ny7z59fiya15lzz1ipsnqfz88zdvdv";
       libraryHaskellDepends = [
         base deepseq fixed-vector ghc-prim primitive transformers
       ];
       homepage = "http://github.org/Shimuuar/fixed-vector-hetero";
       description = "Generic heterogeneous vectors";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "flexible-defaults" = callPackage
    ({ mkDerivation, base, containers, template-haskell, th-extras
     , transformers
     }:
     mkDerivation {
       pname = "flexible-defaults";
       version = "0.0.1.1";
       sha256 = "0cbp8hb7y29xz3hl780173cs6ca4df0r98fz7v3drqr46aq55ipl";
       libraryHaskellDepends = [
         base containers template-haskell th-extras transformers
       ];
       homepage = "https://github.com/mokus0/flexible-defaults";
       description = "Generate default function implementations for complex type classes";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "flock" = callPackage
    ({ mkDerivation, base, lifted-base, monad-control, transformers
     , unix
     }:
     mkDerivation {
       pname = "flock";
       version = "0.3.1.8";
       sha256 = "1g1gf7qnlqkl57h28nzxnbzj7v2h73czffp5y7s7jm9vbihcwd4n";
       revision = "3";
       editedCabalFile = "06hdirzgghlxpdymb5b5l58v20m34lmn2z8hmp9lwcskc8xfqqfn";
       libraryHaskellDepends = [
         base lifted-base monad-control transformers unix
       ];
       homepage = "http://github.com/hesselink/flock";
       description = "Wrapper for flock(2)";
       license = "unknown";
     }) {};
  "flow" = callPackage
    ({ mkDerivation, base, criterion, doctest, QuickCheck
     , template-haskell
     }:
     mkDerivation {
       pname = "flow";
       version = "1.0.2";
       sha256 = "1l2ns8b8zsr9gh4v515s29pzjw8gigb0svwqvps90amp85w9rw10";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base doctest QuickCheck template-haskell ];
       benchmarkHaskellDepends = [ base criterion ];
       homepage = "http://taylor.fausak.me/flow/";
       description = "Write more understandable Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};
  "flowdock" = callPackage
    ({ mkDerivation, aeson, base, base64-bytestring, bytestring
     , http-client, http-client-tls, lens, lens-action, mtl, network
     , pipes, pipes-aeson, pipes-http, pipes-parse, template-haskell
     , text, unordered-containers, uuid
     }:
     mkDerivation {
       pname = "flowdock";
       version = "0.3.0.1";
       sha256 = "1az9wwdng7i3jrjwizzz3690506b3vk1m8h2b96wf59r51qnpr6i";
       libraryHaskellDepends = [
         aeson base base64-bytestring bytestring http-client http-client-tls
         lens lens-action mtl network pipes pipes-aeson pipes-http
         pipes-parse template-haskell text unordered-containers uuid
       ];
       homepage = "https://github.com/brewtown/hs-flowdock";
       description = "Flowdock client library for Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};
  "fmlist" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "fmlist";
       version = "0.9";
       sha256 = "1gzwmsrbxk22v7syf8zfvxphm23dmjzfpysz6qww3qvib8wm64aq";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/sjoerdvisscher/fmlist";
       description = "FoldMap lists";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fn" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring, directory
     , filepath, hspec, http-types, text, unordered-containers, wai
     , wai-extra
     }:
     mkDerivation {
       pname = "fn";
       version = "0.2.0.2";
       sha256 = "04nnif693pmq9mbrng3844l3bj3i0f8wlri7jf5ba2syfgjsn1g3";
       libraryHaskellDepends = [
         base blaze-builder bytestring directory filepath http-types text
         unordered-containers wai wai-extra
       ];
       testHaskellDepends = [
         base directory filepath hspec http-types text unordered-containers
         wai wai-extra
       ];
       homepage = "http://github.com/dbp/fn#readme";
       description = "A functional web framework";
       license = stdenv.lib.licenses.isc;
     }) {};
  "fn-extra" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring, either, fn, heist
     , http-types, lens, mtl, text, wai, wai-util, xmlhtml
     }:
     mkDerivation {
       pname = "fn-extra";
       version = "0.2.0.1";
       sha256 = "0i6sd0i7ddfkl1iqm3avqqn15zism28prw97y3dmfiz5gqvsy828";
       libraryHaskellDepends = [
         base blaze-builder bytestring either fn heist http-types lens mtl
         text wai wai-util xmlhtml
       ];
       homepage = "http://github.com/dbp/fn#readme";
       description = "Extras for Fn, a functional web framework";
       license = stdenv.lib.licenses.isc;
     }) {};
  "focus" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "focus";
       version = "0.1.4";
       sha256 = "0h6q48ybcch1p15f4x56ya4d8mn4dwzbfjx573dy6z3x12v7qi2n";
       revision = "1";
       editedCabalFile = "098z3fgkgkfh6dm41sn6wjp87gc2gjka651nslk1n5ychgpkpn1g";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/nikita-volkov/focus";
       description = "A general abstraction for manipulating elements of container data structures";
       license = stdenv.lib.licenses.mit;
     }) {};
  "foldl" = callPackage
    ({ mkDerivation, base, bytestring, comonad, containers, mwc-random
     , primitive, profunctors, text, transformers, vector
     }:
     mkDerivation {
       pname = "foldl";
       version = "1.1.6";
       sha256 = "0rkpynfhg5i24qbyld39ifnrimy79vpfr0dv8rx4zhlqjyi8ii5a";
       libraryHaskellDepends = [
         base bytestring comonad containers mwc-random primitive profunctors
         text transformers vector
       ];
       description = "Composable, streaming, and efficient left folds";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "force-layout" = callPackage
    ({ mkDerivation, base, containers, data-default-class, lens, linear
     }:
     mkDerivation {
       pname = "force-layout";
       version = "0.4.0.3";
       sha256 = "11z4qjhkvfk0kvrinh2s4di1wj1lk0mb17qb11786bmdgjjxjs3j";
       libraryHaskellDepends = [
         base containers data-default-class lens linear
       ];
       description = "Simple force-directed layout";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "forecast-io" = callPackage
    ({ mkDerivation, aeson, base, text }:
     mkDerivation {
       pname = "forecast-io";
       version = "0.2.0.0";
       sha256 = "17wsqrq1zq1p80gnrfsvks5bhickfqj5mh2prbzzkzb3s28l1mby";
       libraryHaskellDepends = [ aeson base text ];
       homepage = "https://github.com/stormont/forecast-io";
       description = "A Haskell library for working with forecast.io data.";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "foreign-store" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "foreign-store";
       version = "0.2";
       sha256 = "1p436dn6l5zjzizcsj0hn10s2n907gr7c8y89i4sm3h69lhqlw86";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/chrisdone/foreign-store";
       description = "Store a stable pointer in a foreign context to be retrieved later";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "formatting" = callPackage
    ({ mkDerivation, base, clock, old-locale, scientific, text
     , text-format, time
     }:
     mkDerivation {
       pname = "formatting";
       version = "6.2.2";
       sha256 = "04ilp8zkzkab3x4v5kczpa58k5jr67yg9fq4prj7xrj81kixgp2g";
       libraryHaskellDepends = [
         base clock old-locale scientific text text-format time
       ];
       description = "Combinator-based type-safe formatting (like printf() or FORMAT)";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "free" = callPackage
    ({ mkDerivation, base, bifunctors, comonad, containers
     , distributive, exceptions, mtl, prelude-extras, profunctors
     , semigroupoids, semigroups, template-haskell, transformers
     , transformers-compat
     }:
     mkDerivation {
       pname = "free";
       version = "4.12.4";
       sha256 = "1147s393442xf4gkpbq0rd1p286vmykgx85mxhk5d1c7wfm4bzn9";
       libraryHaskellDepends = [
         base bifunctors comonad containers distributive exceptions mtl
         prelude-extras profunctors semigroupoids semigroups
         template-haskell transformers transformers-compat
       ];
       homepage = "http://github.com/ekmett/free/";
       description = "Monads for free";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "freenect" = callPackage
    ({ mkDerivation, base, freenect, freenect_sync, libfreenect, vector
     }:
     mkDerivation {
       pname = "freenect";
       version = "1.2.1";
       sha256 = "0n87sxf12kkpdlhdaw4pcb3dfl1qc3w7j5hh9crrchy0isasm9zw";
       libraryHaskellDepends = [ base vector ];
       librarySystemDepends = [ freenect freenect_sync ];
       libraryPkgconfigDepends = [ libfreenect ];
       homepage = "https://github.com/chrisdone/freenect";
       description = "Interface to the Kinect device";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) freenect; freenect_sync = null;
         libfreenect = null;};
  "frisby" = callPackage
    ({ mkDerivation, array, base, containers, mtl }:
     mkDerivation {
       pname = "frisby";
       version = "0.2";
       sha256 = "0isj9p7j33va1a4q78vnq32j9jdbjww596rxja235z4whicraf53";
       revision = "1";
       editedCabalFile = "1ip1bykcrnqzfjbsi4gfj59lc24k3kvyn949ryczpqshlpgnbnqj";
       libraryHaskellDepends = [ array base containers mtl ];
       homepage = "http://repetae.net/computer/frisby/";
       description = "Linear time composable parser for PEG grammars";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "frontmatter" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, hspec, QuickCheck
     , text, yaml
     }:
     mkDerivation {
       pname = "frontmatter";
       version = "0.1.0.2";
       sha256 = "17dr2g1rywai80hx2v51ljwjpsn6m1jgg6lb4gq9fwq9snq9gsv6";
       libraryHaskellDepends = [ attoparsec base bytestring yaml ];
       testHaskellDepends = [
         attoparsec base bytestring hspec QuickCheck text yaml
       ];
       homepage = "https://github.com/yamadapc/haskell-frontmatter";
       description = "Parses frontmatter as used in Jekyll markdown files";
       license = stdenv.lib.licenses.mit;
     }) {};
  "fsnotify" = callPackage
    ({ mkDerivation, async, base, containers, directory, filepath
     , hinotify, tasty, tasty-hunit, temporary-rc, text, time
     , unix-compat
     }:
     mkDerivation {
       pname = "fsnotify";
       version = "0.2.1";
       sha256 = "0asl313a52qx2w6dw25g845683xsl840bwjh118nkwi5v1xipkzb";
       libraryHaskellDepends = [
         async base containers directory filepath hinotify text time
         unix-compat
       ];
       testHaskellDepends = [
         async base directory filepath tasty tasty-hunit temporary-rc
         unix-compat
       ];
       doCheck = false;
       homepage = "https://github.com/haskell-fswatch/hfsnotify";
       description = "Cross platform library for file change notification";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "funcmp" = callPackage
    ({ mkDerivation, base, filepath, process }:
     mkDerivation {
       pname = "funcmp";
       version = "1.8";
       sha256 = "09kmfgl15d71fr5h66j2b0ngw69y8dp41d55lz35nrjxq3l3gz1k";
       revision = "1";
       editedCabalFile = "1fkjmx4mmfmf2y08w7mgw1rp6q6w9zxdj95zfydgxgkmvk9b37c4";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base filepath process ];
       homepage = "https://github.com/peti/funcmp";
       description = "Functional MetaPost";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "fuzzcheck" = callPackage
    ({ mkDerivation, base, hspec, hspec-expectations, HUnit
     , lifted-base, monad-control, QuickCheck, random, transformers
     }:
     mkDerivation {
       pname = "fuzzcheck";
       version = "0.1.1";
       sha256 = "0qfr4f0b50l368b45yzwhqd4g2y1kvfrfj4hr84cdxcwdrwn9mpc";
       libraryHaskellDepends = [
         base lifted-base monad-control QuickCheck random transformers
       ];
       testHaskellDepends = [
         base hspec hspec-expectations HUnit QuickCheck
       ];
       homepage = "https://github.com/fpco/fuzzcheck";
       description = "A simple checker for stress testing monadic code";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "gd" = callPackage
    ({ mkDerivation, base, bytestring, expat, fontconfig, freetype, gd
     , libjpeg, libpng, zlib
     }:
     mkDerivation {
       pname = "gd";
       version = "3000.7.3";
       sha256 = "1dkzv6zs00qi0jmblkw05ywizc8y3baz7pnz0lcqn1cs1mhcpbhl";
       libraryHaskellDepends = [ base bytestring ];
       librarySystemDepends = [
         expat fontconfig freetype gd libjpeg libpng zlib
       ];
       description = "A Haskell binding to a subset of the GD graphics library";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) expat; inherit (pkgs) fontconfig;
         inherit (pkgs) freetype; inherit (pkgs) gd; inherit (pkgs) libjpeg;
         inherit (pkgs) libpng; inherit (pkgs) zlib;};
  "generic-aeson" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, generic-deriving, mtl
     , tagged, text, unordered-containers, vector
     }:
     mkDerivation {
       pname = "generic-aeson";
       version = "0.2.0.8";
       sha256 = "1jymvq8i9vyp4b6bxn0siyn0mxzs1r9mlwdhg3kckdlyidjglafy";
       revision = "3";
       editedCabalFile = "0qr21mvknnkhnmg7p80vhcxa8xvy2b5zcc8b8zzhp6kq07j755gd";
       libraryHaskellDepends = [
         aeson attoparsec base generic-deriving mtl tagged text
         unordered-containers vector
       ];
       description = "Derivation of Aeson instances using GHC generics";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "generic-deriving" = callPackage
    ({ mkDerivation, base, containers, ghc-prim, template-haskell }:
     mkDerivation {
       pname = "generic-deriving";
       version = "1.9.0";
       sha256 = "1mxzlm8rdjp1yddkfah6lv0rxy9v0gpd01bcfclsx1j5mrcmr07i";
       revision = "1";
       editedCabalFile = "1vv9wy3v6l1iry4p2110m18w2r8d89p9bxbs791wcm6vd9m3ph7z";
       libraryHaskellDepends = [
         base containers ghc-prim template-haskell
       ];
       homepage = "https://github.com/dreixel/generic-deriving";
       description = "Generic programming library for generalised deriving";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "generic-trie" = callPackage
    ({ mkDerivation, base, containers, transformers }:
     mkDerivation {
       pname = "generic-trie";
       version = "0.3.0.1";
       sha256 = "09f4rasw8q2yi7dakcr21igy02vhgiasylw6lzsz225kl58vjwz7";
       libraryHaskellDepends = [ base containers transformers ];
       homepage = "http://github.com/glguy/tries";
       description = "A map, where the keys may be complex structured data";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "generic-xmlpickler" = callPackage
    ({ mkDerivation, base, generic-deriving, hxt, hxt-pickle-utils
     , tasty, tasty-hunit, tasty-th, text
     }:
     mkDerivation {
       pname = "generic-xmlpickler";
       version = "0.1.0.5";
       sha256 = "1brnlgnbys811qy64aps2j03ks2p0rkihaqzaszfwl80cpsn05ym";
       revision = "6";
       editedCabalFile = "0jc2rnh8kyzay8ny59ahqb9q6vmp7si4aps1a42la79735078x51";
       libraryHaskellDepends = [ base generic-deriving hxt text ];
       testHaskellDepends = [
         base hxt hxt-pickle-utils tasty tasty-hunit tasty-th
       ];
       homepage = "http://github.com/silkapp/generic-xmlpickler";
       description = "Generic generation of HXT XmlPickler instances using GHC Generics";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "generics-eot" = callPackage
    ({ mkDerivation, base, directory, doctest, filepath, hspec
     , interpolate, markdown-unlit, mockery, QuickCheck, shake
     }:
     mkDerivation {
       pname = "generics-eot";
       version = "0.2.1";
       sha256 = "10in9js5zknvkbx22d42kh5jdc2qf571dnx92r5rnz8rs03isa0l";
       libraryHaskellDepends = [ base markdown-unlit ];
       testHaskellDepends = [
         base directory doctest filepath hspec interpolate markdown-unlit
         mockery QuickCheck shake
       ];
       homepage = "https://github.com/soenkehahn/generics-eot#readme";
       description = "A library for generic programming that aims to be easy to understand";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "generics-sop" = callPackage
    ({ mkDerivation, base, ghc-prim, template-haskell }:
     mkDerivation {
       pname = "generics-sop";
       version = "0.2.1.0";
       sha256 = "0cczx9lqlc15gkhspgf1yizr13kidwsjj7c53sbkb7ahdh7dvz7m";
       libraryHaskellDepends = [ base ghc-prim template-haskell ];
       testHaskellDepends = [ base ];
       description = "Generic Programming using True Sums of Products";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "geniplate-mirror" = callPackage
    ({ mkDerivation, base, mtl, template-haskell }:
     mkDerivation {
       pname = "geniplate-mirror";
       version = "0.7.2";
       sha256 = "10lha0cji2sjwjiva7k0321x8x50x18dmrkqjdriczx509kpd5r7";
       libraryHaskellDepends = [ base mtl template-haskell ];
       homepage = "https://github.com/danr/geniplate";
       description = "Use Template Haskell to generate Uniplate-like functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "getopt-generics" = callPackage
    ({ mkDerivation, base, base-compat, base-orphans, filepath
     , generics-sop, hspec, QuickCheck, safe, silently, tagged
     }:
     mkDerivation {
       pname = "getopt-generics";
       version = "0.13";
       sha256 = "0jm3m9vl7nfyh4zlyvmd7vw4gcjli4dqp27fja2dv7qcr96ki4yi";
       libraryHaskellDepends = [
         base base-compat base-orphans generics-sop tagged
       ];
       testHaskellDepends = [
         base base-compat base-orphans filepath generics-sop hspec
         QuickCheck safe silently tagged
       ];
       doCheck = false;
       homepage = "https://github.com/soenkehahn/getopt-generics#readme";
       description = "Create command line interfaces with ease";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ghc-events" = callPackage
    ({ mkDerivation, array, base, binary, bytestring, containers, mtl
     }:
     mkDerivation {
       pname = "ghc-events";
       version = "0.4.4.0";
       sha256 = "0vagr03rivl5ymcnkxnzb1x5b4cr6xknnkwmfliqfrc1hhjgcaxb";
       revision = "1";
       editedCabalFile = "0rfwiy10mjl4vyv3gjsi6chz34ra4qicq3px2nm5vrzmlalla8d5";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         array base binary bytestring containers mtl
       ];
       executableHaskellDepends = [
         array base binary bytestring containers mtl
       ];
       testHaskellDepends = [
         array base binary bytestring containers mtl
       ];
       doCheck = false;
       description = "Library and tool for parsing .eventlog files from GHC";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ghc-exactprint" = callPackage
    ({ mkDerivation, base, containers, directory, filemanip, filepath
     , free, ghc, ghc-paths, HUnit, mtl, silently, syb
     }:
     mkDerivation {
       pname = "ghc-exactprint";
       version = "0.5.0.1";
       sha256 = "1s1wsjf65wf61jjrb47hd3s2slw03wj7yl4iiaj9f28xa8ny3npc";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base containers directory filepath free ghc ghc-paths mtl syb
       ];
       testHaskellDepends = [
         base containers directory filemanip filepath ghc ghc-paths HUnit
         mtl silently syb
       ];
       description = "ExactPrint for GHC";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ghc-heap-view" = callPackage
    ({ mkDerivation, base, binary, bytestring, containers, deepseq, ghc
     , template-haskell, transformers
     }:
     mkDerivation {
       pname = "ghc-heap-view";
       version = "0.5.4";
       sha256 = "02n414m1lb6lilrkmjss2pd1s7hd4lf2sga7ql2ahib69kygzhx1";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base binary bytestring containers ghc template-haskell transformers
       ];
       testHaskellDepends = [ base deepseq ];
       description = "Extract the heap representation of Haskell values and thunks";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ghc-mod" = callPackage
    ({ mkDerivation, base, binary, bytestring, cabal-helper, containers
     , deepseq, directory, djinn-ghc, doctest, extra, fclabels, filepath
     , ghc, ghc-paths, ghc-syb-utils, haskell-src-exts, hlint, hspec
     , monad-control, monad-journal, mtl, old-time, optparse-applicative
     , pipes, pretty, process, safe, split, syb, temporary, text, time
     , transformers, transformers-base
     }:
     mkDerivation {
       pname = "ghc-mod";
       version = "5.5.0.0";
       sha256 = "0c8dwxfny7sq80p8ycj97qrgr5f0rxl8kcpgxga5r1qyakryhnyh";
       revision = "1";
       editedCabalFile = "0kljrsq703bccqzv2r94sl0g58canp3pz5a9c6fcpd6ph2r2kfp3";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base binary bytestring cabal-helper containers deepseq directory
         djinn-ghc extra fclabels filepath ghc ghc-paths ghc-syb-utils
         haskell-src-exts hlint monad-control monad-journal mtl old-time
         pipes pretty process safe split syb temporary text time
         transformers transformers-base
       ];
       executableHaskellDepends = [
         base binary deepseq directory fclabels filepath ghc monad-control
         mtl old-time optparse-applicative pretty process split time
       ];
       testHaskellDepends = [ base doctest hspec ];
       doCheck = false;
       homepage = "http://www.mew.org/~kazu/proj/ghc-mod/";
       description = "Happy Haskell Programming";
       license = stdenv.lib.licenses.agpl3;
     }) {};
  "ghc-mtl" = callPackage
    ({ mkDerivation, base, exceptions, extensible-exceptions, ghc, mtl
     }:
     mkDerivation {
       pname = "ghc-mtl";
       version = "1.2.1.0";
       sha256 = "0h6r6gip9nsjlsq88wj105hhqliy7ac2dmmndsfzbjz07b03cklk";
       libraryHaskellDepends = [
         base exceptions extensible-exceptions ghc mtl
       ];
       homepage = "http://hub.darcs.net/jcpetruzza/ghc-mtl";
       description = "An mtl compatible version of the Ghc-Api monads and monad-transformers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ghc-parser" = callPackage
    ({ mkDerivation, base, cpphs, ghc, happy }:
     mkDerivation {
       pname = "ghc-parser";
       version = "0.1.8.0";
       sha256 = "0ljizdzrgn64s70li3yp273ib323jkpflcf305zfgia277vrskj9";
       libraryHaskellDepends = [ base ghc ];
       libraryToolDepends = [ cpphs happy ];
       homepage = "https://github.com/gibiansky/IHaskell";
       description = "Haskell source parser from GHC";
       license = stdenv.lib.licenses.mit;
     }) {};
  "ghc-paths" = callPackage
    ({ mkDerivation, base, Cabal, directory }:
     mkDerivation {
       pname = "ghc-paths";
       version = "0.1.0.9";
       sha256 = "0ibrr1dxa35xx20cpp8jzgfak1rdmy344dfwq4vlq013c6w8z9mg";
       revision = "2";
       editedCabalFile = "1gs6biqbcabgmrwhc1bq1bdaxdwwh26v4mpvj5c7cfyigc64gwyk";
       setupHaskellDepends = [ base Cabal directory ];
       libraryHaskellDepends = [ base ];
       description = "Knowledge of GHC's installation directories";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ghc-session" = callPackage
    ({ mkDerivation, base, exceptions, ghc, ghc-mtl, ghc-paths
     , transformers, transformers-compat
     }:
     mkDerivation {
       pname = "ghc-session";
       version = "0.1.2.1";
       sha256 = "02vd3r83zck60lzj156w5v11xzah3s5ql6ip5p715z747zx1grf1";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base exceptions ghc ghc-mtl ghc-paths transformers
         transformers-compat
       ];
       executableHaskellDepends = [ base transformers ];
       homepage = "http://github.com/pmlodawski/ghc-session";
       description = "Simplified GHC API";
       license = stdenv.lib.licenses.mit;
     }) {};
  "ghc-syb-utils" = callPackage
    ({ mkDerivation, base, ghc, syb }:
     mkDerivation {
       pname = "ghc-syb-utils";
       version = "0.2.3";
       sha256 = "0rxwdivpcppwzbqglbrz8rm9f4g1gmba9ij7p7aj3di9x37kzxky";
       libraryHaskellDepends = [ base ghc syb ];
       homepage = "http://github.com/nominolo/ghc-syb";
       description = "Scrap Your Boilerplate utilities for the GHC API";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ghc-tcplugins-extra" = callPackage
    ({ mkDerivation, base, ghc }:
     mkDerivation {
       pname = "ghc-tcplugins-extra";
       version = "0.2";
       sha256 = "0x3kd39jlhkgx3p2hm0a1wy571fis529jn2iz0jkw3mj6ikjnm7k";
       libraryHaskellDepends = [ base ghc ];
       homepage = "http://github.com/clash-lang/ghc-tcplugins-extra";
       description = "Utilities for writing GHC type-checker plugins";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "ghc-typelits-extra" = callPackage
    ({ mkDerivation, base, ghc, ghc-tcplugins-extra
     , ghc-typelits-natnormalise, tasty, tasty-hunit
     }:
     mkDerivation {
       pname = "ghc-typelits-extra";
       version = "0.1.1";
       sha256 = "07hwd59rhzv7wch1al4jw926d97q5mn2mbvp2a4bh2y0l8h7jwp9";
       libraryHaskellDepends = [ base ghc ghc-tcplugins-extra ];
       testHaskellDepends = [
         base ghc-typelits-natnormalise tasty tasty-hunit
       ];
       homepage = "http://www.clash-lang.org/";
       description = "Additional type-level operations on GHC.TypeLits.Nat";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "ghc-typelits-natnormalise" = callPackage
    ({ mkDerivation, base, ghc, ghc-tcplugins-extra, tasty, tasty-hunit
     }:
     mkDerivation {
       pname = "ghc-typelits-natnormalise";
       version = "0.4.1";
       sha256 = "1xss1v76vwqrzpm0jb6bbm4arl4g3wa9ff4qyr7jbadhkq2xgcfp";
       libraryHaskellDepends = [ base ghc ghc-tcplugins-extra ];
       testHaskellDepends = [ base tasty tasty-hunit ];
       homepage = "http://www.clash-lang.org/";
       description = "GHC typechecker plugin for types of kind GHC.TypeLits.Nat";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "ghcid" = callPackage
    ({ mkDerivation, ansi-terminal, base, cmdargs, containers
     , directory, extra, filepath, fsnotify, process, tasty, tasty-hunit
     , terminal-size, time
     }:
     mkDerivation {
       pname = "ghcid";
       version = "0.5.1";
       sha256 = "0lv3cccjscik6kffbammw6sp6cbhb3nnv97xp25428gi06jvzdvz";
       revision = "1";
       editedCabalFile = "0namf94wpqn3s5xmzy5fqbyrya69lk17lmwz79c2j6s9rykbayjq";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base cmdargs directory extra filepath process terminal-size time
       ];
       executableHaskellDepends = [
         ansi-terminal base cmdargs containers directory extra filepath
         fsnotify process terminal-size time
       ];
       testHaskellDepends = [
         ansi-terminal base cmdargs containers directory extra filepath
         fsnotify process tasty tasty-hunit terminal-size time
       ];
       doCheck = false;
       homepage = "https://github.com/ndmitchell/ghcid#readme";
       description = "GHCi based bare bones IDE";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "gio" = callPackage
    ({ mkDerivation, array, base, bytestring, containers, glib
     , gtk2hs-buildtools, mtl, system-glib
     }:
     mkDerivation {
       pname = "gio";
       version = "0.13.1.1";
       sha256 = "0fqig1a9385gm1g7hdgpmmayj3zq0fj1smpa2xcjrw9vnj3rnkfh";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         array base bytestring containers glib mtl
       ];
       libraryPkgconfigDepends = [ system-glib ];
       libraryToolDepends = [ gtk2hs-buildtools ];
       homepage = "http://projects.haskell.org/gtk2hs/";
       description = "Binding to GIO";
       license = stdenv.lib.licenses.lgpl21;
     }) {system-glib = pkgs.glib;};
  "gipeda" = callPackage
    ({ mkDerivation, aeson, base, bytestring, cassava, containers
     , directory, extra, filepath, gitlib, gitlib-libgit2, scientific
     , shake, split, tagged, text, unordered-containers, vector, yaml
     }:
     mkDerivation {
       pname = "gipeda";
       version = "0.2.0.1";
       sha256 = "0bp1yzh73lxfxr7wf5jmaw77jfr109hsm5vajpj5qarrlw36sblb";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         aeson base bytestring cassava containers directory extra filepath
         gitlib gitlib-libgit2 scientific shake split tagged text
         unordered-containers vector yaml
       ];
       doHaddock = false;
       homepage = "https://github.com/nomeata/gipeda";
       description = "Git Performance Dashboard";
       license = stdenv.lib.licenses.mit;
     }) {};
  "git-annex" = callPackage
    ({ mkDerivation, aeson, async, aws, base, blaze-builder
     , bloomfilter, bup, byteable, bytestring, case-insensitive
     , clientsession, concurrent-output, conduit, conduit-extra
     , containers, crypto-api, cryptonite, curl, data-default, DAV, dbus
     , directory, dlist, dns, edit-distance, esqueleto, exceptions
     , fdo-notify, feed, filepath, git, gnupg, gnutls, hinotify
     , hslogger, http-client, http-conduit, http-types, IfElse, json
     , lsof, MissingH, monad-control, monad-logger, mtl, network
     , network-info, network-multicast, network-protocol-xmpp
     , network-uri, old-locale, openssh, optparse-applicative
     , path-pieces, perl, persistent, persistent-sqlite
     , persistent-template, process, QuickCheck, random, regex-tdfa
     , resourcet, rsync, SafeSemaphore, sandi, securemem, shakespeare
     , stm, tasty, tasty-hunit, tasty-quickcheck, tasty-rerun
     , template-haskell, text, time, torrent, transformers, unix
     , unix-compat, utf8-string, uuid, wai, wai-extra, warp, warp-tls
     , wget, which, xml-types, yesod, yesod-core, yesod-default
     , yesod-form, yesod-static
     }:
     mkDerivation {
       pname = "git-annex";
       version = "6.20160114";
       sha256 = "1081a2vn3mw2ilkjnfk7w3yxnm5aqr0hgdk0c2lbk0x5krgic7b7";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         aeson async aws base blaze-builder bloomfilter byteable bytestring
         case-insensitive clientsession concurrent-output conduit
         conduit-extra containers crypto-api cryptonite data-default DAV
         dbus directory dlist dns edit-distance esqueleto exceptions
         fdo-notify feed filepath gnutls hinotify hslogger http-client
         http-conduit http-types IfElse json MissingH monad-control
         monad-logger mtl network network-info network-multicast
         network-protocol-xmpp network-uri old-locale optparse-applicative
         path-pieces persistent persistent-sqlite persistent-template
         process QuickCheck random regex-tdfa resourcet SafeSemaphore sandi
         securemem shakespeare stm tasty tasty-hunit tasty-quickcheck
         tasty-rerun template-haskell text time torrent transformers unix
         unix-compat utf8-string uuid wai wai-extra warp warp-tls xml-types
         yesod yesod-core yesod-default yesod-form yesod-static
       ];
       executableSystemDepends = [
         bup curl git gnupg lsof openssh perl rsync wget which
       ];
       doHaddock = false;
       preConfigure = "export HOME=$TEMPDIR; patchShebangs .";
       installPhase = "make PREFIX=$out BUILDER=: install";
       checkPhase = ''
         ln -sf dist/build/git-annex/git-annex git-annex
         ln -sf git-annex git-annex-shell
         export PATH+=":$PWD"
         git-annex test
       '';
       enableSharedExecutables = false;
       homepage = "http://git-annex.branchable.com/";
       description = "manage files with git, without checking their contents into git";
       license = stdenv.lib.licenses.gpl3;
       platforms = [ "i686-linux" "x86_64-linux" ];
     }) {inherit (pkgs) bup; inherit (pkgs) curl; inherit (pkgs) git;
         inherit (pkgs) gnupg; inherit (pkgs) lsof; inherit (pkgs) openssh;
         inherit (pkgs) perl; inherit (pkgs) rsync; inherit (pkgs) wget;
         inherit (pkgs) which;};
  "git-fmt" = callPackage
    ({ mkDerivation, base, exceptions, extra, fast-logger, filepath
     , monad-logger, monad-parallel, mtl, omnifmt, optparse-applicative
     , pipes, pipes-concurrency, process, temporary, text, time
     }:
     mkDerivation {
       pname = "git-fmt";
       version = "0.4.1.0";
       sha256 = "0zg9g6w1axp90836g3fniq2a1p9m59a05h7ayi81csibz5whzhd9";
       revision = "1";
       editedCabalFile = "1abzdz0yyinniwbq9gbpc77mbisqgjj9h9jsmk1177dv2nbrglcn";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         base exceptions extra fast-logger filepath monad-logger
         monad-parallel mtl omnifmt optparse-applicative pipes
         pipes-concurrency process temporary text time
       ];
       doHaddock = false;
       homepage = "https://github.com/hjwylde/git-fmt";
       description = "Custom git command for formatting code";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "github" = callPackage
    ({ mkDerivation, aeson, aeson-compat, attoparsec, base, base-compat
     , base16-bytestring, binary, binary-orphans, byteable, bytestring
     , containers, cryptohash, deepseq, deepseq-generics, exceptions
     , file-embed, hashable, hspec, http-client, http-client-tls
     , http-link-header, http-types, iso8601-time, mtl, network-uri
     , semigroups, text, time, transformers, transformers-compat
     , unordered-containers, vector, vector-instances
     }:
     mkDerivation {
       pname = "github";
       version = "0.14.1";
       sha256 = "0zgs17s9hmla6yz4wlq5f7xpmz89cf8i3i1dvc8a3r2mg2azimgw";
       revision = "1";
       editedCabalFile = "111560ggn1ydpk24fz5i1q1hqj41b9q6yj427s9m2i7bg72w4gx0";
       libraryHaskellDepends = [
         aeson aeson-compat attoparsec base base-compat base16-bytestring
         binary binary-orphans byteable bytestring containers cryptohash
         deepseq deepseq-generics exceptions hashable http-client
         http-client-tls http-link-header http-types iso8601-time mtl
         network-uri semigroups text time transformers transformers-compat
         unordered-containers vector vector-instances
       ];
       testHaskellDepends = [
         aeson-compat base base-compat file-embed hspec unordered-containers
         vector
       ];
       homepage = "https://github.com/phadej/github";
       description = "Access to the GitHub API, v3";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "github-types" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, base, hspec, hspec-smallcheck
     , http-conduit, smallcheck, text, time, unordered-containers
     , vector
     }:
     mkDerivation {
       pname = "github-types";
       version = "0.2.0";
       sha256 = "1n74krvhnxids6in717hs9jrqq2vkvlcpd8v09jdqv87ykgpadiz";
       libraryHaskellDepends = [ aeson base text time ];
       testHaskellDepends = [
         aeson aeson-pretty base hspec hspec-smallcheck http-conduit
         smallcheck text time unordered-containers vector
       ];
       description = "Type definitions for objects used by the GitHub v3 API";
       license = "unknown";
     }) {};
  "github-webhook-handler" = callPackage
    ({ mkDerivation, aeson, base, bytestring, cryptohash, github-types
     , text, transformers, uuid, vector
     }:
     mkDerivation {
       pname = "github-webhook-handler";
       version = "0.0.7";
       sha256 = "1q6cz12xs3g4g2yjn95fqjmainws2nj5mc1kp7lp5zl3y9yz63xq";
       libraryHaskellDepends = [
         aeson base bytestring cryptohash github-types text transformers
         uuid vector
       ];
       description = "GitHub WebHook Handler";
       license = stdenv.lib.licenses.mit;
     }) {};
  "github-webhook-handler-snap" = callPackage
    ({ mkDerivation, base, bytestring, case-insensitive, github-types
     , github-webhook-handler, snap-core, uuid
     }:
     mkDerivation {
       pname = "github-webhook-handler-snap";
       version = "0.0.6";
       sha256 = "03m812ka1y49d7p63b4i6x6z9g61lha7ncpd8yrr5522xcdbcqpc";
       libraryHaskellDepends = [
         base bytestring case-insensitive github-types
         github-webhook-handler snap-core uuid
       ];
       description = "GitHub WebHook Handler implementation for Snap";
       license = stdenv.lib.licenses.mit;
     }) {};
  "gitlib" = callPackage
    ({ mkDerivation, base, base16-bytestring, bytestring, conduit
     , conduit-combinators, containers, directory, exceptions, filepath
     , hashable, lifted-async, lifted-base, monad-control, mtl
     , resourcet, semigroups, tagged, text, time, transformers, unix
     , unordered-containers
     }:
     mkDerivation {
       pname = "gitlib";
       version = "3.1.1";
       sha256 = "1vwmyfmqlly351jq9pgjhcfhnxvrhzkd4lfq7qpsa37vca5pas6x";
       libraryHaskellDepends = [
         base base16-bytestring bytestring conduit conduit-combinators
         containers directory exceptions filepath hashable lifted-async
         lifted-base monad-control mtl resourcet semigroups tagged text time
         transformers unix unordered-containers
       ];
       description = "API library for working with Git repositories";
       license = stdenv.lib.licenses.mit;
     }) {};
  "gitlib-libgit2" = callPackage
    ({ mkDerivation, base, bytestring, conduit, conduit-combinators
     , containers, directory, exceptions, fast-logger, filepath, gitlib
     , gitlib-test, hlibgit2, hspec, hspec-expectations, HUnit
     , lifted-async, lifted-base, mmorph, monad-control, monad-loops
     , mtl, resourcet, stm, stm-conduit, tagged, template-haskell, text
     , text-icu, time, transformers, transformers-base
     }:
     mkDerivation {
       pname = "gitlib-libgit2";
       version = "3.1.1";
       sha256 = "1fv8r2w0fd9m7chrccmf5kw0pr2v0k2r2l0d782galdvq7mhca7w";
       revision = "1";
       editedCabalFile = "0v510c4sd6zwwf6mbc6gfv5sin91ckw4v6c844wrfksi9gdq3shm";
       libraryHaskellDepends = [
         base bytestring conduit conduit-combinators containers directory
         exceptions fast-logger filepath gitlib hlibgit2 lifted-async
         lifted-base mmorph monad-control monad-loops mtl resourcet stm
         stm-conduit tagged template-haskell text text-icu time transformers
         transformers-base
       ];
       testHaskellDepends = [
         base exceptions gitlib gitlib-test hspec hspec-expectations HUnit
         transformers
       ];
       description = "Libgit2 backend for gitlib";
       license = stdenv.lib.licenses.mit;
     }) {};
  "gitlib-test" = callPackage
    ({ mkDerivation, base, bytestring, conduit, conduit-combinators
     , exceptions, gitlib, hspec, hspec-expectations, HUnit
     , monad-control, tagged, text, time, transformers
     }:
     mkDerivation {
       pname = "gitlib-test";
       version = "3.1.0.3";
       sha256 = "07r970d6m15gri6xim71kl2vvml85jlb0vc51zb67gfsd6iby2py";
       libraryHaskellDepends = [
         base bytestring conduit conduit-combinators exceptions gitlib hspec
         hspec-expectations HUnit monad-control tagged text time
         transformers
       ];
       description = "Test library for confirming gitlib backend compliance";
       license = stdenv.lib.licenses.mit;
     }) {};
  "gitrev" = callPackage
    ({ mkDerivation, base, directory, filepath, process
     , template-haskell
     }:
     mkDerivation {
       pname = "gitrev";
       version = "1.2.0";
       sha256 = "00ii00j5bnxnhnmzcsbqfin8kdj6n9ll7akg3j8apajwvd7f74a3";
       libraryHaskellDepends = [
         base directory filepath process template-haskell
       ];
       homepage = "https://github.com/acfoltzer/gitrev";
       description = "Compile git revision info into Haskell projects";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "gitson" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, base, bytestring, criterion
     , directory, doctest, errors, filepath, flock, Glob, hspec
     , monad-control, process, random, transformers
     }:
     mkDerivation {
       pname = "gitson";
       version = "0.5.1";
       sha256 = "175j2pkc3cb37h3vilb99i782as9yg68nacs2ysnp1m7hrxvvyjy";
       libraryHaskellDepends = [
         aeson aeson-pretty base bytestring directory errors filepath flock
         monad-control process transformers
       ];
       testHaskellDepends = [
         aeson base directory doctest Glob hspec process transformers
       ];
       benchmarkHaskellDepends = [
         aeson base criterion directory random transformers
       ];
       doCheck = false;
       homepage = "https://github.com/myfreeweb/gitson";
       description = "A document store library for Git + JSON";
       license = "unknown";
     }) {};
  "gl" = callPackage
    ({ mkDerivation, base, containers, directory, filepath, fixed, half
     , hxt, mesa, split, transformers
     }:
     mkDerivation {
       pname = "gl";
       version = "0.7.8.1";
       sha256 = "16i1lrcpklgxr6xd4750shp0x42999maxyay55brhj1jbpkjwygd";
       libraryHaskellDepends = [
         base containers directory filepath fixed half hxt split
         transformers
       ];
       librarySystemDepends = [ mesa ];
       description = "Complete OpenGL raw bindings";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) mesa;};
  "glib" = callPackage
    ({ mkDerivation, base, bytestring, containers, glib
     , gtk2hs-buildtools, text, utf8-string
     }:
     mkDerivation {
       pname = "glib";
       version = "0.13.2.2";
       sha256 = "0zs9w11fqwjihfs2j2fvsia7h19anaiivfn62kjphmqrmh86gg0n";
       libraryHaskellDepends = [
         base bytestring containers text utf8-string
       ];
       libraryPkgconfigDepends = [ glib ];
       libraryToolDepends = [ gtk2hs-buildtools ];
       homepage = "http://projects.haskell.org/gtk2hs/";
       description = "Binding to the GLIB library for Gtk2Hs";
       license = stdenv.lib.licenses.lgpl21;
     }) {inherit (pkgs) glib;};
  "gnuidn" = callPackage
    ({ mkDerivation, base, bytestring, c2hs, chell, chell-quickcheck
     , libidn, QuickCheck, text
     }:
     mkDerivation {
       pname = "gnuidn";
       version = "0.2.2";
       sha256 = "0vxrcp9xz5gsvx60k12991zn5c9nk3fgg0yw7dixbsjcfqgnnd31";
       libraryHaskellDepends = [ base bytestring text ];
       librarySystemDepends = [ libidn ];
       libraryPkgconfigDepends = [ libidn ];
       libraryToolDepends = [ c2hs ];
       testHaskellDepends = [
         base bytestring chell chell-quickcheck QuickCheck text
       ];
       testSystemDepends = [ libidn ];
       testPkgconfigDepends = [ libidn ];
       testToolDepends = [ c2hs ];
       homepage = "https://john-millikin.com/software/haskell-gnuidn/";
       description = "Bindings for GNU IDN";
       license = stdenv.lib.licenses.gpl3;
     }) {inherit (pkgs) libidn;};
  "gnutls" = callPackage
    ({ mkDerivation, base, bytestring, gnutls, monads-tf, transformers
     }:
     mkDerivation {
       pname = "gnutls";
       version = "0.2";
       sha256 = "1c5pm0d80wpgh2bkcgbvmc72agf89h8ghfnrn1m1x3fljbgzvrn0";
       libraryHaskellDepends = [ base bytestring monads-tf transformers ];
       librarySystemDepends = [ gnutls ];
       libraryPkgconfigDepends = [ gnutls ];
       homepage = "https://john-millikin.com/software/haskell-gnutls/";
       description = "Bindings for GNU libgnutls";
       license = stdenv.lib.licenses.gpl3;
     }) {inherit (pkgs) gnutls;};
  "google-cloud" = callPackage
    ({ mkDerivation, aeson, base, bytestring, http-client
     , http-client-tls, http-types, mtl, random, scientific, stm, text
     , time, unordered-containers
     }:
     mkDerivation {
       pname = "google-cloud";
       version = "0.0.3";
       sha256 = "0pv5p10nwq66rivg5lfhyj2dqnvkmq5cw91m8lfzav2lphk20ihn";
       libraryHaskellDepends = [
         aeson base bytestring http-client http-client-tls http-types mtl
         random scientific stm text time unordered-containers
       ];
       description = "Client for the Google Cloud APIs";
       license = stdenv.lib.licenses.mit;
     }) {};
  "google-translate" = callPackage
    ({ mkDerivation, aeson, base, bytestring, either, servant
     , servant-client, text
     }:
     mkDerivation {
       pname = "google-translate";
       version = "0.1.1.2";
       sha256 = "1p2w5hb1rf362rip2c50ssjanixz2mdqcj2f18wkifg69zwhjpyg";
       libraryHaskellDepends = [
         aeson base bytestring either servant servant-client text
       ];
       description = "Google Translate API bindings";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "graph-core" = callPackage
    ({ mkDerivation, base, containers, deepseq, hashable, HTF, mtl
     , QuickCheck, safe, unordered-containers, vector
     }:
     mkDerivation {
       pname = "graph-core";
       version = "0.2.2.0";
       sha256 = "0czqcdg7w7al7gl339b9l15kn5n79zmdjbic3gn9mblnjb1666r9";
       revision = "1";
       editedCabalFile = "1lymjy5cslc6xcwxv6lmvbi0fi12nba45vn6z576gc7cbw3lycfr";
       libraryHaskellDepends = [
         base containers deepseq hashable mtl QuickCheck safe
         unordered-containers vector
       ];
       testHaskellDepends = [
         base containers deepseq hashable HTF mtl QuickCheck safe
         unordered-containers vector
       ];
       homepage = "https://github.com/factisresearch/graph-core";
       description = "Fast, memory efficient and persistent graph implementation";
       license = stdenv.lib.licenses.mit;
     }) {};
  "graph-wrapper" = callPackage
    ({ mkDerivation, array, base, containers, deepseq, hspec
     , QuickCheck
     }:
     mkDerivation {
       pname = "graph-wrapper";
       version = "0.2.5.1";
       sha256 = "04z1qbsf1c31r0mhn8bgr8hisffxacq3j61y4fym28idr8zqaqc3";
       libraryHaskellDepends = [ array base containers ];
       testHaskellDepends = [
         array base containers deepseq hspec QuickCheck
       ];
       homepage = "https://github.com/soenkehahn/graph-wrapper";
       description = "A wrapper around the standard Data.Graph with a less awkward interface";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "graphs" = callPackage
    ({ mkDerivation, array, base, containers, transformers
     , transformers-compat, void
     }:
     mkDerivation {
       pname = "graphs";
       version = "0.7";
       sha256 = "0k3g5wrznwxmlmki5z08aj4rnlilz9z83dy0mydwksljc2n5d9pf";
       libraryHaskellDepends = [
         array base containers transformers transformers-compat void
       ];
       homepage = "http://github.com/ekmett/graphs";
       description = "A simple monadic graph library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "graphviz" = callPackage
    ({ mkDerivation, base, bytestring, colour, containers, directory
     , dlist, fgl, fgl-arbitrary, filepath, polyparse, process
     , QuickCheck, temporary, text, transformers, wl-pprint-text
     }:
     mkDerivation {
       pname = "graphviz";
       version = "2999.18.0.2";
       sha256 = "0ry5bjg05c9m0ky85x3wk2fkchv1j1mwqwl4g42v0jg592idrq8c";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring colour containers directory dlist fgl filepath
         polyparse process temporary text transformers wl-pprint-text
       ];
       executableHaskellDepends = [
         base bytestring directory filepath text
       ];
       testHaskellDepends = [
         base containers fgl fgl-arbitrary filepath QuickCheck text
       ];
       homepage = "http://projects.haskell.org/graphviz/";
       description = "Bindings to Graphviz for graph visualisation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "gravatar" = callPackage
    ({ mkDerivation, base, bytestring, data-default, hspec, HTTP
     , pureMD5, text
     }:
     mkDerivation {
       pname = "gravatar";
       version = "0.8.0";
       sha256 = "1mzl08qzwzzhz6bvkz4qnrdnzsgvsmi2lnhzf743yzx4msn00q3g";
       libraryHaskellDepends = [
         base bytestring data-default HTTP pureMD5 text
       ];
       testHaskellDepends = [ base hspec text ];
       description = "Generate Gravatar image URLs";
       license = stdenv.lib.licenses.mit;
     }) {};
  "groom" = callPackage
    ({ mkDerivation, base, haskell-src-exts }:
     mkDerivation {
       pname = "groom";
       version = "0.1.2";
       sha256 = "045hzpnf17rp1ib6q3gcznl9b7ivz5zmv0gh7qfg726kr8i030hf";
       libraryHaskellDepends = [ base haskell-src-exts ];
       description = "Pretty printing for well-behaved Show instances";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "groundhog" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, base64-bytestring
     , blaze-builder, bytestring, containers, monad-control
     , monad-logger, mtl, scientific, text, time, transformers
     , transformers-base
     }:
     mkDerivation {
       pname = "groundhog";
       version = "0.7.0.3";
       sha256 = "0n5c501wfyqcl1iy4017yyxp95kz7mb4lgc0mjjk9si36ixkww9r";
       revision = "2";
       editedCabalFile = "1zzk6q800yl20hdg1wy0224lclj45n88k6aqskc6mbzady3zg8ml";
       libraryHaskellDepends = [
         aeson attoparsec base base64-bytestring blaze-builder bytestring
         containers monad-control monad-logger mtl scientific text time
         transformers transformers-base
       ];
       homepage = "http://github.com/lykahb/groundhog";
       description = "Type-safe datatype-database mapping library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "groundhog-mysql" = callPackage
    ({ mkDerivation, base, bytestring, containers, groundhog
     , monad-control, monad-logger, mysql, mysql-simple, resource-pool
     , text, time, transformers
     }:
     mkDerivation {
       pname = "groundhog-mysql";
       version = "0.7.0.1";
       sha256 = "01pnninva0va0pl9k7mjk2l7fm42978j9x82sj8z7cscshvl327f";
       libraryHaskellDepends = [
         base bytestring containers groundhog monad-control monad-logger
         mysql mysql-simple resource-pool text time transformers
       ];
       description = "MySQL backend for the groundhog library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "groundhog-postgresql" = callPackage
    ({ mkDerivation, attoparsec, base, blaze-builder, bytestring
     , containers, groundhog, monad-control, monad-logger
     , postgresql-libpq, postgresql-simple, resource-pool, text, time
     , transformers
     }:
     mkDerivation {
       pname = "groundhog-postgresql";
       version = "0.7.0.2";
       sha256 = "18wdj51v6qqyqx10lvknr3irhs5qddvh301bx7l9cdcpkk1la81i";
       revision = "1";
       editedCabalFile = "1jlr0vf0rvg3kb39qh0swx2p37r1xqkzqr30j2fxjw6q4ycz8k01";
       libraryHaskellDepends = [
         attoparsec base blaze-builder bytestring containers groundhog
         monad-control monad-logger postgresql-libpq postgresql-simple
         resource-pool text time transformers
       ];
       description = "PostgreSQL backend for the groundhog library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "groundhog-sqlite" = callPackage
    ({ mkDerivation, base, bytestring, containers, direct-sqlite
     , groundhog, monad-control, monad-logger, resource-pool, text
     , transformers, unordered-containers
     }:
     mkDerivation {
       pname = "groundhog-sqlite";
       version = "0.7.0.1";
       sha256 = "0lsm9yfapdpy4nf5bxrbjkvw9nwc82qfmyw1h9l3mc4b8nfp12dy";
       libraryHaskellDepends = [
         base bytestring containers direct-sqlite groundhog monad-control
         monad-logger resource-pool text transformers unordered-containers
       ];
       description = "Sqlite3 backend for the groundhog library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "groundhog-th" = callPackage
    ({ mkDerivation, aeson, base, bytestring, containers, groundhog
     , template-haskell, text, time, unordered-containers, yaml
     }:
     mkDerivation {
       pname = "groundhog-th";
       version = "0.7.0.1";
       sha256 = "15g07rzw2jygzs5p9jflq6l2rjrmf03lj8pprzc4vgwvk04x233h";
       libraryHaskellDepends = [
         aeson base bytestring containers groundhog template-haskell text
         time unordered-containers yaml
       ];
       description = "Type-safe datatype-database mapping library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "grouped-list" = callPackage
    ({ mkDerivation, base, containers, criterion, deepseq, pointed
     , QuickCheck, tasty, tasty-quickcheck
     }:
     mkDerivation {
       pname = "grouped-list";
       version = "0.2.1.1";
       sha256 = "1fwg5mk03xpjq7xafhjhhm0scsm7px9yqig242dydgs4j6fvjbfz";
       libraryHaskellDepends = [ base containers deepseq pointed ];
       testHaskellDepends = [ base QuickCheck tasty tasty-quickcheck ];
       benchmarkHaskellDepends = [ base criterion ];
       homepage = "https://github.com/Daniel-Diaz/grouped-list/blob/master/README.md";
       description = "Grouped lists. Equal consecutive elements are grouped.";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "groupoids" = callPackage
    ({ mkDerivation, base, semigroupoids }:
     mkDerivation {
       pname = "groupoids";
       version = "4.0";
       sha256 = "08la44c19pz2clws5mb939zc1d17cb6qy9qlh2n1634pl0zrawb6";
       libraryHaskellDepends = [ base semigroupoids ];
       doHaddock = false;
       homepage = "http://github.com/ekmett/groupoids/";
       description = "This package has been absorbed into semigroupoids 4.0";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "groups" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "groups";
       version = "0.4.0.0";
       sha256 = "1kp8h3617cimya8nnadljyy4vk66dzl5nzfm900k2gh3ci8kja6k";
       libraryHaskellDepends = [ base ];
       description = "Haskell 98 groups";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "growler" = callPackage
    ({ mkDerivation, aeson, base, blaze-builder, bytestring
     , case-insensitive, either, http-types, lens, monad-control, mtl
     , pipes, pipes-aeson, pipes-wai, regex-compat, text, transformers
     , transformers-base, unordered-containers, vector, wai, wai-extra
     , warp
     }:
     mkDerivation {
       pname = "growler";
       version = "0.6.0";
       sha256 = "0skykz2p0kcs8g1vq7832h7fnw193hpq4pplkcaxazg8z97k8q75";
       libraryHaskellDepends = [
         aeson base blaze-builder bytestring case-insensitive either
         http-types lens monad-control mtl pipes pipes-aeson pipes-wai
         regex-compat text transformers transformers-base
         unordered-containers vector wai wai-extra warp
       ];
       doHaddock = false;
       homepage = "http://github.com/iand675/growler";
       description = "A revised version of the scotty library that attempts to be simpler and more performant";
       license = stdenv.lib.licenses.mit;
     }) {};
  "gsasl" = callPackage
    ({ mkDerivation, base, bytestring, gsasl, transformers }:
     mkDerivation {
       pname = "gsasl";
       version = "0.3.6";
       sha256 = "0cgrw5ypkwp4mzj8m12q783jqng1jp1j7ny15704jmjxbq13cq3q";
       libraryHaskellDepends = [ base bytestring transformers ];
       libraryPkgconfigDepends = [ gsasl ];
       homepage = "https://john-millikin.com/software/haskell-gsasl/";
       description = "Bindings for GNU libgsasl";
       license = stdenv.lib.licenses.gpl3;
     }) {inherit (pkgs) gsasl;};
  "gtk" = callPackage
    ({ mkDerivation, array, base, bytestring, cairo, containers, gio
     , glib, gtk2, gtk2hs-buildtools, mtl, pango, text
     }:
     mkDerivation {
       pname = "gtk";
       version = "0.14.2";
       sha256 = "1dbygcmnm4lg8d42dpqjnjpfd05qs3kvnj5075cy5wz23z2q1xsq";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         array base bytestring cairo containers gio glib mtl pango text
       ];
       libraryPkgconfigDepends = [ gtk2 ];
       libraryToolDepends = [ gtk2hs-buildtools ];
       doHaddock = false;
       homepage = "http://projects.haskell.org/gtk2hs/";
       description = "Binding to the Gtk+ graphical user interface library";
       license = stdenv.lib.licenses.lgpl21;
     }) {gtk2 = pkgs.gnome2.gtk;};
  "gtk2hs-buildtools" = callPackage
    ({ mkDerivation, alex, array, base, containers, directory, filepath
     , happy, hashtables, pretty, process, random
     }:
     mkDerivation {
       pname = "gtk2hs-buildtools";
       version = "0.13.0.5";
       sha256 = "14qaiy31xgdfmskyvdkkbqs9vsqpnc31ra1w5z4f847c0nji2n6r";
       isLibrary = false;
       isExecutable = true;
       enableSeparateDataOutput = true;
       executableHaskellDepends = [
         array base containers directory filepath hashtables pretty process
         random
       ];
       executableToolDepends = [ alex happy ];
       doHaddock = false;
       homepage = "http://projects.haskell.org/gtk2hs/";
       description = "Tools to build the Gtk2Hs suite of User Interface libraries";
       license = stdenv.lib.licenses.gpl2;
     }) {};
  "gtk3" = callPackage
    ({ mkDerivation, array, base, bytestring, cairo, containers, gio
     , glib, gtk2hs-buildtools, gtk3, mtl, pango, text, time
     , transformers
     }:
     mkDerivation {
       pname = "gtk3";
       version = "0.14.2";
       sha256 = "079xrfhnkicph79i3m8psmrr0ka2gx9wi19wdlffc1rqpw38j6fs";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         array base bytestring cairo containers gio glib mtl pango text
       ];
       libraryPkgconfigDepends = [ gtk3 ];
       libraryToolDepends = [ gtk2hs-buildtools ];
       executableHaskellDepends = [
         array base cairo text time transformers
       ];
       doHaddock = false;
       homepage = "http://projects.haskell.org/gtk2hs/";
       description = "Binding to the Gtk+ 3 graphical user interface library";
       license = stdenv.lib.licenses.lgpl21;
     }) {inherit (pkgs) gtk3;};
  "hOpenPGP" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, base64-bytestring
     , bifunctors, binary, binary-conduit, byteable, bytestring, bzlib
     , conduit, conduit-extra, containers, criterion
     , crypto-cipher-types, cryptonite, data-default-class, errors
     , hashable, incremental-parser, ixset-typed, lens, memory
     , monad-loops, nettle, network, network-uri, newtype
     , openpgp-asciiarmor, QuickCheck, quickcheck-instances, resourcet
     , securemem, semigroups, split, tasty, tasty-hunit
     , tasty-quickcheck, text, time, time-locale-compat, transformers
     , unordered-containers, wl-pprint-extras, zlib
     }:
     mkDerivation {
       pname = "hOpenPGP";
       version = "2.4.4";
       sha256 = "01m8ynhzwz63aym87k52qrqi4wx16jgq84j6scgp23x6l8w7n4vd";
       revision = "1";
       editedCabalFile = "1pb2yhp968d99x9736rkv8wlqbgq3k1kmmlznnqrqjj9p7aahv2n";
       libraryHaskellDepends = [
         aeson attoparsec base base64-bytestring bifunctors binary
         binary-conduit byteable bytestring bzlib conduit conduit-extra
         containers crypto-cipher-types cryptonite data-default-class errors
         hashable incremental-parser ixset-typed lens memory monad-loops
         nettle network network-uri newtype openpgp-asciiarmor resourcet
         securemem semigroups split text time time-locale-compat
         transformers unordered-containers wl-pprint-extras zlib
       ];
       testHaskellDepends = [
         aeson attoparsec base bifunctors binary binary-conduit byteable
         bytestring bzlib conduit conduit-extra containers
         crypto-cipher-types cryptonite data-default-class errors hashable
         incremental-parser ixset-typed lens memory monad-loops nettle
         network network-uri newtype QuickCheck quickcheck-instances
         resourcet securemem semigroups split tasty tasty-hunit
         tasty-quickcheck text time time-locale-compat transformers
         unordered-containers wl-pprint-extras zlib
       ];
       benchmarkHaskellDepends = [
         aeson base base64-bytestring bifunctors binary binary-conduit
         byteable bytestring bzlib conduit conduit-extra containers
         criterion crypto-cipher-types cryptonite data-default-class errors
         hashable incremental-parser ixset-typed lens memory monad-loops
         nettle network network-uri newtype openpgp-asciiarmor resourcet
         securemem semigroups split text time time-locale-compat
         transformers unordered-containers wl-pprint-extras zlib
       ];
       homepage = "http://floss.scru.org/hOpenPGP/";
       description = "native Haskell implementation of OpenPGP (RFC4880)";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hPDB" = callPackage
    ({ mkDerivation, AC-Vector, base, bytestring, containers, deepseq
     , directory, ghc-prim, iterable, mmap, mtl, Octree, parallel
     , QuickCheck, tagged, template-haskell, text, vector, zlib
     }:
     mkDerivation {
       pname = "hPDB";
       version = "1.2.0.4";
       sha256 = "0fzr6y19x7c47y3jl68zcrjnlc8j3b0xnvvrpmqm15qznlrdh41s";
       libraryHaskellDepends = [
         AC-Vector base bytestring containers deepseq directory ghc-prim
         iterable mmap mtl Octree parallel QuickCheck tagged
         template-haskell text vector zlib
       ];
       homepage = "https://github.com/BioHaskell/hPDB";
       description = "Protein Databank file format library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hackage-db" = callPackage
    ({ mkDerivation, base, bytestring, Cabal, containers, directory
     , filepath, tar, utf8-string
     }:
     mkDerivation {
       pname = "hackage-db";
       version = "1.22";
       sha256 = "0rhh7w4929zkwzv10ika952yiw4dkffqd8f79f1bl76lz1la6cjd";
       revision = "1";
       editedCabalFile = "0xj3wwf0wl8qfcz4zsxw0r6f79rg7h010jfv54gsiyzwpf67l9xm";
       libraryHaskellDepends = [
         base bytestring Cabal containers directory filepath tar utf8-string
       ];
       homepage = "http://github.com/peti/hackage-db";
       description = "access Hackage's package database via Data.Map";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hackage-mirror" = callPackage
    ({ mkDerivation, aws, base, bytestring, cereal, conduit
     , conduit-extra, cryptohash, data-default, directory, exceptions
     , fast-logger, filepath, http-conduit, lifted-async, lifted-base
     , mmorph, monad-control, monad-logger, old-locale
     , optparse-applicative, resourcet, retry, shakespeare, stm, tar
     , template-haskell, temporary, text, thyme, transformers
     , unordered-containers
     }:
     mkDerivation {
       pname = "hackage-mirror";
       version = "0.1.1.1";
       sha256 = "1blfxvxikhfpmr20k5cbn29wzn2d6h8i0s8qq3k1m0qx0vkvl46p";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aws base bytestring cereal conduit conduit-extra cryptohash
         data-default directory exceptions fast-logger filepath http-conduit
         lifted-async lifted-base mmorph monad-control monad-logger
         old-locale resourcet retry shakespeare stm tar template-haskell
         temporary text thyme transformers unordered-containers
       ];
       executableHaskellDepends = [
         base monad-logger optparse-applicative
       ];
       homepage = "http://fpcomplete.com";
       description = "Simple mirroring utility for Hackage";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hackage-whatsnew" = callPackage
    ({ mkDerivation, base, Cabal, containers, directory, filepath
     , hackage-db, process, temporary
     }:
     mkDerivation {
       pname = "hackage-whatsnew";
       version = "0.1.0.0";
       sha256 = "084g56lmhfm3h67znajh54cx7nn98nb10k7aa7jzy8ivnws66d48";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         base Cabal containers directory filepath hackage-db process
         temporary
       ];
       doHaddock = false;
       description = "Check for differences between working directory and hackage";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hackmanager" = callPackage
    ({ mkDerivation, base, bytestring, Cabal, directory, file-embed
     , Glob, hastache, http-client, http-client-tls, http-types, mtl
     , optparse-applicative, process, text
     }:
     mkDerivation {
       pname = "hackmanager";
       version = "0.1.0.0";
       sha256 = "0iim0mr6sxxjx9krj6mc50aysk9lj15gdffyaqp9pyf8fbvynp4a";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring Cabal directory file-embed Glob hastache
         http-client http-client-tls http-types mtl process text
       ];
       executableHaskellDepends = [ base optparse-applicative text ];
       homepage = "http://github.com/agrafix/hackmanager";
       description = "Generate useful files for Haskell projects";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "haddock-api" = callPackage
    ({ mkDerivation, array, base, bytestring, Cabal, containers
     , deepseq, directory, filepath, ghc, ghc-paths, haddock-library
     , xhtml
     }:
     mkDerivation {
       pname = "haddock-api";
       version = "2.16.1";
       sha256 = "1spd5axg1pdjv4dkdb5gcwjsc8gg37qi4mr2k2db6ayywdkis1p2";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         array base bytestring Cabal containers deepseq directory filepath
         ghc ghc-paths haddock-library xhtml
       ];
       homepage = "http://www.haskell.org/haddock/";
       description = "A documentation-generation tool for Haskell libraries";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "haddock-library" = callPackage
    ({ mkDerivation, base, base-compat, bytestring, deepseq, hspec
     , QuickCheck, transformers
     }:
     mkDerivation {
       pname = "haddock-library";
       version = "1.2.1";
       sha256 = "0mhh2ppfhrvvi9485ipwbkv2fbgj35jvz3la02y3jlvg5ffs1c8g";
       libraryHaskellDepends = [ base bytestring deepseq transformers ];
       testHaskellDepends = [
         base base-compat bytestring deepseq hspec QuickCheck transformers
       ];
       doCheck = false;
       homepage = "http://www.haskell.org/haddock/";
       description = "Library exposing some functionality of Haddock";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "haddocset" = callPackage
    ({ mkDerivation, base, Cabal, conduit, conduit-extra, directory
     , exceptions, filepath, ghc, haddock-api, http-types, mtl
     , optparse-applicative, process, resourcet, sqlite-simple, tagsoup
     , text, transformers
     }:
     mkDerivation {
       pname = "haddocset";
       version = "0.4.1";
       sha256 = "0glwmr113rl8mkyycgagrx9hkqzwb0glwlkf0g5jhnv9zjsprqdj";
       revision = "1";
       editedCabalFile = "06wmnpw9ysllvgq6ilkfr5wjpq1xq97c6pqzcsvgr99xpaw6j4wd";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         base Cabal conduit conduit-extra directory exceptions filepath ghc
         haddock-api http-types mtl optparse-applicative process resourcet
         sqlite-simple tagsoup text transformers
       ];
       doHaddock = false;
       homepage = "https://github.com/philopon/haddocset";
       description = "Generate docset of Dash by Haddock haskell documentation tool";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hakyll" = callPackage
    ({ mkDerivation, base, binary, blaze-html, blaze-markup, bytestring
     , cmdargs, containers, cryptohash, data-default, deepseq, directory
     , filepath, fsnotify, http-conduit, http-types, HUnit, lrucache
     , mtl, network, network-uri, pandoc, pandoc-citeproc, parsec
     , process, QuickCheck, random, regex-base, regex-tdfa, snap-core
     , snap-server, system-filepath, tagsoup, test-framework
     , test-framework-hunit, test-framework-quickcheck2, text, time
     , time-locale-compat, utillinux
     }:
     mkDerivation {
       pname = "hakyll";
       version = "4.7.5.1";
       sha256 = "045kb6k2548fix2rcrgysg0mib6sx1mmbwc72laizklvimfw3vrr";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base binary blaze-html blaze-markup bytestring cmdargs containers
         cryptohash data-default deepseq directory filepath fsnotify
         http-conduit http-types lrucache mtl network network-uri pandoc
         pandoc-citeproc parsec process random regex-base regex-tdfa
         snap-core snap-server system-filepath tagsoup text time
         time-locale-compat
       ];
       executableHaskellDepends = [ base directory filepath ];
       testHaskellDepends = [
         base binary blaze-html blaze-markup bytestring cmdargs containers
         cryptohash data-default deepseq directory filepath fsnotify
         http-conduit http-types HUnit lrucache mtl network network-uri
         pandoc pandoc-citeproc parsec process QuickCheck random regex-base
         regex-tdfa snap-core snap-server system-filepath tagsoup
         test-framework test-framework-hunit test-framework-quickcheck2 text
         time time-locale-compat
       ];
       testToolDepends = [ utillinux ];
       homepage = "http://jaspervdj.be/hakyll";
       description = "A static website compiler library";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) utillinux;};
  "half" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "half";
       version = "0.2.2.3";
       sha256 = "0p4sb7vv9cljv48wlx65wgdnkryrk5d6yfh7g4yrm20w1p449hl5";
       libraryHaskellDepends = [ base ];
       homepage = "http://github.com/ekmett/half";
       description = "Half-precision floating-point";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hamlet" = callPackage
    ({ mkDerivation, base, shakespeare }:
     mkDerivation {
       pname = "hamlet";
       version = "1.2.0";
       sha256 = "0rla3ap3malk8j6mh07fr2aqvbscpy743wrfq3skgjv3j4jlpjfi";
       libraryHaskellDepends = [ base shakespeare ];
       doHaddock = false;
       homepage = "http://www.yesodweb.com/book/shakespearean-templates";
       description = "Haml-like template files that are compile-time checked (deprecated)";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hapistrano" = callPackage
    ({ mkDerivation, base, base-compat, directory, either, filepath
     , hspec, mtl, process, temporary, time, time-locale-compat
     , transformers
     }:
     mkDerivation {
       pname = "hapistrano";
       version = "0.2.1.1";
       sha256 = "1jy56hpgjkvli5ayg9a81yy8lix1yh09cggk6bmzhgzgd27mqk6w";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base either filepath mtl process time time-locale-compat
         transformers
       ];
       executableHaskellDepends = [ base base-compat ];
       testHaskellDepends = [
         base directory either filepath hspec mtl process temporary
       ];
       homepage = "https://github.com/stackbuilders/hapistrano";
       description = "A deployment library for Haskell applications";
       license = stdenv.lib.licenses.mit;
     }) {};
  "happstack-authenticate" = callPackage
    ({ mkDerivation, acid-state, aeson, authenticate, base
     , base64-bytestring, boomerang, bytestring, containers
     , data-default, email-validate, filepath, happstack-hsp
     , happstack-jmacro, happstack-server, hsp, hsx-jmacro, hsx2hs
     , http-conduit, http-types, ixset-typed, jmacro, jwt, lens
     , mime-mail, mtl, pwstore-purehaskell, random, safecopy
     , shakespeare, text, time, unordered-containers, userid, web-routes
     , web-routes-boomerang, web-routes-happstack, web-routes-hsp
     , web-routes-th
     }:
     mkDerivation {
       pname = "happstack-authenticate";
       version = "2.3.4";
       sha256 = "0hxyp140nqyswq3171zd07nsy2b5bjpwlb76ck6rynhy6c57fi78";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         acid-state aeson authenticate base base64-bytestring boomerang
         bytestring containers data-default email-validate filepath
         happstack-hsp happstack-jmacro happstack-server hsp hsx-jmacro
         hsx2hs http-conduit http-types ixset-typed jmacro jwt lens
         mime-mail mtl pwstore-purehaskell random safecopy shakespeare text
         time unordered-containers userid web-routes web-routes-boomerang
         web-routes-happstack web-routes-hsp web-routes-th
       ];
       homepage = "http://www.happstack.com/";
       description = "Happstack Authentication Library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "happstack-clientsession" = callPackage
    ({ mkDerivation, base, bytestring, cereal, clientsession
     , happstack-server, monad-control, mtl, safecopy, transformers-base
     }:
     mkDerivation {
       pname = "happstack-clientsession";
       version = "7.3.1";
       sha256 = "1sl67wdzaf6j773iapjnc1v2k19ycd18irkdpb4px1a1mq6ym0sv";
       libraryHaskellDepends = [
         base bytestring cereal clientsession happstack-server monad-control
         mtl safecopy transformers-base
       ];
       homepage = "http://happstack.com";
       description = "client-side session data";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "happstack-hsp" = callPackage
    ({ mkDerivation, base, bytestring, happstack-server, harp, hsp
     , hsx2hs, mtl, syb, text, utf8-string
     }:
     mkDerivation {
       pname = "happstack-hsp";
       version = "7.3.7";
       sha256 = "1xximpvcvn5k810vl4cqvprxn10dd4750hkc5x89z2kkq99vr0py";
       libraryHaskellDepends = [
         base bytestring happstack-server harp hsp hsx2hs mtl syb text
         utf8-string
       ];
       homepage = "http://www.happstack.com/";
       description = "Support for using HSP templates in Happstack";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "happstack-jmacro" = callPackage
    ({ mkDerivation, base, base64-bytestring, bytestring, cereal
     , digest, happstack-server, jmacro, text, utf8-string
     , wl-pprint-text
     }:
     mkDerivation {
       pname = "happstack-jmacro";
       version = "7.0.11";
       sha256 = "076zvc7kb68nanjrhgx1n37n9n83s862qcb4aa62idqzv52biii9";
       libraryHaskellDepends = [
         base base64-bytestring bytestring cereal digest happstack-server
         jmacro text utf8-string wl-pprint-text
       ];
       homepage = "http://www.happstack.com/";
       description = "Support for using JMacro with Happstack";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "happstack-server" = callPackage
    ({ mkDerivation, base, base64-bytestring, blaze-html, bytestring
     , containers, directory, exceptions, extensible-exceptions
     , filepath, hslogger, html, HUnit, monad-control, mtl, network
     , network-uri, old-locale, parsec, process, sendfile, syb
     , system-filepath, template-haskell, text, threads, time
     , time-compat, transformers, transformers-base, transformers-compat
     , unix, utf8-string, xhtml, zlib
     }:
     mkDerivation {
       pname = "happstack-server";
       version = "7.4.6.1";
       sha256 = "16xbk23gpzivkg1r1y33xv2vdsrpqs2vwqa0bb97bch9p543r2gl";
       revision = "1";
       editedCabalFile = "1mcvrba48k16ija8cw15j6na8ip09qyjc5h8rdj4fwqmjly355kh";
       libraryHaskellDepends = [
         base base64-bytestring blaze-html bytestring containers directory
         exceptions extensible-exceptions filepath hslogger html
         monad-control mtl network network-uri old-locale parsec process
         sendfile syb system-filepath template-haskell text threads time
         time-compat transformers transformers-base transformers-compat unix
         utf8-string xhtml zlib
       ];
       testHaskellDepends = [
         base bytestring containers HUnit parsec zlib
       ];
       homepage = "http://happstack.com";
       description = "Web related tools and services";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "happstack-server-tls" = callPackage
    ({ mkDerivation, base, bytestring, extensible-exceptions
     , happstack-server, hslogger, HsOpenSSL, network, openssl, sendfile
     , time, unix
     }:
     mkDerivation {
       pname = "happstack-server-tls";
       version = "7.1.6.1";
       sha256 = "0s56fdzy2hzdcb3rvb4zg3kd6d450vkfl4spc42x26q0x19s67w0";
       libraryHaskellDepends = [
         base bytestring extensible-exceptions happstack-server hslogger
         HsOpenSSL network sendfile time unix
       ];
       librarySystemDepends = [ openssl ];
       homepage = "http://www.happstack.com/";
       description = "extend happstack-server with https:// support (TLS/SSL)";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) openssl;};
  "happy" = callPackage
    ({ mkDerivation, array, base, Cabal, containers, directory
     , filepath, mtl, process
     }:
     mkDerivation {
       pname = "happy";
       version = "1.19.5";
       sha256 = "1nj353q4z1g186fpjzf0dnsg71qhxqpamx8jy89rjjvv3p0kmw32";
       revision = "2";
       editedCabalFile = "1dvhv94lzmya938i5crshg9qbx7dxvkyxkhfbqimxkydxn7l2w7w";
       isLibrary = false;
       isExecutable = true;
       setupHaskellDepends = [ base Cabal directory filepath ];
       executableHaskellDepends = [ array base containers mtl ];
       testHaskellDepends = [ base process ];
       doHaddock = false;
       doCheck = false;
       homepage = "http://www.haskell.org/happy/";
       description = "Happy is a parser generator for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "harp" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "harp";
       version = "0.4.1";
       sha256 = "0q9q3rw9yqkryjf5vvm41ckycqjfaxnsrmc1p0kmdrlb4f4dgclz";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/seereason/harp";
       description = "HaRP allows pattern-matching with regular expressions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hashable" = callPackage
    ({ mkDerivation, base, bytestring, criterion, ghc-prim, HUnit
     , integer-gmp, QuickCheck, random, siphash, test-framework
     , test-framework-hunit, test-framework-quickcheck2, text, unix
     }:
     mkDerivation {
       pname = "hashable";
       version = "1.2.4.0";
       sha256 = "1wrwpchksxd1i63ydpqy6jkdzxrb5qsy64rfiv9lik9r1kdp35pv";
       libraryHaskellDepends = [
         base bytestring ghc-prim integer-gmp text
       ];
       testHaskellDepends = [
         base bytestring ghc-prim HUnit QuickCheck random test-framework
         test-framework-hunit test-framework-quickcheck2 text unix
       ];
       benchmarkHaskellDepends = [
         base bytestring criterion ghc-prim integer-gmp siphash text
       ];
       homepage = "http://github.com/tibbe/hashable";
       description = "A class for types that can be converted to a hash value";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hashable-extras" = callPackage
    ({ mkDerivation, base, bifunctors, bytestring, directory, doctest
     , filepath, hashable, transformers, transformers-compat
     }:
     mkDerivation {
       pname = "hashable-extras";
       version = "0.2.3";
       sha256 = "0skby3b541iq1br3nm8yb9lg9l4rw682q5824ildhrg2a0x31q03";
       revision = "1";
       editedCabalFile = "1is856b5l3chqbbgm0767bcqxwyyciwy5jmvpfmqd4m32a1rhw4d";
       libraryHaskellDepends = [
         base bifunctors bytestring hashable transformers
         transformers-compat
       ];
       testHaskellDepends = [ base directory doctest filepath ];
       homepage = "http://github.com/analytics/hashable-extras/";
       description = "Higher-rank Hashable";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hashable-time" = callPackage
    ({ mkDerivation, base, hashable, time }:
     mkDerivation {
       pname = "hashable-time";
       version = "0.2";
       sha256 = "02ibzvdybbii01ppj9n1rb0wfip3svrzl6z9km4hvbkz8smj5dwp";
       revision = "1";
       editedCabalFile = "0d8xfx6dqliqgj0d6lc6ns9k4rgfz3m0gqzsa8cmm6hvdyjsn9dr";
       libraryHaskellDepends = [ base hashable time ];
       description = "Hashable instances for Data.Time";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hashmap" = callPackage
    ({ mkDerivation, base, containers, deepseq, hashable }:
     mkDerivation {
       pname = "hashmap";
       version = "1.3.0.1";
       sha256 = "16scl1rbq0f18mggrj4lbhgkz7kzshsw9a523rjd8cjkdjz1ijwr";
       libraryHaskellDepends = [ base containers deepseq hashable ];
       homepage = "http://git.auryn.cz/haskell/hashmap/";
       description = "Persistent containers Map and Set based on hashing";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hashtables" = callPackage
    ({ mkDerivation, base, ghc-prim, hashable, primitive, vector }:
     mkDerivation {
       pname = "hashtables";
       version = "1.2.1.0";
       sha256 = "1b6w9xznk42732vpd8ili60k12yq190xnajgga0iwbdpyg424lgg";
       libraryHaskellDepends = [
         base ghc-prim hashable primitive vector
       ];
       homepage = "http://github.com/gregorycollins/hashtables";
       description = "Mutable hash tables in the ST monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "haskeline" = callPackage
    ({ mkDerivation, base, bytestring, containers, directory, filepath
     , terminfo, transformers, unix
     }:
     mkDerivation {
       pname = "haskeline";
       version = "0.7.2.2";
       sha256 = "10cjvvfjd1lgm1hkmpw004hpkkmw5586hdz6xvjb44yh1a2zambn";
       libraryHaskellDepends = [
         base bytestring containers directory filepath terminfo transformers
         unix
       ];
       homepage = "http://trac.haskell.org/haskeline";
       description = "A command-line interface for user input, written in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "haskell-lexer" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "haskell-lexer";
       version = "1.0";
       sha256 = "11jv30msg4rym73lk6j21ky2510c3av8qxk5p4z63j4m283w9l46";
       libraryHaskellDepends = [ base ];
       description = "A fully compliant Haskell 98 lexer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "haskell-neo4j-client" = callPackage
    ({ mkDerivation, aeson, base, bytestring, Cabal, containers
     , data-default, hashable, HTTP, http-client, http-conduit
     , http-types, HUnit, lifted-base, mtl, network-uri, QuickCheck
     , resourcet, scientific, test-framework, test-framework-hunit
     , test-framework-quickcheck2, test-framework-th, text, transformers
     , transformers-base, transformers-compat, unordered-containers
     , vector
     }:
     mkDerivation {
       pname = "haskell-neo4j-client";
       version = "0.3.2.1";
       sha256 = "0wrxc8iwaf7v6x9b9rq8pbr6wsd28221h20isl4clxqcxsfzd1cl";
       libraryHaskellDepends = [
         aeson base bytestring containers data-default hashable HTTP
         http-client http-conduit http-types lifted-base mtl network-uri
         resourcet scientific text transformers transformers-base
         transformers-compat unordered-containers vector
       ];
       testHaskellDepends = [
         aeson base bytestring Cabal data-default hashable HTTP http-client
         http-conduit http-types HUnit lifted-base mtl network-uri
         QuickCheck resourcet scientific test-framework test-framework-hunit
         test-framework-quickcheck2 test-framework-th text transformers
         transformers-base transformers-compat unordered-containers vector
       ];
       doCheck = false;
       homepage = "https://github.com/asilvestre/haskell-neo4j-rest-client";
       description = "A Haskell neo4j client";
       license = stdenv.lib.licenses.mit;
     }) {};
  "haskell-packages" = callPackage
    ({ mkDerivation, aeson, base, bytestring, Cabal, containers
     , deepseq, directory, filepath, haskell-src-exts, hse-cpp, mtl
     , optparse-applicative, tagged, transformers, transformers-compat
     }:
     mkDerivation {
       pname = "haskell-packages";
       version = "0.3";
       sha256 = "199srg8k8j2nirs83hx04r1hkwv83h4k73z1sji547f5w0zwnws0";
       revision = "2";
       editedCabalFile = "1sp8n679spj8ym4vl9jdijvh7cladxgpgccw1zn4jz1kv6k05v5s";
       libraryHaskellDepends = [
         aeson base bytestring Cabal containers deepseq directory filepath
         haskell-src-exts hse-cpp mtl optparse-applicative tagged
         transformers transformers-compat
       ];
       homepage = "http://documentup.com/haskell-suite/haskell-packages";
       description = "Haskell suite library for package management and integration with Cabal";
       license = stdenv.lib.licenses.mit;
     }) {};
  "haskell-spacegoo" = callPackage
    ({ mkDerivation, aeson, base, bytestring, conduit, conduit-extra
     , mtl, pretty, pretty-show, text, vector, vector-space
     }:
     mkDerivation {
       pname = "haskell-spacegoo";
       version = "0.2.0.1";
       sha256 = "0g6ximrv5jwibklkyr74vy3qkx8mv4xbpc7f6w1qg9gnlylzmcqy";
       libraryHaskellDepends = [
         aeson base bytestring conduit conduit-extra mtl pretty pretty-show
         text vector vector-space
       ];
       description = "Client API for Rocket Scissor Spacegoo";
       license = stdenv.lib.licenses.mit;
     }) {};
  "haskell-src" = callPackage
    ({ mkDerivation, array, base, happy, pretty, syb }:
     mkDerivation {
       pname = "haskell-src";
       version = "1.0.2.0";
       sha256 = "19lilhpwnjb7cks9fq1ipnc8f7dwxy0ri3dgjkdxs3i355byw99a";
       libraryHaskellDepends = [ array base pretty syb ];
       libraryToolDepends = [ happy ];
       description = "Support for manipulating Haskell source code";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "haskell-src-exts" = callPackage
    ({ mkDerivation, array, base, containers, cpphs, directory
     , filepath, ghc-prim, happy, mtl, pretty, pretty-show, smallcheck
     , syb, tasty, tasty-golden, tasty-smallcheck
     }:
     mkDerivation {
       pname = "haskell-src-exts";
       version = "1.17.1";
       sha256 = "1g98amhn2b76g38y3dc55nny5812gqyqmswl1fniaiai41vm8p5s";
       revision = "1";
       editedCabalFile = "02zar6rnhk078ygs8vjrzc12mwyix10y9ikxfz3y3gmllzr4hwn0";
       libraryHaskellDepends = [ array base cpphs ghc-prim pretty ];
       libraryToolDepends = [ happy ];
       testHaskellDepends = [
         base containers directory filepath mtl pretty-show smallcheck syb
         tasty tasty-golden tasty-smallcheck
       ];
       homepage = "https://github.com/haskell-suite/haskell-src-exts";
       description = "Manipulating Haskell source: abstract syntax, lexer, parser, and pretty-printer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "haskell-src-meta" = callPackage
    ({ mkDerivation, base, haskell-src-exts, pretty, syb
     , template-haskell, th-orphans
     }:
     mkDerivation {
       pname = "haskell-src-meta";
       version = "0.6.0.13";
       sha256 = "1dnff13cc3ybyb4jv5kd6lkcnrfs4dcsx0c96i6s9wsiajfx6crz";
       revision = "1";
       editedCabalFile = "1lqx3jbrz3pp0kkqx1bcxw9lv2k7rv0s6pm64ih6llamrr8w1cr0";
       libraryHaskellDepends = [
         base haskell-src-exts pretty syb template-haskell th-orphans
       ];
       description = "Parse source to template-haskell abstract syntax";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "haskintex" = callPackage
    ({ mkDerivation, base, binary, bytestring, containers, directory
     , filepath, haskell-src-exts, HaTeX, hint, parsec, process, text
     , transformers
     }:
     mkDerivation {
       pname = "haskintex";
       version = "0.6.0.0";
       sha256 = "0kwif8q8czjp2j165zl6vw3kg5w0zxmfg9wlwg9273v8k9xq36i2";
       revision = "1";
       editedCabalFile = "1bl8cz0dr36rx5csx7b82xxqs870g6va7mj3hgdqsfqaiq4hb0kc";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base binary bytestring containers directory filepath
         haskell-src-exts HaTeX hint parsec process text transformers
       ];
       executableHaskellDepends = [ base ];
       homepage = "http://daniel-diaz.github.io/projects/haskintex";
       description = "Haskell Evaluation inside of LaTeX code";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hasql" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, base-prelude, bytestring
     , contravariant, contravariant-extras, data-default-class, dlist
     , either, hashable, hashtables, loch-th, mtl, placeholders
     , postgresql-binary, postgresql-libpq, profunctors, scientific
     , text, time, transformers, uuid, vector
     }:
     mkDerivation {
       pname = "hasql";
       version = "0.19.6";
       sha256 = "0k4kb4dyfbjqvflr87fpp5g797kwcrqc44vm64rx2h46wh2zxwc8";
       libraryHaskellDepends = [
         aeson attoparsec base base-prelude bytestring contravariant
         contravariant-extras data-default-class dlist either hashable
         hashtables loch-th mtl placeholders postgresql-binary
         postgresql-libpq profunctors scientific text time transformers uuid
         vector
       ];
       doCheck = false;
       homepage = "https://github.com/nikita-volkov/hasql";
       description = "A very efficient PostgreSQL driver and a flexible mapping API";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hasql-backend" = callPackage
    ({ mkDerivation, base-prelude, bytestring, either, free, list-t
     , text, transformers, vector
     }:
     mkDerivation {
       pname = "hasql-backend";
       version = "0.4.2";
       sha256 = "02n2i2g5cvsjmw48qrxk2ljfik2lxxjaf5h4hglh0lzci2r3f6jl";
       libraryHaskellDepends = [
         base-prelude bytestring either free list-t text transformers vector
       ];
       homepage = "https://github.com/nikita-volkov/hasql-backend";
       description = "API for backends of \"hasql\"";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hastache" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring, containers
     , directory, filepath, HUnit, ieee754, mtl, process, syb, text
     , transformers
     }:
     mkDerivation {
       pname = "hastache";
       version = "0.6.1";
       sha256 = "0r5l8k157pgvz1ck4lfid5x05f2s0nlmwf33f4fj09b1kmk8k3wc";
       revision = "5";
       editedCabalFile = "0fwd1jd6sqkscmy2yq1w3dcl4va4w9n8mhs6ldrilh1cj6b54r3f";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base blaze-builder bytestring containers directory filepath ieee754
         mtl syb text transformers
       ];
       executableHaskellDepends = [
         base blaze-builder bytestring containers directory filepath ieee754
         mtl process syb text transformers
       ];
       testHaskellDepends = [
         base bytestring directory HUnit mtl syb text
       ];
       doCheck = false;
       homepage = "http://github.com/lymar/hastache";
       description = "Haskell implementation of Mustache templates";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hasty-hamiltonian" = callPackage
    ({ mkDerivation, ad, base, lens, mcmc-types, mwc-probability, pipes
     , primitive, transformers
     }:
     mkDerivation {
       pname = "hasty-hamiltonian";
       version = "1.1.2";
       sha256 = "0gd925n9l1x6pmz7g8j09xqhqipmbpvphhaqgf2sz9yry55nm6s7";
       libraryHaskellDepends = [
         base lens mcmc-types mwc-probability pipes primitive transformers
       ];
       testHaskellDepends = [ ad base mwc-probability ];
       homepage = "http://jtobin.github.com/hasty-hamiltonian";
       description = "Speedy traversal through parameter space";
       license = stdenv.lib.licenses.mit;
     }) {};
  "haxl" = callPackage
    ({ mkDerivation, aeson, base, bytestring, containers, deepseq
     , directory, exceptions, filepath, hashable, HUnit, pretty, text
     , time, unordered-containers, vector
     }:
     mkDerivation {
       pname = "haxl";
       version = "0.3.1.0";
       sha256 = "16k60rfz9ww44xna71pcg56l1f4gsj4ldhkarzvvdad9yfq63agv";
       revision = "2";
       editedCabalFile = "1lb5435ym29x63w12hj40g4pgz1h2awiyj8p3qk8wyyr4hw558gk";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base bytestring containers deepseq directory exceptions
         filepath hashable HUnit pretty text time unordered-containers
         vector
       ];
       executableHaskellDepends = [ base hashable time ];
       testHaskellDepends = [
         aeson base bytestring containers hashable HUnit text
         unordered-containers
       ];
       homepage = "https://github.com/facebook/Haxl";
       description = "A Haskell library for efficient, concurrent, and concise data access";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "haxr" = callPackage
    ({ mkDerivation, array, base, base-compat, base64-bytestring
     , blaze-builder, bytestring, HaXml, HsOpenSSL, http-streams
     , http-types, io-streams, mtl, mtl-compat, network, network-uri
     , old-locale, old-time, template-haskell, time, utf8-string
     }:
     mkDerivation {
       pname = "haxr";
       version = "3000.11.1.3";
       sha256 = "0lxdg6is7cf6sp5qvypa4b7nkah2qr4v1ncdcd6rrm6z93ygxalr";
       libraryHaskellDepends = [
         array base base-compat base64-bytestring blaze-builder bytestring
         HaXml HsOpenSSL http-streams http-types io-streams mtl mtl-compat
         network network-uri old-locale old-time template-haskell time
         utf8-string
       ];
       homepage = "http://www.haskell.org/haskellwiki/HaXR";
       description = "XML-RPC client and server library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hbeanstalk" = callPackage
    ({ mkDerivation, attoparsec, base, blaze-builder, bytestring
     , containers, network
     }:
     mkDerivation {
       pname = "hbeanstalk";
       version = "0.2.4";
       sha256 = "13xcia1nnayhr22zi1wzgn8qs403ib4n2zikpxd3xnzy33yrgbzy";
       libraryHaskellDepends = [
         attoparsec base blaze-builder bytestring containers network
       ];
       homepage = "http://github.com/scsibug/hbeanstalk/";
       description = "Client for the beanstalkd workqueue service";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hdaemonize" = callPackage
    ({ mkDerivation, base, extensible-exceptions, filepath, hsyslog
     , mtl, unix
     }:
     mkDerivation {
       pname = "hdaemonize";
       version = "0.5.0.1";
       sha256 = "03daf8qb8x0503h5k2vr6r4lyv6fv1a5n6mhykx5872khl81d8ms";
       libraryHaskellDepends = [
         base extensible-exceptions filepath hsyslog mtl unix
       ];
       homepage = "http://github.com/greydot/hdaemonize";
       description = "Library to handle the details of writing daemons for UNIX";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hdevtools" = callPackage
    ({ mkDerivation, base, bin-package-db, Cabal, cmdargs, directory
     , filepath, ghc, ghc-paths, network, process, syb, time
     , transformers, unix
     }:
     mkDerivation {
       pname = "hdevtools";
       version = "0.1.3.0";
       sha256 = "0x1pk36k5q9vafahg2m06ayi6ds972ymlb7h258hxx6mcj3fgc70";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         base bin-package-db Cabal cmdargs directory filepath ghc ghc-paths
         network process syb time transformers unix
       ];
       doHaddock = false;
       homepage = "https://github.com/hdevtools/hdevtools/";
       description = "Persistent GHC powered background server for FAST haskell development tools";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hdocs" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, base, bytestring, Cabal
     , containers, filepath, ghc, ghc-paths, haddock-api
     , haddock-library, MonadCatchIO-transformers, mtl, network, process
     , text, transformers
     }:
     mkDerivation {
       pname = "hdocs";
       version = "0.4.4.0";
       sha256 = "153rwd1f390j6sjfxx135h3bh80pb8zb5myws9q8d0jkrx2sl198";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base bytestring Cabal containers filepath ghc ghc-paths
         haddock-api haddock-library MonadCatchIO-transformers mtl network
         process text transformers
       ];
       executableHaskellDepends = [
         aeson aeson-pretty base bytestring containers filepath mtl network
         text
       ];
       testHaskellDepends = [ base containers mtl ];
       homepage = "https://github.com/mvoidex/hdocs";
       description = "Haskell docs tool";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "heap" = callPackage
    ({ mkDerivation, base, QuickCheck }:
     mkDerivation {
       pname = "heap";
       version = "1.0.3";
       sha256 = "00plmd5b8dlgb8324h1dbd168apfcx3hkv65rhi463a8lff7xmcv";
       revision = "1";
       editedCabalFile = "0j1f0xl3y2vqiyh3m9w5vssxyi62s6qic3zmpkm429vawyh4yad5";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base QuickCheck ];
       description = "Heaps in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "heaps" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "heaps";
       version = "0.3.3";
       sha256 = "0dqmmv51sxrwj6qliji1idpm0nc1w52kjvcvfj37gjnqwv9miqq4";
       libraryHaskellDepends = [ base ];
       doCheck = false;
       homepage = "http://github.com/ekmett/heaps/";
       description = "Asymptotically optimal Brodal/Okasaki heaps";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hebrew-time" = callPackage
    ({ mkDerivation, base, HUnit, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2, time
     }:
     mkDerivation {
       pname = "hebrew-time";
       version = "0.1.1";
       sha256 = "0ckridxf4rvhhp0k1mckbbbpzfs32l4mwg7n9mrmsggldpl7x6f7";
       libraryHaskellDepends = [ base time ];
       testHaskellDepends = [
         base HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2 time
       ];
       homepage = "https://github.com/snoyberg/hebrew-time";
       description = "Hebrew dates and prayer times";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hedis" = callPackage
    ({ mkDerivation, attoparsec, base, BoundedChan, bytestring
     , bytestring-lexing, mtl, network, resource-pool, time, vector
     }:
     mkDerivation {
       pname = "hedis";
       version = "0.6.10";
       sha256 = "0pc95avhs8w4i1j36n9w1ig8g0xczmnwip24lia4n6l9ivylp5ri";
       libraryHaskellDepends = [
         attoparsec base BoundedChan bytestring bytestring-lexing mtl
         network resource-pool time vector
       ];
       benchmarkHaskellDepends = [ base mtl time ];
       doCheck = false;
       homepage = "https://github.com/informatikr/hedis";
       description = "Client library for the Redis datastore: supports full command set, pipelining";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "heist" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, blaze-builder, blaze-html
     , bytestring, containers, directory, directory-tree, dlist, either
     , filepath, hashable, map-syntax, MonadCatchIO-transformers, mtl
     , process, random, text, time, transformers, unordered-containers
     , vector, xmlhtml
     }:
     mkDerivation {
       pname = "heist";
       version = "0.14.1.1";
       sha256 = "0hwf8d20lw4gn5mal8iqd62npr2859541h3md451hjlbwpjyqd19";
       revision = "3";
       editedCabalFile = "07smwjxln4zaqzxmjrzrd6vbfhkidss0jszqjpigqi676byr10lj";
       libraryHaskellDepends = [
         aeson attoparsec base blaze-builder blaze-html bytestring
         containers directory directory-tree dlist either filepath hashable
         map-syntax MonadCatchIO-transformers mtl process random text time
         transformers unordered-containers vector xmlhtml
       ];
       homepage = "http://snapframework.com/";
       description = "An Haskell template system supporting both HTML5 and XML";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "here" = callPackage
    ({ mkDerivation, base, haskell-src-meta, mtl, parsec
     , template-haskell
     }:
     mkDerivation {
       pname = "here";
       version = "1.2.7";
       sha256 = "1fqjqzfg3fif67ic75pavsnfjb9lxk5cf82chxs2hrkx41gm4gr6";
       libraryHaskellDepends = [
         base haskell-src-meta mtl parsec template-haskell
       ];
       homepage = "https://github.com/tmhedberg/here";
       description = "Here docs & interpolated strings via quasiquotation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "heredoc" = callPackage
    ({ mkDerivation, base, template-haskell }:
     mkDerivation {
       pname = "heredoc";
       version = "0.2.0.0";
       sha256 = "0h0g2f7yscwl1ba1yn3jnz2drvd6ns9m910hwlmq3kdq3k39y3f9";
       libraryHaskellDepends = [ base template-haskell ];
       homepage = "http://hackage.haskell.org/package/heredoc";
       description = "multi-line string / here document using QuasiQuotes";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "hex" = callPackage
    ({ mkDerivation, base, bytestring }:
     mkDerivation {
       pname = "hex";
       version = "0.1.2";
       sha256 = "1v31xiaivrrn0q2jz8919wvkjplv1kxna5ajhsj701fqxm1i5vhj";
       libraryHaskellDepends = [ base bytestring ];
       description = "Convert strings into hexadecimal and back";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hexpat" = callPackage
    ({ mkDerivation, base, bytestring, containers, deepseq, List, text
     , transformers, utf8-string
     }:
     mkDerivation {
       pname = "hexpat";
       version = "0.20.9";
       sha256 = "17cx8iafb07f2c8wmfmrfgpz9cjilciba6001klf42z039ghf72x";
       libraryHaskellDepends = [
         base bytestring containers deepseq List text transformers
         utf8-string
       ];
       homepage = "http://haskell.org/haskellwiki/Hexpat/";
       description = "XML parser/formatter based on expat";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hexstring" = callPackage
    ({ mkDerivation, aeson, base, base16-bytestring, binary, bytestring
     , hspec, text
     }:
     mkDerivation {
       pname = "hexstring";
       version = "0.11.1";
       sha256 = "0509h2fhrpcsjf7gffychf700xca4a5l937jfgdzywpm4bzdpn20";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson base base16-bytestring binary bytestring text
       ];
       testHaskellDepends = [ base binary bytestring hspec text ];
       homepage = "http://www.leonmergen.com/opensource.html";
       description = "Fast and safe representation of a hex string";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hflags" = callPackage
    ({ mkDerivation, base, containers, template-haskell, text }:
     mkDerivation {
       pname = "hflags";
       version = "0.4.1";
       sha256 = "034a89nsyqz4ib8a8rypiski243afs08ldrk98p6i6wmlb5naz8l";
       revision = "1";
       editedCabalFile = "0i1kp21grx2wp54qrmvb1xm66c45g2g1dh15rqghwqzf34ssa47k";
       libraryHaskellDepends = [ base containers template-haskell text ];
       homepage = "http://github.com/errge/hflags";
       description = "Command line flag parser, very similar to Google's gflags";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "hfsevents" = callPackage
    ({ mkDerivation, base, bytestring, cereal, Cocoa, CoreServices, mtl
     , text, unix
     }:
     mkDerivation {
       pname = "hfsevents";
       version = "0.1.6";
       sha256 = "019zbnvfd866ch49gax0c1c93zv92142saim1hrgypz5lprz7hvl";
       libraryHaskellDepends = [ base bytestring cereal mtl text unix ];
       librarySystemDepends = [ Cocoa ];
       libraryToolDepends = [ CoreServices ];
       homepage = "http://github.com/luite/hfsevents";
       description = "File/folder watching for OS X";
       license = stdenv.lib.licenses.bsd3;
       platforms = [ "x86_64-darwin" ];
     }) {inherit (pkgs.darwin.apple_sdk.frameworks) Cocoa;
         inherit (pkgs.darwin.apple_sdk.frameworks) CoreServices;};
  "hgettext" = callPackage
    ({ mkDerivation, base, Cabal, containers, directory, filepath
     , haskell-src-exts, process, setlocale, uniplate
     }:
     mkDerivation {
       pname = "hgettext";
       version = "0.1.30";
       sha256 = "1pgzyd1nqzl7g88pcw7sncija5sd2k4zif9d8qfw96cw6m6kli96";
       revision = "3";
       editedCabalFile = "1cxc4jqkngabnramva9s718mavk1082pjkkq2z8x326k0v269w2g";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base Cabal containers directory filepath process setlocale
       ];
       executableHaskellDepends = [ base haskell-src-exts uniplate ];
       homepage = "https://github.com/vasylp/hgettext";
       description = "Bindings to libintl.h (gettext, bindtextdomain)";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hid" = callPackage
    ({ mkDerivation, base, bytestring, c2hs, hidapi, transformers }:
     mkDerivation {
       pname = "hid";
       version = "0.2.1.1";
       sha256 = "0p5x2nd5ncwggkliiyfjd9w8f7cq8w3nf6ha2kbjanz3hjzxs319";
       libraryHaskellDepends = [ base bytestring transformers ];
       libraryPkgconfigDepends = [ hidapi ];
       libraryToolDepends = [ c2hs ];
       homepage = "https://github.com/phaazon/hid";
       description = "Interface to hidapi library";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) hidapi;};
  "hidapi" = callPackage
    ({ mkDerivation, base, bytestring, deepseq-generics, systemd }:
     mkDerivation {
       pname = "hidapi";
       version = "0.1.3";
       sha256 = "0ql6avpwi2m89rrglj9zk3fyi8vl91xswagqv8h24b2xgm7pw5i0";
       libraryHaskellDepends = [ base bytestring deepseq-generics ];
       librarySystemDepends = [ systemd ];
       homepage = "https://github.com/vahokif/haskell-hidapi";
       description = "Haskell bindings to HIDAPI";
       license = stdenv.lib.licenses.mit;
     }) {systemd = null;};
  "hierarchical-clustering" = callPackage
    ({ mkDerivation, array, base, containers, hspec, HUnit, QuickCheck
     }:
     mkDerivation {
       pname = "hierarchical-clustering";
       version = "0.4.6";
       sha256 = "1cfcrnxqczqzqgpyipsw9dwfw1j75zd11vpd12i533f3p44pzwbm";
       libraryHaskellDepends = [ array base containers ];
       testHaskellDepends = [ base hspec HUnit QuickCheck ];
       description = "Fast algorithms for single, average/UPGMA and complete linkage clustering";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "highjson" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, buffer-builder
     , bytestring, containers, criterion, deepseq, hashable, hspec
     , hvect, QuickCheck, scientific, text, unordered-containers, vector
     }:
     mkDerivation {
       pname = "highjson";
       version = "0.2.0.2";
       sha256 = "07qz7zb53vbpb9ixrw0qwn5qhvgwzvrvfkp343a1cvbb42slpmkz";
       libraryHaskellDepends = [
         attoparsec base buffer-builder bytestring containers hashable hvect
         scientific text unordered-containers vector
       ];
       testHaskellDepends = [ base hspec QuickCheck text ];
       benchmarkHaskellDepends = [
         aeson base bytestring criterion deepseq text
       ];
       homepage = "https://github.com/agrafix/highjson";
       description = "Very fast JSON serialisation and parsing library";
       license = stdenv.lib.licenses.mit;
     }) {};
  "highlighting-kate" = callPackage
    ({ mkDerivation, base, blaze-html, containers, Diff, directory
     , filepath, mtl, parsec, process, regex-pcre-builtin, utf8-string
     }:
     mkDerivation {
       pname = "highlighting-kate";
       version = "0.6.1";
       sha256 = "03pkw0qfkir4nqkdzv50cgfj3kflgzy2yxvm6l24d85xc7wclmyb";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base blaze-html containers mtl parsec regex-pcre-builtin
         utf8-string
       ];
       executableHaskellDepends = [ base blaze-html containers filepath ];
       testHaskellDepends = [
         base blaze-html containers Diff directory filepath process
       ];
       homepage = "http://github.com/jgm/highlighting-kate";
       description = "Syntax highlighting";
       license = "GPL";
     }) {};
  "hindent" = callPackage
    ({ mkDerivation, base, data-default, descriptive, directory
     , ghc-prim, haskell-src-exts, hspec, monad-loops, mtl, text
     , transformers
     }:
     mkDerivation {
       pname = "hindent";
       version = "4.6.1";
       sha256 = "1xbh9356n0rcyx4rgdki1ji15r6njpjyycsj8bb5r9269fsgzs04";
       revision = "1";
       editedCabalFile = "098aaky4j2b4658sz5k4asnyl67yirpcp1ag2hq9120ilkll0hfq";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base data-default haskell-src-exts monad-loops mtl text
         transformers
       ];
       executableHaskellDepends = [
         base descriptive directory ghc-prim haskell-src-exts text
       ];
       testHaskellDepends = [
         base data-default directory haskell-src-exts hspec monad-loops mtl
         text
       ];
       doCheck = false;
       homepage = "http://www.github.com/chrisdone/hindent";
       description = "Extensible Haskell pretty printer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hinotify" = callPackage
    ({ mkDerivation, base, containers, directory, unix }:
     mkDerivation {
       pname = "hinotify";
       version = "0.3.8.1";
       sha256 = "03c1f4d7x805zdiq2w26kl09xrfjw19saycdkhnixzv2qcr6xm1p";
       libraryHaskellDepends = [ base containers directory unix ];
       testHaskellDepends = [ base directory ];
       homepage = "https://github.com/kolmodin/hinotify.git";
       description = "Haskell binding to inotify";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hint" = callPackage
    ({ mkDerivation, base, directory, exceptions, extensible-exceptions
     , filepath, ghc, ghc-mtl, ghc-paths, mtl, random, unix
     }:
     mkDerivation {
       pname = "hint";
       version = "0.4.3";
       sha256 = "1nvxmw1jjfkinppfwpba12mvyvxz3093yq58r5vw5d1nisyyqrjz";
       revision = "1";
       editedCabalFile = "0cfjyqlrxdfrzsqgv5kfcgl14x765f06s0jkcaa9jzyrcrjs3isy";
       libraryHaskellDepends = [
         base directory exceptions extensible-exceptions filepath ghc
         ghc-mtl ghc-paths mtl random unix
       ];
       doCheck = false;
       homepage = "https://github.com/mvdan/hint";
       description = "Runtime Haskell interpreter (GHC API wrapper)";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "histogram-fill" = callPackage
    ({ mkDerivation, base, criterion, deepseq, ghc-prim
     , monad-primitive, mwc-random, primitive, vector
     }:
     mkDerivation {
       pname = "histogram-fill";
       version = "0.8.4.1";
       sha256 = "0zamqza4ky90l27sjgv55rp7s1g4hs0k0qn2qza7lfwk991ijn9q";
       libraryHaskellDepends = [
         base deepseq ghc-prim monad-primitive primitive vector
       ];
       benchmarkHaskellDepends = [ base criterion mwc-random vector ];
       homepage = "https://github.com/Shimuuar/histogram-fill/";
       description = "Library for histograms creation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hit" = callPackage
    ({ mkDerivation, attoparsec, base, byteable, bytedump, bytestring
     , containers, cryptohash, hourglass, mtl, parsec, patience, random
     , system-fileio, system-filepath, tasty, tasty-quickcheck
     , unix-compat, utf8-string, vector, zlib, zlib-bindings
     }:
     mkDerivation {
       pname = "hit";
       version = "0.6.3";
       sha256 = "0wg44vgd5jzi0r0vg8k5zrvlr7rcrb4nrp862c6y991941qv71nv";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         attoparsec base byteable bytestring containers cryptohash hourglass
         mtl parsec patience random system-fileio system-filepath
         unix-compat utf8-string vector zlib zlib-bindings
       ];
       testHaskellDepends = [
         base bytedump bytestring hourglass tasty tasty-quickcheck
       ];
       homepage = "http://github.com/vincenthz/hit";
       description = "Git operations in haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hjsmin" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring, Cabal, containers
     , HUnit, language-javascript, optparse-applicative, QuickCheck
     , test-framework, test-framework-hunit, text
     }:
     mkDerivation {
       pname = "hjsmin";
       version = "0.1.5.3";
       sha256 = "0bk4yhv4n67ndn6pnrssz4bdnrdwb4hd7wra3j5vqnii0ri56w2x";
       revision = "1";
       editedCabalFile = "07560sn2ppm3wz4i1clji6999bfgv2x494fwvz7y8h4lnflikzh7";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base blaze-builder bytestring containers language-javascript text
       ];
       executableHaskellDepends = [
         base blaze-builder bytestring containers language-javascript
         optparse-applicative text
       ];
       testHaskellDepends = [
         base blaze-builder bytestring Cabal containers HUnit
         language-javascript QuickCheck test-framework test-framework-hunit
         text
       ];
       homepage = "http://github.com/erikd/hjsmin";
       description = "Haskell implementation of a javascript minifier";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hledger" = callPackage
    ({ mkDerivation, base, base-compat, cmdargs, containers, criterion
     , csv, directory, filepath, haskeline, hledger-lib, html, HUnit
     , mtl, mtl-compat, old-time, parsec, pretty-show, process
     , regex-tdfa, safe, shakespeare, split, tabular, terminfo
     , test-framework, test-framework-hunit, text, time, timeit
     , unordered-containers, utf8-string, wizards
     }:
     mkDerivation {
       pname = "hledger";
       version = "0.27";
       sha256 = "1c4jny3by08sxkxprsjhzf5dgh5zxp8mg4b5cxnlvhj6d9cdzv0a";
       revision = "2";
       editedCabalFile = "16lh88x19vj6c3fz5xby23vgsqqijbxvj6j9i5llmx2yq7qmkw8i";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base base-compat cmdargs containers csv directory filepath
         haskeline hledger-lib HUnit mtl mtl-compat old-time parsec
         pretty-show process regex-tdfa safe shakespeare split tabular
         terminfo text time unordered-containers utf8-string wizards
       ];
       executableHaskellDepends = [
         base base-compat cmdargs containers csv directory filepath
         haskeline hledger-lib HUnit mtl mtl-compat old-time parsec
         pretty-show process regex-tdfa safe shakespeare split tabular
         terminfo text time unordered-containers utf8-string wizards
       ];
       testHaskellDepends = [
         base base-compat cmdargs containers csv directory filepath
         haskeline hledger-lib HUnit mtl mtl-compat old-time parsec
         pretty-show process regex-tdfa safe shakespeare split tabular
         terminfo test-framework test-framework-hunit text time
         unordered-containers utf8-string wizards
       ];
       benchmarkHaskellDepends = [
         base base-compat criterion directory filepath hledger-lib html
         process tabular time timeit
       ];
       homepage = "http://hledger.org";
       description = "Command-line interface for the hledger accounting tool";
       license = "GPL";
     }) {};
  "hledger-interest" = callPackage
    ({ mkDerivation, base, Cabal, Decimal, hledger-lib, mtl, time }:
     mkDerivation {
       pname = "hledger-interest";
       version = "1.4.4";
       sha256 = "16knk1cwrpg5jn6vgcab7hqpjzg33ysz57x1f2glrmhhv1slmbfn";
       revision = "1";
       editedCabalFile = "0abpm432n1k0ii3kspvs1pc9hczjh22n8vhlniavh7mng7sxi0wm";
       isLibrary = false;
       isExecutable = true;
       enableSeparateDataOutput = true;
       executableHaskellDepends = [
         base Cabal Decimal hledger-lib mtl time
       ];
       doHaddock = false;
       homepage = "http://github.com/peti/hledger-interest";
       description = "computes interest for a given account";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hledger-lib" = callPackage
    ({ mkDerivation, array, base, base-compat, blaze-markup, bytestring
     , cmdargs, containers, csv, Decimal, deepseq, directory, filepath
     , HUnit, mtl, mtl-compat, old-time, parsec, pretty-show, regex-tdfa
     , safe, split, test-framework, test-framework-hunit, time
     , transformers, uglymemo, utf8-string
     }:
     mkDerivation {
       pname = "hledger-lib";
       version = "0.27";
       sha256 = "01i6cx45f31adppcbr0dkd1y312lbf2x0z098cbl2rbf2007ki3p";
       revision = "3";
       editedCabalFile = "1cgya5p183r3bi455pvgnwkwzs62dyxzv0nr6p05irn0pl3lywvb";
       libraryHaskellDepends = [
         array base base-compat blaze-markup bytestring cmdargs containers
         csv Decimal deepseq directory filepath HUnit mtl mtl-compat
         old-time parsec pretty-show regex-tdfa safe split time transformers
         uglymemo utf8-string
       ];
       testHaskellDepends = [
         array base base-compat blaze-markup bytestring cmdargs containers
         csv Decimal deepseq directory filepath HUnit mtl mtl-compat
         old-time parsec pretty-show regex-tdfa safe split test-framework
         test-framework-hunit time transformers uglymemo utf8-string
       ];
       homepage = "http://hledger.org";
       description = "Core data types, parsers and functionality for the hledger accounting tools";
       license = "GPL";
     }) {};
  "hledger-ui" = callPackage
    ({ mkDerivation, base, base-compat, brick, cmdargs, containers
     , data-default, filepath, hledger, hledger-lib, HUnit, lens
     , pretty-show, safe, split, time, transformers, vector, vty
     }:
     mkDerivation {
       pname = "hledger-ui";
       version = "0.27.3";
       sha256 = "1hf4k57b78jyklf1ypjswzg5210iiac7qhixi15fihxcg6ad1p47";
       revision = "2";
       editedCabalFile = "07qb2iiwgy5yxns0ckvmkqjn177afg3bx7vkf5rx0sxn6h9p2kg6";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         base base-compat brick cmdargs containers data-default filepath
         hledger hledger-lib HUnit lens pretty-show safe split time
         transformers vector vty
       ];
       doHaddock = false;
       homepage = "http://hledger.org";
       description = "Curses-style user interface for the hledger accounting tool";
       license = "GPL";
     }) {};
  "hledger-web" = callPackage
    ({ mkDerivation, base, base-compat, blaze-html, blaze-markup
     , bytestring, clientsession, cmdargs, conduit-extra, data-default
     , directory, filepath, hjsmin, hledger, hledger-lib, hspec
     , http-client, http-conduit, HUnit, json, parsec, safe, shakespeare
     , template-haskell, text, time, transformers, wai, wai-extra
     , wai-handler-launch, warp, yaml, yesod, yesod-core, yesod-form
     , yesod-static, yesod-test
     }:
     mkDerivation {
       pname = "hledger-web";
       version = "0.27";
       sha256 = "1vziin2x88s70v4hiskagflh62jfx21k0w365zyx3f89kfl2ywlj";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base base-compat blaze-html blaze-markup bytestring clientsession
         cmdargs conduit-extra data-default directory filepath hjsmin
         hledger hledger-lib http-client http-conduit HUnit json parsec safe
         shakespeare template-haskell text time transformers wai wai-extra
         wai-handler-launch warp yaml yesod yesod-core yesod-form
         yesod-static
       ];
       executableHaskellDepends = [
         base base-compat blaze-html blaze-markup bytestring clientsession
         cmdargs conduit-extra data-default directory filepath hjsmin
         hledger hledger-lib http-client http-conduit HUnit json parsec safe
         shakespeare template-haskell text time transformers wai wai-extra
         wai-handler-launch warp yaml yesod yesod-core yesod-form
         yesod-static
       ];
       testHaskellDepends = [
         base base-compat blaze-html blaze-markup bytestring clientsession
         cmdargs conduit-extra data-default directory filepath hjsmin
         hledger hledger-lib hspec http-client http-conduit HUnit json
         parsec safe shakespeare template-haskell text time transformers wai
         wai-extra wai-handler-launch warp yaml yesod yesod-core yesod-form
         yesod-static yesod-test
       ];
       homepage = "http://hledger.org";
       description = "Web interface for the hledger accounting tool";
       license = "GPL";
     }) {};
  "hlibgit2" = callPackage
    ({ mkDerivation, base, bindings-DSL, git, openssl, process, zlib }:
     mkDerivation {
       pname = "hlibgit2";
       version = "0.18.0.15";
       sha256 = "00an9ifmxa59hg9vkfwbgp8a4yjw0266hacc06ckdl9r3gvw2w0i";
       libraryHaskellDepends = [ base bindings-DSL zlib ];
       librarySystemDepends = [ openssl ];
       testHaskellDepends = [ base process ];
       testToolDepends = [ git ];
       description = "Low-level bindings to libgit2";
       license = stdenv.lib.licenses.mit;
     }) {inherit (pkgs) git; inherit (pkgs) openssl;};
  "hlibsass" = callPackage
    ({ mkDerivation, base, hspec, libsass }:
     mkDerivation {
       pname = "hlibsass";
       version = "0.1.5.0";
       sha256 = "1f2vs8c4xdw1c4493md7dnprljwvrmgb1s833ga626qws0arlgnf";
       libraryHaskellDepends = [ base ];
       librarySystemDepends = [ libsass ];
       testHaskellDepends = [ base hspec ];
       homepage = "https://github.com/jakubfijalkowski/hlibsass";
       description = "Low-level bindings to Libsass";
       license = stdenv.lib.licenses.mit;
     }) {inherit (pkgs) libsass;};
  "hlint" = callPackage
    ({ mkDerivation, ansi-terminal, base, cmdargs, containers, cpphs
     , directory, extra, filepath, haskell-src-exts, hscolour, process
     , refact, transformers, uniplate
     }:
     mkDerivation {
       pname = "hlint";
       version = "1.9.31";
       sha256 = "1y7s4pwb8dhrdm61mvr1clc70chka712q5sqavzdz3j1ga13ndfs";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         ansi-terminal base cmdargs containers cpphs directory extra
         filepath haskell-src-exts hscolour process refact transformers
         uniplate
       ];
       executableHaskellDepends = [ base ];
       homepage = "https://github.com/ndmitchell/hlint#readme";
       description = "Source code suggestions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hmatrix" = callPackage
    ({ mkDerivation, array, base, binary, blas, bytestring, deepseq
     , liblapack, random, split, storable-complex, vector
     }:
     mkDerivation {
       pname = "hmatrix";
       version = "0.17.0.1";
       sha256 = "132hi5xr7cc7wwkh9rf8iyvl6wwrwalvw857617rgzb271rx951d";
       revision = "1";
       editedCabalFile = "07gk8cj6ks1l2nzhqkm70437rfxzgq3970hnzcnvrdnamz3vjcqi";
       libraryHaskellDepends = [
         array base binary bytestring deepseq random split storable-complex
         vector
       ];
       librarySystemDepends = [ blas liblapack ];
       preConfigure = "sed -i hmatrix.cabal -e '/\\/usr\\//D'";
       homepage = "https://github.com/albertoruiz/hmatrix";
       description = "Numeric Linear Algebra";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) blas; inherit (pkgs) liblapack;};
  "hmatrix-gsl" = callPackage
    ({ mkDerivation, array, base, gsl, hmatrix, process, random, vector
     }:
     mkDerivation {
       pname = "hmatrix-gsl";
       version = "0.17.0.0";
       sha256 = "1jbqwn9d2nldc4klhy0n8gcxr889h0daw2mjfhwgksfy1bwfjl7w";
       libraryHaskellDepends = [
         array base hmatrix process random vector
       ];
       libraryPkgconfigDepends = [ gsl ];
       homepage = "https://github.com/albertoruiz/hmatrix";
       description = "Numerical computation";
       license = "GPL";
     }) {inherit (pkgs) gsl;};
  "hmatrix-gsl-stats" = callPackage
    ({ mkDerivation, base, binary, gsl, hmatrix, storable-complex
     , vector
     }:
     mkDerivation {
       pname = "hmatrix-gsl-stats";
       version = "0.4.1.3";
       sha256 = "0f3pzi494n4js0xiq5b38n07cnby0h9da6gmwywf8plvxm9271fl";
       libraryHaskellDepends = [
         base binary hmatrix storable-complex vector
       ];
       libraryPkgconfigDepends = [ gsl ];
       homepage = "http://code.haskell.org/hmatrix-gsl-stats";
       description = "GSL Statistics interface";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) gsl;};
  "hoauth2" = callPackage
    ({ mkDerivation, aeson, base, bytestring, containers, http-conduit
     , http-types, text, wai, warp
     }:
     mkDerivation {
       pname = "hoauth2";
       version = "0.5.3";
       sha256 = "0cikvr5nk3hhr1rm5j8i6h40y2n6qgajz8v7bh3204c02rx8c335";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base bytestring http-conduit http-types text
       ];
       executableHaskellDepends = [
         aeson base bytestring containers http-conduit http-types text wai
         warp
       ];
       homepage = "https://github.com/freizl/hoauth2";
       description = "Haskell OAuth2 authentication client";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "holy-project" = callPackage
    ({ mkDerivation, aeson, ansi-terminal, base, bytestring, Cabal
     , directory, filepath, hastache, http-conduit, HUnit, lens
     , lens-aeson, process, QuickCheck, random, smallcheck, split, syb
     , tasty, tasty-hunit, tasty-quickcheck, tasty-smallcheck, text
     , time, unix
     }:
     mkDerivation {
       pname = "holy-project";
       version = "0.2.0.1";
       sha256 = "05181blw3y9j2715rdm49y6mfcpgyihb6yjswhp231kr6x40zxmh";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson ansi-terminal base bytestring directory filepath hastache
         http-conduit lens lens-aeson process random split syb text time
         unix
       ];
       executableHaskellDepends = [
         aeson ansi-terminal base bytestring Cabal directory filepath
         hastache http-conduit HUnit lens lens-aeson process QuickCheck
         random smallcheck split syb tasty tasty-hunit tasty-quickcheck
         tasty-smallcheck text time unix
       ];
       testHaskellDepends = [
         base bytestring Cabal HUnit QuickCheck smallcheck tasty tasty-hunit
         tasty-quickcheck tasty-smallcheck
       ];
       homepage = "http://github.com/yogsototh/holy-project";
       description = "Start your Haskell project with cabal, git and tests";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hoogle" = callPackage
    ({ mkDerivation, aeson, array, base, binary, blaze-builder
     , bytestring, Cabal, case-insensitive, cmdargs, conduit, containers
     , deepseq, directory, filepath, haskell-src-exts, http-types
     , old-locale, parsec, process, QuickCheck, random, resourcet, safe
     , shake, tagsoup, temporary, text, time, transformers, uniplate
     , unix, vector, vector-algorithms, wai, warp
     }:
     mkDerivation {
       pname = "hoogle";
       version = "4.2.43";
       sha256 = "05vwz87a559cj8bc15gy7gn3sjckmw6ipi91i3cxag1nbmbdyc7b";
       revision = "1";
       editedCabalFile = "023h4ki129xfrw15k0vajkpixp0fzcwfsjr2zwfxhqhibgb78zmn";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         array base binary blaze-builder bytestring case-insensitive conduit
         containers deepseq directory filepath haskell-src-exts http-types
         parsec process QuickCheck random resourcet safe text transformers
         uniplate unix vector vector-algorithms wai
       ];
       executableHaskellDepends = [
         aeson array base binary blaze-builder bytestring Cabal
         case-insensitive cmdargs conduit containers deepseq directory
         filepath haskell-src-exts http-types old-locale parsec process
         QuickCheck random resourcet safe shake tagsoup text time
         transformers uniplate unix vector vector-algorithms wai warp
       ];
       testHaskellDepends = [ base directory filepath process temporary ];
       doCheck = false;
       testTarget = "--test-option=--no-net";
       homepage = "http://www.haskell.org/hoogle/";
       description = "Haskell API Search";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hopenpgp-tools" = callPackage
    ({ mkDerivation, aeson, alex, ansi-wl-pprint, array, attoparsec
     , base, base16-bytestring, binary, binary-conduit, bytestring
     , conduit, conduit-extra, containers, crypto-pubkey, cryptohash
     , directory, errors, fgl, graphviz, happy, hOpenPGP, ixset-typed
     , lens, monad-loops, openpgp-asciiarmor, optparse-applicative
     , resourcet, text, time, time-locale-compat, transformers
     , unordered-containers, wl-pprint-extras, wl-pprint-terminfo, yaml
     }:
     mkDerivation {
       pname = "hopenpgp-tools";
       version = "0.17";
       sha256 = "1rigkp89z8xma3519y0f0z7sjgq7r16dr9gdh5whailn144hc6q5";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         aeson ansi-wl-pprint array attoparsec base base16-bytestring binary
         binary-conduit bytestring conduit conduit-extra containers
         crypto-pubkey cryptohash directory errors fgl graphviz hOpenPGP
         ixset-typed lens monad-loops openpgp-asciiarmor
         optparse-applicative resourcet text time time-locale-compat
         transformers unordered-containers wl-pprint-extras
         wl-pprint-terminfo yaml
       ];
       executableToolDepends = [ alex happy ];
       doHaddock = false;
       homepage = "http://floss.scru.org/hopenpgp-tools";
       description = "hOpenPGP-based command-line tools";
       license = "unknown";
     }) {};
  "hopenssl" = callPackage
    ({ mkDerivation, base, bytestring, mtl, openssl }:
     mkDerivation {
       pname = "hopenssl";
       version = "1.7";
       sha256 = "1zs69kxwz5fnm62mdscbpfz78vwnda75gyx1vxmmlisfhfslprly";
       libraryHaskellDepends = [ base bytestring mtl ];
       librarySystemDepends = [ openssl ];
       homepage = "http://github.com/peti/hopenssl";
       description = "FFI bindings to OpenSSL's EVP digest interface";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) openssl;};
  "hostname" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "hostname";
       version = "1.0";
       sha256 = "0p6gm4328946qxc295zb6vhwhf07l1fma82vd0siylnsnsqxlhwv";
       libraryHaskellDepends = [ base ];
       description = "A very simple package providing a cross-platform means of determining the hostname";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hostname-validate" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring }:
     mkDerivation {
       pname = "hostname-validate";
       version = "1.0.0";
       sha256 = "0my8g4kqf9mz7ii79ff53rwkx3yv9kkn4jbm60q4b7g1rzhb3bvz";
       libraryHaskellDepends = [ attoparsec base bytestring ];
       description = "Validate hostnames e.g. localhost or foo.co.uk.";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hourglass" = callPackage
    ({ mkDerivation, base, bytestring, criterion, deepseq, mtl
     , old-locale, tasty, tasty-hunit, tasty-quickcheck, time
     }:
     mkDerivation {
       pname = "hourglass";
       version = "0.2.10";
       sha256 = "104d1yd84hclprg740nkz60vx589mnm094zriw6zczbgg8nkclym";
       libraryHaskellDepends = [ base deepseq ];
       testHaskellDepends = [
         base deepseq mtl old-locale tasty tasty-hunit tasty-quickcheck time
       ];
       benchmarkHaskellDepends = [
         base bytestring criterion deepseq mtl old-locale time
       ];
       homepage = "https://github.com/vincenthz/hs-hourglass";
       description = "simple performant time related library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hpc-coveralls" = callPackage
    ({ mkDerivation, aeson, async, base, bytestring, Cabal, cmdargs
     , containers, curl, directory, directory-tree, hpc, HUnit, process
     , pureMD5, regex-posix, retry, safe, split, transformers
     }:
     mkDerivation {
       pname = "hpc-coveralls";
       version = "1.0.3";
       sha256 = "0d3p55hpyw8xpllxb47nk7njzf36kn6p6p1d9ldny7hwl0df1vj4";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base bytestring Cabal cmdargs containers curl directory
         directory-tree hpc process pureMD5 retry safe split transformers
       ];
       executableHaskellDepends = [
         aeson async base bytestring Cabal cmdargs containers curl directory
         directory-tree hpc process pureMD5 regex-posix retry safe split
         transformers
       ];
       testHaskellDepends = [ base HUnit ];
       homepage = "https://github.com/guillaume-nargeot/hpc-coveralls";
       description = "Coveralls.io support for Haskell.";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hprotoc" = callPackage
    ({ mkDerivation, alex, array, base, binary, bytestring, containers
     , directory, filepath, haskell-src-exts, mtl, parsec
     , protocol-buffers, protocol-buffers-descriptor, utf8-string
     }:
     mkDerivation {
       pname = "hprotoc";
       version = "2.1.12";
       sha256 = "1p8sxqwywaagikxd4lk0ckc1cnpdis4idbz2qn323bcd1bmlr769";
       revision = "1";
       editedCabalFile = "071q554m6p2wvxrwambfjwlfmjchaxh8aqdfpxnz6h5k8azvd7bz";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         array base binary bytestring containers directory filepath
         haskell-src-exts mtl parsec protocol-buffers
         protocol-buffers-descriptor utf8-string
       ];
       libraryToolDepends = [ alex ];
       executableHaskellDepends = [
         array base binary bytestring containers directory filepath
         haskell-src-exts mtl parsec protocol-buffers
         protocol-buffers-descriptor utf8-string
       ];
       executableToolDepends = [ alex ];
       homepage = "https://github.com/k-bx/protocol-buffers";
       description = "Parse Google Protocol Buffer specifications";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hs-bibutils" = callPackage
    ({ mkDerivation, base, syb }:
     mkDerivation {
       pname = "hs-bibutils";
       version = "5.5";
       sha256 = "0pf5lh179rw9jkmw16ss3kiwydlj6zgfk868mjl5s57kx55z7ycm";
       libraryHaskellDepends = [ base syb ];
       homepage = "http://istitutocolli.org/repos/hs-bibutils/";
       description = "Haskell bindings to bibutils, the bibliography conversion utilities";
       license = "GPL";
     }) {};
  "hsass" = callPackage
    ({ mkDerivation, base, bytestring, data-default-class, filepath
     , hlibsass, hspec, hspec-discover, monad-loops, temporary
     , transformers
     }:
     mkDerivation {
       pname = "hsass";
       version = "0.4.0";
       sha256 = "178gxjv7aar8b0nwfrglavsfbrdjkwvkjq86k5b3j877047aybsi";
       libraryHaskellDepends = [
         base bytestring data-default-class filepath hlibsass monad-loops
         transformers
       ];
       testHaskellDepends = [
         base bytestring data-default-class hspec hspec-discover temporary
       ];
       homepage = "https://github.com/jakubfijalkowski/hsass";
       description = "Integrating Sass into Haskell applications";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hscolour" = callPackage
    ({ mkDerivation, base, containers }:
     mkDerivation {
       pname = "hscolour";
       version = "1.23";
       sha256 = "1c4i2zpami8g3w9949nm3f92g7xwh5c94vkx658zz7ihrjp7w5lp";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base containers ];
       executableHaskellDepends = [ base containers ];
       homepage = "http://code.haskell.org/~malcolm/hscolour/";
       description = "Colourise Haskell code";
       license = "GPL";
     }) {};
  "hse-cpp" = callPackage
    ({ mkDerivation, base, cpphs, haskell-src-exts }:
     mkDerivation {
       pname = "hse-cpp";
       version = "0.1";
       sha256 = "0f1bgi1hnpnry1pm7jhi626afdvymzy7k0a70n07n41js46pjxd0";
       revision = "1";
       editedCabalFile = "0jrav7kl7a3a421xhaqh03jvj7qsgscpi93fpxss0q4pgq98gmcy";
       libraryHaskellDepends = [ base cpphs haskell-src-exts ];
       description = "Preprocess+parse haskell code";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hsebaysdk" = callPackage
    ({ mkDerivation, aeson, base, bytestring, http-client, http-types
     , text, time, transformers, unordered-containers
     }:
     mkDerivation {
       pname = "hsebaysdk";
       version = "0.3.0.1";
       sha256 = "0yb27xn6kbw22aqshlk6a29xvdiyzf3yv48nlywc78xbrli73yaj";
       libraryHaskellDepends = [
         aeson base bytestring http-client http-types text time transformers
         unordered-containers
       ];
       homepage = "https://github.com/creichert/hsebaysdk";
       description = "Haskell eBay SDK";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hsemail" = callPackage
    ({ mkDerivation, base, doctest, hspec, mtl, old-time, parsec }:
     mkDerivation {
       pname = "hsemail";
       version = "1.7.7";
       sha256 = "16wqrpzi5njv26za1rckn74jsqmyswndb6k38yz1567h1y4w7ai5";
       libraryHaskellDepends = [ base mtl old-time parsec ];
       testHaskellDepends = [ base doctest hspec old-time parsec ];
       homepage = "http://github.com/peti/hsemail";
       description = "Internet Message Parsers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hsexif" = callPackage
    ({ mkDerivation, base, binary, bytestring, containers, hspec, HUnit
     , iconv, text, time
     }:
     mkDerivation {
       pname = "hsexif";
       version = "0.6.0.8";
       sha256 = "143m3k3av09pliga6s3hfc8z7h1sb2dpv3n4xvk2l9ck95448xmd";
       libraryHaskellDepends = [
         base binary bytestring containers iconv text time
       ];
       testHaskellDepends = [
         base binary bytestring containers hspec HUnit iconv text time
       ];
       homepage = "https://github.com/emmanueltouzery/hsexif";
       description = "EXIF handling library in pure Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hsignal" = callPackage
    ({ mkDerivation, array, base, binary, blas, bytestring, gsl
     , hmatrix, hmatrix-gsl, hmatrix-gsl-stats, hstatistics, liblapack
     , mtl, storable-complex, vector
     }:
     mkDerivation {
       pname = "hsignal";
       version = "0.2.7.4";
       sha256 = "0fpmnknpwpl3z4f6cqgkpid9agb6d45d4cqbv8sl8fnifv53c119";
       libraryHaskellDepends = [
         array base binary bytestring hmatrix hmatrix-gsl hmatrix-gsl-stats
         hstatistics mtl storable-complex vector
       ];
       librarySystemDepends = [ blas liblapack ];
       libraryPkgconfigDepends = [ gsl ];
       homepage = "http://code.haskell.org/hsignal";
       description = "Signal processing and EEG data analysis";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) blas; inherit (pkgs) gsl;
         inherit (pkgs) liblapack;};
  "hslogger" = callPackage
    ({ mkDerivation, base, containers, directory, mtl, network
     , old-locale, process, time, unix
     }:
     mkDerivation {
       pname = "hslogger";
       version = "1.2.9";
       sha256 = "0xml1xgkj4hjjxypnjiia7y330a0nh5fcnkwhmnrwsw7hckwqqmy";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base containers directory mtl network old-locale process time unix
       ];
       homepage = "http://software.complete.org/hslogger";
       description = "Versatile logging framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hslua" = callPackage
    ({ mkDerivation, base, bytestring, hspec, hspec-contrib, HUnit
     , QuickCheck, quickcheck-instances, text
     }:
     mkDerivation {
       pname = "hslua";
       version = "0.4.1";
       sha256 = "0gqp6qhp4v24kzv2j49kgk7bxqzw0w10x0zr0r2j9wkfavqb9wid";
       libraryHaskellDepends = [ base bytestring ];
       testHaskellDepends = [
         base bytestring hspec hspec-contrib HUnit QuickCheck
         quickcheck-instances text
       ];
       description = "A Lua language interpreter embedding in Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hsndfile" = callPackage
    ({ mkDerivation, base, c2hs, libsndfile }:
     mkDerivation {
       pname = "hsndfile";
       version = "0.8.0";
       sha256 = "1ywfarzqzxa36irzk4sb15j5ywq1a0ypv9yr02abl3bbqbs7wzp9";
       libraryHaskellDepends = [ base ];
       librarySystemDepends = [ libsndfile ];
       libraryToolDepends = [ c2hs ];
       homepage = "http://haskell.org/haskellwiki/Hsndfile";
       description = "Haskell bindings for libsndfile";
       license = stdenv.lib.licenses.lgpl21;
     }) {inherit (pkgs) libsndfile;};
  "hsndfile-vector" = callPackage
    ({ mkDerivation, base, hsndfile, vector }:
     mkDerivation {
       pname = "hsndfile-vector";
       version = "0.5.2";
       sha256 = "1598bf87llbiri1qh8zirhbsd94c9vhd41lf9vialqrykbmi3zig";
       libraryHaskellDepends = [ base hsndfile vector ];
       homepage = "http://haskell.org/haskellwiki/Hsndfile";
       description = "Haskell bindings for libsndfile (Data.Vector interface)";
       license = stdenv.lib.licenses.lgpl2;
     }) {};
  "hsp" = callPackage
    ({ mkDerivation, base, mtl, text }:
     mkDerivation {
       pname = "hsp";
       version = "0.10.0";
       sha256 = "1ayfywgrlmzivsq6lirmgvl65x1shf8041lzw2yh245rkmd91lsf";
       libraryHaskellDepends = [ base mtl text ];
       homepage = "http://hub.darcs.net/nibro/hsp";
       description = "Haskell Server Pages is a library for writing dynamic server-side web pages";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hspec" = callPackage
    ({ mkDerivation, base, directory, hspec-core, hspec-discover
     , hspec-expectations, hspec-meta, HUnit, QuickCheck, stringbuilder
     , transformers
     }:
     mkDerivation {
       pname = "hspec";
       version = "2.2.2";
       sha256 = "1nf9jyr6p9iln1f3bg86qqxx8pnjiqpl4f97xhiiphqhxdphwcci";
       revision = "1";
       editedCabalFile = "1mmwggchfzq16rgck34ml7v7kb5cfasfb7f4zcbq8z150c553z8k";
       libraryHaskellDepends = [
         base hspec-core hspec-discover hspec-expectations HUnit QuickCheck
         transformers
       ];
       testHaskellDepends = [
         base directory hspec-core hspec-meta stringbuilder
       ];
       homepage = "http://hspec.github.io/";
       description = "A Testing Framework for Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hspec-attoparsec" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, hspec
     , hspec-expectations, text
     }:
     mkDerivation {
       pname = "hspec-attoparsec";
       version = "0.1.0.2";
       sha256 = "0r7v6x0k5r8jxl0rnsq8h3gqhbiimsic3kiphn6dxaw954zqnypa";
       libraryHaskellDepends = [
         attoparsec base bytestring hspec-expectations text
       ];
       testHaskellDepends = [
         attoparsec base bytestring hspec hspec-expectations text
       ];
       homepage = "http://github.com/alpmestan/hspec-attoparsec";
       description = "Utility functions for testing your attoparsec parsers with hspec";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hspec-contrib" = callPackage
    ({ mkDerivation, base, hspec, hspec-core, HUnit, QuickCheck }:
     mkDerivation {
       pname = "hspec-contrib";
       version = "0.3.0";
       sha256 = "006syw8xagfhsx06ws9ywig1qx5lk4cgl7sq6pbid1s64c72mxn4";
       revision = "1";
       editedCabalFile = "0p629jlqkivzdxfzzvv1g5gndyc6kc3b724k45fwfmvqiz786n1k";
       libraryHaskellDepends = [ base hspec-core HUnit ];
       testHaskellDepends = [ base hspec hspec-core HUnit QuickCheck ];
       homepage = "http://hspec.github.io/";
       description = "Contributed functionality for Hspec";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hspec-core" = callPackage
    ({ mkDerivation, ansi-terminal, async, base, deepseq
     , hspec-expectations, hspec-meta, HUnit, process, QuickCheck
     , quickcheck-io, random, setenv, silently, tf-random, time
     , transformers
     }:
     mkDerivation {
       pname = "hspec-core";
       version = "2.2.2";
       sha256 = "16238rni6hynv97fschiwk3s5vhi23dxp1yihw83g0fyp0slhd01";
       revision = "4";
       editedCabalFile = "0rhxapyilhiarcpkzkgrdpz1i30lk5v2amaiq8776rl233b0wymg";
       libraryHaskellDepends = [
         ansi-terminal async base deepseq hspec-expectations HUnit
         QuickCheck quickcheck-io random setenv tf-random time transformers
       ];
       testHaskellDepends = [
         ansi-terminal async base deepseq hspec-expectations hspec-meta
         HUnit process QuickCheck quickcheck-io random setenv silently
         tf-random time transformers
       ];
       homepage = "http://hspec.github.io/";
       description = "A Testing Framework for Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hspec-discover" = callPackage
    ({ mkDerivation, base, directory, filepath, hspec-meta }:
     mkDerivation {
       pname = "hspec-discover";
       version = "2.2.2";
       sha256 = "07z8abkkbj6jsy5qbxgnj2dd83y3laj7pd1d37c7llwbxrlccya2";
       isLibrary = true;
       isExecutable = true;
       executableHaskellDepends = [ base directory filepath ];
       testHaskellDepends = [ base directory filepath hspec-meta ];
       doHaddock = false;
       homepage = "http://hspec.github.io/";
       description = "Automatically discover and run Hspec tests";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hspec-expectations" = callPackage
    ({ mkDerivation, base, HUnit }:
     mkDerivation {
       pname = "hspec-expectations";
       version = "0.7.2";
       sha256 = "1w56jiqfyl237sr207gh3b0l8sr9layy0mdsgd5wknzb49mif6ip";
       libraryHaskellDepends = [ base HUnit ];
       homepage = "https://github.com/sol/hspec-expectations#readme";
       description = "Catchy combinators for HUnit";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hspec-expectations-pretty-diff" = callPackage
    ({ mkDerivation, aeson, ansi-terminal, base, Diff, haskell-src-exts
     , hindent, hscolour, hspec, HUnit, text
     }:
     mkDerivation {
       pname = "hspec-expectations-pretty-diff";
       version = "0.7.2.3";
       sha256 = "0br06wdyqarp1wg7csm250w52v1bv14lh9jmn8aags18rxzbqhrm";
       libraryHaskellDepends = [
         ansi-terminal base Diff haskell-src-exts hindent hscolour HUnit
         text
       ];
       testHaskellDepends = [ aeson base hspec HUnit text ];
       homepage = "https://github.com/myfreeweb/hspec-expectations-pretty-diff#readme";
       description = "Catchy combinators for HUnit";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hspec-jenkins" = callPackage
    ({ mkDerivation, base, blaze-markup, hspec }:
     mkDerivation {
       pname = "hspec-jenkins";
       version = "0.1.1";
       sha256 = "16aql0fyssc16z85isskccq93dj5i1pydblnf2q1np7z6pl1azy2";
       libraryHaskellDepends = [ base blaze-markup hspec ];
       homepage = "https://github.com/worksap-ate/hspec-jenkins";
       description = "Jenkins-friendly XML formatter for Hspec";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hspec-megaparsec" = callPackage
    ({ mkDerivation, base, hspec, hspec-expectations, megaparsec }:
     mkDerivation {
       pname = "hspec-megaparsec";
       version = "0.1.1";
       sha256 = "1icm4xd0xq75caq8gd4xbx8zhc0zw3yavqbfiaxb18zrvwxnix2g";
       revision = "1";
       editedCabalFile = "1f6gar0724dm1w23ldrr7gsiybm2nwzwd4znpr0088z8x7pqs9mm";
       libraryHaskellDepends = [ base hspec-expectations megaparsec ];
       testHaskellDepends = [ base hspec hspec-expectations megaparsec ];
       homepage = "https://github.com/mrkkrp/hspec-megaparsec";
       description = "Utility functions for testing Megaparsec parsers with Hspec";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hspec-meta" = callPackage
    ({ mkDerivation, ansi-terminal, async, base, deepseq, directory
     , filepath, hspec-expectations, HUnit, QuickCheck, quickcheck-io
     , random, setenv, time, transformers
     }:
     mkDerivation {
       pname = "hspec-meta";
       version = "2.2.1";
       sha256 = "1m1pkrxiglxzwv8gdj5jr1bdbhxvvg6sbl9m61w4565d7k1m8yxa";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         ansi-terminal async base deepseq hspec-expectations HUnit
         QuickCheck quickcheck-io random setenv time transformers
       ];
       executableHaskellDepends = [ base directory filepath ];
       homepage = "http://hspec.github.io/";
       description = "A version of Hspec which is used to test Hspec itself";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hspec-setup" = callPackage
    ({ mkDerivation, base, directory, filepath, process, projectroot }:
     mkDerivation {
       pname = "hspec-setup";
       version = "0.1.1.0";
       sha256 = "0ap1wwf0wai24lsc9xxcwwm6rxibfn77crksb4bhjcwmcmjmf7lg";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         base directory filepath process projectroot
       ];
       doHaddock = false;
       homepage = "https://github.com/yamadapc/haskell-hspec-setup";
       description = "Add an hspec test-suite in one command";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hspec-smallcheck" = callPackage
    ({ mkDerivation, base, hspec, hspec-core, QuickCheck, smallcheck }:
     mkDerivation {
       pname = "hspec-smallcheck";
       version = "0.4.1";
       sha256 = "1xf07xvldp0cc6694k6hzals7mr4l5148skjs9a9arsqmlad1pf5";
       revision = "1";
       editedCabalFile = "1xn5adm1fxrzmsq51dqif36gga6b5950jv3m5ffm06axv93y0gxm";
       libraryHaskellDepends = [ base hspec-core smallcheck ];
       testHaskellDepends = [
         base hspec hspec-core QuickCheck smallcheck
       ];
       homepage = "http://hspec.github.io/";
       description = "SmallCheck support for the Hspec testing framework";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hspec-snap" = callPackage
    ({ mkDerivation, aeson, base, bytestring, containers
     , digestive-functors, directory, HandsomeSoup, hspec, hspec-core
     , hxt, lens, mtl, snap, snap-core, text, transformers
     }:
     mkDerivation {
       pname = "hspec-snap";
       version = "0.4.0.0";
       sha256 = "11kxmgz0wvvgwf7m2dls90aihk86dmvg56bh7143hbq9rr2vj64d";
       libraryHaskellDepends = [
         aeson base bytestring containers digestive-functors HandsomeSoup
         hspec hspec-core hxt lens mtl snap snap-core text transformers
       ];
       testHaskellDepends = [
         aeson base bytestring containers digestive-functors directory
         HandsomeSoup hspec hspec-core hxt lens mtl snap snap-core text
         transformers
       ];
       homepage = "https://github.com/dbp/hspec-snap";
       description = "A library for testing with Hspec and the Snap Web Framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hspec-wai" = callPackage
    ({ mkDerivation, base, base-compat, bytestring, case-insensitive
     , hspec, hspec-core, hspec-expectations, http-types, QuickCheck
     , text, transformers, wai, wai-extra, with-location
     }:
     mkDerivation {
       pname = "hspec-wai";
       version = "0.6.5";
       sha256 = "09cm9ygh3dssy4sq4ix8rkdpy8fa4x70bqgv0lrpwbs1p2i8qvqq";
       revision = "1";
       editedCabalFile = "0mkr2c9v5v4kdgx7m53wd4mz4zfnr85rn3qf7idl9q9v1pnaw4ck";
       libraryHaskellDepends = [
         base base-compat bytestring case-insensitive hspec-core
         hspec-expectations http-types QuickCheck text transformers wai
         wai-extra with-location
       ];
       testHaskellDepends = [
         base base-compat bytestring case-insensitive hspec hspec-core
         hspec-expectations http-types QuickCheck text transformers wai
         wai-extra with-location
       ];
       homepage = "https://github.com/hspec/hspec-wai#readme";
       description = "Experimental Hspec support for testing WAI applications";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hspec-wai-json" = callPackage
    ({ mkDerivation, aeson, aeson-qq, base, bytestring
     , case-insensitive, hspec, hspec-wai, template-haskell
     }:
     mkDerivation {
       pname = "hspec-wai-json";
       version = "0.6.1";
       sha256 = "0sbw6iddywxdg4n8npnz6m0lmcf9nrq3ib7kckpx7shpq9khwgih";
       libraryHaskellDepends = [
         aeson aeson-qq base bytestring case-insensitive hspec-wai
         template-haskell
       ];
       testHaskellDepends = [ base hspec hspec-wai ];
       homepage = "https://github.com/hspec/hspec-wai#readme";
       description = "Testing JSON APIs with hspec-wai";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hspec-webdriver" = callPackage
    ({ mkDerivation, base, data-default, hashable, hspec, hspec-core
     , HUnit, lifted-base, stm, text, transformers, unordered-containers
     , webdriver
     }:
     mkDerivation {
       pname = "hspec-webdriver";
       version = "1.1.0";
       sha256 = "0sbfd8c10rqkb94p2zz1173dqfmir8rmq6n2nx71w3y2ypar1j22";
       libraryHaskellDepends = [
         base data-default hashable hspec hspec-core HUnit lifted-base stm
         text transformers unordered-containers webdriver
       ];
       homepage = "https://bitbucket.org/wuzzeb/webdriver-utils";
       description = "Write end2end web application tests using webdriver and hspec";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hstatistics" = callPackage
    ({ mkDerivation, array, base, hmatrix, hmatrix-gsl-stats, random
     , vector
     }:
     mkDerivation {
       pname = "hstatistics";
       version = "0.2.5.3";
       sha256 = "0b9ah4b927gy7yib4yn83i0i10qrzk2c2pk9rb2mmlkbryfvza6q";
       libraryHaskellDepends = [
         array base hmatrix hmatrix-gsl-stats random vector
       ];
       homepage = "http://code.haskell.org/hstatistics";
       description = "Statistics";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hstatsd" = callPackage
    ({ mkDerivation, base, bytestring, mtl, network, text }:
     mkDerivation {
       pname = "hstatsd";
       version = "0.1";
       sha256 = "092q52yyb1xdji1y72bdcgvp8by2w1z9j717sl1gmh2p89cpjrs4";
       libraryHaskellDepends = [ base bytestring mtl network text ];
       homepage = "https://github.com/mokus0/hstatsd";
       description = "Quick and dirty statsd interface";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "hsx-jmacro" = callPackage
    ({ mkDerivation, base, hsp, jmacro, mtl, text, wl-pprint-text }:
     mkDerivation {
       pname = "hsx-jmacro";
       version = "7.3.7";
       sha256 = "1afa6flsrp3myvwqh3sibk05lcbsdhp3xsdmx38631aprxmz29f4";
       libraryHaskellDepends = [
         base hsp jmacro mtl text wl-pprint-text
       ];
       homepage = "http://www.happstack.com/";
       description = "hsp+jmacro support";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hsx2hs" = callPackage
    ({ mkDerivation, base, bytestring, haskell-src-exts
     , haskell-src-meta, mtl, template-haskell, utf8-string
     }:
     mkDerivation {
       pname = "hsx2hs";
       version = "0.13.4";
       sha256 = "1pq7mrd8zkmiy7na98nc85i0lkx5wssn3gji9yayfx1l6ydwa24m";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring haskell-src-exts haskell-src-meta mtl
         template-haskell utf8-string
       ];
       homepage = "https://github.com/seereason/hsx2hs";
       description = "HSX (Haskell Source with XML) allows literal XML syntax in Haskell source code";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hsyslog" = callPackage
    ({ mkDerivation, base, doctest }:
     mkDerivation {
       pname = "hsyslog";
       version = "2.0";
       sha256 = "02v698grn43bvikqhqiz9ys8x2amngdmhvl3i0ar9203p2x8q3pq";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base doctest ];
       homepage = "http://github.com/peti/hsyslog";
       description = "FFI interface to syslog(3) from POSIX.1-2001";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "htaglib" = callPackage
    ({ mkDerivation, base, bytestring, directory, filepath, HUnit
     , taglib, test-framework, test-framework-hunit, text
     }:
     mkDerivation {
       pname = "htaglib";
       version = "1.0.2";
       sha256 = "0y2l70jrfg4p68kpbly9a1bazf8bdgx6wx9qllk09wxlixbi1wfv";
       libraryHaskellDepends = [ base bytestring text ];
       librarySystemDepends = [ taglib ];
       testHaskellDepends = [
         base directory filepath HUnit test-framework test-framework-hunit
       ];
       homepage = "https://github.com/mrkkrp/htaglib";
       description = "Bindings to TagLib, audio meta-data library";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) taglib;};
  "html" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "html";
       version = "1.0.1.2";
       sha256 = "0q9hmfii62kc82ijlg238fxrzxhsivn42x5wd6ffcr9xldg4jd8c";
       libraryHaskellDepends = [ base ];
       description = "HTML combinator library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "html-conduit" = callPackage
    ({ mkDerivation, base, bytestring, conduit, conduit-extra
     , containers, hspec, HUnit, resourcet, tagstream-conduit, text
     , transformers, xml-conduit, xml-types
     }:
     mkDerivation {
       pname = "html-conduit";
       version = "1.2.1";
       sha256 = "0agz1izciq703qrlw39gv5jg6l1b2drxw0ldj5hmdzb8faa7c75v";
       libraryHaskellDepends = [
         base bytestring conduit conduit-extra containers resourcet
         tagstream-conduit text transformers xml-conduit xml-types
       ];
       testHaskellDepends = [
         base bytestring containers hspec HUnit xml-conduit
       ];
       homepage = "https://github.com/snoyberg/xml";
       description = "Parse HTML documents using xml-conduit datatypes";
       license = stdenv.lib.licenses.mit;
     }) {};
  "http-accept" = callPackage
    ({ mkDerivation, base, bytestring }:
     mkDerivation {
       pname = "http-accept";
       version = "0.2";
       sha256 = "1ivwkwr9jgbf6m2dv4gaw5vxrz2vm5wzz65ncl5jpma6wimwh4ii";
       libraryHaskellDepends = [ base bytestring ];
       homepage = "https://github.com/singpolyma/http-accept";
       description = "Functions for working with HTTP Accept headers";
       license = "unknown";
     }) {};
  "http-api-data" = callPackage
    ({ mkDerivation, base, bytestring, doctest, Glob, hspec, HUnit
     , QuickCheck, text, time, time-locale-compat
     }:
     mkDerivation {
       pname = "http-api-data";
       version = "0.2.2";
       sha256 = "1p25pjw1krx1m4hwkrc3xx42za4s7nam28xl0b7f4f9s1y6a79pv";
       revision = "1";
       editedCabalFile = "0gsdkkk5vn9swjlqjp6vg1n48xk0206g7xwqvbxg7g3ljx99by8h";
       libraryHaskellDepends = [
         base bytestring text time time-locale-compat
       ];
       testHaskellDepends = [
         base doctest Glob hspec HUnit QuickCheck text time
       ];
       homepage = "http://github.com/fizruk/http-api-data";
       description = "Converting to/from HTTP API data like URL pieces, headers and query parameters";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "http-client" = callPackage
    ({ mkDerivation, array, async, base, base64-bytestring
     , blaze-builder, bytestring, case-insensitive, containers, cookie
     , data-default-class, deepseq, directory, exceptions, filepath
     , ghc-prim, hspec, http-types, mime-types, monad-control, network
     , network-uri, random, streaming-commons, text, time, transformers
     , zlib
     }:
     mkDerivation {
       pname = "http-client";
       version = "0.4.27";
       sha256 = "12x84gysgjajgwyc75frvr1q8c81fldwcab4k9xq8w24lhf7601p";
       libraryHaskellDepends = [
         array base base64-bytestring blaze-builder bytestring
         case-insensitive containers cookie data-default-class deepseq
         exceptions filepath ghc-prim http-types mime-types network
         network-uri random streaming-commons text time transformers
       ];
       testHaskellDepends = [
         async base base64-bytestring blaze-builder bytestring
         case-insensitive containers deepseq directory hspec http-types
         monad-control network network-uri streaming-commons text time
         transformers zlib
       ];
       homepage = "https://github.com/snoyberg/http-client";
       description = "An HTTP client engine, intended as a base layer for more user-friendly packages";
       license = stdenv.lib.licenses.mit;
     }) {};
  "http-client-openssl" = callPackage
    ({ mkDerivation, base, HsOpenSSL, hspec, http-client, http-types
     , network
     }:
     mkDerivation {
       pname = "http-client-openssl";
       version = "0.2.0.1";
       sha256 = "1mg2gn51ixb68wd8mm66kcj4627q6gj64810wsa1axy3jmk5qym3";
       libraryHaskellDepends = [ base HsOpenSSL http-client network ];
       testHaskellDepends = [
         base HsOpenSSL hspec http-client http-types
       ];
       homepage = "https://github.com/snoyberg/http-client";
       description = "http-client backend using the OpenSSL library";
       license = stdenv.lib.licenses.mit;
     }) {};
  "http-client-tls" = callPackage
    ({ mkDerivation, base, bytestring, connection, data-default-class
     , hspec, http-client, http-types, network, tls
     }:
     mkDerivation {
       pname = "http-client-tls";
       version = "0.2.2";
       sha256 = "0a01r05h5fxswyn6k6cgqgak4scqjan72hyy5wbdqzzhl4rmh7j5";
       revision = "1";
       editedCabalFile = "01ycp67hb0vlk4l43fv53vspw4izp9mjzapagfzamrahlcdps85b";
       libraryHaskellDepends = [
         base bytestring connection data-default-class http-client network
         tls
       ];
       testHaskellDepends = [ base hspec http-client http-types ];
       homepage = "https://github.com/snoyberg/http-client";
       description = "http-client backend using the connection package and tls library";
       license = stdenv.lib.licenses.mit;
     }) {};
  "http-common" = callPackage
    ({ mkDerivation, base, base64-bytestring, blaze-builder, bytestring
     , case-insensitive, directory, mtl, network, text, transformers
     , unordered-containers
     }:
     mkDerivation {
       pname = "http-common";
       version = "0.8.2.0";
       sha256 = "14s5a178sb2vm5k00rs21760mds5dz2gs10k9iyn22h01mxyf599";
       libraryHaskellDepends = [
         base base64-bytestring blaze-builder bytestring case-insensitive
         directory mtl network text transformers unordered-containers
       ];
       homepage = "http://research.operationaldynamics.com/projects/http-streams/";
       description = "Common types for HTTP clients and servers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "http-conduit" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring, case-insensitive
     , conduit, conduit-extra, connection, cookie, data-default-class
     , hspec, http-client, http-client-tls, http-types, HUnit
     , lifted-base, monad-control, mtl, network, resourcet
     , streaming-commons, text, time, transformers, utf8-string, wai
     , wai-conduit, warp, warp-tls
     }:
     mkDerivation {
       pname = "http-conduit";
       version = "2.1.8";
       sha256 = "0ggah3wka81f9bf08wq01xfgnqf8vn2mq3269acr1pg6kvm8c3am";
       revision = "2";
       editedCabalFile = "0zrcjpx6m8lcrsf9b49ywsfbgn4xdfn9l0ma1q98sqmr1hqp63cp";
       libraryHaskellDepends = [
         base bytestring conduit http-client http-client-tls http-types
         lifted-base monad-control mtl resourcet transformers
       ];
       testHaskellDepends = [
         base blaze-builder bytestring case-insensitive conduit
         conduit-extra connection cookie data-default-class hspec
         http-client http-types HUnit lifted-base network streaming-commons
         text time transformers utf8-string wai wai-conduit warp warp-tls
       ];
       homepage = "http://www.yesodweb.com/book/http-conduit";
       description = "HTTP client package with conduit interface and HTTPS support";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "http-date" = callPackage
    ({ mkDerivation, array, attoparsec, base, bytestring, doctest
     , hspec, old-locale, time
     }:
     mkDerivation {
       pname = "http-date";
       version = "0.0.6.1";
       sha256 = "0dknh28kyarnzqrsc80ssalxjrq0qbv7ir49247p2grb7rh0dqgj";
       libraryHaskellDepends = [ array attoparsec base bytestring ];
       testHaskellDepends = [
         base bytestring doctest hspec old-locale time
       ];
       description = "HTTP Date parser/formatter";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "http-link-header" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring
     , bytestring-conversion, criterion, directory, errors, hspec
     , hspec-attoparsec, network-uri, QuickCheck, text, transformers
     }:
     mkDerivation {
       pname = "http-link-header";
       version = "1.0.1";
       sha256 = "1dz98b1wrc64lcw8b0rlw00nzxvm2356v329ylaldqizdlsv72wh";
       libraryHaskellDepends = [
         attoparsec base bytestring bytestring-conversion errors network-uri
         text
       ];
       testHaskellDepends = [
         base hspec hspec-attoparsec QuickCheck text
       ];
       benchmarkHaskellDepends = [
         base criterion directory text transformers
       ];
       homepage = "https://github.com/myfreeweb/http-link-header";
       description = "A parser and writer for the HTTP Link header as specified in RFC 5988 \"Web Linking\"";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "http-media" = callPackage
    ({ mkDerivation, base, bytestring, case-insensitive, containers
     , QuickCheck, test-framework, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "http-media";
       version = "0.6.3";
       sha256 = "1mnsn6lsl4hr1iclmzc831q04jgv3sm12cqwkzmzvw1f7bij9b1q";
       libraryHaskellDepends = [
         base bytestring case-insensitive containers
       ];
       testHaskellDepends = [
         base bytestring case-insensitive containers QuickCheck
         test-framework test-framework-quickcheck2
       ];
       doCheck = false;
       homepage = "https://github.com/zmthy/http-media";
       description = "Processing HTTP Content-Type and Accept headers";
       license = stdenv.lib.licenses.mit;
     }) {};
  "http-reverse-proxy" = callPackage
    ({ mkDerivation, async, base, blaze-builder, bytestring
     , case-insensitive, conduit, conduit-extra, containers
     , data-default-class, hspec, http-client, http-conduit, http-types
     , lifted-base, monad-control, network, resourcet, streaming-commons
     , text, transformers, wai, wai-logger, warp, word8
     }:
     mkDerivation {
       pname = "http-reverse-proxy";
       version = "0.4.3";
       sha256 = "0ifzrp8lgyykgwdvjz64qd09is3b4dzz08r2jg78kj6zb6ybhxj7";
       revision = "1";
       editedCabalFile = "1an3mf0283ycb0ybabw561n8aj3dypfxcq50q2h1rpzbsjzr5bd0";
       libraryHaskellDepends = [
         async base blaze-builder bytestring case-insensitive conduit
         conduit-extra containers data-default-class http-client http-types
         lifted-base monad-control network resourcet streaming-commons text
         transformers wai wai-logger word8
       ];
       testHaskellDepends = [
         base blaze-builder bytestring conduit conduit-extra hspec
         http-conduit http-types lifted-base network resourcet
         streaming-commons transformers wai warp
       ];
       homepage = "https://github.com/fpco/http-reverse-proxy";
       description = "Reverse proxy HTTP requests, either over raw sockets or with WAI";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "http-streams" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, attoparsec, base
     , base64-bytestring, blaze-builder, bytestring, case-insensitive
     , directory, ghc-prim, HsOpenSSL, hspec, hspec-expectations
     , http-common, HUnit, io-streams, MonadCatchIO-transformers, mtl
     , network, network-uri, openssl-streams, snap-core, snap-server
     , system-fileio, system-filepath, text, transformers
     , unordered-containers
     }:
     mkDerivation {
       pname = "http-streams";
       version = "0.8.3.3";
       sha256 = "0cp2jdalg0vzikl6v4yhyflllv7yqskph5gp5ahirawhcj9rfi9z";
       libraryHaskellDepends = [
         aeson attoparsec base base64-bytestring blaze-builder bytestring
         case-insensitive directory HsOpenSSL http-common io-streams mtl
         network network-uri openssl-streams text transformers
         unordered-containers
       ];
       testHaskellDepends = [
         aeson aeson-pretty attoparsec base base64-bytestring blaze-builder
         bytestring case-insensitive directory ghc-prim HsOpenSSL hspec
         hspec-expectations http-common HUnit io-streams
         MonadCatchIO-transformers mtl network network-uri openssl-streams
         snap-core snap-server system-fileio system-filepath text
         transformers unordered-containers
       ];
       homepage = "http://research.operationaldynamics.com/projects/http-streams/";
       description = "An HTTP client using io-streams";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "http-types" = callPackage
    ({ mkDerivation, array, base, blaze-builder, bytestring
     , case-insensitive, doctest, hspec, QuickCheck
     , quickcheck-instances, text
     }:
     mkDerivation {
       pname = "http-types";
       version = "0.9";
       sha256 = "0ny15jgm5skhs2yx6snr13lrnw19hwjgfygrpsmhib8wqa8cz8cc";
       libraryHaskellDepends = [
         array base blaze-builder bytestring case-insensitive text
       ];
       testHaskellDepends = [
         base blaze-builder bytestring doctest hspec QuickCheck
         quickcheck-instances text
       ];
       homepage = "https://github.com/aristidb/http-types";
       description = "Generic HTTP types for Haskell (for both client and server code)";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "http2" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, array, base, bytestring
     , bytestring-builder, containers, criterion, directory, doctest
     , filepath, Glob, hashtables, heaps, hex, hspec, mwc-random
     , psqueues, random, stm, text, unordered-containers, vector, word8
     }:
     mkDerivation {
       pname = "http2";
       version = "1.4.5";
       sha256 = "19fvqmaqmgxb8nlrya304dvgw6mh0qysyw33x061h06fna0y9iil";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         array base bytestring bytestring-builder containers psqueues stm
         unordered-containers
       ];
       executableHaskellDepends = [
         aeson aeson-pretty array base bytestring bytestring-builder
         containers directory filepath hex text unordered-containers vector
         word8
       ];
       testHaskellDepends = [
         aeson aeson-pretty array base bytestring bytestring-builder
         containers directory doctest filepath Glob hex hspec psqueues stm
         text unordered-containers vector word8
       ];
       benchmarkHaskellDepends = [
         array base bytestring containers criterion hashtables heaps
         mwc-random psqueues random stm
       ];
       description = "HTTP/2.0 library including frames and HPACK";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "httpd-shed" = callPackage
    ({ mkDerivation, base, network, network-uri }:
     mkDerivation {
       pname = "httpd-shed";
       version = "0.4.0.3";
       sha256 = "064jy1mqhnf1hvq6s04wlhmp916rd522x58djb9qixv13vc8gzxh";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base network network-uri ];
       description = "A simple web-server with an interact style API";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "human-readable-duration" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "human-readable-duration";
       version = "0.2.0.0";
       sha256 = "0z89bl1027az647pycgbsysz9rd3whll30alqz6psbjc06rmj6ac";
       libraryHaskellDepends = [ base ];
       homepage = "http://github.com/yogsototh/human-readable-duration#readme";
       description = "Provide duration helper";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hunit-dejafu" = callPackage
    ({ mkDerivation, base, dejafu, HUnit }:
     mkDerivation {
       pname = "hunit-dejafu";
       version = "0.2.0.0";
       sha256 = "1c3xk7fy6i4cnrpz7av6fxpaqzszvgf3f3vb0nf50lvc7v6v07n8";
       libraryHaskellDepends = [ base dejafu HUnit ];
       homepage = "https://github.com/barrucadu/dejafu";
       description = "Deja Fu support for the HUnit test framework";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hvect" = callPackage
    ({ mkDerivation, base, HTF }:
     mkDerivation {
       pname = "hvect";
       version = "0.3.0.0";
       sha256 = "1g3y81j2fs1zgibc0afwfmn8lvzwy35blipszfvbfrna7dy1z4xj";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base HTF ];
       homepage = "https://github.com/agrafix/hvect";
       description = "Simple strict heterogeneous lists";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hweblib" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, containers
     , criterion, HUnit, mtl, text, transformers
     }:
     mkDerivation {
       pname = "hweblib";
       version = "0.6.3";
       sha256 = "03dmx5irlsyb3b9zg2r6nz947sslizkn0nlk65ldb5n4m8my33hy";
       libraryHaskellDepends = [
         attoparsec base bytestring containers mtl text transformers
       ];
       testHaskellDepends = [
         attoparsec base bytestring containers HUnit mtl transformers
       ];
       benchmarkHaskellDepends = [
         attoparsec base bytestring containers criterion HUnit mtl
         transformers
       ];
       homepage = "http://github.com/aycanirican/hweblib";
       description = "Haskell Web Library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hworker" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, bytestring, hedis, hspec
     , hspec-contrib, HUnit, text, time, uuid
     }:
     mkDerivation {
       pname = "hworker";
       version = "0.1.0.1";
       sha256 = "079z4ahnbwibhy15jm3ymfzbfxgwy7f2l1raq06sp47ip16wrjrl";
       revision = "1";
       editedCabalFile = "0w2bpvfr68n2qipvr8gc5096dain3g2536m4n9kqx1fahf12mwy5";
       libraryHaskellDepends = [
         aeson attoparsec base bytestring hedis text time uuid
       ];
       testHaskellDepends = [
         aeson attoparsec base bytestring hedis hspec hspec-contrib HUnit
         text time uuid
       ];
       doCheck = false;
       homepage = "http://github.com/dbp/hworker";
       description = "A reliable at-least-once job queue built on top of redis";
       license = stdenv.lib.licenses.isc;
     }) {};
  "hworker-ses" = callPackage
    ({ mkDerivation, aeson, amazonka, amazonka-core, amazonka-ses, base
     , hworker, lens, text, time, unordered-containers
     }:
     mkDerivation {
       pname = "hworker-ses";
       version = "0.1.1.0";
       sha256 = "1iw16mm7iwjm50y4k878p885d6hjsbnvg3msvpq9zcw52mlk0lyx";
       revision = "1";
       editedCabalFile = "0vbzj885q7hrlsv2ds0izsjciishcfnh1m8nw98szzis4byhck48";
       libraryHaskellDepends = [
         aeson amazonka amazonka-core amazonka-ses base hworker lens text
         time unordered-containers
       ];
       doCheck = false;
       homepage = "http://github.com/dbp/hworker-ses";
       description = "Library for sending email with Amazon's SES and hworker";
       license = stdenv.lib.licenses.isc;
     }) {};
  "hxt" = callPackage
    ({ mkDerivation, base, binary, bytestring, containers, deepseq
     , directory, filepath, HUnit, hxt-charproperties
     , hxt-regex-xmlschema, hxt-unicode, mtl, network-uri, parsec
     }:
     mkDerivation {
       pname = "hxt";
       version = "9.3.1.15";
       sha256 = "0q35jqi3g5qfwzp2p2hm22lkmbmk08bx2qvpgq4731zm48y7ngkj";
       configureFlags = [ "-fnetwork-uri" ];
       libraryHaskellDepends = [
         base binary bytestring containers deepseq directory filepath HUnit
         hxt-charproperties hxt-regex-xmlschema hxt-unicode mtl network-uri
         parsec
       ];
       homepage = "https://github.com/UweSchmidt/hxt";
       description = "A collection of tools for processing XML with Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hxt-charproperties" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "hxt-charproperties";
       version = "9.2.0.1";
       sha256 = "1mml8wglvagqq891rchgli6r8rnkwrqhgsxfl6kb5403pzb18rp4";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/UweSchmidt/hxt";
       description = "Character properties and classes for XML and Unicode";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hxt-css" = callPackage
    ({ mkDerivation, base, hxt, parsec, split }:
     mkDerivation {
       pname = "hxt-css";
       version = "0.1.0.1";
       sha256 = "0z8qswykx0k965n2mfp87b6h8fixrydvjg98d8h37bclfsqzj15w";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base hxt parsec split ];
       homepage = "https://github.com/redneb/hxt-css";
       description = "CSS selectors for HXT";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hxt-curl" = callPackage
    ({ mkDerivation, base, bytestring, curl, hxt, parsec }:
     mkDerivation {
       pname = "hxt-curl";
       version = "9.1.1.1";
       sha256 = "1sn5ngzz5qszdb3anbpqbjdijz29gmrwjrg9vsmrqsdqz65wrhfd";
       libraryHaskellDepends = [ base bytestring curl hxt parsec ];
       homepage = "https://github.com/UweSchmidt/hxt";
       description = "LibCurl interface for HXT";
       license = "unknown";
     }) {};
  "hxt-expat" = callPackage
    ({ mkDerivation, base, bytestring, hexpat, hxt }:
     mkDerivation {
       pname = "hxt-expat";
       version = "9.1.1";
       sha256 = "1mi2f2i31nqjqzwl82iypm1qngrpxp7lz506pjgqfbn840yc9n8h";
       libraryHaskellDepends = [ base bytestring hexpat hxt ];
       homepage = "http://www.fh-wedel.de/~si/HXmlToolbox/index.html";
       description = "Expat parser for HXT";
       license = "unknown";
     }) {};
  "hxt-http" = callPackage
    ({ mkDerivation, base, bytestring, HTTP, hxt, network, network-uri
     , parsec
     }:
     mkDerivation {
       pname = "hxt-http";
       version = "9.1.5.2";
       sha256 = "02yxvzczv89j518b94wh8m4dsmnymzxgv9158m7w6lqxk41rv8bg";
       configureFlags = [ "-fnetwork-uri" ];
       libraryHaskellDepends = [
         base bytestring HTTP hxt network network-uri parsec
       ];
       homepage = "https://github.com/UweSchmidt/hxt";
       description = "Interface to native Haskell HTTP package HTTP";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hxt-pickle-utils" = callPackage
    ({ mkDerivation, base, hxt, mtl }:
     mkDerivation {
       pname = "hxt-pickle-utils";
       version = "0.1.0.3";
       sha256 = "1id9459yphsbxqa0z89dhsmqqcgvk2axv91d05aw3n6r4ygs3nwx";
       revision = "2";
       editedCabalFile = "109jh2iibhnllkwpqpiyfwdqjn3v06ap58fhyzikjdqzz0rzwgh5";
       libraryHaskellDepends = [ base hxt mtl ];
       homepage = "https://github.com/silkapp/hxt-pickle-utils";
       description = "Utility functions for using HXT picklers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hxt-regex-xmlschema" = callPackage
    ({ mkDerivation, base, bytestring, criterion, deepseq, HUnit
     , hxt-charproperties, parsec, text
     }:
     mkDerivation {
       pname = "hxt-regex-xmlschema";
       version = "9.2.0.2";
       sha256 = "1hkcd5p7rhv8z2vlcpd1gcdiyni28m8k8yd5fnxw8a9bvrnnfi27";
       revision = "1";
       editedCabalFile = "1skvrrl0pld3zwjxsb64g9sdrqy1z4whjm45prsqj1mcw909rcl5";
       libraryHaskellDepends = [
         base bytestring hxt-charproperties parsec text
       ];
       testHaskellDepends = [ base bytestring HUnit parsec text ];
       benchmarkHaskellDepends = [
         base bytestring criterion deepseq parsec text
       ];
       homepage = "http://www.haskell.org/haskellwiki/Regular_expressions_for_XML_Schema";
       description = "A regular expression library for W3C XML Schema regular expressions";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hxt-relaxng" = callPackage
    ({ mkDerivation, base, containers, hxt, hxt-charproperties
     , hxt-regex-xmlschema, network-uri, parsec
     }:
     mkDerivation {
       pname = "hxt-relaxng";
       version = "9.1.5.5";
       sha256 = "07s47z5xhd0pdzz8mr9vg78qxay450sm8ljycpprq7y7mgh2vzhf";
       configureFlags = [ "-fnetwork-uri" ];
       libraryHaskellDepends = [
         base containers hxt hxt-charproperties hxt-regex-xmlschema
         network-uri parsec
       ];
       homepage = "https://github.com/UweSchmidt/hxt";
       description = "The HXT RelaxNG validator";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hxt-tagsoup" = callPackage
    ({ mkDerivation, base, hxt, hxt-charproperties, hxt-unicode
     , tagsoup
     }:
     mkDerivation {
       pname = "hxt-tagsoup";
       version = "9.1.3";
       sha256 = "1rp499j6w3h9xfxqyw2fn05ffq3z0wg1r9h2c205m37mb8visq77";
       libraryHaskellDepends = [
         base hxt hxt-charproperties hxt-unicode tagsoup
       ];
       homepage = "http://www.fh-wedel.de/~si/HXmlToolbox/index.html";
       description = "TagSoup parser for HXT";
       license = "unknown";
     }) {};
  "hxt-unicode" = callPackage
    ({ mkDerivation, base, hxt-charproperties }:
     mkDerivation {
       pname = "hxt-unicode";
       version = "9.0.2.4";
       sha256 = "0rj48cy8z4fl3zpg5bpa458kqr83adav6jnqv4i71dclpprj6n3v";
       libraryHaskellDepends = [ base hxt-charproperties ];
       homepage = "https://github.com/UweSchmidt/hxt";
       description = "Unicode en-/decoding functions for utf8, iso-latin-* and other encodings";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hybrid-vectors" = callPackage
    ({ mkDerivation, base, deepseq, primitive, vector }:
     mkDerivation {
       pname = "hybrid-vectors";
       version = "0.2.1";
       sha256 = "18nc6qw7f9rxi0h6qk28yq6i0x19gwjzq2v9mi2ajxnwzvydip1f";
       revision = "1";
       editedCabalFile = "1i73cfi226l8nivqw9dxnxajkdsgxkh89h00mgsrplf60kdh4wzh";
       libraryHaskellDepends = [ base deepseq primitive vector ];
       homepage = "http://github.com/ekmett/hybrid-vectors";
       description = "Hybrid vectors e.g. Mixed Boxed/Unboxed vectors";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hyperloglog" = callPackage
    ({ mkDerivation, approximate, base, binary, bits, bytes, cereal
     , cereal-vector, comonad, deepseq, directory, distributive, doctest
     , filepath, generic-deriving, hashable, hashable-extras, lens
     , reflection, safecopy, semigroupoids, semigroups, simple-reflect
     , siphash, tagged, vector
     }:
     mkDerivation {
       pname = "hyperloglog";
       version = "0.4.0.4";
       sha256 = "0iwqkgrvk7p9qmfbfld7cpparbc2j674i8vzmcwbr06n63ds5mrl";
       libraryHaskellDepends = [
         approximate base binary bits bytes cereal cereal-vector comonad
         deepseq distributive hashable hashable-extras lens reflection
         safecopy semigroupoids semigroups siphash tagged vector
       ];
       testHaskellDepends = [
         base directory doctest filepath generic-deriving semigroups
         simple-reflect
       ];
       homepage = "http://github.com/analytics/hyperloglog";
       description = "An approximate streaming (constant space) unique object counter";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hyphenation" = callPackage
    ({ mkDerivation, base, bytestring, containers, unordered-containers
     , zlib
     }:
     mkDerivation {
       pname = "hyphenation";
       version = "0.6";
       sha256 = "1xqj4na1gm40ssirc4k70r27bzxhg2dkiipp48a5hqwgq5k3crrg";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base bytestring containers unordered-containers zlib
       ];
       doCheck = false;
       homepage = "http://github.com/ekmett/hyphenation";
       description = "Configurable Knuth-Liang hyphenation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hzulip" = callPackage
    ({ mkDerivation, aeson, async, base, bytestring, conduit
     , exceptions, hspec, http-client, http-client-tls, http-types, lens
     , lens-aeson, mtl, raw-strings-qq, scotty, stm, stm-conduit, text
     , transformers
     }:
     mkDerivation {
       pname = "hzulip";
       version = "1.1.1.3";
       sha256 = "0qc68shmp8s3bwp64vdn5wvffxkvk5zxzzrv07yfp12rcsg15754";
       libraryHaskellDepends = [
         aeson base bytestring conduit exceptions http-client
         http-client-tls http-types lens lens-aeson mtl stm stm-conduit text
         transformers
       ];
       testHaskellDepends = [
         aeson async base bytestring conduit exceptions hspec http-client
         http-client-tls http-types lens lens-aeson mtl raw-strings-qq
         scotty stm stm-conduit text transformers
       ];
       homepage = "https://github.com/yamadapc/hzulip";
       description = "A haskell wrapper for the Zulip API";
       license = stdenv.lib.licenses.gpl2;
     }) {};
  "ical" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, containers, either, mtl
     , text, time, transformers
     }:
     mkDerivation {
       pname = "ical";
       version = "0.0.1";
       sha256 = "10nqlypcv7rpc8q83rjhpb2n3sfqfx6p3xhf123hmacs4ks5vr7m";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson attoparsec base containers either mtl text time transformers
       ];
       executableHaskellDepends = [ base time ];
       testHaskellDepends = [ base ];
       homepage = "http://github.com/chrisdone/ical#readme";
       description = "iCalendar format parser and org-mode converter";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "iconv" = callPackage
    ({ mkDerivation, base, bytestring }:
     mkDerivation {
       pname = "iconv";
       version = "0.4.1.3";
       sha256 = "0m5m0ph5im443xcz60wm1zp98bnmf8l1b5gfllxwhjriwdl52hin";
       libraryHaskellDepends = [ base bytestring ];
       description = "String encoding conversion";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ide-backend" = callPackage
    ({ mkDerivation, aeson, async, attoparsec, base, binary, bytestring
     , bytestring-trie, Cabal-ide-backend, containers, crypto-api
     , data-accessor, data-accessor-mtl, directory, executable-path
     , filemanip, filepath, fingertree, ghc-prim, ide-backend-common
     , mtl, network, pretty-show, process, pureMD5, random, tagged
     , template-haskell, temporary, text, time, transformers, unix
     , unix-compat, unordered-containers, utf8-string
     }:
     mkDerivation {
       pname = "ide-backend";
       version = "0.10.0.1";
       sha256 = "1w7swl5gs2i4kxrzm5kvjpp6qfjw2h8gq5lwqgx98phkv30nw607";
       revision = "1";
       editedCabalFile = "0bb6cg0yiadcwa7pdg5gan3lir3pxdakwimi0cp64hi76scy0xng";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         async attoparsec base binary bytestring Cabal-ide-backend
         containers data-accessor data-accessor-mtl directory filemanip
         filepath ghc-prim ide-backend-common mtl network pretty-show
         process pureMD5 template-haskell temporary text time transformers
         unix utf8-string
       ];
       executableHaskellDepends = [
         aeson async attoparsec base binary bytestring bytestring-trie
         Cabal-ide-backend containers crypto-api data-accessor
         data-accessor-mtl directory executable-path filemanip filepath
         fingertree ghc-prim ide-backend-common mtl network pretty-show
         process pureMD5 random tagged template-haskell temporary text time
         transformers unix unix-compat unordered-containers
       ];
       doCheck = false;
       description = "An IDE backend library";
       license = stdenv.lib.licenses.mit;
     }) {};
  "ide-backend-common" = callPackage
    ({ mkDerivation, aeson, async, attoparsec, base, base64-bytestring
     , binary, bytestring, bytestring-trie, containers, crypto-api
     , data-accessor, directory, filepath, fingertree, monad-logger, mtl
     , network, pretty-show, process, pureMD5, tagged, template-haskell
     , temporary, text, transformers, unix, unix-compat
     }:
     mkDerivation {
       pname = "ide-backend-common";
       version = "0.10.1.2";
       sha256 = "0nwiln0kvwb14jg1mhn6g5swmijn4f4cvkk5hsjp8q8sivrjh403";
       revision = "1";
       editedCabalFile = "1ncxddrqgdz60575ddsbpd1vr18ps5qrq6n9g4571428gx2skjn4";
       libraryHaskellDepends = [
         aeson async attoparsec base base64-bytestring binary bytestring
         bytestring-trie containers crypto-api data-accessor directory
         filepath fingertree monad-logger mtl network pretty-show process
         pureMD5 tagged template-haskell temporary text transformers unix
         unix-compat
       ];
       description = "Shared library used be ide-backend and ide-backend-server";
       license = stdenv.lib.licenses.mit;
     }) {};
  "ide-backend-rts" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "ide-backend-rts";
       version = "0.1.3.1";
       sha256 = "1zj1glpyhmgpkxy4n96aqqf3s1gl2irl8ksnx4i9y4nwvs06qzj0";
       libraryHaskellDepends = [ base ];
       description = "RTS for the IDE backend";
       license = stdenv.lib.licenses.mit;
     }) {};
  "ide-backend-server" = callPackage
    ({ mkDerivation, array, async, base, bytestring, Cabal, containers
     , data-accessor, data-accessor-mtl, directory, file-embed
     , filemanip, filepath, ghc, haddock-api, ide-backend-common, mtl
     , network, process, tar, temporary, text, time, transformers, unix
     , unordered-containers, zlib
     }:
     mkDerivation {
       pname = "ide-backend-server";
       version = "0.10.0.2";
       sha256 = "0pzyrjdd35xqlazr70g3045qa7f08gbl4qq16rvppivw4h40wag5";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         array async base bytestring Cabal containers data-accessor
         data-accessor-mtl directory file-embed filemanip filepath ghc
         haddock-api ide-backend-common mtl network process tar temporary
         text time transformers unix unordered-containers zlib
       ];
       doHaddock = false;
       description = "An IDE backend server";
       license = stdenv.lib.licenses.mit;
     }) {};
  "ieee754" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "ieee754";
       version = "0.7.8";
       sha256 = "1zvfnnd5nm5kgr60214cdyks0kqdqyzpwk5sdh0s60yr8b7fyjny";
       libraryHaskellDepends = [ base ];
       homepage = "http://github.com/patperry/hs-ieee754";
       description = "Utilities for dealing with IEEE floating point numbers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ig" = callPackage
    ({ mkDerivation, aeson, base, base16-bytestring, bytestring
     , conduit, conduit-extra, crypto-api, cryptohash
     , cryptohash-cryptoapi, data-default, http-conduit, http-types
     , lifted-base, monad-control, resourcet, text, time, transformers
     , transformers-base, unordered-containers
     }:
     mkDerivation {
       pname = "ig";
       version = "0.6.1";
       sha256 = "1zk5c3vsfkj98hh3z9xr1kbh8iqf3wcj5f35qsm7ggnkxfj0sbmf";
       libraryHaskellDepends = [
         aeson base base16-bytestring bytestring conduit conduit-extra
         crypto-api cryptohash cryptohash-cryptoapi data-default
         http-conduit http-types lifted-base monad-control resourcet text
         time transformers transformers-base unordered-containers
       ];
       homepage = "https://github.com/prowdsponsor/ig";
       description = "Bindings to Instagram's API";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ignore" = callPackage
    ({ mkDerivation, base, directory, Glob, HTF, mtl, path, pcre-heavy
     , text
     }:
     mkDerivation {
       pname = "ignore";
       version = "0.1.1.0";
       sha256 = "0x9mqx198ssj742cv8w643w2cxv9avgyl9j7dr85mp4bmgyq3x5a";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base directory Glob mtl path pcre-heavy text
       ];
       executableHaskellDepends = [ base directory path ];
       testHaskellDepends = [ base HTF text ];
       homepage = "http://github.com/agrafix/ignore";
       description = "Handle ignore files of different VCSes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ihaskell" = callPackage
    ({ mkDerivation, aeson, base, base64-bytestring, bin-package-db
     , bytestring, cereal, cmdargs, containers, directory, filepath, ghc
     , ghc-parser, ghc-paths, haskeline, haskell-src-exts, hlint, hspec
     , http-client, http-client-tls, HUnit, ipython-kernel, mtl, parsec
     , process, random, setenv, shelly, split, stm, strict, system-argv0
     , text, transformers, unix, unordered-containers, utf8-string, uuid
     , vector
     }:
     mkDerivation {
       pname = "ihaskell";
       version = "0.8.3.0";
       sha256 = "01rihfii7yg9kwr82mr2piwpjgvnyn8simhscwf2d9ig6jvf11n4";
       revision = "1";
       editedCabalFile = "0m4n072ph53nlqm4rmfp1y01rcms7dzgwlspfy4yacxnwczjcya0";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson base base64-bytestring bin-package-db bytestring cereal
         cmdargs containers directory filepath ghc ghc-parser ghc-paths
         haskeline haskell-src-exts hlint http-client http-client-tls
         ipython-kernel mtl parsec process random shelly split stm strict
         system-argv0 text transformers unix unordered-containers
         utf8-string uuid vector
       ];
       executableHaskellDepends = [
         aeson base bin-package-db bytestring containers directory ghc
         ipython-kernel process strict text transformers unix
       ];
       testHaskellDepends = [
         aeson base base64-bytestring bin-package-db bytestring cereal
         cmdargs containers directory filepath ghc ghc-parser ghc-paths
         haskeline haskell-src-exts hlint hspec http-client http-client-tls
         HUnit ipython-kernel mtl parsec process random setenv shelly split
         stm strict system-argv0 text transformers unix unordered-containers
         utf8-string uuid vector
       ];
       doCheck = false;
       homepage = "http://github.com/gibiansky/IHaskell";
       description = "A Haskell backend kernel for the IPython project";
       license = stdenv.lib.licenses.mit;
     }) {};
  "ihaskell-aeson" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, base, bytestring, here
     , ihaskell, text
     }:
     mkDerivation {
       pname = "ihaskell-aeson";
       version = "0.3.0.0";
       sha256 = "0h2bbkqwl8mdyn24n0lphcjfrvmfq8ckincv3rncspp9h0v705m7";
       libraryHaskellDepends = [
         aeson aeson-pretty base bytestring here ihaskell text
       ];
       homepage = "http://www.github.com/gibiansky/ihaskell";
       description = "IHaskell display instances for Aeson";
       license = stdenv.lib.licenses.mit;
     }) {};
  "ihaskell-basic" = callPackage
    ({ mkDerivation, base, ihaskell }:
     mkDerivation {
       pname = "ihaskell-basic";
       version = "0.3.0.0";
       sha256 = "1vb4x6h6bs3liq1bbnhs3ns0zrk4czy63zmkp1q075g7fq1fh7hw";
       libraryHaskellDepends = [ base ihaskell ];
       homepage = "http://www.github.com/gibiansky/IHaskell";
       description = "IHaskell display instances for basic types";
       license = stdenv.lib.licenses.mit;
     }) {};
  "ihaskell-blaze" = callPackage
    ({ mkDerivation, base, blaze-html, blaze-markup, ihaskell }:
     mkDerivation {
       pname = "ihaskell-blaze";
       version = "0.3.0.0";
       sha256 = "1il3iz1nksh5v753srvchrjdazf7dqsd3q59w7crzbyrlx81v97b";
       libraryHaskellDepends = [ base blaze-html blaze-markup ihaskell ];
       homepage = "http://www.github.com/gibiansky/ihaskell";
       description = "IHaskell display instances for blaze-html types";
       license = stdenv.lib.licenses.mit;
     }) {};
  "ihaskell-charts" = callPackage
    ({ mkDerivation, base, bytestring, Chart, Chart-cairo
     , data-default-class, directory, ihaskell
     }:
     mkDerivation {
       pname = "ihaskell-charts";
       version = "0.3.0.0";
       sha256 = "0nlimyx953v1s4xgzdb9987i9bw1bdralkg2x6cp41kzqd49i4f3";
       libraryHaskellDepends = [
         base bytestring Chart Chart-cairo data-default-class directory
         ihaskell
       ];
       homepage = "http://www.github.com/gibiansky/ihaskell";
       description = "IHaskell display instances for charts types";
       license = stdenv.lib.licenses.mit;
     }) {};
  "ihaskell-diagrams" = callPackage
    ({ mkDerivation, active, base, bytestring, diagrams, diagrams-cairo
     , diagrams-lib, directory, ihaskell, text
     }:
     mkDerivation {
       pname = "ihaskell-diagrams";
       version = "0.3.1.0";
       sha256 = "18q7m6xrshn1ixn0j75bdvpgvjq63sic3dfjzcz9zk73zmvpj4qz";
       libraryHaskellDepends = [
         active base bytestring diagrams diagrams-cairo diagrams-lib
         directory ihaskell text
       ];
       homepage = "http://www.github.com/gibiansky/ihaskell";
       description = "IHaskell display instances for diagram types";
       license = stdenv.lib.licenses.mit;
     }) {};
  "ihaskell-hatex" = callPackage
    ({ mkDerivation, base, HaTeX, ihaskell, text }:
     mkDerivation {
       pname = "ihaskell-hatex";
       version = "0.2.1.0";
       sha256 = "098mbabwsl5i5dnvdy732ivrpzyb5njpr4483zss22axdni9p68i";
       libraryHaskellDepends = [ base HaTeX ihaskell text ];
       homepage = "http://www.github.com/gibiansky/IHaskell";
       description = "IHaskell display instances for hatex";
       license = stdenv.lib.licenses.mit;
     }) {};
  "ihaskell-juicypixels" = callPackage
    ({ mkDerivation, base, bytestring, directory, ihaskell, JuicyPixels
     }:
     mkDerivation {
       pname = "ihaskell-juicypixels";
       version = "0.3.0.0";
       sha256 = "0apsll540z4hzzs39bqk14iadnr4rjp873q712la7lp2xnyf4k0y";
       libraryHaskellDepends = [
         base bytestring directory ihaskell JuicyPixels
       ];
       homepage = "http://www.github.com/gibiansky/ihaskell";
       description = "IHaskell - IHaskellDisplay instances of the image types of the JuicyPixels package";
       license = stdenv.lib.licenses.mit;
     }) {};
  "ihaskell-magic" = callPackage
    ({ mkDerivation, base, base64-bytestring, bytestring, ihaskell
     , ipython-kernel, magic, text, utf8-string
     }:
     mkDerivation {
       pname = "ihaskell-magic";
       version = "0.3.0.0";
       sha256 = "05jvyca163daqrmpb7fhk1wng04vk4bayffp0lp68sy3zskrjndl";
       libraryHaskellDepends = [
         base base64-bytestring bytestring ihaskell ipython-kernel magic
         text utf8-string
       ];
       homepage = "http://www.github.com/gibiansky/IHaskell";
       description = "IHaskell display instances for bytestrings";
       license = stdenv.lib.licenses.mit;
     }) {};
  "ihaskell-rlangqq" = callPackage
    ({ mkDerivation, base, base64-bytestring, blaze-html, bytestring
     , directory, filepath, ihaskell, ihaskell-blaze, Rlang-QQ, split
     , stm, template-haskell, xformat
     }:
     mkDerivation {
       pname = "ihaskell-rlangqq";
       version = "0.3.0.0";
       sha256 = "1w2ywl3m122d56cvgnhll6dpjw03y2jy3nc8v325291zhknrziaj";
       libraryHaskellDepends = [
         base base64-bytestring blaze-html bytestring directory filepath
         ihaskell ihaskell-blaze Rlang-QQ split stm template-haskell xformat
       ];
       description = "a rDisp quasiquote to show plots from Rlang-QQ in IHaskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "imagesize-conduit" = callPackage
    ({ mkDerivation, base, bytestring, conduit, conduit-extra
     , exceptions, hspec, resourcet
     }:
     mkDerivation {
       pname = "imagesize-conduit";
       version = "1.1";
       sha256 = "06dc0453l7n3g05pg118y4smlzkl6p56zazpi4dr41dkg12pii9i";
       revision = "1";
       editedCabalFile = "1gq749v6558zkvvn8iqkd4iqv4giiysxjqb2kncarnhghkkbgbaf";
       libraryHaskellDepends = [
         base bytestring conduit conduit-extra exceptions
       ];
       testHaskellDepends = [
         base bytestring conduit conduit-extra hspec resourcet
       ];
       homepage = "http://github.com/silkapp/imagesize-conduit";
       description = "Determine the size of some common image formats";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "immortal" = callPackage
    ({ mkDerivation, base, lifted-base, monad-control, stm, tasty
     , tasty-hunit, transformers, transformers-base
     }:
     mkDerivation {
       pname = "immortal";
       version = "0.2";
       sha256 = "1si9zh309xh29qrxkhb0shwisjrsja2d9lpj17dwlzn0gv0i1672";
       libraryHaskellDepends = [
         base lifted-base monad-control transformers-base
       ];
       testHaskellDepends = [
         base lifted-base stm tasty tasty-hunit transformers
       ];
       homepage = "https://github.com/feuerbach/immortal";
       description = "Spawn threads that never die (unless told to do so)";
       license = stdenv.lib.licenses.mit;
     }) {};
  "include-file" = callPackage
    ({ mkDerivation, base, bytestring, criterion, random
     , template-haskell
     }:
     mkDerivation {
       pname = "include-file";
       version = "0.1.0.3";
       sha256 = "0a9xwd5ihrw5z8i8mvfmghdjk9nnhif97jdp7jamyzvivhxiz3r0";
       libraryHaskellDepends = [
         base bytestring random template-haskell
       ];
       testHaskellDepends = [ base bytestring ];
       benchmarkHaskellDepends = [ base bytestring criterion ];
       description = "Inclusion of files in executables at compile-time";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "incremental-parser" = callPackage
    ({ mkDerivation, base, bytestring, checkers, criterion, deepseq
     , monoid-subclasses, QuickCheck, tasty, tasty-quickcheck, text
     }:
     mkDerivation {
       pname = "incremental-parser";
       version = "0.2.4.1";
       sha256 = "0m5hhas5pxx975sra0icijrpi8sk3bi6b4s3q6jcy208vdisfc0n";
       libraryHaskellDepends = [ base monoid-subclasses ];
       testHaskellDepends = [
         base checkers monoid-subclasses QuickCheck tasty tasty-quickcheck
       ];
       benchmarkHaskellDepends = [
         base bytestring criterion deepseq monoid-subclasses text
       ];
       homepage = "https://github.com/blamario/incremental-parser";
       description = "Generic parser library capable of providing partial results from partial input";
       license = "GPL";
     }) {};
  "indents" = callPackage
    ({ mkDerivation, base, concatenative, mtl, parsec }:
     mkDerivation {
       pname = "indents";
       version = "0.3.3";
       sha256 = "16lz21bp9j14xilnq8yym22p3saxvc9fsgfcf5awn2a6i6n527xn";
       libraryHaskellDepends = [ base concatenative mtl parsec ];
       homepage = "http://patch-tag.com/r/salazar/indents";
       description = "indentation sensitive parser-combinators for parsec";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "inflections" = callPackage
    ({ mkDerivation, base, containers, HUnit, parsec, QuickCheck
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "inflections";
       version = "0.2.0.0";
       sha256 = "16s2sj2417qmhdlzn7j51yf7fh50f5msgb50fsavw80845602x43";
       libraryHaskellDepends = [ base containers parsec ];
       testHaskellDepends = [
         base containers HUnit parsec QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2
       ];
       homepage = "https://github.com/stackbuilders/inflections-hs";
       description = "Inflections library for Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};
  "ini" = callPackage
    ({ mkDerivation, attoparsec, base, text, unordered-containers }:
     mkDerivation {
       pname = "ini";
       version = "0.3.4";
       sha256 = "1p3hll2lxvnvy8ln4zwcglr5cdxmccld5wjrdvvisdhz3p77whlq";
       libraryHaskellDepends = [
         attoparsec base text unordered-containers
       ];
       homepage = "http://github.com/chrisdone/ini";
       description = "Quick and easy configuration files in the INI format";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "inline-c" = callPackage
    ({ mkDerivation, ansi-wl-pprint, base, binary, bytestring
     , containers, cryptohash, directory, filepath, gsl, gslcblas
     , hashable, hspec, mtl, parsec, parsers, QuickCheck, raw-strings-qq
     , regex-posix, template-haskell, transformers, unordered-containers
     , vector
     }:
     mkDerivation {
       pname = "inline-c";
       version = "0.5.5.2";
       sha256 = "1mkpasqqanzm5znn0rpl6ijr0zw1fkjhvhz340nq66ycjp85w9mi";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         ansi-wl-pprint base binary bytestring containers cryptohash
         directory filepath hashable mtl parsec parsers QuickCheck
         template-haskell transformers unordered-containers vector
       ];
       executableSystemDepends = [ gsl gslcblas ];
       testHaskellDepends = [
         ansi-wl-pprint base containers hashable hspec parsers QuickCheck
         raw-strings-qq regex-posix template-haskell transformers
         unordered-containers vector
       ];
       description = "Write Haskell source files including C code inline. No FFI required.";
       license = stdenv.lib.licenses.mit;
     }) {inherit (pkgs) gsl; gslcblas = null;};
  "inline-c-cpp" = callPackage
    ({ mkDerivation, base, inline-c, template-haskell }:
     mkDerivation {
       pname = "inline-c-cpp";
       version = "0.1.0.0";
       sha256 = "0iba77p2ncxbg5sb4ks8f3lgp6zdnjhzvrr2ap3yg49is5b9f5rf";
       libraryHaskellDepends = [ base inline-c template-haskell ];
       testHaskellDepends = [ base ];
       description = "Lets you embed C++ code into Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};
  "inline-r" = callPackage
    ({ mkDerivation, aeson, base, bytestring, c2hs, containers
     , criterion, data-default-class, deepseq, directory, exceptions
     , filepath, ieee754, mtl, pretty, primitive, process
     , quickcheck-assertions, R, reflection, setenv, silently
     , singletons, strict, tasty, tasty-expected-failure, tasty-golden
     , tasty-hunit, tasty-quickcheck, template-haskell, temporary, text
     , th-lift, th-orphans, transformers, unix, vector
     }:
     mkDerivation {
       pname = "inline-r";
       version = "0.8.0.1";
       sha256 = "0q8yyjhdnl6m0vmxb8x4c6mqi7akdrkgwq0z1vh76cfb8qq3dqjc";
       libraryHaskellDepends = [
         aeson base bytestring containers data-default-class deepseq
         exceptions mtl pretty primitive process reflection setenv
         singletons template-haskell text th-lift th-orphans transformers
         unix vector
       ];
       libraryPkgconfigDepends = [ R ];
       libraryToolDepends = [ c2hs ];
       testHaskellDepends = [
         base bytestring directory filepath ieee754 mtl process
         quickcheck-assertions silently singletons strict tasty
         tasty-expected-failure tasty-golden tasty-hunit tasty-quickcheck
         template-haskell temporary text unix vector
       ];
       benchmarkHaskellDepends = [
         base criterion filepath primitive process singletons
         template-haskell vector
       ];
       description = "Seamlessly call R from Haskell and vice versa. No FFI required.";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) R;};
  "integration" = callPackage
    ({ mkDerivation, base, parallel }:
     mkDerivation {
       pname = "integration";
       version = "0.2.1";
       sha256 = "0bsqad6q4kc0wykswwqykcn6nd4wj6yd9dzpg075h2n1mmg3h9qc";
       libraryHaskellDepends = [ base parallel ];
       homepage = "https://github.com/ekmett/integration";
       description = "Fast robust numeric integration via tanh-sinh quadrature";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "interpolate" = callPackage
    ({ mkDerivation, base, bytestring, haskell-src-meta, hspec
     , QuickCheck, quickcheck-instances, template-haskell, text
     }:
     mkDerivation {
       pname = "interpolate";
       version = "0.1.0";
       sha256 = "0wlc10qd1bq3xj64a3yq2gzds9kas9zyylkm9kxd46gy35fns6id";
       revision = "1";
       editedCabalFile = "0ld319k9phmp6dp8m87bdhqp5519dxggf8r2a5z8hkznyjpa131j";
       libraryHaskellDepends = [ base haskell-src-meta template-haskell ];
       testHaskellDepends = [
         base bytestring haskell-src-meta hspec QuickCheck
         quickcheck-instances template-haskell text
       ];
       description = "String interpolation done right";
       license = stdenv.lib.licenses.mit;
     }) {};
  "interpolatedstring-perl6" = callPackage
    ({ mkDerivation, base, bytestring, haskell-src-meta
     , template-haskell, text
     }:
     mkDerivation {
       pname = "interpolatedstring-perl6";
       version = "1.0.0";
       sha256 = "1lx125wzadvbicsaml9wrhxxplc4gd0i4wk3f1apb0kl5nnv5q35";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base bytestring haskell-src-meta template-haskell text
       ];
       description = "QuasiQuoter for Perl6-style multi-line interpolated strings";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "intervals" = callPackage
    ({ mkDerivation, array, base, directory, distributive, doctest
     , filepath, ghc-prim, QuickCheck, template-haskell
     }:
     mkDerivation {
       pname = "intervals";
       version = "0.7.2";
       sha256 = "0a7ysncmwkqh7q1d8y1h4lb5373k93xdly3bqrjb7ihazmylml0d";
       libraryHaskellDepends = [ array base distributive ghc-prim ];
       testHaskellDepends = [
         base directory doctest filepath QuickCheck template-haskell
       ];
       homepage = "http://github.com/ekmett/intervals";
       description = "Interval Arithmetic";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "invariant" = callPackage
    ({ mkDerivation, array, base, bifunctors, containers, contravariant
     , ghc-prim, hspec, profunctors, QuickCheck, semigroups, StateVar
     , stm, tagged, template-haskell, transformers, transformers-compat
     , unordered-containers
     }:
     mkDerivation {
       pname = "invariant";
       version = "0.3.1";
       sha256 = "1zzxfg49rxsmvl99fxx66x420v72gj8jvnnikp4wx6dsalwwx26v";
       libraryHaskellDepends = [
         array base bifunctors containers contravariant ghc-prim profunctors
         semigroups StateVar stm tagged template-haskell transformers
         transformers-compat unordered-containers
       ];
       testHaskellDepends = [ base hspec QuickCheck ];
       homepage = "https://github.com/nfrisby/invariant-functors";
       description = "Haskell 98 invariant functors";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "io-choice" = callPackage
    ({ mkDerivation, base, hspec, lifted-base, monad-control
     , template-haskell, transformers, transformers-base
     }:
     mkDerivation {
       pname = "io-choice";
       version = "0.0.5";
       sha256 = "19nr8kxcg98510cqgjn4c9sd8i9yz8fv4ryqg6lzzgpwqzkvx5ph";
       libraryHaskellDepends = [
         base lifted-base monad-control template-haskell transformers
         transformers-base
       ];
       testHaskellDepends = [
         base hspec lifted-base monad-control transformers
       ];
       description = "Choice for IO and lifted IO";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "io-manager" = callPackage
    ({ mkDerivation, base, containers }:
     mkDerivation {
       pname = "io-manager";
       version = "0.1.0.2";
       sha256 = "0f21h36z2ls0d6g31pcf4kcyfninaxws8w159zy33bwa19saf2mz";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base containers ];
       executableHaskellDepends = [ base containers ];
       description = "Skeleton library around the IO monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "io-memoize" = callPackage
    ({ mkDerivation, async, base }:
     mkDerivation {
       pname = "io-memoize";
       version = "1.1.1.0";
       sha256 = "0ga85wdvz67jjx8qh6f687kfikcrfmp7winn13v6na7vlaqs2ly7";
       libraryHaskellDepends = [ async base ];
       homepage = "https://github.com/DanBurton/io-memoize";
       description = "Memoize IO actions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "io-region" = callPackage
    ({ mkDerivation, base, hspec, stm, transformers }:
     mkDerivation {
       pname = "io-region";
       version = "0.1.1";
       sha256 = "1w8m21zkhbhqr9lsdzwxfpy0jhb2ciybn3bvhyp3zlxkq9k3yc7f";
       libraryHaskellDepends = [ base stm ];
       testHaskellDepends = [ base hspec transformers ];
       homepage = "https://github.com/Yuras/io-region/wiki";
       description = "Exception safe resource management with dynamic regions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "io-storage" = callPackage
    ({ mkDerivation, base, containers }:
     mkDerivation {
       pname = "io-storage";
       version = "0.3";
       sha256 = "1ga9bd7iri6vlsxnjx765yy3bxc4lbz644wyw88yzvpjgz6ga3cs";
       libraryHaskellDepends = [ base containers ];
       homepage = "http://github.com/willdonnelly/io-storage";
       description = "A key-value store in the IO monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "io-streams" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, bytestring-builder
     , deepseq, directory, filepath, HUnit, mtl, network, primitive
     , process, QuickCheck, test-framework, test-framework-hunit
     , test-framework-quickcheck2, text, time, transformers, vector
     , zlib, zlib-bindings
     }:
     mkDerivation {
       pname = "io-streams";
       version = "1.3.5.0";
       sha256 = "1q6a9rww9pjq1d533avkai2pi5sb6prdacxc7bfz81jy7kpxf9vc";
       libraryHaskellDepends = [
         attoparsec base bytestring bytestring-builder network primitive
         process text time transformers vector zlib-bindings
       ];
       testHaskellDepends = [
         attoparsec base bytestring bytestring-builder deepseq directory
         filepath HUnit mtl network primitive process QuickCheck
         test-framework test-framework-hunit test-framework-quickcheck2 text
         time transformers vector zlib zlib-bindings
       ];
       description = "Simple, composable, and easy-to-use stream I/O";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ip6addr" = callPackage
    ({ mkDerivation, base, cmdargs, IPv6Addr, text }:
     mkDerivation {
       pname = "ip6addr";
       version = "0.5.0.1";
       sha256 = "08nwzas5r3b47chldc3dmwmwxam5dlmsyqqqmql7rjm87h645di4";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [ base cmdargs IPv6Addr text ];
       doHaddock = false;
       homepage = "https://github.com/MichelBoucey/ip6addr";
       description = "Commandline tool to generate IPv6 address text representations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "iproute" = callPackage
    ({ mkDerivation, appar, base, byteorder, containers, doctest, hspec
     , network, QuickCheck, safe
     }:
     mkDerivation {
       pname = "iproute";
       version = "1.7.0";
       sha256 = "1ply0i110c2sppjbfyysgw48jfjnsbam5zwil8xws0hp20rh1pb5";
       libraryHaskellDepends = [
         appar base byteorder containers network
       ];
       testHaskellDepends = [
         appar base byteorder containers doctest hspec network QuickCheck
         safe
       ];
       homepage = "http://www.mew.org/~kazu/proj/iproute/";
       description = "IP Routing Table";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ipython-kernel" = callPackage
    ({ mkDerivation, aeson, base, bytestring, cereal, containers
     , directory, filepath, mtl, parsec, process, SHA, temporary, text
     , transformers, unordered-containers, uuid, zeromq4-haskell
     }:
     mkDerivation {
       pname = "ipython-kernel";
       version = "0.8.3.0";
       sha256 = "0356yl51b34745wsgq8l45p0610dwzp0lrdhq8gjgi6xh4ik4rg8";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson base bytestring cereal containers directory filepath mtl
         process SHA temporary text transformers unordered-containers uuid
         zeromq4-haskell
       ];
       executableHaskellDepends = [
         base filepath mtl parsec text transformers
       ];
       homepage = "http://github.com/gibiansky/IHaskell";
       description = "A library for creating kernels for IPython frontends";
       license = stdenv.lib.licenses.mit;
     }) {};
  "irc" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, HUnit, QuickCheck
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "irc";
       version = "0.6.1.0";
       sha256 = "1q9p2qwfy9rsfyaja4x3gjr8ql2ka2ja5qv56b062bdkvzafl5iq";
       libraryHaskellDepends = [ attoparsec base bytestring ];
       testHaskellDepends = [
         base bytestring HUnit QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2
       ];
       description = "A small library for parsing IRC messages";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "irc-client" = callPackage
    ({ mkDerivation, base, bytestring, conduit, data-default-class
     , irc-conduit, irc-ctcp, old-locale, stm, stm-conduit, text, time
     , transformers
     }:
     mkDerivation {
       pname = "irc-client";
       version = "0.2.6.0";
       sha256 = "0pbr3dhvia2gsn908gikhzpkfd8ry7lw5mwb6maifvqhvcx2j54d";
       libraryHaskellDepends = [
         base bytestring conduit data-default-class irc-conduit irc-ctcp
         old-locale stm stm-conduit text time transformers
       ];
       homepage = "https://github.com/barrucadu/irc-client";
       description = "An IRC client library";
       license = stdenv.lib.licenses.mit;
     }) {};
  "irc-conduit" = callPackage
    ({ mkDerivation, async, base, bytestring, conduit, conduit-extra
     , connection, irc, irc-ctcp, network-conduit-tls, text, time, tls
     , transformers, x509-validation
     }:
     mkDerivation {
       pname = "irc-conduit";
       version = "0.1.2.0";
       sha256 = "1mw418frhbnk7gncilvb2c3cj4fvzm5fvafq0p28vggxisda9bkp";
       libraryHaskellDepends = [
         async base bytestring conduit conduit-extra connection irc irc-ctcp
         network-conduit-tls text time tls transformers x509-validation
       ];
       homepage = "https://github.com/barrucadu/irc-conduit";
       description = "Streaming IRC message library using conduits";
       license = stdenv.lib.licenses.mit;
     }) {};
  "irc-ctcp" = callPackage
    ({ mkDerivation, base, bytestring, text }:
     mkDerivation {
       pname = "irc-ctcp";
       version = "0.1.3.0";
       sha256 = "16mp9dpp57id760zc932dszd5r1ncskwwxrp0djka5r1alddjz6n";
       libraryHaskellDepends = [ base bytestring text ];
       homepage = "https://github.com/barrucadu/irc-ctcp";
       description = "A CTCP encoding and decoding library for IRC clients";
       license = stdenv.lib.licenses.mit;
     }) {};
  "islink" = callPackage
    ({ mkDerivation, base, unordered-containers }:
     mkDerivation {
       pname = "islink";
       version = "0.1.0.0";
       sha256 = "1mxfs8k0znc7v2iynjnhr4k5c9as4ip37ybvxnvjfqy4dld9rgyg";
       libraryHaskellDepends = [ base unordered-containers ];
       homepage = "https://github.com/redneb/islink";
       description = "Check if an HTML element is a link";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "iso3166-country-codes" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "iso3166-country-codes";
       version = "0.20140203.7";
       sha256 = "1cfmrkrx5wdcr8rrwakhmv0a5bxipxc3l7p4z5nxzl5nrjrli79s";
       revision = "1";
       editedCabalFile = "13s1rybq2fvaxavrk8wq8vg4wx3sga43qq3mxlqsas64ilkckfdg";
       libraryHaskellDepends = [ base ];
       description = "A datatype for ISO 3166 country codes";
       license = "LGPL";
     }) {};
  "iso639" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "iso639";
       version = "0.1.0.3";
       sha256 = "1s15vb00nqxnmm59axapipib1snh6q5qhfdw7pgb9vdsz8i86jqj";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/HugoDaniel/iso639";
       description = "ISO-639-1 language codes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "iso8601-time" = callPackage
    ({ mkDerivation, base, hspec, HUnit, time }:
     mkDerivation {
       pname = "iso8601-time";
       version = "0.1.4";
       sha256 = "09h1jfdj9fv1nsryhka2mgl8nig9840f5kv06vyyh7l4l1z767bn";
       libraryHaskellDepends = [ base time ];
       testHaskellDepends = [ base hspec HUnit time ];
       homepage = "https://github.com/nh2/iso8601-time";
       description = "Convert to/from the ISO 8601 time format";
       license = stdenv.lib.licenses.mit;
     }) {};
  "iterable" = callPackage
    ({ mkDerivation, base, mtl, tagged, template-haskell, vector }:
     mkDerivation {
       pname = "iterable";
       version = "3.0";
       sha256 = "194718jpjwkv3ynlpgjlpvf0iqnj7dkd3zmci363gsa425i3vlbc";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base mtl tagged template-haskell vector
       ];
       homepage = "https://github.com/BioHaskell/iterable";
       description = "API for hierarchical multilevel collections";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ix-shapable" = callPackage
    ({ mkDerivation, array, base }:
     mkDerivation {
       pname = "ix-shapable";
       version = "0.1.0";
       sha256 = "08ljlzywnw0h8ijwb6yh4r8l6z7bbknwxv9cjq7lkfx7m2vgy1sh";
       libraryHaskellDepends = [ array base ];
       description = "Reshape multi-dimensional arrays";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ixset" = callPackage
    ({ mkDerivation, base, containers, safecopy, syb, syb-with-class
     , template-haskell
     }:
     mkDerivation {
       pname = "ixset";
       version = "1.0.6.1";
       sha256 = "1q972g2nn22nj6zzjx70nzydxil9zfgc6mz8m5w237w8xw0rd6kj";
       libraryHaskellDepends = [
         base containers safecopy syb syb-with-class template-haskell
       ];
       homepage = "http://happstack.com";
       description = "Efficient relational queries on Haskell sets";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ixset-typed" = callPackage
    ({ mkDerivation, base, containers, deepseq, HUnit, QuickCheck
     , safecopy, syb, tasty, tasty-hunit, tasty-quickcheck
     , template-haskell
     }:
     mkDerivation {
       pname = "ixset-typed";
       version = "0.3";
       sha256 = "0m6k5n755pfkx1grd5rbp1a9vlps6fdm25l91aa0wp5af1sakjmk";
       revision = "1";
       editedCabalFile = "0z54067fa3c0dzh3nysjm1i439hdf5xyn2h380cqli2nh3wdqgp3";
       libraryHaskellDepends = [
         base containers deepseq safecopy syb template-haskell
       ];
       testHaskellDepends = [
         base containers HUnit QuickCheck tasty tasty-hunit tasty-quickcheck
       ];
       doCheck = false;
       description = "Efficient relational queries on Haskell sets";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "jmacro" = callPackage
    ({ mkDerivation, aeson, base, bytestring, containers
     , haskell-src-exts, haskell-src-meta, mtl, parseargs, parsec
     , regex-posix, safe, syb, template-haskell, text
     , unordered-containers, vector, wl-pprint-text
     }:
     mkDerivation {
       pname = "jmacro";
       version = "0.6.13";
       sha256 = "0b7l4h3apkj41w69wg3ympflh2l53vbmyvs6xf20xn57d6p8lhn4";
       revision = "1";
       editedCabalFile = "1mv4a9z6mi6wn2r67wlbdl27ancrv4zgij9amnvzcss4rq35456b";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base bytestring containers haskell-src-exts haskell-src-meta
         mtl parsec regex-posix safe syb template-haskell text
         unordered-containers vector wl-pprint-text
       ];
       executableHaskellDepends = [ parseargs ];
       description = "QuasiQuotation library for programmatic generation of Javascript code";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "jmacro-rpc" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, blaze-html, bytestring
     , containers, contravariant, jmacro, mtl, scientific, split, text
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "jmacro-rpc";
       version = "0.3.2";
       sha256 = "1nf5f62s749xsji2rg25dgj7mc668l3n7i7l9n1pjkn8gfwm6bx3";
       libraryHaskellDepends = [
         aeson attoparsec base blaze-html bytestring containers
         contravariant jmacro mtl scientific split text unordered-containers
         vector
       ];
       homepage = "http://hub.darcs.net/gershomb/jmacro";
       description = "JSON-RPC clients and servers using JMacro, and evented client-server Reactive Programming";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "jmacro-rpc-happstack" = callPackage
    ({ mkDerivation, aeson, base, blaze-html, bytestring, containers
     , happstack-server, jmacro, jmacro-rpc, mtl
     }:
     mkDerivation {
       pname = "jmacro-rpc-happstack";
       version = "0.3.2";
       sha256 = "0r5h8hlsjppnhqdxa0dsrjkpv3pldbkv5v4dryd4km2v38yfxkcr";
       libraryHaskellDepends = [
         aeson base blaze-html bytestring containers happstack-server jmacro
         jmacro-rpc mtl
       ];
       homepage = "http://hub.darcs.net/gershomb/jmacro-rpc";
       description = "Happstack backend for jmacro-rpc";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "jmacro-rpc-snap" = callPackage
    ({ mkDerivation, aeson, base, bytestring, containers, jmacro
     , jmacro-rpc, mtl, snap-core
     }:
     mkDerivation {
       pname = "jmacro-rpc-snap";
       version = "0.3";
       sha256 = "1syzx2lw4r8knsqhsvilp04wb8a718379cmn0nhjqlwhpaja9bj8";
       libraryHaskellDepends = [
         aeson base bytestring containers jmacro jmacro-rpc mtl snap-core
       ];
       homepage = "http://hub.darcs.net/gershomb/jmacro-rpc";
       description = "Snap backend for jmacro-rpc";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "jose-jwt" = callPackage
    ({ mkDerivation, aeson, aeson-qq, base, bytestring, cereal
     , containers, criterion, cryptonite, either, hspec, HUnit, memory
     , mtl, QuickCheck, text, time, unordered-containers, vector
     }:
     mkDerivation {
       pname = "jose-jwt";
       version = "0.7";
       sha256 = "0qna1rdqnqn3m04cizniksm9859pibknza579hdhi9kbgq2bzmb0";
       revision = "1";
       editedCabalFile = "11lv60ygi58jg582irg1kgkmd0zr7gc5inx810lg2vy6yqwzagd4";
       configureFlags = [ "-f-doctest" ];
       libraryHaskellDepends = [
         aeson base bytestring cereal containers cryptonite either memory
         mtl text time unordered-containers vector
       ];
       testHaskellDepends = [
         aeson aeson-qq base bytestring cryptonite either hspec HUnit memory
         mtl QuickCheck text unordered-containers vector
       ];
       benchmarkHaskellDepends = [ base bytestring criterion ];
       doCheck = false;
       homepage = "http://github.com/tekul/jose-jwt";
       description = "JSON Object Signing and Encryption Library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "js-flot" = callPackage
    ({ mkDerivation, base, HTTP }:
     mkDerivation {
       pname = "js-flot";
       version = "0.8.3";
       sha256 = "0yjyzqh3qzhy5h3nql1fckw0gcfb0f4wj9pm85nafpfqp2kg58hv";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base HTTP ];
       homepage = "https://github.com/ndmitchell/js-flot#readme";
       description = "Obtain minified flot code";
       license = stdenv.lib.licenses.mit;
     }) {};
  "js-jquery" = callPackage
    ({ mkDerivation, base, HTTP }:
     mkDerivation {
       pname = "js-jquery";
       version = "1.12.1";
       sha256 = "18ajwhwp58qljcqri647kb438vprcci99a3a1yq2pkqwss2kawnz";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base HTTP ];
       homepage = "https://github.com/ndmitchell/js-jquery#readme";
       description = "Obtain minified jQuery code";
       license = stdenv.lib.licenses.mit;
     }) {};
  "json" = callPackage
    ({ mkDerivation, array, base, bytestring, containers, mtl, parsec
     , pretty, syb, text
     }:
     mkDerivation {
       pname = "json";
       version = "0.9.1";
       sha256 = "18l5027vc68hnnxrxlnyl59vkkg95a92m1zzms0dqiby2r6pxdcn";
       libraryHaskellDepends = [
         array base bytestring containers mtl parsec pretty syb text
       ];
       description = "Support for serialising Haskell to and from JSON";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "json-autotype" = callPackage
    ({ mkDerivation, aeson, base, bytestring, containers, directory
     , filepath, GenericPretty, hashable, hflags, hint, lens, mmap, mtl
     , pretty, process, QuickCheck, scientific, smallcheck, text
     , uniplate, unordered-containers, vector
     }:
     mkDerivation {
       pname = "json-autotype";
       version = "1.0.11";
       sha256 = "08xzqlhmmgnwfzvhvcdwwjn1zdqgqw72f60ylqg3pfg0s9y6x4lq";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base bytestring containers filepath GenericPretty hashable
         hflags hint lens mmap mtl pretty process scientific text uniplate
         unordered-containers vector
       ];
       executableHaskellDepends = [
         aeson base bytestring containers filepath GenericPretty hashable
         hflags hint lens mtl pretty process scientific text uniplate
         unordered-containers vector
       ];
       testHaskellDepends = [
         aeson base bytestring containers directory filepath GenericPretty
         hashable hflags lens mtl pretty process QuickCheck scientific
         smallcheck text uniplate unordered-containers vector
       ];
       homepage = "https://github.com/mgajda/json-autotype";
       description = "Automatic type declaration for JSON input data";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "json-builder" = callPackage
    ({ mkDerivation, base, blaze-builder, blaze-textual, bytestring
     , containers, text, unordered-containers, utf8-string, vector
     }:
     mkDerivation {
       pname = "json-builder";
       version = "0.3";
       sha256 = "0k8b93bqi68c7nwq09cws8kfm84kd4k5lpy4z9ifks1jaiyj3vxm";
       libraryHaskellDepends = [
         base blaze-builder blaze-textual bytestring containers text
         unordered-containers utf8-string vector
       ];
       homepage = "http://github.com/lpsmith/json-builder";
       description = "Data structure agnostic JSON serialization";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "json-schema" = callPackage
    ({ mkDerivation, aeson, aeson-utils, attoparsec, base, bytestring
     , containers, generic-aeson, generic-deriving, mtl, scientific
     , tasty, tasty-hunit, tasty-th, text, time, unordered-containers
     , vector
     }:
     mkDerivation {
       pname = "json-schema";
       version = "0.7.4.1";
       sha256 = "15kwgpkryd865nls9zm6ya6jzmiygsb537ij7ps39dzasqbnl3an";
       revision = "12";
       editedCabalFile = "0x3cvndfshy4sd66m2xilyp876kvmgw5flagawamwis6hs8pfdi2";
       libraryHaskellDepends = [
         aeson base containers generic-aeson generic-deriving mtl scientific
         text time unordered-containers vector
       ];
       testHaskellDepends = [
         aeson aeson-utils attoparsec base bytestring generic-aeson tasty
         tasty-hunit tasty-th text vector
       ];
       description = "Types and type classes for defining JSON schemas";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "jwt" = callPackage
    ({ mkDerivation, aeson, base, base64-bytestring, bytestring
     , containers, cryptohash, data-default, http-types, HUnit, lens
     , lens-aeson, network, network-uri, QuickCheck, scientific
     , semigroups, tasty, tasty-hunit, tasty-quickcheck, tasty-th, text
     , time, unordered-containers, vector
     }:
     mkDerivation {
       pname = "jwt";
       version = "0.6.0";
       sha256 = "02nb1nz7rrgqgr9dg01gi2kh29hpy4mlwpvk5ziqcg3zkb0gl60w";
       libraryHaskellDepends = [
         aeson base base64-bytestring bytestring containers cryptohash
         data-default http-types network network-uri scientific semigroups
         text time unordered-containers vector
       ];
       testHaskellDepends = [
         aeson base base64-bytestring bytestring containers cryptohash
         data-default http-types HUnit lens lens-aeson network network-uri
         QuickCheck scientific semigroups tasty tasty-hunit tasty-quickcheck
         tasty-th text time unordered-containers vector
       ];
       homepage = "https://bitbucket.org/ssaasen/haskell-jwt";
       description = "JSON Web Token (JWT) decoding and encoding";
       license = stdenv.lib.licenses.mit;
     }) {};
  "kan-extensions" = callPackage
    ({ mkDerivation, adjunctions, array, base, comonad, containers
     , contravariant, distributive, free, mtl, semigroupoids, tagged
     , transformers
     }:
     mkDerivation {
       pname = "kan-extensions";
       version = "4.2.3";
       sha256 = "0iywbadpy8s3isfzlx9dlz3apaywhqq4gdbxkwygksq8pzdhwkrk";
       libraryHaskellDepends = [
         adjunctions array base comonad containers contravariant
         distributive free mtl semigroupoids tagged transformers
       ];
       homepage = "http://github.com/ekmett/kan-extensions/";
       description = "Kan extensions, Kan lifts, various forms of the Yoneda lemma, and (co)density (co)monads";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "kansas-comet" = callPackage
    ({ mkDerivation, aeson, base, containers, data-default-class
     , scotty, stm, text, time, transformers, unordered-containers
     }:
     mkDerivation {
       pname = "kansas-comet";
       version = "0.4";
       sha256 = "1q9rffh6589a5am8mvfzxzwws34vg08rdjxggfabhmg9y9jla6hz";
       revision = "11";
       editedCabalFile = "0l56snbdxbcwrmh7gna4237873d366dfbwp59a4wq1s51clhmb4z";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson base containers data-default-class scotty stm text time
         transformers unordered-containers
       ];
       homepage = "https://github.com/ku-fpg/kansas-comet/";
       description = "A JavaScript push mechanism based on the comet idiom";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "kdt" = callPackage
    ({ mkDerivation, base, criterion, deepseq, deepseq-generics, heap
     , mersenne-random-pure64, MonadRandom, QuickCheck
     }:
     mkDerivation {
       pname = "kdt";
       version = "0.2.3";
       sha256 = "0chxxl53jnnhfs02gxr2a3kzppmsnwrrfr1fjyx71lkvigwy71yk";
       libraryHaskellDepends = [ base deepseq deepseq-generics heap ];
       testHaskellDepends = [ base deepseq deepseq-generics QuickCheck ];
       benchmarkHaskellDepends = [
         base criterion deepseq deepseq-generics heap mersenne-random-pure64
         MonadRandom QuickCheck
       ];
       homepage = "https://github.com/giogadi/kdt";
       description = "Fast and flexible k-d trees for various types of point queries";
       license = stdenv.lib.licenses.mit;
     }) {};
  "keter" = callPackage
    ({ mkDerivation, aeson, array, async, attoparsec, base
     , blaze-builder, bytestring, case-insensitive, conduit
     , conduit-extra, containers, data-default, directory, filepath
     , fsnotify, hspec, http-client, http-conduit, http-reverse-proxy
     , http-types, HUnit, lifted-base, mtl, network, process, random
     , regex-tdfa, stm, tar, template-haskell, text, time, transformers
     , unix, unix-compat, unordered-containers, vector, wai
     , wai-app-static, wai-extra, warp, warp-tls, yaml, zlib
     }:
     mkDerivation {
       pname = "keter";
       version = "1.4.3.1";
       sha256 = "0bsq6z7krisshcrkb528kixiw6liabb7chgk87088vn3gpwx048i";
       revision = "3";
       editedCabalFile = "1d18bcxrhlnnlwicsm03njdi6vgzb3imgblbmy4yr97h21f17rlk";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson array async attoparsec base blaze-builder bytestring
         case-insensitive conduit conduit-extra containers data-default
         directory filepath fsnotify http-client http-conduit
         http-reverse-proxy http-types lifted-base mtl network process
         random regex-tdfa stm tar template-haskell text time transformers
         unix unix-compat unordered-containers vector wai wai-app-static
         wai-extra warp warp-tls yaml zlib
       ];
       executableHaskellDepends = [ base data-default filepath ];
       testHaskellDepends = [
         base bytestring conduit hspec HUnit transformers unix
       ];
       homepage = "http://www.yesodweb.com/";
       description = "Web application deployment manager, focusing on Haskell web frameworks";
       license = stdenv.lib.licenses.mit;
     }) {};
  "keycode" = callPackage
    ({ mkDerivation, base, containers }:
     mkDerivation {
       pname = "keycode";
       version = "0.1.1";
       sha256 = "0pj3fs90ha5xyqymgqi0qf9mm9l3x22kajhjk35zkyycn0zyvf3x";
       revision = "1";
       editedCabalFile = "0p34h2vrick0wgc396arhi2l97hp9w1hx0s7ilvwlbfi4la9q78g";
       libraryHaskellDepends = [ base containers ];
       homepage = "https://github.com/RyanGlScott/keycode";
       description = "Maps web browser keycodes to their corresponding keyboard keys";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "keys" = callPackage
    ({ mkDerivation, array, base, comonad, containers, free, hashable
     , semigroupoids, semigroups, transformers, transformers-compat
     , unordered-containers
     }:
     mkDerivation {
       pname = "keys";
       version = "3.11";
       sha256 = "1cn45h27hxwb4ci1iyd2qn0fzyb2y85qq4821a9xm37bwsvrgwqc";
       revision = "1";
       editedCabalFile = "1lyg4wyi7mkqvbfl9lvfln3j4vys47jih56zyjba7nx36kbw185i";
       libraryHaskellDepends = [
         array base comonad containers free hashable semigroupoids
         semigroups transformers transformers-compat unordered-containers
       ];
       homepage = "http://github.com/ekmett/keys/";
       description = "Keyed functors and containers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "kmeans" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "kmeans";
       version = "0.1.3";
       sha256 = "02rc3bd2cp1fp0fxbzqiy34s5gn38j8hgviilz1584z05jhj97ix";
       libraryHaskellDepends = [ base ];
       description = "K-means clustering algorithm";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "knob" = callPackage
    ({ mkDerivation, base, bytestring, transformers }:
     mkDerivation {
       pname = "knob";
       version = "0.1.1";
       sha256 = "05qj7s04p5pbasivyxc06l0jbii250zjnvb3l1y2sfhglb7q8b4c";
       libraryHaskellDepends = [ base bytestring transformers ];
       homepage = "https://john-millikin.com/software/knob/";
       description = "Memory-backed handles";
       license = stdenv.lib.licenses.mit;
     }) {};
  "koofr-client" = callPackage
    ({ mkDerivation, aeson, base, bytestring, filepath, http-client
     , http-client-tls, http-types, mtl
     }:
     mkDerivation {
       pname = "koofr-client";
       version = "1.0.0.3";
       sha256 = "1bz7akd7sssn1gzqfvr0y343771zk7dn1n3as0m93wg4ifpz1dia";
       revision = "1";
       editedCabalFile = "0qaipcg9n93z0za2a8jy3mv73a3q2b1dv98v2g5wwcv1qx7rvvhv";
       libraryHaskellDepends = [
         aeson base bytestring filepath http-client http-client-tls
         http-types mtl
       ];
       homepage = "https://github.com/edofic/koofr-api-hs";
       description = "Client to Koofr API";
       license = stdenv.lib.licenses.mit;
     }) {};
  "kraken" = callPackage
    ({ mkDerivation, aeson, base, bytestring, http-client
     , http-client-tls, mtl
     }:
     mkDerivation {
       pname = "kraken";
       version = "0.0.1";
       sha256 = "1df6g65wrhzfz3kj9n4bcja09adr4qhl3kzv5vaxl37lbr9nwzr2";
       revision = "1";
       editedCabalFile = "1vii1vzlgzzlss0m144f1b5pppyy4l9lxrv26i9ywj34r1q6xb2d";
       libraryHaskellDepends = [
         aeson base bytestring http-client http-client-tls mtl
       ];
       description = "Kraken.io API client";
       license = stdenv.lib.licenses.mit;
     }) {};
  "kure" = callPackage
    ({ mkDerivation, base, dlist, transformers }:
     mkDerivation {
       pname = "kure";
       version = "2.16.12";
       sha256 = "1n95f1ijxjxgbq8a33jzmd91yk15bgxx8damxs04y99kzih7sgjc";
       libraryHaskellDepends = [ base dlist transformers ];
       homepage = "http://www.ittc.ku.edu/csdl/fpg/software/kure.html";
       description = "Combinators for Strategic Programming";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "language-c" = callPackage
    ({ mkDerivation, alex, array, base, bytestring, containers
     , directory, filepath, happy, pretty, process, syb
     }:
     mkDerivation {
       pname = "language-c";
       version = "0.4.7";
       sha256 = "1r0jlncv6d6ai8kblrdq9gz8abx57b24y6hfh30xx20zdgccjvaz";
       libraryHaskellDepends = [
         array base bytestring containers directory filepath pretty process
         syb
       ];
       libraryToolDepends = [ alex happy ];
       homepage = "http://www.sivity.net/projects/language.c/";
       description = "Analysis and generation of C code";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "language-ecmascript" = callPackage
    ({ mkDerivation, base, containers, data-default-class, Diff, mtl
     , parsec, QuickCheck, template-haskell, testing-feat, uniplate
     , wl-pprint
     }:
     mkDerivation {
       pname = "language-ecmascript";
       version = "0.17.1.0";
       sha256 = "0gl82zq50x98jzagkzdb5fgf5gnspvpx6i66g3r25mcn606ky7nz";
       revision = "2";
       editedCabalFile = "0wndi8w3nchzvsmqxy5pbxld4c18a0b3ncffqfail1dpa6i30my6";
       libraryHaskellDepends = [
         base containers data-default-class Diff mtl parsec QuickCheck
         template-haskell testing-feat uniplate wl-pprint
       ];
       doCheck = false;
       homepage = "http://github.com/jswebtools/language-ecmascript";
       description = "JavaScript parser and pretty-printer library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "language-glsl" = callPackage
    ({ mkDerivation, base, HUnit, parsec, prettyclass, test-framework
     , test-framework-hunit
     }:
     mkDerivation {
       pname = "language-glsl";
       version = "0.2.0";
       sha256 = "1wmfzif1cc3a8sls3swms9x54hm9ic8y301zav6fg4mr7xa4hqr3";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base parsec prettyclass ];
       executableHaskellDepends = [ base parsec prettyclass ];
       testHaskellDepends = [
         base HUnit parsec prettyclass test-framework test-framework-hunit
       ];
       description = "GLSL abstract syntax tree, parser, and pretty-printer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "language-haskell-extract" = callPackage
    ({ mkDerivation, base, regex-posix, template-haskell }:
     mkDerivation {
       pname = "language-haskell-extract";
       version = "0.2.4";
       sha256 = "1nxcs7g8a1sp91bzpy4cj6s31k5pvc3gvig04cbrggv5cvjidnhl";
       libraryHaskellDepends = [ base regex-posix template-haskell ];
       homepage = "http://github.com/finnsson/template-helper";
       description = "Module to automatically extract functions from the local code";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "language-java" = callPackage
    ({ mkDerivation, alex, array, base, cpphs, directory, filepath
     , HUnit, mtl, parsec, pretty, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "language-java";
       version = "0.2.8";
       sha256 = "0ry3x4riqyjr2bwrk64992aw2g7jxzrsk8f291iby62bkq49wy0b";
       libraryHaskellDepends = [ array base cpphs parsec pretty ];
       libraryToolDepends = [ alex ];
       testHaskellDepends = [
         base directory filepath HUnit mtl QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2
       ];
       doCheck = false;
       homepage = "http://github.com/vincenthz/language-java";
       description = "Manipulating Java source: abstract syntax, lexer, parser, and pretty-printer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "language-javascript" = callPackage
    ({ mkDerivation, alex, array, base, blaze-builder, bytestring
     , Cabal, containers, happy, HUnit, mtl, QuickCheck, test-framework
     , test-framework-hunit, utf8-light, utf8-string
     }:
     mkDerivation {
       pname = "language-javascript";
       version = "0.5.14.2";
       sha256 = "0inm6yncl5dv9ij3fyk38c6mad8fm1vqs70rpqi1a7w2n5cbv1ia";
       libraryHaskellDepends = [
         array base blaze-builder bytestring containers mtl utf8-string
       ];
       libraryToolDepends = [ alex happy ];
       testHaskellDepends = [
         array base blaze-builder bytestring Cabal containers HUnit mtl
         QuickCheck test-framework test-framework-hunit utf8-light
         utf8-string
       ];
       homepage = "http://github.com/erikd/language-javascript";
       description = "Parser for JavaScript";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "language-lua2" = callPackage
    ({ mkDerivation, base, containers, deepseq, Earley
     , lexer-applicative, microlens, optparse-applicative, QuickCheck
     , regex-applicative, semigroups, srcloc, tasty, tasty-hunit
     , tasty-quickcheck, transformers, unordered-containers, wl-pprint
     }:
     mkDerivation {
       pname = "language-lua2";
       version = "0.1.0.5";
       sha256 = "0g9r4i29061xgglqwh3gicdm68v28b73bn7as7lwgqfv2nqdf92g";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base containers Earley lexer-applicative microlens
         regex-applicative semigroups srcloc transformers
         unordered-containers wl-pprint
       ];
       executableHaskellDepends = [
         base Earley lexer-applicative optparse-applicative srcloc wl-pprint
       ];
       testHaskellDepends = [
         base deepseq lexer-applicative QuickCheck semigroups srcloc tasty
         tasty-hunit tasty-quickcheck unordered-containers
       ];
       doCheck = false;
       homepage = "http://github.com/mitchellwrosen/language-lua2";
       description = "Lua parser and pretty printer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "language-nix" = callPackage
    ({ mkDerivation, base, base-compat, Cabal, deepseq, doctest, lens
     , pretty, QuickCheck
     }:
     mkDerivation {
       pname = "language-nix";
       version = "2.1";
       sha256 = "0i70i6l4ymc0781bk4r3j5zpcyw2qhdhskrbag54ynrffb8f1q5d";
       libraryHaskellDepends = [
         base base-compat Cabal deepseq lens pretty QuickCheck
       ];
       testHaskellDepends = [
         base base-compat Cabal deepseq doctest lens pretty QuickCheck
       ];
       homepage = "https://github.com/peti/language-nix#readme";
       description = "Data types and useful functions to represent and manipulate the Nix language";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "language-thrift" = callPackage
    ({ mkDerivation, ansi-wl-pprint, base, hspec, hspec-discover, lens
     , parsers, QuickCheck, text, transformers, trifecta, wl-pprint
     }:
     mkDerivation {
       pname = "language-thrift";
       version = "0.7.0.1";
       sha256 = "1idxzfnni6hyc3d2rdhrryijnc7fqmyhik59x6rrpr4za9r6mlk7";
       libraryHaskellDepends = [
         ansi-wl-pprint base lens parsers text transformers trifecta
         wl-pprint
       ];
       testHaskellDepends = [
         ansi-wl-pprint base hspec hspec-discover parsers QuickCheck text
         trifecta wl-pprint
       ];
       homepage = "https://github.com/abhinav/language-thrift";
       description = "Parser and pretty printer for the Thrift IDL format";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "largeword" = callPackage
    ({ mkDerivation, base, binary, bytestring, HUnit, QuickCheck
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "largeword";
       version = "1.2.5";
       sha256 = "0ikxklg4w30hyfcnrq8hr348p8s9hg42b9sj9x0byjb6hinv1cq0";
       libraryHaskellDepends = [ base binary ];
       testHaskellDepends = [
         base binary bytestring HUnit QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2
       ];
       homepage = "https://github.com/idontgetoutmuch/largeword";
       description = "Provides Word128, Word192 and Word256 and a way of producing other large words if required";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "latex-formulae-hakyll" = callPackage
    ({ mkDerivation, base, hakyll, latex-formulae-image
     , latex-formulae-pandoc, lrucache, pandoc-types
     }:
     mkDerivation {
       pname = "latex-formulae-hakyll";
       version = "0.2.0.1";
       sha256 = "14qa8p1akfdcf4bhmcapa5ahyny2crgh7b58bf1hnsw6jk2hq7ng";
       libraryHaskellDepends = [
         base hakyll latex-formulae-image latex-formulae-pandoc lrucache
         pandoc-types
       ];
       homepage = "https://github.com/liamoc/latex-formulae#readme";
       description = "Use actual LaTeX to render formulae inside Hakyll pages";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "latex-formulae-image" = callPackage
    ({ mkDerivation, base, directory, errors, filepath, JuicyPixels
     , process, temporary, transformers
     }:
     mkDerivation {
       pname = "latex-formulae-image";
       version = "0.1.1.1";
       sha256 = "0q9zmin56lxfg694ppw309lz4aanz7xa488lqwhfr0kjchh38rkc";
       libraryHaskellDepends = [
         base directory errors filepath JuicyPixels process temporary
         transformers
       ];
       homepage = "http://github.com/liamoc/latex-formulae#readme";
       description = "A library for rendering LaTeX formulae as images using an actual LaTeX installation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "latex-formulae-pandoc" = callPackage
    ({ mkDerivation, base, base64-bytestring, bytestring, directory
     , filepath, JuicyPixels, latex-formulae-image, pandoc-types
     }:
     mkDerivation {
       pname = "latex-formulae-pandoc";
       version = "0.2.0.3";
       sha256 = "0bficlpki79wln6b421mzb1jb0brn2kvhm4q1filv0bjjla215r8";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base base64-bytestring bytestring directory filepath JuicyPixels
         latex-formulae-image pandoc-types
       ];
       executableHaskellDepends = [
         base latex-formulae-image pandoc-types
       ];
       homepage = "http://github.com/liamoc/latex-formulae#readme";
       description = "Render LaTeX formulae in pandoc documents to images with an actual LaTeX installation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lattices" = callPackage
    ({ mkDerivation, base, containers, deepseq, hashable, QuickCheck
     , semigroups, tagged, tasty, tasty-quickcheck, transformers
     , universe-base, universe-reverse-instances, unordered-containers
     , void
     }:
     mkDerivation {
       pname = "lattices";
       version = "1.5.0";
       sha256 = "07sxli1xix9gi8smk6crgx4ijs7mjq6g95ci423r0fsh6i1zpqy6";
       revision = "1";
       editedCabalFile = "04l5x09f48vdkljzl79g2cybbm5wdxa0bf4xvlwdkcbky9h0qvan";
       libraryHaskellDepends = [
         base containers deepseq hashable semigroups tagged universe-base
         universe-reverse-instances unordered-containers void
       ];
       testHaskellDepends = [
         base QuickCheck tasty tasty-quickcheck transformers
       ];
       homepage = "http://github.com/phadej/lattices/";
       description = "Fine-grained library for constructing and manipulating lattices";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lazy-csv" = callPackage
    ({ mkDerivation, base, bytestring }:
     mkDerivation {
       pname = "lazy-csv";
       version = "0.5.1";
       sha256 = "17v495xnv38bx9zfjfa8dl3prj94lg74dhn1jzqrjq488gfwp2w8";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base bytestring ];
       executableHaskellDepends = [ base bytestring ];
       homepage = "http://code.haskell.org/lazy-csv";
       description = "Efficient lazy parsers for CSV (comma-separated values)";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lca" = callPackage
    ({ mkDerivation, base, doctest }:
     mkDerivation {
       pname = "lca";
       version = "0.3";
       sha256 = "081fk0ci5vb84w4zwah6qwbr0i78v2pr6m6nn1y226vv5w3kakza";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base doctest ];
       homepage = "http://github.com/ekmett/lca/";
       description = "O(log n) persistent on-line lowest common ancestor calculation without preprocessing";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lens" = callPackage
    ({ mkDerivation, array, base, base-orphans, bifunctors, bytestring
     , comonad, comonads-fd, containers, contravariant, criterion
     , deepseq, directory, distributive, doctest, exceptions, filepath
     , free, generic-deriving, ghc-prim, hashable, hlint, HUnit
     , kan-extensions, mtl, nats, parallel, profunctors, QuickCheck
     , reflection, semigroupoids, semigroups, simple-reflect, tagged
     , template-haskell, test-framework, test-framework-hunit
     , test-framework-quickcheck2, test-framework-th, text, transformers
     , transformers-compat, unordered-containers, vector, void
     }:
     mkDerivation {
       pname = "lens";
       version = "4.13";
       sha256 = "0g4g0xksrb2m8wgsmraaq8qnk1sssb42kr65fc7clgyid6zyfmim";
       revision = "1";
       editedCabalFile = "07raq2v72y1p30hcgqy765q471ndwwl3pzmgp1p1dlpzqf3c8fjf";
       libraryHaskellDepends = [
         array base base-orphans bifunctors bytestring comonad containers
         contravariant distributive exceptions filepath free ghc-prim
         hashable kan-extensions mtl parallel profunctors reflection
         semigroupoids semigroups tagged template-haskell text transformers
         transformers-compat unordered-containers vector void
       ];
       testHaskellDepends = [
         base bytestring containers deepseq directory doctest filepath
         generic-deriving hlint HUnit mtl nats parallel QuickCheck
         semigroups simple-reflect test-framework test-framework-hunit
         test-framework-quickcheck2 test-framework-th text transformers
         unordered-containers vector
       ];
       benchmarkHaskellDepends = [
         base bytestring comonad comonads-fd containers criterion deepseq
         generic-deriving transformers unordered-containers vector
       ];
       doCheck = false;
       homepage = "http://github.com/ekmett/lens/";
       description = "Lenses, Folds and Traversals";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lens-action" = callPackage
    ({ mkDerivation, base, comonad, contravariant, directory, doctest
     , filepath, lens, mtl, profunctors, semigroupoids, semigroups
     , transformers
     }:
     mkDerivation {
       pname = "lens-action";
       version = "0.2.0.2";
       sha256 = "0wfkqqlkwk6jim7s21w2f182qnxlvzfapkbvx6ycz9v8vsr70v72";
       revision = "2";
       editedCabalFile = "1z0bgv6zvxhhcamv4pnwi8lldps38qx0jjmq3h5703nfiikqrwgj";
       libraryHaskellDepends = [
         base comonad contravariant lens mtl profunctors semigroupoids
         semigroups transformers
       ];
       testHaskellDepends = [ base directory doctest filepath ];
       homepage = "http://github.com/ekmett/lens-action/";
       description = "Monadic Getters and Folds";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lens-aeson" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, bytestring, directory
     , doctest, filepath, generic-deriving, lens, scientific, semigroups
     , simple-reflect, text, unordered-containers, vector
     }:
     mkDerivation {
       pname = "lens-aeson";
       version = "1.0.0.5";
       sha256 = "17sx79s3rx19smf0phdvyd5vkhk0fhgswhyzqss0j8l5fmdsvyk5";
       revision = "5";
       editedCabalFile = "1dzd2z5sb7sf5kgijm6lkxzbxhia761xfw5blpwfqp444q8dsi34";
       libraryHaskellDepends = [
         aeson attoparsec base bytestring lens scientific text
         unordered-containers vector
       ];
       testHaskellDepends = [
         base directory doctest filepath generic-deriving semigroups
         simple-reflect
       ];
       homepage = "http://github.com/lens/lens-aeson/";
       description = "Law-abiding lenses for aeson";
       license = stdenv.lib.licenses.mit;
     }) {};
  "lens-family" = callPackage
    ({ mkDerivation, base, containers, lens-family-core, mtl
     , transformers
     }:
     mkDerivation {
       pname = "lens-family";
       version = "1.2.0";
       sha256 = "0pbyx43ajx96nhcw4brml1r5azs1041k7nv4m94ak6x77n5sr4mb";
       libraryHaskellDepends = [
         base containers lens-family-core mtl transformers
       ];
       description = "Lens Families";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lens-family-core" = callPackage
    ({ mkDerivation, base, containers, transformers }:
     mkDerivation {
       pname = "lens-family-core";
       version = "1.2.0";
       sha256 = "0hxrbbc4azfafnr4ab2zxgic093wwg6gx5h1ggp4xks55d8rhraz";
       libraryHaskellDepends = [ base containers transformers ];
       description = "Haskell 98 Lens Families";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lens-family-th" = callPackage
    ({ mkDerivation, base, template-haskell }:
     mkDerivation {
       pname = "lens-family-th";
       version = "0.4.1.0";
       sha256 = "084yng26xyhw6c6hij3p70zvjpvm1dlw6klphw51car9gi6dqkvm";
       revision = "2";
       editedCabalFile = "0simbh9r9gjb375slxpbnlxfj594fm5k1gh33k4x23i5vjg1934p";
       libraryHaskellDepends = [ base template-haskell ];
       homepage = "http://github.com/DanBurton/lens-family-th#readme";
       description = "Generate lens-family style lenses";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lens-regex" = callPackage
    ({ mkDerivation, array, base, directory, doctest, filepath, lens
     , regex-base, regex-posix, template-haskell
     }:
     mkDerivation {
       pname = "lens-regex";
       version = "0.1.0";
       sha256 = "0hjizjmvdngxn63gs7x87qidh71aqhvyigrnqlbfjqan76pb6m29";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         array base lens regex-base template-haskell
       ];
       testHaskellDepends = [
         base directory doctest filepath regex-posix
       ];
       homepage = "https://github.com/himura/lens-regex";
       description = "Lens powered regular expression";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lens-simple" = callPackage
    ({ mkDerivation, base, lens-family, lens-family-core
     , lens-family-th, mtl, transformers
     }:
     mkDerivation {
       pname = "lens-simple";
       version = "0.1.0.8";
       sha256 = "0n44nbzlzrzw5nd53x4zx7sl7nqf43c6a2pyyrc7p53lnb2l9896";
       libraryHaskellDepends = [
         base lens-family lens-family-core lens-family-th mtl transformers
       ];
       homepage = "https://github.com/michaelt/lens-simple";
       description = "simplified import of elementary lens-family combinators";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lentil" = callPackage
    ({ mkDerivation, ansi-wl-pprint, base, csv, directory, filemanip
     , filepath, hspec, natural-sort, optparse-applicative, parsec
     , regex-tdfa
     }:
     mkDerivation {
       pname = "lentil";
       version = "0.1.10.0";
       sha256 = "098srcaci0mj90vh35chhalk1w0ixaa86xyz27kqhma160jjp8ya";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         ansi-wl-pprint base csv directory filemanip filepath natural-sort
         optparse-applicative parsec regex-tdfa
       ];
       testHaskellDepends = [
         ansi-wl-pprint base csv directory filemanip filepath hspec
         natural-sort optparse-applicative parsec regex-tdfa
       ];
       doHaddock = false;
       homepage = "http://www.ariis.it/static/articles/lentil/page.html";
       description = "frugal issue tracker";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "leveldb-haskell" = callPackage
    ({ mkDerivation, async, base, bytestring, data-default, directory
     , exceptions, filepath, leveldb, mtl, QuickCheck, resourcet, tasty
     , tasty-quickcheck, temporary, transformers
     }:
     mkDerivation {
       pname = "leveldb-haskell";
       version = "0.6.3";
       sha256 = "0vljwjcd9m63wk7zmkl2s6b6kpjn7hqmwwg0p2bjm0d7ras69pk5";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring data-default exceptions filepath resourcet
         transformers
       ];
       librarySystemDepends = [ leveldb ];
       executableHaskellDepends = [
         async base bytestring data-default resourcet transformers
       ];
       testHaskellDepends = [
         base bytestring data-default directory exceptions mtl QuickCheck
         tasty tasty-quickcheck temporary transformers
       ];
       homepage = "http://github.com/kim/leveldb-haskell";
       description = "Haskell bindings to LevelDB";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) leveldb;};
  "lexer-applicative" = callPackage
    ({ mkDerivation, base, deepseq, regex-applicative, srcloc, tasty
     , tasty-hunit
     }:
     mkDerivation {
       pname = "lexer-applicative";
       version = "2.1.0.1";
       sha256 = "1754rimbj7jdhdhc3ql5ks5mccqip4l6cffkw2bzjw3x1s0155iy";
       libraryHaskellDepends = [ base regex-applicative srcloc ];
       testHaskellDepends = [
         base deepseq regex-applicative srcloc tasty tasty-hunit
       ];
       homepage = "https://github.com/feuerbach/lexer-applicative";
       description = "Simple lexer based on applicative regular expressions";
       license = stdenv.lib.licenses.mit;
     }) {};
  "lhs2tex" = callPackage
    ({ mkDerivation, base, directory, filepath, mtl, process
     , regex-compat
     }:
     mkDerivation {
       pname = "lhs2tex";
       version = "1.19";
       sha256 = "03mhhkrqjjqmmh18im8di1cl6wqv30lsib5hv73f0wsnv5bhbbi4";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         base directory filepath mtl process regex-compat
       ];
       doHaddock = false;
       homepage = "http://www.andres-loeh.de/lhs2tex/";
       description = "Preprocessor for typesetting Haskell sources with LaTeX";
       license = "GPL";
     }) {};
  "libgit" = callPackage
    ({ mkDerivation, base, mtl, process }:
     mkDerivation {
       pname = "libgit";
       version = "0.3.1";
       sha256 = "08km9y2wqz426c5c6r49ar5snl8ss1w7d55yqivksdkwk3fn0k0x";
       libraryHaskellDepends = [ base mtl process ];
       homepage = "https://github.com/vincenthz/hs-libgit";
       description = "Simple Git Wrapper";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "libinfluxdb" = callPackage
    ({ mkDerivation, base, bytestring, clock, containers, http-client
     , http-client-tls, http-types, resource-pool, stm, text
     }:
     mkDerivation {
       pname = "libinfluxdb";
       version = "0.0.3";
       sha256 = "173mxqjfm0vqi8n4d0jgmrhfjf8bv5kg51h3zk23qzwyiqv5r4gg";
       libraryHaskellDepends = [
         base bytestring clock containers http-client http-client-tls
         http-types resource-pool stm text
       ];
       description = "libinfluxdb";
       license = stdenv.lib.licenses.mit;
     }) {};
  "libnotify" = callPackage
    ({ mkDerivation, base, bytestring, glib, gtk, libnotify }:
     mkDerivation {
       pname = "libnotify";
       version = "0.1.1.0";
       sha256 = "1wc19v14agadj7dzi81lm3qzk2x33apaj5ylmg7x232k56xzfvr0";
       libraryHaskellDepends = [ base bytestring glib gtk ];
       librarySystemDepends = [ libnotify ];
       description = "Bindings to libnotify library";
       license = stdenv.lib.licenses.mit;
     }) {inherit (pkgs) libnotify;};
  "librato" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, bytestring, either
     , http-client, http-conduit, http-types, mtl, resourcet, text
     , unordered-containers, uri-templater, vector
     }:
     mkDerivation {
       pname = "librato";
       version = "0.2.0.1";
       sha256 = "1l0q8kx0v563glplz5blg5scnvwf1aak04w08abxkrbfdjq6a8z4";
       revision = "1";
       editedCabalFile = "06md1545pfywdd3ggm6ss9lk8fzph1psl9jip3gp0qsxmv3diyix";
       libraryHaskellDepends = [
         aeson attoparsec base bytestring either http-client http-conduit
         http-types mtl resourcet text unordered-containers uri-templater
         vector
       ];
       homepage = "https://github.com/SaneTracker/librato";
       description = "Bindings to the Librato API";
       license = stdenv.lib.licenses.mit;
     }) {};
  "libsystemd-journal" = callPackage
    ({ mkDerivation, base, bytestring, hashable, hsyslog, pipes
     , pipes-safe, systemd, text, transformers, uniplate
     , unix-bytestring, unordered-containers, uuid, vector
     }:
     mkDerivation {
       pname = "libsystemd-journal";
       version = "1.4.0";
       sha256 = "1lpg2nv2zqdv4m1i71qmf7h1dhkbjfc2kaprphmynqk67a80rcii";
       libraryHaskellDepends = [
         base bytestring hashable hsyslog pipes pipes-safe text transformers
         uniplate unix-bytestring unordered-containers uuid vector
       ];
       libraryPkgconfigDepends = [ systemd ];
       homepage = "http://github.com/ocharles/libsystemd-journal";
       description = "Haskell bindings to libsystemd-journal";
       license = stdenv.lib.licenses.bsd3;
     }) {systemd = null;};
  "libxml-sax" = callPackage
    ({ mkDerivation, base, bytestring, libxml2, text, xml-types }:
     mkDerivation {
       pname = "libxml-sax";
       version = "0.7.5";
       sha256 = "0lbdq6lmiyrnzk6gkx09vvp928wj8qnqnqfzy14mfv0drj21f54r";
       libraryHaskellDepends = [ base bytestring text xml-types ];
       librarySystemDepends = [ libxml2 ];
       libraryPkgconfigDepends = [ libxml2 ];
       homepage = "https://john-millikin.com/software/haskell-libxml/";
       description = "Bindings for the libXML2 SAX interface";
       license = stdenv.lib.licenses.mit;
     }) {inherit (pkgs) libxml2;};
  "lifted-async" = callPackage
    ({ mkDerivation, async, base, constraints, criterion, deepseq
     , HUnit, lifted-base, monad-control, mtl, tasty, tasty-hunit
     , tasty-th, transformers-base
     }:
     mkDerivation {
       pname = "lifted-async";
       version = "0.8.0.1";
       sha256 = "1gzrwlmwcyb1bb3k3nl6xlqv16n5d9h4cb3lrvj97fss2mqai37g";
       libraryHaskellDepends = [
         async base constraints lifted-base monad-control transformers-base
       ];
       testHaskellDepends = [
         async base HUnit lifted-base monad-control mtl tasty tasty-hunit
         tasty-th
       ];
       benchmarkHaskellDepends = [ async base criterion deepseq ];
       homepage = "https://github.com/maoe/lifted-async";
       description = "Run lifted IO operations asynchronously and wait for their results";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lifted-base" = callPackage
    ({ mkDerivation, base, monad-control, transformers-base }:
     mkDerivation {
       pname = "lifted-base";
       version = "0.2.3.6";
       sha256 = "1yz14a1rsgknwyl08n4kxrlc26hfwmb95a3c2drbnsgmhdyq7iap";
       libraryHaskellDepends = [ base monad-control transformers-base ];
       doCheck = false;
       homepage = "https://github.com/basvandijk/lifted-base";
       description = "lifted IO operations from the base library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "linear" = callPackage
    ({ mkDerivation, adjunctions, base, base-orphans, binary, bytes
     , bytestring, cereal, containers, deepseq, directory, distributive
     , doctest, filepath, ghc-prim, hashable, HUnit, lens, reflection
     , semigroupoids, semigroups, simple-reflect, tagged
     , template-haskell, test-framework, test-framework-hunit
     , transformers, transformers-compat, unordered-containers, vector
     , void
     }:
     mkDerivation {
       pname = "linear";
       version = "1.20.4";
       sha256 = "1lyx778cs95fa8dpx9mkf9b9gw9c1misjin3dqibgy8i4r41rnbv";
       revision = "1";
       editedCabalFile = "1cbj4l0w7fyg7xzxmh9ac07ka7fxmcbydpi97pakaflqw36i55hg";
       libraryHaskellDepends = [
         adjunctions base base-orphans binary bytes cereal containers
         deepseq distributive ghc-prim hashable lens reflection
         semigroupoids semigroups tagged template-haskell transformers
         transformers-compat unordered-containers vector void
       ];
       testHaskellDepends = [
         base binary bytestring directory doctest filepath HUnit lens
         simple-reflect test-framework test-framework-hunit
       ];
       homepage = "http://github.com/ekmett/linear/";
       description = "Linear Algebra";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "linear-accelerate" = callPackage
    ({ mkDerivation, accelerate, base, lens, linear }:
     mkDerivation {
       pname = "linear-accelerate";
       version = "0.2";
       sha256 = "0433mzw2cswk86nmj3gnygn3d07yq0sbmv2ylxbw8ri35yddjap6";
       libraryHaskellDepends = [ accelerate base lens linear ];
       homepage = "http://github.com/ekmett/linear-accelerate/";
       description = "Instances to use linear vector spaces on accelerate backends";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "linux-file-extents" = callPackage
    ({ mkDerivation, base, unix }:
     mkDerivation {
       pname = "linux-file-extents";
       version = "0.2.0.0";
       sha256 = "1l4vznam1a8vf3nixhbmw38rpzkvmbka0cbdfdsgfrpn03kxjz3c";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base unix ];
       homepage = "https://github.com/redneb/linux-file-extents";
       description = "Retrieve file fragmentation information under Linux";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "linux-namespaces" = callPackage
    ({ mkDerivation, base, unix }:
     mkDerivation {
       pname = "linux-namespaces";
       version = "0.1.2.0";
       sha256 = "0yznnp9rdz15drm79pvbqbrbk2nczbkmlf00pb7rki7w1l9njp2q";
       libraryHaskellDepends = [ base unix ];
       homepage = "https://github.com/redneb/hs-linux-namespaces";
       description = "Create new or enter an existing linux namespaces";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "list-fusion-probe" = callPackage
    ({ mkDerivation, base, tasty, tasty-hunit }:
     mkDerivation {
       pname = "list-fusion-probe";
       version = "0.1.0.5";
       sha256 = "0l6vi8ss3vq117x2fnw74p4lz3zg7z5p90mvi0ccmarpswxkcwbl";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base tasty tasty-hunit ];
       description = "testing list fusion for success";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "list-prompt" = callPackage
    ({ mkDerivation, ansi-terminal, base, data-default, hspec, stm
     , terminal-size, vty
     }:
     mkDerivation {
       pname = "list-prompt";
       version = "0.1.1.0";
       sha256 = "1vjdr8q1fzk07a90hpsd2x4ga0cczmjn5r3v3axdwh19h1x3qcn7";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         ansi-terminal base data-default stm terminal-size vty
       ];
       executableHaskellDepends = [
         ansi-terminal base data-default stm terminal-size vty
       ];
       testHaskellDepends = [
         ansi-terminal base data-default hspec stm terminal-size vty
       ];
       homepage = "https://github.com/yamadapc/list-prompt.git";
       description = "A simple list prompt UI for the terminal";
       license = stdenv.lib.licenses.gpl2;
     }) {};
  "list-t" = callPackage
    ({ mkDerivation, base, base-prelude, mmorph, monad-control, mtl
     , transformers, transformers-base
     }:
     mkDerivation {
       pname = "list-t";
       version = "0.4.6.1";
       sha256 = "03y0s7bwd3zx2hksrqbkfmkngd13mnbz2kbjy3a72darl1ywrjbq";
       revision = "3";
       editedCabalFile = "07zw7pv91za710yc90mpdng8x5s5rb4k55g8s9h381wa1flx4rbk";
       libraryHaskellDepends = [
         base base-prelude mmorph monad-control mtl transformers
         transformers-base
       ];
       doCheck = false;
       homepage = "https://github.com/nikita-volkov/list-t";
       description = "ListT done right";
       license = stdenv.lib.licenses.mit;
     }) {};
  "load-env" = callPackage
    ({ mkDerivation, base, directory, hspec, HUnit, parsec }:
     mkDerivation {
       pname = "load-env";
       version = "0.1.1";
       sha256 = "05pxxplp96pcnzk61xcckxnxljl3hjl13ckn4xrr93zmlw49rqwg";
       libraryHaskellDepends = [ base directory parsec ];
       testHaskellDepends = [ base directory hspec HUnit parsec ];
       description = "Load environment variables from a file";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "loch-th" = callPackage
    ({ mkDerivation, base, pretty, template-haskell }:
     mkDerivation {
       pname = "loch-th";
       version = "0.2.1";
       sha256 = "1kfrjsgzq6wl749n2wm1fhwwigjxcd9lww7whiwjrbmhiz5ism3p";
       libraryHaskellDepends = [ base pretty template-haskell ];
       homepage = "https://github.com/liskin/loch-th";
       description = "Support for precise error locations in source files (Template Haskell version)";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "log-domain" = callPackage
    ({ mkDerivation, base, binary, bytes, cereal, comonad, deepseq
     , directory, distributive, doctest, filepath, generic-deriving
     , hashable, hashable-extras, safecopy, semigroupoids, semigroups
     , simple-reflect, vector
     }:
     mkDerivation {
       pname = "log-domain";
       version = "0.10.3.1";
       sha256 = "059qcjasf5m40z42djhqmjmnz086hjrmyv86l8h8nd8qc982gx1n";
       revision = "2";
       editedCabalFile = "0vswf377xdplr6gai4jr493sjbx9yqgmr0nf2jqb87jm1jpx9h6m";
       libraryHaskellDepends = [
         base binary bytes cereal comonad deepseq distributive hashable
         hashable-extras safecopy semigroupoids semigroups vector
       ];
       testHaskellDepends = [
         base directory doctest filepath generic-deriving semigroups
         simple-reflect
       ];
       homepage = "http://github.com/ekmett/log-domain/";
       description = "Log-domain arithmetic";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "logging-facade" = callPackage
    ({ mkDerivation, base, hspec, template-haskell, transformers }:
     mkDerivation {
       pname = "logging-facade";
       version = "0.1.1";
       sha256 = "18ldv6rsff480rqpbs3iabjpvn1fhw0i2a0g80jnhxg9ajfz5yb0";
       revision = "1";
       editedCabalFile = "1cm2q8l033w1bwi30mzsz0knr8pqxcb4f5c38594rdm96r9h12gw";
       libraryHaskellDepends = [ base template-haskell transformers ];
       testHaskellDepends = [ base hspec ];
       description = "Simple logging abstraction that allows multiple back-ends";
       license = stdenv.lib.licenses.mit;
     }) {};
  "logict" = callPackage
    ({ mkDerivation, base, mtl }:
     mkDerivation {
       pname = "logict";
       version = "0.6.0.2";
       sha256 = "07hnirv6snnym2r7iijlfz00b60jpy2856zvqxh989q0in7bd0hi";
       libraryHaskellDepends = [ base mtl ];
       homepage = "http://code.haskell.org/~dolio/";
       description = "A backtracking logic-programming monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "loop" = callPackage
    ({ mkDerivation, base, criterion, foldl, hspec, mtl, random, vector
     }:
     mkDerivation {
       pname = "loop";
       version = "0.3.0";
       sha256 = "1kry1c6jmn96jqsdj46x2z3ibwnn34lf8gyxj80cqa5bpl8215lj";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base hspec mtl ];
       benchmarkHaskellDepends = [
         base criterion foldl mtl random vector
       ];
       homepage = "https://github.com/nh2/loop";
       description = "Fast loops (for when GHC can't optimize forM_)";
       license = stdenv.lib.licenses.mit;
     }) {};
  "lrucache" = callPackage
    ({ mkDerivation, base, containers, contravariant }:
     mkDerivation {
       pname = "lrucache";
       version = "1.2.0.0";
       sha256 = "05knlckzx261yxbz38rqq8vy86zj1np0w2l32cnib6714vhaj5sz";
       libraryHaskellDepends = [ base containers contravariant ];
       homepage = "http://github.com/chowells79/lrucache";
       description = "a simple, pure LRU cache";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ltext" = callPackage
    ({ mkDerivation, aeson, base, containers, data-default, deepseq
     , directory, hspec, mtl, mtl-compat, optparse-applicative, parsec
     , pretty, template-haskell, text, transformers, yaml
     }:
     mkDerivation {
       pname = "ltext";
       version = "0.0.2.1";
       sha256 = "0dr99prlsbzisaz8jbiw297fw1fysr9zq0g5ywc959ar3nki039f";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base containers deepseq mtl mtl-compat parsec pretty
         template-haskell text transformers
       ];
       executableHaskellDepends = [
         aeson base containers data-default deepseq directory mtl mtl-compat
         optparse-applicative parsec pretty template-haskell text
         transformers yaml
       ];
       testHaskellDepends = [ base hspec mtl ];
       description = "Higher-order file applicator";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lucid" = callPackage
    ({ mkDerivation, base, bifunctors, blaze-builder, bytestring
     , containers, criterion, deepseq, hashable, hspec, HUnit, mmorph
     , mtl, parsec, text, transformers, unordered-containers
     }:
     mkDerivation {
       pname = "lucid";
       version = "2.9.5";
       sha256 = "1f6b93wynmsr9sjy2w4k070ar1jbmb2bicwq5qjj67zij1afswxf";
       libraryHaskellDepends = [
         base blaze-builder bytestring containers hashable mmorph mtl text
         transformers unordered-containers
       ];
       testHaskellDepends = [
         base bifunctors hspec HUnit mtl parsec text
       ];
       benchmarkHaskellDepends = [
         base blaze-builder bytestring criterion deepseq text
       ];
       homepage = "https://github.com/chrisdone/lucid";
       description = "Clear to write, read and edit DSL for HTML";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lucid-svg" = callPackage
    ({ mkDerivation, base, blaze-builder, lucid, text, transformers }:
     mkDerivation {
       pname = "lucid-svg";
       version = "0.6.0.1";
       sha256 = "1k37vc89a902v99qbyv3h03rbyfxqgva2h2nrbpmvsadj5cggkx8";
       libraryHaskellDepends = [
         base blaze-builder lucid text transformers
       ];
       homepage = "http://github.com/jeffreyrosenbluth/lucid-svg.git";
       description = "DSL for SVG using lucid for HTML";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "luminance" = callPackage
    ({ mkDerivation, base, containers, contravariant, dlist, gl, linear
     , mtl, resourcet, semigroups, transformers, vector, void
     }:
     mkDerivation {
       pname = "luminance";
       version = "0.9.1.2";
       sha256 = "0pqdq51labknh8mr6053is92f07i16kj6061mxg7dzxzr1srp7gx";
       libraryHaskellDepends = [
         base containers contravariant dlist gl linear mtl resourcet
         semigroups transformers vector void
       ];
       homepage = "https://github.com/phaazon/luminance";
       description = "Type-safe, type-level and stateless graphics framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "luminance-samples" = callPackage
    ({ mkDerivation, base, contravariant, GLFW-b, JuicyPixels, linear
     , luminance, mtl, resourcet, transformers
     }:
     mkDerivation {
       pname = "luminance-samples";
       version = "0.9.1";
       sha256 = "1xwmg24k0wihzj7jxpb6bsi83qn5hvb1sabcn7wybdqf8wr73ip3";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         base contravariant GLFW-b JuicyPixels linear luminance mtl
         resourcet transformers
       ];
       doHaddock = false;
       homepage = "https://github.com/phaazon/luminance-samples";
       description = "Luminance samples";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lzma-conduit" = callPackage
    ({ mkDerivation, base, bindings-DSL, bytestring, conduit, HUnit
     , lzma, QuickCheck, resourcet, test-framework, test-framework-hunit
     , test-framework-quickcheck2, transformers
     }:
     mkDerivation {
       pname = "lzma-conduit";
       version = "1.1.3.0";
       sha256 = "03rrxxd2h93civbd72lh41xhfziylyknyyi34dcxifx2aahfgydb";
       libraryHaskellDepends = [
         base bindings-DSL bytestring conduit resourcet transformers
       ];
       librarySystemDepends = [ lzma ];
       testHaskellDepends = [
         base bytestring conduit HUnit QuickCheck resourcet test-framework
         test-framework-hunit test-framework-quickcheck2
       ];
       doCheck = false;
       homepage = "http://github.com/alphaHeavy/lzma-conduit";
       description = "Conduit interface for lzma/xz compression";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) lzma;};
  "machines" = callPackage
    ({ mkDerivation, base, comonad, containers, free, mtl, pointed
     , profunctors, semigroups, transformers, void
     }:
     mkDerivation {
       pname = "machines";
       version = "0.5.1";
       sha256 = "1dyvyy0yv9qha1ff2nfrl304vmmbi4hd881jyj3xpqhgc3zz8ab2";
       revision = "1";
       editedCabalFile = "079dp8a30w53pcm5ik5qx6vsgir5g84xm9b9j59kamhvig65y3f5";
       libraryHaskellDepends = [
         base comonad containers free mtl pointed profunctors semigroups
         transformers void
       ];
       doCheck = false;
       homepage = "http://github.com/ekmett/machines/";
       description = "Networked stream transducers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "machines-directory" = callPackage
    ({ mkDerivation, base, directory, filepath, machines, machines-io
     , transformers
     }:
     mkDerivation {
       pname = "machines-directory";
       version = "0.2.0.6";
       sha256 = "03faha5zbxikbrz40wb0qar8qyjkzaylnk78ba925vms57dwwxva";
       libraryHaskellDepends = [
         base directory filepath machines machines-io transformers
       ];
       homepage = "http://github.com/aloiscochard/machines-directory";
       description = "Directory (system) utilities for the machines library";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "machines-io" = callPackage
    ({ mkDerivation, base, bytestring, chunked-data, machines
     , transformers
     }:
     mkDerivation {
       pname = "machines-io";
       version = "0.2.0.8";
       sha256 = "098wfr5648l4nmkpdcm182nbsrcw3wxpq9f1skvkpic4rcx3qkm2";
       libraryHaskellDepends = [
         base bytestring chunked-data machines transformers
       ];
       homepage = "http://github.com/aloiscochard/machines-io";
       description = "IO utilities for the machines library";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "machines-process" = callPackage
    ({ mkDerivation, base, chunked-data, machines, machines-io, process
     }:
     mkDerivation {
       pname = "machines-process";
       version = "0.2.0.4";
       sha256 = "1v0jskb8m1s7cd51672v4fj9sjy5l1q01vm6qyvkrsabjp04lq4l";
       libraryHaskellDepends = [
         base chunked-data machines machines-io process
       ];
       homepage = "http://github.com/aloiscochard/machines-process";
       description = "Process (system) utilities for the machines library";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "magic" = callPackage
    ({ mkDerivation, base, file }:
     mkDerivation {
       pname = "magic";
       version = "1.1";
       sha256 = "10p0gjjjwr1dda7hahwrwn5njbfhl67arq3v3nf1jr3vymlkn75j";
       libraryHaskellDepends = [ base ];
       librarySystemDepends = [ file ];
       description = "Interface to C file/magic library";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) file;};
  "managed" = callPackage
    ({ mkDerivation, base, transformers }:
     mkDerivation {
       pname = "managed";
       version = "1.0.2";
       sha256 = "0g363a8m3lb113i5prpfcxpsizaiqs4rkzlk6nkv5id1r70n5xgj";
       libraryHaskellDepends = [ base transformers ];
       description = "A monad for managed values";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mandrill" = callPackage
    ({ mkDerivation, aeson, base, base64-bytestring, blaze-html
     , bytestring, containers, email-validate, http-client
     , http-client-tls, http-types, lens, mtl, old-locale, QuickCheck
     , raw-strings-qq, tasty, tasty-hunit, tasty-quickcheck, text, time
     , unordered-containers
     }:
     mkDerivation {
       pname = "mandrill";
       version = "0.5.1.0";
       sha256 = "1lb3l20bivz1synvm9rry0fvwh1i0x919czpzy2nbs1gapzacz0h";
       libraryHaskellDepends = [
         aeson base base64-bytestring blaze-html bytestring containers
         email-validate http-client http-client-tls http-types lens mtl
         old-locale QuickCheck text time unordered-containers
       ];
       testHaskellDepends = [
         aeson base bytestring QuickCheck raw-strings-qq tasty tasty-hunit
         tasty-quickcheck text
       ];
       description = "Library for interfacing with the Mandrill JSON API";
       license = stdenv.lib.licenses.mit;
     }) {};
  "mangopay" = callPackage
    ({ mkDerivation, aeson, async, attoparsec, base, base16-bytestring
     , base64-bytestring, blaze-builder, bytestring, case-insensitive
     , conduit, conduit-extra, connection, country-codes, data-default
     , HTF, http-conduit, http-types, HUnit, lifted-base, monad-control
     , monad-logger, resourcet, template-haskell, text, time, tls
     , transformers, transformers-base, unordered-containers
     , utf8-string, vector, wai, warp, x509-system
     }:
     mkDerivation {
       pname = "mangopay";
       version = "1.12";
       sha256 = "0wvzyjpphvi1qni9sfzxik2lrqy0ax6nj7bvhmk5cl3ga1ssd7l5";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson async attoparsec base base16-bytestring base64-bytestring
         blaze-builder bytestring case-insensitive conduit conduit-extra
         connection country-codes data-default http-conduit http-types HUnit
         lifted-base monad-control monad-logger resourcet template-haskell
         text time tls transformers transformers-base unordered-containers
         utf8-string vector wai warp x509-system
       ];
       executableHaskellDepends = [
         aeson base bytestring http-conduit monad-logger text transformers
       ];
       testHaskellDepends = [
         aeson async attoparsec base base16-bytestring base64-bytestring
         blaze-builder bytestring case-insensitive conduit conduit-extra
         connection country-codes data-default HTF http-conduit http-types
         HUnit lifted-base monad-control monad-logger resourcet
         template-haskell text time tls transformers transformers-base
         unordered-containers utf8-string vector wai warp x509-system
       ];
       doCheck = false;
       homepage = "https://github.com/prowdsponsor/mangopay";
       description = "Bindings to the MangoPay API";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "map-syntax" = callPackage
    ({ mkDerivation, base, containers, deepseq, HUnit, mtl, QuickCheck
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , transformers
     }:
     mkDerivation {
       pname = "map-syntax";
       version = "0.2";
       sha256 = "02v1dvq86qzbfbwbza4myj3a6a6a5p059fi5m3g548hmqk3v2p1r";
       libraryHaskellDepends = [ base containers mtl ];
       testHaskellDepends = [
         base containers deepseq HUnit mtl QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2 transformers
       ];
       description = "Syntax sugar for defining maps";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "markdown" = callPackage
    ({ mkDerivation, attoparsec, base, blaze-html, blaze-markup
     , conduit, conduit-extra, containers, data-default, directory
     , filepath, hspec, text, transformers, xss-sanitize
     }:
     mkDerivation {
       pname = "markdown";
       version = "0.1.13.2";
       sha256 = "15aiwjs006g8aajw88rgfvrpcwaxml9hnpz7jrhmdm2pqxfrkb8z";
       libraryHaskellDepends = [
         attoparsec base blaze-html blaze-markup conduit conduit-extra
         containers data-default text transformers xss-sanitize
       ];
       testHaskellDepends = [
         base blaze-html conduit conduit-extra containers directory filepath
         hspec text transformers
       ];
       homepage = "https://github.com/snoyberg/markdown";
       description = "Convert Markdown to HTML, with XSS protection";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "markdown-unlit" = callPackage
    ({ mkDerivation, base, base-compat, directory, hspec, QuickCheck
     , silently, stringbuilder, temporary
     }:
     mkDerivation {
       pname = "markdown-unlit";
       version = "0.4.0";
       sha256 = "1kj2bffl7ndd8ygwwa3r1mbpwbxbfhyfgnbla8k8g9i6ffp0qrbw";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base base-compat ];
       executableHaskellDepends = [ base base-compat ];
       testHaskellDepends = [
         base base-compat directory hspec QuickCheck silently stringbuilder
         temporary
       ];
       homepage = "https://github.com/sol/markdown-unlit#readme";
       description = "Literate Haskell support for Markdown";
       license = stdenv.lib.licenses.mit;
     }) {};
  "markup" = callPackage
    ({ mkDerivation, base, blaze-html, blaze-markup, clay, comonad
     , lucid, mmorph, monad-control, monad-logger, mtl, path-extra
     , resourcet, text, transformers-base, urlpath
     }:
     mkDerivation {
       pname = "markup";
       version = "3.1.0";
       sha256 = "0g8dg03r7i4r71bg834kf1cgh0igmb74334skkydlq9q911hclf7";
       revision = "1";
       editedCabalFile = "1ax30n6qyy7kjcz2qyd6idaif1hxxz4n37p6lpfn5bnvg585ddmg";
       libraryHaskellDepends = [
         base blaze-html blaze-markup clay comonad lucid mmorph
         monad-control monad-logger mtl path-extra resourcet text
         transformers-base urlpath
       ];
       description = "Abstraction for HTML-embedded content";
       license = stdenv.lib.licenses.mit;
     }) {};
  "math-functions" = callPackage
    ({ mkDerivation, base, deepseq, erf, HUnit, ieee754, QuickCheck
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , vector, vector-th-unbox
     }:
     mkDerivation {
       pname = "math-functions";
       version = "0.1.5.2";
       sha256 = "12cznf7gwia1ki7xhvlhk5p8d09zrdvfgn07pkp4sfrwsc4vijcy";
       revision = "1";
       editedCabalFile = "1zb582xpxpybfvxnivkf7l4mr2sbds4673h89gb1slqxgq7haary";
       libraryHaskellDepends = [
         base deepseq erf vector vector-th-unbox
       ];
       testHaskellDepends = [
         base HUnit ieee754 QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2 vector
       ];
       doCheck = false;
       homepage = "https://github.com/bos/math-functions";
       description = "Special functions and Chebyshev polynomials";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "matrices" = callPackage
    ({ mkDerivation, base, criterion, primitive, tasty, tasty-hunit
     , tasty-quickcheck, vector
     }:
     mkDerivation {
       pname = "matrices";
       version = "0.4.3";
       sha256 = "0fa01n6zw6lv8d4930cqgcrm20lqw0ngfh5qx0j6h533vdbmxikv";
       libraryHaskellDepends = [ base primitive vector ];
       testHaskellDepends = [
         base tasty tasty-hunit tasty-quickcheck vector
       ];
       benchmarkHaskellDepends = [ base criterion vector ];
       description = "native matrix based on vector";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "matrix" = callPackage
    ({ mkDerivation, base, criterion, deepseq, loop, primitive
     , QuickCheck, tasty, tasty-quickcheck, vector
     }:
     mkDerivation {
       pname = "matrix";
       version = "0.3.4.4";
       sha256 = "03aaw60x8849rsrcqc8n0d3k8a6dp8naxnqfq2xq776q5zbbcrpv";
       libraryHaskellDepends = [ base deepseq loop primitive vector ];
       testHaskellDepends = [ base QuickCheck tasty tasty-quickcheck ];
       benchmarkHaskellDepends = [ base criterion ];
       description = "A native implementation of matrix operations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "maximal-cliques" = callPackage
    ({ mkDerivation, base, containers, vector }:
     mkDerivation {
       pname = "maximal-cliques";
       version = "0.1.1";
       sha256 = "1sbmykgb5lrd32rih09d8d0r5isz4nh5slfyd93dgln7ag3hb7bh";
       libraryHaskellDepends = [ base containers vector ];
       description = "Enumerate all maximal cliques of a graph";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mbox" = callPackage
    ({ mkDerivation, base, safe, text, time, time-locale-compat }:
     mkDerivation {
       pname = "mbox";
       version = "0.3.1";
       sha256 = "13hq6h280wbc9xwbvdcq4qqrhbjnnzg824lk4zxkh4bvqpabjwni";
       revision = "1";
       editedCabalFile = "1cxbi3a5i3p2fw20f0gi17cag7q4h6n284hsmkgml6imc6fq379x";
       libraryHaskellDepends = [ base safe text time time-locale-compat ];
       description = "Read and write standard mailbox files";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mcmc-types" = callPackage
    ({ mkDerivation, base, containers, mwc-probability, transformers }:
     mkDerivation {
       pname = "mcmc-types";
       version = "1.0.1";
       sha256 = "1q26n8k372hrxncyxpfm6yi2cfl5a9q5ll6fm0yq2qcif5s19q84";
       libraryHaskellDepends = [
         base containers mwc-probability transformers
       ];
       homepage = "http://github.com/jtobin/mcmc-types";
       description = "Common types for sampling";
       license = stdenv.lib.licenses.mit;
     }) {};
  "megaparsec" = callPackage
    ({ mkDerivation, base, bytestring, criterion, HUnit, mtl
     , QuickCheck, test-framework, test-framework-hunit
     , test-framework-quickcheck2, text, transformers
     }:
     mkDerivation {
       pname = "megaparsec";
       version = "4.3.0";
       sha256 = "1046sx113gpv07pb4r7yf265bvqlfig8rihp10hbzsxi2llg1612";
       revision = "2";
       editedCabalFile = "1g61qvv01b8k1ajgx86cks65m10mlas81pyg24z89i4vklc10wck";
       libraryHaskellDepends = [ base bytestring mtl text transformers ];
       testHaskellDepends = [
         base HUnit mtl QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2 transformers
       ];
       benchmarkHaskellDepends = [ base bytestring criterion text ];
       homepage = "https://github.com/mrkkrp/megaparsec";
       description = "Monadic parser combinators";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "memcached-binary" = callPackage
    ({ mkDerivation, base, bytestring, data-default-class, hspec, HUnit
     , network, process, resource-pool, storable-endian, time
     , unordered-containers
     }:
     mkDerivation {
       pname = "memcached-binary";
       version = "0.2.0";
       sha256 = "137vb065f744jq3avpraqryzspch78vc5krp0fw2zzcbk5cm92ad";
       revision = "3";
       editedCabalFile = "1cx6xs9v7dcr4jv4757zsggic78qph4mirbp4n35ky8hxxjvf51k";
       libraryHaskellDepends = [
         base bytestring data-default-class network resource-pool
         storable-endian time unordered-containers
       ];
       testHaskellDepends = [
         base bytestring data-default-class hspec HUnit network process
       ];
       doCheck = false;
       homepage = "https://github.com/philopon/memcached-binary";
       description = "memcached client using binary protocol";
       license = stdenv.lib.licenses.mit;
     }) {};
  "memoization-utils" = callPackage
    ({ mkDerivation, base, containers, hspec, lrucache, time
     , time-units
     }:
     mkDerivation {
       pname = "memoization-utils";
       version = "0.1.0.1";
       sha256 = "1diaqy6wi7f7wh3yx65klj1kd1yf6cfq4grr0g9lx8m1gkgrb91j";
       libraryHaskellDepends = [
         base containers lrucache time time-units
       ];
       testHaskellDepends = [ base hspec time time-units ];
       homepage = "http://github.com/yamadapc/haskell-memoization-utils";
       description = "Utilities for memoizing functions";
       license = stdenv.lib.licenses.mit;
     }) {};
  "memoize" = callPackage
    ({ mkDerivation, base, template-haskell }:
     mkDerivation {
       pname = "memoize";
       version = "0.7";
       sha256 = "1sqi9n9r2q3sh00isgj3rmayrlm970a2g9x389rlfb0kczixdnq4";
       revision = "1";
       editedCabalFile = "1wprq7wqyp8wxy5slrgw6b3vjbarlv1iwm3qg8hgckzzpsgszk2d";
       libraryHaskellDepends = [ base template-haskell ];
       description = "A memoization library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "memory" = callPackage
    ({ mkDerivation, base, bytestring, deepseq, ghc-prim, tasty
     , tasty-hunit, tasty-quickcheck
     }:
     mkDerivation {
       pname = "memory";
       version = "0.11";
       sha256 = "19iz9vzmlzp3aqa9xanim0lr772l1lg7qkw81b6g8mzrvqjs6zvv";
       revision = "1";
       editedCabalFile = "07mhc19la3ywv015d05rvsdmdpyc7gaqrmkv2hmp5ljnnfdcxir8";
       libraryHaskellDepends = [ base bytestring deepseq ghc-prim ];
       testHaskellDepends = [ base tasty tasty-hunit tasty-quickcheck ];
       homepage = "https://github.com/vincenthz/hs-memory";
       description = "memory and related abstraction stuff";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mersenne-random-pure64" = callPackage
    ({ mkDerivation, base, old-time, random }:
     mkDerivation {
       pname = "mersenne-random-pure64";
       version = "0.2.0.5";
       sha256 = "0vil720bmbijf07i23iy10qnqa29j52pjvhcqj3a1s3gqbb3389w";
       configureFlags = [ "-f-small_base" ];
       libraryHaskellDepends = [ base old-time random ];
       homepage = "http://code.haskell.org/~dons/code/mersenne-random-pure64/";
       description = "Generate high quality pseudorandom numbers purely using a Mersenne Twister";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "messagepack" = callPackage
    ({ mkDerivation, base, bytestring, cereal, containers, QuickCheck
     , test-framework, test-framework-quickcheck2, test-framework-th
     }:
     mkDerivation {
       pname = "messagepack";
       version = "0.5.1";
       sha256 = "0pb2956556nli0h5by7x3a9wsbhqf1chwbb4a8x5w9nl3fcj4b71";
       libraryHaskellDepends = [ base bytestring cereal containers ];
       testHaskellDepends = [
         base bytestring cereal containers QuickCheck test-framework
         test-framework-quickcheck2 test-framework-th
       ];
       homepage = "https://github.com/rodrigosetti/messagepack";
       description = "Serialize instance for Message Pack Object";
       license = stdenv.lib.licenses.mit;
     }) {};
  "messagepack-rpc" = callPackage
    ({ mkDerivation, base, bytestring, cereal, containers, messagepack
     , network-simple
     }:
     mkDerivation {
       pname = "messagepack-rpc";
       version = "0.5.1";
       sha256 = "1g5096h595ajcb6kyb4s1azkwv9cmw2w7r9nvmm4wa388rj60yda";
       revision = "1";
       editedCabalFile = "05p6naaxswmsc3w7k67ydzzwyn60ymp0jbrc0f66p2sajvlnviax";
       libraryHaskellDepends = [
         base bytestring cereal containers messagepack network-simple
       ];
       homepage = "http://github.com/rodrigosetti/messagepack-rpc";
       description = "Message Pack RPC over TCP";
       license = stdenv.lib.licenses.mit;
     }) {};
  "metrics" = callPackage
    ({ mkDerivation, ansi-terminal, async, base, bytestring, containers
     , lens, mtl, mwc-random, primitive, QuickCheck, text, time, unix
     , unordered-containers, vector, vector-algorithms
     }:
     mkDerivation {
       pname = "metrics";
       version = "0.3.0.2";
       sha256 = "00iwairgi9lvb4f8iz4d834v8vq1f4awr34nl72fbkqgccdq1whd";
       libraryHaskellDepends = [
         ansi-terminal base bytestring containers lens mtl mwc-random
         primitive text time unix unordered-containers vector
         vector-algorithms
       ];
       testHaskellDepends = [
         async base lens mwc-random primitive QuickCheck unix
       ];
       doHaddock = false;
       description = "High-performance application metric tracking";
       license = stdenv.lib.licenses.mit;
     }) {};
  "microformats2-parser" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, aeson-qq, attoparsec, base
     , blaze-html, blaze-markup, bytestring, containers, data-default
     , either, errors, hspec, hspec-expectations-pretty-diff
     , html-conduit, lens-aeson, mtl, network, network-uri, options
     , pcre-heavy, raw-strings-qq, safe, scotty, streaming-commons
     , stringable, template-haskell, text, time, transformers
     , unordered-containers, vector, wai-extra, warp, xml-lens
     , xss-sanitize
     }:
     mkDerivation {
       pname = "microformats2-parser";
       version = "1.0.1.3";
       sha256 = "0kv0vlgpllbfi1wg2w2aswyz9xaq0pgfwdj3baqim29wdw3dmw38";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson aeson-qq attoparsec base blaze-markup bytestring containers
         data-default either errors html-conduit lens-aeson network-uri
         pcre-heavy safe text time transformers unordered-containers vector
         xml-lens xss-sanitize
       ];
       executableHaskellDepends = [
         aeson aeson-pretty base blaze-html blaze-markup data-default
         network network-uri options scotty streaming-commons stringable
         text wai-extra warp
       ];
       testHaskellDepends = [
         aeson-qq base bytestring data-default hspec
         hspec-expectations-pretty-diff html-conduit mtl network-uri
         raw-strings-qq template-haskell text time xml-lens
       ];
       homepage = "https://github.com/myfreeweb/microformats2-parser";
       description = "A Microformats 2 parser";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "microlens" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "microlens";
       version = "0.4.2.0";
       sha256 = "03348dflp5df17w6kzb6clwy67qxjj71w2ymbr3p9075jdgpcf6v";
       libraryHaskellDepends = [ base ];
       homepage = "http://github.com/aelve/microlens";
       description = "A tiny part of the lens library with no dependencies";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "microlens-aeson" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, bytestring, directory
     , doctest, filepath, generic-deriving, microlens, scientific
     , semigroups, simple-reflect, text, unordered-containers, vector
     }:
     mkDerivation {
       pname = "microlens-aeson";
       version = "2.1.1";
       sha256 = "1nmc2jb982b7mz919lfmhdcmzagg1517a3q4fj66pf6labfbqhsv";
       libraryHaskellDepends = [
         aeson attoparsec base bytestring microlens scientific text
         unordered-containers vector
       ];
       testHaskellDepends = [
         base directory doctest filepath generic-deriving semigroups
         simple-reflect
       ];
       homepage = "http://github.com/fosskers/microlens-aeson/";
       description = "Law-abiding lenses for Aeson, using microlens";
       license = stdenv.lib.licenses.mit;
     }) {};
  "microlens-contra" = callPackage
    ({ mkDerivation, base, contravariant, microlens }:
     mkDerivation {
       pname = "microlens-contra";
       version = "0.1.0.0";
       sha256 = "0rr5zmk5x4d65dvzndwgxlg5jc5vikckq2yk0x2igyjfr618xm97";
       libraryHaskellDepends = [ base contravariant microlens ];
       homepage = "http://github.com/aelve/microlens";
       description = "True folds and getters for microlens";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "microlens-ghc" = callPackage
    ({ mkDerivation, array, base, bytestring, containers, microlens
     , transformers
     }:
     mkDerivation {
       pname = "microlens-ghc";
       version = "0.4.2.0";
       sha256 = "0pmk4mgj190p51jridw464qy81pr0fwi62cw1dddwmccf1s8djb5";
       libraryHaskellDepends = [
         array base bytestring containers microlens transformers
       ];
       homepage = "http://github.com/aelve/microlens";
       description = "microlens + array, bytestring, containers, transformers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "microlens-mtl" = callPackage
    ({ mkDerivation, base, microlens, mtl, transformers
     , transformers-compat
     }:
     mkDerivation {
       pname = "microlens-mtl";
       version = "0.1.7.0";
       sha256 = "0kz3bbvixglgl0l0q9saf7v6k0dsphcc9rqfpcyb2lghsqd687sj";
       libraryHaskellDepends = [
         base microlens mtl transformers transformers-compat
       ];
       homepage = "http://github.com/aelve/microlens";
       description = "microlens support for Reader/Writer/State from mtl";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "microlens-platform" = callPackage
    ({ mkDerivation, base, hashable, microlens, microlens-ghc
     , microlens-mtl, microlens-th, text, unordered-containers, vector
     }:
     mkDerivation {
       pname = "microlens-platform";
       version = "0.2.3.0";
       sha256 = "16b7r39b059rdwpkgrmfb784fq439a2vlhd9hila8afhks8nbbcl";
       libraryHaskellDepends = [
         base hashable microlens microlens-ghc microlens-mtl microlens-th
         text unordered-containers vector
       ];
       homepage = "http://github.com/aelve/microlens";
       description = "Feature-complete microlens";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "microlens-th" = callPackage
    ({ mkDerivation, base, containers, microlens, template-haskell }:
     mkDerivation {
       pname = "microlens-th";
       version = "0.3.0.1";
       sha256 = "0lmskrqivhf20b42kk8ji7gg4rfrckl30hqnai2jzz6asdh6ymq5";
       libraryHaskellDepends = [
         base containers microlens template-haskell
       ];
       homepage = "http://github.com/aelve/microlens";
       description = "Automatic generation of record lenses for microlens";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mighty-metropolis" = callPackage
    ({ mkDerivation, base, containers, mcmc-types, mwc-probability
     , pipes, primitive, transformers
     }:
     mkDerivation {
       pname = "mighty-metropolis";
       version = "1.0.2";
       sha256 = "1wn0hfymh969yriy8c8qdl52kjk0r8nz1fpr7iwiskvdvc65d733";
       libraryHaskellDepends = [
         base mcmc-types mwc-probability pipes primitive transformers
       ];
       testHaskellDepends = [ base containers mwc-probability ];
       homepage = "http://github.com/jtobin/mighty-metropolis";
       description = "The Metropolis algorithm";
       license = stdenv.lib.licenses.mit;
     }) {};
  "mime-mail" = callPackage
    ({ mkDerivation, base, base64-bytestring, blaze-builder, bytestring
     , filepath, hspec, process, random, text
     }:
     mkDerivation {
       pname = "mime-mail";
       version = "0.4.11";
       sha256 = "1vnzpqm9axpbismsd2snkfz8pl5jdlnmqf98f4vqijq66bw29yl4";
       libraryHaskellDepends = [
         base base64-bytestring blaze-builder bytestring filepath process
         random text
       ];
       testHaskellDepends = [ base blaze-builder bytestring hspec text ];
       homepage = "http://github.com/snoyberg/mime-mail";
       description = "Compose MIME email messages";
       license = stdenv.lib.licenses.mit;
     }) {};
  "mime-mail-ses" = callPackage
    ({ mkDerivation, base, base64-bytestring, byteable, bytestring
     , conduit, cryptohash, http-client, http-conduit, http-types
     , mime-mail, old-locale, text, time, transformers, xml-conduit
     , xml-types
     }:
     mkDerivation {
       pname = "mime-mail-ses";
       version = "0.3.2.2";
       sha256 = "1dzlfrpqw3bdqkwgp5i52azkp8lv2cgvrdvl1w39q484ra4by2y1";
       libraryHaskellDepends = [
         base base64-bytestring byteable bytestring conduit cryptohash
         http-client http-conduit http-types mime-mail old-locale text time
         transformers xml-conduit xml-types
       ];
       homepage = "http://github.com/snoyberg/mime-mail";
       description = "Send mime-mail messages via Amazon SES";
       license = stdenv.lib.licenses.mit;
     }) {};
  "mime-types" = callPackage
    ({ mkDerivation, base, bytestring, containers, text }:
     mkDerivation {
       pname = "mime-types";
       version = "0.1.0.6";
       sha256 = "090z3dp928243amnc6s8g10rk2h2bprk9y138q6wj3cpflzr72pw";
       libraryHaskellDepends = [ base bytestring containers text ];
       homepage = "https://github.com/yesodweb/wai";
       description = "Basic mime-type handling types and functions";
       license = stdenv.lib.licenses.mit;
     }) {};
  "misfortune" = callPackage
    ({ mkDerivation, base, bytestring, cereal, directory, filepath
     , knob, monad-loops, random-fu, regex-base, regex-pcre, semigroups
     , text, utf8-string, vector
     }:
     mkDerivation {
       pname = "misfortune";
       version = "0.1.1.2";
       sha256 = "0j93zqgqskrj2zc0vwsmwldidr6nkcxq2v3mmzv7l7l1bwhl8jxf";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base bytestring cereal directory filepath knob random-fu semigroups
         text utf8-string vector
       ];
       executableHaskellDepends = [ monad-loops regex-base regex-pcre ];
       homepage = "https://github.com/mokus0/misfortune";
       description = "fortune-mod clone";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "missing-foreign" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "missing-foreign";
       version = "0.1.1";
       sha256 = "11f8pknbarlj956nmalqhd2v704z7d7xbi61hs1q8vb2p36kc6wy";
       libraryHaskellDepends = [ base ];
       description = "Convenience functions for FFI work";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mmap" = callPackage
    ({ mkDerivation, base, bytestring }:
     mkDerivation {
       pname = "mmap";
       version = "0.5.9";
       sha256 = "1y5mk3yf4b8r6rzmlx1xqn4skaigrqnv08sqq0v7r3nbw42bpz2q";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base bytestring ];
       description = "Memory mapped files for POSIX and Windows";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mmorph" = callPackage
    ({ mkDerivation, base, mtl, transformers, transformers-compat }:
     mkDerivation {
       pname = "mmorph";
       version = "1.0.6";
       sha256 = "1i8dzrc5qi3ryc9vrrmpn3sihmramsbhhd592w4w2k5g26qr3hql";
       revision = "1";
       editedCabalFile = "081g39qv8lzmavv8q4sr24liiy56fwrbngyg7j67ah1zgwld8ss8";
       libraryHaskellDepends = [
         base mtl transformers transformers-compat
       ];
       description = "Monad morphisms";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mockery" = callPackage
    ({ mkDerivation, base, bytestring, directory, filepath, hspec
     , logging-facade, temporary
     }:
     mkDerivation {
       pname = "mockery";
       version = "0.3.2";
       sha256 = "0m0lp2z63sgkylz5318j53r5hnrkp705qh7nqbb149ir4gy7g1bg";
       libraryHaskellDepends = [
         base bytestring directory filepath logging-facade temporary
       ];
       testHaskellDepends = [
         base bytestring directory filepath hspec logging-facade temporary
       ];
       description = "Support functions for automated testing";
       license = stdenv.lib.licenses.mit;
     }) {};
  "modify-fasta" = callPackage
    ({ mkDerivation, base, containers, fasta, mtl, optparse-applicative
     , pipes, pipes-text, regex-tdfa, regex-tdfa-text, split, text
     , text-show
     }:
     mkDerivation {
       pname = "modify-fasta";
       version = "0.8.1.3";
       sha256 = "11c5j3h9xfxayfdj5jpaix59lkbx6y55mvshz7cdk3j237mrjb1n";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base containers fasta regex-tdfa regex-tdfa-text split text
         text-show
       ];
       executableHaskellDepends = [
         base containers fasta mtl optparse-applicative pipes pipes-text
         split text
       ];
       homepage = "https://github.com/GregorySchwartz/modify-fasta";
       description = "Modify fasta (and CLIP) files in several optional ways";
       license = stdenv.lib.licenses.gpl2;
     }) {};
  "moesocks" = callPackage
    ({ mkDerivation, aeson, async, attoparsec, base, binary, bytestring
     , containers, cryptohash, hslogger, HsOpenSSL, iproute, lens
     , lens-aeson, mtl, network, optparse-applicative, random, stm
     , strict, text, time, transformers, unordered-containers
     }:
     mkDerivation {
       pname = "moesocks";
       version = "1.0.0.41";
       sha256 = "15fbqmjshkc6fiqz7k8sfv6vkabk7slw77hg3da1gdiw6rh5k445";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         aeson async attoparsec base binary bytestring containers cryptohash
         hslogger HsOpenSSL iproute lens lens-aeson mtl network
         optparse-applicative random stm strict text time transformers
         unordered-containers
       ];
       doHaddock = false;
       homepage = "https://github.com/nfjinjing/moesocks";
       description = "A functional firewall killer";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "mole" = callPackage
    ({ mkDerivation, attoparsec, base, base64-bytestring, bytestring
     , containers, cryptohash, css-syntax, directory, filemanip
     , filepath, fsnotify, hspec, hspec-smallcheck, kraken, mtl
     , network-uri, optparse-applicative, process, smallcheck, snap
     , snap-server, stm, tagsoup, text, time, transformers, unix
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "mole";
       version = "0.0.3";
       sha256 = "17j6a45lxa8v4gq4a5bazx8sskwsgckpa37ckfg0xkn5yi4x37fx";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         attoparsec base base64-bytestring bytestring containers cryptohash
         css-syntax directory filemanip filepath fsnotify kraken mtl
         network-uri optparse-applicative process snap snap-server stm
         tagsoup text time transformers unix
       ];
       testHaskellDepends = [
         attoparsec base bytestring containers hspec hspec-smallcheck kraken
         smallcheck stm text time unordered-containers vector
       ];
       doHaddock = false;
       description = "A glorified string replacement tool";
       license = stdenv.lib.licenses.mit;
     }) {};
  "monad-control" = callPackage
    ({ mkDerivation, base, stm, transformers, transformers-base
     , transformers-compat
     }:
     mkDerivation {
       pname = "monad-control";
       version = "1.0.0.5";
       sha256 = "1ya3i7x7p643fbrylf6bh8731mjvgn067qw2h8ijqbn805bp2pq5";
       libraryHaskellDepends = [
         base stm transformers transformers-base transformers-compat
       ];
       homepage = "https://github.com/basvandijk/monad-control";
       description = "Lift control operations, like exception catching, through monad transformers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monad-coroutine" = callPackage
    ({ mkDerivation, base, monad-parallel, transformers
     , transformers-compat
     }:
     mkDerivation {
       pname = "monad-coroutine";
       version = "0.9.0.2";
       sha256 = "192dkd323j5l6j74vhqp8m3r9gkfhvrald7qpn8dby3q0lp2fj66";
       libraryHaskellDepends = [
         base monad-parallel transformers transformers-compat
       ];
       homepage = "http://trac.haskell.org/SCC/wiki/monad-coroutine";
       description = "Coroutine monad transformer for suspending and resuming monadic computations";
       license = "GPL";
     }) {};
  "monad-extras" = callPackage
    ({ mkDerivation, base, mmorph, monad-control, stm, transformers
     , transformers-base
     }:
     mkDerivation {
       pname = "monad-extras";
       version = "0.5.11";
       sha256 = "0rq44dk1fvfqkhng2yczyyz7jh6d6m0kjy58k02ady28f7j2r5vn";
       libraryHaskellDepends = [
         base mmorph monad-control stm transformers transformers-base
       ];
       homepage = "http://github.com/jwiegley/monad-extras";
       description = "Extra utility functions for working with monads";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monad-http" = callPackage
    ({ mkDerivation, base, base-compat, bytestring, exceptions
     , http-client, http-client-tls, http-types, monad-logger
     , monadcryptorandom, MonadRandom, mtl, text, transformers
     , transformers-compat
     }:
     mkDerivation {
       pname = "monad-http";
       version = "0.1.0.0";
       sha256 = "14ki66l60la1mmm544vvzn930liaygj6zrql10nr192shf3v0cx3";
       revision = "7";
       editedCabalFile = "19qsjwcdg39is6ipwl6hgr42c7gyc7p1cs5f8isxy90hb4xjghrh";
       libraryHaskellDepends = [
         base base-compat bytestring exceptions http-client http-client-tls
         http-types monad-logger monadcryptorandom MonadRandom mtl text
         transformers transformers-compat
       ];
       homepage = "https://github.com/futurice/haskell-monad-http#readme";
       description = "A class of monads which can do http requests";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monad-journal" = callPackage
    ({ mkDerivation, base, either, monad-control, mtl, transformers
     , transformers-base
     }:
     mkDerivation {
       pname = "monad-journal";
       version = "0.7.1";
       sha256 = "1bfj9yy7hkixii31fbxdydjwx9ln6snm40w6l5vph2skcrms9bvr";
       libraryHaskellDepends = [
         base either monad-control mtl transformers transformers-base
       ];
       homepage = "http://github.com/phaazon/monad-journal";
       description = "Pure logger typeclass and monad transformer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monad-logger" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring, conduit
     , conduit-extra, exceptions, fast-logger, lifted-base
     , monad-control, monad-loops, mtl, resourcet, stm, stm-chans
     , template-haskell, text, transformers, transformers-base
     , transformers-compat
     }:
     mkDerivation {
       pname = "monad-logger";
       version = "0.3.18";
       sha256 = "0zj90nxbzd0r5d6h1qqjjk6lzkzf1zgklkwiwmnkxycds0cpqjc1";
       libraryHaskellDepends = [
         base blaze-builder bytestring conduit conduit-extra exceptions
         fast-logger lifted-base monad-control monad-loops mtl resourcet stm
         stm-chans template-haskell text transformers transformers-base
         transformers-compat
       ];
       homepage = "https://github.com/kazu-yamamoto/logger";
       description = "A class of monads which can log messages";
       license = stdenv.lib.licenses.mit;
     }) {};
  "monad-logger-json" = callPackage
    ({ mkDerivation, aeson, base, monad-logger, template-haskell, text
     }:
     mkDerivation {
       pname = "monad-logger-json";
       version = "0.1.0.0";
       sha256 = "1ap98487lwgvgrrxkjskga86ckbv6rhn2n6pzp403343xx51r1qh";
       libraryHaskellDepends = [
         aeson base monad-logger template-haskell text
       ];
       homepage = "http://github.com/fpco/monad-logger-json";
       description = "JSON-friendly Logging APIs";
       license = stdenv.lib.licenses.mit;
     }) {};
  "monad-logger-syslog" = callPackage
    ({ mkDerivation, base, bytestring, fast-logger, hsyslog
     , monad-logger, text, transformers
     }:
     mkDerivation {
       pname = "monad-logger-syslog";
       version = "0.1.1.1";
       sha256 = "0hdm495knrdrl76xlsdp0sk6n0v6qnl9b6r6x9ac6s1p7j1w66vf";
       libraryHaskellDepends = [
         base bytestring fast-logger hsyslog monad-logger text transformers
       ];
       homepage = "https://github.com/fpco/monad-logger-syslog";
       description = "syslog output for monad-logger";
       license = stdenv.lib.licenses.mit;
     }) {};
  "monad-loops" = callPackage
    ({ mkDerivation, base, tasty, tasty-hunit }:
     mkDerivation {
       pname = "monad-loops";
       version = "0.4.3";
       sha256 = "062c2sn3hc8h50p1mhqkpyv6x8dydz2zh3ridvlfjq9nqimszaky";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base tasty tasty-hunit ];
       homepage = "https://github.com/mokus0/monad-loops";
       description = "Monadic loops";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "monad-par" = callPackage
    ({ mkDerivation, abstract-deque, abstract-par, array, base
     , containers, deepseq, HUnit, monad-par-extras, mtl, mwc-random
     , parallel, QuickCheck, test-framework, test-framework-hunit
     , test-framework-quickcheck2, test-framework-th, time
     }:
     mkDerivation {
       pname = "monad-par";
       version = "0.3.4.7";
       sha256 = "12n27hs274nrfkpa6hx0gdkrc76wxzliqf53x6689idl363sdf13";
       libraryHaskellDepends = [
         abstract-deque abstract-par array base containers deepseq
         monad-par-extras mtl mwc-random parallel
       ];
       testHaskellDepends = [
         abstract-deque abstract-par array base containers deepseq HUnit
         monad-par-extras mtl mwc-random QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2 test-framework-th
         time
       ];
       homepage = "https://github.com/simonmar/monad-par";
       description = "A library for parallel programming based on a monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monad-par-extras" = callPackage
    ({ mkDerivation, abstract-par, base, cereal, deepseq, mtl, random
     , transformers
     }:
     mkDerivation {
       pname = "monad-par-extras";
       version = "0.3.3";
       sha256 = "0bl4bd6jzdc5zm20q1g67ppkfh6j6yn8fwj6msjayj621cck67p2";
       libraryHaskellDepends = [
         abstract-par base cereal deepseq mtl random transformers
       ];
       homepage = "https://github.com/simonmar/monad-par";
       description = "Combinators and extra features for Par monads";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monad-parallel" = callPackage
    ({ mkDerivation, base, parallel, transformers, transformers-compat
     }:
     mkDerivation {
       pname = "monad-parallel";
       version = "0.7.2.1";
       sha256 = "0r90g1sy65i6vrnqfxskq0vi39893iah65q3x9dkfwcvrw5ykn4b";
       libraryHaskellDepends = [
         base parallel transformers transformers-compat
       ];
       homepage = "http://trac.haskell.org/SCC/wiki/monad-parallel";
       description = "Parallel execution of monadic computations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monad-peel" = callPackage
    ({ mkDerivation, base, extensible-exceptions, transformers }:
     mkDerivation {
       pname = "monad-peel";
       version = "0.2";
       sha256 = "1cg6j2qhh14ryn4766dwx57g50qalzcv79rx9ysdgkskkjs6fiix";
       libraryHaskellDepends = [
         base extensible-exceptions transformers
       ];
       homepage = "http://andersk.mit.edu/haskell/monad-peel/";
       description = "Lift control operations like exception catching through monad transformers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monad-primitive" = callPackage
    ({ mkDerivation, base, primitive, transformers }:
     mkDerivation {
       pname = "monad-primitive";
       version = "0.1";
       sha256 = "1vi6g65hdyq5vq78mfag0qljxgzb6vq83m82x3cpgjl7dr9k5h1x";
       libraryHaskellDepends = [ base primitive transformers ];
       homepage = "http://bitbucket.org/Shimuuar/monad-primitive";
       description = "Type class for monad transformers stack with pirimitive base monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monad-products" = callPackage
    ({ mkDerivation, base, semigroupoids }:
     mkDerivation {
       pname = "monad-products";
       version = "4.0.1";
       sha256 = "1skcjjkn14fh92l4rx3akxjg1c85jqhnlwvkkzqwz9g15bdy3gq2";
       libraryHaskellDepends = [ base semigroupoids ];
       homepage = "http://github.com/ekmett/monad-products";
       description = "Monad products";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monad-skeleton" = callPackage
    ({ mkDerivation, base, containers, ghc-prim }:
     mkDerivation {
       pname = "monad-skeleton";
       version = "0.1.2.2";
       sha256 = "1qrd6qgb2avr1ww5swqm16dqdbz0h61jp502d73p90rhkq5lzk5i";
       libraryHaskellDepends = [ base containers ghc-prim ];
       homepage = "https://github.com/fumieval/monad-skeleton";
       description = "An undead monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monad-st" = callPackage
    ({ mkDerivation, base, transformers }:
     mkDerivation {
       pname = "monad-st";
       version = "0.2.4";
       sha256 = "1j67s07p5lsr81cjl0ch5d1q7zarmpak5kmnwckhavihg3l5m3bi";
       libraryHaskellDepends = [ base transformers ];
       homepage = "http://github.com/ekmett/monad-st";
       description = "Provides a MonadST class";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monad-stm" = callPackage
    ({ mkDerivation, base, stm, transformers }:
     mkDerivation {
       pname = "monad-stm";
       version = "0.1.0.2";
       sha256 = "09bbhbj9zg928j3dnvvxsrv8hw1c7s0vj0wffrhs810aqlf1m9xp";
       libraryHaskellDepends = [ base stm transformers ];
       description = "MonadSTM class analogous to MonadIO";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monad-time" = callPackage
    ({ mkDerivation, base, mtl, time }:
     mkDerivation {
       pname = "monad-time";
       version = "0.1";
       sha256 = "1g3dqfwwmqwdpr3dcixxyw5akbdicx53i6d2s8921l2zbkm0hfnj";
       libraryHaskellDepends = [ base mtl time ];
       homepage = "https://github.com/scrive/monad-time";
       description = "Type class for monads which carry the notion of the current time";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monad-unlift" = callPackage
    ({ mkDerivation, base, constraints, exceptions, monad-control, mtl
     , mutable-containers, resourcet, stm, transformers
     , transformers-base
     }:
     mkDerivation {
       pname = "monad-unlift";
       version = "0.1.1.0";
       sha256 = "1x86xpgirp97rda1y22129xf3fbkyb442jndpjsb9j1k4lplh7y2";
       libraryHaskellDepends = [
         base constraints exceptions monad-control mtl mutable-containers
         resourcet stm transformers transformers-base
       ];
       homepage = "https://github.com/fpco/monad-unlift";
       description = "Typeclasses for representing monad transformer unlifting";
       license = stdenv.lib.licenses.mit;
     }) {};
  "monadLib" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "monadLib";
       version = "3.7.3";
       sha256 = "17m9rj6spr5n9jlhwwvk8p40yrpwgz3j9kj3pjq7mpyrc1ssfd0q";
       libraryHaskellDepends = [ base ];
       homepage = "http://wiki.github.com/yav/monadlib";
       description = "A collection of monad transformers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monadcryptorandom" = callPackage
    ({ mkDerivation, base, bytestring, crypto-api, mtl, tagged
     , transformers
     }:
     mkDerivation {
       pname = "monadcryptorandom";
       version = "0.7.0";
       sha256 = "08sna63ndgcnry14xh6sl471dhx3vklbpv8f3mgqvi9bjdrij0b7";
       libraryHaskellDepends = [
         base bytestring crypto-api mtl tagged transformers
       ];
       homepage = "https://github.com/TomMD/monadcryptorandom";
       description = "A monad for using CryptoRandomGen";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monadic-arrays" = callPackage
    ({ mkDerivation, array, base, stm, transformers
     , transformers-compat
     }:
     mkDerivation {
       pname = "monadic-arrays";
       version = "0.2.2";
       sha256 = "183nwb3ji4ak6yf2wahsa92l8ymnhhljxkvp8f6b8wh223318xv6";
       libraryHaskellDepends = [
         array base stm transformers transformers-compat
       ];
       homepage = "http://github.com/ekmett/monadic-arrays/";
       description = "Boxed and unboxed arrays for monad transformers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monadloc" = callPackage
    ({ mkDerivation, base, template-haskell, transformers }:
     mkDerivation {
       pname = "monadloc";
       version = "0.7.1";
       sha256 = "1a773nysrsj61ka7bdacb0i7dxlgb1fjz3x5w9c1w1dv7rmhynmj";
       libraryHaskellDepends = [ base template-haskell transformers ];
       homepage = "http://github.com/pepeiborra/monadloc";
       description = "A class for monads which can keep a monadic call trace";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "monads-tf" = callPackage
    ({ mkDerivation, base, transformers }:
     mkDerivation {
       pname = "monads-tf";
       version = "0.1.0.2";
       sha256 = "0z07z2lfm3l93fx0qhfd98j76d1rksi5llq67l5v09pm8da4jvyb";
       libraryHaskellDepends = [ base transformers ];
       description = "Monad classes, using type families";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mongoDB" = callPackage
    ({ mkDerivation, array, base, base16-bytestring, base64-bytestring
     , binary, bson, bytestring, containers, criterion, cryptohash
     , hashtables, hspec, lifted-base, monad-control, mtl, network
     , nonce, old-locale, parsec, random, random-shuffle, text, time
     , transformers-base
     }:
     mkDerivation {
       pname = "mongoDB";
       version = "2.0.10";
       sha256 = "1pxhymrlbqvd5r9mqh4mg13w287aarw2ss641c6ffk4791k9b1l9";
       libraryHaskellDepends = [
         array base base16-bytestring base64-bytestring binary bson
         bytestring containers cryptohash hashtables lifted-base
         monad-control mtl network nonce parsec random random-shuffle text
         transformers-base
       ];
       testHaskellDepends = [ base hspec mtl old-locale text time ];
       benchmarkHaskellDepends = [
         array base binary bson bytestring containers criterion cryptohash
         hashtables lifted-base monad-control mtl network parsec random
         random-shuffle text transformers-base
       ];
       homepage = "https://github.com/mongodb-haskell/mongodb";
       description = "Driver (client) for MongoDB, a free, scalable, fast, document DBMS";
       license = "unknown";
     }) {};
  "mono-traversable" = callPackage
    ({ mkDerivation, base, bytestring, comonad, containers, criterion
     , dlist, dlist-instances, foldl, hashable, hspec, HUnit, mwc-random
     , QuickCheck, semigroupoids, semigroups, split, text, transformers
     , unordered-containers, vector, vector-algorithms, vector-instances
     }:
     mkDerivation {
       pname = "mono-traversable";
       version = "0.10.1.1";
       sha256 = "0jspddp5s94pg6qggcj9w0dmlpz8982scxwzjnl96qiar7jf6px1";
       revision = "1";
       editedCabalFile = "0b0vlllj3gpgc4ny3sflh57h08vrf0qgvzwf7b1nb3wayjf5n919";
       libraryHaskellDepends = [
         base bytestring comonad containers dlist dlist-instances hashable
         semigroupoids semigroups split text transformers
         unordered-containers vector vector-algorithms vector-instances
       ];
       testHaskellDepends = [
         base bytestring containers foldl hspec HUnit QuickCheck semigroups
         text transformers unordered-containers vector
       ];
       benchmarkHaskellDepends = [ base criterion mwc-random vector ];
       homepage = "https://github.com/snoyberg/mono-traversable";
       description = "Type classes for mapping, folding, and traversing monomorphic containers";
       license = stdenv.lib.licenses.mit;
     }) {};
  "monoid-extras" = callPackage
    ({ mkDerivation, base, groups, semigroupoids, semigroups }:
     mkDerivation {
       pname = "monoid-extras";
       version = "0.4.0.4";
       sha256 = "1sdiqck1dsiv34ks8x6g4zhnjxs94asa6ijxqnnn4vzhr4z5ach0";
       libraryHaskellDepends = [ base groups semigroupoids semigroups ];
       description = "Various extra monoid-related definitions and utilities";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monoid-subclasses" = callPackage
    ({ mkDerivation, base, bytestring, containers, primes, QuickCheck
     , quickcheck-instances, tasty, tasty-quickcheck, text, vector
     }:
     mkDerivation {
       pname = "monoid-subclasses";
       version = "0.4.2";
       sha256 = "0azfpyilymiw7w9zvbm31fp72c8qr8lajljjv78s9p6kxcr7299q";
       libraryHaskellDepends = [
         base bytestring containers primes text vector
       ];
       testHaskellDepends = [
         base bytestring containers primes QuickCheck quickcheck-instances
         tasty tasty-quickcheck text vector
       ];
       homepage = "https://github.com/blamario/monoid-subclasses/";
       description = "Subclasses of Monoid";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monoidal-containers" = callPackage
    ({ mkDerivation, base, containers, deepseq, hashable, lens, newtype
     , unordered-containers
     }:
     mkDerivation {
       pname = "monoidal-containers";
       version = "0.1.2.3";
       sha256 = "0jd1i76wkglglyy1hcv5kk0l5sxs545b50i8ydz57dw1jb91spbm";
       libraryHaskellDepends = [
         base containers deepseq hashable lens newtype unordered-containers
       ];
       homepage = "http://github.com/bgamari/monoidal-containers";
       description = "Containers with monoidal accumulation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "morte" = callPackage
    ({ mkDerivation, alex, array, base, binary, containers, criterion
     , deepseq, Earley, http-client, http-client-tls, managed, microlens
     , microlens-mtl, optparse-applicative, pipes, system-fileio
     , system-filepath, text, text-format, transformers
     }:
     mkDerivation {
       pname = "morte";
       version = "1.4.2";
       sha256 = "0j31p7b9722fhyk2srf9sr11jabcnid1bzjglq1zmh7s434i8s3n";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         array base binary containers deepseq Earley http-client
         http-client-tls managed microlens microlens-mtl pipes system-fileio
         system-filepath text text-format transformers
       ];
       libraryToolDepends = [ alex ];
       executableHaskellDepends = [ base optparse-applicative text ];
       benchmarkHaskellDepends = [ base criterion text ];
       description = "A bare-bones calculus of constructions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "msi-kb-backlit" = callPackage
    ({ mkDerivation, base, bytestring, hid, split }:
     mkDerivation {
       pname = "msi-kb-backlit";
       version = "0.1.0.1";
       sha256 = "1lq1a13h74dkhmh6mkg9mzksvzc2mjb8ynsbs9856z7079ifsdw4";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [ base bytestring hid split ];
       doHaddock = false;
       description = "A command line tool to change backlit colors of your MSI keyboards";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mstate" = callPackage
    ({ mkDerivation, base, monad-peel, mtl, stm }:
     mkDerivation {
       pname = "mstate";
       version = "0.2.7";
       sha256 = "05rcpfang0biy16aglf6da44zp9zqy2x0zdsfl75mv1drkky6225";
       libraryHaskellDepends = [ base monad-peel mtl stm ];
       description = "MState: A consistent State monad for concurrent applications";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mtl" = callPackage
    ({ mkDerivation, base, transformers }:
     mkDerivation {
       pname = "mtl";
       version = "2.2.1";
       sha256 = "1icdbj2rshzn0m1zz5wa7v3xvkf6qw811p4s7jgqwvx1ydwrvrfa";
       revision = "1";
       editedCabalFile = "0fsa965g9h23mlfjzghmmhcb9dmaq8zpm374gby6iwgdx47q0njb";
       libraryHaskellDepends = [ base transformers ];
       homepage = "http://github.com/ekmett/mtl";
       description = "Monad classes, using functional dependencies";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mtl-compat" = callPackage
    ({ mkDerivation, base, mtl }:
     mkDerivation {
       pname = "mtl-compat";
       version = "0.2.1.3";
       sha256 = "15388p9ybdn6digk6cpdsw6havd0yva8vvwl3p7fnc9sb59wln34";
       revision = "3";
       editedCabalFile = "0igfsrc7q326ggvw47xwq1xffa4r225akla0nwgmqhd7y1n5753c";
       libraryHaskellDepends = [ base mtl ];
       doHaddock = false;
       homepage = "https://github.com/haskell-compat/mtl-compat";
       description = "Backported Control.Monad.Except module from mtl";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mtl-prelude" = callPackage
    ({ mkDerivation, base, mtl, transformers }:
     mkDerivation {
       pname = "mtl-prelude";
       version = "2.0.2";
       sha256 = "1j42pdkiiqjkdmidgmgpfbwh2i8dwsc40labw4pm86qzsi0r8m2v";
       libraryHaskellDepends = [ base mtl transformers ];
       homepage = "https://github.com/nikita-volkov/mtl-prelude";
       description = "Reexports of most definitions from \"mtl\" and \"transformers\"";
       license = stdenv.lib.licenses.mit;
     }) {};
  "multiarg" = callPackage
    ({ mkDerivation, base, QuickCheck, tasty, tasty-quickcheck
     , tasty-th
     }:
     mkDerivation {
       pname = "multiarg";
       version = "0.30.0.10";
       sha256 = "188pqjpd1l4kwv4gnym6nq6nyfmcrq153bdpqbfjmmh6iqx65yn9";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [
         base QuickCheck tasty tasty-quickcheck tasty-th
       ];
       homepage = "https://github.com/massysett/multiarg";
       description = "Command lines for options that take multiple arguments";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "multimap" = callPackage
    ({ mkDerivation, base, containers }:
     mkDerivation {
       pname = "multimap";
       version = "1.2.1";
       sha256 = "0d3l5q4yvmywl6i9ip96zz0fvhjdh00mfbbniphbjxsi8wlwack3";
       libraryHaskellDepends = [ base containers ];
       homepage = "http://hub.darcs.net/scravy/multimap";
       description = "A multimap";
       license = stdenv.lib.licenses.mit;
     }) {};
  "multipart" = callPackage
    ({ mkDerivation, base, bytestring, parsec }:
     mkDerivation {
       pname = "multipart";
       version = "0.1.2";
       sha256 = "0g04jhyw1ib1s7c9bcldyyn4n90qd9x7dmvic4vgq57bgcqgnhz5";
       libraryHaskellDepends = [ base bytestring parsec ];
       homepage = "http://www.github.com/silkapp/multipart";
       description = "HTTP multipart split out of the cgi package";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "multiplate" = callPackage
    ({ mkDerivation, base, transformers }:
     mkDerivation {
       pname = "multiplate";
       version = "0.0.3";
       sha256 = "1gsfmw7dzsxycixqqrh5wr1g3izn7rm2a4a20nh8pp6fgn21c01c";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base transformers ];
       homepage = "http://haskell.org/haskellwiki/Multiplate";
       description = "Lightweight generic library for mutually recursive data types";
       license = stdenv.lib.licenses.mit;
     }) {};
  "multiset" = callPackage
    ({ mkDerivation, base, containers, doctest, Glob }:
     mkDerivation {
       pname = "multiset";
       version = "0.3.2";
       sha256 = "1fx611h6vsxnhlh3xlcysw0j1d70hgfj5sxs81d5h26qjb4yyxp5";
       libraryHaskellDepends = [ base containers ];
       testHaskellDepends = [ base doctest Glob ];
       description = "The Data.MultiSet container type";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "murmur-hash" = callPackage
    ({ mkDerivation, base, bytestring }:
     mkDerivation {
       pname = "murmur-hash";
       version = "0.1.0.8";
       sha256 = "01isk1gy1x75zksdmddcpp7mnx69wb96g1xv8gl3anvx9bfg9fbc";
       libraryHaskellDepends = [ base bytestring ];
       homepage = "http://github.com/nominolo/murmur-hash";
       description = "MurmurHash2 implementation for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mustache" = callPackage
    ({ mkDerivation, aeson, base, base-unicode-symbols, bytestring
     , cmdargs, containers, directory, either, filepath, hspec, mtl
     , parsec, process, scientific, temporary, text
     , unordered-containers, vector, yaml
     }:
     mkDerivation {
       pname = "mustache";
       version = "1.0";
       sha256 = "1bs2c051l9xkry9xwj5sy2kvqr2sv22mvd12rv05gbrh6h7zya59";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base base-unicode-symbols bytestring containers directory
         either filepath mtl parsec scientific text unordered-containers
         vector
       ];
       executableHaskellDepends = [
         aeson base base-unicode-symbols bytestring cmdargs filepath text
         yaml
       ];
       testHaskellDepends = [
         aeson base base-unicode-symbols directory filepath hspec process
         temporary text unordered-containers yaml
       ];
       doCheck = false;
       homepage = "https://github.com/JustusAdam/mustache";
       description = "A mustache template parser library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mutable-containers" = callPackage
    ({ mkDerivation, base, containers, criterion, ghc-prim, hspec
     , mono-traversable, primitive, QuickCheck, vector
     }:
     mkDerivation {
       pname = "mutable-containers";
       version = "0.3.2";
       sha256 = "0zh10b7dhqsfbxdx44v97hr0whzc3gqyw9d8r32gk9gsab7qh4vq";
       revision = "1";
       editedCabalFile = "00cryiv5dfmdmds9hr2if5pxfyh6z8ba54ygid25snvw3dzq2n7z";
       libraryHaskellDepends = [
         base containers ghc-prim mono-traversable primitive vector
       ];
       testHaskellDepends = [
         base containers hspec primitive QuickCheck vector
       ];
       benchmarkHaskellDepends = [ base containers criterion ];
       homepage = "https://github.com/fpco/mutable-containers";
       description = "Abstactions and concrete implementations of mutable containers";
       license = stdenv.lib.licenses.mit;
     }) {};
  "mwc-probability" = callPackage
    ({ mkDerivation, base, mwc-random, primitive, transformers }:
     mkDerivation {
       pname = "mwc-probability";
       version = "1.0.3";
       sha256 = "0zy4fn8v2gqq172why4dxdr88hg3w3dyxi3i9zz8yxln5r96qf1q";
       libraryHaskellDepends = [ base mwc-random primitive transformers ];
       homepage = "http://github.com/jtobin/mwc-probability";
       description = "Sampling function-based probability distributions";
       license = stdenv.lib.licenses.mit;
     }) {};
  "mwc-random" = callPackage
    ({ mkDerivation, base, HUnit, primitive, QuickCheck, statistics
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , time, vector
     }:
     mkDerivation {
       pname = "mwc-random";
       version = "0.13.4.0";
       sha256 = "1slab95piyq5n8m739i5ghdmgpvjfdsq5qqd5czawv7ynbmgsb65";
       libraryHaskellDepends = [ base primitive time vector ];
       testHaskellDepends = [
         base HUnit QuickCheck statistics test-framework
         test-framework-hunit test-framework-quickcheck2 vector
       ];
       homepage = "https://github.com/bos/mwc-random";
       description = "Fast, high quality pseudo random number generation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mysql" = callPackage
    ({ mkDerivation, base, bytestring, containers, mysql }:
     mkDerivation {
       pname = "mysql";
       version = "0.1.1.8";
       sha256 = "115xz4khg4klrgjvv9dy83pv197b4y1zgw6fbpv8j88yr3qjmw4h";
       revision = "1";
       editedCabalFile = "02znpf0s1sjyxd3kyw52nd3702mdl907i9vnb4dbsrfsx5hz3c10";
       libraryHaskellDepends = [ base bytestring containers ];
       librarySystemDepends = [ mysql ];
       homepage = "https://github.com/paul-rouse/mysql";
       description = "A low-level MySQL client library";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) mysql;};
  "mysql-simple" = callPackage
    ({ mkDerivation, attoparsec, base, base16-bytestring, blaze-builder
     , blaze-textual, bytestring, mysql, old-locale, pcre-light, text
     , time
     }:
     mkDerivation {
       pname = "mysql-simple";
       version = "0.2.2.5";
       sha256 = "132igmgrgkpc0g9063d593ha3iv40k5dd017nlb07sz0qs9hi8w6";
       revision = "2";
       editedCabalFile = "1x0bfmf9czb3av9m16b1n024ic9j496g67hmbja7y8piah6fq3q0";
       libraryHaskellDepends = [
         attoparsec base base16-bytestring blaze-builder blaze-textual
         bytestring mysql old-locale pcre-light text time
       ];
       homepage = "https://github.com/paul-rouse/mysql-simple";
       description = "A mid-level MySQL client library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "nagios-check" = callPackage
    ({ mkDerivation, base, bifunctors, exceptions, hspec, mtl
     , QuickCheck, text
     }:
     mkDerivation {
       pname = "nagios-check";
       version = "0.3.2";
       sha256 = "1dv0g25iz61ql9nz9s7krlpa1hjv3iqf4i1wsm1njf8cn5fbij8v";
       libraryHaskellDepends = [ base bifunctors exceptions mtl text ];
       testHaskellDepends = [ base hspec QuickCheck text ];
       homepage = "https://github.com/olorin/haskell-nagios-check";
       description = "Package for writing monitoring plugins";
       license = stdenv.lib.licenses.mit;
     }) {};
  "nanospec" = callPackage
    ({ mkDerivation, base, hspec, silently }:
     mkDerivation {
       pname = "nanospec";
       version = "0.2.1";
       sha256 = "0jq2l1lmy4hcl6r975xcg86xr1y7jfxr3qn27ibsmjbzlnxdkjyv";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base hspec silently ];
       description = "A lightweight implementation of a subset of Hspec's API";
       license = stdenv.lib.licenses.mit;
     }) {};
  "nationstates" = callPackage
    ({ mkDerivation, base, bytestring, clock, containers, http-client
     , http-client-tls, http-types, multiset, tls, transformers, xml
     }:
     mkDerivation {
       pname = "nationstates";
       version = "0.5.0.0";
       sha256 = "14jnyzbjfvs0kcpdm5nwb9s4bnwqwc10q6484k77gbhn3gfgq3h2";
       libraryHaskellDepends = [
         base bytestring clock containers http-client http-client-tls
         http-types multiset tls transformers xml
       ];
       homepage = "https://github.com/lfairy/nationstates";
       description = "NationStates API client";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "nats" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "nats";
       version = "1.1";
       sha256 = "1i09b99za01qrf2dw5hs2v8rh4hh8gd9ng02m4yfklv2rm6y4r6f";
       doHaddock = false;
       homepage = "http://github.com/ekmett/nats/";
       description = "Natural numbers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "natural-sort" = callPackage
    ({ mkDerivation, base, bytestring, parsec, text }:
     mkDerivation {
       pname = "natural-sort";
       version = "0.1.2";
       sha256 = "0l3bkbqzrlpdhzazqqlx71ah0m13ypa0981qvw3sn9q8d0sbfwkv";
       libraryHaskellDepends = [ base bytestring parsec text ];
       homepage = "https://john-millikin.com/software/natural-sort/";
       description = "User-friendly text collation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ndjson-conduit" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, bytestring, conduit }:
     mkDerivation {
       pname = "ndjson-conduit";
       version = "0.1.0.3";
       sha256 = "14mmx4qr594i1551zrmbs9bwk5gfm67cf4y3xnlmwmkdmxsfbyd4";
       libraryHaskellDepends = [
         aeson attoparsec base bytestring conduit
       ];
       homepage = "https://github.com/srijs/haskell-ndjson-conduit";
       description = "Conduit-based parsing and serialization for newline delimited JSON";
       license = stdenv.lib.licenses.mit;
     }) {};
  "neat-interpolation" = callPackage
    ({ mkDerivation, base, base-prelude, HTF, parsec, template-haskell
     , text
     }:
     mkDerivation {
       pname = "neat-interpolation";
       version = "0.3.2";
       sha256 = "02jyxw1spk972j1yhx6imzrxjkfdvsb053d6a3vzxhi4lv27fpl7";
       libraryHaskellDepends = [
         base base-prelude parsec template-haskell text
       ];
       testHaskellDepends = [ base-prelude HTF ];
       homepage = "https://github.com/nikita-volkov/neat-interpolation";
       description = "A quasiquoter for neat and simple multiline text interpolation";
       license = stdenv.lib.licenses.mit;
     }) {};
  "nettle" = callPackage
    ({ mkDerivation, array, base, byteable, bytestring
     , crypto-cipher-tests, crypto-cipher-types, HUnit, nettle
     , QuickCheck, securemem, tagged, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "nettle";
       version = "0.2.0";
       sha256 = "1plv9r86ljgjvvb8ny8zayrcdrmy7cd8jfvq4vp56b407dqq8092";
       libraryHaskellDepends = [
         base byteable bytestring crypto-cipher-types securemem tagged
       ];
       libraryPkgconfigDepends = [ nettle ];
       testHaskellDepends = [
         array base bytestring crypto-cipher-tests crypto-cipher-types HUnit
         QuickCheck tagged test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       doCheck = false;
       homepage = "https://github.com/stbuehler/haskell-nettle";
       description = "safe nettle binding";
       license = stdenv.lib.licenses.mit;
     }) {inherit (pkgs) nettle;};
  "network" = callPackage
    ({ mkDerivation, base, bytestring, HUnit, test-framework
     , test-framework-hunit, unix
     }:
     mkDerivation {
       pname = "network";
       version = "2.6.2.1";
       sha256 = "1yhvpd4wigz165jvyvw9zslx7lgqdj63jh3zv5s74b5ykdfa3zd3";
       libraryHaskellDepends = [ base bytestring unix ];
       testHaskellDepends = [
         base bytestring HUnit test-framework test-framework-hunit
       ];
       doCheck = false;
       homepage = "https://github.com/haskell/network";
       description = "Low-level networking interface";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "network-anonymous-i2p" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, exceptions, hspec
     , hspec-attoparsec, hspec-expectations, mtl, network
     , network-attoparsec, network-simple, text, transformers, uuid
     }:
     mkDerivation {
       pname = "network-anonymous-i2p";
       version = "0.10.0";
       sha256 = "0b7z7w105l1yd3xpnnl2z779m5zknf756cslksbbpsy16rn7kxfg";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         attoparsec base bytestring exceptions mtl network
         network-attoparsec network-simple text transformers uuid
       ];
       testHaskellDepends = [
         attoparsec base bytestring exceptions hspec hspec-attoparsec
         hspec-expectations mtl network network-simple transformers uuid
       ];
       doCheck = false;
       homepage = "http://github.com/solatis/haskell-network-anonymous-i2p";
       description = "Haskell API for I2P anonymous networking";
       license = stdenv.lib.licenses.mit;
     }) {};
  "network-anonymous-tor" = callPackage
    ({ mkDerivation, attoparsec, base, base32string, bytestring
     , exceptions, hexstring, hspec, hspec-attoparsec
     , hspec-expectations, network, network-attoparsec, network-simple
     , socks, splice, text, transformers
     }:
     mkDerivation {
       pname = "network-anonymous-tor";
       version = "0.11.0";
       sha256 = "0jbm29795dznmrdkvl95v9xhj8pcmwgsdk2ngaj6zv5a9arybbj1";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         attoparsec base base32string bytestring exceptions hexstring
         network network-attoparsec network-simple socks text transformers
       ];
       executableHaskellDepends = [
         base exceptions network network-simple splice
       ];
       testHaskellDepends = [
         attoparsec base base32string bytestring exceptions hspec
         hspec-attoparsec hspec-expectations network network-simple socks
         text transformers
       ];
       homepage = "http://www.leonmergen.com/opensource.html";
       description = "Haskell API for Tor anonymous networking";
       license = stdenv.lib.licenses.mit;
     }) {};
  "network-attoparsec" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, enclosed-exceptions
     , exceptions, hspec, lifted-base, monad-control, mtl, network
     , network-simple, transformers
     }:
     mkDerivation {
       pname = "network-attoparsec";
       version = "0.12.2";
       sha256 = "1w08py367mmwfg5lff6y9s6hdpg1nbjf7v6vv9s19aw6saxak44p";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         attoparsec base bytestring enclosed-exceptions exceptions
         lifted-base monad-control mtl network transformers
       ];
       testHaskellDepends = [
         attoparsec base bytestring exceptions hspec mtl network
         network-simple transformers
       ];
       homepage = "http://github.com/solatis/haskell-network-attoparsec";
       description = "Utility functions for running a parser against a socket";
       license = stdenv.lib.licenses.mit;
     }) {};
  "network-carbon" = callPackage
    ({ mkDerivation, base, bytestring, network, text, time, vector }:
     mkDerivation {
       pname = "network-carbon";
       version = "1.0.6";
       sha256 = "1xlys5nal0c1cgr16jkf3mml9aqs65rk5a32g9ij32myhqnsgq18";
       libraryHaskellDepends = [
         base bytestring network text time vector
       ];
       homepage = "http://github.com/ocharles/network-carbon";
       description = "A Haskell implementation of the Carbon protocol (part of the Graphite monitoring tools)";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "network-conduit-tls" = callPackage
    ({ mkDerivation, base, bytestring, conduit, conduit-extra
     , connection, cprng-aes, data-default, HUnit, monad-control, mtl
     , network, streaming-commons, tls, transformers
     }:
     mkDerivation {
       pname = "network-conduit-tls";
       version = "1.2.0.1";
       sha256 = "17d267sg74snq626kk8n9yy9njspjzivwjg60l69879z4nsvp200";
       libraryHaskellDepends = [
         base bytestring conduit conduit-extra connection cprng-aes
         data-default monad-control network streaming-commons tls
         transformers
       ];
       testHaskellDepends = [
         base bytestring conduit conduit-extra connection HUnit mtl
       ];
       homepage = "https://github.com/snoyberg/conduit";
       description = "Create TLS-aware network code with conduits";
       license = stdenv.lib.licenses.mit;
     }) {};
  "network-house" = callPackage
    ({ mkDerivation, array, base, containers, mtl }:
     mkDerivation {
       pname = "network-house";
       version = "0.1.0.2";
       sha256 = "0hxbzzdjrxnx9pknsbma7iyfr3pxrsff5n9mhbkpaqaizhibq7q7";
       libraryHaskellDepends = [ array base containers mtl ];
       homepage = "https://github.com/nh2/network-house";
       description = "data and parsers for Ethernet, TCP, UDP, IPv4, IPv6, ICMP, DHCP, TFTP";
       license = stdenv.lib.licenses.gpl2;
     }) {};
  "network-info" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "network-info";
       version = "0.2.0.8";
       sha256 = "0xndvg776241fgjmynxfpy81f1csjmh8dg33yf0c8m71ychz3pzc";
       libraryHaskellDepends = [ base ];
       homepage = "http://github.com/jystic/network-info";
       description = "Access the local computer's basic network configuration";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "network-multicast" = callPackage
    ({ mkDerivation, base, network }:
     mkDerivation {
       pname = "network-multicast";
       version = "0.1.0";
       sha256 = "12kswjqg4xv7gdjqabbyr7wvqkkzsyga3fjxnv9z9fdmil7xphhq";
       libraryHaskellDepends = [ base network ];
       description = "Simple multicast library";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "network-protocol-xmpp" = callPackage
    ({ mkDerivation, base, bytestring, gnuidn, gnutls, gsasl
     , libxml-sax, monads-tf, network, text, transformers, xml-types
     }:
     mkDerivation {
       pname = "network-protocol-xmpp";
       version = "0.4.8";
       sha256 = "07hy8byhaakjwfidrvkjp07jn25aw21g8wcs93ni3njj0kh2jxza";
       libraryHaskellDepends = [
         base bytestring gnuidn gnutls gsasl libxml-sax monads-tf network
         text transformers xml-types
       ];
       homepage = "https://john-millikin.com/software/haskell-xmpp/";
       description = "Client library for the XMPP protocol";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "network-simple" = callPackage
    ({ mkDerivation, base, bytestring, exceptions, network
     , transformers
     }:
     mkDerivation {
       pname = "network-simple";
       version = "0.4.0.4";
       sha256 = "0qa3ax29ci7m01af0d2rvnx9m24q1d9zw727bzhc88k2g6k2xzah";
       libraryHaskellDepends = [
         base bytestring exceptions network transformers
       ];
       homepage = "https://github.com/k0001/network-simple";
       description = "Simple network sockets usage patterns";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "network-transport" = callPackage
    ({ mkDerivation, base, binary, bytestring, deepseq, hashable
     , transformers
     }:
     mkDerivation {
       pname = "network-transport";
       version = "0.4.3.1";
       sha256 = "0dnqpfm4p0bzw1v1pn9w42000l23jpw2iiqcnvabxjnnfbv81zbp";
       revision = "2";
       editedCabalFile = "1hah021f8qz4l0ihp7pza1zsjakx8n1k35xqxfp7928hqqprmr6x";
       libraryHaskellDepends = [
         base binary bytestring deepseq hashable transformers
       ];
       homepage = "http://haskell-distributed.github.com";
       description = "Network abstraction layer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "network-transport-composed" = callPackage
    ({ mkDerivation, base, bytestring, network-transport }:
     mkDerivation {
       pname = "network-transport-composed";
       version = "0.2.0.1";
       sha256 = "0kvj85yx7mvj1rjgv90cb9sfm9f4dqi8mahcp2bqxsn2w4n9wpwn";
       revision = "1";
       editedCabalFile = "1fwn9wix1k2kccs1dqp4z2ym98bskdkhjff9in7d6myaz93f23gw";
       libraryHaskellDepends = [ base bytestring network-transport ];
       homepage = "http://haskell-distributed.github.com";
       description = "Compose network transports";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "network-transport-tcp" = callPackage
    ({ mkDerivation, base, bytestring, containers, data-accessor
     , network, network-transport, network-transport-tests
     }:
     mkDerivation {
       pname = "network-transport-tcp";
       version = "0.4.2";
       sha256 = "0wh3d37cfmqbxa0x9c56miki7m9mpg0xv5rrn8fh562lfvcn89ls";
       libraryHaskellDepends = [
         base bytestring containers data-accessor network network-transport
       ];
       testHaskellDepends = [
         base network network-transport network-transport-tests
       ];
       doCheck = false;
       homepage = "http://haskell-distributed.github.com";
       description = "TCP instantiation of Network.Transport";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "network-transport-tests" = callPackage
    ({ mkDerivation, ansi-terminal, base, bytestring, containers, mtl
     , network-transport, random
     }:
     mkDerivation {
       pname = "network-transport-tests";
       version = "0.2.3.0";
       sha256 = "0v1vyn0v41kzw54qy2f46phwglyh0qsng534ma8rhwbxxfbvsxw2";
       libraryHaskellDepends = [
         ansi-terminal base bytestring containers mtl network-transport
         random
       ];
       homepage = "http://haskell-distributed.github.com";
       description = "Unit tests for Network.Transport implementations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "network-transport-zeromq" = callPackage
    ({ mkDerivation, async, base, binary, bytestring, containers
     , criterion, data-accessor, distributed-process, exceptions
     , network-transport, random, semigroups, stm, stm-chans
     , transformers, zeromq4-haskell
     }:
     mkDerivation {
       pname = "network-transport-zeromq";
       version = "0.2.1.1";
       sha256 = "0dfa1hgxgi44jnv47qf1qm0gcprkxlzd4x4qi7628z1k5cd6xdck";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         async base binary bytestring containers data-accessor exceptions
         network-transport random semigroups stm stm-chans transformers
         zeromq4-haskell
       ];
       executableHaskellDepends = [
         base binary bytestring criterion distributed-process
       ];
       benchmarkHaskellDepends = [
         base binary bytestring criterion distributed-process
       ];
       doCheck = false;
       homepage = "https://github.com/tweag/network-transport-zeromq";
       description = "ZeroMQ backend for network-transport";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "network-uri" = callPackage
    ({ mkDerivation, base, deepseq, HUnit, parsec, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "network-uri";
       version = "2.6.0.3";
       sha256 = "1pwbqb2rk4rnvllvdch42p5368xcvpkanp7bxckdhxya8zzwvhhg";
       libraryHaskellDepends = [ base deepseq parsec ];
       testHaskellDepends = [
         base HUnit test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       homepage = "https://github.com/haskell/network-uri";
       description = "URI manipulation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "newtype" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "newtype";
       version = "0.2";
       sha256 = "0ng4i5r73256gzwl6bw57h0abqixj783c3ggph1hk2wsplx0655p";
       libraryHaskellDepends = [ base ];
       description = "A typeclass and set of functions for working with newtypes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "newtype-generics" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "newtype-generics";
       version = "0.4.1";
       sha256 = "1qjzcmx5yj85cvdgglyg9f9ff7k9gvnyrb85n6bjzyh10q9n7vd5";
       revision = "2";
       editedCabalFile = "1x0v97rc9qaq9sdbswr45334naicncni7rqkzbi27rwc3km9bbvm";
       libraryHaskellDepends = [ base ];
       doCheck = false;
       description = "A typeclass and set of functions for working with newtypes, with generics support";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "nix-paths" = callPackage
    ({ mkDerivation, base, process }:
     mkDerivation {
       pname = "nix-paths";
       version = "1";
       sha256 = "0na92hrvlkl3wz8kkwy0y47xddsx4f8lnhx93dqm69hh2hzyq1kb";
       revision = "1";
       editedCabalFile = "065d8iydxk0wg61nvanvdlyjbwd4gmh7mg5b1bzc3fd82f1g9kzq";
       configureFlags = [ "-fallow-relative-paths" ];
       libraryHaskellDepends = [ base process ];
       homepage = "https://github.com/peti/nix-paths";
       description = "Knowledge of Nix's installation directories";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "nonce" = callPackage
    ({ mkDerivation, base, base64-bytestring, bytestring, cprng-aes
     , crypto-random, text, transformers
     }:
     mkDerivation {
       pname = "nonce";
       version = "1.0.2";
       sha256 = "1l4w6bdrwa42r90n6xzwr8lz2fdrn3m763ls311pnygajr4ih10h";
       revision = "1";
       editedCabalFile = "012hkf9hlvwmlbf1n1v05vgidssxv99z4bq2lbpbf1dlb366madj";
       libraryHaskellDepends = [
         base base64-bytestring bytestring cprng-aes crypto-random text
         transformers
       ];
       homepage = "https://github.com/prowdsponsor/nonce";
       description = "Generate cryptographic nonces";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "nsis" = callPackage
    ({ mkDerivation, base, directory, process, transformers, uniplate
     }:
     mkDerivation {
       pname = "nsis";
       version = "0.3";
       sha256 = "0w7mip0dxpzdfdxj8gdk58zfz5n4aasd60ql546hx3yv5r65dbq3";
       libraryHaskellDepends = [ base transformers uniplate ];
       testHaskellDepends = [
         base directory process transformers uniplate
       ];
       doCheck = false;
       homepage = "https://github.com/ndmitchell/nsis#readme";
       description = "DSL for producing Windows Installer using NSIS";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "numbers" = callPackage
    ({ mkDerivation, base, QuickCheck, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "numbers";
       version = "3000.2.0.1";
       sha256 = "10z1bi5qbc81z5xx2v1ylwcpmcfl1ci7lxrswkgi0dd1wi8havbk";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [
         base QuickCheck test-framework test-framework-quickcheck2
       ];
       homepage = "https://github.com/jwiegley/numbers#readme";
       description = "Various number types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "numeric-extras" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "numeric-extras";
       version = "0.1";
       sha256 = "1mk11c0gz1yjy5b8dvq6czfny57pln0bs7x28fz38qyr44872067";
       libraryHaskellDepends = [ base ];
       homepage = "http://github.com/ekmett/numeric-extras";
       description = "Useful tools from the C standard library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "numtype-dk" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "numtype-dk";
       version = "0.5";
       sha256 = "0gd1a5hf0bw4vc56f1n7y143bsjkdc97pysv4q1gxpwrnj1sgbxd";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/bjornbm/numtype-dk";
       description = "Type-level integers, using TypeNats, Data Kinds, and Closed Type Families";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "objective" = callPackage
    ({ mkDerivation, base, containers, either, exceptions, free
     , hashable, monad-skeleton, monad-stm, mtl, profunctors, stm
     , template-haskell, transformers, transformers-compat
     , unordered-containers, void, witherable
     }:
     mkDerivation {
       pname = "objective";
       version = "1.0.5";
       sha256 = "07v1srbzd2sxwfwi1jrq63jycr46hwq4wh6wi7sgdpla5m28mhyh";
       libraryHaskellDepends = [
         base containers either exceptions free hashable monad-skeleton
         monad-stm mtl profunctors stm template-haskell transformers
         transformers-compat unordered-containers void witherable
       ];
       homepage = "https://github.com/fumieval/objective";
       description = "Composable objects";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ofx" = callPackage
    ({ mkDerivation, base, parsec, pretty, time }:
     mkDerivation {
       pname = "ofx";
       version = "0.4.0.4";
       sha256 = "1z85kqmnbi1qzh53qj9dd35vfifj3795ffl26isxb1cb1cx36ly9";
       revision = "1";
       editedCabalFile = "0cvzdwr9rxgz0ba55viphd6awh6wp37q0343l98aqijwnb9qq85v";
       libraryHaskellDepends = [ base parsec pretty time ];
       homepage = "http://www.github.com/massysett/ofx";
       description = "Parser for OFX data";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "old-locale" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "old-locale";
       version = "1.0.0.7";
       sha256 = "0l3viphiszvz5wqzg7a45zp40grwlab941q5ay29iyw8p3v8pbyv";
       revision = "2";
       editedCabalFile = "04b9vn007hlvsrx4ksd3r8r3kbyaj2kvwxchdrmd4370qzi8p6gs";
       libraryHaskellDepends = [ base ];
       description = "locale library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "old-time" = callPackage
    ({ mkDerivation, base, old-locale }:
     mkDerivation {
       pname = "old-time";
       version = "1.1.0.3";
       sha256 = "1h9b26s3kfh2k0ih4383w90ibji6n0iwamxp6rfp2lbq1y5ibjqw";
       revision = "2";
       editedCabalFile = "1j6ln1dkvhdvnwl33bp0xf9lhc4sybqk0aw42p8cq81xwwzbn7y9";
       libraryHaskellDepends = [ base old-locale ];
       description = "Time library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "omnifmt" = callPackage
    ({ mkDerivation, aeson, base, exceptions, extra, fast-logger
     , filepath, monad-logger, monad-parallel, mtl, optparse-applicative
     , pipes, pipes-concurrency, temporary, text, time
     , unordered-containers, yaml
     }:
     mkDerivation {
       pname = "omnifmt";
       version = "0.2.1.1";
       sha256 = "0c8p6j434ik6g3n2gxc6mhnkk1crp7m7nfgsfapa4ki3h28phr0r";
       revision = "1";
       editedCabalFile = "1yj2pbdyhj2qavx5aarcj6ncj1pkf7rs3cqm7k163rqyna811xji";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base exceptions extra filepath monad-logger mtl pipes text
         unordered-containers yaml
       ];
       executableHaskellDepends = [
         base exceptions extra fast-logger filepath monad-logger
         monad-parallel mtl optparse-applicative pipes pipes-concurrency
         temporary text time
       ];
       homepage = "https://github.com/hjwylde/omnifmt";
       description = "A pretty-printer wrapper to faciliate ease of formatting during development";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "once" = callPackage
    ({ mkDerivation, base, containers, hashable, template-haskell
     , unordered-containers
     }:
     mkDerivation {
       pname = "once";
       version = "0.1.0.0";
       sha256 = "1ax7d310k4bqjc0bkx1qbx19db8rlfkc9yb90k8a57h78scsfncs";
       libraryHaskellDepends = [
         base containers hashable template-haskell unordered-containers
       ];
       homepage = "https://anonscm.debian.org/cgit/users/kaction-guest/haskell-once.git";
       description = "memoization for IO actions and functions";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "oo-prototypes" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "oo-prototypes";
       version = "0.1.0.0";
       sha256 = "0xpm2adf47clhzpwd833w706mc5xfxwr2wp4aywigy11687f9bly";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/yi-editor/oo-prototypes";
       description = "Support for OO-like prototypes";
       license = stdenv.lib.licenses.gpl2;
     }) {};
  "opaleye" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, base16-bytestring
     , bytestring, case-insensitive, containers, contravariant, multiset
     , postgresql-simple, pretty, product-profunctors, profunctors
     , QuickCheck, semigroups, text, time, time-locale-compat
     , transformers, uuid, void
     }:
     mkDerivation {
       pname = "opaleye";
       version = "0.4.2.0";
       sha256 = "081wq5nylljpca95702a40a9cmpsmn4wvpg5mvdw0lbizb8c895r";
       revision = "7";
       editedCabalFile = "14zsj9nmbcr1ix5f8i3kbw2m87d3rwafd33vhhajc15cj6r1xldk";
       libraryHaskellDepends = [
         aeson attoparsec base base16-bytestring bytestring case-insensitive
         contravariant postgresql-simple pretty product-profunctors
         profunctors semigroups text time time-locale-compat transformers
         uuid void
       ];
       testHaskellDepends = [
         base containers contravariant multiset postgresql-simple
         product-profunctors profunctors QuickCheck semigroups time
       ];
       doCheck = false;
       homepage = "https://github.com/tomjaguarpaw/haskell-opaleye";
       description = "An SQL-generating DSL targeting PostgreSQL";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "open-browser" = callPackage
    ({ mkDerivation, base, process }:
     mkDerivation {
       pname = "open-browser";
       version = "0.2.1.0";
       sha256 = "0rna8ir2cfp8gk0rd2q60an51jxc08lx4gl0liw8wwqgh1ijxv8b";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base process ];
       executableHaskellDepends = [ base ];
       homepage = "https://github.com/rightfold/open-browser";
       description = "Open a web browser from Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "openpgp-asciiarmor" = callPackage
    ({ mkDerivation, attoparsec, base, base64-bytestring, bytestring
     , cereal, HUnit, test-framework, test-framework-hunit
     }:
     mkDerivation {
       pname = "openpgp-asciiarmor";
       version = "0.1";
       sha256 = "1xrv0n7n1n8izvxvqm8wmj6mkn5l6wcq18bxs9zd1q5riynmmm2w";
       libraryHaskellDepends = [
         attoparsec base base64-bytestring bytestring cereal
       ];
       testHaskellDepends = [
         attoparsec base base64-bytestring bytestring cereal HUnit
         test-framework test-framework-hunit
       ];
       homepage = "http://floss.scru.org/openpgp-asciiarmor";
       description = "OpenPGP (RFC4880) ASCII Armor codec";
       license = "unknown";
     }) {};
  "openssl-streams" = callPackage
    ({ mkDerivation, base, bytestring, HsOpenSSL, HUnit, io-streams
     , network, test-framework, test-framework-hunit
     }:
     mkDerivation {
       pname = "openssl-streams";
       version = "1.2.1.0";
       sha256 = "1jqrc9wxvw196vgcbhpazi9vldqs31jb6jxc529iy9k7vh4mk5m9";
       libraryHaskellDepends = [
         base bytestring HsOpenSSL io-streams network
       ];
       testHaskellDepends = [
         base bytestring HsOpenSSL HUnit io-streams network test-framework
         test-framework-hunit
       ];
       description = "OpenSSL network support for io-streams";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "operational" = callPackage
    ({ mkDerivation, base, mtl, random }:
     mkDerivation {
       pname = "operational";
       version = "0.2.3.2";
       sha256 = "1aj3jhiyz4190b0qmyp684b8lbzrp8jn56s898892rvbp0hxa0pd";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base mtl ];
       executableHaskellDepends = [ random ];
       homepage = "http://haskell.org/haskellwiki/Operational";
       description = "Implementation of difficult monads made easy with operational semantics";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "operational-class" = callPackage
    ({ mkDerivation, base, operational, transformers }:
     mkDerivation {
       pname = "operational-class";
       version = "0.3.0.0";
       sha256 = "02z766b5a6fa7dgmw3qa1xryijf2im9n79gnjq0m5pd2hv5vja4b";
       libraryHaskellDepends = [ base operational transformers ];
       homepage = "https://github.com/srijs/haskell-operational-class";
       description = "MonadProgram typeclass for the operational package";
       license = stdenv.lib.licenses.mit;
     }) {};
  "opml-conduit" = callPackage
    ({ mkDerivation, base, bytestring, case-insensitive, conduit
     , conduit-combinators, conduit-parse, containers, data-default
     , exceptions, foldl, hlint, lens-simple, mono-traversable
     , monoid-subclasses, mtl, parsers, QuickCheck, quickcheck-instances
     , resourcet, semigroups, tasty, tasty-hunit, tasty-quickcheck, text
     , time, timerep, uri-bytestring, xml-conduit, xml-conduit-parse
     , xml-types
     }:
     mkDerivation {
       pname = "opml-conduit";
       version = "0.4.0.1";
       sha256 = "0g59s8aw6ks7igwqzgs655bhwxzdqpm3i07b3b6bdn7irmwd67kb";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base case-insensitive conduit conduit-parse containers exceptions
         foldl lens-simple mono-traversable monoid-subclasses parsers
         semigroups text time timerep uri-bytestring xml-conduit
         xml-conduit-parse xml-types
       ];
       testHaskellDepends = [
         base bytestring conduit conduit-combinators conduit-parse
         containers data-default exceptions hlint lens-simple
         mono-traversable mtl parsers QuickCheck quickcheck-instances
         resourcet semigroups tasty tasty-hunit tasty-quickcheck text time
         uri-bytestring xml-conduit-parse
       ];
       homepage = "https://github.com/k0ral/opml-conduit";
       description = "Streaming parser/renderer for the OPML 2.0 format.";
       license = "unknown";
     }) {};
  "optional-args" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "optional-args";
       version = "1.0.0";
       sha256 = "0j49cp5y7gp9acvhw315lq92mgr35fwaw90vpxy0n9g541ls350z";
       libraryHaskellDepends = [ base ];
       description = "Optional function arguments";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "options" = callPackage
    ({ mkDerivation, base, chell, chell-quickcheck, containers
     , monads-tf, transformers
     }:
     mkDerivation {
       pname = "options";
       version = "1.2.1.1";
       sha256 = "0qjs0v1ny52w51n5582d4z8wy9h6n0zw1xb5dh686ff5wadflgi8";
       libraryHaskellDepends = [ base containers monads-tf transformers ];
       testHaskellDepends = [
         base chell chell-quickcheck containers monads-tf transformers
       ];
       doCheck = false;
       homepage = "https://john-millikin.com/software/haskell-options/";
       description = "A powerful and easy-to-use command-line option parser";
       license = stdenv.lib.licenses.mit;
     }) {};
  "optparse-applicative" = callPackage
    ({ mkDerivation, ansi-wl-pprint, base, process, transformers
     , transformers-compat
     }:
     mkDerivation {
       pname = "optparse-applicative";
       version = "0.12.1.0";
       sha256 = "1m8k4c04sg8xsx3fkv3krrfpjmphj01rhkpq0axl3s8p5innvd0q";
       libraryHaskellDepends = [
         ansi-wl-pprint base process transformers transformers-compat
       ];
       homepage = "https://github.com/pcapriotti/optparse-applicative";
       description = "Utilities and combinators for parsing command line options";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "optparse-simple" = callPackage
    ({ mkDerivation, base, either, gitrev, optparse-applicative
     , template-haskell, transformers
     }:
     mkDerivation {
       pname = "optparse-simple";
       version = "0.0.3";
       sha256 = "0zlcvxhx98k1akbv5fzsvwcrmb1rxsmmyaiwkhfrp5dxq6kg0is5";
       libraryHaskellDepends = [
         base either gitrev optparse-applicative template-haskell
         transformers
       ];
       description = "Simple interface to optparse-applicative";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "osdkeys" = callPackage
    ({ mkDerivation, base, bytestring, conduit, conduit-extra
     , containers, libnotify, process, resourcet, time, transformers
     }:
     mkDerivation {
       pname = "osdkeys";
       version = "0.0";
       sha256 = "18pc2r5acb3b6dr7niib4fn8x2la6y3f5zlj3ibrxhl5c1q35j6y";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring conduit conduit-extra containers libnotify
         resourcet time transformers
       ];
       executableHaskellDepends = [ base process ];
       description = "Show keys pressed with an on-screen display (Linux only)";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "package-description-remote" = callPackage
    ({ mkDerivation, base, bytestring, Cabal, lens, lens-aeson, wreq }:
     mkDerivation {
       pname = "package-description-remote";
       version = "0.2.0.0";
       sha256 = "0i47yvjcfc6fyxvz39bambvfsnpix5r25cbm12b4sp968qinv4sa";
       libraryHaskellDepends = [
         base bytestring Cabal lens lens-aeson wreq
       ];
       testHaskellDepends = [ base ];
       homepage = "http://github.com/yamadapc/stack-run-auto/package-description-remote";
       description = "Fetches a 'GenericPackageDescription' from Hackage";
       license = stdenv.lib.licenses.mit;
     }) {};
  "pager" = callPackage
    ({ mkDerivation, base, bytestring, conduit, conduit-extra
     , directory, process, resourcet, safe, terminfo, text, transformers
     , unix
     }:
     mkDerivation {
       pname = "pager";
       version = "0.1.1.0";
       sha256 = "1wzfsindjxx61nca36hhldy0y33pgagg506ls9ldvrkvl4n4y7iy";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base bytestring conduit conduit-extra directory process resourcet
         safe terminfo text transformers unix
       ];
       executableHaskellDepends = [ base bytestring conduit-extra text ];
       homepage = "https://github.com/pharpend/pager";
       description = "Open up a pager, like 'less' or 'more'";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "pagerduty" = callPackage
    ({ mkDerivation, aeson, base, bifunctors, bytestring
     , bytestring-conversion, conduit, data-default-class, exceptions
     , generics-sop, http-client, http-types, lens, lens-aeson, mmorph
     , monad-control, mtl, template-haskell, text, time
     , time-locale-compat, transformers, transformers-base
     , transformers-compat, unordered-containers
     }:
     mkDerivation {
       pname = "pagerduty";
       version = "0.0.6";
       sha256 = "1vs2sc2zxvbzdxyhs4q4zbgxk64b73z27rcr2l568ldg6mran02f";
       libraryHaskellDepends = [
         aeson base bifunctors bytestring bytestring-conversion conduit
         data-default-class exceptions generics-sop http-client http-types
         lens lens-aeson mmorph monad-control mtl template-haskell text time
         time-locale-compat transformers transformers-base
         transformers-compat unordered-containers
       ];
       homepage = "http://github.com/brendanhay/pagerduty";
       description = "Client library for PagerDuty Integration and REST APIs";
       license = "unknown";
     }) {};
  "palette" = callPackage
    ({ mkDerivation, array, base, colour, containers }:
     mkDerivation {
       pname = "palette";
       version = "0.1.0.3";
       sha256 = "18fyvry24r9lwc3qrhjngnm3b31ddlmrzrscsdndhm5g8lr72npp";
       libraryHaskellDepends = [ array base colour containers ];
       homepage = "http://projects.haskell.org/diagrams";
       description = "Utilities for choosing and creating color schemes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pandoc" = callPackage
    ({ mkDerivation, aeson, ansi-terminal, array, base
     , base64-bytestring, binary, blaze-html, blaze-markup, bytestring
     , cmark, containers, data-default, deepseq, Diff, directory
     , executable-path, extensible-exceptions, filemanip, filepath
     , ghc-prim, haddock-library, highlighting-kate, hslua, HTTP
     , http-client, http-client-tls, http-types, HUnit, JuicyPixels, mtl
     , network, network-uri, old-time, pandoc-types, parsec, process
     , QuickCheck, random, scientific, SHA, syb, tagsoup, temporary
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , texmath, text, time, unordered-containers, vector, xml, yaml
     , zip-archive, zlib
     }:
     mkDerivation {
       pname = "pandoc";
       version = "1.16.0.2";
       sha256 = "0j7kh05b4xxkci5sizm7xaqah8y5ay2i387y6qci2jjpyhp2dwzm";
       configureFlags = [ "-fhttps" "-f-old-locale" ];
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson array base base64-bytestring binary blaze-html blaze-markup
         bytestring cmark containers data-default deepseq directory
         extensible-exceptions filemanip filepath ghc-prim haddock-library
         highlighting-kate hslua HTTP http-client http-client-tls http-types
         JuicyPixels mtl network network-uri old-time pandoc-types parsec
         process random scientific SHA syb tagsoup temporary texmath text
         time unordered-containers vector xml yaml zip-archive zlib
       ];
       executableHaskellDepends = [
         aeson base bytestring containers directory extensible-exceptions
         filepath highlighting-kate HTTP network network-uri pandoc-types
         text yaml
       ];
       testHaskellDepends = [
         ansi-terminal base bytestring containers Diff directory
         executable-path filepath highlighting-kate HUnit pandoc-types
         process QuickCheck syb test-framework test-framework-hunit
         test-framework-quickcheck2 text zip-archive
       ];
       homepage = "http://pandoc.org";
       description = "Conversion between markup formats";
       license = "GPL";
     }) {};
  "pandoc-citeproc" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, attoparsec, base, bytestring
     , Cabal, containers, data-default, directory, filepath, hs-bibutils
     , mtl, old-locale, pandoc, pandoc-types, parsec, process, rfc5051
     , setenv, split, syb, tagsoup, temporary, text, time
     , unordered-containers, vector, xml-conduit, yaml
     }:
     mkDerivation {
       pname = "pandoc-citeproc";
       version = "0.9";
       sha256 = "1gbzi0sh6dag06zq4511jvf2jhvn7i3xjjw4hqwgkjjzgfi0m25f";
       revision = "1";
       editedCabalFile = "1i9d6gsfqb4mzgspk3xbs4xi8gnmzccxc89y8yn9j31g0md7dmd0";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       setupHaskellDepends = [ base Cabal directory ];
       libraryHaskellDepends = [
         aeson base bytestring containers data-default directory filepath
         hs-bibutils mtl old-locale pandoc pandoc-types parsec rfc5051
         setenv split syb tagsoup text time unordered-containers vector
         xml-conduit yaml
       ];
       executableHaskellDepends = [
         aeson aeson-pretty attoparsec base bytestring containers directory
         filepath pandoc pandoc-types process syb temporary text vector yaml
       ];
       testHaskellDepends = [
         aeson base bytestring directory filepath pandoc pandoc-types
         process temporary text yaml
       ];
       doCheck = false;
       homepage = "https://github.com/jgm/pandoc-citeproc";
       description = "Supports using pandoc with citeproc";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pandoc-types" = callPackage
    ({ mkDerivation, aeson, base, bytestring, containers, deepseq
     , ghc-prim, syb
     }:
     mkDerivation {
       pname = "pandoc-types";
       version = "1.16.1";
       sha256 = "17hpp0ln5x2m1r053h1jplmv8di5fnk8ifb0f8zwlwkhglam8q44";
       libraryHaskellDepends = [
         aeson base bytestring containers deepseq ghc-prim syb
       ];
       homepage = "http://johnmacfarlane.net/pandoc";
       description = "Types for representing a structured document";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pango" = callPackage
    ({ mkDerivation, array, base, cairo, containers, directory, glib
     , gtk2hs-buildtools, mtl, pango, pretty, process, text
     }:
     mkDerivation {
       pname = "pango";
       version = "0.13.1.1";
       sha256 = "1bb5a6mb8w5c2p0a5ljnpjzxlpsc0vhhcndwdinwnc1fzqwz68iw";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         array base cairo containers directory glib mtl pretty process text
       ];
       libraryPkgconfigDepends = [ pango ];
       libraryToolDepends = [ gtk2hs-buildtools ];
       homepage = "http://projects.haskell.org/gtk2hs/";
       description = "Binding to the Pango text rendering engine";
       license = stdenv.lib.licenses.lgpl21;
     }) {inherit (pkgs.gnome2) pango;};
  "parallel" = callPackage
    ({ mkDerivation, array, base, containers, deepseq }:
     mkDerivation {
       pname = "parallel";
       version = "3.2.1.0";
       sha256 = "09l52k1gsn667lmv0pp052cbwkzkbhfivp51f2xkrlfzf6xwvqsd";
       revision = "1";
       editedCabalFile = "03s4bh0ib18y684l6rm3rg6asd2a69wva0wg9404hqfglndg5m58";
       libraryHaskellDepends = [ array base containers deepseq ];
       description = "Parallel programming library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "parallel-io" = callPackage
    ({ mkDerivation, base, containers, extensible-exceptions, random }:
     mkDerivation {
       pname = "parallel-io";
       version = "0.3.3";
       sha256 = "0i86x3bf8pjlg6mdg1zg5lcrjpg75pbqs2mrgrbp4z4bkcmw051s";
       revision = "1";
       editedCabalFile = "1vlb2x1ghih4l64031rmh7h643c3knh5r5mwilf7g8izb58ypvkm";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base containers extensible-exceptions random
       ];
       homepage = "http://batterseapower.github.com/parallel-io";
       description = "Combinators for executing IO actions in parallel on a thread pool";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "parseargs" = callPackage
    ({ mkDerivation, base, containers }:
     mkDerivation {
       pname = "parseargs";
       version = "0.2.0.4";
       sha256 = "14503b71l54jhkkijshkgfld9amsp5ws0cnxsnmy1gcdr221a93r";
       revision = "1";
       editedCabalFile = "1azsd882gqm7qi1jgi1p9i1m06wx55ra7baqm3gl406sk2ww0zbs";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base containers ];
       executableHaskellDepends = [ base ];
       homepage = "http://github.com/BartMassey/parseargs";
       description = "Full-featured command-line argument parsing library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "parsec" = callPackage
    ({ mkDerivation, base, bytestring, mtl, text }:
     mkDerivation {
       pname = "parsec";
       version = "3.1.9";
       sha256 = "1ja20cmj6v336jy87c6h3jzjp00sdbakwbdwp11iln499k913xvi";
       libraryHaskellDepends = [ base bytestring mtl text ];
       doCheck = false;
       homepage = "https://github.com/aslatter/parsec";
       description = "Monadic parser combinators";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "parseerror-eq" = callPackage
    ({ mkDerivation, base, hspec, parsec }:
     mkDerivation {
       pname = "parseerror-eq";
       version = "0.1.0.1";
       sha256 = "1w5hn50gwyq2qcax869nplmhrclpsxfy0ckij6ydlhmq22zh0l03";
       libraryHaskellDepends = [ base parsec ];
       testHaskellDepends = [ base hspec parsec ];
       homepage = "https://github.com/stackbuilders/parseerror-eq";
       description = "Adds and Eq instance for Parsec's ParseError if needed";
       license = stdenv.lib.licenses.mit;
     }) {};
  "parsers" = callPackage
    ({ mkDerivation, attoparsec, base, base-orphans, bytestring
     , charset, containers, directory, doctest, filepath, parsec
     , QuickCheck, quickcheck-instances, scientific, text, transformers
     , unordered-containers
     }:
     mkDerivation {
       pname = "parsers";
       version = "0.12.3";
       sha256 = "18wzmp8y3py4qa8hdsxqm0jfzmwy744dw7xa48r5s8ynhpimi462";
       revision = "1";
       editedCabalFile = "0ps0fif8maflvbxm16z0fxyq24f8rkag3dzhk1df8h9mdif2kfm3";
       libraryHaskellDepends = [
         attoparsec base base-orphans charset containers parsec scientific
         text transformers unordered-containers
       ];
       testHaskellDepends = [
         attoparsec base bytestring containers directory doctest filepath
         parsec QuickCheck quickcheck-instances
       ];
       doCheck = false;
       homepage = "http://github.com/ekmett/parsers/";
       description = "Parsing combinators";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "partial-handler" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "partial-handler";
       version = "1.0.0.0";
       sha256 = "1fmfiw38v77anh20xh5zzqxm2dcryyyismsagn09sc27jdgnnrzl";
       revision = "1";
       editedCabalFile = "15x5gzch1h3zkrrhbyhhf0vnzxnr5wqd3zabaip6ifinn344441f";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/nikita-volkov/partial-handler";
       description = "A composable exception handler";
       license = stdenv.lib.licenses.mit;
     }) {};
  "partial-isomorphisms" = callPackage
    ({ mkDerivation, base, template-haskell }:
     mkDerivation {
       pname = "partial-isomorphisms";
       version = "0.2";
       sha256 = "0wmlx1dp7i9rp3s5028gvqa7z0g1dkzlyd134kh04s1lx2hb94px";
       revision = "1";
       editedCabalFile = "1jawkq0bvzwln33fgwm56az923phmqa022kr5drcspgqnkj0m63a";
       libraryHaskellDepends = [ base template-haskell ];
       homepage = "http://www.informatik.uni-marburg.de/~rendel/unparse";
       description = "Partial isomorphisms";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "patches-vector" = callPackage
    ({ mkDerivation, base, criterion, doctest, edit-distance-vector
     , hspec, microlens, QuickCheck, vector
     }:
     mkDerivation {
       pname = "patches-vector";
       version = "0.1.5.1";
       sha256 = "1c8dra4ndvn49yc473r48dalq2rilrkkm924ml84snjdrgvmpqwx";
       libraryHaskellDepends = [
         base edit-distance-vector microlens vector
       ];
       testHaskellDepends = [
         base criterion doctest hspec QuickCheck vector
       ];
       homepage = "https://github.com/liamoc/patches-vector";
       description = "Patches (diffs) on vectors: composable, mergeable, and invertible";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "path" = callPackage
    ({ mkDerivation, base, deepseq, exceptions, filepath, hspec, HUnit
     , mtl, template-haskell
     }:
     mkDerivation {
       pname = "path";
       version = "0.5.7";
       sha256 = "1aq5xc5h2r1v7bhswpwc13c99ih13qll6vc8qr767jzddjy1lqsv";
       libraryHaskellDepends = [
         base deepseq exceptions filepath template-haskell
       ];
       testHaskellDepends = [ base hspec HUnit mtl ];
       description = "Support for well-typed paths";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "path-extra" = callPackage
    ({ mkDerivation, base, exceptions, path }:
     mkDerivation {
       pname = "path-extra";
       version = "0.0.3";
       sha256 = "0ncbcc16b1xg5hc8mm3czabn7crz7d41jv1k5lbcvbisgarkn12m";
       libraryHaskellDepends = [ base exceptions path ];
       description = "Chris Done's path library, enriched with URL-related goodies";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "path-io" = callPackage
    ({ mkDerivation, base, directory, exceptions, filepath, path
     , temporary, time, transformers
     }:
     mkDerivation {
       pname = "path-io";
       version = "0.2.0";
       sha256 = "0dg7b51jqd4qyr90d74q86czyyr9wqqagbbyksnz50vhzszcswmv";
       libraryHaskellDepends = [
         base directory exceptions filepath path temporary time transformers
       ];
       homepage = "https://github.com/mrkkrp/path-io";
       description = "Interface to ‘directory’ package for users of ‘path’";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "path-pieces" = callPackage
    ({ mkDerivation, base, hspec, HUnit, QuickCheck, text, time }:
     mkDerivation {
       pname = "path-pieces";
       version = "0.2.1";
       sha256 = "0vx3sivcsld76058925hym2j6hm3g71f0qjr7v59f1g2afgx82q8";
       revision = "1";
       editedCabalFile = "0p7wsphh513s8l5d62lzgbhk2l1h6kj5y7bc27qqjsry9g8ah4y7";
       libraryHaskellDepends = [ base text time ];
       testHaskellDepends = [ base hspec HUnit QuickCheck text ];
       description = "Components of paths";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pathwalk" = callPackage
    ({ mkDerivation, base, directory, filepath, transformers }:
     mkDerivation {
       pname = "pathwalk";
       version = "0.3.1.2";
       sha256 = "148fapj00f59aa2igfq6hwrdcwcyslvrskmfvdia0crid9jd1q3n";
       libraryHaskellDepends = [ base directory filepath transformers ];
       testHaskellDepends = [ base ];
       homepage = "https://github.com/Xe/pathwalk";
       description = "Path walking utilities for Haskell programs";
       license = stdenv.lib.licenses.mit;
     }) {};
  "patience" = callPackage
    ({ mkDerivation, base, containers }:
     mkDerivation {
       pname = "patience";
       version = "0.1.1";
       sha256 = "0qyv20gqy9pb1acy700ahv70lc6vprcwb26cc7fcpcs4scsc7irm";
       libraryHaskellDepends = [ base containers ];
       description = "Patience diff and longest increasing subsequence";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pattern-arrows" = callPackage
    ({ mkDerivation, base, mtl }:
     mkDerivation {
       pname = "pattern-arrows";
       version = "0.0.2";
       sha256 = "13q7bj19hd60rnjfc05wxlyck8llxy11z3mns8kxg197wxrdkhkg";
       libraryHaskellDepends = [ base mtl ];
       homepage = "http://blog.functorial.com/posts/2013-10-27-Pretty-Printing-Arrows.html";
       description = "Arrows for Pretty Printing";
       license = stdenv.lib.licenses.mit;
     }) {};
  "pcap" = callPackage
    ({ mkDerivation, base, bytestring, network, time }:
     mkDerivation {
       pname = "pcap";
       version = "0.4.5.2";
       sha256 = "0pydw62qqw61sxfd8x9vvwgpgl3zp6mqv8rm4c825ymzyipjxsg7";
       libraryHaskellDepends = [ base bytestring network time ];
       homepage = "https://github.com/bos/pcap";
       description = "A system-independent interface for user-level packet capture";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pcre-heavy" = callPackage
    ({ mkDerivation, base, base-compat, bytestring, doctest, Glob
     , pcre-light, semigroups, string-conversions, template-haskell
     }:
     mkDerivation {
       pname = "pcre-heavy";
       version = "1.0.0.1";
       sha256 = "1v5h3b1shd3zv2z510lijii0rh1jnk1ibh8zqwyhgn1b5jkqcgm8";
       libraryHaskellDepends = [
         base base-compat bytestring pcre-light semigroups
         string-conversions template-haskell
       ];
       testHaskellDepends = [ base doctest Glob ];
       homepage = "https://github.com/myfreeweb/pcre-heavy";
       description = "A regexp library on top of pcre-light you can actually use";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "pcre-light" = callPackage
    ({ mkDerivation, base, bytestring, pcre }:
     mkDerivation {
       pname = "pcre-light";
       version = "0.4.0.4";
       sha256 = "0xcyi1fivwg7a92mch5bcqzmrfxzqj42rmb3m8kgs61x4qwpxj82";
       libraryHaskellDepends = [ base bytestring ];
       libraryPkgconfigDepends = [ pcre ];
       homepage = "https://github.com/Daniel-Diaz/pcre-light";
       description = "Portable regex library for Perl 5 compatible regular expressions";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) pcre;};
  "pcre-utils" = callPackage
    ({ mkDerivation, array, attoparsec, base, bytestring, HUnit, mtl
     , regex-pcre-builtin, vector
     }:
     mkDerivation {
       pname = "pcre-utils";
       version = "0.1.7";
       sha256 = "1mif1qk1p2n373pv9nlgyssdkm2zm6c5isg17x6zp6akm1hmisr7";
       revision = "1";
       editedCabalFile = "17rjqxcvklma9d7yc69fz8gajx9zmn2863lpx2vqnqq3avzhc7vx";
       libraryHaskellDepends = [
         array attoparsec base bytestring mtl regex-pcre-builtin vector
       ];
       testHaskellDepends = [ base bytestring HUnit regex-pcre-builtin ];
       homepage = "https://github.com/bartavelle/pcre-utils";
       description = "Perl-like substitute and split for PCRE regexps";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pdf-toolbox-content" = callPackage
    ({ mkDerivation, attoparsec, base, base16-bytestring, bytestring
     , containers, io-streams, pdf-toolbox-core, text
     }:
     mkDerivation {
       pname = "pdf-toolbox-content";
       version = "0.0.5.1";
       sha256 = "1244r2ij46gs10zxc3mlf2693nnb1jpyminqkpzh71hp5qilw40w";
       libraryHaskellDepends = [
         attoparsec base base16-bytestring bytestring containers io-streams
         pdf-toolbox-core text
       ];
       homepage = "https://github.com/Yuras/pdf-toolbox";
       description = "A collection of tools for processing PDF files";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pdf-toolbox-core" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, containers, errors
     , io-streams, scientific, transformers, zlib-bindings
     }:
     mkDerivation {
       pname = "pdf-toolbox-core";
       version = "0.0.4.1";
       sha256 = "10d9fchmiwdbkbdxqmn5spim4pywc1qm9q9c0dhmsssryng99qyc";
       libraryHaskellDepends = [
         attoparsec base bytestring containers errors io-streams scientific
         transformers zlib-bindings
       ];
       homepage = "https://github.com/Yuras/pdf-toolbox";
       description = "A collection of tools for processing PDF files";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pdf-toolbox-document" = callPackage
    ({ mkDerivation, base, bytestring, cipher-aes, cipher-rc4
     , containers, crypto-api, cryptohash, io-streams
     , pdf-toolbox-content, pdf-toolbox-core, text, transformers
     }:
     mkDerivation {
       pname = "pdf-toolbox-document";
       version = "0.0.7.1";
       sha256 = "1qghjsaya0wnl3vil8gv6a3crd94mmvl3y73k2cwzhc5madkfz9z";
       libraryHaskellDepends = [
         base bytestring cipher-aes cipher-rc4 containers crypto-api
         cryptohash io-streams pdf-toolbox-content pdf-toolbox-core text
         transformers
       ];
       homepage = "https://github.com/Yuras/pdf-toolbox";
       description = "A collection of tools for processing PDF files";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pdfinfo" = callPackage
    ({ mkDerivation, base, mtl, old-locale, process-extras, text, time
     , time-locale-compat
     }:
     mkDerivation {
       pname = "pdfinfo";
       version = "1.5.4";
       sha256 = "04894cwvcn910j2b0j95dc6i9v6xriqa0v97z3vyi9dhi9yiysls";
       libraryHaskellDepends = [
         base mtl old-locale process-extras text time time-locale-compat
       ];
       homepage = "https://github.com/chrisdone/pdfinfo";
       description = "Wrapper around the pdfinfo command";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pem" = callPackage
    ({ mkDerivation, base, base64-bytestring, bytestring, HUnit, mtl
     , QuickCheck, test-framework, test-framework-hunit
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "pem";
       version = "0.2.2";
       sha256 = "162sk5sg22w21wqz5qv8kx6ibxp99v5p20g3nknhm1kddk3hha1p";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base base64-bytestring bytestring mtl ];
       testHaskellDepends = [
         base bytestring HUnit QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2
       ];
       homepage = "http://github.com/vincenthz/hs-pem";
       description = "Privacy Enhanced Mail (PEM) format reader and writer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "persistent" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, base64-bytestring
     , blaze-html, blaze-markup, bytestring, conduit, containers
     , exceptions, fast-logger, hspec, http-api-data, lifted-base
     , monad-control, monad-logger, mtl, old-locale, path-pieces
     , resource-pool, resourcet, scientific, silently, tagged
     , template-haskell, text, time, transformers, transformers-base
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "persistent";
       version = "2.2.4.1";
       sha256 = "1nshklr2b5plaih17nvz3hqcy7pg0zgx55jqvdgpykc5abcvswql";
       libraryHaskellDepends = [
         aeson attoparsec base base64-bytestring blaze-html blaze-markup
         bytestring conduit containers exceptions fast-logger http-api-data
         lifted-base monad-control monad-logger mtl old-locale path-pieces
         resource-pool resourcet scientific silently tagged template-haskell
         text time transformers transformers-base unordered-containers
         vector
       ];
       testHaskellDepends = [
         aeson attoparsec base base64-bytestring blaze-html bytestring
         conduit containers fast-logger hspec http-api-data lifted-base
         monad-control monad-logger mtl old-locale path-pieces resource-pool
         resourcet scientific tagged template-haskell text time transformers
         unordered-containers vector
       ];
       homepage = "http://www.yesodweb.com/book/persistent";
       description = "Type-safe, multi-backend data serialization";
       license = stdenv.lib.licenses.mit;
     }) {};
  "persistent-mongoDB" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, bson, bytestring, cereal
     , conduit, containers, http-api-data, monad-control, mongoDB
     , network, path-pieces, persistent, resource-pool, resourcet, text
     , time, transformers
     }:
     mkDerivation {
       pname = "persistent-mongoDB";
       version = "2.1.4";
       sha256 = "18k66zr61la189v239sdgw0078xxjljwd75xhrd04s3bdxndif86";
       libraryHaskellDepends = [
         aeson attoparsec base bson bytestring cereal conduit containers
         http-api-data monad-control mongoDB network path-pieces persistent
         resource-pool resourcet text time transformers
       ];
       homepage = "http://www.yesodweb.com/book/persistent";
       description = "Backend for the persistent library using mongoDB";
       license = stdenv.lib.licenses.mit;
     }) {};
  "persistent-mysql" = callPackage
    ({ mkDerivation, aeson, base, blaze-builder, bytestring, conduit
     , containers, monad-control, monad-logger, mysql, mysql-simple
     , persistent, resourcet, text, transformers
     }:
     mkDerivation {
       pname = "persistent-mysql";
       version = "2.3.0.2";
       sha256 = "0czhqj2dmg6m7n7ma7bfwivy8h2h8fj0jdy850jig5yz0zp2273y";
       libraryHaskellDepends = [
         aeson base blaze-builder bytestring conduit containers
         monad-control monad-logger mysql mysql-simple persistent resourcet
         text transformers
       ];
       homepage = "http://www.yesodweb.com/book/persistent";
       description = "Backend for the persistent library using MySQL database server";
       license = stdenv.lib.licenses.mit;
     }) {};
  "persistent-postgresql" = callPackage
    ({ mkDerivation, aeson, base, blaze-builder, bytestring, conduit
     , containers, monad-control, monad-logger, persistent
     , postgresql-libpq, postgresql-simple, resourcet, text, time
     , transformers
     }:
     mkDerivation {
       pname = "persistent-postgresql";
       version = "2.2.2";
       sha256 = "1kbifv14zhxkjz4r4lwiwgrq6ska6vizp4cr2kdag3lz6i115hvy";
       libraryHaskellDepends = [
         aeson base blaze-builder bytestring conduit containers
         monad-control monad-logger persistent postgresql-libpq
         postgresql-simple resourcet text time transformers
       ];
       homepage = "http://www.yesodweb.com/book/persistent";
       description = "Backend for the persistent library using postgresql";
       license = stdenv.lib.licenses.mit;
     }) {};
  "persistent-refs" = callPackage
    ({ mkDerivation, base, containers, mtl, ref-fd, transformers }:
     mkDerivation {
       pname = "persistent-refs";
       version = "0.4";
       sha256 = "1lyhz0cywls91a6crjq5v8x4h4740s73h3blvbkr6fg26kh11cs6";
       libraryHaskellDepends = [
         base containers mtl ref-fd transformers
       ];
       homepage = "https://github.com/acfoltzer/persistent-refs";
       description = "Haskell references backed by an IntMap for persistence and reversibility";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "persistent-sqlite" = callPackage
    ({ mkDerivation, aeson, base, bytestring, conduit, containers
     , hspec, monad-control, monad-logger, old-locale, persistent
     , persistent-template, resourcet, text, time, transformers
     }:
     mkDerivation {
       pname = "persistent-sqlite";
       version = "2.2.1";
       sha256 = "0ppwzzvwy0d506qsaqyrnan0n8xy7d3dyhkf26wj1b95pf011ixs";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base bytestring conduit containers monad-control monad-logger
         old-locale persistent resourcet text time transformers
       ];
       executableHaskellDepends = [ base monad-logger ];
       testHaskellDepends = [
         base hspec persistent persistent-template time transformers
       ];
       homepage = "http://www.yesodweb.com/book/persistent";
       description = "Backend for the persistent library using sqlite3";
       license = stdenv.lib.licenses.mit;
     }) {};
  "persistent-template" = callPackage
    ({ mkDerivation, aeson, aeson-compat, base, bytestring, containers
     , ghc-prim, hspec, http-api-data, monad-control, monad-logger
     , path-pieces, persistent, QuickCheck, tagged, template-haskell
     , text, transformers, unordered-containers
     }:
     mkDerivation {
       pname = "persistent-template";
       version = "2.1.6";
       sha256 = "0lv6qpxbyv4331ip6mllfqyw4qcg8rlm0blxqq9fij5yhah8k2l1";
       libraryHaskellDepends = [
         aeson aeson-compat base bytestring containers ghc-prim
         http-api-data monad-control monad-logger path-pieces persistent
         tagged template-haskell text transformers unordered-containers
       ];
       testHaskellDepends = [
         aeson base bytestring hspec persistent QuickCheck text transformers
       ];
       homepage = "http://www.yesodweb.com/book/persistent";
       description = "Type-safe, non-relational, multi-backend persistence";
       license = stdenv.lib.licenses.mit;
     }) {};
  "pgp-wordlist" = callPackage
    ({ mkDerivation, base, bytestring, containers, HUnit, tasty
     , tasty-hunit, tasty-quickcheck, text, vector
     }:
     mkDerivation {
       pname = "pgp-wordlist";
       version = "0.1.0.1";
       sha256 = "123d8fh1bd78iq4n00xc873zsnizczzdl372vkl87z4lpivfkpd3";
       libraryHaskellDepends = [ base bytestring containers text vector ];
       testHaskellDepends = [
         base bytestring HUnit tasty tasty-hunit tasty-quickcheck text
       ];
       homepage = "https://github.com/quchen/pgp-wordlist";
       description = "Translate between binary data and a human-readable collection of words";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "phantom-state" = callPackage
    ({ mkDerivation, base, criterion, transformers, vector }:
     mkDerivation {
       pname = "phantom-state";
       version = "0.2.0.2";
       sha256 = "04fg0j79nkajsiw8n2yy62mwiw1r4fjy2jln5ng07h64pwyncdnm";
       libraryHaskellDepends = [ base transformers ];
       benchmarkHaskellDepends = [ base criterion transformers vector ];
       description = "Phantom State Transformer. Like State Monad, but without values.";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "phash" = callPackage
    ({ mkDerivation, base, doctest, HUnit, pHash, smallcheck, tasty
     , tasty-hunit, tasty-smallcheck
     }:
     mkDerivation {
       pname = "phash";
       version = "0.0.5";
       sha256 = "1bndzncy52swvfk2p1imvxlbiv01qx9qi5mb68jmc22b1d99s6bv";
       libraryHaskellDepends = [ base ];
       librarySystemDepends = [ pHash ];
       testHaskellDepends = [
         base doctest HUnit smallcheck tasty tasty-hunit tasty-smallcheck
       ];
       testSystemDepends = [ pHash ];
       homepage = "http://github.com/michaelxavier/phash";
       description = "Haskell bindings to pHash, the open source perceptual hash library";
       license = stdenv.lib.licenses.gpl3;
     }) {pHash = null;};
  "picoparsec" = callPackage
    ({ mkDerivation, array, attoparsec, base, bytestring
     , case-insensitive, containers, criterion, deepseq, directory
     , filepath, ghc-prim, hashable, http-types, monoid-subclasses
     , parsec, QuickCheck, quickcheck-instances, quickcheck-unicode
     , scientific, tasty, tasty-quickcheck, text, unordered-containers
     , vector
     }:
     mkDerivation {
       pname = "picoparsec";
       version = "0.1.2.3";
       sha256 = "0l4i5s0yh4jcagcywcx2bwpvky6xy4hisbvwbghjvxpsirkyviwf";
       libraryHaskellDepends = [
         array base bytestring containers deepseq monoid-subclasses
         scientific text
       ];
       testHaskellDepends = [
         array base bytestring deepseq monoid-subclasses QuickCheck
         quickcheck-instances quickcheck-unicode scientific tasty
         tasty-quickcheck text vector
       ];
       benchmarkHaskellDepends = [
         array attoparsec base bytestring case-insensitive criterion deepseq
         directory filepath ghc-prim hashable http-types monoid-subclasses
         parsec scientific text unordered-containers vector
       ];
       homepage = "https://bitbucket.org/blamario/picoparsec";
       description = "Fast combinator parsing for bytestrings and text";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pinch" = callPackage
    ({ mkDerivation, array, base, bytestring, containers, criterion
     , deepseq, ghc-prim, hashable, hspec, hspec-discover, QuickCheck
     , text, unordered-containers, vector
     }:
     mkDerivation {
       pname = "pinch";
       version = "0.2.0.0";
       sha256 = "1an5glbirh442wa5a5i0192mv6w6azdi6i6lqcwhbyzidm65jdvg";
       libraryHaskellDepends = [
         array base bytestring containers deepseq ghc-prim hashable text
         unordered-containers vector
       ];
       testHaskellDepends = [
         base bytestring containers hspec hspec-discover QuickCheck text
         unordered-containers vector
       ];
       benchmarkHaskellDepends = [
         base bytestring criterion deepseq QuickCheck text
       ];
       homepage = "https://github.com/abhinav/pinch";
       description = "An alternative implementation of Thrift for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pinchot" = callPackage
    ({ mkDerivation, base, containers, Earley, lens, template-haskell
     , transformers
     }:
     mkDerivation {
       pname = "pinchot";
       version = "0.6.0.0";
       sha256 = "193m5mz34lvhsq7zxpk1hyyixmqa4sqssi3r57x2zgg3mhzdmjjk";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base containers Earley lens template-haskell transformers
       ];
       homepage = "http://www.github.com/massysett/pinchot";
       description = "Build parsers and ASTs for context-free grammars";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pipes" = callPackage
    ({ mkDerivation, base, criterion, deepseq, mmorph, mtl, QuickCheck
     , test-framework, test-framework-quickcheck2, transformers
     }:
     mkDerivation {
       pname = "pipes";
       version = "4.1.8";
       sha256 = "0d6fdq95rmaskvqpz4rkn815vy0r32ddhhc857w6qvdxymcgcp2s";
       libraryHaskellDepends = [ base mmorph mtl transformers ];
       testHaskellDepends = [
         base mtl QuickCheck test-framework test-framework-quickcheck2
         transformers
       ];
       benchmarkHaskellDepends = [
         base criterion deepseq mtl transformers
       ];
       description = "Compositional pipelines";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pipes-aeson" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, bytestring, pipes
     , pipes-attoparsec, pipes-bytestring, pipes-parse, transformers
     }:
     mkDerivation {
       pname = "pipes-aeson";
       version = "0.4.1.6";
       sha256 = "1p03igvly6bbl29cflndww47sw7amx72csx3g0ffmh8jgq72i4gv";
       libraryHaskellDepends = [
         aeson attoparsec base bytestring pipes pipes-attoparsec
         pipes-bytestring pipes-parse transformers
       ];
       homepage = "https://github.com/k0001/pipes-aeson";
       description = "Encode and decode JSON streams using Aeson and Pipes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pipes-attoparsec" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, HUnit, mmorph, pipes
     , pipes-parse, tasty, tasty-hunit, text, transformers
     }:
     mkDerivation {
       pname = "pipes-attoparsec";
       version = "0.5.1.2";
       sha256 = "1qhhy86c89j6ial5y1j2lhgqx225qr33777jk8sxv021gkabsmlv";
       libraryHaskellDepends = [
         attoparsec base bytestring pipes pipes-parse text transformers
       ];
       testHaskellDepends = [
         attoparsec base HUnit mmorph pipes pipes-parse tasty tasty-hunit
         text transformers
       ];
       homepage = "https://github.com/k0001/pipes-attoparsec";
       description = "Attoparsec and Pipes integration";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pipes-bgzf" = callPackage
    ({ mkDerivation, base, bytestring, mtl, parallel, pipes
     , streaming-commons
     }:
     mkDerivation {
       pname = "pipes-bgzf";
       version = "0.2.0.1";
       sha256 = "04y0wzy8982g64xyxq6rl9xc63n0c8xl8mhyf0x4ivqxnn49iv23";
       libraryHaskellDepends = [
         base bytestring mtl parallel pipes streaming-commons
       ];
       description = "Blocked GZip";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pipes-binary" = callPackage
    ({ mkDerivation, base, binary, bytestring, ghc-prim
     , lens-family-core, pipes, pipes-bytestring, pipes-parse
     , smallcheck, tasty, tasty-hunit, tasty-smallcheck, transformers
     }:
     mkDerivation {
       pname = "pipes-binary";
       version = "0.4.1";
       sha256 = "0dyng5pvyjw7bjflzfbrkwq99qzyc4a2rh0nlidjhy95ixs7jvhv";
       libraryHaskellDepends = [
         base binary bytestring ghc-prim pipes pipes-bytestring pipes-parse
         transformers
       ];
       testHaskellDepends = [
         base binary bytestring ghc-prim lens-family-core pipes pipes-parse
         smallcheck tasty tasty-hunit tasty-smallcheck transformers
       ];
       homepage = "https://github.com/k0001/pipes-binary";
       description = "Encode and decode binary streams using the pipes and binary libraries";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pipes-bytestring" = callPackage
    ({ mkDerivation, base, bytestring, pipes, pipes-group, pipes-parse
     , transformers
     }:
     mkDerivation {
       pname = "pipes-bytestring";
       version = "2.1.1";
       sha256 = "1zn8vbsq214x1dswaz1sb7vjjvwxjy5sg8cv67cdmac0l1rw5dmz";
       libraryHaskellDepends = [
         base bytestring pipes pipes-group pipes-parse transformers
       ];
       description = "ByteString support for pipes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pipes-cacophony" = callPackage
    ({ mkDerivation, async, base, bytestring, cacophony, hlint, mtl
     , pipes, QuickCheck, tasty, tasty-quickcheck
     }:
     mkDerivation {
       pname = "pipes-cacophony";
       version = "0.1.3";
       sha256 = "12af14qzbfjanjqf76adxhcgs5hf7sfip1nrndidszmshkz9av8n";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base bytestring cacophony pipes ];
       testHaskellDepends = [
         async base bytestring cacophony hlint mtl pipes QuickCheck tasty
         tasty-quickcheck
       ];
       homepage = "https://github.com/centromere/pipes-cacophony";
       description = "Pipes for Noise-secured network connections";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "pipes-cliff" = callPackage
    ({ mkDerivation, async, base, bytestring, pipes, pipes-safe
     , process, stm
     }:
     mkDerivation {
       pname = "pipes-cliff";
       version = "0.10.0.4";
       sha256 = "0czgzmfl5rs0p63x24zr4pcl01a0wy93hx8wpin9k61yfx7bb4ix";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         async base bytestring pipes pipes-safe process stm
       ];
       homepage = "http://www.github.com/massysett/pipes-cliff";
       description = "Streaming to and from subprocesses using Pipes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pipes-concurrency" = callPackage
    ({ mkDerivation, async, base, pipes, stm }:
     mkDerivation {
       pname = "pipes-concurrency";
       version = "2.0.5";
       sha256 = "0v1bmc0mx5415vfsyb2k28jj0c8i6kc5lj4bnacvl2zn2wcgsz6s";
       libraryHaskellDepends = [ base pipes stm ];
       testHaskellDepends = [ async base pipes stm ];
       description = "Concurrency for the pipes ecosystem";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pipes-csv" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring, cassava, HUnit
     , MissingH, pipes, pipes-bytestring, test-framework
     , test-framework-hunit, unordered-containers, vector
     }:
     mkDerivation {
       pname = "pipes-csv";
       version = "1.4.3";
       sha256 = "1cv8vb5jm95h3jqm4xhndgijcivmcxdjppvcs88bpjbfspfzb1cl";
       libraryHaskellDepends = [
         base blaze-builder bytestring cassava pipes unordered-containers
         vector
       ];
       testHaskellDepends = [
         base bytestring cassava HUnit MissingH pipes pipes-bytestring
         test-framework test-framework-hunit vector
       ];
       description = "Fast, streaming csv parser";
       license = stdenv.lib.licenses.mit;
     }) {};
  "pipes-extras" = callPackage
    ({ mkDerivation, base, foldl, HUnit, pipes, test-framework
     , test-framework-hunit, transformers
     }:
     mkDerivation {
       pname = "pipes-extras";
       version = "1.0.2";
       sha256 = "1kxnyrn23xbmb6xb5j4j33pzxd7cnxdy91w57gycyx08j89nrg01";
       libraryHaskellDepends = [ base foldl pipes transformers ];
       testHaskellDepends = [
         base HUnit pipes test-framework test-framework-hunit transformers
       ];
       description = "Extra utilities for pipes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pipes-fastx" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, pipes
     , pipes-attoparsec, pipes-bytestring
     }:
     mkDerivation {
       pname = "pipes-fastx";
       version = "0.3.0.0";
       sha256 = "0xds11gfacj7m5lz6cssaj4v5z73ycrdmn57f0qxzqdsc2kln9ii";
       libraryHaskellDepends = [
         attoparsec base bytestring pipes pipes-attoparsec pipes-bytestring
       ];
       description = "Streaming parsers for Fasta and Fastq";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pipes-group" = callPackage
    ({ mkDerivation, base, doctest, free, lens-family-core, pipes
     , pipes-parse, transformers
     }:
     mkDerivation {
       pname = "pipes-group";
       version = "1.0.3";
       sha256 = "0062grzrqj35v1xn4ga04xf206h4s79mbq0zmsp4zn0hjk10rwph";
       libraryHaskellDepends = [
         base free pipes pipes-parse transformers
       ];
       testHaskellDepends = [ base doctest lens-family-core ];
       description = "Group streams into substreams";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pipes-http" = callPackage
    ({ mkDerivation, base, bytestring, http-client, http-client-tls
     , pipes
     }:
     mkDerivation {
       pname = "pipes-http";
       version = "1.0.2";
       sha256 = "0hqab1pzcj11qwvc4dznis0qsyn1zc1d0riqxy6b5k04p9i2jbzk";
       libraryHaskellDepends = [
         base bytestring http-client http-client-tls pipes
       ];
       description = "HTTP client with pipes interface";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pipes-illumina" = callPackage
    ({ mkDerivation, base, bytestring, directory, filepath, pipes
     , pipes-bgzf
     }:
     mkDerivation {
       pname = "pipes-illumina";
       version = "0.1.0.0";
       sha256 = "19s6rkrfvmni914flq37fkbfs6angzl3c40bzg0ddivn4ada7jvn";
       libraryHaskellDepends = [
         base bytestring directory filepath pipes pipes-bgzf
       ];
       homepage = "http://github.com/rcallahan/pipes-illumina";
       description = "Illumina NGS data processing";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pipes-mongodb" = callPackage
    ({ mkDerivation, base, monad-control, mongoDB, pipes, text }:
     mkDerivation {
       pname = "pipes-mongodb";
       version = "0.1.0.0";
       sha256 = "0h4334fajrza7r8jrr78nqhs522kxnbzdj0gnbp7ndvzvx5ij888";
       libraryHaskellDepends = [ base monad-control mongoDB pipes ];
       testHaskellDepends = [ base monad-control mongoDB pipes text ];
       doCheck = false;
       homepage = "http://github.com/jb55/pipes-mongodb";
       description = "Stream results from MongoDB";
       license = stdenv.lib.licenses.mit;
     }) {};
  "pipes-network" = callPackage
    ({ mkDerivation, base, bytestring, network, network-simple, pipes
     , pipes-safe, transformers
     }:
     mkDerivation {
       pname = "pipes-network";
       version = "0.6.4";
       sha256 = "1wabyv5j4q0wxiz8ry7dq3amlvfh4r0721pd2lksx7hj3a5qzm2p";
       libraryHaskellDepends = [
         base bytestring network network-simple pipes pipes-safe
         transformers
       ];
       homepage = "https://github.com/k0001/pipes-network";
       description = "Use network sockets together with the pipes library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pipes-parse" = callPackage
    ({ mkDerivation, base, pipes, transformers }:
     mkDerivation {
       pname = "pipes-parse";
       version = "3.0.4";
       sha256 = "019p1j1rc4l02zpggp7fcy2nz4fdpmzrc0ij3xisicyl3zy1a7dy";
       libraryHaskellDepends = [ base pipes transformers ];
       description = "Parsing infrastructure for the pipes ecosystem";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pipes-safe" = callPackage
    ({ mkDerivation, base, containers, exceptions, monad-control, mtl
     , pipes, transformers, transformers-base
     }:
     mkDerivation {
       pname = "pipes-safe";
       version = "2.2.3";
       sha256 = "19wr3q6skwdyd68k1r33w2mipfsgsg2982027faq7rnfw9lq2yyi";
       revision = "1";
       editedCabalFile = "0wla799cs21jkmcw69ma4yw7341irlj6yzi0gljb80gbal08fips";
       libraryHaskellDepends = [
         base containers exceptions monad-control mtl pipes transformers
         transformers-base
       ];
       description = "Safety for the pipes ecosystem";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pipes-text" = callPackage
    ({ mkDerivation, base, bytestring, pipes, pipes-bytestring
     , pipes-group, pipes-parse, pipes-safe, streaming-commons, text
     , transformers
     }:
     mkDerivation {
       pname = "pipes-text";
       version = "0.0.2.1";
       sha256 = "1qxk46mabrc49z8q764q2ly1hivnfzfhv5nahnkfhmhsml4g1djb";
       libraryHaskellDepends = [
         base bytestring pipes pipes-bytestring pipes-group pipes-parse
         pipes-safe streaming-commons text transformers
       ];
       homepage = "https://github.com/michaelt/text-pipes";
       description = "properly streaming text";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pipes-wai" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring, http-types, pipes
     , transformers, wai
     }:
     mkDerivation {
       pname = "pipes-wai";
       version = "3.2.0";
       sha256 = "0akd0n2qgv32pcq717j2xr2g29qmaz2v610ddx7vc4hc2kgp19h4";
       libraryHaskellDepends = [
         base blaze-builder bytestring http-types pipes transformers wai
       ];
       homepage = "http://github.com/iand675/pipes-wai";
       description = "A port of wai-conduit for the pipes ecosystem";
       license = stdenv.lib.licenses.mit;
     }) {};
  "pkcs10" = callPackage
    ({ mkDerivation, asn1-encoding, asn1-parse, asn1-types, base
     , bytestring, cryptonite, pem, QuickCheck, tasty, tasty-hunit
     , tasty-quickcheck, transformers, x509
     }:
     mkDerivation {
       pname = "pkcs10";
       version = "0.1.0.5";
       sha256 = "0n7wkbdfk8lnvirc2zax3zh7zl3yh8n1f5j8mfzq0klhy2yfhzy0";
       libraryHaskellDepends = [
         asn1-encoding asn1-parse asn1-types base bytestring cryptonite pem
         x509
       ];
       testHaskellDepends = [
         asn1-encoding asn1-parse asn1-types base bytestring cryptonite pem
         QuickCheck tasty tasty-hunit tasty-quickcheck transformers x509
       ];
       homepage = "https://github.com/fcomb/pkcs10-hs#readme";
       description = "PKCS#10 library";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "placeholders" = callPackage
    ({ mkDerivation, base, template-haskell }:
     mkDerivation {
       pname = "placeholders";
       version = "0.1";
       sha256 = "0ih35n2pw5gr9ggj2xz5zfcs4bdk200fdw6q9hdy3xna7maphak5";
       libraryHaskellDepends = [ base template-haskell ];
       homepage = "http://github.com/ahammar/placeholders";
       description = "Placeholders for use while developing Haskell code";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "plot" = callPackage
    ({ mkDerivation, array, base, cairo, colour, hmatrix, mtl, pango
     , transformers
     }:
     mkDerivation {
       pname = "plot";
       version = "0.2.3.5";
       sha256 = "10w4slp8n6shddsdq39643djs523visp1250vap2wmly4kanjpfv";
       libraryHaskellDepends = [
         array base cairo colour hmatrix mtl pango transformers
       ];
       homepage = "http://github.com/amcphail/plot";
       description = "A plotting library, exportable as eps/pdf/svg/png or renderable with gtk";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "plot-gtk" = callPackage
    ({ mkDerivation, base, glib, gtk, hmatrix, mtl, plot, process }:
     mkDerivation {
       pname = "plot-gtk";
       version = "0.2.0.4";
       sha256 = "1fq75kg8f1sm9bmn89w5c54arr2y1xv0lswbvnxc4rmfc98l82lw";
       libraryHaskellDepends = [ base glib gtk hmatrix mtl plot process ];
       homepage = "http://code.haskell.org/plot";
       description = "GTK plots and interaction with GHCi";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "plot-gtk-ui" = callPackage
    ({ mkDerivation, base, cairo, colour, fixed-vector, gtk, hmatrix
     , plot, text, vector
     }:
     mkDerivation {
       pname = "plot-gtk-ui";
       version = "0.3.0.1";
       sha256 = "0yavk9j07hvg21msd52xkxyngy237vf23g90ng4vqcrk172qiis1";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base cairo colour fixed-vector gtk hmatrix plot text vector
       ];
       homepage = "https://github.com/sumitsahrawat/plot-gtk-ui";
       description = "A quick way to use Mathematica like Manipulation abilities";
       license = stdenv.lib.licenses.gpl2;
     }) {};
  "plot-gtk3" = callPackage
    ({ mkDerivation, base, glib, gtk3, hmatrix, mtl, plot, process }:
     mkDerivation {
       pname = "plot-gtk3";
       version = "0.1.0.2";
       sha256 = "1nfiblsh3hmbbg4mrid6fwyn0dk013q8pdn6bdqmzgx1s9s822br";
       libraryHaskellDepends = [
         base glib gtk3 hmatrix mtl plot process
       ];
       homepage = "http://code.haskell.org/plot";
       description = "GTK3 plots and interaction with GHCi";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pointed" = callPackage
    ({ mkDerivation, base, comonad, containers, data-default-class
     , hashable, kan-extensions, semigroupoids, semigroups, stm, tagged
     , transformers, transformers-compat, unordered-containers
     }:
     mkDerivation {
       pname = "pointed";
       version = "4.2.0.2";
       sha256 = "0ynswx6ybl7b6vbrm2bd2zj2sbvsclhdi440lpv1aix5smd8m2jb";
       revision = "1";
       editedCabalFile = "0km48l21052l9gm39w113sd1vxhbz6mcxjkkybhjrfamgm9z48sc";
       libraryHaskellDepends = [
         base comonad containers data-default-class hashable kan-extensions
         semigroupoids semigroups stm tagged transformers
         transformers-compat unordered-containers
       ];
       homepage = "http://github.com/ekmett/pointed/";
       description = "Pointed and copointed data";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pointedlist" = callPackage
    ({ mkDerivation, base, binary }:
     mkDerivation {
       pname = "pointedlist";
       version = "0.6.1";
       sha256 = "16xsrzqql7i4z6a3xy07sqnbyqdmcar1jiacla58y4mvkkwb0g3l";
       libraryHaskellDepends = [ base binary ];
       description = "A zipper-like comonad which works as a list, tracking a position";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "poly-arity" = callPackage
    ({ mkDerivation, base, constraints, HList }:
     mkDerivation {
       pname = "poly-arity";
       version = "0.0.7";
       sha256 = "0rhbaj2s7mhyi5y9a0n65blw19qhqwq3jqkkyz5xk8waxwks24ca";
       libraryHaskellDepends = [ base constraints HList ];
       description = "Tools for working with functions of undetermined arity";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "polyparse" = callPackage
    ({ mkDerivation, base, bytestring, text }:
     mkDerivation {
       pname = "polyparse";
       version = "1.11";
       sha256 = "1z417f80b0jm4dgv25fk408p3d9mmcd1dlbya3ry0zdx4md09vrh";
       libraryHaskellDepends = [ base bytestring text ];
       homepage = "http://code.haskell.org/~malcolm/polyparse/";
       description = "A variety of alternative parser combinator libraries";
       license = "LGPL";
     }) {};
  "posix-realtime" = callPackage
    ({ mkDerivation, base, bytestring, unix }:
     mkDerivation {
       pname = "posix-realtime";
       version = "0.0.0.4";
       sha256 = "01yz9p66m8w5418mqrrbz33dib97pscw329382wh0bi75swvlb39";
       libraryHaskellDepends = [ base bytestring unix ];
       description = "POSIX Realtime functionality";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "post-mess-age" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "post-mess-age";
       version = "0.2.0.0";
       sha256 = "11xgg0nfyk3qkyw4snp7apgr4nkq21w52ihfyjzn08w0bh7c23af";
       libraryHaskellDepends = [ base ];
       description = "Send messages to a handle concurrently without getting them mixed";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "postgresql-binary" = callPackage
    ({ mkDerivation, aeson, base, base-prelude, binary-parser
     , bytestring, foldl, loch-th, placeholders, scientific, text, time
     , transformers, uuid, vector
     }:
     mkDerivation {
       pname = "postgresql-binary";
       version = "0.7.9";
       sha256 = "1b94r2fhgbvyddk7sicap3nl36qyf18sps3rk12vzbz3kdnl1zvj";
       libraryHaskellDepends = [
         aeson base base-prelude binary-parser bytestring foldl loch-th
         placeholders scientific text time transformers uuid vector
       ];
       doCheck = false;
       homepage = "https://github.com/nikita-volkov/postgresql-binary";
       description = "Encoders and decoders for the PostgreSQL's binary format";
       license = stdenv.lib.licenses.mit;
     }) {};
  "postgresql-libpq" = callPackage
    ({ mkDerivation, base, bytestring, postgresql }:
     mkDerivation {
       pname = "postgresql-libpq";
       version = "0.9.1.1";
       sha256 = "0waqg245ly017j1qml4sc24896ax645bv8a2fghwwa46zvbsx0z4";
       libraryHaskellDepends = [ base bytestring ];
       librarySystemDepends = [ postgresql ];
       homepage = "http://github.com/lpsmith/postgresql-libpq";
       description = "low-level binding to libpq";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) postgresql;};
  "postgresql-orm" = callPackage
    ({ mkDerivation, aeson, base, blaze-builder, bytestring
     , bytestring-builder, directory, filepath, ghc-prim, mtl
     , old-locale, postgresql-simple, process, text, time, transformers
     , unix, unordered-containers, vector
     }:
     mkDerivation {
       pname = "postgresql-orm";
       version = "0.4.1";
       sha256 = "0nkvvhkmagnqh0hk8wq1rvlhc28sclqdk8nd4ql0p2dpgrf9k7b4";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson base blaze-builder bytestring bytestring-builder directory
         filepath ghc-prim mtl old-locale postgresql-simple process text
         time transformers unix unordered-containers vector
       ];
       executableHaskellDepends = [
         base blaze-builder bytestring bytestring-builder directory filepath
         ghc-prim mtl old-locale postgresql-simple process time
       ];
       description = "An ORM (Object Relational Mapping) and migrations DSL for PostgreSQL";
       license = "GPL";
     }) {};
  "postgresql-schema" = callPackage
    ({ mkDerivation, base, basic-prelude, optparse-applicative
     , postgresql-simple, shelly, text, time, time-locale-compat
     }:
     mkDerivation {
       pname = "postgresql-schema";
       version = "0.1.10";
       sha256 = "0yp239akswajxp9l3d2sdgkba9iycri2zvb5r6pdjzvaj44pwc19";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base basic-prelude postgresql-simple shelly text
       ];
       executableHaskellDepends = [
         base basic-prelude optparse-applicative shelly text time
         time-locale-compat
       ];
       homepage = "https://github.com/mfine/postgresql-schema";
       description = "PostgreSQL Schema Management";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "postgresql-simple" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, base16-bytestring
     , bytestring, bytestring-builder, case-insensitive, containers
     , cryptohash, hashable, HUnit, postgresql-libpq, scientific
     , template-haskell, text, time, transformers, uuid-types, vector
     }:
     mkDerivation {
       pname = "postgresql-simple";
       version = "0.5.1.2";
       sha256 = "0mk7jw0ffnkgbsl988ynxabpg5ahw3xf31wqkw5ma0dh6mwfp2fj";
       libraryHaskellDepends = [
         aeson attoparsec base bytestring bytestring-builder
         case-insensitive containers hashable postgresql-libpq scientific
         template-haskell text time transformers uuid-types vector
       ];
       testHaskellDepends = [
         aeson base base16-bytestring bytestring containers cryptohash HUnit
         text time vector
       ];
       doCheck = false;
       description = "Mid-Level PostgreSQL client library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "postgresql-simple-url" = callPackage
    ({ mkDerivation, base, network-uri, postgresql-simple, split, tasty
     , tasty-quickcheck
     }:
     mkDerivation {
       pname = "postgresql-simple-url";
       version = "0.1.0.1";
       sha256 = "1878zcfgis931nn5pnbixzfj2sbp790rxq294cwjy6g1ab35w5ng";
       revision = "7";
       editedCabalFile = "1k68jfifdss9wj7brlz2k5pf9ys3l3740rm3bxkrdi1c6rg57y7l";
       libraryHaskellDepends = [
         base network-uri postgresql-simple split
       ];
       testHaskellDepends = [
         base postgresql-simple tasty tasty-quickcheck
       ];
       homepage = "https://github.com/futurice/postgresql-simple-url";
       description = "Parse postgres:// url into ConnectInfo";
       license = stdenv.lib.licenses.mit;
     }) {};
  "pqueue" = callPackage
    ({ mkDerivation, base, deepseq }:
     mkDerivation {
       pname = "pqueue";
       version = "1.3.1";
       sha256 = "046wc02wyh93vi9z7z5lpzf7kh05g9v0miva8q9qh3fhhmaj5zzl";
       libraryHaskellDepends = [ base deepseq ];
       description = "Reliable, persistent, fast priority queues";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pred-trie" = callPackage
    ({ mkDerivation, attoparsec, base, composition-extra, criterion
     , deepseq, errors, hashable, mtl, poly-arity, QuickCheck
     , quickcheck-instances, semigroups, sets, tasty, tasty-hunit
     , tasty-quickcheck, text, tries, unordered-containers
     }:
     mkDerivation {
       pname = "pred-trie";
       version = "0.5.0";
       sha256 = "1zzgmb2537kq8r7kdla4m59p2vgq3gwqg348z917ajhar0jki3f7";
       libraryHaskellDepends = [
         base composition-extra hashable mtl poly-arity QuickCheck
         semigroups tries unordered-containers
       ];
       testHaskellDepends = [
         attoparsec base composition-extra deepseq errors hashable mtl
         poly-arity QuickCheck quickcheck-instances semigroups tasty
         tasty-hunit tasty-quickcheck text tries unordered-containers
       ];
       benchmarkHaskellDepends = [
         attoparsec base composition-extra criterion deepseq hashable mtl
         poly-arity QuickCheck semigroups sets text tries
         unordered-containers
       ];
       description = "Predicative tries";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "prednote" = callPackage
    ({ mkDerivation, base, bytestring, containers, contravariant
     , QuickCheck, rainbow, split, tasty, tasty-quickcheck, tasty-th
     , text, transformers
     }:
     mkDerivation {
       pname = "prednote";
       version = "0.36.0.4";
       sha256 = "139brai7fd4vwjmxb35zzpfcz01gplx9vq0f0aqbmz8sw10g5d5c";
       libraryHaskellDepends = [
         base bytestring containers contravariant rainbow split text
         transformers
       ];
       testHaskellDepends = [
         base bytestring containers contravariant QuickCheck rainbow split
         tasty tasty-quickcheck tasty-th text transformers
       ];
       homepage = "http://www.github.com/massysett/prednote";
       description = "Evaluate and display trees of predicates";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "prefix-units" = callPackage
    ({ mkDerivation, base, Cabal, HUnit, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "prefix-units";
       version = "0.2.0";
       sha256 = "1173fj11rb42l239xj8j0q12dclvspxrbc984r503gd54zwbs2h5";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [
         base Cabal HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       homepage = "https://github.com/iustin/prefix-units";
       description = "A basic library for SI/binary prefix units";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "prelude-extras" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "prelude-extras";
       version = "0.4.0.3";
       sha256 = "0xzqdf3nl2h0ra4gnslm1m1nsxlsgc0hh6ky3vn578vh11zhifq9";
       libraryHaskellDepends = [ base ];
       homepage = "http://github.com/ekmett/prelude-extras";
       description = "Higher order versions of Prelude classes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "presburger" = callPackage
    ({ mkDerivation, base, containers, pretty, QuickCheck }:
     mkDerivation {
       pname = "presburger";
       version = "1.3.1";
       sha256 = "15yhqc6gk14dsqr4b0x87i1xw0sc3iscw28grg4vmcspsjxil0l6";
       revision = "1";
       editedCabalFile = "0pabxck7iyhyj7wf1bflg86xb2jip4vaspf080rfdc5s2cg0d23w";
       libraryHaskellDepends = [ base containers pretty ];
       testHaskellDepends = [ base QuickCheck ];
       homepage = "http://github.com/yav/presburger";
       description = "A decision procedure for quantifier-free linear arithmetic";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pretty-class" = callPackage
    ({ mkDerivation, base, pretty }:
     mkDerivation {
       pname = "pretty-class";
       version = "1.0.1.1";
       sha256 = "1qdfp2kpahzflq9a3idwmb0pqs4l7almxn5rbw5gp2pmdx81p3am";
       libraryHaskellDepends = [ base pretty ];
       homepage = "https://github.com/ddssff/pretty-class";
       description = "Pretty printing class similar to Show";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pretty-show" = callPackage
    ({ mkDerivation, array, base, filepath, ghc-prim, happy
     , haskell-lexer, pretty
     }:
     mkDerivation {
       pname = "pretty-show";
       version = "1.6.9";
       sha256 = "0xz4l4jz5ddjd0169yaiz14ncqbsria0ch2hkpswn8xzk9q8kfq6";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         array base filepath ghc-prim haskell-lexer pretty
       ];
       libraryToolDepends = [ happy ];
       executableHaskellDepends = [ base ];
       homepage = "http://wiki.github.com/yav/pretty-show";
       description = "Tools for working with derived `Show` instances and generic inspection of values";
       license = stdenv.lib.licenses.mit;
     }) {};
  "prettyclass" = callPackage
    ({ mkDerivation, base, pretty }:
     mkDerivation {
       pname = "prettyclass";
       version = "1.0.0.0";
       sha256 = "11l9ajci7nh1r547hx8hgxrhq8mh5gdq30pdf845wvilg9p48dz5";
       libraryHaskellDepends = [ base pretty ];
       description = "Pretty printing class similar to Show";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "primes" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "primes";
       version = "0.2.1.0";
       sha256 = "0ny6fzr967d1fifk050k95j9snnbjjif2bxf3v9s93k3zdc6bmkl";
       libraryHaskellDepends = [ base ];
       homepage = "http://github.com/sebfisch/primes";
       description = "Efficient, purely functional generation of prime numbers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "primitive" = callPackage
    ({ mkDerivation, base, ghc-prim, transformers }:
     mkDerivation {
       pname = "primitive";
       version = "0.6.1.0";
       sha256 = "1j1q7l21rdm8kfs93vibr3xwkkhqis181w2k6klfhx5g5skiywwk";
       revision = "1";
       editedCabalFile = "0gb8lcn6bd6ilfln7ah9jmqq6324vgkrgdsnz1qvlyj3bi2w5ivf";
       libraryHaskellDepends = [ base ghc-prim transformers ];
       testHaskellDepends = [ base ghc-prim ];
       homepage = "https://github.com/haskell/primitive";
       description = "Primitive memory-related operations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "process-extras" = callPackage
    ({ mkDerivation, base, bytestring, deepseq, ListLike, process, text
     }:
     mkDerivation {
       pname = "process-extras";
       version = "0.3.3.7";
       sha256 = "1qd99zqdl7agl093v5gip2a28l065g7p14l39v09jpi2n7gwzq2h";
       revision = "1";
       editedCabalFile = "04iqb5fsbixv31shyc9nmqish2b4bcrx5p50m3v5a995ihzwjwdn";
       libraryHaskellDepends = [
         base bytestring deepseq ListLike process text
       ];
       homepage = "https://github.com/seereason/process-extras";
       description = "Process extras";
       license = stdenv.lib.licenses.mit;
     }) {};
  "product-profunctors" = callPackage
    ({ mkDerivation, base, contravariant, profunctors, template-haskell
     }:
     mkDerivation {
       pname = "product-profunctors";
       version = "0.6.3.1";
       sha256 = "079iwk39qdmgzfh7p874ivc3psmfvyxayngx8jwg5hqx2vm85q24";
       revision = "1";
       editedCabalFile = "1qcw6nagqb17wdxrvafj5dnf937nd95kvhkfr0jk7bcgx8p2hjd2";
       libraryHaskellDepends = [
         base contravariant profunctors template-haskell
       ];
       testHaskellDepends = [ base profunctors ];
       homepage = "https://github.com/tomjaguarpaw/product-profunctors";
       description = "product-profunctors";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "profunctor-extras" = callPackage
    ({ mkDerivation, base, profunctors }:
     mkDerivation {
       pname = "profunctor-extras";
       version = "4.0";
       sha256 = "10j458liqlyz5s9gkg95c6aq7ap5fa7d8pc7hygy71nn87pm2g4a";
       libraryHaskellDepends = [ base profunctors ];
       doHaddock = false;
       homepage = "http://github.com/ekmett/profunctor-extras/";
       description = "This package has been absorbed into profunctors 4.0";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "profunctors" = callPackage
    ({ mkDerivation, base, base-orphans, bifunctors, comonad
     , contravariant, distributive, tagged, transformers
     }:
     mkDerivation {
       pname = "profunctors";
       version = "5.2";
       sha256 = "1905xv9y2sx1iya0zlrx7nxhlwap5vn144nxg7s8zsj58xff59w7";
       revision = "1";
       editedCabalFile = "1q0zva60kqb560fr0ii0gm227sg6q7ddbhriv64l6nfv509vw32k";
       libraryHaskellDepends = [
         base base-orphans bifunctors comonad contravariant distributive
         tagged transformers
       ];
       homepage = "http://github.com/ekmett/profunctors/";
       description = "Profunctors";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "project-template" = callPackage
    ({ mkDerivation, base, base64-bytestring, bytestring, conduit
     , conduit-extra, containers, directory, filepath, hspec, mtl
     , QuickCheck, resourcet, text, transformers
     }:
     mkDerivation {
       pname = "project-template";
       version = "0.2.0";
       sha256 = "0433a2cmximz2jbg0m97h80pvmb7vafjvw3qzjpsncavg38xgaxf";
       libraryHaskellDepends = [
         base base64-bytestring bytestring conduit conduit-extra containers
         directory filepath mtl resourcet text transformers
       ];
       testHaskellDepends = [
         base base64-bytestring bytestring conduit containers hspec
         QuickCheck resourcet text transformers
       ];
       homepage = "https://github.com/fpco/haskell-ide";
       description = "Specify Haskell project templates and generate files";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "projectroot" = callPackage
    ({ mkDerivation, base, directory, hspec, QuickCheck }:
     mkDerivation {
       pname = "projectroot";
       version = "0.2.0.1";
       sha256 = "1f0sgrdq83af1wff5pmzfh44rmzmc0k8axhddz7rkl9yaj330xak";
       libraryHaskellDepends = [ base directory ];
       testHaskellDepends = [ base hspec QuickCheck ];
       homepage = "https://github.com/yamadapc/haskell-projectroot";
       description = "Bindings to the projectroot C logic";
       license = stdenv.lib.licenses.mit;
     }) {};
  "prometheus-client" = callPackage
    ({ mkDerivation, atomic-primops, base, bytestring, containers
     , criterion, doctest, hspec, mtl, QuickCheck, random
     , random-shuffle, stm, time, transformers, utf8-string
     }:
     mkDerivation {
       pname = "prometheus-client";
       version = "0.1.0.1";
       sha256 = "0bvp40rdlq8f6rh5v75pgqnmiwz85j960sfi22y7s0r5vykbgh5x";
       libraryHaskellDepends = [
         atomic-primops base bytestring containers mtl stm time transformers
         utf8-string
       ];
       testHaskellDepends = [
         atomic-primops base bytestring containers doctest hspec mtl
         QuickCheck random-shuffle stm time transformers utf8-string
       ];
       benchmarkHaskellDepends = [
         base bytestring criterion random utf8-string
       ];
       homepage = "https://github.com/fimad/prometheus-haskell";
       description = "Haskell client library for http://prometheus.io.";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "prometheus-metrics-ghc" = callPackage
    ({ mkDerivation, base, doctest, prometheus-client, utf8-string }:
     mkDerivation {
       pname = "prometheus-metrics-ghc";
       version = "0.1.0.1";
       sha256 = "15a7hli2fsjmgjnvhdsv1572nqj3i214b0r9bygdang4cjrjv10p";
       libraryHaskellDepends = [ base prometheus-client utf8-string ];
       testHaskellDepends = [ base doctest prometheus-client ];
       homepage = "https://github.com/fimad/prometheus-haskell";
       description = "Metrics exposing GHC runtime information for use with prometheus-client";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "prompt" = callPackage
    ({ mkDerivation, base, mtl, transformers, transformers-compat }:
     mkDerivation {
       pname = "prompt";
       version = "0.1.1.0";
       sha256 = "13ayvs1irsa1hqy6y6ca99dr20vwvy9g10zjrqshvj48i5ra2j4g";
       libraryHaskellDepends = [
         base mtl transformers transformers-compat
       ];
       homepage = "https://github.com/mstksg/prompt";
       description = "Monad (and transformer) for deferred-effect pure prompt-response queries";
       license = stdenv.lib.licenses.mit;
     }) {};
  "protobuf" = callPackage
    ({ mkDerivation, base, bytestring, cereal, containers
     , data-binary-ieee754, deepseq, hex, HUnit, mtl, QuickCheck, tagged
     , tasty, tasty-hunit, tasty-quickcheck, text, unordered-containers
     }:
     mkDerivation {
       pname = "protobuf";
       version = "0.2.1.0";
       sha256 = "0i8hjrj6jycqmq7i1wl0kr9s17g4qfyc0gfwcbhbv70yxwf499di";
       libraryHaskellDepends = [
         base bytestring cereal data-binary-ieee754 deepseq mtl text
         unordered-containers
       ];
       testHaskellDepends = [
         base bytestring cereal containers hex HUnit mtl QuickCheck tagged
         tasty tasty-hunit tasty-quickcheck text unordered-containers
       ];
       homepage = "https://github.com/alphaHeavy/protobuf";
       description = "Google Protocol Buffers via GHC.Generics";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "protocol-buffers" = callPackage
    ({ mkDerivation, array, base, binary, bytestring, containers
     , directory, filepath, mtl, parsec, syb, utf8-string
     }:
     mkDerivation {
       pname = "protocol-buffers";
       version = "2.1.12";
       sha256 = "0kjmp2rjwcha2ydvgbckg196kxfxy510k6cgd7syif5454bwwqy8";
       revision = "1";
       editedCabalFile = "1icnqvxqhayiss0l4nxl42zkmf7jwwabn641448b932xrqcflr9w";
       libraryHaskellDepends = [
         array base binary bytestring containers directory filepath mtl
         parsec syb utf8-string
       ];
       homepage = "https://github.com/k-bx/protocol-buffers";
       description = "Parse Google Protocol Buffer specifications";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "protocol-buffers-descriptor" = callPackage
    ({ mkDerivation, base, bytestring, containers, protocol-buffers }:
     mkDerivation {
       pname = "protocol-buffers-descriptor";
       version = "2.1.12";
       sha256 = "0qawzil92zvxk8qiz70kmb5hy767v1wkqdzncll2nnwiy1jq32dq";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base bytestring containers protocol-buffers
       ];
       homepage = "https://github.com/k-bx/protocol-buffers";
       description = "Text.DescriptorProto.Options and code generated from the Google Protocol Buffer specification";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "psc-ide" = callPackage
    ({ mkDerivation, aeson, base, bytestring, containers, directory
     , either, filepath, hspec, http-client, lens, lens-aeson, mtl
     , network, optparse-applicative, parsec, purescript, regex-tdfa
     , text, wreq
     }:
     mkDerivation {
       pname = "psc-ide";
       version = "0.5.0";
       sha256 = "0yzq0cwdm2ixdwy5x3nw8b0w6rrn4jakp0c8hk1fzbjigazz8g08";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base bytestring containers directory either filepath
         http-client lens lens-aeson mtl parsec purescript regex-tdfa text
         wreq
       ];
       executableHaskellDepends = [
         base directory mtl network optparse-applicative text
       ];
       testHaskellDepends = [ base containers hspec mtl ];
       homepage = "http://github.com/kRITZCREEK/psc-ide";
       description = "Language support for the PureScript programming language";
       license = stdenv.lib.licenses.mit;
     }) {};
  "psqueues" = callPackage
    ({ mkDerivation, array, base, containers, criterion, deepseq
     , fingertree-psqueue, ghc-prim, hashable, HUnit, mtl, PSQueue
     , QuickCheck, random, tagged, test-framework, test-framework-hunit
     , test-framework-quickcheck2, unordered-containers
     }:
     mkDerivation {
       pname = "psqueues";
       version = "0.2.2.0";
       sha256 = "0ammw3zim0bq70xbhj8qf08ycy01kw87978a34jky2gabr82zc8l";
       libraryHaskellDepends = [ base deepseq ghc-prim hashable ];
       testHaskellDepends = [
         array base deepseq ghc-prim hashable HUnit QuickCheck tagged
         test-framework test-framework-hunit test-framework-quickcheck2
       ];
       benchmarkHaskellDepends = [
         base containers criterion deepseq fingertree-psqueue ghc-prim
         hashable mtl PSQueue random unordered-containers
       ];
       description = "Pure priority search queues";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "publicsuffix" = callPackage
    ({ mkDerivation, base, criterion, filepath, hspec, random
     , template-haskell
     }:
     mkDerivation {
       pname = "publicsuffix";
       version = "0.20151212";
       sha256 = "04k5l59hzyla22gasxrkz6cd7qbqwmfiwzx86ykdw1w6qc9fqibw";
       libraryHaskellDepends = [ base filepath template-haskell ];
       testHaskellDepends = [ base hspec ];
       benchmarkHaskellDepends = [ base criterion random ];
       homepage = "https://github.com/wereHamster/publicsuffix-haskell/";
       description = "The publicsuffix list exposed as proper Haskell types";
       license = stdenv.lib.licenses.mit;
     }) {};
  "pure-cdb" = callPackage
    ({ mkDerivation, base, binary, bytestring, containers, directory
     , mtl, test-simple, Unixutils, vector
     }:
     mkDerivation {
       pname = "pure-cdb";
       version = "0.1.2";
       sha256 = "0h7qycpz86r29yshbqm5cmvamv65jj66cs9m03y6qzxda8q8l8i5";
       libraryHaskellDepends = [
         base binary bytestring containers directory mtl vector
       ];
       testHaskellDepends = [
         base bytestring containers mtl test-simple Unixutils vector
       ];
       homepage = "https://github.com/bosu/pure-cdb";
       description = "Another pure-haskell CDB (Constant Database) implementation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pure-io" = callPackage
    ({ mkDerivation, base, containers, mtl, safe }:
     mkDerivation {
       pname = "pure-io";
       version = "0.2.1";
       sha256 = "0pzvkd8jxw859s187n972yaq5wmwi00cxwhivgffr7z29hr0zvx9";
       libraryHaskellDepends = [ base containers mtl safe ];
       description = "Pure IO monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pureMD5" = callPackage
    ({ mkDerivation, base, binary, bytestring, cereal, crypto-api
     , tagged
     }:
     mkDerivation {
       pname = "pureMD5";
       version = "2.1.2.1";
       sha256 = "1zsn949qk95bwx1fbyv84q0lhb4k18bgixl7nivfzsnmhr31fs37";
       libraryHaskellDepends = [
         base binary bytestring cereal crypto-api tagged
       ];
       description = "A Haskell-only implementation of the MD5 digest (hash) algorithm";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "purescript" = callPackage
    ({ mkDerivation, aeson, aeson-better-errors, ansi-wl-pprint, base
     , base-compat, bower-json, boxes, bytestring, containers, directory
     , dlist, filepath, Glob, haskeline, HUnit, language-javascript
     , lifted-base, monad-control, mtl, optparse-applicative, parallel
     , parsec, pattern-arrows, process, safe, semigroups, split, syb
     , text, time, transformers, transformers-base, transformers-compat
     , unordered-containers, utf8-string, vector
     }:
     mkDerivation {
       pname = "purescript";
       version = "0.7.6.1";
       sha256 = "0w7p6f1lc1scjdczgyg2x9g42m8yxs9kqmpxh6sdgbhxy4gxg5n4";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson aeson-better-errors base base-compat bower-json boxes
         bytestring containers directory dlist filepath Glob
         language-javascript lifted-base monad-control mtl parallel parsec
         pattern-arrows process safe semigroups split syb text time
         transformers transformers-base transformers-compat
         unordered-containers utf8-string vector
       ];
       executableHaskellDepends = [
         aeson ansi-wl-pprint base base-compat boxes bytestring containers
         directory filepath Glob haskeline mtl optparse-applicative parsec
         process split time transformers transformers-compat
       ];
       testHaskellDepends = [
         base base-compat boxes containers directory filepath Glob haskeline
         HUnit mtl optparse-applicative parsec process time transformers
         transformers-compat
       ];
       doCheck = false;
       homepage = "http://www.purescript.org/";
       description = "PureScript Programming Language Compiler";
       license = stdenv.lib.licenses.mit;
     }) {};
  "pusher-http-haskell" = callPackage
    ({ mkDerivation, aeson, base, base16-bytestring, bytestring
     , containers, cryptohash, hashable, hspec, http-client, http-types
     , mtl, QuickCheck, snap-core, snap-server, text, time, transformers
     , unordered-containers, yaml
     }:
     mkDerivation {
       pname = "pusher-http-haskell";
       version = "0.3.0.2";
       sha256 = "1640zcrxf7gcw2c9jq0kj699h0hvf7kzsc06x9kcimh2m1v2mkkj";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base base16-bytestring bytestring cryptohash hashable
         http-client http-types mtl QuickCheck text time transformers
         unordered-containers
       ];
       executableHaskellDepends = [
         aeson base bytestring containers mtl snap-core snap-server text
         transformers unordered-containers yaml
       ];
       testHaskellDepends = [
         aeson base bytestring hspec http-client http-types mtl QuickCheck
         text transformers unordered-containers
       ];
       homepage = "https://github.com/pusher-community/pusher-http-haskell";
       description = "Haskell client library for the Pusher HTTP API";
       license = stdenv.lib.licenses.mit;
     }) {};
  "pwstore-fast" = callPackage
    ({ mkDerivation, base, base64-bytestring, binary, byteable
     , bytestring, cryptohash, random
     }:
     mkDerivation {
       pname = "pwstore-fast";
       version = "2.4.4";
       sha256 = "1cpvlwzg3qznhygrr78f75p65mnljd9v5cvnagfxjqppnrkay6bj";
       libraryHaskellDepends = [
         base base64-bytestring binary byteable bytestring cryptohash random
       ];
       homepage = "https://github.com/PeterScott/pwstore";
       description = "Secure password storage";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pwstore-purehaskell" = callPackage
    ({ mkDerivation, base, base64-bytestring, byteable, bytestring
     , random, SHA
     }:
     mkDerivation {
       pname = "pwstore-purehaskell";
       version = "2.1.4";
       sha256 = "1g7lmlgw8iscbbs96r3a534cf46fyks49b1f9y7hv25ny4wp1p9c";
       libraryHaskellDepends = [
         base base64-bytestring byteable bytestring random SHA
       ];
       homepage = "https://github.com/PeterScott/pwstore";
       description = "Secure password storage, in pure Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "quandl-api" = callPackage
    ({ mkDerivation, aeson, base, blaze-builder, bytestring
     , http-conduit, http-types, syb, text, time, time-locale-compat
     , unordered-containers
     }:
     mkDerivation {
       pname = "quandl-api";
       version = "0.2.1.0";
       sha256 = "01mjwg7myal3hc98s7v582ycabv7qx2j6lcsyvhxbmhzs1wl8sqf";
       libraryHaskellDepends = [
         aeson base blaze-builder bytestring http-conduit http-types syb
         text time time-locale-compat unordered-containers
       ];
       homepage = "https://github.com/pvdbrand/quandl-api";
       description = "Quandl.com API library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "questioner" = callPackage
    ({ mkDerivation, ansi-terminal, base, readline, terminal-size }:
     mkDerivation {
       pname = "questioner";
       version = "0.1.1.0";
       sha256 = "05q64mslkbg017fpjx7ma2al6iz5zjrkyzipm8p86n8zcx3l1aw3";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         ansi-terminal base readline terminal-size
       ];
       executableHaskellDepends = [ base ];
       homepage = "https://github.com/yamadapc/haskell-questioner.git";
       description = "A package for prompting values from the command-line";
       license = stdenv.lib.licenses.mit;
     }) {};
  "quickcheck-assertions" = callPackage
    ({ mkDerivation, base, hspec, ieee754, QuickCheck }:
     mkDerivation {
       pname = "quickcheck-assertions";
       version = "0.2.0";
       sha256 = "0h7pa84hzy3bhv1acf1rvvw3lza0m8shd8a0vykzpx8lnkxbl3v0";
       libraryHaskellDepends = [ base ieee754 QuickCheck ];
       testHaskellDepends = [ base hspec ieee754 QuickCheck ];
       homepage = "https://github.com/s9gf4ult/quickcheck-assertions";
       description = "HUnit like assertions for QuickCheck";
       license = stdenv.lib.licenses.lgpl3;
     }) {};
  "quickcheck-instances" = callPackage
    ({ mkDerivation, array, base, bytestring, containers, hashable
     , old-time, QuickCheck, scientific, text, time
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "quickcheck-instances";
       version = "0.3.12";
       sha256 = "1wwvkzpams7i0j7nk5qj8vvhj8x5zcbgbgrpczszgvshva4bkmfx";
       revision = "2";
       editedCabalFile = "1v1r7gidkjc2v4dw1id57raqnjqv4rc10pa2l6xhhg0dzrnw28a3";
       libraryHaskellDepends = [
         array base bytestring containers hashable old-time QuickCheck
         scientific text time unordered-containers vector
       ];
       homepage = "https://github.com/aslatter/qc-instances";
       description = "Common quickcheck instances";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "quickcheck-io" = callPackage
    ({ mkDerivation, base, HUnit, QuickCheck }:
     mkDerivation {
       pname = "quickcheck-io";
       version = "0.1.2";
       sha256 = "1kf1kfw9fsmly0rvzvdf6jvdw10qhkmikyj0wcwciw6wad95w9sh";
       revision = "2";
       editedCabalFile = "0vwpm6ajd6lzyxs7hc7c6q55cz1fgfn2rriqzaqyzdsd40jl8nwx";
       libraryHaskellDepends = [ base HUnit QuickCheck ];
       homepage = "https://github.com/hspec/quickcheck-io#readme";
       description = "Use HUnit assertions as QuickCheck properties";
       license = stdenv.lib.licenses.mit;
     }) {};
  "quickcheck-text" = callPackage
    ({ mkDerivation, base, binary, bytestring, QuickCheck, text }:
     mkDerivation {
       pname = "quickcheck-text";
       version = "0.1.0.1";
       sha256 = "0g2m3djrlzbwbam4vvx33whi9g0ln8alxivfa479icmi4dq12cxz";
       libraryHaskellDepends = [ base binary bytestring QuickCheck text ];
       testHaskellDepends = [ base bytestring QuickCheck text ];
       homepage = "https://github.com/olorin/quickcheck-text";
       description = "Alternative arbitrary instance for Text";
       license = stdenv.lib.licenses.mit;
     }) {};
  "quickcheck-unicode" = callPackage
    ({ mkDerivation, base, QuickCheck }:
     mkDerivation {
       pname = "quickcheck-unicode";
       version = "1.0.0.1";
       sha256 = "1a8nl6x7l9b22yx61wm0bh2n1xzb1hd5i5zgg1w4fpaivjnrrhi4";
       libraryHaskellDepends = [ base QuickCheck ];
       homepage = "https://github.com/bos/quickcheck-unicode";
       description = "Generator and shrink functions for testing Unicode-related software";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "rainbow" = callPackage
    ({ mkDerivation, base, bytestring, lens, process, QuickCheck, text
     }:
     mkDerivation {
       pname = "rainbow";
       version = "0.26.0.6";
       sha256 = "1v0za967cp1205fkbwglf28yn2pslp7dvyqb3rbym3j7r3pby3zc";
       libraryHaskellDepends = [ base bytestring lens process text ];
       testHaskellDepends = [
         base bytestring lens process QuickCheck text
       ];
       homepage = "https://www.github.com/massysett/rainbow";
       description = "Print text to terminal with colors and effects";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "rainbox" = callPackage
    ({ mkDerivation, base, bytestring, containers, lens, QuickCheck
     , rainbow, tasty, tasty-quickcheck, text
     }:
     mkDerivation {
       pname = "rainbox";
       version = "0.18.0.4";
       sha256 = "18952lq5sm7ych237j2a6crbfp71jb2xj9zlcnbpsnzfh4zypvzq";
       libraryHaskellDepends = [
         base bytestring containers lens rainbow text
       ];
       testHaskellDepends = [
         base bytestring containers lens QuickCheck rainbow tasty
         tasty-quickcheck text
       ];
       homepage = "http://www.github.com/massysett/rainbox";
       description = "Two-dimensional box pretty printing, with colors";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "random" = callPackage
    ({ mkDerivation, base, time }:
     mkDerivation {
       pname = "random";
       version = "1.1";
       sha256 = "0nis3lbkp8vfx8pkr6v7b7kr5m334bzb0fk9vxqklnp2aw8a865p";
       revision = "1";
       editedCabalFile = "1pv5d7bm2rgap7llp5vjsplrg048gvf0226y0v19gpvdsx7n4rvv";
       libraryHaskellDepends = [ base time ];
       testHaskellDepends = [ base ];
       description = "random number library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "random-fu" = callPackage
    ({ mkDerivation, base, erf, log-domain, math-functions, monad-loops
     , mtl, random-shuffle, random-source, rvar, syb, template-haskell
     , transformers, vector
     }:
     mkDerivation {
       pname = "random-fu";
       version = "0.2.6.2";
       sha256 = "1j7zr7h860vjwlh9d9sj319xs44ly2vyzn3s72c5qc39r0yv00ng";
       libraryHaskellDepends = [
         base erf log-domain math-functions monad-loops mtl random-shuffle
         random-source rvar syb template-haskell transformers vector
       ];
       homepage = "https://github.com/mokus0/random-fu";
       description = "Random number generation";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "random-shuffle" = callPackage
    ({ mkDerivation, base, MonadRandom, random }:
     mkDerivation {
       pname = "random-shuffle";
       version = "0.0.4";
       sha256 = "0586bnlh0g2isc44jbjvafkcl4yw6lp1db8x6vr0pza0y08l8w2j";
       libraryHaskellDepends = [ base MonadRandom random ];
       description = "Random shuffle implementation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "random-source" = callPackage
    ({ mkDerivation, base, flexible-defaults, mersenne-random-pure64
     , mtl, mwc-random, random, stateref, syb, template-haskell
     , th-extras
     }:
     mkDerivation {
       pname = "random-source";
       version = "0.3.0.6";
       sha256 = "0wsv41kpswqml04ym5bq2nan4i637f7h3fmvda2zy506xwxfrpzk";
       libraryHaskellDepends = [
         base flexible-defaults mersenne-random-pure64 mtl mwc-random random
         stateref syb template-haskell th-extras
       ];
       homepage = "https://github.com/mokus0/random-fu";
       description = "Generic basis for random number generators";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "range" = callPackage
    ({ mkDerivation, base, Cabal, free, parsec, QuickCheck, random
     , test-framework, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "range";
       version = "0.1.2.0";
       sha256 = "028bigaq4vk5ykzf04f5hi3g37gxzzp6q24bjcb3gjfzcgy7z6ab";
       libraryHaskellDepends = [ base free parsec ];
       testHaskellDepends = [
         base Cabal free QuickCheck random test-framework
         test-framework-quickcheck2
       ];
       homepage = "https://bitbucket.org/robertmassaioli/range";
       description = "This has a bunch of code for specifying and managing ranges in your code";
       license = stdenv.lib.licenses.mit;
     }) {};
  "range-set-list" = callPackage
    ({ mkDerivation, base, containers, deepseq, hashable, semigroups
     , tasty, tasty-quickcheck
     }:
     mkDerivation {
       pname = "range-set-list";
       version = "0.1.2.0";
       sha256 = "0rxb5dq228xypnilqvjyn97knlzfc7fl771w4qgziwfw8zs9qx1v";
       revision = "1";
       editedCabalFile = "061xbyarcjr4bcb08a5xyzqiyvagn9729p6hk5kzayzlkscx16j2";
       libraryHaskellDepends = [
         base containers deepseq hashable semigroups
       ];
       testHaskellDepends = [
         base containers deepseq hashable semigroups tasty tasty-quickcheck
       ];
       homepage = "https://github.com/phadej/range-set-list#readme";
       description = "Memory efficient sets with ranges of elements";
       license = stdenv.lib.licenses.mit;
     }) {};
  "rank1dynamic" = callPackage
    ({ mkDerivation, base, binary }:
     mkDerivation {
       pname = "rank1dynamic";
       version = "0.3.2.0";
       sha256 = "1sqxkr24mg8d9f9rh09p4nn3fj5n86h88f718k91p9h835nxkpg2";
       libraryHaskellDepends = [ base binary ];
       doCheck = false;
       homepage = "http://haskell-distributed.github.com";
       description = "Like Data.Dynamic/Data.Typeable but with support for rank-1 polymorphic types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "rasterific-svg" = callPackage
    ({ mkDerivation, base, binary, bytestring, containers, directory
     , filepath, FontyFruity, JuicyPixels, lens, linear, mtl
     , optparse-applicative, Rasterific, scientific, svg-tree, text
     , transformers, vector
     }:
     mkDerivation {
       pname = "rasterific-svg";
       version = "0.2.3.2";
       sha256 = "018qsp0bddlb12qlwygqf61da4zysc3x88389kc3nc6m16x49dyq";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base binary bytestring containers directory filepath FontyFruity
         JuicyPixels lens linear mtl Rasterific scientific svg-tree text
         transformers vector
       ];
       executableHaskellDepends = [
         base directory filepath FontyFruity JuicyPixels
         optparse-applicative Rasterific svg-tree
       ];
       description = "SVG renderer based on Rasterific";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "raw-strings-qq" = callPackage
    ({ mkDerivation, base, HUnit, template-haskell }:
     mkDerivation {
       pname = "raw-strings-qq";
       version = "1.1";
       sha256 = "1lxy1wy3awf52968iy5y9r5z4qgnn2sxkdrh7js3m9gadb11w09f";
       libraryHaskellDepends = [ base template-haskell ];
       testHaskellDepends = [ base HUnit ];
       homepage = "https://github.com/23Skidoo/raw-strings-qq";
       description = "Raw string literals for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "read-editor" = callPackage
    ({ mkDerivation, base, directory, process }:
     mkDerivation {
       pname = "read-editor";
       version = "0.1.0.2";
       sha256 = "11bhfyzvw305avnp9abf45jvwflwdh8gshx5l08szyr3d2lfr2pd";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base directory process ];
       homepage = "https://github.com/yamadapc/haskell-read-editor";
       description = "Opens a temporary file on the system's EDITOR and returns the resulting edits";
       license = stdenv.lib.licenses.mit;
     }) {};
  "readable" = callPackage
    ({ mkDerivation, base, bytestring, text }:
     mkDerivation {
       pname = "readable";
       version = "0.3.1";
       sha256 = "1ja39cg26wy2fs00gi12x7iq5k8i366pbqi3p916skfa5jnkfc3h";
       libraryHaskellDepends = [ base bytestring text ];
       homepage = "https://github.com/mightybyte/readable";
       description = "Reading from Text and ByteString";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "readline" = callPackage
    ({ mkDerivation, base, ncurses, process, readline }:
     mkDerivation {
       pname = "readline";
       version = "1.0.3.0";
       sha256 = "1sszlx34qa88fad3wlhd4rkb1my1nrpzvyd8vq7dn806j5sf3ff0";
       libraryHaskellDepends = [ base process ];
       librarySystemDepends = [ ncurses readline ];
       description = "An interface to the GNU readline library";
       license = "GPL";
     }) {inherit (pkgs) ncurses; inherit (pkgs) readline;};
  "recursion-schemes" = callPackage
    ({ mkDerivation, base, comonad, free, transformers }:
     mkDerivation {
       pname = "recursion-schemes";
       version = "4.1.2";
       sha256 = "1z64r20qgf7n5c2529cpwhklb3nkmw01p2llq903dqkplmbi7z9n";
       libraryHaskellDepends = [ base comonad free transformers ];
       homepage = "http://github.com/ekmett/recursion-schemes/";
       description = "Generalized bananas, lenses and barbed wire";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "redis-io" = callPackage
    ({ mkDerivation, async, attoparsec, auto-update, base, bytestring
     , bytestring-conversion, containers, criterion, exceptions, hedis
     , iproute, monad-control, mtl, network, operational, redis-resp
     , resource-pool, semigroups, stm, tasty, tasty-hunit, time, tinylog
     , transformers, transformers-base
     }:
     mkDerivation {
       pname = "redis-io";
       version = "0.5.2";
       sha256 = "1nzg2bwn9rz7k16z912aa6qn3nsgzxirn2k3cymv2l5fd86h4cxd";
       libraryHaskellDepends = [
         attoparsec auto-update base bytestring containers exceptions
         iproute monad-control mtl network operational redis-resp
         resource-pool semigroups stm time tinylog transformers
         transformers-base
       ];
       testHaskellDepends = [
         async base bytestring bytestring-conversion containers redis-resp
         tasty tasty-hunit tinylog transformers
       ];
       benchmarkHaskellDepends = [
         base bytestring criterion hedis redis-resp tinylog transformers
       ];
       doCheck = false;
       homepage = "https://github.com/twittner/redis-io/";
       description = "Yet another redis client";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "redis-resp" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring
     , bytestring-conversion, containers, dlist, double-conversion
     , operational, semigroups, split, transformers
     }:
     mkDerivation {
       pname = "redis-resp";
       version = "0.3.2";
       sha256 = "07lvgq2l2fahhc9z3hjjjpx3n4rzdxl2l2ww9brxnv23432xpz97";
       revision = "2";
       editedCabalFile = "0zw7i3s45zwzcwvkhbz34x7nk93g09f4w33qwjkfyy5dydqyhxb3";
       libraryHaskellDepends = [
         attoparsec base bytestring bytestring-conversion containers dlist
         double-conversion operational semigroups split transformers
       ];
       homepage = "https://github.com/twittner/redis-resp/";
       description = "REdis Serialization Protocol (RESP) implementation";
       license = "unknown";
     }) {};
  "reducers" = callPackage
    ({ mkDerivation, array, base, bytestring, containers, fingertree
     , hashable, semigroupoids, semigroups, text, transformers
     , unordered-containers
     }:
     mkDerivation {
       pname = "reducers";
       version = "3.12.1";
       sha256 = "0pkddg0s3cn759miq0nfrq7lnp3imk5sx784ihsilsbjh9kvffz4";
       revision = "2";
       editedCabalFile = "00zxyyaj0grvr214qdrg68114b93iwp27vmww254s2yq9z701gf8";
       libraryHaskellDepends = [
         array base bytestring containers fingertree hashable semigroupoids
         semigroups text transformers unordered-containers
       ];
       homepage = "http://github.com/ekmett/reducers/";
       description = "Semigroups, specialized containers and a general map/reduce framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ref-fd" = callPackage
    ({ mkDerivation, base, stm, transformers }:
     mkDerivation {
       pname = "ref-fd";
       version = "0.4";
       sha256 = "1r8cj6v798chr3bp7x6qvsiz04xsj2iicpa6824b4fzzy5ixkj96";
       libraryHaskellDepends = [ base stm transformers ];
       homepage = "http://www.cs.drexel.edu/~mainland/";
       description = "A type class for monads with references using functional dependencies";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "refact" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "refact";
       version = "0.3.0.2";
       sha256 = "0v0zxcx29b8jxs2kgy9csykqcp8kzhdvyylw2xfwmj4pfxr2kl0a";
       libraryHaskellDepends = [ base ];
       description = "Specify refactorings to perform with apply-refact";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "reflection" = callPackage
    ({ mkDerivation, base, template-haskell }:
     mkDerivation {
       pname = "reflection";
       version = "2.1.2";
       sha256 = "0f9w0akbm6p8h7kzgcd2f6nnpw1wy84pqn45vfz1ch5j0hn8h2d9";
       libraryHaskellDepends = [ base template-haskell ];
       homepage = "http://github.com/ekmett/reflection";
       description = "Reifies arbitrary terms into types that can be reflected back into terms";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "reform" = callPackage
    ({ mkDerivation, base, containers, mtl, text }:
     mkDerivation {
       pname = "reform";
       version = "0.2.7.1";
       sha256 = "0c4jh64rszp9rk62kh8nqyhafnbi5vm9lmc2rx7fx237j24j3gjr";
       libraryHaskellDepends = [ base containers mtl text ];
       homepage = "http://www.happstack.com/";
       description = "reform is a type-safe HTML form generation and validation library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "reform-blaze" = callPackage
    ({ mkDerivation, base, blaze-html, blaze-markup, reform, text }:
     mkDerivation {
       pname = "reform-blaze";
       version = "0.2.4.1";
       sha256 = "12v7d42yh4cgffcnrl9ynhkyjv5npfwlcxjqkmg15vswsyag1b6l";
       revision = "1";
       editedCabalFile = "1w85dbpfrgi0lan1b485s1bs2pa93myf8gwyi772g5if5rc9irdb";
       libraryHaskellDepends = [
         base blaze-html blaze-markup reform text
       ];
       homepage = "http://www.happstack.com/";
       description = "Add support for using blaze-html with Reform";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "reform-hamlet" = callPackage
    ({ mkDerivation, base, blaze-markup, reform, shakespeare, text }:
     mkDerivation {
       pname = "reform-hamlet";
       version = "0.0.5.1";
       sha256 = "1wl6j8jankf7ncr92z4q8j21fc00ds1m3ri61xwx6qq4b33iy9x0";
       libraryHaskellDepends = [
         base blaze-markup reform shakespeare text
       ];
       homepage = "http://www.happstack.com/";
       description = "Add support for using Hamlet with Reform";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "reform-happstack" = callPackage
    ({ mkDerivation, base, bytestring, happstack-server, mtl, random
     , reform, text, utf8-string
     }:
     mkDerivation {
       pname = "reform-happstack";
       version = "0.2.5.1";
       sha256 = "1ansv8d0qy4n7yfbld25bi4vgsgdd3j3smcaqdgbylbjq066z83g";
       libraryHaskellDepends = [
         base bytestring happstack-server mtl random reform text utf8-string
       ];
       homepage = "http://www.happstack.com/";
       description = "Happstack support for reform";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "reform-hsp" = callPackage
    ({ mkDerivation, base, hsp, hsx2hs, reform, text }:
     mkDerivation {
       pname = "reform-hsp";
       version = "0.2.6.1";
       sha256 = "19c0rxhkym7w46d3z3vklh03xfpwbqri8wmf2fzrr2pj3qpb4qfr";
       libraryHaskellDepends = [ base hsp hsx2hs reform text ];
       homepage = "http://www.happstack.com/";
       description = "Add support for using HSP with Reform";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "regex-applicative" = callPackage
    ({ mkDerivation, base, containers, smallcheck, tasty, tasty-hunit
     , tasty-smallcheck, transformers
     }:
     mkDerivation {
       pname = "regex-applicative";
       version = "0.3.3";
       sha256 = "1riv7jqf26lbv4rm54sd6mrx8xdh4dvh4xbzymzdfdw13k6a4nb6";
       libraryHaskellDepends = [ base containers transformers ];
       testHaskellDepends = [
         base containers smallcheck tasty tasty-hunit tasty-smallcheck
         transformers
       ];
       homepage = "https://github.com/feuerbach/regex-applicative";
       description = "Regex-based parsing with applicative interface";
       license = stdenv.lib.licenses.mit;
     }) {};
  "regex-applicative-text" = callPackage
    ({ mkDerivation, base, regex-applicative, text }:
     mkDerivation {
       pname = "regex-applicative-text";
       version = "0.1.0.1";
       sha256 = "1ng2qhk4mvpzl8fx91ig7ldv09v9aqdsvn6yl9yjapc6h0ghb4xh";
       revision = "1";
       editedCabalFile = "1w8aqqq6j1lhwpi2d0qj9h32cia3nr9l43a0mspqawb1nsmpjyic";
       libraryHaskellDepends = [ base regex-applicative text ];
       homepage = "https://github.com/phadej/regex-applicative-text#readme";
       description = "regex-applicative on text";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "regex-base" = callPackage
    ({ mkDerivation, array, base, bytestring, containers, mtl }:
     mkDerivation {
       pname = "regex-base";
       version = "0.93.2";
       sha256 = "0y1j4h2pg12c853nzmczs263di7xkkmlnsq5dlp5wgbgl49mgp10";
       libraryHaskellDepends = [ array base bytestring containers mtl ];
       homepage = "http://sourceforge.net/projects/lazy-regex";
       description = "Replaces/Enhances Text.Regex";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "regex-compat" = callPackage
    ({ mkDerivation, array, base, regex-base, regex-posix }:
     mkDerivation {
       pname = "regex-compat";
       version = "0.95.1";
       sha256 = "0fwmima3f04p9y4h3c23493n1xj629ia2dxaisqm6rynljjv2z6m";
       libraryHaskellDepends = [ array base regex-base regex-posix ];
       homepage = "http://sourceforge.net/projects/lazy-regex";
       description = "Replaces/Enhances Text.Regex";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "regex-compat-tdfa" = callPackage
    ({ mkDerivation, array, base, regex-base, regex-tdfa }:
     mkDerivation {
       pname = "regex-compat-tdfa";
       version = "0.95.1.4";
       sha256 = "1p90fn90yhp7fvljjdqjp41cszidcfz4pw7fwvzyx4739b98x8sg";
       libraryHaskellDepends = [ array base regex-base regex-tdfa ];
       homepage = "http://hub.darcs.net/shelarcy/regex-compat-tdfa";
       description = "Unicode Support version of Text.Regex, using regex-tdfa";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "regex-pcre" = callPackage
    ({ mkDerivation, array, base, bytestring, containers, pcre
     , regex-base
     }:
     mkDerivation {
       pname = "regex-pcre";
       version = "0.94.4";
       sha256 = "1h16w994g9s62iwkdqa7bar2n9cfixmkzz2rm8svm960qr57valf";
       libraryHaskellDepends = [
         array base bytestring containers regex-base
       ];
       librarySystemDepends = [ pcre ];
       homepage = "http://hackage.haskell.org/package/regex-pcre";
       description = "Replaces/Enhances Text.Regex";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) pcre;};
  "regex-pcre-builtin" = callPackage
    ({ mkDerivation, array, base, bytestring, containers, regex-base }:
     mkDerivation {
       pname = "regex-pcre-builtin";
       version = "0.94.4.8.8.35";
       sha256 = "0y7as9wqlkykpipka2cfdhmcnin345q01pp0wsva8fwmvsavdl8b";
       libraryHaskellDepends = [
         array base bytestring containers regex-base
       ];
       homepage = "http://hackage.haskell.org/package/regex-pcre";
       description = "Replaces/Enhances Text.Regex";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "regex-posix" = callPackage
    ({ mkDerivation, array, base, bytestring, containers, regex-base }:
     mkDerivation {
       pname = "regex-posix";
       version = "0.95.2";
       sha256 = "0gkhzhj8nvfn1ija31c7xnl6p0gadwii9ihyp219ck2arlhrj0an";
       libraryHaskellDepends = [
         array base bytestring containers regex-base
       ];
       homepage = "http://sourceforge.net/projects/lazy-regex";
       description = "Replaces/Enhances Text.Regex";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "regex-tdfa" = callPackage
    ({ mkDerivation, array, base, bytestring, containers, ghc-prim, mtl
     , parsec, regex-base
     }:
     mkDerivation {
       pname = "regex-tdfa";
       version = "1.2.1";
       sha256 = "19vir1c5hy4k378awmzp3nnviyv38xm3whibahs2xgkqxdg313d3";
       libraryHaskellDepends = [
         array base bytestring containers ghc-prim mtl parsec regex-base
       ];
       homepage = "http://hackage.haskell.org/package/regex-tdfa";
       description = "Replaces/Enhances Text.Regex";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "regex-tdfa-rc" = callPackage
    ({ mkDerivation, array, base, bytestring, containers, ghc-prim, mtl
     , parsec, regex-base
     }:
     mkDerivation {
       pname = "regex-tdfa-rc";
       version = "1.1.8.3";
       sha256 = "1vi11i23gkkjg6193ak90g55akj69bhahy542frkwb68haky4pp3";
       libraryHaskellDepends = [
         array base bytestring containers ghc-prim mtl parsec regex-base
       ];
       homepage = "http://hackage.haskell.org/package/regex-tdfa";
       description = "Replaces/Enhances Text.Regex";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "regex-tdfa-text" = callPackage
    ({ mkDerivation, array, base, regex-base, regex-tdfa, text }:
     mkDerivation {
       pname = "regex-tdfa-text";
       version = "1.0.0.3";
       sha256 = "0090g6lgbdm9lywpqm2d3724nnnh24nx3vnlqr96qc2w486pmmrq";
       libraryHaskellDepends = [ array base regex-base regex-tdfa text ];
       description = "Text interface for regex-tdfa";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "reinterpret-cast" = callPackage
    ({ mkDerivation, array, base, criterion, data-binary-ieee754, hspec
     , loop
     }:
     mkDerivation {
       pname = "reinterpret-cast";
       version = "0.1.0";
       sha256 = "1r2k2fyfm5lknfdfs282l274bgaxf4j4dikk4hpwchjbj0n64m2n";
       libraryHaskellDepends = [ array base ];
       testHaskellDepends = [ base data-binary-ieee754 hspec loop ];
       benchmarkHaskellDepends = [ base criterion data-binary-ieee754 ];
       homepage = "https://github.com/nh2/reinterpret-cast";
       description = "Memory reinterpretation casts for Float/Double and Word32/Word64";
       license = stdenv.lib.licenses.mit;
     }) {};
  "repa" = callPackage
    ({ mkDerivation, base, bytestring, ghc-prim, QuickCheck
     , template-haskell, vector
     }:
     mkDerivation {
       pname = "repa";
       version = "3.4.0.2";
       sha256 = "0gg5g0a542d0zvnvrwjz9a676sixqq9hwp2ag4160ps1is0lh2qw";
       libraryHaskellDepends = [
         base bytestring ghc-prim QuickCheck template-haskell vector
       ];
       homepage = "http://repa.ouroborus.net";
       description = "High performance, regular, shape polymorphic parallel arrays";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "repa-algorithms" = callPackage
    ({ mkDerivation, base, repa, vector }:
     mkDerivation {
       pname = "repa-algorithms";
       version = "3.4.0.2";
       sha256 = "0fc99xk90bbs32cl8kn7s9ipczmr32j9nzlc80680a5z9sln9pj9";
       libraryHaskellDepends = [ base repa vector ];
       homepage = "http://repa.ouroborus.net";
       description = "Algorithms using the Repa array library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "repa-devil" = callPackage
    ({ mkDerivation, base, libdevil, repa, transformers }:
     mkDerivation {
       pname = "repa-devil";
       version = "0.3.2.6";
       sha256 = "0f7xawg4qlfbf24lrjbpqzl3f3zf63f8g5b2gi17h0rpyw3cxhzy";
       libraryHaskellDepends = [ base repa transformers ];
       librarySystemDepends = [ libdevil ];
       homepage = "https://github.com/RaphaelJ/repa-devil";
       description = "Support for image reading and writing of Repa arrays using in-place FFI calls";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) libdevil;};
  "repa-io" = callPackage
    ({ mkDerivation, base, binary, bmp, bytestring, old-time, repa
     , vector
     }:
     mkDerivation {
       pname = "repa-io";
       version = "3.4.0.2";
       sha256 = "0iw1rgk3zjwn4si7703szhk4p6dhfq71ldly17k869y9bn5kmnmz";
       libraryHaskellDepends = [
         base binary bmp bytestring old-time repa vector
       ];
       homepage = "http://repa.ouroborus.net";
       description = "Read and write Repa arrays in various formats";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "reroute" = callPackage
    ({ mkDerivation, base, criterion, deepseq, graph-core, hashable
     , hspec, hvect, mtl, path-pieces, random, regex-compat, text
     , transformers, unordered-containers, vector
     }:
     mkDerivation {
       pname = "reroute";
       version = "0.3.1.0";
       sha256 = "1sbg8zx697fxix5w8zfnhgim6x2brmg658haz0cy21a30m7h8cay";
       libraryHaskellDepends = [
         base deepseq graph-core hashable hvect mtl path-pieces regex-compat
         text transformers unordered-containers vector
       ];
       testHaskellDepends = [
         base hspec hvect mtl text unordered-containers vector
       ];
       benchmarkHaskellDepends = [
         base criterion deepseq graph-core hashable hvect mtl path-pieces
         random regex-compat text unordered-containers vector
       ];
       homepage = "http://github.com/agrafix/reroute";
       description = "abstract implementation of typed and untyped web routing";
       license = stdenv.lib.licenses.mit;
     }) {};
  "resolve-trivial-conflicts" = callPackage
    ({ mkDerivation, ansi-terminal, base, base-compat, Diff, directory
     , filepath, mtl, optparse-applicative, process, unix
     }:
     mkDerivation {
       pname = "resolve-trivial-conflicts";
       version = "0.3.2.2";
       sha256 = "06rw4qm7lxadbr1w6116g9l5q65m39sxx1jwhi06cfll69fm6s1d";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         ansi-terminal base base-compat Diff directory filepath mtl
         optparse-applicative process unix
       ];
       doHaddock = false;
       homepage = "https://github.com/ElastiLotem/resolve-trivial-conflicts";
       description = "Remove trivial conflict markers in a git repository";
       license = stdenv.lib.licenses.gpl2;
     }) {};
  "resource-pool" = callPackage
    ({ mkDerivation, base, hashable, monad-control, stm, time
     , transformers, transformers-base, vector
     }:
     mkDerivation {
       pname = "resource-pool";
       version = "0.2.3.2";
       sha256 = "04mw8b9djb14zp4rdi6h7mc3zizh597ffiinfbr4m0m8psifw9w6";
       libraryHaskellDepends = [
         base hashable monad-control stm time transformers transformers-base
         vector
       ];
       homepage = "http://github.com/bos/pool";
       description = "A high-performance striped resource pooling implementation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "resourcet" = callPackage
    ({ mkDerivation, base, containers, exceptions, hspec, lifted-base
     , mmorph, monad-control, mtl, transformers, transformers-base
     , transformers-compat
     }:
     mkDerivation {
       pname = "resourcet";
       version = "1.1.7.3";
       sha256 = "1gz140ffsd61vsc1bn0sxjl337x2xghfh0f8c5p1af5vga4mmk7w";
       libraryHaskellDepends = [
         base containers exceptions lifted-base mmorph monad-control mtl
         transformers transformers-base transformers-compat
       ];
       testHaskellDepends = [ base hspec lifted-base transformers ];
       homepage = "http://github.com/snoyberg/conduit";
       description = "Deterministic allocation and freeing of scarce resources";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "rest-client" = callPackage
    ({ mkDerivation, aeson-utils, base, bytestring, case-insensitive
     , data-default, exceptions, http-conduit, http-types, hxt
     , hxt-pickle-utils, monad-control, mtl, resourcet, rest-types
     , tostring, transformers, transformers-base, transformers-compat
     , uri-encode, utf8-string
     }:
     mkDerivation {
       pname = "rest-client";
       version = "0.5.1.0";
       sha256 = "0vhkr3k7aihylbkfig413gcama929gb3h6y281a980giy0qgnxcv";
       revision = "3";
       editedCabalFile = "029fv4qgqmf83z8y51j8hawrang5c3gqlk1iv4l99dcpgfa6va3i";
       libraryHaskellDepends = [
         aeson-utils base bytestring case-insensitive data-default
         exceptions http-conduit http-types hxt hxt-pickle-utils
         monad-control mtl resourcet rest-types tostring transformers
         transformers-base transformers-compat uri-encode utf8-string
       ];
       description = "Utility library for use in generated API client libraries";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "rest-core" = callPackage
    ({ mkDerivation, aeson, aeson-utils, base, bytestring
     , case-insensitive, errors, fclabels, HUnit, hxt, hxt-pickle-utils
     , json-schema, mtl, mtl-compat, multipart, random, rest-stringmap
     , rest-types, safe, split, test-framework, test-framework-hunit
     , text, transformers, transformers-compat, unordered-containers
     , uri-encode, utf8-string, uuid
     }:
     mkDerivation {
       pname = "rest-core";
       version = "0.37";
       sha256 = "0v06kmp4w3ymplm2p5ikg1rnh6x0k75bxp607kssssmfw6si6zka";
       revision = "4";
       editedCabalFile = "0wa7q3nyzr516s63b33782r6f0xw4ha5pmffy1z92x55xb6admq9";
       libraryHaskellDepends = [
         aeson aeson-utils base bytestring case-insensitive errors fclabels
         hxt hxt-pickle-utils json-schema mtl mtl-compat multipart random
         rest-stringmap rest-types safe split text transformers
         transformers-compat unordered-containers uri-encode utf8-string
         uuid
       ];
       testHaskellDepends = [
         base bytestring HUnit mtl test-framework test-framework-hunit
         transformers transformers-compat unordered-containers
       ];
       description = "Rest API library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "rest-gen" = callPackage
    ({ mkDerivation, aeson, base, blaze-html, Cabal, code-builder
     , directory, fclabels, filepath, hashable, haskell-src-exts
     , HStringTemplate, HUnit, hxt, json-schema, pretty, process
     , rest-core, safe, scientific, semigroups, split, test-framework
     , test-framework-hunit, text, uniplate, unordered-containers
     , vector
     }:
     mkDerivation {
       pname = "rest-gen";
       version = "0.19.0.1";
       sha256 = "1h2phc714rwzx7ai7rjpn5lx06a3kfmqcblqwpc95h47rvin4rsm";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson base blaze-html Cabal code-builder directory fclabels
         filepath hashable haskell-src-exts HStringTemplate hxt json-schema
         pretty process rest-core safe scientific semigroups split text
         uniplate unordered-containers vector
       ];
       testHaskellDepends = [
         base fclabels haskell-src-exts HUnit rest-core test-framework
         test-framework-hunit
       ];
       description = "Documentation and client generation from rest definition";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "rest-happstack" = callPackage
    ({ mkDerivation, base, containers, happstack-server, mtl, rest-core
     , rest-gen, utf8-string
     }:
     mkDerivation {
       pname = "rest-happstack";
       version = "0.3.1";
       sha256 = "1n8krr9lmla28cjsv2mh2w8y4s4290p69vhf21q7ip5zw6qy3hm2";
       revision = "1";
       editedCabalFile = "18awh02ypxw1i7zik9cn1z4h8d8v9xhhpwn1f573k9s44h957vmw";
       libraryHaskellDepends = [
         base containers happstack-server mtl rest-core rest-gen utf8-string
       ];
       description = "Rest driver for Happstack";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "rest-snap" = callPackage
    ({ mkDerivation, base, bytestring, case-insensitive, rest-core
     , safe, snap-core, unordered-containers, uri-encode, utf8-string
     }:
     mkDerivation {
       pname = "rest-snap";
       version = "0.2";
       sha256 = "1z7f24vjzyw3w2kxvrg58s2k470zi4qqkpb72pr8rc4h5dapz51q";
       revision = "1";
       editedCabalFile = "1bz29rs83bfx0p3d2hbbcg623yk082zxanhj7rpgcla9k48gpzl6";
       libraryHaskellDepends = [
         base bytestring case-insensitive rest-core safe snap-core
         unordered-containers uri-encode utf8-string
       ];
       description = "Rest driver for Snap";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "rest-stringmap" = callPackage
    ({ mkDerivation, aeson, base, containers, hashable, hxt
     , json-schema, tostring, unordered-containers
     }:
     mkDerivation {
       pname = "rest-stringmap";
       version = "0.2.0.6";
       sha256 = "0jjj0yam4d4w36lnxk0ci7ylb9ya48y0ag3b54k9ikyg0hps7rb6";
       revision = "7";
       editedCabalFile = "14jqqpxxs7vkrf6syycrg2ymh79gl83z13kq261alw5gy8yjnszv";
       libraryHaskellDepends = [
         aeson base containers hashable hxt json-schema tostring
         unordered-containers
       ];
       description = "Maps with stringy keys that can be transcoded to JSON and XML";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "rest-types" = callPackage
    ({ mkDerivation, aeson, base, case-insensitive, generic-aeson
     , generic-xmlpickler, hxt, json-schema, rest-stringmap, text, uuid
     }:
     mkDerivation {
       pname = "rest-types";
       version = "1.14.0.1";
       sha256 = "0chb91gb3xvfp7k4sbsp07ri2m5x26qj4q2bq0ldkxpk06jicmb4";
       revision = "3";
       editedCabalFile = "15s12yj6blayhzi1vk6gf11pg0ppkpq6kz9r53llj34f5b8729vv";
       libraryHaskellDepends = [
         aeson base case-insensitive generic-aeson generic-xmlpickler hxt
         json-schema rest-stringmap text uuid
       ];
       description = "Silk Rest Framework Types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "rest-wai" = callPackage
    ({ mkDerivation, base, bytestring, case-insensitive, containers
     , http-types, mime-types, mtl, rest-core, text
     , unordered-containers, wai
     }:
     mkDerivation {
       pname = "rest-wai";
       version = "0.2";
       sha256 = "04vli4b90959phhbx3w25bnmjmiqmhn2gnddrk9cc93xadf4bmwj";
       revision = "2";
       editedCabalFile = "1iriyx31i11ybcnsj850lsdkajc1kcvflpg20pd9ljzly4haydxc";
       libraryHaskellDepends = [
         base bytestring case-insensitive containers http-types mime-types
         mtl rest-core text unordered-containers wai
       ];
       description = "Rest driver for WAI applications";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "rethinkdb" = callPackage
    ({ mkDerivation, aeson, async, attoparsec, base, base64-bytestring
     , binary, bytestring, containers, criterion, data-default, doctest
     , mtl, network, scientific, text, time, unordered-containers
     , utf8-string, vector
     }:
     mkDerivation {
       pname = "rethinkdb";
       version = "2.2.0.3";
       sha256 = "10qidz08rd1g1iirx6yvvjhg5h04iin7nng7f9ws0vrdamv90jf5";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base base64-bytestring binary bytestring containers
         data-default mtl network scientific text time unordered-containers
         utf8-string vector
       ];
       executableHaskellDepends = [ attoparsec base text ];
       testHaskellDepends = [ base doctest ];
       benchmarkHaskellDepends = [ aeson async base criterion text ];
       doCheck = false;
       homepage = "http://github.com/atnnn/haskell-rethinkdb";
       description = "A driver for RethinkDB 2.2";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "rethinkdb-client-driver" = callPackage
    ({ mkDerivation, aeson, base, binary, bytestring, containers
     , criterion, hashable, hspec, hspec-smallcheck, mtl, network
     , old-locale, scientific, smallcheck, stm, template-haskell, text
     , time, unordered-containers, vector
     }:
     mkDerivation {
       pname = "rethinkdb-client-driver";
       version = "0.0.22";
       sha256 = "1fvmhplrbm3sqjsz28526dmbc0qjf1s2rb93h4wn06qzksc2w6aa";
       revision = "1";
       editedCabalFile = "0iha32qkj5s29l1790ihwasy6j50gqgxds214v446bim0fqljg6d";
       libraryHaskellDepends = [
         aeson base binary bytestring containers hashable mtl network
         old-locale scientific stm template-haskell text time
         unordered-containers vector
       ];
       testHaskellDepends = [
         base hspec hspec-smallcheck smallcheck text time
         unordered-containers vector
       ];
       benchmarkHaskellDepends = [
         base criterion text time unordered-containers vector
       ];
       doHaddock = false;
       doCheck = false;
       homepage = "https://github.com/wereHamster/rethinkdb-client-driver";
       description = "Client driver for RethinkDB";
       license = stdenv.lib.licenses.mit;
     }) {};
  "retry" = callPackage
    ({ mkDerivation, base, data-default-class, exceptions, random
     , transformers
     }:
     mkDerivation {
       pname = "retry";
       version = "0.7.1";
       sha256 = "107nvvg1h94lf7i1icrc6qgg6d1gq63akijghy1ws2ny04mhz42m";
       libraryHaskellDepends = [
         base data-default-class exceptions random transformers
       ];
       doCheck = false;
       homepage = "http://github.com/Soostone/retry";
       description = "Retry combinators for monadic actions that may fail";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "rev-state" = callPackage
    ({ mkDerivation, base, mtl }:
     mkDerivation {
       pname = "rev-state";
       version = "0.1.2";
       sha256 = "06gry2ysvdg5q0b86gr8i86xsbxw2yrnld9g7rcp7mppswwhw1zf";
       revision = "2";
       editedCabalFile = "0dfiwf4808vjhayv7xr058rzwl6jmsmhzy03mk48m9kmlqibk3fy";
       libraryHaskellDepends = [ base mtl ];
       testHaskellDepends = [ base ];
       homepage = "https://github.com/DanBurton/rev-state#readme";
       description = "Reverse State monad transformer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "rfc5051" = callPackage
    ({ mkDerivation, base, bytestring, containers }:
     mkDerivation {
       pname = "rfc5051";
       version = "0.1.0.3";
       sha256 = "0av4c3qvwbkbzrjrrg601ay9pds7wscqqp2lc2z78mv2lllap3g3";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base bytestring containers ];
       executableHaskellDepends = [ base bytestring containers ];
       description = "Simple unicode collation as per RFC5051";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "riak" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, binary, blaze-builder
     , bytestring, containers, enclosed-exceptions, exceptions, HUnit
     , mersenne-random-pure64, monad-control, network, protocol-buffers
     , pureMD5, QuickCheck, random, random-shuffle, resource-pool
     , riak-protobuf, tasty, tasty-hunit, tasty-quickcheck, text, time
     , transformers, vector
     }:
     mkDerivation {
       pname = "riak";
       version = "0.9.1.1";
       sha256 = "0gz4h4fcvlcm8vlnfll8mzynb2231nn2ki5rn1mxfl338zm9f1ch";
       libraryHaskellDepends = [
         aeson attoparsec base binary blaze-builder bytestring containers
         enclosed-exceptions exceptions mersenne-random-pure64 monad-control
         network protocol-buffers pureMD5 random random-shuffle
         resource-pool riak-protobuf text time transformers vector
       ];
       testHaskellDepends = [
         base bytestring containers HUnit QuickCheck tasty tasty-hunit
         tasty-quickcheck text
       ];
       doCheck = false;
       homepage = "http://github.com/markhibberd/riak-haskell-client";
       description = "A Haskell client for the Riak decentralized data store";
       license = "unknown";
     }) {};
  "riak-protobuf" = callPackage
    ({ mkDerivation, array, base, parsec, protocol-buffers
     , protocol-buffers-descriptor
     }:
     mkDerivation {
       pname = "riak-protobuf";
       version = "0.20.0.0";
       sha256 = "1bknf4dxavd7h5mrvils4vhdbyszjiw43iylwmxkv1k7bbbrjajl";
       libraryHaskellDepends = [
         array base parsec protocol-buffers protocol-buffers-descriptor
       ];
       homepage = "http://github.com/markhibberd/riak-haskell-client";
       description = "Haskell types for the Riak protocol buffer API";
       license = "unknown";
     }) {};
  "rose-trees" = callPackage
    ({ mkDerivation, base, containers, criterion, deepseq, mtl
     , QuickCheck, quickcheck-instances, semigroupoids, semigroups, sets
     , tasty, tasty-quickcheck, witherable
     }:
     mkDerivation {
       pname = "rose-trees";
       version = "0.0.3";
       sha256 = "0czf06p7qdnal6c4y20jnijh6yqsg14xkazkmk9f6sfwaq260wzk";
       libraryHaskellDepends = [
         base containers deepseq mtl QuickCheck quickcheck-instances
         semigroupoids semigroups sets witherable
       ];
       testHaskellDepends = [
         base containers deepseq QuickCheck quickcheck-instances
         semigroupoids semigroups sets tasty tasty-quickcheck witherable
       ];
       benchmarkHaskellDepends = [
         base containers criterion deepseq mtl QuickCheck
         quickcheck-instances semigroupoids semigroups sets witherable
       ];
       description = "A collection of rose tree structures";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "rosezipper" = callPackage
    ({ mkDerivation, base, containers }:
     mkDerivation {
       pname = "rosezipper";
       version = "0.2";
       sha256 = "1g6ppa8cappdbq9923lsac504dfjh0ks64gbm6qbihrc34f4zavc";
       libraryHaskellDepends = [ base containers ];
       description = "Generic zipper implementation for Data.Tree";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "runmemo" = callPackage
    ({ mkDerivation, base, data-memocombinators, time }:
     mkDerivation {
       pname = "runmemo";
       version = "1.0.0.1";
       sha256 = "12fn0lsil0rj0pj0ixzppsdw2fmj0cnzci4fh11z9rcggwbz6pms";
       testHaskellDepends = [ base data-memocombinators time ];
       homepage = "https://github.com/DanBurton/runmemo";
       description = "A simple memoization helper library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "rvar" = callPackage
    ({ mkDerivation, base, MonadPrompt, mtl, random-source
     , transformers
     }:
     mkDerivation {
       pname = "rvar";
       version = "0.2.0.2";
       sha256 = "1n24fl27mrm7cndp8b646b9c5hjm3hf5m12y9ni0f850dd739jm4";
       libraryHaskellDepends = [
         base MonadPrompt mtl random-source transformers
       ];
       homepage = "https://github.com/mokus0/random-fu";
       description = "Random Variables";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "s3-signer" = callPackage
    ({ mkDerivation, base, base64-bytestring, cryptohash, http-types
     , time, utf8-string
     }:
     mkDerivation {
       pname = "s3-signer";
       version = "0.3.0.0";
       sha256 = "15647fs38blg37s0407ybxlmzwdhmxz3sk914p21g90i2bw5gsc9";
       libraryHaskellDepends = [
         base base64-bytestring cryptohash http-types time utf8-string
       ];
       homepage = "https://github.com/dmjio/s3-signer";
       description = "Pre-signed Amazon S3 URLs";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "safe" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "safe";
       version = "0.3.9";
       sha256 = "1jdnp5zhvalf1xy8i872n29nljfjz6lnl9ghj80ffisrnnkrwcfh";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/ndmitchell/safe#readme";
       description = "Library of safe (exception free) functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "safecopy" = callPackage
    ({ mkDerivation, array, base, bytestring, cereal, containers, lens
     , lens-action, old-time, quickcheck-instances, tasty
     , tasty-quickcheck, template-haskell, text, time, vector
     }:
     mkDerivation {
       pname = "safecopy";
       version = "0.9.0.1";
       sha256 = "0cahwvgngzmfg0nx6qvccf6r0d5fzwwvv0brvgpd1dbc0vv7il9z";
       libraryHaskellDepends = [
         array base bytestring cereal containers old-time template-haskell
         text time vector
       ];
       testHaskellDepends = [
         array base cereal containers lens lens-action quickcheck-instances
         tasty tasty-quickcheck template-haskell time vector
       ];
       doCheck = false;
       homepage = "http://acid-state.seize.it/safecopy";
       description = "Binary serialization with version control";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "sandi" = callPackage
    ({ mkDerivation, base, bytestring, conduit, criterion, exceptions
     , HUnit, tasty, tasty-hunit, tasty-quickcheck, tasty-th
     }:
     mkDerivation {
       pname = "sandi";
       version = "0.3.6";
       sha256 = "1112pxbp41bnvn8yy90404rrl7q5qdifyfa2wj6j65wa3d8b7z7s";
       libraryHaskellDepends = [ base bytestring conduit exceptions ];
       testHaskellDepends = [
         base bytestring HUnit tasty tasty-hunit tasty-quickcheck tasty-th
       ];
       benchmarkHaskellDepends = [ base bytestring criterion ];
       homepage = "http://hackage.haskell.org/package/sandi";
       description = "Data encoding library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "sandman" = callPackage
    ({ mkDerivation, base, Cabal, containers, directory, filepath
     , optparse-applicative, process, text, unix-compat
     }:
     mkDerivation {
       pname = "sandman";
       version = "0.2.0.0";
       sha256 = "0ikxrih5da6ly6lcwz7k9b77rzdp3flilg90nh23rhsyrs35m4r5";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         base Cabal containers directory filepath optparse-applicative
         process text unix-compat
       ];
       doHaddock = false;
       homepage = "https://github.com/abhinav/sandman";
       description = "Manages Cabal sandboxes to avoid rebuilding packages";
       license = stdenv.lib.licenses.mit;
     }) {};
  "sbv" = callPackage
    ({ mkDerivation, array, async, base, base-compat, containers
     , crackNum, data-binary-ieee754, deepseq, directory, filepath
     , HUnit, mtl, old-time, pretty, process, QuickCheck, random, syb
     }:
     mkDerivation {
       pname = "sbv";
       version = "5.11";
       sha256 = "03f9rwc2vymy5qh07m9s2r4x140i42ffqppj70vbgpyv3ks97ply";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         array async base base-compat containers crackNum
         data-binary-ieee754 deepseq directory filepath mtl old-time pretty
         process QuickCheck random syb
       ];
       executableHaskellDepends = [
         base data-binary-ieee754 directory filepath HUnit process syb
       ];
       testHaskellDepends = [
         base data-binary-ieee754 directory filepath HUnit syb
       ];
       homepage = "http://leventerkok.github.com/sbv/";
       description = "SMT Based Verification: Symbolic Haskell theorem prover using SMT solving";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "scalpel" = callPackage
    ({ mkDerivation, base, bytestring, curl, HUnit, regex-base
     , regex-tdfa, tagsoup, text
     }:
     mkDerivation {
       pname = "scalpel";
       version = "0.2.1.1";
       sha256 = "1mksl4kd17apivf88wwgm3fzqvk9i85y4zri423hm3mrn7wxbjpx";
       libraryHaskellDepends = [
         base bytestring curl regex-base regex-tdfa tagsoup text
       ];
       testHaskellDepends = [ base HUnit regex-base regex-tdfa tagsoup ];
       homepage = "https://github.com/fimad/scalpel";
       description = "A high level web scraping library for Haskell";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "scientific" = callPackage
    ({ mkDerivation, base, binary, bytestring, containers, deepseq
     , ghc-prim, hashable, integer-gmp, QuickCheck, smallcheck, tasty
     , tasty-ant-xml, tasty-hunit, tasty-quickcheck, tasty-smallcheck
     , text, vector
     }:
     mkDerivation {
       pname = "scientific";
       version = "0.3.4.6";
       sha256 = "10pk3l32iqr88pad2ijz5050jiqsjzk16w8dygssxkkrndr5rldx";
       revision = "1";
       editedCabalFile = "19890dl41agafga4byab2z3jaaxk6ngiq9wi78gz82qspkcqw0kb";
       libraryHaskellDepends = [
         base binary bytestring containers deepseq ghc-prim hashable
         integer-gmp text vector
       ];
       testHaskellDepends = [
         base binary bytestring QuickCheck smallcheck tasty tasty-ant-xml
         tasty-hunit tasty-quickcheck tasty-smallcheck text
       ];
       homepage = "https://github.com/basvandijk/scientific";
       description = "Numbers represented using scientific notation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "scotty" = callPackage
    ({ mkDerivation, aeson, async, base, blaze-builder, bytestring
     , case-insensitive, data-default-class, directory, hspec, hspec-wai
     , http-types, lifted-base, monad-control, mtl, nats, network
     , regex-compat, text, transformers, transformers-base
     , transformers-compat, wai, wai-extra, warp
     }:
     mkDerivation {
       pname = "scotty";
       version = "0.10.2";
       sha256 = "0jlw82brnvc4cbpws0dq3qxn4rnb3z6rx6cfiarqwas14x4k3kl6";
       revision = "4";
       editedCabalFile = "161a7rjrlqbyg2k0s60vp08l0rvjmpfcmgq17i42s093xav6bjk1";
       libraryHaskellDepends = [
         aeson base blaze-builder bytestring case-insensitive
         data-default-class http-types monad-control mtl nats network
         regex-compat text transformers transformers-base
         transformers-compat wai wai-extra warp
       ];
       testHaskellDepends = [
         async base data-default-class directory hspec hspec-wai http-types
         lifted-base network text wai
       ];
       homepage = "https://github.com/scotty-web/scotty";
       description = "Haskell web framework inspired by Ruby's Sinatra, using WAI and Warp";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "scrypt" = callPackage
    ({ mkDerivation, base, base64-bytestring, bytestring, entropy
     , HUnit, QuickCheck, test-framework, test-framework-hunit
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "scrypt";
       version = "0.5.0";
       sha256 = "1cnrjdq1ncv224dlk236a7w29na8r019d2acrsxlsaiy74iadh1y";
       libraryHaskellDepends = [
         base base64-bytestring bytestring entropy
       ];
       testHaskellDepends = [
         base bytestring HUnit QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2
       ];
       homepage = "http://github.com/informatikr/scrypt";
       description = "Stronger password hashing via sequential memory-hard functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "sdl2" = callPackage
    ({ mkDerivation, base, bytestring, exceptions, linear, SDL2
     , StateVar, text, transformers, vector
     }:
     mkDerivation {
       pname = "sdl2";
       version = "2.1.1";
       sha256 = "1bggsyqi9zp0xcy991q6z2i6d6n0g4jivk2ragi0pnpx88lg0f3c";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base bytestring exceptions linear StateVar text transformers vector
       ];
       librarySystemDepends = [ SDL2 ];
       libraryPkgconfigDepends = [ SDL2 ];
       description = "Both high- and low-level bindings to the SDL library (version 2.0.3).";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) SDL2;};
  "second-transfer" = callPackage
    ({ mkDerivation, attoparsec, base, base16-bytestring, binary
     , bytestring, clock, conduit, containers, cpphs, deepseq
     , exceptions, hashable, hashtables, hslogger, http2, HUnit, lens
     , network, network-uri, openssl, pqueue, SafeSemaphore, stm, text
     , time, transformers, unordered-containers
     }:
     mkDerivation {
       pname = "second-transfer";
       version = "0.7.1.0";
       sha256 = "0psi7668xr6azzn8majiy4vgngnai367dkha6vbyzlzj3vaq1rzc";
       libraryHaskellDepends = [
         attoparsec base base16-bytestring binary bytestring clock conduit
         containers deepseq exceptions hashable hashtables hslogger http2
         lens network network-uri pqueue SafeSemaphore stm text time
         transformers
       ];
       librarySystemDepends = [ openssl ];
       libraryToolDepends = [ cpphs ];
       testHaskellDepends = [
         attoparsec base base16-bytestring binary bytestring clock conduit
         containers deepseq exceptions hashable hashtables hslogger http2
         HUnit lens network network-uri pqueue SafeSemaphore stm text time
         transformers unordered-containers
       ];
       testToolDepends = [ cpphs ];
       doCheck = false;
       homepage = "https://www.httptwo.com/second-transfer/";
       description = "Second Transfer HTTP/2 web server";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) openssl;};
  "securemem" = callPackage
    ({ mkDerivation, base, byteable, bytestring, ghc-prim, memory }:
     mkDerivation {
       pname = "securemem";
       version = "0.1.9";
       sha256 = "0dkhhjxa7njc3qbgvd5a23rkvr39vj2kn2a9nk6yjg7a8b2hvdpy";
       libraryHaskellDepends = [
         base byteable bytestring ghc-prim memory
       ];
       homepage = "http://github.com/vincenthz/hs-securemem";
       description = "abstraction to an auto scrubbing and const time eq, memory chunk";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "semigroupoid-extras" = callPackage
    ({ mkDerivation, base, profunctors, semigroupoids }:
     mkDerivation {
       pname = "semigroupoid-extras";
       version = "5";
       sha256 = "0ciq1jnc0d9d8jph9103v04vphiz7xqa69a8f4dmmcf3bjsk6bhh";
       libraryHaskellDepends = [ base profunctors semigroupoids ];
       homepage = "http://github.com/ekmett/semigroupoid-extras";
       description = "Semigroupoids that depend on PolyKinds";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "semigroupoids" = callPackage
    ({ mkDerivation, base, base-orphans, bifunctors, comonad
     , containers, contravariant, directory, distributive, doctest
     , filepath, semigroups, tagged, transformers, transformers-compat
     }:
     mkDerivation {
       pname = "semigroupoids";
       version = "5.0.1";
       sha256 = "05nnvcfa59qfqix9rhvkr66jp05wls17ki0rmblyn0nwn2w8ks8c";
       revision = "2";
       editedCabalFile = "14s5yk006n3k0m2d9gn9clfh0qp65lcv4japrfn6yyp1zygyz05m";
       libraryHaskellDepends = [
         base base-orphans bifunctors comonad containers contravariant
         distributive semigroups tagged transformers transformers-compat
       ];
       testHaskellDepends = [ base directory doctest filepath ];
       homepage = "http://github.com/ekmett/semigroupoids";
       description = "Semigroupoids: Category sans id";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "semigroups" = callPackage
    ({ mkDerivation, base, binary, bytestring, containers, deepseq
     , hashable, tagged, text, transformers, unordered-containers
     }:
     mkDerivation {
       pname = "semigroups";
       version = "0.18.1";
       sha256 = "01z8rrxfqd1jmk0wh2nyqpyi0mml016ci39p5hcm6yj95gxhfxmf";
       revision = "1";
       editedCabalFile = "0gdfsks1s6jabhjig62gamdn1nm1xd8hnshw3hwhaxsir7fb7lkx";
       libraryHaskellDepends = [
         base binary bytestring containers deepseq hashable tagged text
         transformers unordered-containers
       ];
       homepage = "http://github.com/ekmett/semigroups/";
       description = "Anything that associates";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "semver" = callPackage
    ({ mkDerivation, attoparsec, base, criterion, deepseq, tasty
     , tasty-hunit, text
     }:
     mkDerivation {
       pname = "semver";
       version = "0.3.3.1";
       sha256 = "1cf8dcxq4s479f826drncqc4hd07hv330zsipkrn0vc30sbkdlrn";
       libraryHaskellDepends = [ attoparsec base deepseq text ];
       testHaskellDepends = [ base tasty tasty-hunit text ];
       benchmarkHaskellDepends = [ base criterion text ];
       homepage = "https://github.com/brendanhay/semver";
       description = "Representation, manipulation, and de/serialisation of Semantic Versions";
       license = "unknown";
     }) {};
  "sendfile" = callPackage
    ({ mkDerivation, base, bytestring, network }:
     mkDerivation {
       pname = "sendfile";
       version = "0.7.9";
       sha256 = "0hnw1ym81cff49dwww19kgbs4s0kpandbvn6h5cml3y0p1nxybqh";
       libraryHaskellDepends = [ base bytestring network ];
       homepage = "http://hub.darcs.net/stepcut/sendfile";
       description = "A portable sendfile library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "seqalign" = callPackage
    ({ mkDerivation, base, bytestring, vector }:
     mkDerivation {
       pname = "seqalign";
       version = "0.2.0.4";
       sha256 = "01a3fhymyp7279hym03zzz6qkh5h47nq5y1xglar0n46imjr98af";
       libraryHaskellDepends = [ base bytestring vector ];
       description = "Sequence Alignment";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "seqloc" = callPackage
    ({ mkDerivation, attoparsec, base, biocore, bytestring, hashable
     , QuickCheck, random, unordered-containers, vector
     }:
     mkDerivation {
       pname = "seqloc";
       version = "0.6.1.1";
       sha256 = "1hsm9y6q0g7ixnqj562a33lmyka4k7f778fndcmn25v4m1myfda4";
       libraryHaskellDepends = [
         attoparsec base biocore bytestring hashable unordered-containers
         vector
       ];
       testHaskellDepends = [
         attoparsec base biocore bytestring hashable QuickCheck random
         unordered-containers vector
       ];
       homepage = "http://www.ingolia-lab.org/seqloc-tutorial.html";
       description = "Handle sequence locations for bioinformatics";
       license = stdenv.lib.licenses.mit;
     }) {};
  "serf" = callPackage
    ({ mkDerivation, attoparsec, base, conduit, conduit-extra, mtl
     , operational, process, resourcet, text
     }:
     mkDerivation {
       pname = "serf";
       version = "0.1.1.0";
       sha256 = "0ry0shqmazxcsjxsh6amvz2fky2fy3wwlck7d331j8csz7fwdjfn";
       libraryHaskellDepends = [
         attoparsec base conduit conduit-extra mtl operational process
         resourcet text
       ];
       homepage = "http://github.com/sanetracker/serf";
       description = "Interact with Serf via Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};
  "servant" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, bytestring
     , bytestring-conversion, case-insensitive, directory, doctest
     , filemanip, filepath, hspec, http-media, http-types, network-uri
     , parsec, QuickCheck, quickcheck-instances, string-conversions
     , text, url
     }:
     mkDerivation {
       pname = "servant";
       version = "0.4.4.6";
       sha256 = "0spf8nhygg0pxay8843kv0k9iyxzw5ijavc4v4xrr02gyw9bmpka";
       revision = "1";
       editedCabalFile = "0sxc2yvjzvh6a2wkibki446c90m53s2qi4smp9ikgf3n228ij6c2";
       libraryHaskellDepends = [
         aeson attoparsec base bytestring bytestring-conversion
         case-insensitive http-media http-types network-uri
         string-conversions text
       ];
       testHaskellDepends = [
         aeson attoparsec base bytestring directory doctest filemanip
         filepath hspec parsec QuickCheck quickcheck-instances
         string-conversions text url
       ];
       homepage = "http://haskell-servant.github.io/";
       description = "A family of combinators for defining webservices APIs";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "servant-JuicyPixels" = callPackage
    ({ mkDerivation, base, bytestring, http-media, JuicyPixels, servant
     , servant-server, wai, warp
     }:
     mkDerivation {
       pname = "servant-JuicyPixels";
       version = "0.3.0.0";
       sha256 = "10cs6lbf3prm2k18n45n0fdk17k3lrak3i7g2vdnbx4cqgjlj3f8";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring http-media JuicyPixels servant
       ];
       executableHaskellDepends = [
         base JuicyPixels servant servant-server wai warp
       ];
       homepage = "https://github.com/tvh/servant-JuicyPixels";
       description = "Servant support for JuicyPixels";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "servant-blaze" = callPackage
    ({ mkDerivation, base, blaze-html, http-media, servant }:
     mkDerivation {
       pname = "servant-blaze";
       version = "0.4.4.6";
       sha256 = "149zd57khq0i50xb0i7vjr3gcczdnfprgh1k07aryrs3gc0c8zpg";
       libraryHaskellDepends = [ base blaze-html http-media servant ];
       homepage = "http://haskell-servant.github.io/";
       description = "Blaze-html support for servant";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "servant-client" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, bytestring, deepseq
     , either, exceptions, hspec, http-client, http-client-tls
     , http-media, http-types, HUnit, network, network-uri, QuickCheck
     , safe, servant, servant-server, string-conversions, text
     , transformers, wai, warp
     }:
     mkDerivation {
       pname = "servant-client";
       version = "0.4.4.6";
       sha256 = "10w3812rjpgrda3hd8pm77m520w8h4136b63bb73z5j45x34qq64";
       revision = "2";
       editedCabalFile = "1rdjyfif484vsvxfxhaygdrvsj6qcfgahwjvfy1r43b78wxgsg3g";
       libraryHaskellDepends = [
         aeson attoparsec base bytestring either exceptions http-client
         http-client-tls http-media http-types network-uri safe servant
         string-conversions text transformers
       ];
       testHaskellDepends = [
         aeson base bytestring deepseq either hspec http-client http-media
         http-types HUnit network QuickCheck servant servant-server text wai
         warp
       ];
       homepage = "http://haskell-servant.github.io/";
       description = "automatical derivation of querying functions for servant webservices";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "servant-docs" = callPackage
    ({ mkDerivation, aeson, base, bytestring, bytestring-conversion
     , case-insensitive, hashable, hspec, http-media, http-types, lens
     , servant, string-conversions, text, unordered-containers
     }:
     mkDerivation {
       pname = "servant-docs";
       version = "0.4.4.6";
       sha256 = "0azx1v4zp4xd67myp6hv19d1nnpvgc8mqnhpgk3a2mcgx44i4fmw";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring bytestring-conversion case-insensitive hashable
         http-media http-types lens servant string-conversions text
         unordered-containers
       ];
       executableHaskellDepends = [
         aeson base bytestring-conversion lens servant string-conversions
         text
       ];
       testHaskellDepends = [
         aeson base hspec lens servant string-conversions
       ];
       homepage = "http://haskell-servant.github.io/";
       description = "generate API docs for your servant webservice";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "servant-jquery" = callPackage
    ({ mkDerivation, aeson, base, charset, filepath, hspec
     , hspec-expectations, language-ecmascript, lens, servant
     , servant-server, stm, text, transformers, warp
     }:
     mkDerivation {
       pname = "servant-jquery";
       version = "0.4.4.6";
       sha256 = "0zbyh875pa8pzww8xrbk8rhp70xfdivdm54vxa47w9lagpylw53d";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base charset lens servant text ];
       executableHaskellDepends = [
         aeson base filepath servant servant-server stm transformers warp
       ];
       testHaskellDepends = [
         base hspec hspec-expectations language-ecmascript lens servant
       ];
       homepage = "http://haskell-servant.github.io/";
       description = "Automatically derive (jquery) javascript functions to query servant webservices";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "servant-server" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, bytestring
     , bytestring-conversion, directory, doctest, either, exceptions
     , filemanip, filepath, hspec, hspec-wai, http-types, mmorph, mtl
     , network, network-uri, parsec, QuickCheck, safe, servant, split
     , string-conversions, system-filepath, temporary, text
     , transformers, wai, wai-app-static, wai-extra, warp
     }:
     mkDerivation {
       pname = "servant-server";
       version = "0.4.4.6";
       sha256 = "0jvahnc14s8zbx7m44gg0r6wm0pknk7gz8rc96gqmf6bii8vkm84";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson attoparsec base bytestring either filepath http-types mmorph
         mtl network-uri safe servant split string-conversions
         system-filepath text transformers wai wai-app-static warp
       ];
       executableHaskellDepends = [ aeson base servant text wai warp ];
       testHaskellDepends = [
         aeson base bytestring bytestring-conversion directory doctest
         either exceptions filemanip filepath hspec hspec-wai http-types mtl
         network parsec QuickCheck servant string-conversions temporary text
         transformers wai wai-extra warp
       ];
       homepage = "http://haskell-servant.github.io/";
       description = "A family of combinators for defining webservices APIs and serving them";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "servant-swagger" = callPackage
    ({ mkDerivation, aeson, aeson-qq, base, bytestring, hspec
     , http-media, lens, servant, swagger2, text, time
     , unordered-containers
     }:
     mkDerivation {
       pname = "servant-swagger";
       version = "0.1.2";
       sha256 = "06ww3v7pxrp3iw56fx2n8gcjnqpm3nw6d0zysmnjy2xyvaiqkca4";
       libraryHaskellDepends = [
         aeson base bytestring http-media lens servant swagger2 text
         unordered-containers
       ];
       testHaskellDepends = [
         aeson aeson-qq base hspec lens servant swagger2 text time
       ];
       homepage = "https://github.com/dmjio/servant-swagger";
       description = "Generate Swagger specification for your servant API";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "servant-yaml" = callPackage
    ({ mkDerivation, aeson, base, base-compat, bytestring, http-media
     , servant, servant-server, wai, warp, yaml
     }:
     mkDerivation {
       pname = "servant-yaml";
       version = "0.1.0.0";
       sha256 = "011jxvr2i65bf0kmdn0sxkqgfz628a0sfhzphr1rqsmh8sqdj5y9";
       revision = "17";
       editedCabalFile = "1525b9dm2g8r2xrisciypi0ihm3rmbs3g3f9nvg01qwa3q1sxf70";
       libraryHaskellDepends = [
         base bytestring http-media servant yaml
       ];
       testHaskellDepends = [
         aeson base base-compat bytestring http-media servant servant-server
         wai warp yaml
       ];
       homepage = "https://github.com/phadej/servant-yaml#readme";
       description = "Servant support for yaml";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "serversession" = callPackage
    ({ mkDerivation, aeson, base, base64-bytestring, bytestring
     , containers, data-default, hashable, hspec, nonce, path-pieces
     , QuickCheck, text, time, transformers, unordered-containers
     }:
     mkDerivation {
       pname = "serversession";
       version = "1.0.1";
       sha256 = "08j8v6a2018bmvwsb7crdg0ajak74jggb073pdpx9s0pf3cfzyrz";
       libraryHaskellDepends = [
         aeson base base64-bytestring bytestring data-default hashable nonce
         path-pieces text time transformers unordered-containers
       ];
       testHaskellDepends = [
         aeson base base64-bytestring bytestring containers data-default
         hspec nonce path-pieces QuickCheck text time transformers
         unordered-containers
       ];
       homepage = "https://github.com/yesodweb/serversession";
       description = "Secure, modular server-side sessions";
       license = stdenv.lib.licenses.mit;
     }) {};
  "serversession-backend-acid-state" = callPackage
    ({ mkDerivation, acid-state, base, containers, hspec, mtl, safecopy
     , serversession, unordered-containers
     }:
     mkDerivation {
       pname = "serversession-backend-acid-state";
       version = "1.0.3";
       sha256 = "1rkw5an7lwx05063caqjhvf449jxij2zrbymg64p600mngb1flq0";
       libraryHaskellDepends = [
         acid-state base containers mtl safecopy serversession
         unordered-containers
       ];
       testHaskellDepends = [
         acid-state base containers hspec mtl safecopy serversession
         unordered-containers
       ];
       homepage = "https://github.com/yesodweb/serversession";
       description = "Storage backend for serversession using acid-state";
       license = stdenv.lib.licenses.mit;
     }) {};
  "serversession-backend-persistent" = callPackage
    ({ mkDerivation, aeson, base, base64-bytestring, bytestring, cereal
     , hspec, monad-logger, path-pieces, persistent
     , persistent-postgresql, persistent-sqlite, persistent-template
     , QuickCheck, resource-pool, serversession, tagged, text, time
     , transformers, unordered-containers
     }:
     mkDerivation {
       pname = "serversession-backend-persistent";
       version = "1.0.2";
       sha256 = "0jxysgxv1cyr02s3j2hffndfcrswqmm4gdnfl8zqw5k4bp2v5pqr";
       libraryHaskellDepends = [
         aeson base base64-bytestring bytestring cereal path-pieces
         persistent serversession tagged text time transformers
         unordered-containers
       ];
       testHaskellDepends = [
         aeson base base64-bytestring bytestring cereal hspec monad-logger
         path-pieces persistent persistent-postgresql persistent-sqlite
         persistent-template QuickCheck resource-pool serversession text
         time transformers unordered-containers
       ];
       homepage = "https://github.com/yesodweb/serversession";
       description = "Storage backend for serversession using persistent and an RDBMS";
       license = stdenv.lib.licenses.mit;
     }) {};
  "serversession-backend-redis" = callPackage
    ({ mkDerivation, base, bytestring, hedis, hspec, path-pieces
     , serversession, tagged, text, time, transformers
     , unordered-containers
     }:
     mkDerivation {
       pname = "serversession-backend-redis";
       version = "1.0.1";
       sha256 = "0kxg0kqzndacarja2v48f777ns3s3rabagqv23biyhrfz9h0icxl";
       libraryHaskellDepends = [
         base bytestring hedis path-pieces serversession tagged text time
         transformers unordered-containers
       ];
       testHaskellDepends = [
         base bytestring hedis hspec path-pieces serversession text time
         transformers unordered-containers
       ];
       doCheck = false;
       homepage = "https://github.com/yesodweb/serversession";
       description = "Storage backend for serversession using Redis";
       license = stdenv.lib.licenses.mit;
     }) {};
  "serversession-frontend-snap" = callPackage
    ({ mkDerivation, base, bytestring, nonce, path-pieces
     , serversession, snap, snap-core, text, time, transformers
     , unordered-containers
     }:
     mkDerivation {
       pname = "serversession-frontend-snap";
       version = "1.0";
       sha256 = "1n29c3jfv61fz9kfc4zjwj7df1fll74l2kqccxmg4id8jpsrywci";
       libraryHaskellDepends = [
         base bytestring nonce path-pieces serversession snap snap-core text
         time transformers unordered-containers
       ];
       homepage = "https://github.com/yesodweb/serversession";
       description = "Snap bindings for serversession";
       license = stdenv.lib.licenses.mit;
     }) {};
  "serversession-frontend-wai" = callPackage
    ({ mkDerivation, base, bytestring, cookie, data-default
     , path-pieces, serversession, text, time, transformers
     , unordered-containers, vault, wai, wai-session
     }:
     mkDerivation {
       pname = "serversession-frontend-wai";
       version = "1.0";
       sha256 = "0rxifhjirhmhk1x14m6lvpv6dl32g179i4i3xi3dq59r7l716j0b";
       libraryHaskellDepends = [
         base bytestring cookie data-default path-pieces serversession text
         time transformers unordered-containers vault wai wai-session
       ];
       homepage = "https://github.com/yesodweb/serversession";
       description = "wai-session bindings for serversession";
       license = stdenv.lib.licenses.mit;
     }) {};
  "serversession-frontend-yesod" = callPackage
    ({ mkDerivation, base, bytestring, containers, cookie, data-default
     , path-pieces, serversession, text, time, transformers
     , unordered-containers, wai, yesod-core
     }:
     mkDerivation {
       pname = "serversession-frontend-yesod";
       version = "1.0";
       sha256 = "0lv7gkj4inks98g44n5kqvx5s4c66lmxf7gqfdly54znggglcf86";
       libraryHaskellDepends = [
         base bytestring containers cookie data-default path-pieces
         serversession text time transformers unordered-containers wai
         yesod-core
       ];
       homepage = "https://github.com/yesodweb/serversession";
       description = "Yesod bindings for serversession";
       license = stdenv.lib.licenses.mit;
     }) {};
  "servius" = callPackage
    ({ mkDerivation, base, blaze-builder, blaze-html, bytestring
     , http-types, markdown, shakespeare, text, wai, wai-app-static
     }:
     mkDerivation {
       pname = "servius";
       version = "1.2.0.1";
       sha256 = "00csdy16psd702iy42gsmr1lljch61f3mfbbyjxf46xhnljxff9q";
       revision = "2";
       editedCabalFile = "10553hpnfg9jfvap42vcfha7m8qvlhs7dx3m8qqy944zmpbyabwz";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         base blaze-builder blaze-html bytestring http-types markdown
         shakespeare text wai wai-app-static
       ];
       doHaddock = false;
       homepage = "http://github.com/snoyberg/servius#readme";
       description = "Warp web server with template rendering";
       license = stdenv.lib.licenses.mit;
     }) {};
  "ses-html" = callPackage
    ({ mkDerivation, base, base64-bytestring, blaze-html, byteable
     , bytestring, cryptohash, HsOpenSSL, http-streams, tagsoup, time
     }:
     mkDerivation {
       pname = "ses-html";
       version = "0.3.0.1";
       sha256 = "1kxwr34p87yip54nw14sfr3mlqjn5kknsm5j1h2sr7vxfz4hrkh7";
       libraryHaskellDepends = [
         base base64-bytestring blaze-html byteable bytestring cryptohash
         HsOpenSSL http-streams tagsoup time
       ];
       description = "Send HTML formatted emails using Amazon's SES REST API with blaze";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "set-extra" = callPackage
    ({ mkDerivation, base, containers, mtl, syb }:
     mkDerivation {
       pname = "set-extra";
       version = "1.3.2";
       sha256 = "0lyxz1mnslsq8crc0vnvygz8r5r3iqyl457sjvg2j6lnz132917p";
       libraryHaskellDepends = [ base containers mtl syb ];
       homepage = "https://github.com/ddssff/set-extra";
       description = "Functions that could be added to Data.Set.";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "set-monad" = callPackage
    ({ mkDerivation, base, containers, deepseq }:
     mkDerivation {
       pname = "set-monad";
       version = "0.2.0.0";
       sha256 = "1nxgn8d0qff4s66gcvfrnxjh0aq5q5jk0s453km28457qh946azb";
       libraryHaskellDepends = [ base containers deepseq ];
       description = "Set monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "setenv" = callPackage
    ({ mkDerivation, base, unix }:
     mkDerivation {
       pname = "setenv";
       version = "0.1.1.3";
       sha256 = "0cnbgrvb9byyahb37zlqrj05rj25v190crgcw8wmlgf0mwwxyn73";
       revision = "1";
       editedCabalFile = "0ny4g3kjys0hqg41mnwrsymy1bwhl8l169kis4y4fa58sb06m4f5";
       libraryHaskellDepends = [ base unix ];
       description = "A cross-platform library for setting environment variables";
       license = stdenv.lib.licenses.mit;
     }) {};
  "setlocale" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "setlocale";
       version = "1.0.0.3";
       sha256 = "17n173byca8k5cmqmnzgjk7772ibhg5am5sd1adfp0zd0rcqnqsd";
       revision = "1";
       editedCabalFile = "1x1lzakh7glnc76968zkgpf78n6vxwmxpdvd2gn9kmhkjvjb104i";
       libraryHaskellDepends = [ base ];
       homepage = "https://bitbucket.org/IchUndNichtDu/haskell-setlocale";
       description = "Haskell bindings to setlocale";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "sets" = callPackage
    ({ mkDerivation, base, commutative, composition, containers
     , contravariant, criterion, hashable, invariant, keys, mtl
     , QuickCheck, quickcheck-instances, semigroupoids, semigroups
     , tasty, tasty-hunit, tasty-quickcheck, transformers
     , transformers-base, unordered-containers, witherable
     }:
     mkDerivation {
       pname = "sets";
       version = "0.0.5";
       sha256 = "0yvisa2hxdiqdhkbny1wm7b08hrwhgmqj0hgla8vyp58scc2cxvq";
       revision = "1";
       editedCabalFile = "0kmkmhrs29vz49v4nx72yiif828blhv2h78z7qvyv9664ns9jgva";
       libraryHaskellDepends = [
         base commutative composition containers contravariant hashable
         invariant keys mtl QuickCheck semigroupoids semigroups transformers
         transformers-base unordered-containers witherable
       ];
       testHaskellDepends = [
         base commutative composition containers contravariant hashable
         invariant keys mtl QuickCheck quickcheck-instances semigroupoids
         semigroups tasty tasty-hunit tasty-quickcheck transformers
         transformers-base unordered-containers witherable
       ];
       benchmarkHaskellDepends = [
         base commutative composition containers contravariant criterion
         hashable invariant keys mtl QuickCheck semigroupoids semigroups
         transformers transformers-base unordered-containers witherable
       ];
       description = "Various set implementations in Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};
  "shake" = callPackage
    ({ mkDerivation, base, binary, bytestring, deepseq, directory
     , extra, filepath, hashable, js-flot, js-jquery, old-time, process
     , QuickCheck, random, time, transformers, unix
     , unordered-containers, utf8-string
     }:
     mkDerivation {
       pname = "shake";
       version = "0.15.5";
       sha256 = "18vkyc8h7dpz5d3snfdssfqd1cfp22wnpv63ckrik9p8r4j6i01c";
       revision = "1";
       editedCabalFile = "15s523b74afipjg6im8chkmcvqrgrwzqnksvpdpbbd5n2j6z93kh";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base binary bytestring deepseq directory extra filepath hashable
         js-flot js-jquery old-time process random time transformers unix
         unordered-containers utf8-string
       ];
       executableHaskellDepends = [
         base binary bytestring deepseq directory extra filepath hashable
         js-flot js-jquery old-time process random time transformers unix
         unordered-containers utf8-string
       ];
       testHaskellDepends = [
         base binary bytestring deepseq directory extra filepath hashable
         js-flot js-jquery old-time process QuickCheck random time
         transformers unix unordered-containers utf8-string
       ];
       doCheck = false;
       homepage = "http://shakebuild.com";
       description = "Build system library, like Make, but more accurate dependencies";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "shake-language-c" = callPackage
    ({ mkDerivation, base, data-default-class, directory, doctest
     , fclabels, hspec, process, shake, split, unordered-containers
     }:
     mkDerivation {
       pname = "shake-language-c";
       version = "0.8.4";
       sha256 = "1kmkxa7k2hzaylv58pzhfsvb86zqlj9s8y85k79n6nv45zhpvjy2";
       libraryHaskellDepends = [
         base data-default-class fclabels process shake split
         unordered-containers
       ];
       testHaskellDepends = [ base directory doctest hspec shake ];
       homepage = "https://github.com/samplecount/shake-language-c";
       description = "Utilities for cross-compiling with Shake";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "shakespeare" = callPackage
    ({ mkDerivation, aeson, base, blaze-html, blaze-markup, bytestring
     , containers, directory, exceptions, ghc-prim, hspec, HUnit, parsec
     , process, scientific, template-haskell, text, time, transformers
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "shakespeare";
       version = "2.0.7";
       sha256 = "0s0n503c88snv8sm2svllhi14sjfwp7grc9zj0wpp35nzxp7smks";
       revision = "1";
       editedCabalFile = "0z65n5bbdrrchwpjqhqljzdiv6y210szng3rjz1grcd43j6x6vj6";
       libraryHaskellDepends = [
         aeson base blaze-html blaze-markup bytestring containers directory
         exceptions ghc-prim parsec process scientific template-haskell text
         time transformers unordered-containers vector
       ];
       testHaskellDepends = [
         aeson base blaze-html blaze-markup bytestring containers directory
         exceptions ghc-prim hspec HUnit parsec process template-haskell
         text time transformers
       ];
       homepage = "http://www.yesodweb.com/book/shakespearean-templates";
       description = "A toolkit for making compile-time interpolated templates";
       license = stdenv.lib.licenses.mit;
     }) {};
  "shell-conduit" = callPackage
    ({ mkDerivation, async, base, bytestring, conduit, conduit-extra
     , control-monad-loop, directory, filepath, monad-control, monads-tf
     , process, resourcet, semigroups, split, template-haskell, text
     , transformers, transformers-base, unix
     }:
     mkDerivation {
       pname = "shell-conduit";
       version = "4.5.2";
       sha256 = "04kc9gzlqbw3d2pj6qn13pnmmrlmx8nmmj5bvxn7zdmh25nw6ys2";
       libraryHaskellDepends = [
         async base bytestring conduit conduit-extra control-monad-loop
         directory filepath monad-control monads-tf process resourcet
         semigroups split template-haskell text transformers
         transformers-base unix
       ];
       homepage = "https://github.com/chrisdone/shell-conduit";
       description = "Write shell scripts with Conduit";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "shelltestrunner" = callPackage
    ({ mkDerivation, base, cmdargs, Diff, directory, filemanip
     , filepath, HUnit, parsec, pretty-show, process, regex-tdfa, safe
     , test-framework, test-framework-hunit, utf8-string
     }:
     mkDerivation {
       pname = "shelltestrunner";
       version = "1.3.5";
       sha256 = "0ad8sc4md8mp0l0s40yx7qbgaabqzd4nz8lx15ajcdbwr2ffnra2";
       revision = "2";
       editedCabalFile = "1d72n8k72w2mdi3y9s74ydlwxj407mc237albx6zx42lsjx1fw34";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         base cmdargs Diff directory filemanip filepath HUnit parsec
         pretty-show process regex-tdfa safe test-framework
         test-framework-hunit utf8-string
       ];
       doHaddock = false;
       homepage = "http://joyful.com/shelltestrunner";
       description = "A tool for testing command-line programs";
       license = "GPL";
     }) {};
  "shelly" = callPackage
    ({ mkDerivation, async, base, bytestring, containers, directory
     , enclosed-exceptions, exceptions, hspec, HUnit, lifted-async
     , lifted-base, monad-control, mtl, process, system-fileio
     , system-filepath, text, time, transformers, transformers-base
     , unix-compat
     }:
     mkDerivation {
       pname = "shelly";
       version = "1.6.5";
       sha256 = "1p0wny2wrmqnrndg2agz111sgm9aljqilncqivjygs1x3yq0kzdx";
       revision = "1";
       editedCabalFile = "038pzgvh47xv1yyf0vmxgzxwp293cv23mcg6glywraij20c2i84n";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         async base bytestring containers directory enclosed-exceptions
         exceptions lifted-async lifted-base monad-control mtl process
         system-fileio system-filepath text time transformers
         transformers-base unix-compat
       ];
       testHaskellDepends = [
         async base bytestring containers directory enclosed-exceptions
         exceptions hspec HUnit lifted-async lifted-base monad-control mtl
         process system-fileio system-filepath text time transformers
         transformers-base unix-compat
       ];
       homepage = "https://github.com/yesodweb/Shelly.hs";
       description = "shell-like (systems) programming in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "shortcut-links" = callPackage
    ({ mkDerivation, base, text }:
     mkDerivation {
       pname = "shortcut-links";
       version = "0.4.1.0";
       sha256 = "1mr32y0nxnhdi4qng6m8ascc09yklmlq7xnxjabrja2g7jlkzzim";
       libraryHaskellDepends = [ base text ];
       homepage = "http://github.com/aelve/shortcut-links";
       description = "Link shortcuts for use in text markup";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "should-not-typecheck" = callPackage
    ({ mkDerivation, base, deepseq, hspec, hspec-expectations, HUnit }:
     mkDerivation {
       pname = "should-not-typecheck";
       version = "2.0.1";
       sha256 = "04kx4kj9vhcgpnmgi9ag5hxr04a790j310y3jn0qcg5smqrqinqn";
       libraryHaskellDepends = [ base deepseq HUnit ];
       testHaskellDepends = [
         base deepseq hspec hspec-expectations HUnit
       ];
       homepage = "http://github.com/CRogers/should-not-typecheck";
       description = "A HUnit/hspec assertion library to verify that an expression does not typecheck";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "signal" = callPackage
    ({ mkDerivation, base, unix }:
     mkDerivation {
       pname = "signal";
       version = "0.1.0.3";
       sha256 = "1iwa707xd4g4lycdjr72ygrjy68gyqyvhvl2bbxswgpfxy5i1x8x";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base unix ];
       executableHaskellDepends = [ base ];
       homepage = "http://github.com/pmlodawski/signal";
       description = "Multiplatform signal support for Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};
  "silently" = callPackage
    ({ mkDerivation, base, deepseq, directory, nanospec, temporary }:
     mkDerivation {
       pname = "silently";
       version = "1.2.5";
       sha256 = "0f9qm3f7y0hpxn6mddhhg51mm1r134qkvd2kr8r6192ka1ijbxnf";
       libraryHaskellDepends = [ base deepseq directory ];
       testHaskellDepends = [ base deepseq directory nanospec temporary ];
       homepage = "https://github.com/hspec/silently";
       description = "Prevent or capture writing to stdout and other handles";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "simple" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, base64-bytestring
     , blaze-builder, bytestring, cmdargs, directory, filepath, hspec
     , hspec-contrib, http-types, mime-types, monad-control, mtl
     , process, setenv, simple-templates, text, transformers
     , transformers-base, unordered-containers, vector, wai, wai-extra
     }:
     mkDerivation {
       pname = "simple";
       version = "0.11.1";
       sha256 = "05g8ymvygy0zcsqzmm6h1ws0ayll33cwgfwagssfpficm6wwzhvl";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson base base64-bytestring blaze-builder bytestring directory
         filepath http-types mime-types monad-control mtl simple-templates
         text transformers transformers-base unordered-containers vector wai
         wai-extra
       ];
       executableHaskellDepends = [
         aeson attoparsec base bytestring cmdargs directory filepath process
         setenv simple-templates text unordered-containers vector
       ];
       testHaskellDepends = [
         aeson base base64-bytestring blaze-builder bytestring directory
         filepath hspec hspec-contrib http-types mime-types monad-control
         mtl simple-templates text transformers transformers-base
         unordered-containers vector wai wai-extra
       ];
       homepage = "http://simple.cx";
       description = "A minimalist web framework for the WAI server interface";
       license = stdenv.lib.licenses.lgpl3;
     }) {};
  "simple-postgresql-orm" = callPackage
    ({ mkDerivation, base, bytestring, directory, filepath
     , postgresql-orm, postgresql-simple, resource-pool, simple
     , transformers
     }:
     mkDerivation {
       pname = "simple-postgresql-orm";
       version = "0.9.0.1";
       sha256 = "0j1v64ywfchxjdidy5pb1dzab0qhn516vcy580incw1bminyh3rz";
       libraryHaskellDepends = [
         base bytestring directory filepath postgresql-orm postgresql-simple
         resource-pool simple transformers
       ];
       homepage = "http://simple.cx";
       description = "Connector package for integrating postgresql-orm with the Simple web framework";
       license = stdenv.lib.licenses.lgpl3;
     }) {};
  "simple-reflect" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "simple-reflect";
       version = "0.3.2";
       sha256 = "1dpcf6w3cf1sfl9bnlsx04x7aghw029glj5d05qzrsnms2rlw8iq";
       libraryHaskellDepends = [ base ];
       homepage = "http://twanvl.nl/blog/haskell/simple-reflection-of-expressions";
       description = "Simple reflection of expressions containing variables";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "simple-sendfile" = callPackage
    ({ mkDerivation, base, bytestring, conduit, conduit-extra
     , directory, hspec, HUnit, network, process, resourcet, unix
     }:
     mkDerivation {
       pname = "simple-sendfile";
       version = "0.2.21";
       sha256 = "0xzxcz60gl22w3rxjvw0s6js0g5mi6as1n48gl37dv4lbrn9s8v1";
       libraryHaskellDepends = [ base bytestring network unix ];
       testHaskellDepends = [
         base bytestring conduit conduit-extra directory hspec HUnit network
         process resourcet unix
       ];
       doCheck = false;
       description = "Cross platform library for the sendfile system call";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "simple-session" = callPackage
    ({ mkDerivation, base, base64-bytestring, blaze-builder, byteable
     , bytestring, containers, cookie, cryptohash, http-types, simple
     , transformers, wai, wai-extra
     }:
     mkDerivation {
       pname = "simple-session";
       version = "0.10.1.1";
       sha256 = "1hg7925p14hk1p8v65n5ysd41qyfsccrjm40192bd000m2vrr74a";
       libraryHaskellDepends = [
         base base64-bytestring blaze-builder byteable bytestring containers
         cookie cryptohash http-types simple transformers wai wai-extra
       ];
       homepage = "http://simple.cx";
       description = "Cookie-based session management for the Simple web framework";
       license = stdenv.lib.licenses.lgpl3;
     }) {};
  "simple-smt" = callPackage
    ({ mkDerivation, base, process }:
     mkDerivation {
       pname = "simple-smt";
       version = "0.6.0";
       sha256 = "15dnd6vjf8zl0bi5r4pczxdns8614rvdq1f44sgrmy8crc4x9d0c";
       libraryHaskellDepends = [ base process ];
       description = "A simple way to interact with an SMT solver process";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "simple-templates" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, hspec, HUnit, scientific
     , text, unordered-containers, vector
     }:
     mkDerivation {
       pname = "simple-templates";
       version = "0.8.0.1";
       sha256 = "13na1f29fvc0j452kh0a3fjig3fq4qbklcpdv6bm1fr0cf8hzq98";
       libraryHaskellDepends = [
         aeson attoparsec base scientific text unordered-containers vector
       ];
       testHaskellDepends = [
         aeson attoparsec base hspec HUnit scientific vector
       ];
       homepage = "http://simple.cx";
       description = "A basic template language for the Simple web framework";
       license = stdenv.lib.licenses.lgpl3;
     }) {};
  "singletons" = callPackage
    ({ mkDerivation, base, Cabal, containers, directory, filepath, mtl
     , process, syb, tasty, tasty-golden, template-haskell, th-desugar
     }:
     mkDerivation {
       pname = "singletons";
       version = "2.0.1";
       sha256 = "0hds218jc2vcxmx1nqfxrnriifqqkww62ylafa0vxvk7lcyrs57x";
       libraryHaskellDepends = [
         base containers mtl syb template-haskell th-desugar
       ];
       testHaskellDepends = [
         base Cabal directory filepath process tasty tasty-golden
       ];
       doCheck = false;
       homepage = "http://www.github.com/goldfirere/singletons";
       description = "A framework for generating singleton types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "siphash" = callPackage
    ({ mkDerivation, base, bytestring, cpu, QuickCheck, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "siphash";
       version = "1.0.3";
       sha256 = "1wq5dan30ggjgmravy92ylqjvjv1q7mxrmddr7zc8h6aqr0wx0fg";
       revision = "1";
       editedCabalFile = "1q2dy0ywngm9iv7k6d9gnf860m9hpf62q5qvdzmxw5s629gk4afn";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base bytestring cpu ];
       testHaskellDepends = [
         base bytestring QuickCheck test-framework
         test-framework-quickcheck2
       ];
       homepage = "http://github.com/vincenthz/hs-siphash";
       description = "siphash: a fast short input PRF";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "skein" = callPackage
    ({ mkDerivation, base, bytestring, cereal, crypto-api, filepath
     , hspec, tagged
     }:
     mkDerivation {
       pname = "skein";
       version = "1.0.9.4";
       sha256 = "1jdqdk0rz2wnvw735clnj8jh0a9rkrbqjg7vk3w6wczdql6cm0pq";
       libraryHaskellDepends = [
         base bytestring cereal crypto-api tagged
       ];
       testHaskellDepends = [
         base bytestring cereal crypto-api filepath hspec tagged
       ];
       doCheck = false;
       homepage = "https://github.com/meteficha/skein";
       description = "Skein, a family of cryptographic hash functions. Includes Skein-MAC as well.";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "skeletons" = callPackage
    ({ mkDerivation, ansi-wl-pprint, base, containers, directory
     , filepath, text, tinytemplate, transformers, transformers-compat
     }:
     mkDerivation {
       pname = "skeletons";
       version = "0.4.0";
       sha256 = "1imwdzgrpg2v8nn1c49f5lqs8kd5nj02jidrjjkk850k15fh9m9x";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         ansi-wl-pprint base containers directory filepath text tinytemplate
         transformers transformers-compat
       ];
       doHaddock = false;
       homepage = "https://github.com/jb55/skeletons";
       description = "Manage project skeletons";
       license = stdenv.lib.licenses.mit;
     }) {};
  "slave-thread" = callPackage
    ({ mkDerivation, base, base-prelude, list-t, mmorph
     , partial-handler, stm-containers, transformers
     }:
     mkDerivation {
       pname = "slave-thread";
       version = "1.0.1";
       sha256 = "0mfp6wir54qmypgav2sb6wq30ibxifh15cl63rfpx691ggbnnff1";
       libraryHaskellDepends = [
         base base-prelude list-t mmorph partial-handler stm-containers
         transformers
       ];
       doCheck = false;
       homepage = "https://github.com/nikita-volkov/slave-thread";
       description = "A principal solution to ghost threads and silent exceptions";
       license = stdenv.lib.licenses.mit;
     }) {};
  "slug" = callPackage
    ({ mkDerivation, aeson, base, exceptions, path-pieces, persistent
     , QuickCheck, test-framework, test-framework-quickcheck2, text
     }:
     mkDerivation {
       pname = "slug";
       version = "0.1.2";
       sha256 = "0pcxih4n7ajjpl6xfwh43zxxppr8ffa25bajmqdb3ixsinw8ajjg";
       libraryHaskellDepends = [
         aeson base exceptions path-pieces persistent text
       ];
       testHaskellDepends = [
         base exceptions path-pieces QuickCheck test-framework
         test-framework-quickcheck2 text
       ];
       homepage = "https://github.com/mrkkrp/slug";
       description = "Type-safe slugs for Yesod ecosystem";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "smallcaps" = callPackage
    ({ mkDerivation, attoparsec, base, containers, data-default
     , directory, filepath, parsec, text, transformers
     }:
     mkDerivation {
       pname = "smallcaps";
       version = "0.6.0.1";
       sha256 = "0f4yak1y67pa1ak142265nl09pjz40f1c9ii9r85g6cbxqkpa2xj";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         attoparsec base containers data-default directory filepath parsec
         text transformers
       ];
       executableHaskellDepends = [ base containers data-default text ];
       testHaskellDepends = [
         attoparsec base containers data-default parsec text
       ];
       description = "Flatten camel case text in LaTeX files";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "smallcheck" = callPackage
    ({ mkDerivation, base, ghc-prim, logict, mtl, pretty }:
     mkDerivation {
       pname = "smallcheck";
       version = "1.1.1";
       sha256 = "1ygrabxh40bym3grnzqyfqn96lirnxspb8cmwkkr213239y605sd";
       revision = "1";
       editedCabalFile = "1ykq0hqs1alw86p0ssa6dhsb1a8d4m6bqwibkhvzcd6c28dq975i";
       libraryHaskellDepends = [ base ghc-prim logict mtl pretty ];
       homepage = "https://github.com/feuerbach/smallcheck";
       description = "A property-based testing library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "smoothie" = callPackage
    ({ mkDerivation, aeson, base, linear, text, vector }:
     mkDerivation {
       pname = "smoothie";
       version = "0.4.2.2";
       sha256 = "0cs11qmbnpc7i535202pdvqvmdj89d4gb8djcn8wj7asr8j9nkxy";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ aeson base linear text vector ];
       homepage = "https://github.com/phaazon/smoothie";
       description = "Smooth curves via several interpolation modes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "smsaero" = callPackage
    ({ mkDerivation, aeson, base, either, lens, servant, servant-client
     , servant-docs, text, time
     }:
     mkDerivation {
       pname = "smsaero";
       version = "0.4.1";
       sha256 = "1iggfn6ccbpp5fgck3jgwpvfsv1s5lb2355v6zk1qm6f0vch8scb";
       libraryHaskellDepends = [
         aeson base either lens servant servant-client servant-docs text
         time
       ];
       homepage = "https://github.com/GetShopTV/smsaero";
       description = "SMSAero API and HTTP client based on servant library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "smtLib" = callPackage
    ({ mkDerivation, base, pretty }:
     mkDerivation {
       pname = "smtLib";
       version = "1.0.7";
       sha256 = "1jn2790x7g7n6jm5cfgd692n3l6iafyv0zyz40hx8ykcs4jh2rkf";
       revision = "1";
       editedCabalFile = "13j4kp8cjx20zi6xy55bjdbr39p223s299wgad0xpgch1qz7q7bs";
       libraryHaskellDepends = [ base pretty ];
       description = "A library for working with the SMTLIB format";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "smtp-mail" = callPackage
    ({ mkDerivation, array, base, base16-bytestring, base64-bytestring
     , bytestring, cryptohash, filepath, mime-mail, network, text
     }:
     mkDerivation {
       pname = "smtp-mail";
       version = "0.1.4.5";
       sha256 = "010fbrcbypajwd9fjjc35br9p5axl1pqd0n1v51585ncrlv2icyw";
       libraryHaskellDepends = [
         array base base16-bytestring base64-bytestring bytestring
         cryptohash filepath mime-mail network text
       ];
       homepage = "http://github.com/jhickner/smtp-mail";
       description = "Simple email sending via SMTP";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "snap" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, bytestring, cereal
     , clientsession, comonad, configurator, containers, directory
     , directory-tree, dlist, either, filepath, hashable, heist, lens
     , logict, MonadCatchIO-transformers, mtl, mwc-random, old-time
     , pwstore-fast, regex-posix, snap-core, snap-server, stm
     , template-haskell, text, time, transformers, unordered-containers
     , vector, vector-algorithms, xmlhtml
     }:
     mkDerivation {
       pname = "snap";
       version = "0.14.0.6";
       sha256 = "05xnil6kfxwrnbvg7sigzh7hl8jsfr8cvbjd41z9ywn6ymxzr7zs";
       revision = "4";
       editedCabalFile = "1y88nvc9pha890xzpf8bp7nsi96ca8jq5rpbhj5a6scqffh4khsj";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson attoparsec base bytestring cereal clientsession comonad
         configurator containers directory directory-tree dlist either
         filepath hashable heist lens logict MonadCatchIO-transformers mtl
         mwc-random pwstore-fast regex-posix snap-core snap-server stm text
         time transformers unordered-containers vector vector-algorithms
         xmlhtml
       ];
       executableHaskellDepends = [
         base bytestring containers directory directory-tree filepath
         hashable old-time snap-server template-haskell text
       ];
       homepage = "http://snapframework.com/";
       description = "Top-level package for the Snap Web Framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "snap-core" = callPackage
    ({ mkDerivation, attoparsec, attoparsec-enumerator, base
     , blaze-builder, blaze-builder-enumerator, bytestring
     , bytestring-mmap, case-insensitive, containers, deepseq, directory
     , enumerator, filepath, hashable, HUnit, MonadCatchIO-transformers
     , mtl, old-locale, random, regex-posix, text, time, unix
     , unix-compat, unordered-containers, vector, zlib-enum
     }:
     mkDerivation {
       pname = "snap-core";
       version = "0.9.8.0";
       sha256 = "1nyj4838bk0bfb6ay09a8y1mg35crzxw29swk3sq6y1lkk6hyca7";
       revision = "1";
       editedCabalFile = "116pmq932dmyv5kbh834y2m5bd1yp91cyyfz3mhjbpw31krcj8hw";
       libraryHaskellDepends = [
         attoparsec attoparsec-enumerator base blaze-builder
         blaze-builder-enumerator bytestring bytestring-mmap
         case-insensitive containers deepseq directory enumerator filepath
         hashable HUnit MonadCatchIO-transformers mtl old-locale random
         regex-posix text time unix unix-compat unordered-containers vector
         zlib-enum
       ];
       homepage = "http://snapframework.com/";
       description = "Snap: A Haskell Web Framework (core interfaces and types)";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "snap-server" = callPackage
    ({ mkDerivation, attoparsec, attoparsec-enumerator, base
     , blaze-builder, blaze-builder-enumerator, bytestring
     , case-insensitive, containers, enumerator
     , MonadCatchIO-transformers, mtl, network, old-locale, snap-core
     , text, time, unix, unix-compat
     }:
     mkDerivation {
       pname = "snap-server";
       version = "0.9.5.1";
       sha256 = "18ryin6f315picrs2159sn2668266l3xchs7jb8isw0gp52273xg";
       revision = "2";
       editedCabalFile = "13941c08pq59pgsrdzp50jnr7bc5dszh1lxgsb0l1y21lm6rj527";
       libraryHaskellDepends = [
         attoparsec attoparsec-enumerator base blaze-builder
         blaze-builder-enumerator bytestring case-insensitive containers
         enumerator MonadCatchIO-transformers mtl network old-locale
         snap-core text time unix unix-compat
       ];
       homepage = "http://snapframework.com/";
       description = "A fast, iteratee-based, epoll-enabled web server for the Snap Framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "snaplet-fay" = callPackage
    ({ mkDerivation, aeson, base, bytestring, configurator, directory
     , fay, filepath, mtl, snap, snap-core, transformers
     }:
     mkDerivation {
       pname = "snaplet-fay";
       version = "0.3.3.13";
       sha256 = "0gyspl2dgs3mmp49vpldwj3ibn4pqj5f91dpzah4ayqpnx40g09r";
       revision = "6";
       editedCabalFile = "02z5ym0gsjqzy4ghdhi4nrzxxgq0m28h2fbg1kp4bjpa3w37b2sp";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson base bytestring configurator directory fay filepath mtl snap
         snap-core transformers
       ];
       homepage = "https://github.com/faylang/snaplet-fay";
       description = "Fay integration for Snap with request- and pre-compilation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "snmp" = callPackage
    ({ mkDerivation, asn1-encoding, asn1-parse, asn1-types, async, base
     , binary, bytestring, cipher-aes, cipher-des, containers
     , crypto-cipher-types, cryptohash, mtl, network, network-info
     , random, securemem, text, time
     }:
     mkDerivation {
       pname = "snmp";
       version = "0.2.1.1";
       sha256 = "1944ffsmw4hamjpzb9prlcnz6l9lgggbsgi6ilj0v84r8bydcdq7";
       libraryHaskellDepends = [
         asn1-encoding asn1-parse asn1-types async base binary bytestring
         cipher-aes cipher-des containers crypto-cipher-types cryptohash mtl
         network network-info random securemem text time
       ];
       description = "API for write snmp client";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "snowflake" = callPackage
    ({ mkDerivation, base, time }:
     mkDerivation {
       pname = "snowflake";
       version = "0.1.1.1";
       sha256 = "1pfd8lqwv0504hli6fhwiqckcca0x9pnfzmy3kz36w7138rclmpi";
       revision = "1";
       editedCabalFile = "1y5v3nsin8iyxvh0abfhs7ma75p5zjvha0lp41801pdiikacfzha";
       libraryHaskellDepends = [ base time ];
       description = "A loose port of Twitter Snowflake to Haskell. Generates arbitrary precision, unique, time-sortable identifiers.";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "soap" = callPackage
    ({ mkDerivation, base, bytestring, conduit, configurator
     , data-default, exceptions, hspec, http-client, http-types, HUnit
     , iconv, mtl, resourcet, text, unordered-containers, xml-conduit
     , xml-conduit-writer, xml-types
     }:
     mkDerivation {
       pname = "soap";
       version = "0.2.2.7";
       sha256 = "02yirl0pr680pbwbh9z0awyk4blgdd0rir8x1gyydyn6v5dg736i";
       libraryHaskellDepends = [
         base bytestring conduit configurator data-default exceptions
         http-client http-types iconv mtl resourcet text
         unordered-containers xml-conduit xml-conduit-writer xml-types
       ];
       testHaskellDepends = [
         base bytestring hspec HUnit text unordered-containers xml-conduit
         xml-conduit-writer
       ];
       homepage = "https://bitbucket.org/dpwiz/haskell-soap";
       description = "SOAP client tools";
       license = stdenv.lib.licenses.mit;
     }) {};
  "soap-openssl" = callPackage
    ({ mkDerivation, base, configurator, data-default, HsOpenSSL
     , http-client, http-client-openssl, soap, text
     }:
     mkDerivation {
       pname = "soap-openssl";
       version = "0.1.0.2";
       sha256 = "03w389yhybzvc06gpxigibqga9mr7m41rkg1ki3n686j9xzm8210";
       revision = "1";
       editedCabalFile = "1b3aivn9jfaax00id7x4cqvpmd6lgynslchlry0qsmq1lj466cdf";
       libraryHaskellDepends = [
         base configurator data-default HsOpenSSL http-client
         http-client-openssl soap text
       ];
       homepage = "https://bitbucket.org/dpwiz/haskell-soap";
       description = "TLS-enabled SOAP transport (using openssl bindings)";
       license = stdenv.lib.licenses.mit;
     }) {};
  "soap-tls" = callPackage
    ({ mkDerivation, base, configurator, connection, data-default
     , http-client, http-client-tls, soap, text, tls, x509, x509-store
     , x509-validation
     }:
     mkDerivation {
       pname = "soap-tls";
       version = "0.1.1.2";
       sha256 = "0xnzwzmhh2i5nci7xbnkr28hxm376fbmgjcwz7svk46k1vxvlfp4";
       revision = "1";
       editedCabalFile = "0h6jgiifrphdphxfvgk95and4a86xp6afxi90v0b93cs2zyi0vsy";
       libraryHaskellDepends = [
         base configurator connection data-default http-client
         http-client-tls soap text tls x509 x509-store x509-validation
       ];
       homepage = "https://bitbucket.org/dpwiz/haskell-soap";
       description = "TLS-enabled SOAP transport (using tls package)";
       license = stdenv.lib.licenses.mit;
     }) {};
  "socket" = callPackage
    ({ mkDerivation, async, base, bytestring }:
     mkDerivation {
       pname = "socket";
       version = "0.5.3.0";
       sha256 = "0rk0y9wi3fyv2qpw1jivz07djpwmbiiwv3nkhi0mqwiaz9kzzmpr";
       revision = "1";
       editedCabalFile = "1z20ch81p4bh2gpb5hk8d88i5nbbbj94jqgslppy32bk279s3mrd";
       libraryHaskellDepends = [ base bytestring ];
       testHaskellDepends = [ async base bytestring ];
       homepage = "https://github.com/lpeterse/haskell-socket";
       description = "A portable and extensible sockets library";
       license = stdenv.lib.licenses.mit;
     }) {};
  "socket-io" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, bytestring, engine-io
     , mtl, stm, text, transformers, unordered-containers, vector
     }:
     mkDerivation {
       pname = "socket-io";
       version = "1.3.5";
       sha256 = "0gwhj0gij783ddswjmxi39asqgrppwi8kzyd6fvjdvwmf1x7j10n";
       libraryHaskellDepends = [
         aeson attoparsec base bytestring engine-io mtl stm text
         transformers unordered-containers vector
       ];
       homepage = "http://github.com/ocharles/engine.io";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "socks" = callPackage
    ({ mkDerivation, base, bytestring, cereal, network }:
     mkDerivation {
       pname = "socks";
       version = "0.5.4";
       sha256 = "1nmldlwxqasmg359i2aa3a903gi3lmnlspvf12xk49jrg3mf3dg9";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base bytestring cereal network ];
       homepage = "http://github.com/vincenthz/hs-socks";
       description = "Socks proxy (version 5) implementation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "sodium" = callPackage
    ({ mkDerivation, base, containers, mtl }:
     mkDerivation {
       pname = "sodium";
       version = "0.11.0.3";
       sha256 = "00qs1calial08a185ma5hm17lmmzig0yjf3710d5ikq1bmrgcqga";
       libraryHaskellDepends = [ base containers mtl ];
       description = "Sodium Reactive Programming (FRP) System";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "sorted-list" = callPackage
    ({ mkDerivation, base, criterion, deepseq }:
     mkDerivation {
       pname = "sorted-list";
       version = "0.1.4.2";
       sha256 = "1prfxpfvsx03lvk5q33azpcif2a3j80v4naw2kn48r1kb84r60m1";
       libraryHaskellDepends = [ base deepseq ];
       benchmarkHaskellDepends = [ base criterion ];
       homepage = "https://github.com/Daniel-Diaz/sorted-list/blob/master/README.md";
       description = "Type-enforced sorted lists and related functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "sourcemap" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, bytestring, criterion
     , process, random, text, unordered-containers, utf8-string
     }:
     mkDerivation {
       pname = "sourcemap";
       version = "0.1.6";
       sha256 = "0ynfm44ym8y592wnzdwa0d05dbkffyyg5sm26y5ylzpynk64r85r";
       revision = "1";
       editedCabalFile = "1f7q44ar6qfip8fsllg43jyn7r15ifn2r0vz32cbmx0sb0d38dax";
       libraryHaskellDepends = [
         aeson attoparsec base bytestring process text unordered-containers
         utf8-string
       ];
       testHaskellDepends = [
         aeson base bytestring process text unordered-containers utf8-string
       ];
       benchmarkHaskellDepends = [ base bytestring criterion random ];
       doCheck = false;
       description = "Implementation of source maps as proposed by Google and Mozilla";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "spdx" = callPackage
    ({ mkDerivation, base, tasty, tasty-quickcheck, transformers }:
     mkDerivation {
       pname = "spdx";
       version = "0.2.1.0";
       sha256 = "1wl0r4q6li6srvcbp4h1bk4k164vd7z8fcy12ixms7r0iq4xdw57";
       revision = "1";
       editedCabalFile = "0qffjk0iz3fnd4099n9bqzakpma6ffw6znk99x67j3i8qdmk1fmd";
       libraryHaskellDepends = [ base transformers ];
       testHaskellDepends = [ base tasty tasty-quickcheck ];
       homepage = "https://github.com/phadej/spdx";
       description = "SPDX license expression language";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "speculation" = callPackage
    ({ mkDerivation, base, ghc-prim, stm, transformers }:
     mkDerivation {
       pname = "speculation";
       version = "1.5.0.3";
       sha256 = "0gsdxgi1bw33z7v23m2fq8ynqxz06swjv4ikl8mqmlp0hwd69gvk";
       libraryHaskellDepends = [ base ghc-prim stm transformers ];
       homepage = "http://github.com/ekmett/speculation";
       description = "A framework for safe, programmable, speculative parallelism";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "speedy-slice" = callPackage
    ({ mkDerivation, base, containers, lens, mcmc-types
     , mwc-probability, pipes, primitive, transformers
     }:
     mkDerivation {
       pname = "speedy-slice";
       version = "0.1.3";
       sha256 = "14ir9y0gxr10rnqaspw7z153a664c4x2xhvwpgjz20mzhpz4gqcb";
       libraryHaskellDepends = [
         base lens mcmc-types mwc-probability pipes primitive transformers
       ];
       testHaskellDepends = [ base containers mwc-probability ];
       homepage = "http://github.com/jtobin/speedy-slice";
       description = "Speedy slice sampling";
       license = stdenv.lib.licenses.mit;
     }) {};
  "sphinx" = callPackage
    ({ mkDerivation, base, binary, bytestring, data-binary-ieee754
     , network, text, text-icu, xml
     }:
     mkDerivation {
       pname = "sphinx";
       version = "0.6.0.1";
       sha256 = "1pcm4y9k5lc00805ddv519cx4j3qld2v1dnbckg38n9dyp96wj98";
       libraryHaskellDepends = [
         base binary bytestring data-binary-ieee754 network text text-icu
         xml
       ];
       homepage = "https://github.com/gregwebs/haskell-sphinx-client";
       description = "Haskell bindings to the Sphinx full-text searching daemon";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "splice" = callPackage
    ({ mkDerivation, base, network }:
     mkDerivation {
       pname = "splice";
       version = "0.6.1.1";
       sha256 = "0lsfkm4vfipzbnqpf3yli6fwrv5a5mwbs149dfzhs7spa9kbxyl1";
       libraryHaskellDepends = [ base network ];
       homepage = "http://corsis.github.com/splice/";
       description = "Cross-platform Socket to Socket Data Splicing";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "split" = callPackage
    ({ mkDerivation, base, QuickCheck }:
     mkDerivation {
       pname = "split";
       version = "0.2.3";
       sha256 = "1ngarh03s0k7bgsnzfyg0m0wm0alqnlmnir746kys9zs6gj01ld6";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base QuickCheck ];
       description = "Combinator library for splitting lists";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "spoon" = callPackage
    ({ mkDerivation, base, deepseq }:
     mkDerivation {
       pname = "spoon";
       version = "0.3.1";
       sha256 = "1m41k0mfy6fpfrv2ym4m5jsjaj9xdfl2iqpppd3c4d0fffv51cxr";
       revision = "1";
       editedCabalFile = "09s5jjcsg4g4qxchq9g2l4i9d5zh3rixpkbiysqcgl69kj8mwv74";
       libraryHaskellDepends = [ base deepseq ];
       description = "Catch errors thrown from pure computations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "sqlite-simple" = callPackage
    ({ mkDerivation, attoparsec, base, base16-bytestring, blaze-builder
     , blaze-textual, bytestring, containers, direct-sqlite, HUnit, text
     , time, transformers
     }:
     mkDerivation {
       pname = "sqlite-simple";
       version = "0.4.9.0";
       sha256 = "18v03yqq9jxyvxq93rh20sxak4ffsshhpq9v9lrz1lk9vnhy9pw1";
       libraryHaskellDepends = [
         attoparsec base blaze-builder blaze-textual bytestring containers
         direct-sqlite text time transformers
       ];
       testHaskellDepends = [
         base base16-bytestring bytestring direct-sqlite HUnit text time
       ];
       homepage = "http://github.com/nurpax/sqlite-simple";
       description = "Mid-Level SQLite client library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "srcloc" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "srcloc";
       version = "0.5.1.0";
       sha256 = "1zssd6jxdhzl5wcygbmzq1s82i7m7rav6nm1m6kl5b68g77gc7g6";
       libraryHaskellDepends = [ base ];
       homepage = "http://www.cs.drexel.edu/~mainland/";
       description = "Data types for managing source code locations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "stack" = callPackage
    ({ mkDerivation, aeson, ansi-terminal, async, attoparsec, base
     , base16-bytestring, base64-bytestring, bifunctors, binary
     , binary-tagged, blaze-builder, byteable, bytestring, Cabal
     , conduit, conduit-combinators, conduit-extra, containers
     , cryptohash, cryptohash-conduit, deepseq, directory, edit-distance
     , either, enclosed-exceptions, errors, exceptions, extra
     , fast-logger, file-embed, filelock, filepath, fsnotify, gitrev
     , hashable, hastache, hpc, hspec, http-client, http-client-tls
     , http-conduit, http-types, lifted-base, monad-control
     , monad-logger, monad-loops, mtl, old-locale, optparse-applicative
     , optparse-simple, path, persistent, persistent-sqlite
     , persistent-template, pretty, process, project-template
     , QuickCheck, resourcet, retry, safe, semigroups, split, stm
     , streaming-commons, tar, template-haskell, temporary, text
     , text-binary, time, transformers, transformers-base, unix
     , unix-compat, unordered-containers, uuid, vector
     , vector-binary-instances, void, word8, yaml, zlib
     }:
     mkDerivation {
       pname = "stack";
       version = "1.0.2";
       sha256 = "1i65acqz2x4f48rdlr0pgpc1j8vpm42byk4pb9shhl3f072g89s2";
       revision = "3";
       editedCabalFile = "017g6rvqf84mjjbkyqkkv8azb7yldq7afnbz4yhbcywqndaaahv8";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson ansi-terminal async attoparsec base base16-bytestring
         base64-bytestring bifunctors binary binary-tagged blaze-builder
         byteable bytestring Cabal conduit conduit-combinators conduit-extra
         containers cryptohash cryptohash-conduit deepseq directory
         edit-distance either enclosed-exceptions errors exceptions extra
         fast-logger file-embed filelock filepath fsnotify hashable hastache
         hpc http-client http-client-tls http-conduit http-types lifted-base
         monad-control monad-logger monad-loops mtl old-locale
         optparse-applicative path persistent persistent-sqlite
         persistent-template pretty process project-template resourcet retry
         safe semigroups split stm streaming-commons tar template-haskell
         temporary text text-binary time transformers transformers-base unix
         unix-compat unordered-containers uuid vector
         vector-binary-instances void word8 yaml zlib
       ];
       executableHaskellDepends = [
         base bytestring Cabal conduit containers directory either
         exceptions filelock filepath gitrev hashable http-client
         http-conduit lifted-base monad-control monad-logger mtl old-locale
         optparse-applicative optparse-simple path process resourcet split
         text transformers unordered-containers
       ];
       testHaskellDepends = [
         async attoparsec base bytestring Cabal conduit conduit-extra
         containers cryptohash directory exceptions filepath hspec
         http-conduit monad-logger optparse-applicative path process
         QuickCheck resourcet retry temporary text transformers unix-compat
       ];
       doHaddock = false;
       doCheck = false;
       preCheck = "export HOME=$TMPDIR";
       postInstall = ''
         exe=$out/bin/stack
         mkdir -p $out/share/bash-completion/completions
         $exe --bash-completion-script $exe >$out/share/bash-completion/completions/stack
       '';
       homepage = "http://haskellstack.org";
       description = "The Haskell Tool Stack";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "stack-run-auto" = callPackage
    ({ mkDerivation, async, base, extract-dependencies, file-modules
     , lens, lens-aeson, MissingH, process, stm-containers, text, time
     , wreq
     }:
     mkDerivation {
       pname = "stack-run-auto";
       version = "0.1.1.0";
       sha256 = "05q9n6cavxbjf9wrmfa31walc27fnqlrww23hj32i55acnvssmi6";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         async base extract-dependencies file-modules lens lens-aeson
         MissingH process stm-containers text time wreq
       ];
       executableHaskellDepends = [
         async base extract-dependencies file-modules lens lens-aeson
         MissingH process stm-containers text time wreq
       ];
       testHaskellDepends = [
         async base extract-dependencies file-modules lens lens-aeson
         MissingH process stm-containers text time wreq
       ];
       homepage = "http://github.com/yamadapc/stack-run-auto#readme";
       description = "Initial project template from stack";
       license = stdenv.lib.licenses.mit;
     }) {};
  "stackage" = callPackage
    ({ mkDerivation, base, stackage-build-plan, stackage-cabal
     , stackage-cli, stackage-install, stackage-sandbox, stackage-setup
     , stackage-update, stackage-upload
     }:
     mkDerivation {
       pname = "stackage";
       version = "0.7.3.2";
       sha256 = "0npry3yxbfyz97q19b405h40mb4rypgkhlp78hgl7zqbxk28ysza";
       libraryHaskellDepends = [
         base stackage-build-plan stackage-cabal stackage-cli
         stackage-install stackage-sandbox stackage-setup stackage-update
         stackage-upload
       ];
       doCheck = false;
       homepage = "https://www.stackage.org/";
       description = "Dummy package forcing installation of other Stackage packages";
       license = stdenv.lib.licenses.mit;
     }) {};
  "stackage-build-plan" = callPackage
    ({ mkDerivation, aeson, base, bytestring, Cabal, containers
     , directory, exceptions, filepath, http-client, http-client-tls
     , mtl, optparse-applicative, stackage-cli, stackage-types, text
     , time, yaml
     }:
     mkDerivation {
       pname = "stackage-build-plan";
       version = "0.1.1.0";
       sha256 = "1slqkcmvnrbbg50qdf368q5h7svngw77b984mpg39p44mc7ghwyg";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base bytestring Cabal containers directory exceptions
         filepath http-client http-client-tls mtl stackage-types text time
         yaml
       ];
       executableHaskellDepends = [
         aeson base optparse-applicative stackage-cli text
       ];
       homepage = "https://github.com/fpco/stackage-build-plan";
       description = "Calculate and print (in different formats) Stackage build plans";
       license = stdenv.lib.licenses.mit;
     }) {};
  "stackage-cabal" = callPackage
    ({ mkDerivation, base, bytestring, exceptions, http-client
     , http-client-tls, http-types, optparse-applicative, parsec
     , process, stackage-cli, system-fileio, text
     }:
     mkDerivation {
       pname = "stackage-cabal";
       version = "0.1.1";
       sha256 = "0797izw5451mqr41a22xvv5c6c0936hi44cfmp9rzhj6mh92iwzj";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base ];
       executableHaskellDepends = [
         base bytestring exceptions http-client http-client-tls http-types
         optparse-applicative parsec process stackage-cli system-fileio text
       ];
       homepage = "https://www.stackage.org/package/stackage-cabal";
       description = "A CLI executable for cabal-based stackage commands";
       license = stdenv.lib.licenses.mit;
     }) {};
  "stackage-cli" = callPackage
    ({ mkDerivation, base, conduit, directory, either, exceptions
     , filepath, hashable, optparse-applicative, optparse-simple
     , process, split, text, transformers, unordered-containers
     }:
     mkDerivation {
       pname = "stackage-cli";
       version = "0.1.0.2";
       sha256 = "10asq1zg7b4zqsn51ap03809j0bxrwh1gacc387wdi1p3zakn88n";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base conduit directory either exceptions filepath hashable
         optparse-applicative optparse-simple process split text
         transformers unordered-containers
       ];
       executableHaskellDepends = [ base text ];
       homepage = "https://www.stackage.org/package/stackage-cli";
       description = "A CLI library for stackage commands";
       license = stdenv.lib.licenses.mit;
     }) {};
  "stackage-curator" = callPackage
    ({ mkDerivation, aeson, amazonka, amazonka-core, amazonka-s3, async
     , base, base16-bytestring, binary, binary-tagged, blaze-html
     , byteable, bytestring, Cabal, classy-prelude-conduit, conduit
     , conduit-extra, containers, cryptohash, cryptohash-conduit
     , data-default-class, directory, filepath, hspec, html-conduit
     , http-client, http-client-tls, http-conduit, lucid, mime-types
     , monad-unlift, mono-traversable, mtl, old-locale
     , optparse-applicative, optparse-simple, process, QuickCheck
     , resourcet, semigroups, stackage-cli, stackage-install
     , stackage-metadata, stackage-types, stm, streaming-commons
     , system-fileio, system-filepath, tar, temporary, text, time
     , transformers, unix-compat, utf8-string, xml-conduit, xml-types
     , yaml, zlib
     }:
     mkDerivation {
       pname = "stackage-curator";
       version = "0.13.1";
       sha256 = "05hs1ahr3raa9cp32ic2ankhrvysagfrc5f9vsjk2wacz8gxyd1j";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson amazonka amazonka-core amazonka-s3 async base
         base16-bytestring binary binary-tagged blaze-html byteable
         bytestring Cabal classy-prelude-conduit conduit conduit-extra
         containers cryptohash cryptohash-conduit data-default-class
         directory filepath html-conduit http-client http-client-tls
         http-conduit lucid mime-types monad-unlift mono-traversable mtl
         old-locale process resourcet semigroups stackage-install
         stackage-metadata stackage-types stm streaming-commons
         system-fileio system-filepath tar temporary text time transformers
         unix-compat utf8-string xml-conduit xml-types yaml zlib
       ];
       executableHaskellDepends = [
         base http-client http-client-tls optparse-applicative
         optparse-simple stackage-cli system-filepath text
       ];
       testHaskellDepends = [
         base Cabal classy-prelude-conduit containers directory hspec
         http-client http-client-tls QuickCheck text yaml
       ];
       homepage = "https://github.com/fpco/stackage";
       description = "Tools for curating Stackage bundles";
       license = stdenv.lib.licenses.mit;
     }) {};
  "stackage-install" = callPackage
    ({ mkDerivation, aeson, async, base, bytestring, containers
     , cryptohash, directory, filepath, http-client, http-client-tls
     , http-types, process, stm, tar, text
     }:
     mkDerivation {
       pname = "stackage-install";
       version = "0.1.1.1";
       sha256 = "0xdqd1q1xy0qax4c2dn1qa0qphvq01xy3wzdp7rr2xnd23ikmbs6";
       revision = "1";
       editedCabalFile = "1vzdhjvs5b3wxkab3xfqhdbhvsqsdi21j7jqs5pqn534y60iy8ad";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson async base bytestring containers cryptohash directory
         filepath http-client http-client-tls http-types process stm tar
         text
       ];
       executableHaskellDepends = [ base ];
       homepage = "https://github.com/fpco/stackage-install";
       description = "Secure download of packages for cabal-install";
       license = stdenv.lib.licenses.mit;
     }) {};
  "stackage-metadata" = callPackage
    ({ mkDerivation, aeson, base, base16-bytestring, bytestring, Cabal
     , conduit, containers, cryptohash, directory, filepath, http-client
     , http-client-tls, pretty, resourcet, stackage-install
     , stackage-update, tar, text, transformers, yaml, zlib
     }:
     mkDerivation {
       pname = "stackage-metadata";
       version = "0.3.0.0";
       sha256 = "08hs6gnya0ci07gsacc01hvjamwh9xnfni9ihg7wf77w4vrncssx";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base bytestring Cabal conduit containers directory filepath
         pretty resourcet tar text transformers zlib
       ];
       executableHaskellDepends = [
         base base16-bytestring bytestring Cabal conduit containers
         cryptohash directory filepath http-client http-client-tls resourcet
         stackage-install stackage-update tar text transformers yaml
       ];
       homepage = "https://github.com/commercialhaskell/all-cabal-metadata-tool";
       description = "Grab current metadata for all packages";
       license = stdenv.lib.licenses.mit;
     }) {};
  "stackage-sandbox" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, conduit-combinators
     , conduit-extra, directory, filepath, optparse-applicative, process
     , stackage-cli, text
     }:
     mkDerivation {
       pname = "stackage-sandbox";
       version = "0.1.6";
       sha256 = "1nqvxw6k2sgziic8nfw61sss7svg0zrnhkp6jjaqcx91p5kmzr5d";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base ];
       executableHaskellDepends = [
         attoparsec base bytestring conduit-combinators conduit-extra
         directory filepath optparse-applicative process stackage-cli text
       ];
       homepage = "https://www.stackage.org/package/stackage-sandbox";
       description = "Work with shared stackage sandboxes";
       license = stdenv.lib.licenses.mit;
     }) {};
  "stackage-setup" = callPackage
    ({ mkDerivation, aeson, base, bytestring, classy-prelude-conduit
     , cryptohash, cryptohash-conduit, directory, filepath
     , http-client-tls, http-conduit, http-types, optparse-applicative
     , process, stackage-cli, text, unordered-containers, yaml
     }:
     mkDerivation {
       pname = "stackage-setup";
       version = "0.0.2";
       sha256 = "1101sb822v42zjjgabn4s80qyvn6nvzkfagaxpzjm6dp5svl3biv";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base ];
       executableHaskellDepends = [
         aeson base bytestring classy-prelude-conduit cryptohash
         cryptohash-conduit directory filepath http-client-tls http-conduit
         http-types optparse-applicative process stackage-cli text
         unordered-containers yaml
       ];
       homepage = "https://www.stackage.org/package/stackage-setup";
       description = "An executable for downloading a Haskell setup";
       license = stdenv.lib.licenses.mit;
     }) {};
  "stackage-types" = callPackage
    ({ mkDerivation, aeson, base, Cabal, containers, exceptions
     , hashable, safe, semigroups, text, time, unordered-containers
     , vector
     }:
     mkDerivation {
       pname = "stackage-types";
       version = "1.2.0";
       sha256 = "1jzlxnibl4fn6mqbxv9c8hw4zp7adyicwwkknr5w1am5k825a0n0";
       libraryHaskellDepends = [
         aeson base Cabal containers exceptions hashable safe semigroups
         text time unordered-containers vector
       ];
       homepage = "https://github.com/fpco/stackage-types";
       description = "Shared data types between various Stackage packages";
       license = stdenv.lib.licenses.mit;
     }) {};
  "stackage-update" = callPackage
    ({ mkDerivation, base, directory, filepath, process }:
     mkDerivation {
       pname = "stackage-update";
       version = "0.1.2";
       sha256 = "1lw30fvscnb3n29lavw16am41adrvby1v2vbh7yykbr80pkb3hvj";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base directory filepath process ];
       executableHaskellDepends = [ base ];
       homepage = "https://github.com/fpco/stackage-update";
       description = "Update your package index incrementally (requires git)";
       license = stdenv.lib.licenses.mit;
     }) {};
  "stackage-upload" = callPackage
    ({ mkDerivation, aeson, base, bytestring, directory, filepath
     , http-client, http-client-tls, http-types, optparse-applicative
     , process, stackage-cli, temporary, text
     }:
     mkDerivation {
       pname = "stackage-upload";
       version = "0.1.0.5";
       sha256 = "0fxkscyzpl6ph28100b0l663rjny9vp2jrhcca19dc0jzj0kfdgi";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base bytestring directory filepath http-client
         http-client-tls http-types process temporary text
       ];
       executableHaskellDepends = [
         base optparse-applicative stackage-cli
       ];
       homepage = "https://github.com/fpco/stackage-upload";
       description = "A more secure version of cabal upload which uses HTTPS";
       license = stdenv.lib.licenses.mit;
     }) {};
  "state-plus" = callPackage
    ({ mkDerivation, base, checkers, mtl, QuickCheck }:
     mkDerivation {
       pname = "state-plus";
       version = "0.1.2";
       sha256 = "0z9pxr2qbsqfk1dkzj2argdlpp7cjfymb0d3iazn40nl6x8ibvf6";
       libraryHaskellDepends = [ base mtl ];
       testHaskellDepends = [ base checkers mtl QuickCheck ];
       description = "MonadPlus for StateT";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "stateWriter" = callPackage
    ({ mkDerivation, base, containers, criterion, deepseq, dlist, free
     , hspec, lens, mtl, QuickCheck, transformers, vector
     }:
     mkDerivation {
       pname = "stateWriter";
       version = "0.2.6";
       sha256 = "0i5zsh30snxglkwmmvli30aii2klys0h9xx95czl7z7hgjyw7ybp";
       libraryHaskellDepends = [ base mtl transformers ];
       testHaskellDepends = [ base free hspec mtl QuickCheck ];
       benchmarkHaskellDepends = [
         base containers criterion deepseq dlist lens mtl transformers
         vector
       ];
       description = "A faster variant of the RWS monad transformers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "stateref" = callPackage
    ({ mkDerivation, base, mtl, stm }:
     mkDerivation {
       pname = "stateref";
       version = "0.3";
       sha256 = "0hdpw6g255lj7jjvgqwhjdpzmka546vda5qjvry8gjj6nfm91lvx";
       libraryHaskellDepends = [ base mtl stm ];
       homepage = "http://code.haskell.org/~mokus/stateref/";
       description = "Abstraction for things that work like IORef";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "statestack" = callPackage
    ({ mkDerivation, base, mtl, transformers, transformers-compat }:
     mkDerivation {
       pname = "statestack";
       version = "0.2.0.5";
       sha256 = "0rjzx9iy5mx5igir6gvslznnx3gpxlb1xy1n8h4cn54cn3wxrspl";
       revision = "1";
       editedCabalFile = "0kf1jdhdv9fiwlbn2915sg39x23lfxlyp2qb7jkrvx8p8v2sam7i";
       libraryHaskellDepends = [
         base mtl transformers transformers-compat
       ];
       description = "Simple State-like monad transformer with saveable and restorable state";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "static-canvas" = callPackage
    ({ mkDerivation, base, double-conversion, free, mtl, text }:
     mkDerivation {
       pname = "static-canvas";
       version = "0.2.0.2";
       sha256 = "1lphx10wljylsbjwlw5p7bsjh5gf2fj1sl09556y814r11a6rjff";
       libraryHaskellDepends = [ base double-conversion free mtl text ];
       homepage = "https://github.com/jeffreyrosenbluth/static-canvas";
       description = "DSL to generate HTML5 Canvas javascript";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "statistics" = callPackage
    ({ mkDerivation, aeson, base, binary, deepseq, erf, HUnit, ieee754
     , math-functions, monad-par, mwc-random, primitive, QuickCheck
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , vector, vector-algorithms, vector-binary-instances
     }:
     mkDerivation {
       pname = "statistics";
       version = "0.13.2.3";
       sha256 = "1gbghzbacfrm7vn24ssx7wz9sycafxk9b306zm6cdlsr954v296n";
       libraryHaskellDepends = [
         aeson base binary deepseq erf math-functions monad-par mwc-random
         primitive vector vector-algorithms vector-binary-instances
       ];
       testHaskellDepends = [
         base binary erf HUnit ieee754 math-functions mwc-random primitive
         QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2 vector vector-algorithms
       ];
       doCheck = false;
       homepage = "https://github.com/bos/statistics";
       description = "A library of statistical types, data, and functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "statistics-linreg" = callPackage
    ({ mkDerivation, base, MonadRandom, random, random-shuffle, safe
     , statistics, vector
     }:
     mkDerivation {
       pname = "statistics-linreg";
       version = "0.3";
       sha256 = "02c9xrd3b8iy7bwgsf1r06smi88k3sgpqv2ivr782wl0dcbc4wv2";
       libraryHaskellDepends = [
         base MonadRandom random random-shuffle safe statistics vector
       ];
       homepage = "http://github.com/alpmestan/statistics-linreg";
       description = "Linear regression between two samples, based on the 'statistics' package";
       license = stdenv.lib.licenses.mit;
     }) {};
  "stm" = callPackage
    ({ mkDerivation, array, base }:
     mkDerivation {
       pname = "stm";
       version = "2.4.4.1";
       sha256 = "111kpy1d6f5c0bggh6hyfm86q5p8bq1qbqf6dw2x4l4dxnar16cg";
       revision = "1";
       editedCabalFile = "0kzw4rw9fgmc4qyxmm1lwifdyrx5r1356150xm14vy4mp86diks9";
       libraryHaskellDepends = [ array base ];
       description = "Software Transactional Memory";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "stm-chans" = callPackage
    ({ mkDerivation, base, stm }:
     mkDerivation {
       pname = "stm-chans";
       version = "3.0.0.4";
       sha256 = "0f27sp09yha43xk9q55sc185jyjs5h7gq2dhsyx6bm9kz9dzqi13";
       libraryHaskellDepends = [ base stm ];
       homepage = "http://code.haskell.org/~wren/";
       description = "Additional types of channels for STM";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "stm-conduit" = callPackage
    ({ mkDerivation, async, base, cereal, cereal-conduit, conduit
     , conduit-combinators, conduit-extra, directory, doctest, ghc-prim
     , HUnit, lifted-async, lifted-base, monad-control, monad-loops
     , QuickCheck, resourcet, stm, stm-chans, test-framework
     , test-framework-hunit, test-framework-quickcheck2, transformers
     , void
     }:
     mkDerivation {
       pname = "stm-conduit";
       version = "2.7.0";
       sha256 = "1by5lyxilwjwjgxwykc2934pfwb0lvldq62vnm2ryi2hn6vk5v73";
       libraryHaskellDepends = [
         async base cereal cereal-conduit conduit conduit-combinators
         conduit-extra directory ghc-prim lifted-async lifted-base
         monad-control monad-loops resourcet stm stm-chans transformers void
       ];
       testHaskellDepends = [
         base conduit conduit-combinators directory doctest HUnit QuickCheck
         resourcet stm stm-chans test-framework test-framework-hunit
         test-framework-quickcheck2 transformers
       ];
       homepage = "https://github.com/wowus/stm-conduit";
       description = "Introduces conduits to channels, and promotes using conduits concurrently";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "stm-containers" = callPackage
    ({ mkDerivation, base, base-prelude, focus, hashable, list-t
     , loch-th, placeholders, primitive, transformers
     }:
     mkDerivation {
       pname = "stm-containers";
       version = "0.2.10";
       sha256 = "0v9yag8nl8wpn3rm5d1jd5vh8xpqn5p6df3hpz97jqj5lbyj9mqx";
       revision = "2";
       editedCabalFile = "0vjidvj7z6zi1yr5cfj69bl88jah6irxb5y0alfx4kghx0mhv856";
       libraryHaskellDepends = [
         base base-prelude focus hashable list-t loch-th placeholders
         primitive transformers
       ];
       doCheck = false;
       homepage = "https://github.com/nikita-volkov/stm-containers";
       description = "Containers for STM";
       license = stdenv.lib.licenses.mit;
     }) {};
  "stm-delay" = callPackage
    ({ mkDerivation, base, stm }:
     mkDerivation {
       pname = "stm-delay";
       version = "0.1.1.1";
       sha256 = "0cla21v89gcvmr1iwzibq13v1yq02xg4h6k9l6kcprj7mhd5hcmi";
       libraryHaskellDepends = [ base stm ];
       testHaskellDepends = [ base stm ];
       homepage = "https://github.com/joeyadams/haskell-stm-delay";
       description = "Updatable one-shot timer polled with STM";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "stm-stats" = callPackage
    ({ mkDerivation, base, containers, stm, template-haskell, time }:
     mkDerivation {
       pname = "stm-stats";
       version = "0.2.0.0";
       sha256 = "0i8ky2l8lvh7nymxglvbifp0ylbyjw20p75avzb51zpzx6qkjkqa";
       libraryHaskellDepends = [
         base containers stm template-haskell time
       ];
       description = "retry statistics for STM transactions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "storable-complex" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "storable-complex";
       version = "0.2.2";
       sha256 = "01kwwkpbfjrv26vj83cd92px5qbq1bpgxj0r45534aksqhany1xb";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/cartazio/storable-complex";
       description = "Storable instance for Complex";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "storable-endian" = callPackage
    ({ mkDerivation, base, byteorder }:
     mkDerivation {
       pname = "storable-endian";
       version = "0.2.5";
       sha256 = "04j1nk0wga4dqrqvhm8yd9h9194db1n3yrnhg8s3gsc0jk7yw1p2";
       libraryHaskellDepends = [ base byteorder ];
       description = "Storable instances with endianness";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "streaming" = callPackage
    ({ mkDerivation, base, bytestring, containers, exceptions, mmorph
     , mtl, resourcet, time, transformers, transformers-base
     }:
     mkDerivation {
       pname = "streaming";
       version = "0.1.4.0";
       sha256 = "0g4fjv6imzd1f7jajprjm5nwl0acilh5zm39mrjk4asirv118fh6";
       libraryHaskellDepends = [
         base bytestring containers exceptions mmorph mtl resourcet time
         transformers transformers-base
       ];
       homepage = "https://github.com/michaelt/streaming";
       description = "an elementary streaming prelude and general stream type";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "streaming-bytestring" = callPackage
    ({ mkDerivation, base, bytestring, deepseq, exceptions, mmorph, mtl
     , resourcet, streaming, transformers, transformers-base
     }:
     mkDerivation {
       pname = "streaming-bytestring";
       version = "0.1.4.0";
       sha256 = "0z3kkpicai5a5d275xy571n9vng25qx5y6vcpis7zzc1mjxms7qj";
       libraryHaskellDepends = [
         base bytestring deepseq exceptions mmorph mtl resourcet streaming
         transformers transformers-base
       ];
       homepage = "https://github.com/michaelt/streaming-bytestring";
       description = "effectful byte steams, or: bytestring io done right";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "streaming-commons" = callPackage
    ({ mkDerivation, array, async, base, blaze-builder, bytestring
     , criterion, deepseq, directory, hspec, network, process
     , QuickCheck, random, stm, text, transformers, unix, zlib
     }:
     mkDerivation {
       pname = "streaming-commons";
       version = "0.1.15.2";
       sha256 = "17a9gnkcwgb9rr2kv413ash4gb45dhhpfz1ns60w1rwcc1ad22i3";
       libraryHaskellDepends = [
         array async base blaze-builder bytestring directory network process
         random stm text transformers unix zlib
       ];
       testHaskellDepends = [
         array async base blaze-builder bytestring deepseq hspec network
         QuickCheck text unix zlib
       ];
       benchmarkHaskellDepends = [
         base blaze-builder bytestring criterion deepseq text
       ];
       homepage = "https://github.com/fpco/streaming-commons";
       description = "Common lower-level functions needed by various streaming data libraries";
       license = stdenv.lib.licenses.mit;
     }) {};
  "streamproc" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "streamproc";
       version = "1.6.2";
       sha256 = "1wl44n4nav4h203mzfdf1bd5nh4v23dib54lvxka1rl3zymgyvp7";
       libraryHaskellDepends = [ base ];
       homepage = "http://github.com/peti/streamproc";
       description = "Stream Processer Arrow";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "streams" = callPackage
    ({ mkDerivation, adjunctions, base, comonad, distributive
     , semigroupoids, semigroups
     }:
     mkDerivation {
       pname = "streams";
       version = "3.2.1";
       sha256 = "1xyrsb55dg7v3pris0hc0yqdlqaymxb6g286wrbc7h2lva5wrva4";
       libraryHaskellDepends = [
         adjunctions base comonad distributive semigroupoids semigroups
       ];
       homepage = "http://github.com/ekmett/streams/issues";
       description = "Various Haskell 2010 stream comonads";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "strict" = callPackage
    ({ mkDerivation, array, base }:
     mkDerivation {
       pname = "strict";
       version = "0.3.2";
       sha256 = "08cjajqz9h47fkq98mlf3rc8n5ghbmnmgn8pfsl3bdldjdkmmlrc";
       libraryHaskellDepends = [ array base ];
       homepage = "http://www.cse.unsw.edu.au/~rl/code/strict.html";
       description = "Strict data types and String IO";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "strict-base-types" = callPackage
    ({ mkDerivation, aeson, base, bifunctors, binary, deepseq, ghc-prim
     , hashable, lens, QuickCheck, strict
     }:
     mkDerivation {
       pname = "strict-base-types";
       version = "0.4.0";
       sha256 = "14952xz96inxb0vhm3x6lr17nkk2yr7fgh4wc6r0918jycrcd6jv";
       libraryHaskellDepends = [
         aeson base bifunctors binary deepseq ghc-prim hashable lens
         QuickCheck strict
       ];
       homepage = "https://github.com/meiersi/strict-base-types";
       description = "Strict variants of the types provided in base";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "string-class" = callPackage
    ({ mkDerivation, base, bytestring, tagged, text }:
     mkDerivation {
       pname = "string-class";
       version = "0.1.6.5";
       sha256 = "0yi3fagwqkgr8pf6wnl360qikyvfb649qs2y6gp0n7jjw0zc27c2";
       libraryHaskellDepends = [ base bytestring tagged text ];
       homepage = "https://github.com/bairyn/string-class";
       description = "String class library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "string-combinators" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "string-combinators";
       version = "0.6.0.5";
       sha256 = "07ky2z5f1l5mb7r3rvyraak0bzciq4krkg5lv8g0a5vxpnzlm4cl";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/basvandijk/string-combinators";
       description = "Polymorphic functions to build and combine stringlike values";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "string-conversions" = callPackage
    ({ mkDerivation, base, bytestring, text, utf8-string }:
     mkDerivation {
       pname = "string-conversions";
       version = "0.4";
       sha256 = "1bi4mjnz0srb01n0k73asizp5h2ir7j3whxai9wprqvz7kdscr0s";
       libraryHaskellDepends = [ base bytestring text utf8-string ];
       description = "Simplifies dealing with different types for strings";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "string-qq" = callPackage
    ({ mkDerivation, base, template-haskell }:
     mkDerivation {
       pname = "string-qq";
       version = "0.0.2";
       sha256 = "0662m3i5xrdrr95w829bszkhp88mj9iy1zya54vk2sl5hz9wlmwp";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base template-haskell ];
       description = "QuasiQuoter for non-interpolated strings, texts and bytestrings";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "stringable" = callPackage
    ({ mkDerivation, base, bytestring, system-filepath, text }:
     mkDerivation {
       pname = "stringable";
       version = "0.1.3";
       sha256 = "10jsvbiqbmnbipv1566k5mqkpgfyrzbk8m7b18rqjb5m3qg9dbz7";
       libraryHaskellDepends = [ base bytestring system-filepath text ];
       description = "A Stringable type class, in the spirit of Foldable and Traversable";
       license = stdenv.lib.licenses.mit;
     }) {};
  "stringbuilder" = callPackage
    ({ mkDerivation, base, hspec, QuickCheck }:
     mkDerivation {
       pname = "stringbuilder";
       version = "0.5.0";
       sha256 = "1ap95xphqnrhv64c2a137wqslkdmb2jjd9ldb17gs1pw48k8hrl9";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base hspec QuickCheck ];
       description = "A writer monad for multi-line string literals";
       license = stdenv.lib.licenses.mit;
     }) {};
  "stringsearch" = callPackage
    ({ mkDerivation, array, base, bytestring, containers }:
     mkDerivation {
       pname = "stringsearch";
       version = "0.3.6.6";
       sha256 = "0jpy9xjcjdbpi3wk6mg7xwd7wfi2mma70p97v1ij5i8bj9qijpr9";
       libraryHaskellDepends = [ array base bytestring containers ];
       homepage = "https://bitbucket.org/dafis/stringsearch";
       description = "Fast searching, splitting and replacing of ByteStrings";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "stripe-core" = callPackage
    ({ mkDerivation, aeson, base, bytestring, mtl, text, time
     , transformers, unordered-containers
     }:
     mkDerivation {
       pname = "stripe-core";
       version = "2.0.3";
       sha256 = "1a730n1ppz1zgwmcci7jr2prsi139aj57r9q723f5cwvyag32g8w";
       libraryHaskellDepends = [
         aeson base bytestring mtl text time transformers
         unordered-containers
       ];
       homepage = "https://github.com/dmjio/stripe-haskell";
       description = "Stripe API for Haskell - Pure Core";
       license = stdenv.lib.licenses.mit;
     }) {};
  "stripe-haskell" = callPackage
    ({ mkDerivation, base, stripe-core, stripe-http-streams }:
     mkDerivation {
       pname = "stripe-haskell";
       version = "2.0.3";
       sha256 = "1fymgjnpjy9dy0hcfg5m9bi0xgs01jirigsjp54q66hqf5b6nnr2";
       libraryHaskellDepends = [ base stripe-core stripe-http-streams ];
       homepage = "https://github.com/dmjio/stripe";
       description = "Stripe API for Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};
  "stripe-http-streams" = callPackage
    ({ mkDerivation, aeson, base, bytestring, HsOpenSSL, http-streams
     , io-streams, stripe-core, text
     }:
     mkDerivation {
       pname = "stripe-http-streams";
       version = "2.0.2";
       sha256 = "05y7ifym760qczlch4hb3rzdk59p94sm7x63132swxxwcja8kqqd";
       libraryHaskellDepends = [
         aeson base bytestring HsOpenSSL http-streams io-streams stripe-core
         text
       ];
       description = "Stripe API for Haskell - http-streams backend";
       license = stdenv.lib.licenses.mit;
     }) {};
  "stylish-haskell" = callPackage
    ({ mkDerivation, aeson, base, bytestring, cmdargs, containers
     , directory, filepath, haskell-src-exts, HUnit, mtl, strict, syb
     , test-framework, test-framework-hunit, yaml
     }:
     mkDerivation {
       pname = "stylish-haskell";
       version = "0.5.15.2";
       sha256 = "0ng7xf2ar3w1m9b06l003mk99misli17apn1i4m3kah05dc1nffg";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson base bytestring containers directory filepath
         haskell-src-exts mtl syb yaml
       ];
       executableHaskellDepends = [
         aeson base bytestring cmdargs containers directory filepath
         haskell-src-exts mtl strict syb yaml
       ];
       testHaskellDepends = [
         aeson base bytestring cmdargs containers directory filepath
         haskell-src-exts HUnit mtl syb test-framework test-framework-hunit
         yaml
       ];
       homepage = "https://github.com/jaspervdj/stylish-haskell";
       description = "Haskell code prettifier";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "success" = callPackage
    ({ mkDerivation, base, monad-control, mtl, transformers
     , transformers-base
     }:
     mkDerivation {
       pname = "success";
       version = "0.2.6";
       sha256 = "1dnsya1cbj0z2fag4vp43bm3v18p9mm1yxza8gaw8fz1i9zfg5g9";
       libraryHaskellDepends = [
         base monad-control mtl transformers transformers-base
       ];
       homepage = "https://github.com/nikita-volkov/success";
       description = "A version of Either specialised for encoding of success or failure";
       license = stdenv.lib.licenses.mit;
     }) {};
  "svg-tree" = callPackage
    ({ mkDerivation, attoparsec, base, bytestring, containers
     , JuicyPixels, lens, linear, mtl, scientific, text, transformers
     , vector, xml
     }:
     mkDerivation {
       pname = "svg-tree";
       version = "0.3.2";
       sha256 = "00rd1myhs4r6pbljzsgg8hsxskh2z0n3x67qgk8szdaijf8l5z5r";
       libraryHaskellDepends = [
         attoparsec base bytestring containers JuicyPixels lens linear mtl
         scientific text transformers vector xml
       ];
       description = "SVG file loader and serializer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "swagger" = callPackage
    ({ mkDerivation, aeson, base, bytestring, tasty, tasty-hunit, text
     , time, transformers
     }:
     mkDerivation {
       pname = "swagger";
       version = "0.2.2";
       sha256 = "1hpc569n34kr1nkrwlx76pc0yp9icr8j5cxliwjqffnh7x2czzqr";
       libraryHaskellDepends = [
         aeson base bytestring text time transformers
       ];
       testHaskellDepends = [ aeson base bytestring tasty tasty-hunit ];
       description = "Implementation of swagger data model";
       license = "unknown";
     }) {};
  "swagger2" = callPackage
    ({ mkDerivation, aeson, aeson-qq, base, containers, doctest, Glob
     , hashable, hspec, http-media, HUnit, lens, mtl, network
     , QuickCheck, scientific, text, time, unordered-containers, vector
     }:
     mkDerivation {
       pname = "swagger2";
       version = "1.2.1";
       sha256 = "1nfn04wkn8c3zdd00564452nxkzl63cxl45vawgjsmh2f82nbfjf";
       revision = "2";
       editedCabalFile = "0sxjl65785jbcy127n77fqjz41dbw3zz7dbh0ngah595ya8q3mlz";
       libraryHaskellDepends = [
         aeson base containers hashable http-media lens mtl network
         scientific text time unordered-containers
       ];
       testHaskellDepends = [
         aeson aeson-qq base containers doctest Glob hspec HUnit lens
         QuickCheck text unordered-containers vector
       ];
       homepage = "https://github.com/GetShopTV/swagger2";
       description = "Swagger 2.0 data model";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "syb" = callPackage
    ({ mkDerivation, base, containers, HUnit, mtl }:
     mkDerivation {
       pname = "syb";
       version = "0.6";
       sha256 = "1p3cnqjm13677r4a966zffzhi9b3a321aln8zs8ckqj0d9z1z3d3";
       revision = "1";
       editedCabalFile = "158ngdnlq9n1mil7cq2bzy4zkgx73zzms9q56wp6ll93m5mc4nlx";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base containers HUnit mtl ];
       doCheck = false;
       homepage = "http://www.cs.uu.nl/wiki/GenericProgramming/SYB";
       description = "Scrap Your Boilerplate";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "syb-with-class" = callPackage
    ({ mkDerivation, array, base, bytestring, containers
     , template-haskell
     }:
     mkDerivation {
       pname = "syb-with-class";
       version = "0.6.1.6";
       sha256 = "1c61hig293lxyr2kdri3rp6wkns921fiwwmml9zhrhrrryfr0p2n";
       revision = "1";
       editedCabalFile = "0z6dh5why4h8n0432wd9aq2n4vnkwv5vxz4b0lrnrhy9vwid7578";
       libraryHaskellDepends = [
         array base bytestring containers template-haskell
       ];
       description = "Scrap Your Boilerplate With Class";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "sync-mht" = callPackage
    ({ mkDerivation, aeson, array, base, base16-bytestring, byteable
     , bytes, bytestring, cereal, containers, cryptohash, directory
     , exceptions, filepath, HUnit, io-streams, mtl, process, random
     , regex-compat, temporary, text, time, transformers, unix, zlib
     }:
     mkDerivation {
       pname = "sync-mht";
       version = "0.3.8.4";
       sha256 = "0f2i0fij0j35qp8kr003kz3b9j9wgwjzwpg7s724vy03lk2zlxpj";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         array base base16-bytestring byteable bytes bytestring cereal
         containers cryptohash directory exceptions filepath HUnit
         io-streams mtl process random regex-compat temporary text time
         transformers unix zlib
       ];
       executableHaskellDepends = [
         array base base16-bytestring byteable bytes bytestring cereal
         containers cryptohash directory exceptions filepath HUnit
         io-streams mtl process random regex-compat temporary text time
         transformers unix zlib
       ];
       testHaskellDepends = [
         array base base16-bytestring byteable bytes bytestring cereal
         containers cryptohash directory exceptions filepath HUnit
         io-streams mtl process random regex-compat temporary text time
         transformers unix zlib
       ];
       benchmarkHaskellDepends = [
         aeson base bytestring directory filepath process temporary time
       ];
       homepage = "https://github.com/ekarayel/sync-mht";
       description = "Fast incremental file transfer using Merkle-Hash-Trees";
       license = stdenv.lib.licenses.mit;
     }) {};
  "system-argv0" = callPackage
    ({ mkDerivation, base, bytestring, system-filepath, text }:
     mkDerivation {
       pname = "system-argv0";
       version = "0.1.1";
       sha256 = "1ijfry2r3cypp3zmws6dczk21m4n86fkxjld7yl19gjp46fxllbd";
       libraryHaskellDepends = [ base bytestring system-filepath text ];
       homepage = "https://john-millikin.com/software/haskell-filesystem/";
       description = "Get argv[0] as a FilePath";
       license = stdenv.lib.licenses.mit;
     }) {};
  "system-fileio" = callPackage
    ({ mkDerivation, base, bytestring, chell, system-filepath
     , temporary, text, time, transformers, unix
     }:
     mkDerivation {
       pname = "system-fileio";
       version = "0.3.16.3";
       sha256 = "1484hcl27s2qcby8ws5djj11q9bz68bspcifz9h5gii2ndy70x9i";
       libraryHaskellDepends = [
         base bytestring system-filepath text time unix
       ];
       testHaskellDepends = [
         base bytestring chell system-filepath temporary text time
         transformers unix
       ];
       homepage = "https://github.com/fpco/haskell-filesystem";
       description = "Consistent filesystem interaction across GHC versions (deprecated)";
       license = stdenv.lib.licenses.mit;
     }) {};
  "system-filepath" = callPackage
    ({ mkDerivation, base, bytestring, chell, chell-quickcheck, deepseq
     , QuickCheck, text
     }:
     mkDerivation {
       pname = "system-filepath";
       version = "0.4.13.4";
       sha256 = "1yy5zsmmimhg6iaw9fmpwrxvxrgi5s6bfyqfihdsnx4bjvn7sp9l";
       libraryHaskellDepends = [ base bytestring deepseq text ];
       testHaskellDepends = [
         base bytestring chell chell-quickcheck QuickCheck text
       ];
       doCheck = false;
       homepage = "https://github.com/fpco/haskell-filesystem";
       description = "High-level, byte-based file and directory path manipulations (deprecated)";
       license = stdenv.lib.licenses.mit;
     }) {};
  "system-posix-redirect" = callPackage
    ({ mkDerivation, base, bytestring, unix }:
     mkDerivation {
       pname = "system-posix-redirect";
       version = "1.1.0.1";
       sha256 = "1wkfz898d3607xnx779l1k1qc8i2k63ixg47542r45scwq8m0lsk";
       libraryHaskellDepends = [ base bytestring unix ];
       description = "A toy module to temporarily redirect a program's stdout";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "syz" = callPackage
    ({ mkDerivation, base, syb }:
     mkDerivation {
       pname = "syz";
       version = "0.2.0.0";
       sha256 = "1m5395937yyxsa1bmlfn1dxa1jr15yjhlz9s15bpwapshcd8119y";
       libraryHaskellDepends = [ base syb ];
       homepage = "http://www.cs.indiana.edu/~adamsmd/papers/scrap_your_zippers/";
       description = "Scrap Your Zippers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tabular" = callPackage
    ({ mkDerivation, base, csv, html, mtl }:
     mkDerivation {
       pname = "tabular";
       version = "0.2.2.7";
       sha256 = "1ysgq7rrks7f98nnvxil8xz1q27hxdgz4szbjhqwzbwd209dmy0k";
       libraryHaskellDepends = [ base csv html mtl ];
       homepage = "http://hub.darcs.net/kowey/tabular";
       description = "Two-dimensional data tables with rendering functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tagged" = callPackage
    ({ mkDerivation, base, deepseq, template-haskell }:
     mkDerivation {
       pname = "tagged";
       version = "0.8.3";
       sha256 = "14v8ab9w58y3ga9agkb3am3nimgxq7nwpdrss3y926502wzpvai7";
       libraryHaskellDepends = [ base deepseq template-haskell ];
       homepage = "http://github.com/ekmett/tagged";
       description = "Haskell 98 phantom types to avoid unsafely passing dummy arguments";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tagged-binary" = callPackage
    ({ mkDerivation, base, binary, bytestring, pureMD5 }:
     mkDerivation {
       pname = "tagged-binary";
       version = "0.2.0.0";
       sha256 = "0ibp4hmzg4c4dn88ws7x1j5wc6cbz3j2hymyaw2qkac3j4phzqrm";
       libraryHaskellDepends = [ base binary bytestring pureMD5 ];
       description = "Provides tools for serializing data tagged with type information";
       license = stdenv.lib.licenses.mit;
     }) {};
  "tagshare" = callPackage
    ({ mkDerivation, base, containers, mtl }:
     mkDerivation {
       pname = "tagshare";
       version = "0.0";
       sha256 = "1q3chp1rmwmxa8rxv7548wsvbqbng6grrnv1587p08385sp4ncfj";
       libraryHaskellDepends = [ base containers mtl ];
       description = "TagShare - explicit sharing with tags";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tagsoup" = callPackage
    ({ mkDerivation, base, bytestring, containers, text }:
     mkDerivation {
       pname = "tagsoup";
       version = "0.13.8";
       sha256 = "0bhw7vqv2zn2lvrq2blpr1mzzzs28ka6nagqxxjramawbilp3wfg";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base bytestring containers text ];
       homepage = "https://github.com/ndmitchell/tagsoup#readme";
       description = "Parsing and extracting information from (possibly malformed) HTML/XML documents";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tagstream-conduit" = callPackage
    ({ mkDerivation, attoparsec, base, blaze-builder, bytestring
     , case-insensitive, conduit, conduit-extra, data-default, hspec
     , HUnit, QuickCheck, resourcet, text, transformers, xml-conduit
     }:
     mkDerivation {
       pname = "tagstream-conduit";
       version = "0.5.5.3";
       sha256 = "1arlf7qil9bzcqykda8yyrnncm29jsfjvz5kbcdrbbhqpbqfi5mj";
       libraryHaskellDepends = [
         attoparsec base blaze-builder bytestring case-insensitive conduit
         conduit-extra data-default resourcet text transformers xml-conduit
       ];
       testHaskellDepends = [
         base bytestring conduit hspec HUnit QuickCheck resourcet text
       ];
       homepage = "http://github.com/yihuang/tagstream-conduit";
       description = "streamlined html tag parser";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tar" = callPackage
    ({ mkDerivation, array, base, bytestring, bytestring-handle
     , containers, criterion, deepseq, directory, filepath, old-time
     , QuickCheck, tasty, tasty-quickcheck, time
     }:
     mkDerivation {
       pname = "tar";
       version = "0.5.0.1";
       sha256 = "062qvi33v4rasxgjmh5ddx1v92xqd4n7k8wl1rhsmavhkldy4rf4";
       configureFlags = [ "-f-old-time" ];
       libraryHaskellDepends = [
         array base bytestring containers deepseq directory filepath time
       ];
       testHaskellDepends = [
         array base bytestring bytestring-handle containers deepseq
         directory filepath QuickCheck tasty tasty-quickcheck time
       ];
       benchmarkHaskellDepends = [
         array base bytestring containers criterion deepseq directory
         filepath old-time time
       ];
       description = "Reading, writing and manipulating \".tar\" archive files.";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tardis" = callPackage
    ({ mkDerivation, base, mtl }:
     mkDerivation {
       pname = "tardis";
       version = "0.3.0.0";
       sha256 = "15f88b5qg4v1ah60y0jxkww9n6z7gvnkslx4inckh6m6c7yvj8k6";
       libraryHaskellDepends = [ base mtl ];
       homepage = "https://github.com/DanBurton/tardis";
       description = "Bidirectional state monad transformer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tasty" = callPackage
    ({ mkDerivation, ansi-terminal, async, base, clock, containers
     , deepseq, mtl, optparse-applicative, regex-tdfa-rc, stm, tagged
     , unbounded-delays
     }:
     mkDerivation {
       pname = "tasty";
       version = "0.11.0.2";
       sha256 = "0qrwjfgijws6pihim4d2z557hp0k65lz6n7mvi9agzbb0jdgk1rx";
       revision = "2";
       editedCabalFile = "1hgl1gz7r8blgvwnh8ag7dd1j2qzqahcni85p4r22ws2rr2wwk68";
       libraryHaskellDepends = [
         ansi-terminal async base clock containers deepseq mtl
         optparse-applicative regex-tdfa-rc stm tagged unbounded-delays
       ];
       homepage = "http://documentup.com/feuerbach/tasty";
       description = "Modern and extensible testing framework";
       license = stdenv.lib.licenses.mit;
     }) {};
  "tasty-ant-xml" = callPackage
    ({ mkDerivation, base, containers, generic-deriving, ghc-prim, mtl
     , stm, tagged, tasty, transformers, xml
     }:
     mkDerivation {
       pname = "tasty-ant-xml";
       version = "1.0.2";
       sha256 = "0pgz2lclg2hp72ykljcbxd88pjanfdfk8m5vb2qzcyjr85kwrhxv";
       libraryHaskellDepends = [
         base containers generic-deriving ghc-prim mtl stm tagged tasty
         transformers xml
       ];
       homepage = "http://github.com/ocharles/tasty-ant-xml";
       description = "Render tasty output to XML for Jenkins";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tasty-dejafu" = callPackage
    ({ mkDerivation, base, dejafu, tasty }:
     mkDerivation {
       pname = "tasty-dejafu";
       version = "0.2.0.0";
       sha256 = "1bjk2h6vx5dhs4sc7c0h311ch2zj8gsad3p4l2nlcabbdig3386b";
       libraryHaskellDepends = [ base dejafu tasty ];
       homepage = "https://github.com/barrucadu/dejafu";
       description = "Deja Fu support for the Tasty test framework";
       license = stdenv.lib.licenses.mit;
     }) {};
  "tasty-expected-failure" = callPackage
    ({ mkDerivation, base, tagged, tasty }:
     mkDerivation {
       pname = "tasty-expected-failure";
       version = "0.11.0.3";
       sha256 = "0992wbywgwl8klk069zbzp1h7vwpqxinaxy4d062iv25z75rnjsk";
       libraryHaskellDepends = [ base tagged tasty ];
       homepage = "http://github.com/nomeata/tasty-expected-failure";
       description = "Mark tasty tests as failure expected";
       license = stdenv.lib.licenses.mit;
     }) {};
  "tasty-fail-fast" = callPackage
    ({ mkDerivation, base, containers, directory, stm, tagged, tasty
     , tasty-golden, tasty-hunit, tasty-tap
     }:
     mkDerivation {
       pname = "tasty-fail-fast";
       version = "0.0.2";
       sha256 = "1iis2p6amiph2cv351q4vha2h06cgv6sr93n0qd6ydayx2rn7r18";
       libraryHaskellDepends = [ base containers stm tagged tasty ];
       testHaskellDepends = [
         base directory tasty tasty-golden tasty-hunit tasty-tap
       ];
       homepage = "http://github.com/MichaelXavier/tasty-fail-fast#readme";
       description = "Adds the ability to fail a tasty test suite on first test failure";
       license = stdenv.lib.licenses.mit;
     }) {};
  "tasty-golden" = callPackage
    ({ mkDerivation, async, base, bytestring, containers, deepseq
     , directory, filepath, mtl, optparse-applicative, process, tagged
     , tasty, tasty-hunit, temporary, temporary-rc
     }:
     mkDerivation {
       pname = "tasty-golden";
       version = "2.3.1";
       sha256 = "1wfbdn0nv8j8zv3snvxvb4f5wv30mp2vr0nagihdbz9sqrysb4pj";
       revision = "1";
       editedCabalFile = "0q1qa4s89arrakxbk9s2xxvfpiq072lhdv7pgig9y4jj4cil1v7c";
       libraryHaskellDepends = [
         async base bytestring containers deepseq directory filepath mtl
         optparse-applicative process tagged tasty temporary
       ];
       testHaskellDepends = [
         base directory filepath process tasty tasty-hunit temporary-rc
       ];
       homepage = "https://github.com/feuerbach/tasty-golden";
       description = "Golden tests support for tasty";
       license = stdenv.lib.licenses.mit;
     }) {};
  "tasty-hspec" = callPackage
    ({ mkDerivation, base, hspec, hspec-core, QuickCheck, random
     , tagged, tasty, tasty-quickcheck, tasty-smallcheck
     }:
     mkDerivation {
       pname = "tasty-hspec";
       version = "1.1.2";
       sha256 = "0rxb7w2pzk22yz0x3ik5hv97rwsawdrb5bhsg6jqnkk9f2g41ib9";
       revision = "1";
       editedCabalFile = "18g7q1lf71j2d2wvv541djxwpjmzbyhambvwhfl2iqfcdsasmh88";
       libraryHaskellDepends = [
         base hspec hspec-core QuickCheck random tagged tasty
         tasty-quickcheck tasty-smallcheck
       ];
       homepage = "https://github.com/mitchellwrosen/tasty-hspec";
       description = "Hspec support for the Tasty test framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tasty-html" = callPackage
    ({ mkDerivation, base, blaze-html, bytestring, containers, filepath
     , generic-deriving, mtl, stm, tagged, tasty, text, transformers
     }:
     mkDerivation {
       pname = "tasty-html";
       version = "0.4.1.1";
       sha256 = "06hzb4y98aqmcn3zl6mr1gwmkkl73phqc4419fwsxwqyrygirshf";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base blaze-html bytestring containers filepath generic-deriving mtl
         stm tagged tasty text transformers
       ];
       homepage = "http://github.com/feuerbach/tasty-html";
       description = "Render tasty output to HTML";
       license = stdenv.lib.licenses.mit;
     }) {};
  "tasty-hunit" = callPackage
    ({ mkDerivation, base, tasty }:
     mkDerivation {
       pname = "tasty-hunit";
       version = "0.9.2";
       sha256 = "08qnxaw34wfnzi9irs1jd4d0zczqm3k5ffkd4zwhkz0dflmgq7mf";
       libraryHaskellDepends = [ base tasty ];
       homepage = "http://documentup.com/feuerbach/tasty";
       description = "HUnit support for the Tasty test framework";
       license = stdenv.lib.licenses.mit;
     }) {};
  "tasty-kat" = callPackage
    ({ mkDerivation, base, bytestring, mtl, tasty, tasty-hunit
     , tasty-quickcheck
     }:
     mkDerivation {
       pname = "tasty-kat";
       version = "0.0.3";
       sha256 = "14yvlpli6cv6bn3kh8mlfp4x1l6ns4fvmfv6hmj75cvxyzq029d7";
       libraryHaskellDepends = [ base bytestring tasty ];
       testHaskellDepends = [
         base bytestring mtl tasty tasty-hunit tasty-quickcheck
       ];
       homepage = "https://github.com/vincenthz/tasty-kat";
       description = "Known Answer Tests (KAT) framework for tasty";
       license = stdenv.lib.licenses.mit;
     }) {};
  "tasty-quickcheck" = callPackage
    ({ mkDerivation, base, pcre-light, QuickCheck, tagged, tasty
     , tasty-hunit
     }:
     mkDerivation {
       pname = "tasty-quickcheck";
       version = "0.8.4";
       sha256 = "15rjxib5jmjq0hzj47x15kgp3awc73va4cy1pmpf7k3hvfv4qprn";
       libraryHaskellDepends = [ base QuickCheck tagged tasty ];
       testHaskellDepends = [ base pcre-light tasty tasty-hunit ];
       homepage = "http://documentup.com/feuerbach/tasty";
       description = "QuickCheck support for the Tasty test framework";
       license = stdenv.lib.licenses.mit;
     }) {};
  "tasty-rerun" = callPackage
    ({ mkDerivation, base, containers, mtl, optparse-applicative
     , reducers, split, stm, tagged, tasty, transformers
     }:
     mkDerivation {
       pname = "tasty-rerun";
       version = "1.1.5";
       sha256 = "0gj0b2hv25kw18snmnfxb7hn8rzg2nd7zi3jyyfgncd209vdwxwq";
       libraryHaskellDepends = [
         base containers mtl optparse-applicative reducers split stm tagged
         tasty transformers
       ];
       homepage = "http://github.com/ocharles/tasty-rerun";
       description = "Run tests by filtering the test tree depending on the result of previous test runs";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tasty-silver" = callPackage
    ({ mkDerivation, ansi-terminal, async, base, bytestring, containers
     , deepseq, directory, filepath, mtl, optparse-applicative, process
     , process-extras, regex-tdfa, stm, tagged, tasty, tasty-hunit
     , temporary, text, transformers
     }:
     mkDerivation {
       pname = "tasty-silver";
       version = "3.1.8.1";
       sha256 = "1c2zaacxxsk8yghd9m473fgjfc4cp15irrm89acckaqrsg7brh8d";
       libraryHaskellDepends = [
         ansi-terminal async base bytestring containers deepseq directory
         filepath mtl optparse-applicative process process-extras regex-tdfa
         stm tagged tasty temporary text
       ];
       testHaskellDepends = [
         base directory filepath process tasty tasty-hunit temporary
         transformers
       ];
       homepage = "https://github.com/phile314/tasty-silver";
       description = "A fancy test runner, including support for golden tests";
       license = stdenv.lib.licenses.mit;
     }) {};
  "tasty-smallcheck" = callPackage
    ({ mkDerivation, async, base, smallcheck, tagged, tasty }:
     mkDerivation {
       pname = "tasty-smallcheck";
       version = "0.8.1";
       sha256 = "1n66ngzllf3xrlqykwszlkwsi96n5nkm7xbpfq7774vpvfnafjri";
       libraryHaskellDepends = [ async base smallcheck tagged tasty ];
       homepage = "http://documentup.com/feuerbach/tasty";
       description = "SmallCheck support for the Tasty test framework";
       license = stdenv.lib.licenses.mit;
     }) {};
  "tasty-tap" = callPackage
    ({ mkDerivation, base, containers, directory, stm, tasty
     , tasty-golden, tasty-hunit
     }:
     mkDerivation {
       pname = "tasty-tap";
       version = "0.0.3";
       sha256 = "1z601dph7wsr7k7jrwfyf42yvh8h296bivz8lh2d5l9dcrydwp5n";
       libraryHaskellDepends = [ base containers stm tasty ];
       testHaskellDepends = [
         base directory tasty tasty-golden tasty-hunit
       ];
       homepage = "https://github.com/michaelxavier/tasty-tap";
       description = "TAP (Test Anything Protocol) Version 13 formatter for tasty";
       license = stdenv.lib.licenses.mit;
     }) {};
  "tasty-th" = callPackage
    ({ mkDerivation, base, tasty, template-haskell }:
     mkDerivation {
       pname = "tasty-th";
       version = "0.1.4";
       sha256 = "0dff9si8i1qp0s7p4hlk0l29vq7wxfglw6mvlgmld43h7rllv88q";
       libraryHaskellDepends = [ base tasty template-haskell ];
       homepage = "http://github.com/bennofs/tasty-th";
       description = "Automatic tasty test case discovery using TH";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tellbot" = callPackage
    ({ mkDerivation, base, bifunctors, bytestring, containers
     , http-conduit, mtl, network, regex-pcre, split, tagsoup, text
     , time, transformers
     }:
     mkDerivation {
       pname = "tellbot";
       version = "0.6.0.11";
       sha256 = "17vw530bgz61xx82yrq2k3prmfpsl2mqrfarisrz0kkhrhxfg285";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         base bifunctors bytestring containers http-conduit mtl network
         regex-pcre split tagsoup text time transformers
       ];
       doHaddock = false;
       homepage = "https://github.com/phaazon/tellbot";
       description = "IRC tellbot";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "template" = callPackage
    ({ mkDerivation, base, mtl, text }:
     mkDerivation {
       pname = "template";
       version = "0.2.0.10";
       sha256 = "10mcnhi2rdflmv79z0359nn5sylifvk9ih38xnjqqby6n4hs7mcg";
       libraryHaskellDepends = [ base mtl text ];
       description = "Simple string substitution";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "temporary" = callPackage
    ({ mkDerivation, base, directory, exceptions, filepath
     , transformers, unix
     }:
     mkDerivation {
       pname = "temporary";
       version = "1.2.0.4";
       sha256 = "0qk741yqnpd69sksgks2vb7zi50rglp9m498lzw4sh268a017rsi";
       libraryHaskellDepends = [
         base directory exceptions filepath transformers unix
       ];
       homepage = "http://www.github.com/feuerbach/temporary";
       description = "Portable temporary file and directory support for Windows and Unix, based on code from Cabal";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "temporary-rc" = callPackage
    ({ mkDerivation, base, directory, exceptions, filepath
     , transformers, unix
     }:
     mkDerivation {
       pname = "temporary-rc";
       version = "1.2.0.3";
       sha256 = "1nqih0qks439k3pr5kmbbc8rjdw730slrxlflqb27fbxbzb8skqs";
       libraryHaskellDepends = [
         base directory exceptions filepath transformers unix
       ];
       homepage = "http://www.github.com/feuerbach/temporary";
       description = "Portable temporary file and directory support for Windows and Unix, based on code from Cabal";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "terminal-progress-bar" = callPackage
    ({ mkDerivation, base, base-unicode-symbols, stm, stm-chans }:
     mkDerivation {
       pname = "terminal-progress-bar";
       version = "0.0.1.4";
       sha256 = "0ldvii23ks446xrd27aklh8s8pn1yi3dzhhzl05gipjqbhq3lsx3";
       libraryHaskellDepends = [
         base base-unicode-symbols stm stm-chans
       ];
       doCheck = false;
       homepage = "https://github.com/roelvandijk/terminal-progress-bar";
       description = "A simple progress bar in the terminal";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "terminal-size" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "terminal-size";
       version = "0.3.2.1";
       sha256 = "0n4nvj3dbj9gxfnprgish45asn9z4dipv9j98s8i7g2n8yb3xhmm";
       libraryHaskellDepends = [ base ];
       description = "Get terminal window height and width";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "terminfo" = callPackage
    ({ mkDerivation, base, ncurses }:
     mkDerivation {
       pname = "terminfo";
       version = "0.4.0.2";
       sha256 = "0mpqv0wn2x03mw8myc4j75hsgh1575dni6bndhqzspiz8hl8pa7y";
       libraryHaskellDepends = [ base ];
       librarySystemDepends = [ ncurses ];
       homepage = "https://github.com/judah/terminfo";
       description = "Haskell bindings to the terminfo library";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) ncurses;};
  "test-framework" = callPackage
    ({ mkDerivation, ansi-terminal, ansi-wl-pprint, base, containers
     , hostname, old-locale, random, regex-posix, time, xml
     }:
     mkDerivation {
       pname = "test-framework";
       version = "0.8.1.1";
       sha256 = "0wxjgdvb1c4ykazw774zlx86550848wbsvgjgcrdzcgbb9m650vq";
       revision = "3";
       editedCabalFile = "1b6pi4j1dpcbiyx1bpfks29x293j02z7ashs2sdc8fhzbwsr9lxj";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         ansi-terminal ansi-wl-pprint base containers hostname old-locale
         random regex-posix time xml
       ];
       homepage = "https://batterseapower.github.io/test-framework/";
       description = "Framework for running and organising tests, with HUnit and QuickCheck support";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "test-framework-hunit" = callPackage
    ({ mkDerivation, base, extensible-exceptions, HUnit, test-framework
     }:
     mkDerivation {
       pname = "test-framework-hunit";
       version = "0.3.0.2";
       sha256 = "1y0b6vg8nfm43v90lxxcydhi6qlxhfy4vpxbzm5ic2w55bh8xjwm";
       revision = "3";
       editedCabalFile = "0i9mlalv7cl1iq43ld5myrnpszq5rxmd79hk495dcb08rglhgl3z";
       libraryHaskellDepends = [
         base extensible-exceptions HUnit test-framework
       ];
       homepage = "https://batterseapower.github.io/test-framework/";
       description = "HUnit support for the test-framework package";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "test-framework-quickcheck2" = callPackage
    ({ mkDerivation, base, extensible-exceptions, QuickCheck, random
     , test-framework
     }:
     mkDerivation {
       pname = "test-framework-quickcheck2";
       version = "0.3.0.3";
       sha256 = "12p1zwrsz35r3j5gzbvixz9z1h5643rhihf5gqznmc991krwd5nc";
       revision = "4";
       editedCabalFile = "1j1lk0xpbdfvp42h6c34yq1snhl1mk6sf393raxvakfl0l7nybqd";
       libraryHaskellDepends = [
         base extensible-exceptions QuickCheck random test-framework
       ];
       homepage = "https://batterseapower.github.io/test-framework/";
       description = "QuickCheck2 support for the test-framework package";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "test-framework-smallcheck" = callPackage
    ({ mkDerivation, base, smallcheck, test-framework, transformers }:
     mkDerivation {
       pname = "test-framework-smallcheck";
       version = "0.2";
       sha256 = "1xpgpk1gp4w7w46b4rhj80fa0bcyz8asj2dcjb5x1c37b7rw90b0";
       libraryHaskellDepends = [
         base smallcheck test-framework transformers
       ];
       homepage = "https://github.com/feuerbach/smallcheck";
       description = "Support for SmallCheck tests in test-framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "test-framework-th" = callPackage
    ({ mkDerivation, base, haskell-src-exts, language-haskell-extract
     , regex-posix, template-haskell, test-framework
     }:
     mkDerivation {
       pname = "test-framework-th";
       version = "0.2.4";
       sha256 = "12lw7yj02jb9s0i7rb98jjam43j2h0gzmnbj9zi933fx7sg0sy4b";
       libraryHaskellDepends = [
         base haskell-src-exts language-haskell-extract regex-posix
         template-haskell test-framework
       ];
       homepage = "http://github.com/finnsson/test-generator";
       description = "Automagically generate the HUnit- and Quickcheck-bulk-code using Template Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "test-framework-th-prime" = callPackage
    ({ mkDerivation, base, cpphs, haskell-src-exts, template-haskell
     , test-framework
     }:
     mkDerivation {
       pname = "test-framework-th-prime";
       version = "0.0.8";
       sha256 = "0gb7bpdxzsd8fnh4ck4p1ks7nxrk7fsw97x90d4zjds5hnw3hchr";
       libraryHaskellDepends = [
         base cpphs haskell-src-exts template-haskell test-framework
       ];
       description = "Template Haskell for test framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "test-simple" = callPackage
    ({ mkDerivation, base, executable-path, mtl, process, QuickCheck
     , state-plus, template-haskell
     }:
     mkDerivation {
       pname = "test-simple";
       version = "0.1.8";
       sha256 = "15bq4ri2wk0ajcqdcaq55ydvjx759ki48cb4ygrx30ly56var2wf";
       libraryHaskellDepends = [
         base mtl QuickCheck state-plus template-haskell
       ];
       testHaskellDepends = [
         base executable-path mtl process QuickCheck
       ];
       description = "Simple Perl inspired testing";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "testing-feat" = callPackage
    ({ mkDerivation, base, mtl, QuickCheck, tagshare, template-haskell
     }:
     mkDerivation {
       pname = "testing-feat";
       version = "0.4.0.2";
       sha256 = "15gi6w7p4alnih9grklhhr8338y1aal07admbz4n2f724hnhyb2j";
       revision = "1";
       editedCabalFile = "0gyxqh0g30ldzc7hdkadkvjwbdyjqnk14g53h0gpl3mcx7hxss01";
       libraryHaskellDepends = [
         base mtl QuickCheck tagshare template-haskell
       ];
       description = "Functional Enumeration of Algebraic Types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "texmath" = callPackage
    ({ mkDerivation, base, bytestring, containers, directory, filepath
     , mtl, network-uri, pandoc-types, parsec, process, split, syb
     , temporary, text, utf8-string, xml
     }:
     mkDerivation {
       pname = "texmath";
       version = "0.8.4.2";
       sha256 = "0zdia803ywf1xb2apqsv6jxqkmvjrc4gmd0milwfra7b6lldl67f";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base containers mtl pandoc-types parsec syb xml
       ];
       executableHaskellDepends = [ network-uri ];
       testHaskellDepends = [
         base bytestring directory filepath process split temporary text
         utf8-string xml
       ];
       homepage = "http://github.com/jgm/texmath";
       description = "Conversion between formats used to represent mathematics";
       license = "GPL";
     }) {};
  "text" = callPackage
    ({ mkDerivation, array, base, binary, bytestring, deepseq
     , directory, ghc-prim, HUnit, integer-gmp, QuickCheck
     , quickcheck-unicode, random, test-framework, test-framework-hunit
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "text";
       version = "1.2.2.0";
       sha256 = "1200yp7lbiyps5amlc743inimks4mshx2jlz70d0zhdli0a95crz";
       revision = "1";
       editedCabalFile = "1yr3p8paq4g944y7h4qxvxvmcjs9n0fhkil4s8rjddd4ld4rqa5c";
       configureFlags = [ "-f-integer-simple" ];
       libraryHaskellDepends = [
         array base binary bytestring deepseq ghc-prim integer-gmp
       ];
       testHaskellDepends = [
         array base binary bytestring deepseq directory ghc-prim HUnit
         integer-gmp QuickCheck quickcheck-unicode random test-framework
         test-framework-hunit test-framework-quickcheck2
       ];
       homepage = "https://github.com/bos/text";
       description = "An efficient packed Unicode text type";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "text-binary" = callPackage
    ({ mkDerivation, base, binary, text }:
     mkDerivation {
       pname = "text-binary";
       version = "0.2.1";
       sha256 = "00paqwnngd9l88zhah9wqg4wr41mrs30xm49w8xq337yxcvz48nz";
       libraryHaskellDepends = [ base binary text ];
       homepage = "https://github.com/kawu/text-binary";
       description = "Binary instances for text types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "text-format" = callPackage
    ({ mkDerivation, array, base, double-conversion, ghc-prim
     , integer-gmp, old-locale, text, time, transformers
     }:
     mkDerivation {
       pname = "text-format";
       version = "0.3.1.1";
       sha256 = "02zfgzfjvkaxbma1h2gr95h10c8q9gyaadag41q579j68iv15qbd";
       libraryHaskellDepends = [
         array base double-conversion ghc-prim integer-gmp old-locale text
         time transformers
       ];
       homepage = "https://github.com/bos/text-format";
       description = "Text formatting";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "text-icu" = callPackage
    ({ mkDerivation, array, base, bytestring, deepseq, directory
     , ghc-prim, HUnit, icu, QuickCheck, random, test-framework
     , test-framework-hunit, test-framework-quickcheck2, text
     }:
     mkDerivation {
       pname = "text-icu";
       version = "0.7.0.1";
       sha256 = "0y3z5jda7v2iyll2148ivxfd2yhp27d3ryxrspp0cdq394klqxp2";
       libraryHaskellDepends = [ base bytestring deepseq text ];
       librarySystemDepends = [ icu ];
       testHaskellDepends = [
         array base bytestring deepseq directory ghc-prim HUnit QuickCheck
         random test-framework test-framework-hunit
         test-framework-quickcheck2 text
       ];
       homepage = "https://github.com/bos/text-icu";
       description = "Bindings to the ICU library";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) icu;};
  "text-manipulate" = callPackage
    ({ mkDerivation, base, criterion, tasty, tasty-hunit, text }:
     mkDerivation {
       pname = "text-manipulate";
       version = "0.2.0.1";
       sha256 = "0bwxyjj3ll45srxhsp2ihikgqglvjc6m02ixr8xpvyqwkcfwgsg0";
       libraryHaskellDepends = [ base text ];
       testHaskellDepends = [ base tasty tasty-hunit text ];
       benchmarkHaskellDepends = [ base criterion text ];
       homepage = "https://github.com/brendanhay/text-manipulate";
       description = "Case conversion, word boundary manipulation, and textual subjugation";
       license = "unknown";
     }) {};
  "text-show" = callPackage
    ({ mkDerivation, array, base, base-compat, base-orphans, bifunctors
     , bytestring, bytestring-builder, containers, generic-deriving
     , ghc-prim, hspec, integer-gmp, nats, QuickCheck
     , quickcheck-instances, semigroups, tagged, template-haskell, text
     , transformers, transformers-compat, void
     }:
     mkDerivation {
       pname = "text-show";
       version = "2.1.2";
       sha256 = "039jmr7j8klna4zw03nmkz3xf03j1r091cj1q9nq2ck93iiwxhbn";
       revision = "2";
       editedCabalFile = "18zdsfhpzclsx4nz7waxzn7gjn6gb9wr2wph54bvj8wrb087mcxk";
       libraryHaskellDepends = [
         array base base-compat bytestring bytestring-builder containers
         generic-deriving ghc-prim integer-gmp nats semigroups tagged
         template-haskell text transformers void
       ];
       testHaskellDepends = [
         array base base-compat base-orphans bifunctors bytestring
         bytestring-builder generic-deriving ghc-prim hspec nats QuickCheck
         quickcheck-instances tagged text transformers transformers-compat
         void
       ];
       homepage = "https://github.com/RyanGlScott/text-show";
       description = "Efficient conversion of values into Text";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "text-zipper" = callPackage
    ({ mkDerivation, base, text, vector }:
     mkDerivation {
       pname = "text-zipper";
       version = "0.3.1";
       sha256 = "1c24jy24rsl1pingfz29wisba4az30ijcdzppd88bamik3ldj1xl";
       libraryHaskellDepends = [ base text vector ];
       description = "A text editor zipper library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tf-random" = callPackage
    ({ mkDerivation, base, primitive, random, time }:
     mkDerivation {
       pname = "tf-random";
       version = "0.5";
       sha256 = "0445r2nns6009fmq0xbfpyv7jpzwv0snccjdg7hwj4xk4z0cwc1f";
       libraryHaskellDepends = [ base primitive random time ];
       description = "High-quality splittable pseudorandom number generator";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "th-desugar" = callPackage
    ({ mkDerivation, base, containers, hspec, HUnit, mtl, syb
     , template-haskell, th-lift, th-orphans
     }:
     mkDerivation {
       pname = "th-desugar";
       version = "1.5.5";
       sha256 = "18rqbln5dma0whc2qbww6ndypj89yhb0lnhhqbkbbidiq8azx36v";
       revision = "1";
       editedCabalFile = "1f6ir0gcn23kaxwl5j08r01cbjg0yx8bwc7b8j4agyjwlb2arzvd";
       libraryHaskellDepends = [
         base containers mtl syb template-haskell th-lift th-orphans
       ];
       testHaskellDepends = [
         base containers hspec HUnit mtl syb template-haskell th-lift
         th-orphans
       ];
       homepage = "http://www.cis.upenn.edu/~eir/packages/th-desugar";
       description = "Functions to desugar Template Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "th-expand-syns" = callPackage
    ({ mkDerivation, base, containers, syb, template-haskell }:
     mkDerivation {
       pname = "th-expand-syns";
       version = "0.3.0.6";
       sha256 = "03qv93pyqk8all39knsf0mzmbfdck5x61kqnyn8rbisw5c1ymx6j";
       libraryHaskellDepends = [ base containers syb template-haskell ];
       testHaskellDepends = [ base template-haskell ];
       description = "Expands type synonyms in Template Haskell ASTs";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "th-extras" = callPackage
    ({ mkDerivation, base, syb, template-haskell }:
     mkDerivation {
       pname = "th-extras";
       version = "0.0.0.2";
       sha256 = "15sqf2jjnqcssq8hp80fk0ysgwqykjjc31gvvmzg4sypskpjs8cl";
       revision = "1";
       editedCabalFile = "0ryzvqav51wdwfagmg71kq1ljgfqs9a3zr4pzmc2fcc8vapbvpyr";
       libraryHaskellDepends = [ base syb template-haskell ];
       homepage = "https://github.com/mokus0/th-extras";
       description = "A grab bag of functions for use with Template Haskell";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "th-lift" = callPackage
    ({ mkDerivation, base, ghc-prim, template-haskell }:
     mkDerivation {
       pname = "th-lift";
       version = "0.7.6";
       sha256 = "1lgc0cla7rcdzddp9r2n49hkm8z7q0s357sxgrdnsl1jmjfjqsij";
       libraryHaskellDepends = [ base ghc-prim template-haskell ];
       testHaskellDepends = [ base ghc-prim template-haskell ];
       homepage = "http://github.com/mboes/th-lift";
       description = "Derive Template Haskell's Lift class for datatypes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "th-orphans" = callPackage
    ({ mkDerivation, base, hspec, mtl, template-haskell, th-lift
     , th-reify-many
     }:
     mkDerivation {
       pname = "th-orphans";
       version = "0.13.0";
       sha256 = "105y03bxh0a2r69l603i7md17gg1vxs1jj1n40pn5q486lmfxbmx";
       libraryHaskellDepends = [
         base mtl template-haskell th-lift th-reify-many
       ];
       testHaskellDepends = [ base hspec template-haskell ];
       description = "Orphan instances for TH datatypes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "th-reify-many" = callPackage
    ({ mkDerivation, base, containers, mtl, safe, template-haskell
     , th-expand-syns
     }:
     mkDerivation {
       pname = "th-reify-many";
       version = "0.1.4";
       sha256 = "0hhchn4phg7b6ppcb6721b9ba2aincnk1g9bpd2xiybshfndmrbd";
       libraryHaskellDepends = [
         base containers mtl safe template-haskell th-expand-syns
       ];
       testHaskellDepends = [ base template-haskell ];
       homepage = "http://github.com/mgsloan/th-reify-many";
       description = "Recurseively reify template haskell datatype info";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "these" = callPackage
    ({ mkDerivation, base, bifunctors, containers, data-default-class
     , hashable, mtl, profunctors, QuickCheck, quickcheck-instances
     , semigroupoids, semigroups, tasty, tasty-quickcheck, transformers
     , transformers-compat, unordered-containers, vector
     }:
     mkDerivation {
       pname = "these";
       version = "0.6.2.1";
       sha256 = "1fwrzfpk0jcbgkzysahnvfx3dxjqs16axz1jcvvfx7a8xh1n9pa1";
       revision = "2";
       editedCabalFile = "0dcsslw9spcvi504a3drb0rihdgs2qrzmrydkbxkrqhpxajyz69q";
       libraryHaskellDepends = [
         base bifunctors containers data-default-class hashable mtl
         profunctors semigroupoids semigroups transformers
         transformers-compat unordered-containers vector
       ];
       testHaskellDepends = [
         base bifunctors containers hashable QuickCheck quickcheck-instances
         tasty tasty-quickcheck transformers unordered-containers vector
       ];
       homepage = "https://github.com/isomorphism/these";
       description = "An either-or-both data type & a generalized 'zip with padding' typeclass";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "threads" = callPackage
    ({ mkDerivation, base, stm }:
     mkDerivation {
       pname = "threads";
       version = "0.5.1.3";
       sha256 = "04b4hjwv38iv48hdaxrw8ngrid6pgia32h6vci80szgpjxslrg82";
       libraryHaskellDepends = [ base stm ];
       doCheck = false;
       homepage = "https://github.com/basvandijk/threads";
       description = "Fork threads and wait for their result";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "through-text" = callPackage
    ({ mkDerivation, base, bytestring, case-insensitive, text }:
     mkDerivation {
       pname = "through-text";
       version = "0.1.0.0";
       sha256 = "1kdl36n98kajaa7v7js2sy8bi09p8rrxmlfcclcfc1l92bd2aclk";
       revision = "2";
       editedCabalFile = "1qbzxll2zfc2y9r17yk2077lyq6f2dw1745kxn5f4r33970128k6";
       libraryHaskellDepends = [ base bytestring case-insensitive text ];
       homepage = "https://www.github.com/bergmark/through-text";
       description = "Convert textual types through Text without needing O(n^2) instances";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "thumbnail-plus" = callPackage
    ({ mkDerivation, base, bytestring, conduit, conduit-extra
     , data-default, directory, either, gd, hspec, imagesize-conduit
     , resourcet, temporary, transformers
     }:
     mkDerivation {
       pname = "thumbnail-plus";
       version = "1.0.5";
       sha256 = "0320yfgnsazl7bxm9zf077mi4dgfmlcfnzy1qpdl9w3jl5i7z441";
       libraryHaskellDepends = [
         base bytestring conduit conduit-extra data-default directory either
         gd imagesize-conduit resourcet temporary transformers
       ];
       testHaskellDepends = [
         base conduit conduit-extra data-default directory hspec resourcet
         transformers
       ];
       homepage = "https://github.com/prowdsponsor/thumbnail-plus";
       description = "Generate thumbnails easily and safely";
       license = stdenv.lib.licenses.mit;
     }) {};
  "thyme" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, bytestring, Cabal
     , containers, cpphs, criterion, deepseq, directory, filepath, mtl
     , old-locale, profunctors, QuickCheck, random
     , system-posix-redirect, text, time, vector, vector-space
     , vector-th-unbox
     }:
     mkDerivation {
       pname = "thyme";
       version = "0.3.5.5";
       sha256 = "0v3rbjl92bqggsdra72zdq6rxzb2qf1268424p94225lnwgp1il4";
       libraryHaskellDepends = [
         aeson attoparsec base bytestring containers deepseq mtl old-locale
         profunctors QuickCheck random text time vector vector-space
         vector-th-unbox
       ];
       libraryToolDepends = [ cpphs ];
       testHaskellDepends = [
         attoparsec base bytestring Cabal containers directory filepath mtl
         old-locale profunctors QuickCheck random system-posix-redirect text
         time vector-space
       ];
       benchmarkHaskellDepends = [
         base criterion mtl old-locale profunctors QuickCheck random time
         vector vector-space
       ];
       doCheck = false;
       homepage = "https://github.com/liyang/thyme";
       description = "A faster time library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "time-compat" = callPackage
    ({ mkDerivation, base, old-time, time }:
     mkDerivation {
       pname = "time-compat";
       version = "0.1.0.3";
       sha256 = "0zqgzr8yjn36rn6gflwh5s0c92vl44xzxiw0jz8d5h0h8lhi21sr";
       libraryHaskellDepends = [ base old-time time ];
       homepage = "http://hub.darcs.net/dag/time-compat";
       description = "Compatibility with old-time for the time package";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "time-lens" = callPackage
    ({ mkDerivation, base, data-lens-light, time }:
     mkDerivation {
       pname = "time-lens";
       version = "0.4.0.1";
       sha256 = "0916qfan93aq91icf87ifvskrq6s6s75rhkajvl8pxp74j28hlwz";
       libraryHaskellDepends = [ base data-lens-light time ];
       description = "Lens-based interface to Data.Time data structures";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "time-locale-compat" = callPackage
    ({ mkDerivation, base, time }:
     mkDerivation {
       pname = "time-locale-compat";
       version = "0.1.1.1";
       sha256 = "0w06qm3im9f09pjffqr1v3w5sdg5k3kyxxysqdn2c7v7h4gadmnf";
       configureFlags = [ "-f-old-locale" ];
       libraryHaskellDepends = [ base time ];
       homepage = "https://github.com/khibino/haskell-time-locale-compat";
       description = "Compatibility of TimeLocale between old-locale and time-1.5";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "time-parsers" = callPackage
    ({ mkDerivation, attoparsec, base, bifunctors, parsec, parsers
     , tasty, tasty-hunit, template-haskell, text, time
     }:
     mkDerivation {
       pname = "time-parsers";
       version = "0.1.0.0";
       sha256 = "1y6g5kkvfqc8sqd3h4s33m6hxy2c3cw93kbfla2rgrlp7mn29sz4";
       revision = "4";
       editedCabalFile = "07lylay04zn9k31a64zz7kbdsg9pm6mb1fazhfgg2anm7l5d8idj";
       libraryHaskellDepends = [ base parsers template-haskell time ];
       testHaskellDepends = [
         attoparsec base bifunctors parsec parsers tasty tasty-hunit
         template-haskell text time
       ];
       homepage = "https://github.com/phadej/time-parsers#readme";
       description = "Parsers for types in `time`";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "time-units" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "time-units";
       version = "1.0.0";
       sha256 = "16g0i6r6vj9w4lbn12jqrhgbbjjca8wbzq6546dz08aks1yrk0g1";
       libraryHaskellDepends = [ base ];
       homepage = "http://github.com/acw/time-units";
       description = "A basic library for defining units of time as types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "timeit" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "timeit";
       version = "1.0.0.0";
       sha256 = "0dkjbp636dp882zlbwvvz76k4g7ga28wksd41w6mh0k8z45xjj5x";
       libraryHaskellDepends = [ base ];
       description = "Time a computation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "timerep" = callPackage
    ({ mkDerivation, attoparsec, base, monoid-subclasses, QuickCheck
     , tasty, tasty-hunit, tasty-quickcheck, text, time
     }:
     mkDerivation {
       pname = "timerep";
       version = "2.0.0.1";
       sha256 = "0rk3svwx7axp77v92j1gpmnni0jlniw3sz55q5hpa6k43d2jr4b8";
       libraryHaskellDepends = [
         attoparsec base monoid-subclasses text time
       ];
       testHaskellDepends = [
         base QuickCheck tasty tasty-hunit tasty-quickcheck text time
       ];
       homepage = "https://github.com/HugoDaniel/timerep";
       description = "Parse and display time according to some RFCs (RFC3339, RFC2822, RFC822)";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "timezone-olson" = callPackage
    ({ mkDerivation, base, binary, bytestring, extensible-exceptions
     , time, timezone-series
     }:
     mkDerivation {
       pname = "timezone-olson";
       version = "0.1.7";
       sha256 = "1am6vqq3zxrnb444waqfajk3s1wpynw9fszqnk9ww7akf2v5abr3";
       revision = "2";
       editedCabalFile = "1ss4ipn11m6y8bq9pw9i7cs3yciqacf7y281749xc77a1w2nw19b";
       libraryHaskellDepends = [
         base binary bytestring extensible-exceptions time timezone-series
       ];
       homepage = "http://projects.haskell.org/time-ng/";
       description = "A pure Haskell parser and renderer for binary Olson timezone files";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "timezone-series" = callPackage
    ({ mkDerivation, base, time }:
     mkDerivation {
       pname = "timezone-series";
       version = "0.1.5.1";
       sha256 = "0mks5s5wdw8fi5hjhf6zbs3pfgy4gsysd1369s41kw4h7aidsi6j";
       libraryHaskellDepends = [ base time ];
       homepage = "http://projects.haskell.org/time-ng/";
       description = "Enhanced timezone handling for Data.Time";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tinylog" = callPackage
    ({ mkDerivation, auto-update, base, bytestring, containers
     , criterion, double-conversion, fast-logger, text, transformers
     , unix-time
     }:
     mkDerivation {
       pname = "tinylog";
       version = "0.12.1";
       sha256 = "1hh70788d0rd35raybix383s6bb3mnibmmpdxwbqybv2dgmm4jq9";
       revision = "1";
       editedCabalFile = "0kdhblanwf2gxbq7mnl340ays0jb1mk3af8qs5am6x7khczcvqdh";
       libraryHaskellDepends = [
         auto-update base bytestring containers double-conversion
         fast-logger text transformers unix-time
       ];
       benchmarkHaskellDepends = [ base bytestring criterion ];
       homepage = "https://github.com/twittner/tinylog/";
       description = "Simplistic logging using fast-logger";
       license = "unknown";
     }) {};
  "tinytemplate" = callPackage
    ({ mkDerivation, base, QuickCheck, text }:
     mkDerivation {
       pname = "tinytemplate";
       version = "0.1.2.0";
       sha256 = "02kxs4qkrqribqx4sk4hs4qc76x9r8ii2jr1rff17gbmymj3kirh";
       libraryHaskellDepends = [ base text ];
       testHaskellDepends = [ base QuickCheck text ];
       homepage = "http://github.com/dicomgrid/tinytemplate";
       description = "A tiny text templating library";
       license = stdenv.lib.licenses.mit;
     }) {};
  "tls" = callPackage
    ({ mkDerivation, asn1-encoding, asn1-types, async, base, bytestring
     , cereal, criterion, cryptonite, data-default-class, hourglass
     , memory, mtl, network, QuickCheck, tasty, tasty-quickcheck
     , transformers, x509, x509-store, x509-validation
     }:
     mkDerivation {
       pname = "tls";
       version = "1.3.4";
       sha256 = "1h8r3vcw572wd4sr3qkj9bzsaivml7wlb167gizva2s2dfyz5zs9";
       revision = "2";
       editedCabalFile = "0qhmsgm56hpz22r0ivi3hlmy80yfr1vbavd8r4mvy4zkx7m1228n";
       libraryHaskellDepends = [
         asn1-encoding asn1-types async base bytestring cereal cryptonite
         data-default-class memory mtl network transformers x509 x509-store
         x509-validation
       ];
       testHaskellDepends = [
         base bytestring cereal cryptonite data-default-class hourglass mtl
         QuickCheck tasty tasty-quickcheck x509 x509-validation
       ];
       benchmarkHaskellDepends = [
         base bytestring criterion cryptonite data-default-class hourglass
         mtl QuickCheck x509 x509-validation
       ];
       homepage = "http://github.com/vincenthz/hs-tls";
       description = "TLS/SSL protocol native implementation (Server and Client)";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tls-debug" = callPackage
    ({ mkDerivation, base, bytestring, cryptonite, data-default-class
     , network, pem, time, tls, x509, x509-store, x509-system
     , x509-validation
     }:
     mkDerivation {
       pname = "tls-debug";
       version = "0.4.1";
       sha256 = "0b7l026jdzy1dqj31v1fa49yvm2xy4h95zyh2x9q5rfdg3wyfl80";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         base bytestring cryptonite data-default-class network pem time tls
         x509 x509-store x509-system x509-validation
       ];
       doHaddock = false;
       homepage = "http://github.com/vincenthz/hs-tls";
       description = "Set of programs for TLS testing and debugging";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "token-bucket" = callPackage
    ({ mkDerivation, base, time }:
     mkDerivation {
       pname = "token-bucket";
       version = "0.1.0.1";
       sha256 = "1l3axqdkrjf28pxhrvdvlpf9wi79czsfvhi33w4v2wbj0g00j9ii";
       revision = "2";
       editedCabalFile = "03kkavw01mlgaxgc0ifvldn8pkq2dfncrwqrf0r33ldggfzm6qm3";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base time ];
       homepage = "https://github.com/hvr/token-bucket";
       description = "Rate limiter using lazy bucket algorithm";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "torrent" = callPackage
    ({ mkDerivation, base, bencode, binary, bytestring, containers
     , filepath, syb
     }:
     mkDerivation {
       pname = "torrent";
       version = "10000.0.0";
       sha256 = "030ll4m80ljkvq72n1aa8a2ygqa56ykkndzy5g40vh9j9j5vq52r";
       libraryHaskellDepends = [
         base bencode binary bytestring containers filepath syb
       ];
       description = "BitTorrent file parser and generater";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tostring" = callPackage
    ({ mkDerivation, base, case-insensitive, text, utf8-string }:
     mkDerivation {
       pname = "tostring";
       version = "0.2.1.1";
       sha256 = "0c95a1vjnnn3bwdz8v5hv7q2sbzn23ban3hcwqmwhmzc9ba019zg";
       libraryHaskellDepends = [ base case-insensitive text utf8-string ];
       description = "The ToString class";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tracy" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "tracy";
       version = "0.1.3.0";
       sha256 = "00fkqpm3h25yp8ivgd9vhcsh43w1r75vrrrrz2mgbm0dyxzqnacw";
       libraryHaskellDepends = [ base ];
       description = "Convenience wrappers for non-intrusive debug tracing";
       license = stdenv.lib.licenses.mit;
     }) {};
  "transformers-base" = callPackage
    ({ mkDerivation, base, stm, transformers, transformers-compat }:
     mkDerivation {
       pname = "transformers-base";
       version = "0.4.4";
       sha256 = "11r3slgpgpra6zi2kjg3g60gvv17b1fh6qxipcpk8n86qx7lk8va";
       revision = "1";
       editedCabalFile = "196pr3a4lhgklyw6nq6rv1j9djwzmvx7xrpp58carxnb55gk06pv";
       libraryHaskellDepends = [
         base stm transformers transformers-compat
       ];
       homepage = "https://github.com/mvv/transformers-base";
       description = "Lift computations from the bottom of a transformer stack";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "transformers-compat" = callPackage
    ({ mkDerivation, base, transformers }:
     mkDerivation {
       pname = "transformers-compat";
       version = "0.4.0.4";
       sha256 = "0lmg8ry6bgigb0v2lg0n74lxi8z5m85qq0qi4h1k9llyjb4in8ym";
       libraryHaskellDepends = [ base transformers ];
       doHaddock = false;
       homepage = "http://github.com/ekmett/transformers-compat/";
       description = "A small compatibility shim exposing the new types from transformers 0.3 and 0.4 to older Haskell platforms.";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "transformers-lift" = callPackage
    ({ mkDerivation, base, transformers }:
     mkDerivation {
       pname = "transformers-lift";
       version = "0.1.0.0";
       sha256 = "0fmd6v8a5r1x66v4cyb0adbajddm3mn1k43ryks01x1c3yw0p0sj";
       libraryHaskellDepends = [ base transformers ];
       description = "Ad-hoc type classes for lifting";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "traverse-with-class" = callPackage
    ({ mkDerivation, base, template-haskell, transformers }:
     mkDerivation {
       pname = "traverse-with-class";
       version = "0.2.0.3";
       sha256 = "0snms19w3n9ni1wmf4ikwpp298nc6qk6phrjxi5g023ihqqdvr6g";
       libraryHaskellDepends = [ base template-haskell transformers ];
       description = "Generic applicative traversals";
       license = stdenv.lib.licenses.mit;
     }) {};
  "tree-view" = callPackage
    ({ mkDerivation, base, containers, mtl }:
     mkDerivation {
       pname = "tree-view";
       version = "0.4";
       sha256 = "0mzywp6nipc6zs98dy4ny2s3r9d745lqpjazfnj5y4hx8swyckgn";
       libraryHaskellDepends = [ base containers mtl ];
       description = "Render trees as foldable HTML and Unicode art";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tries" = callPackage
    ({ mkDerivation, base, bytestring, bytestring-trie, composition
     , composition-extra, containers, criterion, deepseq, hashable, keys
     , mtl, QuickCheck, quickcheck-instances, rose-trees, semigroups
     , sets, tasty, tasty-quickcheck, unordered-containers
     }:
     mkDerivation {
       pname = "tries";
       version = "0.0.4";
       sha256 = "0jprcvr0rrvix3g86nwl25i1b4py00xw7gwvkkkgypmk0f567sbb";
       libraryHaskellDepends = [
         base bytestring bytestring-trie composition composition-extra
         containers deepseq hashable keys QuickCheck quickcheck-instances
         rose-trees semigroups sets unordered-containers
       ];
       testHaskellDepends = [
         base bytestring bytestring-trie composition composition-extra
         containers deepseq hashable keys mtl QuickCheck
         quickcheck-instances rose-trees semigroups sets tasty
         tasty-quickcheck unordered-containers
       ];
       benchmarkHaskellDepends = [
         base bytestring bytestring-trie composition composition-extra
         containers criterion deepseq hashable keys mtl QuickCheck
         quickcheck-instances rose-trees semigroups sets
         unordered-containers
       ];
       description = "Various trie implementations in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "trifecta" = callPackage
    ({ mkDerivation, ansi-terminal, ansi-wl-pprint, array, base
     , blaze-builder, blaze-html, blaze-markup, bytestring, charset
     , comonad, containers, deepseq, directory, doctest, filepath
     , fingertree, ghc-prim, hashable, lens, mtl, parsers, profunctors
     , QuickCheck, reducers, semigroups, transformers
     , unordered-containers, utf8-string
     }:
     mkDerivation {
       pname = "trifecta";
       version = "1.5.2";
       sha256 = "0fjhnsbafl3yw34pyhcsvrqy6a2mnhyqys6gna3rrlygs8ck7hpb";
       revision = "1";
       editedCabalFile = "0aq6nds1564wj7vvh75d80g91jxc8mxnp8gnf5mrr8w3lhq9xa8z";
       libraryHaskellDepends = [
         ansi-terminal ansi-wl-pprint array base blaze-builder blaze-html
         blaze-markup bytestring charset comonad containers deepseq
         fingertree ghc-prim hashable lens mtl parsers profunctors reducers
         semigroups transformers unordered-containers utf8-string
       ];
       testHaskellDepends = [
         base directory doctest filepath parsers QuickCheck
       ];
       homepage = "http://github.com/ekmett/trifecta/";
       description = "A modern parser combinator library with convenient diagnostics";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "true-name" = callPackage
    ({ mkDerivation, base, containers, template-haskell, time }:
     mkDerivation {
       pname = "true-name";
       version = "0.1.0.0";
       sha256 = "099zvv3dslc3ll06cyny91jhpkl5dfacfqq7v9l5wcp9qqnn08ql";
       libraryHaskellDepends = [ base template-haskell ];
       testHaskellDepends = [ base containers template-haskell time ];
       homepage = "https://github.com/liyang/true-name";
       description = "Template Haskell hack to violate another module's abstractions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ttrie" = callPackage
    ({ mkDerivation, atomic-primops, base, containers, hashable
     , primitive, QuickCheck, stm, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "ttrie";
       version = "0.1.2.1";
       sha256 = "0s2a3zr99n0k8l847jcpzpi9vz8z69jjgxqd28b0p6jmi7llyi2h";
       libraryHaskellDepends = [
         atomic-primops base hashable primitive stm
       ];
       testHaskellDepends = [
         base containers hashable QuickCheck stm test-framework
         test-framework-quickcheck2
       ];
       homepage = "http://github.com/mcschroeder/ttrie";
       description = "Contention-free STM hash map";
       license = stdenv.lib.licenses.mit;
     }) {};
  "tttool" = callPackage
    ({ mkDerivation, aeson, base, binary, bytestring, containers
     , directory, executable-path, filepath, hashable, haskeline
     , JuicyPixels, mtl, parsec, process, random, template-haskell, time
     , vector, yaml
     }:
     mkDerivation {
       pname = "tttool";
       version = "1.5.1";
       sha256 = "0q7cqs59labcd0xczgqj02qz81cmn56fyh8ia7wgnw4g60ry7ymc";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         aeson base binary bytestring containers directory executable-path
         filepath hashable haskeline JuicyPixels mtl parsec process random
         template-haskell time vector yaml
       ];
       doHaddock = false;
       homepage = "https://github.com/entropia/tip-toi-reveng";
       description = "Working with files for the Tiptoi® pen";
       license = stdenv.lib.licenses.mit;
     }) {};
  "tuple-th" = callPackage
    ({ mkDerivation, base, containers, template-haskell }:
     mkDerivation {
       pname = "tuple-th";
       version = "0.2.5";
       sha256 = "1mrl4vvxmby7sf1paf7hklzidnr6wq55822i73smqyz0xpf3gsjn";
       libraryHaskellDepends = [ base containers template-haskell ];
       description = "Generate (non-recursive) utility functions for tuples of statically known size";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tuples-homogenous-h98" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "tuples-homogenous-h98";
       version = "0.1.1.0";
       sha256 = "0fhz246wh6x0s0sjkmd3qcylsx2gfrmgmvgb7js2zjg91y7zqnh2";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/ppetr/tuples-homogenous-h98";
       description = "Wrappers for n-ary tuples with Traversable and Applicative/Monad instances";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "turtle" = callPackage
    ({ mkDerivation, async, base, clock, criterion, directory, doctest
     , foldl, hostname, managed, optional-args, optparse-applicative
     , process, stm, system-fileio, system-filepath, temporary, text
     , time, transformers, unix
     }:
     mkDerivation {
       pname = "turtle";
       version = "1.2.5";
       sha256 = "1iy5v4m55zvagj24j3mczy5mjczl3ww6ic0ds5m5f306s6v6cr80";
       revision = "1";
       editedCabalFile = "0376mna50yn78bs2147qs032ack3qz8c6xiixh7x6wyajmdyxv01";
       libraryHaskellDepends = [
         async base clock directory foldl hostname managed optional-args
         optparse-applicative process stm system-fileio system-filepath
         temporary text time transformers unix
       ];
       testHaskellDepends = [ base doctest ];
       benchmarkHaskellDepends = [ base criterion text ];
       description = "Shell programming, Haskell-style";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "twitter-conduit" = callPackage
    ({ mkDerivation, aeson, attoparsec, authenticate-oauth, base
     , bytestring, case-insensitive, conduit, conduit-extra, containers
     , data-default, doctest, hlint, hspec, http-client, http-conduit
     , http-types, lens, lens-aeson, monad-control, network-uri
     , resourcet, template-haskell, text, time, transformers
     , transformers-base, twitter-types, twitter-types-lens
     }:
     mkDerivation {
       pname = "twitter-conduit";
       version = "0.1.2";
       sha256 = "1s4m1r760fk7qzdljg4a00mvafv9p11zd7zki3yxahi0mvrc5hz8";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson attoparsec authenticate-oauth base bytestring conduit
         conduit-extra containers data-default http-client http-conduit
         http-types lens lens-aeson resourcet template-haskell text time
         transformers twitter-types twitter-types-lens
       ];
       executableHaskellDepends = [ network-uri ];
       testHaskellDepends = [
         aeson attoparsec authenticate-oauth base bytestring
         case-insensitive conduit conduit-extra containers data-default
         doctest hlint hspec http-client http-conduit http-types lens
         lens-aeson monad-control network-uri resourcet template-haskell
         text time transformers transformers-base twitter-types
         twitter-types-lens
       ];
       homepage = "https://github.com/himura/twitter-conduit";
       description = "Twitter API package with conduit interface and Streaming API support";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "twitter-feed" = callPackage
    ({ mkDerivation, aeson, authenticate-oauth, base, bytestring
     , containers, http-conduit, HUnit, test-framework
     , test-framework-hunit
     }:
     mkDerivation {
       pname = "twitter-feed";
       version = "0.2.0.5";
       sha256 = "0wqpjz6qyvkqf4f75gnfxwcly9n0hi0b7yl8kbpjlga21jdagy7s";
       libraryHaskellDepends = [
         aeson authenticate-oauth base bytestring http-conduit
       ];
       testHaskellDepends = [
         base containers HUnit test-framework test-framework-hunit
       ];
       homepage = "https://github.com/stackbuilders/twitter-feed";
       description = "Client for fetching Twitter timeline via Oauth";
       license = stdenv.lib.licenses.mit;
     }) {};
  "twitter-types" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, bytestring, derive
     , directory, filepath, HUnit, old-locale, QuickCheck
     , template-haskell, test-framework, test-framework-hunit
     , test-framework-quickcheck2, test-framework-th-prime, text, time
     , unordered-containers
     }:
     mkDerivation {
       pname = "twitter-types";
       version = "0.7.2";
       sha256 = "08njs1n2aw30g6c7dpp9bdh9iwa9mr616zkg4kf42nixypp6yhbm";
       configureFlags = [ "-ftime15" ];
       libraryHaskellDepends = [
         aeson base text time unordered-containers
       ];
       testHaskellDepends = [
         aeson attoparsec base bytestring derive directory filepath HUnit
         old-locale QuickCheck template-haskell test-framework
         test-framework-hunit test-framework-quickcheck2
         test-framework-th-prime text time unordered-containers
       ];
       homepage = "https://github.com/himura/twitter-types";
       description = "Twitter JSON parser and types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "twitter-types-lens" = callPackage
    ({ mkDerivation, base, lens, template-haskell, text, time
     , twitter-types
     }:
     mkDerivation {
       pname = "twitter-types-lens";
       version = "0.7.2";
       sha256 = "04mjrwd5f960kd7v5xq4wlyzksw06d3qj52ql1lhjki3f3papzjg";
       revision = "1";
       editedCabalFile = "0rag7vz1irirnqxh18xwvp8rg7ysx4lwrb9ysv5wcfjdggp6b6gs";
       libraryHaskellDepends = [
         base lens template-haskell text time twitter-types
       ];
       homepage = "https://github.com/himura/twitter-types";
       description = "Twitter JSON types (lens powered)";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "type-aligned" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "type-aligned";
       version = "0.9.6";
       sha256 = "0mfyd9w13kd3ha43220p9qabw828xv19sxywy9imadpwrdqp51qv";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/atzeus/type-aligned";
       description = "Various type-aligned sequence data structures";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "type-eq" = callPackage
    ({ mkDerivation, base, cpphs }:
     mkDerivation {
       pname = "type-eq";
       version = "0.5";
       sha256 = "007srln0xxi27wca8dk72xp3cdwnk8iqmlqgbxi17c9l2x7lrkwz";
       revision = "1";
       editedCabalFile = "1g8m6f73pbz8mqvqbrvxhp2klj7lf624jgqdn1gchd56z4pcnryw";
       libraryHaskellDepends = [ base ];
       libraryToolDepends = [ cpphs ];
       homepage = "http://github.com/glaebhoerl/type-eq";
       description = "Type equality evidence you can carry around";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "type-level-numbers" = callPackage
    ({ mkDerivation, base, template-haskell }:
     mkDerivation {
       pname = "type-level-numbers";
       version = "0.1.1.1";
       sha256 = "12iiyaqi60fpds7fv1qvphy84rwyj71maq54mfwpcr0bdrgyymjv";
       libraryHaskellDepends = [ base template-haskell ];
       testHaskellDepends = [ base template-haskell ];
       description = "Type level numbers implemented using type families";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "type-list" = callPackage
    ({ mkDerivation, base, singletons }:
     mkDerivation {
       pname = "type-list";
       version = "0.3.0.2";
       sha256 = "1viaf9kkb0qw8xvwhw2dssa9yzns9dkbwvqnkaz8125qbwmgbrw0";
       libraryHaskellDepends = [ base singletons ];
       description = "Operations on type-level lists and tuples";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "typelits-witnesses" = callPackage
    ({ mkDerivation, base, constraints, reflection }:
     mkDerivation {
       pname = "typelits-witnesses";
       version = "0.2.0.0";
       sha256 = "0qn3n00wf5ch30spwj650gzi6llgklbb399xhs3y7p9rs5h984g4";
       libraryHaskellDepends = [ base constraints reflection ];
       homepage = "https://github.com/mstksg/typelits-witnesses";
       description = "Existential witnesses, singletons, and classes for operations on GHC TypeLits";
       license = stdenv.lib.licenses.mit;
     }) {};
  "types-compat" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "types-compat";
       version = "0.1.1";
       sha256 = "1fl3ddsz9m0s0mnd7wq6lqkkmpq0dz83aisqgs1cpg91xlllghby";
       revision = "2";
       editedCabalFile = "0h8hlx3zb7s8dfh275ich99j4aa4gdj2f8yvzwpmzgylcvn1gfwg";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/philopon/types-compat";
       description = "ghc-7.6/7.8 compatible GHC.TypeLits, Data.Typeable and Data.Proxy.";
       license = stdenv.lib.licenses.mit;
     }) {};
  "tz" = callPackage
    ({ mkDerivation, base, binary, bindings-posix, bytestring
     , containers, criterion, deepseq, HUnit, lens, QuickCheck
     , template-haskell, test-framework, test-framework-hunit
     , test-framework-quickcheck2, test-framework-th, thyme, time
     , timezone-olson, timezone-series, tzdata, unix, vector
     }:
     mkDerivation {
       pname = "tz";
       version = "0.1.0.1";
       sha256 = "0329zmw2drs0kwvhc007342xcinnj2q1xpl6ajp8cygbzgkdmz1f";
       revision = "1";
       editedCabalFile = "1ahbizgcys5z97bqrn66i4w5ixy05jczx0016rf8l44mx198cns8";
       libraryHaskellDepends = [
         base binary bytestring containers deepseq template-haskell time
         tzdata vector
       ];
       testHaskellDepends = [
         base bindings-posix HUnit QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2 test-framework-th
         time tzdata unix vector
       ];
       benchmarkHaskellDepends = [
         base bindings-posix criterion lens thyme time timezone-olson
         timezone-series unix
       ];
       preConfigure = "export TZDIR=${pkgs.tzdata}/share/zoneinfo";
       homepage = "https://github.com/nilcons/haskell-tz";
       description = "Efficient time zone handling";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "tzdata" = callPackage
    ({ mkDerivation, base, bytestring, containers, deepseq, directory
     , filemanip, filepath, HUnit, MissingH, test-framework
     , test-framework-hunit, test-framework-th, unix, vector
     }:
     mkDerivation {
       pname = "tzdata";
       version = "0.1.20150810.0";
       sha256 = "0ilhi0148i02qw0hl23ql08qd86ygnw8d6q4bm0i3m2y8dx2i069";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base bytestring containers deepseq vector
       ];
       testHaskellDepends = [
         base bytestring directory filemanip filepath HUnit MissingH
         test-framework test-framework-hunit test-framework-th unix
       ];
       homepage = "https://github.com/nilcons/haskell-tzdata";
       description = "Time zone database (as files and as a module)";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "uglymemo" = callPackage
    ({ mkDerivation, base, containers }:
     mkDerivation {
       pname = "uglymemo";
       version = "0.1.0.1";
       sha256 = "0ixqg5d0ly1r18jbgaa89i6kjzgi6c5hanw1b1y8c5fbq14yz2gy";
       libraryHaskellDepends = [ base containers ];
       description = "A simple (but internally ugly) memoization function";
       license = stdenv.lib.licenses.publicDomain;
     }) {};
  "unbound-generics" = callPackage
    ({ mkDerivation, base, containers, contravariant, criterion
     , deepseq, deepseq-generics, mtl, profunctors, QuickCheck, tasty
     , tasty-hunit, tasty-quickcheck, template-haskell, transformers
     , transformers-compat
     }:
     mkDerivation {
       pname = "unbound-generics";
       version = "0.3";
       sha256 = "01xghdrbx35lp7xgym3m8d03r5rfvy1icl1pdpp3j8sivq4w6ml9";
       libraryHaskellDepends = [
         base containers contravariant deepseq mtl profunctors
         template-haskell transformers transformers-compat
       ];
       testHaskellDepends = [
         base mtl QuickCheck tasty tasty-hunit tasty-quickcheck
       ];
       benchmarkHaskellDepends = [
         base criterion deepseq deepseq-generics
       ];
       homepage = "http://github.com/lambdageek/unbound-generics";
       description = "Support for programming with names and binders using GHC Generics";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "unbounded-delays" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "unbounded-delays";
       version = "0.1.0.9";
       sha256 = "1f4h87503m3smhip432q027wj3zih18pmz2rnafh60589ifcl420";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/basvandijk/unbounded-delays";
       description = "Unbounded thread delays and timeouts";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "unexceptionalio" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "unexceptionalio";
       version = "0.3.0";
       sha256 = "1f7h7zwky4scdcyjspg4ksfh7x6yra0wjybxq70p7vcwpgk2nzlj";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/singpolyma/unexceptionalio";
       description = "IO without any non-error, synchronous exceptions";
       license = "unknown";
     }) {};
  "unification-fd" = callPackage
    ({ mkDerivation, base, containers, logict, mtl }:
     mkDerivation {
       pname = "unification-fd";
       version = "0.10.0.1";
       sha256 = "15hrnmgr0pqq43fwgxc168r08xjgfhr2nchmz5blq46vwrh6gx2v";
       libraryHaskellDepends = [ base containers logict mtl ];
       homepage = "http://code.haskell.org/~wren/";
       description = "Simple generic unification algorithms";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "union-find" = callPackage
    ({ mkDerivation, base, containers, transformers }:
     mkDerivation {
       pname = "union-find";
       version = "0.2";
       sha256 = "1v7hj42j9w6jlzi56jg8rh4p58gfs1c5dx30wd1qqvn0p0mnihp6";
       revision = "1";
       editedCabalFile = "13cwjh03n82sgshbk4fdlvhc0pb3v979sdcdrpvnpjdqmvcprs92";
       libraryHaskellDepends = [ base containers transformers ];
       homepage = "http://github.com/nominolo/union-find";
       description = "Efficient union and equivalence testing of sets";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "uniplate" = callPackage
    ({ mkDerivation, base, containers, hashable, syb
     , unordered-containers
     }:
     mkDerivation {
       pname = "uniplate";
       version = "1.6.12";
       sha256 = "1dx8f9aw27fz8kw0ad1nm6355w5rdl7bjvb427v2bsgnng30pipw";
       libraryHaskellDepends = [
         base containers hashable syb unordered-containers
       ];
       homepage = "http://community.haskell.org/~ndm/uniplate/";
       description = "Help writing simple, concise and fast generic operations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "universe" = callPackage
    ({ mkDerivation, universe-instances-base
     , universe-instances-extended, universe-instances-trans
     , universe-reverse-instances
     }:
     mkDerivation {
       pname = "universe";
       version = "1.0";
       sha256 = "19zr9zcqc5sfp5qfn8slkk2732j1814m3j1jkbim739limwf900z";
       libraryHaskellDepends = [
         universe-instances-base universe-instances-extended
         universe-instances-trans universe-reverse-instances
       ];
       homepage = "https://github.com/dmwit/universe";
       description = "Classes for types where we know all the values";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "universe-base" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "universe-base";
       version = "1.0.2.1";
       sha256 = "0ldvk0bj16hl1v824vvsich3rzx84xm3sbppd5ahpp5cmx887i07";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/dmwit/universe";
       description = "A class for finite and recursively enumerable types and some helper functions for enumerating them";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "universe-instances-base" = callPackage
    ({ mkDerivation, base, containers, universe-base }:
     mkDerivation {
       pname = "universe-instances-base";
       version = "1.0";
       sha256 = "04njgl32lk5a0masjdjkm4l2wsyrr29g0fsp599864mp7gp504d2";
       revision = "1";
       editedCabalFile = "13s8gxsvkw6phwvd79h9f3xaqbyzsx1svpysbmq72z1hv3mqyz8a";
       libraryHaskellDepends = [ base containers universe-base ];
       homepage = "https://github.com/dmwit/universe";
       description = "Universe instances for types from the base package";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "universe-instances-extended" = callPackage
    ({ mkDerivation, adjunctions, base, comonad
     , universe-instances-base, void
     }:
     mkDerivation {
       pname = "universe-instances-extended";
       version = "1.0.0.1";
       sha256 = "15y9f0hbxqsksclxrssj4h08y0yb3nm9clqasjw6nsmi04kjfnv6";
       revision = "2";
       editedCabalFile = "1di3jk3ciikjrxzr76i0mqqza26mclnbxxak7ybkk4l06yqanj38";
       libraryHaskellDepends = [
         adjunctions base comonad universe-instances-base void
       ];
       homepage = "https://github.com/dmwit/universe";
       description = "Universe instances for types from select extra packages";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "universe-instances-trans" = callPackage
    ({ mkDerivation, base, mtl, transformers, universe-base
     , universe-instances-base
     }:
     mkDerivation {
       pname = "universe-instances-trans";
       version = "1.0.0.1";
       sha256 = "03iix0bdhfi4qlgwr8sl3gsqck6lsbkqgx245w2z5yaaxgqpq10d";
       revision = "1";
       editedCabalFile = "0dcwgbgmbkjwzbxlncpl1b5hgjrmkl73djknjkhbnh02pysbwv69";
       libraryHaskellDepends = [
         base mtl transformers universe-base universe-instances-base
       ];
       homepage = "https://github.com/dmwit/universe";
       description = "Universe instances for types from the transformers and mtl packages";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "universe-reverse-instances" = callPackage
    ({ mkDerivation, base, containers, universe-instances-base }:
     mkDerivation {
       pname = "universe-reverse-instances";
       version = "1.0";
       sha256 = "0jcd7qyvzq8xxv9d3hfi0f1h48xdsy9r9xnxgxc7ggga4szirm79";
       revision = "1";
       editedCabalFile = "0rq6h7yghnzrnv56pxnlfr6cfih8dbnhc6hh5416pgy5bxsa0ydj";
       libraryHaskellDepends = [
         base containers universe-instances-base
       ];
       homepage = "https://github.com/dmwit/universe";
       description = "instances of standard classes that are made possible by enumerations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "unix-bytestring" = callPackage
    ({ mkDerivation, base, bytestring }:
     mkDerivation {
       pname = "unix-bytestring";
       version = "0.3.7.3";
       sha256 = "1340zxy9w8nmmhhwgg9rznvz8iyfhinpycdpkryqp60ilhyjgv53";
       libraryHaskellDepends = [ base bytestring ];
       homepage = "http://code.haskell.org/~wren/";
       description = "Unix/Posix-specific functions for ByteStrings";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "unix-compat" = callPackage
    ({ mkDerivation, base, unix }:
     mkDerivation {
       pname = "unix-compat";
       version = "0.4.1.4";
       sha256 = "0jxk7j5pz2kgfpqr4hznndjg31pqj5xg2qfc5308fcn9xyg1myps";
       revision = "2";
       editedCabalFile = "170j8a6dp825iwmk4v34pgi7c6pmkcjcrip5vznkxvdsjxagp71c";
       libraryHaskellDepends = [ base unix ];
       homepage = "http://github.com/jystic/unix-compat";
       description = "Portable POSIX-compatibility layer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "unix-time" = callPackage
    ({ mkDerivation, base, binary, bytestring, doctest, hspec
     , old-locale, old-time, QuickCheck, time
     }:
     mkDerivation {
       pname = "unix-time";
       version = "0.3.6";
       sha256 = "0dyvyxwaffb94bgri1wc4b9wqaasy32pyjn0lww3dqblxv8fn5ax";
       libraryHaskellDepends = [ base binary bytestring old-time ];
       testHaskellDepends = [
         base bytestring doctest hspec old-locale old-time QuickCheck time
       ];
       doCheck = false;
       description = "Unix time parser/formatter and utilities";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "unordered-containers" = callPackage
    ({ mkDerivation, base, bytestring, ChasingBottoms, containers
     , criterion, deepseq, hashable, hashmap, HUnit, mtl, QuickCheck
     , random, test-framework, test-framework-hunit
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "unordered-containers";
       version = "0.2.5.1";
       sha256 = "06l1xv7vhpxly75saxdrbc6p2zlgz1az278arfkz4rgawfnphn3f";
       revision = "1";
       editedCabalFile = "0kbd4c2vfv10w8biqfhf4n5gljjy6y23x4qi84gnrpp6riaqhfsp";
       libraryHaskellDepends = [ base deepseq hashable ];
       testHaskellDepends = [
         base ChasingBottoms containers hashable HUnit QuickCheck
         test-framework test-framework-hunit test-framework-quickcheck2
       ];
       benchmarkHaskellDepends = [
         base bytestring containers criterion deepseq hashable hashmap mtl
         random
       ];
       homepage = "https://github.com/tibbe/unordered-containers";
       description = "Efficient hashing-based container types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "uri-bytestring" = callPackage
    ({ mkDerivation, attoparsec, base, blaze-builder, bytestring
     , criterion, deepseq, deepseq-generics, derive, HUnit, lens
     , network-uri, QuickCheck, quickcheck-instances, semigroups, tasty
     , tasty-hunit, tasty-quickcheck
     }:
     mkDerivation {
       pname = "uri-bytestring";
       version = "0.1.9.2";
       sha256 = "1c2vrkzvv59jh1vx8fb52r4brf1hc4jizw62xcw6yrbwjmnj6l9x";
       libraryHaskellDepends = [
         attoparsec base blaze-builder bytestring
       ];
       testHaskellDepends = [
         attoparsec base blaze-builder bytestring derive HUnit lens
         QuickCheck quickcheck-instances semigroups tasty tasty-hunit
         tasty-quickcheck
       ];
       benchmarkHaskellDepends = [
         base blaze-builder bytestring criterion deepseq deepseq-generics
         network-uri
       ];
       homepage = "https://github.com/Soostone/uri-bytestring";
       description = "Haskell URI parsing as ByteStrings";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "uri-encode" = callPackage
    ({ mkDerivation, base, bytestring, network-uri, text, utf8-string
     }:
     mkDerivation {
       pname = "uri-encode";
       version = "1.5.0.4";
       sha256 = "10pmg48h1az474qsr951inyvkm5y9xqwrdzyvxf83k53i07kijpp";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring network-uri text utf8-string
       ];
       description = "Unicode aware uri-encoding";
       license = "unknown";
     }) {};
  "uri-templater" = callPackage
    ({ mkDerivation, ansi-wl-pprint, base, charset, containers, dlist
     , HTTP, HUnit, mtl, parsers, template-haskell, text, trifecta
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "uri-templater";
       version = "0.2.0.0";
       sha256 = "0ypyi5vz7fjgvw1xicjksjfbpvm472dif2jw6pn09jfgqkal075s";
       revision = "1";
       editedCabalFile = "1vfss1nrl0l8m5fl57vi1cw0s7cgf7aqrqfcbyr0kjl7grfzpwhr";
       libraryHaskellDepends = [
         ansi-wl-pprint base charset containers dlist HTTP mtl parsers
         template-haskell text trifecta unordered-containers vector
       ];
       testHaskellDepends = [
         ansi-wl-pprint base HUnit mtl template-haskell
       ];
       homepage = "http://github.com/sanetracker/uri-templater";
       description = "Parsing & Quasiquoting for RFC 6570 URI Templates";
       license = stdenv.lib.licenses.mit;
     }) {};
  "url" = callPackage
    ({ mkDerivation, base, utf8-string }:
     mkDerivation {
       pname = "url";
       version = "2.1.3";
       sha256 = "0qag18wbrq9jjk1444mjigz1xl7xl03fz66b1lnya9qaihzpxwjs";
       libraryHaskellDepends = [ base utf8-string ];
       homepage = "http://www.haskell.org/haskellwiki/Url";
       description = "A library for working with URLs";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "urlpath" = callPackage
    ({ mkDerivation, base, exceptions, mmorph, monad-control
     , monad-logger, mtl, path-extra, resourcet, transformers
     , transformers-base
     }:
     mkDerivation {
       pname = "urlpath";
       version = "5.0.0.1";
       sha256 = "1qvwb2yjzz3nkm5vb6vgnhav8fqw13n7h4pr5nw9nq1n9ijq1vh3";
       libraryHaskellDepends = [
         base exceptions mmorph monad-control monad-logger mtl path-extra
         resourcet transformers transformers-base
       ];
       description = "Painfully simple URL deployment";
       license = stdenv.lib.licenses.mit;
     }) {};
  "userid" = callPackage
    ({ mkDerivation, aeson, base, boomerang, safecopy, web-routes
     , web-routes-th
     }:
     mkDerivation {
       pname = "userid";
       version = "0.1.2.5";
       sha256 = "0v52zhg2rswmad3faaqbr91w2nvwcih12yz8dk83wgydl29j5lhx";
       libraryHaskellDepends = [
         aeson base boomerang safecopy web-routes web-routes-th
       ];
       homepage = "http://www.github.com/Happstack/userid";
       description = "The UserId type and useful instances for web development";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "users" = callPackage
    ({ mkDerivation, aeson, base, bcrypt, path-pieces, text, time }:
     mkDerivation {
       pname = "users";
       version = "0.4.0.0";
       sha256 = "0gwzaqndfll154vh4947j2a45y0a5n3l3zkjg1k08vkmj0q22kiy";
       revision = "1";
       editedCabalFile = "0cvgniiwz18flqj7ksr290fqqhfvqrgnc031mj5nyrhdynkj1cmk";
       libraryHaskellDepends = [
         aeson base bcrypt path-pieces text time
       ];
       homepage = "https://github.com/agrafix/users";
       description = "A library simplifying user management for web applications";
       license = stdenv.lib.licenses.mit;
     }) {};
  "users-persistent" = callPackage
    ({ mkDerivation, aeson, base, bytestring, hspec, monad-logger, mtl
     , persistent, persistent-sqlite, persistent-template, temporary
     , text, time, transformers, users, users-test, uuid
     }:
     mkDerivation {
       pname = "users-persistent";
       version = "0.4.0.0";
       sha256 = "0iv3ry4ibar1l8wi3a06sn2adjl9whbif8iz1r4sdypzbgg7mxmv";
       libraryHaskellDepends = [
         aeson base bytestring mtl persistent persistent-template text time
         transformers users uuid
       ];
       testHaskellDepends = [
         base hspec monad-logger persistent-sqlite temporary text users-test
       ];
       doCheck = false;
       homepage = "https://github.com/agrafix/users";
       description = "A persistent backend for the users package";
       license = stdenv.lib.licenses.mit;
     }) {};
  "users-postgresql-simple" = callPackage
    ({ mkDerivation, aeson, base, bytestring, hspec, mtl
     , postgresql-simple, text, time, users, users-test, uuid
     }:
     mkDerivation {
       pname = "users-postgresql-simple";
       version = "0.4.0.0";
       sha256 = "0nb8n8h6mmjncl3qmczavwqhdrrf77f34y6lypfrbpby15nk4fwm";
       libraryHaskellDepends = [
         aeson base bytestring mtl postgresql-simple text time users uuid
       ];
       testHaskellDepends = [ base hspec postgresql-simple users-test ];
       doCheck = false;
       homepage = "https://github.com/agrafix/users";
       description = "A PostgreSQL backend for the users package";
       license = stdenv.lib.licenses.mit;
     }) {};
  "users-test" = callPackage
    ({ mkDerivation, aeson, base, hspec, text, users }:
     mkDerivation {
       pname = "users-test";
       version = "0.4.0.0";
       sha256 = "0dji1irh9pgfnbph83nipigs45phqfq499kj1bx1cv47nyij5wfi";
       libraryHaskellDepends = [ aeson base hspec text users ];
       homepage = "https://github.com/agrafix/users";
       description = "Library to test backends for the users library";
       license = stdenv.lib.licenses.mit;
     }) {};
  "utf8-light" = callPackage
    ({ mkDerivation, base, bytestring, ghc-prim }:
     mkDerivation {
       pname = "utf8-light";
       version = "0.4.2";
       sha256 = "0rwyc5z331yfnm4hpx0sph6i1zvkd1z10vvglhnp0vc9wy644k0q";
       libraryHaskellDepends = [ base bytestring ghc-prim ];
       description = "Unicode";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "utf8-string" = callPackage
    ({ mkDerivation, base, bytestring }:
     mkDerivation {
       pname = "utf8-string";
       version = "1.0.1.1";
       sha256 = "0h7imvxkahiy8pzr8cpsimifdfvv18lizrb33k6mnq70rcx9w2zv";
       revision = "3";
       editedCabalFile = "02vhj5gykkqa2dyn7s6gn8is1b5fdn9xcqqvlls268g7cpv6rk38";
       libraryHaskellDepends = [ base bytestring ];
       homepage = "http://github.com/glguy/utf8-string/";
       description = "Support for reading and writing UTF8 Strings";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "utility-ht" = callPackage
    ({ mkDerivation, base, QuickCheck }:
     mkDerivation {
       pname = "utility-ht";
       version = "0.0.11";
       sha256 = "04jq4gf1savnx7hnb01sahnmq9k1kgb7493iy4c9s0mlxb0wbp2w";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base QuickCheck ];
       description = "Various small helper functions for Lists, Maybes, Tuples, Functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "uu-interleaved" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "uu-interleaved";
       version = "0.2.0.0";
       sha256 = "1rysap86jrq43b99ay52nrmbdpcba7cl0ac85nsb7gll1rbyr59i";
       libraryHaskellDepends = [ base ];
       homepage = "http://www.cs.uu.nl/wiki/bin/view/HUT/ParserCombinators";
       description = "Providing an interleaving combinator for use with applicative/alternative style implementations";
       license = stdenv.lib.licenses.mit;
     }) {};
  "uu-parsinglib" = callPackage
    ({ mkDerivation, base, ListLike, time, uu-interleaved }:
     mkDerivation {
       pname = "uu-parsinglib";
       version = "2.9.1";
       sha256 = "0cic0f689a6n2si43ijyvkp174y1yfppqv64dicwxz6rm2jhz70d";
       revision = "1";
       editedCabalFile = "119chhzf3qz3aah2dwwczbkckgplgmad7v1s299i8yfh6lx79636";
       libraryHaskellDepends = [ base ListLike time uu-interleaved ];
       homepage = "http://www.cs.uu.nl/wiki/bin/view/HUT/ParserCombinators";
       description = "Fast, online, error-correcting, monadic, applicative, merging, permuting, interleaving, idiomatic parser combinators";
       license = stdenv.lib.licenses.mit;
     }) {};
  "uuid" = callPackage
    ({ mkDerivation, base, binary, bytestring, cryptohash, network-info
     , random, text, time, uuid-types
     }:
     mkDerivation {
       pname = "uuid";
       version = "1.3.11";
       sha256 = "1m8lk12ls4c5xx1y3wm2n2spm2c5slwb27k6zrdibja8z397c637";
       libraryHaskellDepends = [
         base binary bytestring cryptohash network-info random text time
         uuid-types
       ];
       doCheck = false;
       homepage = "https://github.com/aslatter/uuid";
       description = "For creating, comparing, parsing and printing Universally Unique Identifiers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "uuid-orphans" = callPackage
    ({ mkDerivation, base, safecopy, text, uuid-types, web-routes }:
     mkDerivation {
       pname = "uuid-orphans";
       version = "1.3.11.1";
       sha256 = "0xcbg9qi6r6xh0jba8h88dbikib6sr2wgmpbhhfymgy6klvjhh16";
       libraryHaskellDepends = [
         base safecopy text uuid-types web-routes
       ];
       description = "Orphan instances for the UUID datatype";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "uuid-types" = callPackage
    ({ mkDerivation, base, binary, bytestring, containers, criterion
     , deepseq, hashable, random, text
     }:
     mkDerivation {
       pname = "uuid-types";
       version = "1.0.2";
       sha256 = "019f9w1jvqacbxmq828wsn6zpwp5yw7bkhyj34a4cc2zq3bfkijn";
       libraryHaskellDepends = [
         base binary bytestring deepseq hashable random text
       ];
       benchmarkHaskellDepends = [
         base bytestring containers criterion deepseq random
       ];
       doCheck = false;
       homepage = "https://github.com/aslatter/uuid";
       description = "Type definitions for Universally Unique Identifiers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "validate-input" = callPackage
    ({ mkDerivation, base, bytestring, either, hspec, mtl, pcre-heavy
     , QuickCheck, semigroups, string-conversions, text
     }:
     mkDerivation {
       pname = "validate-input";
       version = "0.4.0.0";
       sha256 = "1yd187xa762b6zwjsyh3qp11sn3cnwh8g5imp0izk7a22x5y5yi0";
       libraryHaskellDepends = [
         base bytestring either mtl pcre-heavy semigroups string-conversions
         text
       ];
       testHaskellDepends = [ base hspec QuickCheck ];
       homepage = "https://github.com/agrafix/validate-input";
       description = "Input validation combinator library";
       license = stdenv.lib.licenses.mit;
     }) {};
  "validation" = callPackage
    ({ mkDerivation, base, bifunctors, directory, doctest, filepath
     , lens, mtl, QuickCheck, semigroupoids, semigroups
     , template-haskell, transformers
     }:
     mkDerivation {
       pname = "validation";
       version = "0.5.2";
       sha256 = "0dslygaw3rsbzm6y6dsfd72vp5ihgypvdj9r73ncxffmx9bmh6nx";
       libraryHaskellDepends = [
         base bifunctors lens mtl semigroupoids semigroups transformers
       ];
       testHaskellDepends = [
         base directory doctest filepath QuickCheck template-haskell
       ];
       homepage = "https://github.com/NICTA/validation";
       description = "A data-type like Either but with an accumulating Applicative";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "vault" = callPackage
    ({ mkDerivation, base, containers, hashable, unordered-containers
     }:
     mkDerivation {
       pname = "vault";
       version = "0.3.0.6";
       sha256 = "0j7gcs440q7qlgzi2hn36crgp2c0w69k40g6vj9hxlm31zk3shqb";
       libraryHaskellDepends = [
         base containers hashable unordered-containers
       ];
       homepage = "https://github.com/HeinrichApfelmus/vault";
       description = "a persistent store for values of arbitrary types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "vector" = callPackage
    ({ mkDerivation, base, deepseq, ghc-prim, primitive }:
     mkDerivation {
       pname = "vector";
       version = "0.11.0.0";
       sha256 = "1r1jlksy7b0kb0fy00g64isk6nyd9wzzdq31gx5v1wn38knj0lqa";
       revision = "2";
       editedCabalFile = "1kjafhgsyjqlvrpfv2vj17hipyv0zw56a2kbl6khzn5li9szvyib";
       libraryHaskellDepends = [ base deepseq ghc-prim primitive ];
       doCheck = false;
       homepage = "https://github.com/haskell/vector";
       description = "Efficient Arrays";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "vector-algorithms" = callPackage
    ({ mkDerivation, base, bytestring, containers, mtl, mwc-random
     , primitive, QuickCheck, vector
     }:
     mkDerivation {
       pname = "vector-algorithms";
       version = "0.7.0.1";
       sha256 = "0w4hf598lpxfg58rnimcqxrbnpqq2jmpjx82qa5md3q6r90hlipd";
       revision = "1";
       editedCabalFile = "1996aj239vasr4hd5c0pi9i0bd08r6clzr76nqvf3hc5kjs7vml2";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base bytestring primitive vector ];
       executableHaskellDepends = [ base mtl mwc-random vector ];
       testHaskellDepends = [
         base bytestring containers QuickCheck vector
       ];
       homepage = "http://code.haskell.org/~dolio/";
       description = "Efficient algorithms for vector arrays";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "vector-binary-instances" = callPackage
    ({ mkDerivation, base, binary, bytestring, criterion, tasty
     , tasty-quickcheck, vector
     }:
     mkDerivation {
       pname = "vector-binary-instances";
       version = "0.2.3.1";
       sha256 = "0rmssri83w8lqk0zw7bp5y6gd1c7dcrj9dkpgc2lmj6b4y6y7ka9";
       libraryHaskellDepends = [ base binary vector ];
       testHaskellDepends = [ base binary tasty tasty-quickcheck vector ];
       benchmarkHaskellDepends = [
         base binary bytestring criterion vector
       ];
       homepage = "https://github.com/bos/vector-binary-instances";
       description = "Instances of Data.Binary and Data.Serialize for vector";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "vector-buffer" = callPackage
    ({ mkDerivation, base, deepseq, vector }:
     mkDerivation {
       pname = "vector-buffer";
       version = "0.4.1";
       sha256 = "16zxc2d25qd15nankhc974ax7q3y72mg5a77v5jsfrw291brnnlv";
       libraryHaskellDepends = [ base deepseq vector ];
       description = "A buffer compatible with Data.Vector.*";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "vector-fftw" = callPackage
    ({ mkDerivation, base, fftw, primitive, storable-complex, vector }:
     mkDerivation {
       pname = "vector-fftw";
       version = "0.1.3.5";
       sha256 = "1zmbb6yas5x3d967403xzmhz4hl97rs7izfzln93msn248qqvn7l";
       libraryHaskellDepends = [ base primitive storable-complex vector ];
       librarySystemDepends = [ fftw ];
       homepage = "http://hackage.haskell.org/package/vector-fftw";
       description = "A binding to the fftw library for one-dimensional vectors";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) fftw;};
  "vector-instances" = callPackage
    ({ mkDerivation, base, comonad, keys, pointed, semigroupoids
     , semigroups, vector
     }:
     mkDerivation {
       pname = "vector-instances";
       version = "3.3.1";
       sha256 = "0ncchs1zy3wli6ppjnn4yi64prxh323hq59y8clkxmaazrag3iv8";
       libraryHaskellDepends = [
         base comonad keys pointed semigroupoids semigroups vector
       ];
       homepage = "http://github.com/ekmett/vector-instances";
       description = "Orphan Instances for 'Data.Vector'";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "vector-space" = callPackage
    ({ mkDerivation, base, Boolean, MemoTrie, NumInstances }:
     mkDerivation {
       pname = "vector-space";
       version = "0.10.3";
       sha256 = "11f80jq1blaqgrwikiyb8glkw7a1yzx9d17q4ry1iiay7nl9mqzg";
       libraryHaskellDepends = [ base Boolean MemoTrie NumInstances ];
       description = "Vector & affine spaces, linear maps, and derivatives";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "vector-th-unbox" = callPackage
    ({ mkDerivation, base, data-default, template-haskell, vector }:
     mkDerivation {
       pname = "vector-th-unbox";
       version = "0.2.1.4";
       sha256 = "0l85csx13k82h9gq8p42ksmn58r0n261b31xnw59vifjg6kghrd7";
       revision = "1";
       editedCabalFile = "1f2024i8ijjaqxj0f3frlywg1fjbyzlcr3jwirmjyw3s461rryax";
       libraryHaskellDepends = [ base template-haskell vector ];
       testHaskellDepends = [ base data-default vector ];
       description = "Deriver for Data.Vector.Unboxed using Template Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "vhd" = callPackage
    ({ mkDerivation, base, byteable, bytestring, cereal, cipher-aes
     , cryptohash, directory, filepath, mmap, QuickCheck, random
     , storable-endian, test-framework, test-framework-quickcheck2, text
     , time
     }:
     mkDerivation {
       pname = "vhd";
       version = "0.2.2";
       sha256 = "0z7a17j0rd06kvn3v4qr0fhxg0xw6n3579477y2lvx4mcc3qyrvw";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base byteable bytestring cereal cipher-aes cryptohash directory
         filepath mmap random storable-endian text time
       ];
       testHaskellDepends = [
         base byteable bytestring cereal cryptohash filepath mmap QuickCheck
         random test-framework test-framework-quickcheck2 text time
       ];
       homepage = "https://github.com/vincenthz/hs-vhd";
       description = "Provides functions to inspect and manipulate virtual hard disk (VHD) files";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "vinyl" = callPackage
    ({ mkDerivation, base, criterion, doctest, ghc-prim, lens, linear
     , mwc-random, singletons, vector
     }:
     mkDerivation {
       pname = "vinyl";
       version = "0.5.2";
       sha256 = "02x7wspq8mki6jzrw690ji3p5vsvxg31c4xx0kgmfl36vam9bb4k";
       libraryHaskellDepends = [ base ghc-prim ];
       testHaskellDepends = [ base doctest lens singletons ];
       benchmarkHaskellDepends = [
         base criterion lens linear mwc-random vector
       ];
       description = "Extensible Records";
       license = stdenv.lib.licenses.mit;
     }) {};
  "void" = callPackage
    ({ mkDerivation, base, deepseq, ghc-prim, hashable, semigroups }:
     mkDerivation {
       pname = "void";
       version = "0.7.1";
       sha256 = "1x15x2axz84ndw2bf60vjqljhrb0w95lddaljsxrl0hcd29zvw69";
       libraryHaskellDepends = [
         base deepseq ghc-prim hashable semigroups
       ];
       homepage = "http://github.com/ekmett/void";
       description = "A Haskell 98 logically uninhabited data type";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "vty" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring, Cabal, containers
     , data-default, deepseq, directory, filepath, hashable, HUnit, lens
     , mtl, parallel, parsec, QuickCheck, quickcheck-assertions, random
     , smallcheck, stm, string-qq, terminfo, test-framework
     , test-framework-hunit, test-framework-smallcheck, text
     , transformers, unix, utf8-string, vector
     }:
     mkDerivation {
       pname = "vty";
       version = "5.4.0";
       sha256 = "1ll9fiq8x96w24q5a1nh4b2r1bdm73k458cbmz95m7h834cqlc9g";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base blaze-builder bytestring containers data-default deepseq
         directory filepath hashable lens mtl parallel parsec stm terminfo
         text transformers unix utf8-string vector
       ];
       executableHaskellDepends = [
         base containers data-default lens mtl
       ];
       testHaskellDepends = [
         base blaze-builder bytestring Cabal containers data-default deepseq
         HUnit lens mtl QuickCheck quickcheck-assertions random smallcheck
         stm string-qq terminfo test-framework test-framework-hunit
         test-framework-smallcheck text unix utf8-string vector
       ];
       homepage = "https://github.com/coreyoconnor/vty";
       description = "A simple terminal UI library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wai" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring
     , bytestring-builder, hspec, http-types, network, text
     , transformers, vault
     }:
     mkDerivation {
       pname = "wai";
       version = "3.2.0";
       sha256 = "16kw8s9i2z17xfswsn73vdnrn94qqxvvmnkzcm8l5mi0vq1nk3kz";
       libraryHaskellDepends = [
         base blaze-builder bytestring bytestring-builder http-types network
         text transformers vault
       ];
       testHaskellDepends = [ base blaze-builder bytestring hspec ];
       homepage = "https://github.com/yesodweb/wai";
       description = "Web Application Interface";
       license = stdenv.lib.licenses.mit;
     }) {};
  "wai-app-static" = callPackage
    ({ mkDerivation, base, base64-bytestring, blaze-builder, blaze-html
     , blaze-markup, byteable, bytestring, containers, cryptohash
     , cryptohash-conduit, directory, file-embed, filepath, hspec
     , http-date, http-types, mime-types, network, old-locale
     , optparse-applicative, template-haskell, temporary, text, time
     , transformers, unix-compat, unordered-containers, wai, wai-extra
     , warp, zlib
     }:
     mkDerivation {
       pname = "wai-app-static";
       version = "3.1.4.1";
       sha256 = "1m2va7ijq1c75shc87s0cqa8wi4chbm558axa2r80bdyj98y303j";
       revision = "1";
       editedCabalFile = "1gg91ffchdd7ahvly9wrsdnqan4kr0hr9wgij9gfn22bazr9mplx";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base base64-bytestring blaze-builder blaze-html blaze-markup
         byteable bytestring containers cryptohash cryptohash-conduit
         directory file-embed filepath http-date http-types mime-types
         old-locale optparse-applicative template-haskell text time
         transformers unix-compat unordered-containers wai wai-extra warp
         zlib
       ];
       executableHaskellDepends = [
         base bytestring containers directory mime-types text
       ];
       testHaskellDepends = [
         base bytestring filepath hspec http-date http-types mime-types
         network old-locale temporary text time transformers unix-compat wai
         wai-extra zlib
       ];
       homepage = "http://www.yesodweb.com/book/web-application-interface";
       description = "WAI application for static serving";
       license = stdenv.lib.licenses.mit;
     }) {};
  "wai-conduit" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring, conduit
     , http-types, transformers, wai
     }:
     mkDerivation {
       pname = "wai-conduit";
       version = "3.0.0.3";
       sha256 = "1zvsiwjq2mvkb9sjgp3ly9m968m7a2jjzr4id6jpi3mmqykj15z4";
       libraryHaskellDepends = [
         base blaze-builder bytestring conduit http-types transformers wai
       ];
       homepage = "https://github.com/yesodweb/wai";
       description = "conduit wrappers for WAI";
       license = stdenv.lib.licenses.mit;
     }) {};
  "wai-cors" = callPackage
    ({ mkDerivation, attoparsec, base, base-unicode-symbols, bytestring
     , case-insensitive, charset, directory, filepath, http-types, mtl
     , network, parsers, process, tasty, tasty-hunit, text, transformers
     , wai, wai-extra, wai-websockets, warp, websockets
     }:
     mkDerivation {
       pname = "wai-cors";
       version = "0.2.4";
       sha256 = "0s3my94ca74mxc264y4z803b3jcda28gkvgrm0ydm2fwiji4lh0x";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         attoparsec base base-unicode-symbols bytestring case-insensitive
         charset http-types mtl parsers transformers wai
       ];
       testHaskellDepends = [
         base base-unicode-symbols directory filepath http-types network
         process tasty tasty-hunit text wai wai-extra wai-websockets warp
         websockets
       ];
       doCheck = false;
       homepage = "https://github.com/larskuhtz/wai-cors";
       description = "CORS for WAI";
       license = stdenv.lib.licenses.mit;
     }) {};
  "wai-eventsource" = callPackage
    ({ mkDerivation, wai }:
     mkDerivation {
       pname = "wai-eventsource";
       version = "3.0.0";
       sha256 = "1h5zlqky7ldqbmiaixizhk1s8ghf5i3ha1xfz8flxgzr7gr0al3q";
       libraryHaskellDepends = [ wai ];
       doHaddock = false;
       homepage = "http://www.yesodweb.com/book/web-application-interface";
       description = "WAI support for server-sent events (deprecated)";
       license = stdenv.lib.licenses.mit;
     }) {};
  "wai-extra" = callPackage
    ({ mkDerivation, aeson, ansi-terminal, base, base64-bytestring
     , blaze-builder, bytestring, case-insensitive, containers, cookie
     , data-default-class, deepseq, directory, fast-logger, hspec
     , http-types, HUnit, iproute, lifted-base, network, old-locale
     , resourcet, streaming-commons, stringsearch, text, time
     , transformers, unix, unix-compat, vault, void, wai, wai-logger
     , word8, zlib
     }:
     mkDerivation {
       pname = "wai-extra";
       version = "3.0.14.1";
       sha256 = "1palc0nn96fw6hg3x4w1ckv1rvxvzv9sq20rypmm2hwsrwdg8xiw";
       libraryHaskellDepends = [
         aeson ansi-terminal base base64-bytestring blaze-builder bytestring
         case-insensitive containers cookie data-default-class deepseq
         directory fast-logger http-types iproute lifted-base network
         old-locale resourcet streaming-commons stringsearch text time
         transformers unix unix-compat vault void wai wai-logger word8 zlib
       ];
       testHaskellDepends = [
         base blaze-builder bytestring case-insensitive cookie fast-logger
         hspec http-types HUnit resourcet text time transformers wai zlib
       ];
       homepage = "http://github.com/yesodweb/wai";
       description = "Provides some basic WAI handlers and middleware";
       license = stdenv.lib.licenses.mit;
     }) {};
  "wai-handler-launch" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring, http-types
     , process, streaming-commons, transformers, wai, warp
     }:
     mkDerivation {
       pname = "wai-handler-launch";
       version = "3.0.0.5";
       sha256 = "09qjvw47y2rxa157lkkv1xf9qk03z1jf07mh9xlgisyj518fx3kn";
       libraryHaskellDepends = [
         base blaze-builder bytestring http-types process streaming-commons
         transformers wai warp
       ];
       description = "Launch a web app in the default browser";
       license = stdenv.lib.licenses.mit;
     }) {};
  "wai-logger" = callPackage
    ({ mkDerivation, auto-update, base, blaze-builder, byteorder
     , bytestring, case-insensitive, doctest, easy-file, fast-logger
     , http-types, network, unix, unix-time, wai
     }:
     mkDerivation {
       pname = "wai-logger";
       version = "2.2.5";
       sha256 = "18qbh3qzav3qryyl3v1js7fmhifakk30ks4n5cc7331a5nlnz3k7";
       libraryHaskellDepends = [
         auto-update base blaze-builder byteorder bytestring
         case-insensitive easy-file fast-logger http-types network unix
         unix-time wai
       ];
       testHaskellDepends = [ base doctest ];
       doCheck = false;
       description = "A logging system for WAI";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wai-middleware-caching" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring, http-types, wai
     }:
     mkDerivation {
       pname = "wai-middleware-caching";
       version = "0.1.0.2";
       sha256 = "13fp08ba46wn7gianfbirag8yj14s2x41fkhdb5mx7arjafgpd8m";
       libraryHaskellDepends = [
         base blaze-builder bytestring http-types wai
       ];
       testHaskellDepends = [ base ];
       homepage = "http://github.com/yogsototh/wai-middleware-caching/tree/master/wai-middleware-caching#readme";
       description = "WAI Middleware to cache things";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wai-middleware-caching-lru" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring, http-types
     , lrucache, text, wai, wai-middleware-caching
     }:
     mkDerivation {
       pname = "wai-middleware-caching-lru";
       version = "0.1.0.0";
       sha256 = "1lr8vaail00g72dgdfcgjzdd1kqwi4n0jzl1ia7bjxxdym1chz9p";
       libraryHaskellDepends = [
         base blaze-builder bytestring http-types lrucache text wai
         wai-middleware-caching
       ];
       testHaskellDepends = [ base ];
       homepage = "http://github.com/yogsototh/wai-middleware-caching/tree/master/wai-middleware-caching-lru#readme";
       description = "Initial project template from stack";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wai-middleware-caching-redis" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring, hedis, http-types
     , text, wai, wai-middleware-caching
     }:
     mkDerivation {
       pname = "wai-middleware-caching-redis";
       version = "0.2.0.0";
       sha256 = "0k3wpw9prhcac8iavzr0xdcwl8khkxks4kji03zz1n10vf1kgxbg";
       libraryHaskellDepends = [
         base blaze-builder bytestring hedis http-types text wai
         wai-middleware-caching
       ];
       testHaskellDepends = [ base ];
       homepage = "http://github.com/yogsototh/wai-middleware-caching/tree/master/wai-middleware-caching-redis#readme";
       description = "Cache Wai Middleware using Redis backend";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wai-middleware-consul" = callPackage
    ({ mkDerivation, async, base, base-prelude, bytestring, conduit
     , conduit-extra, consul-haskell, enclosed-exceptions, http-client
     , http-types, monad-control, monad-logger, network, process
     , resourcet, text, transformers, void, wai, wai-app-static
     , wai-conduit, wai-extra, warp
     }:
     mkDerivation {
       pname = "wai-middleware-consul";
       version = "0.1.0.2";
       sha256 = "0qq7kilp9a4qjja337saqccn250s6mnf3n80sgyg935hy1dmm7fq";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         async base base-prelude bytestring conduit conduit-extra
         consul-haskell enclosed-exceptions http-client http-types
         monad-control monad-logger network process resourcet text
         transformers void wai wai-conduit
       ];
       executableHaskellDepends = [
         async base base-prelude monad-logger transformers wai
         wai-app-static wai-extra warp
       ];
       homepage = "https://github.com/fpco/wai-middleware-consul";
       description = "Wai Middleware for Consul";
       license = stdenv.lib.licenses.mit;
     }) {};
  "wai-middleware-crowd" = callPackage
    ({ mkDerivation, authenticate, base, base64-bytestring, binary
     , blaze-builder, bytestring, case-insensitive, clientsession
     , containers, cookie, gitrev, http-client, http-client-tls
     , http-reverse-proxy, http-types, optparse-applicative, resourcet
     , template-haskell, text, time, transformers, unix-compat, vault
     , wai, wai-app-static, wai-extra, warp
     }:
     mkDerivation {
       pname = "wai-middleware-crowd";
       version = "0.1.4";
       sha256 = "1jw52nx1l694z86s1avw5ihwmjqp1fqvn3y52735xdzch4ssm5pl";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         authenticate base base64-bytestring binary blaze-builder bytestring
         case-insensitive clientsession containers cookie http-client
         http-client-tls http-types resourcet text time unix-compat vault
         wai
       ];
       executableHaskellDepends = [
         base bytestring clientsession gitrev http-client http-client-tls
         http-reverse-proxy http-types optparse-applicative template-haskell
         text transformers wai wai-app-static wai-extra warp
       ];
       description = "Middleware and utilities for using Atlassian Crowd authentication";
       license = stdenv.lib.licenses.mit;
     }) {};
  "wai-middleware-metrics" = callPackage
    ({ mkDerivation, base, bytestring, criterion, ekg-core, http-types
     , QuickCheck, scotty, tasty, tasty-hunit, tasty-quickcheck, text
     , time, transformers, wai, wai-extra
     }:
     mkDerivation {
       pname = "wai-middleware-metrics";
       version = "0.2.3";
       sha256 = "0aifx988h96p8bqcy94s5gn62bnyjxqam7y3w0y2439d1jhkq4n9";
       libraryHaskellDepends = [ base ekg-core http-types text time wai ];
       testHaskellDepends = [
         base bytestring ekg-core http-types QuickCheck scotty tasty
         tasty-hunit tasty-quickcheck text time transformers wai wai-extra
       ];
       benchmarkHaskellDepends = [
         base bytestring criterion ekg-core http-types scotty text time wai
         wai-extra
       ];
       homepage = "https://github.com/Helkafen/wai-middleware-metrics";
       description = "A WAI middleware to collect EKG request metrics";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wai-middleware-prometheus" = callPackage
    ({ mkDerivation, base, bytestring, data-default, doctest
     , http-types, prometheus-client, text, time, wai
     }:
     mkDerivation {
       pname = "wai-middleware-prometheus";
       version = "0.1.0.1";
       sha256 = "0drhprxja1pp0mibs2f4asl4mycy91pvyanxa0h364k9v6fwp93d";
       libraryHaskellDepends = [
         base bytestring data-default http-types prometheus-client text time
         wai
       ];
       testHaskellDepends = [ base doctest prometheus-client ];
       homepage = "https://github.com/fimad/prometheus-haskell";
       description = "WAI middlware for exposing http://prometheus.io metrics.";
       license = stdenv.lib.licenses.asl20;
     }) {};
  "wai-middleware-static" = callPackage
    ({ mkDerivation, base, base16-bytestring, bytestring, containers
     , cryptohash, directory, expiring-cache-map, filepath, http-types
     , mime-types, mtl, old-locale, text, time, wai
     }:
     mkDerivation {
       pname = "wai-middleware-static";
       version = "0.8.0";
       sha256 = "0n2yis2zqdji7qq0p3b1vg4qcw8z7kplx6yk6j4r45iq5r2syym3";
       revision = "3";
       editedCabalFile = "1adzjcj7dq5xv3x9kdsvdkfhlghhl91mrnyqnrnb7vsc482b37l1";
       libraryHaskellDepends = [
         base base16-bytestring bytestring containers cryptohash directory
         expiring-cache-map filepath http-types mime-types mtl old-locale
         text time wai
       ];
       homepage = "https://github.com/scotty-web/wai-middleware-static";
       description = "WAI middleware that serves requests to static files";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wai-middleware-throttle" = callPackage
    ({ mkDerivation, base, bytestring, containers, hashable, hspec
     , http-types, HUnit, network, stm, token-bucket, transformers, wai
     , wai-extra
     }:
     mkDerivation {
       pname = "wai-middleware-throttle";
       version = "0.2.1.0";
       sha256 = "0z7qziy3y0lxzaaf72hr598zkgg6w9288fd6ar7ipqn8p1xw0al6";
       libraryHaskellDepends = [
         base containers hashable http-types network stm token-bucket
         transformers wai
       ];
       testHaskellDepends = [
         base bytestring hspec http-types HUnit stm transformers wai
         wai-extra
       ];
       doCheck = false;
       description = "WAI Middleware for Request Throttling";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wai-predicates" = callPackage
    ({ mkDerivation, attoparsec, base, blaze-builder, bytestring
     , bytestring-conversion, case-insensitive, cookie, http-types
     , singletons, tasty, tasty-hunit, tasty-quickcheck, transformers
     , vault, vector, wai
     }:
     mkDerivation {
       pname = "wai-predicates";
       version = "0.8.6";
       sha256 = "0679zpx6hv4nl0lhw892y07pb224qgb0cvvv0wvmp5r7gb1p7fks";
       libraryHaskellDepends = [
         attoparsec base bytestring bytestring-conversion case-insensitive
         cookie http-types singletons transformers vault vector wai
       ];
       testHaskellDepends = [
         base blaze-builder bytestring case-insensitive http-types tasty
         tasty-hunit tasty-quickcheck wai
       ];
       homepage = "https://gitlab.com/twittner/wai-predicates/";
       description = "WAI request predicates";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "wai-route" = callPackage
    ({ mkDerivation, base, bytestring, http-types, mtl, QuickCheck
     , tasty, tasty-quickcheck, unordered-containers, wai
     }:
     mkDerivation {
       pname = "wai-route";
       version = "0.3.1";
       sha256 = "1vrsfpxy9snz7rpm37bnyn8c3ybymkqhfy7jfs2aysy3b00225b7";
       libraryHaskellDepends = [
         base bytestring http-types unordered-containers wai
       ];
       testHaskellDepends = [
         base bytestring http-types mtl QuickCheck tasty tasty-quickcheck
         wai
       ];
       description = "Minimalistic, efficient routing for WAI";
       license = "unknown";
     }) {};
  "wai-routes" = callPackage
    ({ mkDerivation, aeson, base, blaze-builder, bytestring
     , case-insensitive, containers, cookie, data-default-class
     , filepath, hspec, hspec-wai, hspec-wai-json, http-types
     , mime-types, monad-loops, mtl, path-pieces, random
     , template-haskell, text, vault, wai, wai-app-static, wai-extra
     }:
     mkDerivation {
       pname = "wai-routes";
       version = "0.9.7";
       sha256 = "0rkil8fdadxf5ssf58skc3a2j8d8h54dqyalnwjzd1vcvbvb6vrj";
       libraryHaskellDepends = [
         aeson base blaze-builder bytestring case-insensitive containers
         cookie data-default-class filepath http-types mime-types
         monad-loops mtl path-pieces random template-haskell text vault wai
         wai-app-static wai-extra
       ];
       testHaskellDepends = [
         aeson base hspec hspec-wai hspec-wai-json text wai
       ];
       homepage = "https://ajnsit.github.io/wai-routes/";
       description = "Typesafe URLs for Wai applications";
       license = stdenv.lib.licenses.mit;
     }) {};
  "wai-routing" = callPackage
    ({ mkDerivation, attoparsec, base, blaze-builder, bytestring
     , bytestring-conversion, case-insensitive, containers, cookie
     , criterion, http-types, tasty, tasty-hunit, tasty-quickcheck
     , transformers, wai, wai-predicates, wai-route
     }:
     mkDerivation {
       pname = "wai-routing";
       version = "0.12.3";
       sha256 = "02qbcb91j248cjsi1k51f167hzs1xbs36sr3i4jicrdc8l5x7s4w";
       libraryHaskellDepends = [
         attoparsec base bytestring bytestring-conversion case-insensitive
         cookie http-types transformers wai wai-predicates wai-route
       ];
       testHaskellDepends = [
         base blaze-builder bytestring bytestring-conversion
         case-insensitive containers http-types tasty tasty-hunit
         tasty-quickcheck wai wai-predicates
       ];
       benchmarkHaskellDepends = [
         base criterion http-types wai wai-predicates
       ];
       homepage = "https://gitlab.com/twittner/wai-routing/";
       description = "Declarative routing for WAI";
       license = stdenv.lib.licenses.mpl20;
     }) {};
  "wai-session" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring, containers
     , cookie, http-types, StateVar, time, transformers, vault, wai
     }:
     mkDerivation {
       pname = "wai-session";
       version = "0.3.2";
       sha256 = "09l3gj8l127iybr8h4xcjxxcgz5b1mcy5iyyaidixnzi7jlrqww3";
       libraryHaskellDepends = [
         base blaze-builder bytestring containers cookie http-types StateVar
         time transformers vault wai
       ];
       homepage = "https://github.com/singpolyma/wai-session";
       description = "Flexible session middleware for WAI";
       license = "unknown";
     }) {};
  "wai-session-postgresql" = callPackage
    ({ mkDerivation, base, bytestring, cereal, cookie, data-default
     , entropy, postgresql-simple, resource-pool, text, time
     , transformers, wai, wai-session
     }:
     mkDerivation {
       pname = "wai-session-postgresql";
       version = "0.2.0.4";
       sha256 = "0d0gbycym0rgjzh3y4m90qh3q6a7mwpbi96cpkjm1f0az29r9ynr";
       libraryHaskellDepends = [
         base bytestring cereal cookie data-default entropy
         postgresql-simple resource-pool text time transformers wai
         wai-session
       ];
       testHaskellDepends = [
         base bytestring data-default postgresql-simple text wai-session
       ];
       doCheck = false;
       homepage = "https://github.com/hce/postgresql-session#readme";
       description = "PostgreSQL backed Wai session store";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wai-transformers" = callPackage
    ({ mkDerivation, base, exceptions, transformers, wai }:
     mkDerivation {
       pname = "wai-transformers";
       version = "0.0.4";
       sha256 = "1h31k1hbcgpaqmj8ksw93459551v1snfn3jm0c9mj723jq9jziys";
       libraryHaskellDepends = [ base exceptions transformers wai ];
       description = "Simple parameterization of Wai's Application type";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wai-util" = callPackage
    ({ mkDerivation, aeson, base, blaze-builder, bytestring, conduit
     , http-accept, http-types, network-uri, text, transformers, wai
     , wai-extra
     }:
     mkDerivation {
       pname = "wai-util";
       version = "0.8";
       sha256 = "10rkrhs7xv6qmx31ll891c2nnaqpblyfxqmn8xwjhafp7ks1wqjm";
       libraryHaskellDepends = [
         aeson base blaze-builder bytestring conduit http-accept http-types
         network-uri text transformers wai wai-extra
       ];
       homepage = "https://github.com/singpolyma/wai-util";
       description = "Collection of utility functions for use with WAI";
       license = "unknown";
     }) {};
  "wai-websockets" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring, case-insensitive
     , file-embed, http-types, network, text, transformers, wai
     , wai-app-static, warp, websockets
     }:
     mkDerivation {
       pname = "wai-websockets";
       version = "3.0.0.8";
       sha256 = "0hm8z15sf6gv0xbwj393i4dv0z1a1mgl3p6x7a7hv4i6pi5k4g1m";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base blaze-builder bytestring case-insensitive http-types network
         transformers wai websockets
       ];
       executableHaskellDepends = [
         base blaze-builder bytestring case-insensitive file-embed
         http-types network text transformers wai wai-app-static warp
         websockets
       ];
       homepage = "http://github.com/yesodweb/wai";
       description = "Provide a bridge between WAI and the websockets package";
       license = stdenv.lib.licenses.mit;
     }) {};
  "waitra" = callPackage
    ({ mkDerivation, aeson, base, bytestring, directory, filepath
     , http-types, regex-applicative, tasty, tasty-hunit
     , template-haskell, text, wai, wai-app-static, wai-extra, warp
     }:
     mkDerivation {
       pname = "waitra";
       version = "0.0.4.0";
       sha256 = "04kcn70ydls484gzpblhd0snw4byzxzz8b2h7r673qkpnfgcc42n";
       revision = "2";
       editedCabalFile = "13xxz3dvmdnhzb61zr5y3q1g818mbjq36clrqc1v73imw17rsbvv";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base bytestring directory filepath http-types
         regex-applicative template-haskell text wai
       ];
       executableHaskellDepends = [ aeson base wai wai-app-static warp ];
       testHaskellDepends = [
         aeson base http-types tasty tasty-hunit wai wai-extra
       ];
       homepage = "https://github.com/futurice/waitra";
       description = "A very simple Wai router";
       license = stdenv.lib.licenses.mit;
     }) {};
  "warp" = callPackage
    ({ mkDerivation, array, async, auto-update, base, blaze-builder
     , bytestring, bytestring-builder, case-insensitive, containers
     , criterion, directory, doctest, ghc-prim, hashable, hspec, HTTP
     , http-date, http-types, http2, HUnit, iproute, lifted-base
     , network, process, QuickCheck, simple-sendfile, stm
     , streaming-commons, text, time, transformers, unix, unix-compat
     , vault, wai, word8
     }:
     mkDerivation {
       pname = "warp";
       version = "3.2.2";
       sha256 = "1rlnaw7494zbxafskl335z1s4v9h6482zxz8dmh3sjpwmza84ly8";
       libraryHaskellDepends = [
         array auto-update base blaze-builder bytestring bytestring-builder
         case-insensitive containers ghc-prim hashable http-date http-types
         http2 iproute network simple-sendfile stm streaming-commons text
         unix unix-compat vault wai word8
       ];
       testHaskellDepends = [
         array async auto-update base blaze-builder bytestring
         bytestring-builder case-insensitive containers directory doctest
         ghc-prim hashable hspec HTTP http-date http-types http2 HUnit
         iproute lifted-base network process QuickCheck simple-sendfile stm
         streaming-commons text time transformers unix unix-compat vault wai
         word8
       ];
       benchmarkHaskellDepends = [
         base bytestring criterion http-types network
       ];
       doCheck = false;
       homepage = "http://github.com/yesodweb/wai";
       description = "A fast, light-weight web server for WAI applications";
       license = stdenv.lib.licenses.mit;
     }) {};
  "warp-tls" = callPackage
    ({ mkDerivation, base, bytestring, data-default-class, network
     , streaming-commons, tls, wai, warp
     }:
     mkDerivation {
       pname = "warp-tls";
       version = "3.2.1";
       sha256 = "0gj8mkz9db96jrf7milhbsyfjmp556yp06jhppg9df8c9cyxv9xc";
       libraryHaskellDepends = [
         base bytestring data-default-class network streaming-commons tls
         wai warp
       ];
       homepage = "http://github.com/yesodweb/wai";
       description = "HTTP over TLS support for Warp via the TLS package";
       license = stdenv.lib.licenses.mit;
     }) {};
  "wavefront" = callPackage
    ({ mkDerivation, attoparsec, base, dlist, filepath, mtl, text
     , transformers, vector
     }:
     mkDerivation {
       pname = "wavefront";
       version = "0.7";
       sha256 = "0v21zb6wfd5ir6jcskc6y776kzp96ii7n1hzr7f4p8i2iimzvkac";
       libraryHaskellDepends = [
         attoparsec base dlist filepath mtl text transformers vector
       ];
       homepage = "https://github.com/phaazon/wavefront";
       description = "Wavefront OBJ loader";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "web-fpco" = callPackage
    ({ mkDerivation, base, happstack-server, safe, snap, snap-core
     , snap-server
     }:
     mkDerivation {
       pname = "web-fpco";
       version = "0.1.1.0";
       sha256 = "1iizmg1syjywd5hs9swcqxxzmix04hwa86p8c246xybwcklf667n";
       libraryHaskellDepends = [
         base happstack-server safe snap snap-core snap-server
       ];
       homepage = "https://github.com/fpco/web-fpco";
       description = "Wrappers for web frameworks to ease usage with the FP Complete environment";
       license = stdenv.lib.licenses.mit;
     }) {};
  "web-plugins" = callPackage
    ({ mkDerivation, base, containers, mtl, stm, text }:
     mkDerivation {
       pname = "web-plugins";
       version = "0.2.8";
       sha256 = "00w0v0q2i0jxwlav1qb967nf35bxbr6vwacs5mqficzg2d4pz969";
       libraryHaskellDepends = [ base containers mtl stm text ];
       homepage = "http://www.happstack.com/";
       description = "dynamic plugin system for web applications";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "web-routes" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring, exceptions
     , ghc-prim, hspec, http-types, HUnit, mtl, parsec, QuickCheck
     , split, text, utf8-string
     }:
     mkDerivation {
       pname = "web-routes";
       version = "0.27.10";
       sha256 = "0k3vsqniwwvdq7iwymk7y49mvx2131wm3vy9pifs86i7ffh5s3qx";
       revision = "1";
       editedCabalFile = "06z1is09mqzhy8a1l7fsf97z176d3vlifasyml4rqzwklv47wl0g";
       libraryHaskellDepends = [
         base blaze-builder bytestring exceptions ghc-prim http-types mtl
         parsec split text utf8-string
       ];
       testHaskellDepends = [ base hspec HUnit QuickCheck ];
       homepage = "http://www.happstack.com/docs/crashcourse/index.html#web-routes";
       description = "portable, type-safe URL routing";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "web-routes-boomerang" = callPackage
    ({ mkDerivation, base, boomerang, mtl, parsec, text, web-routes }:
     mkDerivation {
       pname = "web-routes-boomerang";
       version = "0.28.4";
       sha256 = "0ailw4s0c1f054q58dwylq1g1f043vw4ywk0spg5d3sk9asy8bxh";
       libraryHaskellDepends = [
         base boomerang mtl parsec text web-routes
       ];
       description = "Library for maintaining correctness and composability of URLs within an application";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "web-routes-happstack" = callPackage
    ({ mkDerivation, base, bytestring, happstack-server, text
     , web-routes
     }:
     mkDerivation {
       pname = "web-routes-happstack";
       version = "0.23.10";
       sha256 = "1vgvbbrnvqwh7caxsr4fszks2f7jvr75ly6i86zks6x9rqvz7fx7";
       libraryHaskellDepends = [
         base bytestring happstack-server text web-routes
       ];
       description = "Adds support for using web-routes with Happstack";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "web-routes-hsp" = callPackage
    ({ mkDerivation, base, hsp, text, web-routes }:
     mkDerivation {
       pname = "web-routes-hsp";
       version = "0.24.6.1";
       sha256 = "1arc22l7xk49fp80i1fkvj8xj71lqxrs2g5gnvjzwlkc0azzaz6a";
       libraryHaskellDepends = [ base hsp text web-routes ];
       description = "Adds XMLGenerator instance for RouteT monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "web-routes-th" = callPackage
    ({ mkDerivation, base, hspec, HUnit, parsec, QuickCheck, split
     , template-haskell, text, web-routes
     }:
     mkDerivation {
       pname = "web-routes-th";
       version = "0.22.4";
       sha256 = "1dp05vsr3ladp7py216ds6bhmrgsn7mzg7kj5rpds6190caag6xh";
       libraryHaskellDepends = [
         base parsec split template-haskell text web-routes
       ];
       testHaskellDepends = [ base hspec HUnit QuickCheck web-routes ];
       description = "Support for deriving PathInfo using Template Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "web-routes-wai" = callPackage
    ({ mkDerivation, base, bytestring, http-types, text, wai
     , web-routes
     }:
     mkDerivation {
       pname = "web-routes-wai";
       version = "0.24.3";
       sha256 = "070gldklv52gpvas676nw9igr4d3cd1f23prlmd2qjrjn3qvhdq7";
       libraryHaskellDepends = [
         base bytestring http-types text wai web-routes
       ];
       description = "Library for maintaining correctness of URLs within an application";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "web-routing" = callPackage
    ({ mkDerivation, base, bytestring, criterion, doctest, primitive
     , text, types-compat, unordered-containers
     }:
     mkDerivation {
       pname = "web-routing";
       version = "0.6.2";
       sha256 = "1x7imgnpq3998fk4pi2z5ba0r9xc7blf61rn1i51yqqd24la887f";
       revision = "2";
       editedCabalFile = "1kdhj3waa07br9lsw2bl4yvcq04qax5g38279hjccs8h4j3x3d1x";
       libraryHaskellDepends = [
         base bytestring primitive text types-compat unordered-containers
       ];
       testHaskellDepends = [ base doctest ];
       benchmarkHaskellDepends = [ base criterion text ];
       homepage = "https://github.com/philopon/web-routing";
       description = "simple routing library";
       license = stdenv.lib.licenses.mit;
     }) {};
  "webdriver" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, base64-bytestring
     , bytestring, data-default-class, directory, directory-tree
     , exceptions, filepath, http-client, http-types, lifted-base
     , monad-control, network, network-uri, scientific, temporary, text
     , time, transformers, transformers-base, unordered-containers
     , vector, zip-archive
     }:
     mkDerivation {
       pname = "webdriver";
       version = "0.8.1";
       sha256 = "0gwk0jfw03k0ck9kapq0gwm76c8r3kf0jylr6qyp3km63wnd5k3l";
       libraryHaskellDepends = [
         aeson attoparsec base base64-bytestring bytestring
         data-default-class directory directory-tree exceptions filepath
         http-client http-types lifted-base monad-control network
         network-uri scientific temporary text time transformers
         transformers-base unordered-containers vector zip-archive
       ];
       doCheck = false;
       homepage = "https://github.com/kallisti-dev/hs-webdriver";
       description = "a Haskell client for the Selenium WebDriver protocol";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "webdriver-angular" = callPackage
    ({ mkDerivation, aeson, base, hspec, hspec-webdriver
     , language-javascript, template-haskell, text, transformers
     , unordered-containers, wai-app-static, warp, webdriver
     }:
     mkDerivation {
       pname = "webdriver-angular";
       version = "0.1.9";
       sha256 = "0ffjjcx39hjfiz30q09zj4mganx6k07nq5dq369k9hjjj4n0nr44";
       libraryHaskellDepends = [
         aeson base language-javascript template-haskell text transformers
         unordered-containers webdriver
       ];
       testHaskellDepends = [
         base hspec hspec-webdriver transformers wai-app-static warp
         webdriver
       ];
       doCheck = false;
       homepage = "https://bitbucket.org/wuzzeb/webdriver-utils";
       description = "Webdriver actions to assist with testing a webpage which uses Angular.Js";
       license = stdenv.lib.licenses.mit;
     }) {};
  "webpage" = callPackage
    ({ mkDerivation, base, blaze-html, data-default, lucid, text }:
     mkDerivation {
       pname = "webpage";
       version = "0.0.4";
       sha256 = "0j66f07sk0p94vf29dfa0bgx010hdnhf4l0s5m3d3x3v6nas7yqp";
       libraryHaskellDepends = [
         base blaze-html data-default lucid text
       ];
       description = "Organized and simple web page scaffold for blaze and lucid";
       license = stdenv.lib.licenses.mit;
     }) {};
  "websockets" = callPackage
    ({ mkDerivation, attoparsec, base, base64-bytestring, binary
     , blaze-builder, bytestring, case-insensitive, containers, entropy
     , HUnit, network, QuickCheck, random, SHA, test-framework
     , test-framework-hunit, test-framework-quickcheck2, text
     }:
     mkDerivation {
       pname = "websockets";
       version = "0.9.6.1";
       sha256 = "1m3wnngbbf5bi0i6cprd8lksffwh33kqnz17awn8c42pb1cwnx9w";
       revision = "1";
       editedCabalFile = "03s6zyfpqi9415jn1cz9hsmk19lvr4fqd10w5478nkpsy38qds3k";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         attoparsec base base64-bytestring binary blaze-builder bytestring
         case-insensitive containers entropy network random SHA text
       ];
       executableHaskellDepends = [
         attoparsec base base64-bytestring binary blaze-builder bytestring
         case-insensitive containers entropy network random SHA text
       ];
       testHaskellDepends = [
         attoparsec base base64-bytestring binary blaze-builder bytestring
         case-insensitive containers entropy HUnit network QuickCheck random
         SHA test-framework test-framework-hunit test-framework-quickcheck2
         text
       ];
       homepage = "http://jaspervdj.be/websockets";
       description = "A sensible and clean way to write WebSocket-capable servers in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "websockets-snap" = callPackage
    ({ mkDerivation, base, bytestring, enumerator, mtl, snap-core
     , snap-server, websockets
     }:
     mkDerivation {
       pname = "websockets-snap";
       version = "0.9.2.0";
       sha256 = "03szycdvygw1zkv2s090wn2jii9sqbplgbycmpm5mfm3r0jhbhxp";
       libraryHaskellDepends = [
         base bytestring enumerator mtl snap-core snap-server websockets
       ];
       description = "Snap integration for the websockets library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "with-location" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "with-location";
       version = "0.0.0";
       sha256 = "1idsc0cwc5qd14h721awcfm2sr386l1aks6hahy41aha7pf9x4b5";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/sol/with-location#readme";
       description = "Use ImplicitParams-based source locations in a backward compatible way";
       license = stdenv.lib.licenses.mit;
     }) {};
  "withdependencies" = callPackage
    ({ mkDerivation, base, conduit, containers, hspec, HUnit, mtl }:
     mkDerivation {
       pname = "withdependencies";
       version = "0.2.2.1";
       sha256 = "0zhnrmgiqhxrhga4i0jhbgmdyqrkl1x42vv44j5iab5h42sx2maz";
       libraryHaskellDepends = [ base conduit containers mtl ];
       testHaskellDepends = [ base conduit hspec HUnit mtl ];
       homepage = "https://github.com/bartavelle/withdependencies";
       description = "Run computations that depend on one or more elements in a stream";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "witherable" = callPackage
    ({ mkDerivation, base, base-orphans, containers, hashable
     , transformers, unordered-containers, vector
     }:
     mkDerivation {
       pname = "witherable";
       version = "0.1.3.3";
       sha256 = "0v6g44sai7fl056i6hghkk1s5pfqwc7y1dwanhbjsi0vww3xdpvg";
       libraryHaskellDepends = [
         base base-orphans containers hashable transformers
         unordered-containers vector
       ];
       homepage = "https://github.com/fumieval/witherable";
       description = "Generalization of filter and catMaybes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wizards" = callPackage
    ({ mkDerivation, base, containers, control-monad-free, haskeline
     , mtl, transformers
     }:
     mkDerivation {
       pname = "wizards";
       version = "1.0.2";
       sha256 = "02yk9d01d39c3hpvlh2c6v35fzyf3nm92f6vff0qns30dmr2r8ab";
       revision = "1";
       editedCabalFile = "15vwynd5v6xm92dxkxf125grd8sv599n5bnj92qqmhlc89psxhxk";
       libraryHaskellDepends = [
         base containers control-monad-free haskeline mtl transformers
       ];
       description = "High level, generic library for interrogative user interfaces";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wl-pprint" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "wl-pprint";
       version = "1.2";
       sha256 = "166zvk4zwn2zaa9kx66m1av38m34qp6h4i65bri2sfnxgvx0700r";
       libraryHaskellDepends = [ base ];
       description = "The Wadler/Leijen Pretty Printer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wl-pprint-extras" = callPackage
    ({ mkDerivation, base, containers, HUnit, nats, semigroupoids
     , semigroups, test-framework, test-framework-hunit, text
     , utf8-string
     }:
     mkDerivation {
       pname = "wl-pprint-extras";
       version = "3.5.0.5";
       sha256 = "13wdx7l236yyv9wqsgcjlbrm5gk1bmw1z2lk4b21y699ly2imhm9";
       libraryHaskellDepends = [
         base containers nats semigroupoids semigroups text utf8-string
       ];
       testHaskellDepends = [
         base HUnit test-framework test-framework-hunit
       ];
       homepage = "http://github.com/ekmett/wl-pprint-extras/";
       description = "A free monad based on the Wadler/Leijen pretty printer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wl-pprint-terminfo" = callPackage
    ({ mkDerivation, base, bytestring, containers, nats, semigroups
     , terminfo, text, transformers, wl-pprint-extras
     }:
     mkDerivation {
       pname = "wl-pprint-terminfo";
       version = "3.7.1.3";
       sha256 = "19z5cr1wqc3xcy39dswx78b6fpxhb41798zkiwkmb97nnvzwbdmv";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base bytestring containers nats semigroups terminfo text
         transformers wl-pprint-extras
       ];
       homepage = "http://github.com/ekmett/wl-pprint-terminfo/";
       description = "A color pretty printer with terminfo support";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wl-pprint-text" = callPackage
    ({ mkDerivation, base, text }:
     mkDerivation {
       pname = "wl-pprint-text";
       version = "1.1.0.4";
       sha256 = "1xgizzimfw17mpmw2afvmnvyag976j8ggn7k5r564rkw9f0m6bgz";
       libraryHaskellDepends = [ base text ];
       description = "A Wadler/Leijen Pretty Printer for Text values";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "word-trie" = callPackage
    ({ mkDerivation, base, binary, containers, hspec, QuickCheck }:
     mkDerivation {
       pname = "word-trie";
       version = "0.3.0";
       sha256 = "10ljyb1hl4awg2c3wq5shdqj2s53q5fklf7p6np1jhn6i30c5wx3";
       revision = "1";
       editedCabalFile = "01aanzslm69z94lqy43hgyxj1ys7sqfqwn72l0snw3h2n3pjwn45";
       libraryHaskellDepends = [ base binary containers ];
       testHaskellDepends = [ base binary containers hspec QuickCheck ];
       homepage = "https://github.com/yi-editor/word-trie";
       description = "Implementation of a finite trie over words";
       license = stdenv.lib.licenses.gpl2;
     }) {};
  "word8" = callPackage
    ({ mkDerivation, base, bytestring, criterion, hspec }:
     mkDerivation {
       pname = "word8";
       version = "0.1.2";
       sha256 = "1pbn8ra3qhwvw07p375cdmp7jzlg07hgdcr4cpscz3h7b9sy7fiw";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base hspec ];
       benchmarkHaskellDepends = [ base bytestring criterion ];
       description = "Word8 library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wordpass" = callPackage
    ({ mkDerivation, base, containers, deepseq, directory, filepath
     , hflags, random-fu, random-source, text, unix-compat, vector
     }:
     mkDerivation {
       pname = "wordpass";
       version = "1.0.0.4";
       sha256 = "0plyggai2mq38bmmgc92gd0n3q4dlsywh44yflradg50aslqw0vv";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base containers deepseq directory filepath random-fu random-source
         text unix-compat vector
       ];
       executableHaskellDepends = [
         base containers deepseq directory filepath hflags random-fu
         random-source text unix-compat vector
       ];
       homepage = "https://github.com/mgajda/wordpass";
       description = "Dictionary-based password generator";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wrap" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "wrap";
       version = "0.0.0";
       sha256 = "03pmfwwx2ykjglzrc4k09q2lv8piq107j32dg0r1aadj2ysc9fzq";
       libraryHaskellDepends = [ base ];
       description = "Wrap a function's return value with another function";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wreq" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, attoparsec
     , authenticate-oauth, base, base16-bytestring, base64-bytestring
     , byteable, bytestring, case-insensitive, containers, cryptohash
     , directory, doctest, exceptions, filepath, ghc-prim, hashable
     , http-client, http-client-tls, http-types, HUnit, lens, lens-aeson
     , mime-types, network-info, psqueues, QuickCheck, snap-core
     , snap-server, template-haskell, temporary, test-framework
     , test-framework-hunit, test-framework-quickcheck2, text, time
     , time-locale-compat, transformers, unix-compat
     , unordered-containers, uuid, vector
     }:
     mkDerivation {
       pname = "wreq";
       version = "0.4.1.0";
       sha256 = "0vcfrgjjd38dd7cvknjvnvlhijzfiq0819ys1w3dfw3nzgi0k11v";
       revision = "1";
       editedCabalFile = "0dpsz8jrak4rzf51qdrx0mffbsqhysdvs63wmrfkpv3d4m1fwpa1";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson attoparsec authenticate-oauth base base16-bytestring byteable
         bytestring case-insensitive containers cryptohash exceptions
         ghc-prim hashable http-client http-client-tls http-types lens
         lens-aeson mime-types psqueues template-haskell text time
         time-locale-compat unordered-containers
       ];
       testHaskellDepends = [
         aeson aeson-pretty base base64-bytestring bytestring
         case-insensitive containers directory doctest filepath hashable
         http-client http-types HUnit lens lens-aeson network-info
         QuickCheck snap-core snap-server temporary test-framework
         test-framework-hunit test-framework-quickcheck2 text time
         transformers unix-compat uuid vector
       ];
       doCheck = false;
       homepage = "http://www.serpentine.com/wreq";
       description = "An easy-to-use HTTP client library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "x509" = callPackage
    ({ mkDerivation, asn1-encoding, asn1-parse, asn1-types, base
     , bytestring, containers, cryptonite, hourglass, memory, mtl, pem
     , tasty, tasty-quickcheck
     }:
     mkDerivation {
       pname = "x509";
       version = "1.6.3";
       sha256 = "1pmsby29abn485fvnymsgipvb3p1ch9c591xj5ncszkf0ivjiiin";
       libraryHaskellDepends = [
         asn1-encoding asn1-parse asn1-types base bytestring containers
         cryptonite hourglass memory mtl pem
       ];
       testHaskellDepends = [
         asn1-types base bytestring cryptonite hourglass mtl tasty
         tasty-quickcheck
       ];
       homepage = "http://github.com/vincenthz/hs-certificate";
       description = "X509 reader and writer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "x509-store" = callPackage
    ({ mkDerivation, asn1-encoding, asn1-types, base, bytestring
     , containers, cryptonite, mtl, pem, x509
     }:
     mkDerivation {
       pname = "x509-store";
       version = "1.6.1";
       sha256 = "01abx528i9f7djq2772xyna8x2mykrnwqkcfrapcx7z3bhprvml3";
       libraryHaskellDepends = [
         asn1-encoding asn1-types base bytestring containers cryptonite mtl
         pem x509
       ];
       homepage = "http://github.com/vincenthz/hs-certificate";
       description = "X.509 collection accessing and storing methods";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "x509-system" = callPackage
    ({ mkDerivation, base, bytestring, containers, directory, filepath
     , mtl, pem, process, x509, x509-store
     }:
     mkDerivation {
       pname = "x509-system";
       version = "1.6.3";
       sha256 = "1q7nd1d57xvfk2ahxyipfkdhdsz21sbk5r5dgg7jysdzy4ypq8r4";
       libraryHaskellDepends = [
         base bytestring containers directory filepath mtl pem process x509
         x509-store
       ];
       homepage = "http://github.com/vincenthz/hs-certificate";
       description = "Handle per-operating-system X.509 accessors and storage";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "x509-validation" = callPackage
    ({ mkDerivation, asn1-encoding, asn1-types, base, byteable
     , bytestring, containers, cryptonite, data-default-class, hourglass
     , memory, mtl, pem, x509, x509-store
     }:
     mkDerivation {
       pname = "x509-validation";
       version = "1.6.3";
       sha256 = "1qr1v561hdlhjgqjv9pj9mbk0q1xf2mr1j67ghy93nlxxyzd7dw0";
       libraryHaskellDepends = [
         asn1-encoding asn1-types base byteable bytestring containers
         cryptonite data-default-class hourglass memory mtl pem x509
         x509-store
       ];
       homepage = "http://github.com/vincenthz/hs-certificate";
       description = "X.509 Certificate and CRL validation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "xdg-basedir" = callPackage
    ({ mkDerivation, base, directory, filepath }:
     mkDerivation {
       pname = "xdg-basedir";
       version = "0.2.2";
       sha256 = "0azlzaxp2dn4l1nr7shsxah2magk1szf6fx0mv75az00qsjw6qg4";
       libraryHaskellDepends = [ base directory filepath ];
       homepage = "http://github.com/willdonnelly/xdg-basedir";
       description = "A basic implementation of the XDG Base Directory specification";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "xenstore" = callPackage
    ({ mkDerivation, base, bytestring, cereal, mtl, network }:
     mkDerivation {
       pname = "xenstore";
       version = "0.1.1";
       sha256 = "0x788lpkkxg7ds1bgnw0kvkf6pkfbknn7jy0njhz85k7rv4kidf2";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base bytestring cereal mtl network ];
       description = "Xenstore client access";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "xformat" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "xformat";
       version = "0.1.2.1";
       sha256 = "1q2wm0wffvppbv5rd16z367yfkx2sq7j0i5dkfwpawf859c9pz7x";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base ];
       homepage = "http://github.com/spl/xformat";
       description = "Extensible, type-safe formatting with scanf- and printf-like functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "xhtml" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "xhtml";
       version = "3000.2.1";
       sha256 = "1n6wgzxbj8xf0wf1il827qidphnffb5vzhwzqlxhh70c2y10f0ik";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/haskell/xhtml";
       description = "An XHTML combinator library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "xlsior" = callPackage
    ({ mkDerivation, attoparsec, base, blaze-markup, bytestring
     , conduit, conduit-extra, data-default, exceptions, mtl, resourcet
     , scientific, text, time, time-locale-compat, vector, xml-conduit
     , xml-types, zip-archive
     }:
     mkDerivation {
       pname = "xlsior";
       version = "0.1.0.1";
       sha256 = "0dkb3dkc2srvc1951hv6m69z3d7xprsaj7lsdkj9npykqpv6nkgk";
       libraryHaskellDepends = [
         attoparsec base blaze-markup bytestring conduit conduit-extra
         data-default exceptions mtl resourcet scientific text time
         time-locale-compat vector xml-conduit xml-types zip-archive
       ];
       testHaskellDepends = [
         base blaze-markup bytestring text time time-locale-compat
         zip-archive
       ];
       doCheck = false;
       description = "Streaming Excel file generation and parsing";
       license = stdenv.lib.licenses.mit;
     }) {};
  "xlsx" = callPackage
    ({ mkDerivation, base, binary-search, bytestring, conduit
     , containers, data-default, digest, HUnit, lens, mtl, old-locale
     , smallcheck, tasty, tasty-hunit, tasty-smallcheck, text, time
     , transformers, utf8-string, vector, xml-conduit, xml-types
     , zip-archive, zlib
     }:
     mkDerivation {
       pname = "xlsx";
       version = "0.2.1";
       sha256 = "0y3ayw5i9r68414gpn3gah83dkgvd2k41cv5sa34xp0q85jyf9jh";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base binary-search bytestring conduit containers data-default
         digest lens mtl old-locale text time transformers utf8-string
         vector xml-conduit xml-types zip-archive zlib
       ];
       executableHaskellDepends = [
         base binary-search bytestring conduit containers data-default
         digest lens old-locale text time transformers utf8-string vector
         xml-conduit xml-types zip-archive zlib
       ];
       testHaskellDepends = [
         base bytestring containers HUnit lens smallcheck tasty tasty-hunit
         tasty-smallcheck time vector xml-conduit
       ];
       homepage = "https://github.com/qrilka/xlsx";
       description = "Simple and incomplete Excel file parser/writer";
       license = stdenv.lib.licenses.mit;
     }) {};
  "xml" = callPackage
    ({ mkDerivation, base, bytestring, text }:
     mkDerivation {
       pname = "xml";
       version = "1.3.14";
       sha256 = "0g814lj7vaxvib2g3r734221k80k7ap9czv9hinifn8syals3l9j";
       libraryHaskellDepends = [ base bytestring text ];
       homepage = "http://code.galois.com";
       description = "A simple XML library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "xml-conduit" = callPackage
    ({ mkDerivation, attoparsec, base, blaze-builder, blaze-html
     , blaze-markup, bytestring, conduit, conduit-extra, containers
     , data-default, deepseq, hspec, HUnit, monad-control, resourcet
     , text, transformers, xml-types
     }:
     mkDerivation {
       pname = "xml-conduit";
       version = "1.3.4";
       sha256 = "0vgl2l9f0n7s026n67ln4w23axpm7v6jwxbfci7sg1a3dmlss4qn";
       revision = "1";
       editedCabalFile = "0l46mdnvyw1814wdcbs0g5hr4xnzx03p171kjxac8ha7v0nnz1mj";
       libraryHaskellDepends = [
         attoparsec base blaze-builder blaze-html blaze-markup bytestring
         conduit conduit-extra containers data-default deepseq monad-control
         resourcet text transformers xml-types
       ];
       testHaskellDepends = [
         base blaze-markup bytestring conduit containers hspec HUnit
         resourcet text transformers xml-types
       ];
       homepage = "http://github.com/snoyberg/xml";
       description = "Pure-Haskell utilities for dealing with XML with the conduit package";
       license = stdenv.lib.licenses.mit;
     }) {};
  "xml-conduit-parse" = callPackage
    ({ mkDerivation, base, conduit, conduit-parse, containers
     , data-default, exceptions, hlint, parsers, resourcet, tasty
     , tasty-hunit, text, xml-conduit, xml-types
     }:
     mkDerivation {
       pname = "xml-conduit-parse";
       version = "0.3.1.0";
       sha256 = "1mbjqmp9bib6m49y3lrfpspc05ihjddj10lqz30nq89ys36sma32";
       libraryHaskellDepends = [
         base conduit conduit-parse containers exceptions parsers text
         xml-conduit xml-types
       ];
       testHaskellDepends = [
         base conduit conduit-parse data-default hlint parsers resourcet
         tasty tasty-hunit
       ];
       homepage = "https://github.com/k0ral/xml-conduit-parse";
       description = "Streaming XML parser based on conduits";
       license = "unknown";
     }) {};
  "xml-conduit-writer" = callPackage
    ({ mkDerivation, base, containers, dlist, mtl, text, xml-conduit
     , xml-types
     }:
     mkDerivation {
       pname = "xml-conduit-writer";
       version = "0.1.1.1";
       sha256 = "1ibiqxjr63gb3v0h9fdfzm205sqjixb5vm5y6413yn4scbf7qm2b";
       libraryHaskellDepends = [
         base containers dlist mtl text xml-conduit xml-types
       ];
       testHaskellDepends = [ base text ];
       homepage = "https://bitbucket.org/dpwiz/xml-conduit-writer";
       description = "Warm and fuzzy creation of XML documents";
       license = stdenv.lib.licenses.mit;
     }) {};
  "xml-hamlet" = callPackage
    ({ mkDerivation, base, containers, hspec, HUnit, parsec
     , shakespeare, template-haskell, text, xml-conduit
     }:
     mkDerivation {
       pname = "xml-hamlet";
       version = "0.4.0.11";
       sha256 = "128ypil2c86zpkivrla031hn4rmhbpisy4zj0xmff473hz9qln9x";
       libraryHaskellDepends = [
         base containers parsec shakespeare template-haskell text
         xml-conduit
       ];
       testHaskellDepends = [
         base containers hspec HUnit parsec shakespeare template-haskell
         text xml-conduit
       ];
       homepage = "http://www.yesodweb.com/";
       description = "Hamlet-style quasiquoter for XML content";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "xml-lens" = callPackage
    ({ mkDerivation, base, case-insensitive, containers, lens, text
     , xml-conduit
     }:
     mkDerivation {
       pname = "xml-lens";
       version = "0.1.6.3";
       sha256 = "1s5ivi3caz56g5yyg3pharshs3wcygcssjx1sm9aw4mv3ylz3msd";
       revision = "1";
       editedCabalFile = "1fbk4wv7zr10wsh8a0svd799im64fybnlb09rjpfl2pvb6i6h1qs";
       libraryHaskellDepends = [
         base case-insensitive containers lens text xml-conduit
       ];
       homepage = "https://github.com/fumieval/xml-lens";
       description = "Lenses, traversals, and prisms for xml-conduit";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "xml-to-json" = callPackage
    ({ mkDerivation, aeson, base, bytestring, containers, curl
     , hashable, hxt, hxt-curl, hxt-expat, hxt-tagsoup, regex-posix
     , tagsoup, text, unordered-containers, vector
     }:
     mkDerivation {
       pname = "xml-to-json";
       version = "2.0.1";
       sha256 = "0brfdlarr4yyfsfawkfjdbk4z3lvi9ihkhvqh5ws2ll0h80ja6md";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base bytestring containers curl hashable hxt hxt-curl
         hxt-expat hxt-tagsoup regex-posix tagsoup text unordered-containers
         vector
       ];
       executableHaskellDepends = [ base ];
       homepage = "https://github.com/sinelaw/xml-to-json";
       description = "Library and command line tool for converting XML files to json";
       license = stdenv.lib.licenses.mit;
     }) {};
  "xml-to-json-fast" = callPackage
    ({ mkDerivation, base, directory, process, tagsoup, text }:
     mkDerivation {
       pname = "xml-to-json-fast";
       version = "2.0.0";
       sha256 = "0gsn8wdiwmvr7nvxbfj9vpzlxwdh8m9lprx2hxnkrnslmbhjz1fx";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base tagsoup text ];
       executableHaskellDepends = [ base directory process ];
       homepage = "https://github.com/sinelaw/xml-to-json-fast";
       description = "Fast, light converter of xml to json capable of handling huge xml files";
       license = stdenv.lib.licenses.mit;
     }) {};
  "xml-types" = callPackage
    ({ mkDerivation, base, deepseq, text }:
     mkDerivation {
       pname = "xml-types";
       version = "0.3.6";
       sha256 = "1jgqxsa9p2q3h6nymbfmvhldqrqlwrhrzmwadlyc0li50x0d8dwr";
       libraryHaskellDepends = [ base deepseq text ];
       homepage = "https://john-millikin.com/software/haskell-xml/";
       description = "Basic types for representing XML";
       license = stdenv.lib.licenses.mit;
     }) {};
  "xmlgen" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring, containers
     , criterion, filepath, HUnit, hxt, mtl, process, QuickCheck, text
     , unix
     }:
     mkDerivation {
       pname = "xmlgen";
       version = "0.6.2.1";
       sha256 = "1rmsg9wxs0bsj0xpagxrm3fmlqd63b0dfyc21rx9jj76g9za29wh";
       libraryHaskellDepends = [
         base blaze-builder bytestring containers mtl text
       ];
       testHaskellDepends = [
         base bytestring containers filepath HUnit hxt process QuickCheck
         text unix
       ];
       benchmarkHaskellDepends = [ base bytestring criterion text ];
       doCheck = false;
       description = "Fast XML generation library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "xmlhtml" = callPackage
    ({ mkDerivation, base, blaze-builder, blaze-html, blaze-markup
     , bytestring, containers, parsec, text, unordered-containers
     }:
     mkDerivation {
       pname = "xmlhtml";
       version = "0.2.3.4";
       sha256 = "0cv5jqzbq7mi5lcrnaxr5qaprp8biv1jlyzpjhwnwqzla6fqamfr";
       revision = "1";
       editedCabalFile = "1aa3hi46q1f9il9jyyabl33rny0fl3a5prhj9gm3xl5x3fw7xqqp";
       libraryHaskellDepends = [
         base blaze-builder blaze-html blaze-markup bytestring containers
         parsec text unordered-containers
       ];
       description = "XML parser and renderer with HTML 5 quirks mode";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "xmonad" = callPackage
    ({ mkDerivation, base, containers, data-default, directory
     , extensible-exceptions, filepath, mtl, process, QuickCheck
     , setlocale, unix, utf8-string, X11
     }:
     mkDerivation {
       pname = "xmonad";
       version = "0.12";
       sha256 = "1mzx3p17ppgmi30q3phaj58x6kxn73pbbkn9v9gzgmd8skdlkxp8";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base containers data-default directory extensible-exceptions
         filepath mtl process setlocale unix utf8-string X11
       ];
       executableHaskellDepends = [ base mtl unix X11 ];
       testHaskellDepends = [
         base containers extensible-exceptions QuickCheck X11
       ];
       postInstall = ''
         shopt -s globstar
         mkdir -p $doc/share/man/man1
         mv "$data/"**"/man/"*[0-9] $doc/share/man/man1/
         rm "$data/"**"/man/"*
       '';
       homepage = "http://xmonad.org";
       description = "A tiling window manager";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "xss-sanitize" = callPackage
    ({ mkDerivation, attoparsec, base, containers, css-text, hspec
     , HUnit, network-uri, tagsoup, text, utf8-string
     }:
     mkDerivation {
       pname = "xss-sanitize";
       version = "0.3.5.6";
       sha256 = "1j2qrn2dbfx01m7zyk9ilgnp9zjwq9mk62b0rdal4zkg4vh212h0";
       libraryHaskellDepends = [
         attoparsec base containers css-text network-uri tagsoup text
         utf8-string
       ];
       testHaskellDepends = [
         attoparsec base containers css-text hspec HUnit network-uri tagsoup
         text utf8-string
       ];
       homepage = "http://github.com/yesodweb/haskell-xss-sanitize";
       description = "sanitize untrusted HTML to prevent XSS attacks";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "yackage" = callPackage
    ({ mkDerivation, base, blaze-builder, blaze-html, bytestring, Cabal
     , cmdargs, conduit, containers, directory, http-conduit, http-types
     , shakespeare, tar, text, transformers, unordered-containers
     , vector, wai, warp, yaml, yesod-core, yesod-form, zlib
     }:
     mkDerivation {
       pname = "yackage";
       version = "0.8.0";
       sha256 = "05900ipzbrysvp6a9s34jrkyssi8yvjn0b261y84rfrxp7imyb5l";
       isLibrary = false;
       isExecutable = true;
       executableHaskellDepends = [
         base blaze-builder blaze-html bytestring Cabal cmdargs conduit
         containers directory http-conduit http-types shakespeare tar text
         transformers unordered-containers vector wai warp yaml yesod-core
         yesod-form zlib
       ];
       doHaddock = false;
       homepage = "http://github.com/snoyberg/yackage";
       description = "Personal Hackage replacement for testing new packages";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "yaml" = callPackage
    ({ mkDerivation, aeson, aeson-qq, attoparsec, base, base-compat
     , bytestring, conduit, containers, directory, enclosed-exceptions
     , filepath, hspec, HUnit, mockery, resourcet, scientific
     , semigroups, text, transformers, unordered-containers, vector
     }:
     mkDerivation {
       pname = "yaml";
       version = "0.8.16";
       sha256 = "0af5hnpvnjz4dgs1bpw862929gjk3xnncn0g7nabmf742vfx72nn";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson attoparsec base bytestring conduit containers directory
         enclosed-exceptions filepath resourcet scientific semigroups text
         transformers unordered-containers vector
       ];
       executableHaskellDepends = [ aeson base bytestring ];
       testHaskellDepends = [
         aeson aeson-qq base base-compat bytestring conduit hspec HUnit
         mockery resourcet text transformers unordered-containers vector
       ];
       homepage = "http://github.com/snoyberg/yaml/";
       description = "Support for parsing and rendering YAML documents";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "yaml-light" = callPackage
    ({ mkDerivation, base, bytestring, containers, HsSyck }:
     mkDerivation {
       pname = "yaml-light";
       version = "0.1.4";
       sha256 = "05pxkqp91l275n48p1aqijzh34vvzi7cx2nls879b95fz2dr8lhk";
       libraryHaskellDepends = [ base bytestring containers HsSyck ];
       description = "A light-weight wrapper with utility functions around HsSyck";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "yes-precure5-command" = callPackage
    ({ mkDerivation, base, Cabal, containers, hspec, mtl, parsec
     , QuickCheck, random
     }:
     mkDerivation {
       pname = "yes-precure5-command";
       version = "5.5.2";
       sha256 = "0an5y0gl6n41n4x2r6ic2pfmfq2j85gp3n2v01b17kkp6bx65v8r";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base Cabal containers mtl parsec random
       ];
       executableHaskellDepends = [
         base Cabal containers mtl parsec random
       ];
       testHaskellDepends = [ base containers hspec QuickCheck ];
       homepage = "https://github.com/igrep/yes-precure5-command/";
       description = "Extended yes command to reproduce phrases in Yes! Precure 5";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod" = callPackage
    ({ mkDerivation, aeson, base, blaze-html, blaze-markup, bytestring
     , conduit-extra, data-default, directory, fast-logger
     , monad-control, monad-logger, safe, semigroups, shakespeare
     , streaming-commons, template-haskell, text, transformers, unix
     , unordered-containers, wai, wai-extra, wai-logger, warp, yaml
     , yesod-auth, yesod-core, yesod-form, yesod-persistent
     }:
     mkDerivation {
       pname = "yesod";
       version = "1.4.2";
       sha256 = "0mspyklwbb10i3dpfd0pxdxr0scmwygb6q8jf8ixwm7ri9h3xlfn";
       libraryHaskellDepends = [
         aeson base blaze-html blaze-markup bytestring conduit-extra
         data-default directory fast-logger monad-control monad-logger safe
         semigroups shakespeare streaming-commons template-haskell text
         transformers unix unordered-containers wai wai-extra wai-logger
         warp yaml yesod-auth yesod-core yesod-form yesod-persistent
       ];
       homepage = "http://www.yesodweb.com/";
       description = "Creation of type-safe, RESTful web applications";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod-auth" = callPackage
    ({ mkDerivation, aeson, authenticate, base, base16-bytestring
     , base64-bytestring, binary, blaze-builder, blaze-html
     , blaze-markup, byteable, bytestring, conduit, conduit-extra
     , containers, cryptohash, data-default, email-validate, file-embed
     , http-client, http-conduit, http-types, lifted-base, mime-mail
     , network-uri, nonce, persistent, persistent-template, random
     , resourcet, safe, shakespeare, template-haskell, text, time
     , transformers, unordered-containers, wai, yesod-core, yesod-form
     , yesod-persistent
     }:
     mkDerivation {
       pname = "yesod-auth";
       version = "1.4.12";
       sha256 = "19wz5mf1835ba17b8qsrax18sfks6x5fda2hpbc1yngf13fggfni";
       libraryHaskellDepends = [
         aeson authenticate base base16-bytestring base64-bytestring binary
         blaze-builder blaze-html blaze-markup byteable bytestring conduit
         conduit-extra containers cryptohash data-default email-validate
         file-embed http-client http-conduit http-types lifted-base
         mime-mail network-uri nonce persistent persistent-template random
         resourcet safe shakespeare template-haskell text time transformers
         unordered-containers wai yesod-core yesod-form yesod-persistent
       ];
       homepage = "http://www.yesodweb.com/";
       description = "Authentication for Yesod";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod-auth-account" = callPackage
    ({ mkDerivation, base, blaze-html, bytestring, hspec, monad-logger
     , mtl, nonce, persistent, persistent-sqlite, pwstore-fast
     , resourcet, text, xml-conduit, yesod, yesod-auth, yesod-core
     , yesod-form, yesod-persistent, yesod-test
     }:
     mkDerivation {
       pname = "yesod-auth-account";
       version = "1.4.1";
       sha256 = "18bi75kx89gfzh7vi5p8pcqwip1qfpkab415bmn6pcqrlh3jd90i";
       libraryHaskellDepends = [
         base blaze-html bytestring mtl nonce persistent pwstore-fast text
         yesod-auth yesod-core yesod-form yesod-persistent
       ];
       testHaskellDepends = [
         base bytestring hspec monad-logger mtl persistent-sqlite resourcet
         text xml-conduit yesod yesod-auth yesod-test
       ];
       homepage = "https://bitbucket.org/wuzzeb/yesod-auth-account";
       description = "An account authentication plugin for Yesod";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod-auth-account-fork" = callPackage
    ({ mkDerivation, aeson, base, blaze-html, bytestring
     , email-validate, hspec, http-types, monad-logger, mtl, nonce
     , persistent, persistent-sqlite, pwstore-fast, random, resourcet
     , tagged, text, xml-conduit, yesod, yesod-auth, yesod-core
     , yesod-form, yesod-persistent, yesod-test
     }:
     mkDerivation {
       pname = "yesod-auth-account-fork";
       version = "2.0.3";
       sha256 = "0l6rps340fcz4pql2qvj4220hqmxcwjar517hbdavi17swv3cnw7";
       libraryHaskellDepends = [
         aeson base blaze-html bytestring email-validate http-types mtl
         nonce persistent pwstore-fast random tagged text yesod-auth
         yesod-core yesod-form yesod-persistent
       ];
       testHaskellDepends = [
         base bytestring hspec monad-logger mtl persistent-sqlite resourcet
         text xml-conduit yesod yesod-auth yesod-test
       ];
       homepage = "https://github.com/meteficha/yesod-auth-account-fork";
       description = "An account authentication plugin for Yesod";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod-auth-basic" = callPackage
    ({ mkDerivation, base, base64-bytestring, bytestring, exceptions
     , hlint, hspec, text, wai, word8, yesod, yesod-test
     }:
     mkDerivation {
       pname = "yesod-auth-basic";
       version = "0.1.0.2";
       sha256 = "0b4vyf731wb7idmbqz7n8zm4p7i7y66x94ph7kaxv1jvq05k7bxa";
       libraryHaskellDepends = [
         base base64-bytestring bytestring exceptions text wai word8 yesod
       ];
       testHaskellDepends = [ base hlint hspec text yesod yesod-test ];
       description = "Yesod Middleware for HTTP Basic Authentication";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "yesod-auth-deskcom" = callPackage
    ({ mkDerivation, aeson, base, base64-bytestring, byteable
     , bytestring, cipher-aes, cprng-aes, crypto-api, crypto-random
     , cryptohash, data-default, http-conduit, http-types
     , template-haskell, text, time, transformers, yesod-auth
     , yesod-core
     }:
     mkDerivation {
       pname = "yesod-auth-deskcom";
       version = "1.4.0";
       sha256 = "17lpkwrfc10rdmvkjg6qmbi7gysjjhqyh7n5d1mxgxhzxzqbi06w";
       libraryHaskellDepends = [
         aeson base base64-bytestring byteable bytestring cipher-aes
         cprng-aes crypto-api crypto-random cryptohash data-default
         http-conduit http-types template-haskell text time transformers
         yesod-auth yesod-core
       ];
       homepage = "https://github.com/prowdsponsor/yesod-auth-deskcom";
       description = "Desk.com remote authentication support for Yesod apps.";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "yesod-auth-fb" = callPackage
    ({ mkDerivation, aeson, base, bytestring, conduit, fb, http-conduit
     , lifted-base, shakespeare, text, time, transformers, wai
     , yesod-auth, yesod-core, yesod-fb
     }:
     mkDerivation {
       pname = "yesod-auth-fb";
       version = "1.7";
       sha256 = "1kp4vka9sjij8zyp15vj1jkaqwgy483q2gjb5wmhlqwcyp843h02";
       libraryHaskellDepends = [
         aeson base bytestring conduit fb http-conduit lifted-base
         shakespeare text time transformers wai yesod-auth yesod-core
         yesod-fb
       ];
       homepage = "https://github.com/prowdsponsor/yesod-auth-fb";
       description = "Authentication backend for Yesod using Facebook";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "yesod-auth-hashdb" = callPackage
    ({ mkDerivation, base, bytestring, cryptohash, hspec, persistent
     , pwstore-fast, text, yesod-auth, yesod-core, yesod-form
     , yesod-persistent
     }:
     mkDerivation {
       pname = "yesod-auth-hashdb";
       version = "1.4.2.2";
       sha256 = "0s2qmpn4iwzdpps7yqcwb63cp8v1za9fp4amg0qc6b0pllzr616r";
       libraryHaskellDepends = [
         base bytestring cryptohash persistent pwstore-fast text yesod-auth
         yesod-core yesod-form yesod-persistent
       ];
       testHaskellDepends = [ base hspec text ];
       homepage = "https://github.com/paul-rouse/yesod-auth-hashdb";
       description = "Authentication plugin for Yesod";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod-auth-oauth2" = callPackage
    ({ mkDerivation, aeson, authenticate, base, bytestring, containers
     , hoauth2, hspec, http-client, http-conduit, http-types
     , lifted-base, load-env, network-uri, random, text, transformers
     , vector, warp, yesod, yesod-auth, yesod-core, yesod-form
     }:
     mkDerivation {
       pname = "yesod-auth-oauth2";
       version = "0.1.7";
       sha256 = "1m5ph81knfw5jkzmx2lqk7nghi13iakcr6p6xbr5bfam3xqbqbi7";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson authenticate base bytestring hoauth2 http-client http-conduit
         http-types lifted-base network-uri random text transformers vector
         yesod-auth yesod-core yesod-form
       ];
       executableHaskellDepends = [
         base containers http-conduit load-env text warp yesod yesod-auth
       ];
       testHaskellDepends = [ base hspec ];
       homepage = "http://github.com/thoughtbot/yesod-auth-oauth2";
       description = "OAuth 2.0 authentication plugins";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "yesod-bin" = callPackage
    ({ mkDerivation, async, attoparsec, base, base64-bytestring
     , blaze-builder, bytestring, Cabal, conduit, conduit-extra
     , containers, data-default-class, deepseq, directory, file-embed
     , filepath, fsnotify, ghc, ghc-paths, http-client, http-conduit
     , http-reverse-proxy, http-types, lifted-base, network
     , optparse-applicative, parsec, process, project-template
     , resourcet, shakespeare, split, streaming-commons, tar
     , template-haskell, text, time, transformers, transformers-compat
     , unix-compat, unordered-containers, wai, wai-extra, warp, warp-tls
     , yaml, zlib
     }:
     mkDerivation {
       pname = "yesod-bin";
       version = "1.4.17.1";
       sha256 = "1s1fg9vp1g0aa1nd71pws6j8syqdcwvya72d9bh01p5ay3554w0d";
       isLibrary = false;
       isExecutable = true;
       enableSeparateDataOutput = true;
       executableHaskellDepends = [
         async attoparsec base base64-bytestring blaze-builder bytestring
         Cabal conduit conduit-extra containers data-default-class deepseq
         directory file-embed filepath fsnotify ghc ghc-paths http-client
         http-conduit http-reverse-proxy http-types lifted-base network
         optparse-applicative parsec process project-template resourcet
         shakespeare split streaming-commons tar template-haskell text time
         transformers transformers-compat unix-compat unordered-containers
         wai wai-extra warp warp-tls yaml zlib
       ];
       doHaddock = false;
       homepage = "http://www.yesodweb.com/";
       description = "The yesod helper executable";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod-core" = callPackage
    ({ mkDerivation, aeson, async, auto-update, base, blaze-builder
     , blaze-html, blaze-markup, byteable, bytestring, case-insensitive
     , cereal, clientsession, conduit, conduit-extra, containers, cookie
     , criterion, data-default, deepseq, directory, exceptions
     , fast-logger, hspec, hspec-expectations, http-types, HUnit
     , lifted-base, monad-control, monad-logger, mtl, mwc-random
     , network, old-locale, parsec, path-pieces, primitive, QuickCheck
     , random, resourcet, safe, semigroups, shakespeare
     , streaming-commons, template-haskell, text, time, transformers
     , transformers-base, unix-compat, unordered-containers, vector, wai
     , wai-extra, wai-logger, warp, word8
     }:
     mkDerivation {
       pname = "yesod-core";
       version = "1.4.19";
       sha256 = "1vbdyxghv7xj4k23apkgrrbc6flm5rbmy0vnnhhb089mf3gw29c4";
       revision = "1";
       editedCabalFile = "1089m95fc8z84d0c1vg21didgdz9r228vfm1xh9j84lpb7iq4lgc";
       libraryHaskellDepends = [
         aeson auto-update base blaze-builder blaze-html blaze-markup
         byteable bytestring case-insensitive cereal clientsession conduit
         conduit-extra containers cookie data-default deepseq directory
         exceptions fast-logger http-types lifted-base monad-control
         monad-logger mtl mwc-random old-locale parsec path-pieces primitive
         random resourcet safe semigroups shakespeare template-haskell text
         time transformers transformers-base unix-compat
         unordered-containers vector wai wai-extra wai-logger warp word8
       ];
       testHaskellDepends = [
         async base blaze-builder bytestring clientsession conduit
         conduit-extra containers cookie hspec hspec-expectations http-types
         HUnit lifted-base mwc-random network path-pieces QuickCheck random
         resourcet shakespeare streaming-commons template-haskell text
         transformers wai wai-extra
       ];
       benchmarkHaskellDepends = [
         base blaze-html bytestring criterion text transformers
       ];
       homepage = "http://www.yesodweb.com/";
       description = "Creation of type-safe, RESTful web applications";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod-default" = callPackage
    ({ mkDerivation, base, yesod-core }:
     mkDerivation {
       pname = "yesod-default";
       version = "1.2.0";
       sha256 = "15nsknnxnfbkpg4pswxcpgfb2y0hz0xxj56jknd93hcm7aay36pk";
       libraryHaskellDepends = [ base yesod-core ];
       homepage = "http://www.yesodweb.com/";
       description = "Default config and main functions for your yesod application (deprecated)";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod-eventsource" = callPackage
    ({ mkDerivation, base, blaze-builder, conduit, transformers, wai
     , wai-eventsource, wai-extra, yesod-core
     }:
     mkDerivation {
       pname = "yesod-eventsource";
       version = "1.4.0.1";
       sha256 = "0j2x2zfr1s5a8m22kf27r6bdw041vmgf9b4v2ylc89n4m0f0dv55";
       libraryHaskellDepends = [
         base blaze-builder conduit transformers wai wai-eventsource
         wai-extra yesod-core
       ];
       homepage = "http://www.yesodweb.com/";
       description = "Server-sent events support for Yesod apps";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod-fay" = callPackage
    ({ mkDerivation, aeson, base, bytestring, data-default, directory
     , fay, fay-dom, filepath, monad-loops, process, pureMD5
     , shakespeare, template-haskell, text, transformers, utf8-string
     , yesod-core, yesod-form, yesod-static
     }:
     mkDerivation {
       pname = "yesod-fay";
       version = "0.8.0";
       sha256 = "0inx11w4wdgnbxqghm9738qs19519dcdgyjmm3aah12wzv4i68gf";
       libraryHaskellDepends = [
         aeson base bytestring data-default directory fay fay-dom filepath
         monad-loops process pureMD5 shakespeare template-haskell text
         transformers utf8-string yesod-core yesod-form yesod-static
       ];
       homepage = "https://github.com/fpco/yesod-fay";
       description = "Utilities for using the Fay Haskell-to-JS compiler with Yesod";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod-fb" = callPackage
    ({ mkDerivation, aeson, base, bytestring, conduit, crypto-api, fb
     , http-conduit, text, wai, yesod-core
     }:
     mkDerivation {
       pname = "yesod-fb";
       version = "0.3.4";
       sha256 = "09cymp9y21vawbgr6gcj41s5xkq6j22mvk0vgl3pnyq382j33rmp";
       libraryHaskellDepends = [
         aeson base bytestring conduit crypto-api fb http-conduit text wai
         yesod-core
       ];
       homepage = "https://github.com/prowdsponsor/yesod-fb";
       description = "Useful glue functions between the fb library and Yesod";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "yesod-form" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, blaze-builder, blaze-html
     , blaze-markup, byteable, bytestring, containers, data-default
     , email-validate, hspec, network-uri, persistent, resourcet
     , semigroups, shakespeare, template-haskell, text, time
     , transformers, wai, xss-sanitize, yesod-core, yesod-persistent
     }:
     mkDerivation {
       pname = "yesod-form";
       version = "1.4.6";
       sha256 = "0rhfnlcdh9g3nb239lbz5xg69inmn6v5l6ykbgy2mf861y7ga80s";
       libraryHaskellDepends = [
         aeson attoparsec base blaze-builder blaze-html blaze-markup
         byteable bytestring containers data-default email-validate
         network-uri persistent resourcet semigroups shakespeare
         template-haskell text time transformers wai xss-sanitize yesod-core
         yesod-persistent
       ];
       testHaskellDepends = [ base hspec text time ];
       homepage = "http://www.yesodweb.com/";
       description = "Form handling support for Yesod Web Framework";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod-gitrepo" = callPackage
    ({ mkDerivation, base, directory, enclosed-exceptions, http-types
     , lifted-base, process, temporary, text, wai, yesod-core
     }:
     mkDerivation {
       pname = "yesod-gitrepo";
       version = "0.2.1.0";
       sha256 = "1v47d6gvw3d19mqip36y54c4d84f48jgybdwgdl8r20zfwvhyvkf";
       libraryHaskellDepends = [
         base directory enclosed-exceptions http-types lifted-base process
         temporary text wai yesod-core
       ];
       homepage = "https://github.com/snoyberg/yesod-gitrepo";
       description = "Host content provided by a Git repo";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod-gitrev" = callPackage
    ({ mkDerivation, aeson, base, gitrev, template-haskell, yesod-core
     }:
     mkDerivation {
       pname = "yesod-gitrev";
       version = "0.1.0.0";
       sha256 = "0jcgc8l2gh6ahxwddra0jyf78bi4rzff9nfi1knjxixfll73rrih";
       libraryHaskellDepends = [
         aeson base gitrev template-haskell yesod-core
       ];
       description = "A subsite for displaying git information";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "yesod-mangopay" = callPackage
    ({ mkDerivation, aeson, base, bytestring, conduit, conduit-extra
     , containers, country-codes, data-default, directory, fast-logger
     , hamlet, hjsmin, http-conduit, http-types, lifted-base, mangopay
     , monad-control, monad-logger, persistent, persistent-postgresql
     , persistent-template, resourcet, shakespeare, template-haskell
     , text, time, wai, wai-extra, wai-logger, warp, yaml, yesod
     , yesod-auth, yesod-core, yesod-form, yesod-persistent
     , yesod-static
     }:
     mkDerivation {
       pname = "yesod-mangopay";
       version = "1.12";
       sha256 = "0m17jch0xqckb7007czzixkfv8c1ymj050xia71a8m0niqg0sg55";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base containers http-conduit http-types lifted-base mangopay
         persistent-template text time yesod yesod-core
       ];
       executableHaskellDepends = [
         aeson base bytestring conduit conduit-extra containers
         country-codes data-default directory fast-logger hamlet hjsmin
         http-conduit lifted-base mangopay monad-control monad-logger
         persistent persistent-postgresql persistent-template resourcet
         shakespeare template-haskell text time wai wai-extra wai-logger
         warp yaml yesod yesod-auth yesod-core yesod-form yesod-persistent
         yesod-static
       ];
       homepage = "https://github.com/prowdsponsor/mangopay";
       description = "Yesod library for MangoPay API access";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "yesod-newsfeed" = callPackage
    ({ mkDerivation, base, blaze-html, blaze-markup, bytestring
     , containers, shakespeare, text, time, xml-conduit, yesod-core
     }:
     mkDerivation {
       pname = "yesod-newsfeed";
       version = "1.5";
       sha256 = "0pfj1q64zvsy6kh65aj7ckfjakf9dbphydw5kjx86isclfx5hn98";
       libraryHaskellDepends = [
         base blaze-html blaze-markup bytestring containers shakespeare text
         time xml-conduit yesod-core
       ];
       homepage = "http://www.yesodweb.com/";
       description = "Helper functions and data types for producing News feeds";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod-persistent" = callPackage
    ({ mkDerivation, base, blaze-builder, conduit, hspec, persistent
     , persistent-sqlite, persistent-template, resource-pool, resourcet
     , text, transformers, wai-extra, yesod-core
     }:
     mkDerivation {
       pname = "yesod-persistent";
       version = "1.4.0.3";
       sha256 = "0prvrz52c2pr4qsanjzndviyq4f6zc49in69xz5153h2vagbfmb4";
       libraryHaskellDepends = [
         base blaze-builder conduit persistent persistent-template
         resource-pool resourcet transformers yesod-core
       ];
       testHaskellDepends = [
         base blaze-builder conduit hspec persistent persistent-sqlite text
         wai-extra yesod-core
       ];
       homepage = "http://www.yesodweb.com/";
       description = "Some helpers for using Persistent from Yesod";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod-sitemap" = callPackage
    ({ mkDerivation, base, conduit, containers, data-default, text
     , time, xml-conduit, xml-types, yesod-core
     }:
     mkDerivation {
       pname = "yesod-sitemap";
       version = "1.4.0.1";
       sha256 = "0ri67r3yjngn4m2lj071n2v3r9w7pvsl24rayf41k7w9j3ylk100";
       libraryHaskellDepends = [
         base conduit containers data-default text time xml-conduit
         xml-types yesod-core
       ];
       homepage = "http://www.yesodweb.com/";
       description = "Generate XML sitemaps";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod-static" = callPackage
    ({ mkDerivation, async, attoparsec, base, base64-bytestring
     , blaze-builder, byteable, bytestring, conduit, conduit-extra
     , containers, cryptohash, cryptohash-conduit, css-text
     , data-default, directory, file-embed, filepath, hashable, hjsmin
     , hspec, http-types, HUnit, mime-types, old-time, process
     , resourcet, template-haskell, text, transformers, unix-compat
     , unordered-containers, wai, wai-app-static, wai-extra, yesod-core
     , yesod-test
     }:
     mkDerivation {
       pname = "yesod-static";
       version = "1.5.0.3";
       sha256 = "0x6fz0jbxrv8f920kdqrxh4vcfvhlavv8lhkp8x34dpwjcjravx4";
       libraryHaskellDepends = [
         async attoparsec base base64-bytestring blaze-builder byteable
         bytestring conduit conduit-extra containers cryptohash
         cryptohash-conduit css-text data-default directory file-embed
         filepath hashable hjsmin http-types mime-types old-time process
         resourcet template-haskell text transformers unix-compat
         unordered-containers wai wai-app-static yesod-core
       ];
       testHaskellDepends = [
         async base base64-bytestring byteable bytestring conduit
         conduit-extra containers cryptohash cryptohash-conduit data-default
         directory file-embed filepath hjsmin hspec http-types HUnit
         mime-types old-time process resourcet template-haskell text
         transformers unix-compat unordered-containers wai wai-app-static
         wai-extra yesod-core yesod-test
       ];
       homepage = "http://www.yesodweb.com/";
       description = "Static file serving subsite for Yesod Web Framework";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod-static-angular" = callPackage
    ({ mkDerivation, aeson, base, blaze-builder, blaze-markup
     , bytestring, data-default, directory, filepath, hamlet
     , language-javascript, mime-types, shakespeare, template-haskell
     , text, yesod, yesod-core, yesod-static
     }:
     mkDerivation {
       pname = "yesod-static-angular";
       version = "0.1.7";
       sha256 = "0wry40x6b809gw16vla38jdhdwwqgy7y03f2y0iwwpacb9nqq9vk";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base blaze-builder blaze-markup bytestring data-default
         directory filepath hamlet language-javascript mime-types
         shakespeare template-haskell text yesod-core yesod-static
       ];
       executableHaskellDepends = [
         base data-default shakespeare yesod yesod-static
       ];
       doCheck = false;
       homepage = "https://bitbucket.org/wuzzeb/yesod-static-angular";
       description = "Yesod generators for embedding AngularJs code into yesod-static at compile time";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod-table" = callPackage
    ({ mkDerivation, base, bytestring, containers, contravariant, text
     , yesod-core
     }:
     mkDerivation {
       pname = "yesod-table";
       version = "2.0.2";
       sha256 = "0xw83phsf67qqg2f83lkhs7cxg1sj92bmmnsn4jrf31smignp1vq";
       libraryHaskellDepends = [
         base bytestring containers contravariant text yesod-core
       ];
       homepage = "https://github.com/andrewthad/yesod-table";
       description = "HTML tables for Yesod";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod-test" = callPackage
    ({ mkDerivation, attoparsec, base, blaze-builder, blaze-html
     , blaze-markup, bytestring, case-insensitive, containers, cookie
     , hspec, hspec-core, html-conduit, http-types, HUnit, monad-control
     , network, persistent, text, time, transformers, wai, wai-extra
     , xml-conduit, xml-types, yesod-core, yesod-form
     }:
     mkDerivation {
       pname = "yesod-test";
       version = "1.5.0.1";
       sha256 = "19199ir97f4wpyhv6zvlgab4abbpmsxvkqr6165mz4q1x58zn6cv";
       libraryHaskellDepends = [
         attoparsec base blaze-builder blaze-html blaze-markup bytestring
         case-insensitive containers cookie hspec-core html-conduit
         http-types HUnit monad-control network persistent text time
         transformers wai wai-extra xml-conduit xml-types yesod-core
       ];
       testHaskellDepends = [
         base bytestring containers hspec html-conduit http-types HUnit text
         wai xml-conduit yesod-core yesod-form
       ];
       homepage = "http://www.yesodweb.com";
       description = "integration testing for WAI/Yesod Applications";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yesod-text-markdown" = callPackage
    ({ mkDerivation, aeson, base, markdown, persistent, shakespeare
     , text, yesod-core, yesod-form, yesod-persistent
     }:
     mkDerivation {
       pname = "yesod-text-markdown";
       version = "0.1.8";
       sha256 = "1k48wjnn4vvlh9cvh8p3yanjmr772vqz4jbz9nxk0vv9ab9dns81";
       libraryHaskellDepends = [
         aeson base markdown persistent shakespeare text yesod-core
         yesod-form yesod-persistent
       ];
       description = "Yesod support for Text.Markdown.";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "yesod-websockets" = callPackage
    ({ mkDerivation, async, base, conduit, enclosed-exceptions
     , monad-control, transformers, wai, wai-websockets, websockets
     , yesod-core
     }:
     mkDerivation {
       pname = "yesod-websockets";
       version = "0.2.4";
       sha256 = "1p4sx9cq5df61hcc57s1iarpx5mb4ykbp647f5wjha3y1rgi2rvh";
       libraryHaskellDepends = [
         async base conduit enclosed-exceptions monad-control transformers
         wai wai-websockets websockets yesod-core
       ];
       homepage = "https://github.com/yesodweb/yesod";
       description = "WebSockets support for Yesod";
       license = stdenv.lib.licenses.mit;
     }) {};
  "yi" = callPackage
    ({ mkDerivation, array, base, binary, bytestring, Cabal, containers
     , data-default, directory, dlist, dynamic-state, dyre, exceptions
     , filepath, hashable, hint, HUnit, lens, mtl, old-locale
     , oo-prototypes, parsec, pointedlist, process, QuickCheck, random
     , safe, semigroups, split, stm, tasty, tasty-hunit
     , tasty-quickcheck, template-haskell, text, text-icu, time
     , transformers-base, unix, unix-compat, unordered-containers, vty
     , word-trie, xdg-basedir, yi-language, yi-rope
     }:
     mkDerivation {
       pname = "yi";
       version = "0.12.3";
       sha256 = "1dk2jmxqdk49nv9nd6wx0lw93zw0zm1qc7sql3mkjy7n636sds1c";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         array base binary bytestring Cabal containers data-default
         directory dlist dynamic-state dyre exceptions filepath hashable
         hint lens mtl old-locale oo-prototypes parsec pointedlist process
         QuickCheck random safe semigroups split stm template-haskell text
         text-icu time transformers-base unix unix-compat
         unordered-containers vty word-trie xdg-basedir yi-language yi-rope
       ];
       executableHaskellDepends = [ base ];
       testHaskellDepends = [
         base directory filepath HUnit lens QuickCheck semigroups tasty
         tasty-hunit tasty-quickcheck text yi-language yi-rope
       ];
       homepage = "https://yi-editor.github.io";
       description = "The Haskell-Scriptable Editor";
       license = stdenv.lib.licenses.gpl2;
     }) {};
  "yi-fuzzy-open" = callPackage
    ({ mkDerivation, base, binary, containers, data-default, directory
     , filepath, mtl, text, transformers-base, vector, yi, yi-language
     , yi-rope
     }:
     mkDerivation {
       pname = "yi-fuzzy-open";
       version = "0.1.0.1";
       sha256 = "0amhg04sf2jx39yb44rp5zjinsx4sr0chww4dxqhjxgmc2na7vcj";
       libraryHaskellDepends = [
         base binary containers data-default directory filepath mtl text
         transformers-base vector yi yi-language yi-rope
       ];
       homepage = "https://github.com/yi-editor/yi-fuzzy-open";
       description = "Fuzzy open plugin for Yi";
       license = stdenv.lib.licenses.gpl2;
     }) {};
  "yi-language" = callPackage
    ({ mkDerivation, alex, array, base, binary, containers
     , data-default, filepath, hashable, hspec, lens, oo-prototypes
     , pointedlist, QuickCheck, regex-base, regex-tdfa, template-haskell
     , transformers-base, unordered-containers
     }:
     mkDerivation {
       pname = "yi-language";
       version = "0.2.0";
       sha256 = "1a0lvddn35q9jqr0w7g2m268dy8s9dwsss7sf4460rvkg1xvkvvh";
       libraryHaskellDepends = [
         array base binary containers data-default hashable lens
         oo-prototypes pointedlist regex-base regex-tdfa template-haskell
         transformers-base unordered-containers
       ];
       libraryToolDepends = [ alex ];
       testHaskellDepends = [
         array base binary containers data-default filepath hashable hspec
         lens pointedlist QuickCheck regex-base regex-tdfa template-haskell
         transformers-base unordered-containers
       ];
       homepage = "https://github.com/yi-editor/yi-language";
       description = "Collection of language-related Yi libraries";
       license = stdenv.lib.licenses.gpl2;
     }) {};
  "yi-rope" = callPackage
    ({ mkDerivation, base, binary, bytestring, charsetdetect-ae
     , criterion, data-default, deepseq, fingertree, hspec, QuickCheck
     , quickcheck-instances, text, text-icu
     }:
     mkDerivation {
       pname = "yi-rope";
       version = "0.7.0.1";
       sha256 = "190rb5rbvdzy4d52dj3ih0kwzigh7v0fg412p3848pkv3836vmg0";
       libraryHaskellDepends = [
         base binary bytestring charsetdetect-ae data-default deepseq
         fingertree text text-icu
       ];
       testHaskellDepends = [
         base hspec QuickCheck quickcheck-instances text
       ];
       benchmarkHaskellDepends = [ base criterion deepseq ];
       description = "A rope data structure used by Yi";
       license = stdenv.lib.licenses.gpl2;
     }) {};
  "zero" = callPackage
    ({ mkDerivation, base, semigroups }:
     mkDerivation {
       pname = "zero";
       version = "0.1.3.1";
       sha256 = "0nxqic4qw8ah1vwy4hv8bmbbc8xrlv9g1iwrhrjgmin7906scdzz";
       libraryHaskellDepends = [ base semigroups ];
       homepage = "https://github.com/phaazon/zero";
       description = "Semigroups with absorption";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "zeromq4-haskell" = callPackage
    ({ mkDerivation, async, base, bytestring, containers, exceptions
     , QuickCheck, semigroups, tasty, tasty-hunit, tasty-quickcheck
     , transformers, zeromq
     }:
     mkDerivation {
       pname = "zeromq4-haskell";
       version = "0.6.4";
       sha256 = "0vklwwqg8ivsff1vqc0n2virwg6v4dv47xagcpvarjwwcs63bsml";
       libraryHaskellDepends = [
         async base bytestring containers exceptions semigroups transformers
       ];
       libraryPkgconfigDepends = [ zeromq ];
       testHaskellDepends = [
         async base bytestring QuickCheck tasty tasty-hunit tasty-quickcheck
       ];
       homepage = "http://github.com/twittner/zeromq-haskell/";
       description = "Bindings to ZeroMQ 4.x";
       license = stdenv.lib.licenses.mit;
     }) {inherit (pkgs) zeromq;};
  "zim-parser" = callPackage
    ({ mkDerivation, array, base, binary, binary-conduit, bytestring
     , conduit, conduit-extra, hspec, lzma-conduit, resourcet
     }:
     mkDerivation {
       pname = "zim-parser";
       version = "0.1.0.0";
       sha256 = "0krlib2xcarwg685diggd852szk8slmg4pviabnv4zpbiyblj39d";
       libraryHaskellDepends = [
         array base binary binary-conduit bytestring conduit conduit-extra
         lzma-conduit resourcet
       ];
       testHaskellDepends = [
         array base binary binary-conduit bytestring conduit conduit-extra
         hspec lzma-conduit resourcet
       ];
       homepage = "https://github.com/robbinch/zim-parser#readme";
       description = "Read and parse ZIM files";
       license = stdenv.lib.licenses.gpl3;
     }) {};
  "zip-archive" = callPackage
    ({ mkDerivation, array, base, binary, bytestring, containers
     , digest, directory, filepath, HUnit, mtl, old-time, pretty
     , process, text, time, unix, zip, zlib
     }:
     mkDerivation {
       pname = "zip-archive";
       version = "0.2.3.7";
       sha256 = "169nkxr5zlbymiz1ydlhlqr66vqiycmg85xh559phpkr64w3nqj1";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         array base binary bytestring containers digest directory filepath
         mtl old-time pretty text time unix zlib
       ];
       executableHaskellDepends = [ base bytestring directory ];
       testHaskellDepends = [
         base bytestring directory HUnit old-time process time
       ];
       testToolDepends = [ zip ];
       homepage = "http://github.com/jgm/zip-archive";
       description = "Library for creating and modifying zip archives";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) zip;};
  "zlib" = callPackage
    ({ mkDerivation, base, bytestring, zlib }:
     mkDerivation {
       pname = "zlib";
       version = "0.6.1.1";
       sha256 = "0dd79dxf56d8f6ad9if3j87s9gg7yd17ckypjxwplrbkahlb9xf5";
       revision = "3";
       editedCabalFile = "0ikhn1ixf5xl9crybwqfgp7mqd0qizw99nbqmcb9r7180s6zkzxm";
       libraryHaskellDepends = [ base bytestring ];
       librarySystemDepends = [ zlib ];
       doCheck = false;
       description = "Compression and decompression in the gzip and zlib formats";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) zlib;};
  "zlib-bindings" = callPackage
    ({ mkDerivation, base, bytestring, hspec, QuickCheck, zlib }:
     mkDerivation {
       pname = "zlib-bindings";
       version = "0.1.1.5";
       sha256 = "02ciywlz4wdlymgc3jsnicz9kzvymjw1www2163gxidnz4wb8fy8";
       revision = "2";
       editedCabalFile = "0fq49694gqkab8m0vq4i879blswczwd66n7xh4r4gwiahf0ryvqc";
       libraryHaskellDepends = [ base bytestring zlib ];
       testHaskellDepends = [ base bytestring hspec QuickCheck zlib ];
       homepage = "http://github.com/snapframework/zlib-bindings";
       description = "Low-level bindings to the zlib package";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "zlib-enum" = callPackage
    ({ mkDerivation, base, bytestring, enumerator, transformers
     , zlib-bindings
     }:
     mkDerivation {
       pname = "zlib-enum";
       version = "0.2.3.1";
       sha256 = "1nfczminxafzk69ry1sqkj1ha0jlv3l9ak10yk205snfhpmcjgg4";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring enumerator transformers zlib-bindings
       ];
       homepage = "http://github.com/maltem/zlib-enum";
       description = "Enumerator interface for zlib compression";
       license = stdenv.lib.licenses.mit;
     }) {};
  "zlib-lens" = callPackage
    ({ mkDerivation, base, bytestring, profunctors, zlib }:
     mkDerivation {
       pname = "zlib-lens";
       version = "0.1.2.1";
       sha256 = "1sv6yx7p06zk653d3rmcj0lh2rzwzfi25v9sz9n8kq4r712n79g5";
       libraryHaskellDepends = [ base bytestring profunctors zlib ];
       homepage = "http://lens.github.io/";
       description = "Lenses for zlib";
       license = stdenv.lib.licenses.bsd3;
     }) {};

}
